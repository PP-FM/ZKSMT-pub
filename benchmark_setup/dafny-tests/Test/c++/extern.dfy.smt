(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@T T@U T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U T@U) Bool)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@72 $generated@@79))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@71)) (= ($generated@@1 $generated@@76) 11)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@77) 12)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@80 $generated@@60) 0))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@71)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@74)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 13)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@73 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 15)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@73 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@70)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@70) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@156) 16) (= (type $generated@@151) ($generated@@72 $generated@@156))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@153 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@153 $generated@@157))
))) (= (type $generated@@155) $generated@@70)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@159) $generated@@88)) (and ($generated@@152 $generated@@158) (and (not (= $generated@@159 $generated@@148)) (= ($generated@@153 $generated@@159) $generated@@147)))) ($generated@@154 ($generated@@94 ($generated@@92 $generated@@158 $generated@@159) $generated@@151) $generated@@155))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@158 $generated@@159) $generated@@151))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@160 $generated@@161 ($generated@@86 0)))
 :pattern ( ($generated@@160 $generated@@161 ($generated@@86 0)))
)))
(assert  (and (= ($generated@@1 $generated@@164) 17) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@70) (= (type $generated@@168) $generated@@70)) (= (type $generated@@169) $generated@@164)) ($generated@@160 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@160 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@156)
 :pattern ( ($generated@@171 $generated@@173))
)) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@156)
 :pattern ( ($generated@@172 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@164) (= (type $generated@@176) $generated@@164)) true) (= ($generated@@170 $generated@@175 $generated@@176)  (and (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)) (= ($generated@@172 $generated@@175) ($generated@@172 $generated@@176)))))
 :pattern ( ($generated@@170 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@87 $generated@@156 $generated@@2)) (= (type $generated@@181) $generated@@70)) ($generated@@160 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@160 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@88) (= ($generated@@160 $generated@@182 $generated@@147)  (or (= $generated@@182 $generated@@148) (= ($generated@@153 $generated@@182) $generated@@147))))
 :pattern ( ($generated@@160 $generated@@182 $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 18)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@88 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@73 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@88) (= (type $generated@@233) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@234) ($generated@@72 $generated@@4))) (= (type $generated@@236) $generated@@88)) (= (type $generated@@237) ($generated@@72 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (= (type $generated@@239) $generated@@70))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@88) (= (type $generated@@241) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@240 $generated@@239 $generated@@241) ($generated@@85 $generated@@240 $generated@@147 $generated@@241)))
 :pattern ( ($generated@@85 $generated@@240 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244)) $generated@@164)
 :pattern ( ($generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@70) (= (type $generated@@246) $generated@@70)) (= (type $generated@@247) $generated@@156)) (= (type $generated@@248) $generated@@156)) (= ($generated@@160 ($generated@@242 $generated@@247 $generated@@248) ($generated@@163 $generated@@245 $generated@@246))  (and ($generated@@154 $generated@@247 $generated@@245) ($generated@@154 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@160 ($generated@@242 $generated@@247 $generated@@248) ($generated@@163 $generated@@245 $generated@@246)))
)))
(assert (= ($generated@@80 $generated@@151) 0))
(assert (forall (($generated@@250 T@T) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@72 $generated@@250))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252))
)))
(assert (= ($generated@@249 $generated@@156 $generated@@64 $generated@@69) $generated@@151))
(assert  (not ($generated@@253 $generated@@151)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@164) (= (type $generated@@255) $generated@@164)) (= ($generated@@170 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@170 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@70)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@87 $generated@@156 $generated@@4)) (= (type $generated@@259) $generated@@70)) (= ($generated@@160 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@156) ($generated@@0 ($generated@@92 $generated@@258 $generated@@260))) ($generated@@154 $generated@@260 $generated@@259))
 :pattern ( ($generated@@92 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@160 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@87 $generated@@156 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@160 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@156) ($generated@@0 ($generated@@92 $generated@@263 $generated@@265))) ($generated@@154 $generated@@265 $generated@@264))
 :pattern ( ($generated@@92 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@160 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@70)) (= (type $generated@@273) $generated@@156)) (= (type $generated@@274) $generated@@156)) (= (type $generated@@275) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@275)) (= ($generated@@85 ($generated@@242 $generated@@273 $generated@@274) ($generated@@163 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@85 ($generated@@242 $generated@@273 $generated@@274) ($generated@@163 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@75)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@164) (= ($generated@@162 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@62)))
 :pattern ( ($generated@@162 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@164) ($generated@@162 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@156) (= (type $generated@@281) $generated@@156)) (= $generated@@279 ($generated@@242 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@162 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 19)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert ($generated@@253 $generated@@60))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@156)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@270 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@85 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@270 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@296) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@297) $generated@@156)) (= (type $generated@@298) $generated@@70)) ($generated@@143 $generated@@295 $generated@@296)) ($generated@@270 $generated@@297 $generated@@298 $generated@@295)) ($generated@@270 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@143 $generated@@295 $generated@@296) ($generated@@270 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@300) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@302) $generated@@70)) ($generated@@143 $generated@@299 $generated@@300)) ($generated@@85 $generated@@301 $generated@@302 $generated@@299)) ($generated@@85 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@143 $generated@@299 $generated@@300) ($generated@@85 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@304) $generated@@88)) (=> (and (and ($generated@@152 $generated@@303) (and (not (= $generated@@304 $generated@@148)) (= ($generated@@153 $generated@@304) $generated@@147))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@303 $generated@@304) $generated@@60))) ($generated@@270 ($generated@@94 ($generated@@92 $generated@@303 $generated@@304) $generated@@151) $generated@@155 $generated@@303)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@303 $generated@@304) $generated@@151))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@87 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@90 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@87 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@92 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 20)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@87 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@92 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@92 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 21)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@87 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@348) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@349) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@347 $generated@@348 $generated@@349)) (and ($generated@@143 $generated@@348 $generated@@349) (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@73 (type $generated@@351))))
 (=> (and (and (= (type $generated@@350) $generated@@88) (= (type $generated@@351) ($generated@@72 $generated@@352))) (not ($generated@@253 $generated@@351))) (= ($generated@@94 ($generated@@92 $generated@@348 $generated@@350) $generated@@351) ($generated@@94 ($generated@@92 $generated@@349 $generated@@350) $generated@@351))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@349 $generated@@350) $generated@@351))
))))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@90 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@87 $generated@@354 $generated@@2)) (= ($generated@@178 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@92 $generated@@353 $generated@@355))) (<= ($generated ($generated@@92 $generated@@353 $generated@@355)) ($generated@@305 $generated@@353))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@178 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@156) ($generated@@154 $generated@@359 $generated@@147)) (and (= ($generated@@290 ($generated@@356 $generated@@88 $generated@@359)) $generated@@359) ($generated@@160 ($generated@@356 $generated@@88 $generated@@359) $generated@@147)))
 :pattern ( ($generated@@154 $generated@@359 $generated@@147))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@156) ($generated@@154 $generated@@360 $generated@@239)) (and (= ($generated@@290 ($generated@@356 $generated@@88 $generated@@360)) $generated@@360) ($generated@@160 ($generated@@356 $generated@@88 $generated@@360) $generated@@239)))
 :pattern ( ($generated@@154 $generated@@360 $generated@@239))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@88) (= ($generated@@160 $generated@@361 $generated@@239)  (and ($generated@@160 $generated@@361 $generated@@147) (not (= $generated@@361 $generated@@148)))))
 :pattern ( ($generated@@160 $generated@@361 $generated@@239))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@315 (type $generated@@362))))
(let (($generated@@364 ($generated@@314 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@313 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@312 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@311 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@315 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@87 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@315 (type $generated@@369))))
(let (($generated@@371 ($generated@@314 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@313 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@312 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@92 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@333 (type $generated@@373))))
(let (($generated@@375 ($generated@@332 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@331 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@330 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@329 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@333 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@87 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@333 (type $generated@@380))))
(let (($generated@@382 ($generated@@332 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@331 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@330 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@92 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@87 $generated@@156 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@160 $generated@@384 ($generated@@177 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) (< 0 ($generated ($generated@@92 $generated@@384 $generated@@386)))) ($generated@@154 $generated@@386 $generated@@385))
 :pattern ( ($generated@@92 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@160 $generated@@384 ($generated@@177 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@87 $generated@@156 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@387 ($generated@@256 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@156) ($generated@@0 ($generated@@92 $generated@@387 $generated@@390))) ($generated@@270 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@92 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@85 $generated@@387 ($generated@@256 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@87 $generated@@156 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@391 ($generated@@261 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@156) ($generated@@0 ($generated@@92 $generated@@391 $generated@@394))) ($generated@@270 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@92 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@85 $generated@@391 ($generated@@261 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@92 ($generated@@306 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@92 ($generated@@306 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@87 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@315 (type $generated@@400))))
(let (($generated@@402 ($generated@@314 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@87 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@313 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@92 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@92 ($generated@@311 $generated@@403) ($generated@@171 ($generated@@356 $generated@@164 $generated@@404)))) (= ($generated@@92 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@356 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@356 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@92 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@87 $generated@@156 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@333 (type $generated@@408))))
(let (($generated@@410 ($generated@@332 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@87 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@331 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@156)) (= ($generated@@0 ($generated@@92 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@411) ($generated@@171 ($generated@@356 $generated@@164 $generated@@412)))) (= ($generated@@92 ($generated@@406 $generated@@411) ($generated@@171 ($generated@@356 $generated@@164 $generated@@412))) ($generated@@172 ($generated@@356 $generated@@164 $generated@@412))))))
 :pattern ( ($generated@@92 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@314 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@313 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@92 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@92 ($generated@@311 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@92 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@413) $generated@@417))
 :pattern ( ($generated@@92 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@92 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@332 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@331 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@92 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@92 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@418) $generated@@422))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@92 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@313 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@426) $generated@@430))) (and ($generated@@270 ($generated@@92 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@270 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@92 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@85 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@331 $generated@@156 $generated@@156)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@434) $generated@@438))) (and ($generated@@270 ($generated@@92 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@270 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@85 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@440) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@441) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@439 $generated@@441))) (and ($generated@@143 $generated@@439 $generated@@440) ($generated@@143 $generated@@440 $generated@@441))) ($generated@@143 $generated@@439 $generated@@441))
 :pattern ( ($generated@@143 $generated@@439 $generated@@440) ($generated@@143 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@87 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@333 (type $generated@@444))))
(let (($generated@@446 ($generated@@332 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@331 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@330 $generated@@446 $generated@@445)) (= ($generated@@329 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@329 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@333 (type $generated@@447))))
(let (($generated@@449 ($generated@@332 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@331 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@330 $generated@@449 $generated@@448)) (= ($generated@@377 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@377 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (= ($generated@@405 $generated@@450) ($generated@@442 $generated@@156))))))
 :pattern ( ($generated@@405 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@315 (type $generated@@453))))
(let (($generated@@455 ($generated@@314 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@313 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@312 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@156) (= (type $generated@@457) $generated@@156)) ($generated@@0 ($generated@@92 ($generated@@397 $generated@@453) ($generated@@290 ($generated@@242 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@333 (type $generated@@458))))
(let (($generated@@460 ($generated@@332 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@331 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@330 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@156) (= (type $generated@@462) $generated@@156)) ($generated@@0 ($generated@@92 ($generated@@405 $generated@@458) ($generated@@290 ($generated@@242 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@458))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@76)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@T) ) (!  (=> (and (= (type $generated@@465) $generated@@76) (= (type $generated@@466) $generated@@74)) (and (= ($generated@@463 ($generated@@249 $generated@@467 $generated@@465 $generated@@466)) $generated@@465) (= ($generated@@83 ($generated@@249 $generated@@467 $generated@@465 $generated@@466)) $generated@@466)))
 :pattern ( ($generated@@249 $generated@@467 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@156) ($generated@@154 $generated@@468 $generated@@46)) (and (= ($generated@@290 ($generated@@356 $generated@@2 $generated@@468)) $generated@@468) ($generated@@160 ($generated@@356 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@154 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) ($generated@@154 $generated@@469 $generated@@47)) (and (= ($generated@@290 ($generated@@356 $generated@@3 $generated@@469)) $generated@@469) ($generated@@160 ($generated@@356 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@154 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@156) ($generated@@154 $generated@@470 $generated@@44)) (and (= ($generated@@290 ($generated@@356 $generated@@4 $generated@@470)) $generated@@470) ($generated@@160 ($generated@@356 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@154 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 22))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@156) ($generated@@154 $generated@@472 $generated@@45)) (and (= ($generated@@290 ($generated@@356 $generated@@471 $generated@@472)) $generated@@472) ($generated@@160 ($generated@@356 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@154 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@70) (= ($generated@@154 ($generated@@290 $generated@@473) $generated@@474) ($generated@@160 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@154 ($generated@@290 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@90 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@87 $generated@@476 $generated@@2)) (<= 0 ($generated@@305 $generated@@475))))
 :pattern ( ($generated@@305 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@285 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@284 $generated@@478)) (<= 0 ($generated@@283 $generated@@477))))
 :pattern ( ($generated@@283 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@70)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@70) (= (type $generated@@488) $generated@@70)) (= ($generated@@81 ($generated@@423 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@431 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@431 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@431 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@431 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@81 ($generated@@431 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@156) (= (type $generated@@500) $generated@@156)) (= ($generated@@276 ($generated@@242 $generated@@499 $generated@@500)) $generated@@62))
 :pattern ( ($generated@@242 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@70) (= (type $generated@@504) $generated@@70)) (= ($generated@@501 ($generated@@163 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@163 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@505 ($generated@@163 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@163 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@156) (= (type $generated@@510) $generated@@156)) (= ($generated@@171 ($generated@@242 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@242 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@156) (= (type $generated@@512) $generated@@156)) (= ($generated@@172 ($generated@@242 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@242 $generated@@511 $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@285 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@284 $generated@@156)) (= (type $generated@@520) $generated@@70)) (= (type $generated@@521) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@283 $generated@@519))) ($generated@@270 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@85 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@86 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@86 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@525 ($generated@@256 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@256 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@81 ($generated@@256 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@529 ($generated@@261 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@261 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@81 ($generated@@261 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@533 ($generated@@177 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@177 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@81 ($generated@@177 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@70)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@81 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@356 $generated@@542 ($generated@@290 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@290 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@313 $generated@@156 $generated@@156)) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) (= ($generated@@160 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@156) ($generated@@0 ($generated@@92 ($generated@@311 $generated@@543) $generated@@546))) (and ($generated@@154 ($generated@@92 ($generated@@398 $generated@@543) $generated@@546) $generated@@545) ($generated@@154 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@92 ($generated@@398 $generated@@543) $generated@@546))
 :pattern ( ($generated@@92 ($generated@@311 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@160 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@331 $generated@@156 $generated@@156)) (= (type $generated@@548) $generated@@70)) (= (type $generated@@549) $generated@@70)) (= ($generated@@160 $generated@@547 ($generated@@431 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@156) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@547) $generated@@550))) (and ($generated@@154 ($generated@@92 ($generated@@406 $generated@@547) $generated@@550) $generated@@549) ($generated@@154 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@92 ($generated@@406 $generated@@547) $generated@@550))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@160 $generated@@547 ($generated@@431 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@156)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@242 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@242 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@156)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@242 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@242 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@156) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@70)) ($generated@@154 $generated@@557 ($generated@@423 $generated@@558 $generated@@559))) (and (= ($generated@@290 ($generated@@356 ($generated@@313 $generated@@156 $generated@@156) $generated@@557)) $generated@@557) ($generated@@160 ($generated@@356 ($generated@@313 $generated@@156 $generated@@156) $generated@@557) ($generated@@423 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@154 $generated@@557 ($generated@@423 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@156) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@154 $generated@@560 ($generated@@431 $generated@@561 $generated@@562))) (and (= ($generated@@290 ($generated@@356 ($generated@@331 $generated@@156 $generated@@156) $generated@@560)) $generated@@560) ($generated@@160 ($generated@@356 ($generated@@331 $generated@@156 $generated@@156) $generated@@560) ($generated@@431 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@154 $generated@@560 ($generated@@431 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@156)) ($generated@@154 $generated@@565 ($generated@@163 $generated@@563 $generated@@564))) (and (= ($generated@@290 ($generated@@356 $generated@@164 $generated@@565)) $generated@@565) ($generated@@160 ($generated@@356 $generated@@164 $generated@@565) ($generated@@163 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@154 $generated@@565 ($generated@@163 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@92 ($generated@@442 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@92 ($generated@@442 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@77)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@70) (= (type $generated@@571) $generated@@70)) (and (= ($generated@@81 ($generated@@163 $generated@@570 $generated@@571)) $generated@@63) (= ($generated@@568 ($generated@@163 $generated@@570 $generated@@571)) $generated@@67)))
 :pattern ( ($generated@@163 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@164) (= ($generated@@551 ($generated@@290 $generated@@572)) ($generated@@552 $generated@@572)))
 :pattern ( ($generated@@551 ($generated@@290 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@156) ($generated@@154 $generated@@573 ($generated@@86 0))) (and (= ($generated@@290 ($generated@@356 $generated@@2 $generated@@573)) $generated@@573) ($generated@@160 ($generated@@356 ($generated@@87 $generated@@156 $generated@@4) $generated@@573) ($generated@@86 0))))
 :pattern ( ($generated@@154 $generated@@573 ($generated@@86 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@156) (= (type $generated@@575) $generated@@70)) ($generated@@154 $generated@@574 ($generated@@256 $generated@@575))) (and (= ($generated@@290 ($generated@@356 ($generated@@87 $generated@@156 $generated@@4) $generated@@574)) $generated@@574) ($generated@@160 ($generated@@356 ($generated@@87 $generated@@156 $generated@@4) $generated@@574) ($generated@@256 $generated@@575))))
 :pattern ( ($generated@@154 $generated@@574 ($generated@@256 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@156) (= (type $generated@@577) $generated@@70)) ($generated@@154 $generated@@576 ($generated@@261 $generated@@577))) (and (= ($generated@@290 ($generated@@356 ($generated@@87 $generated@@156 $generated@@4) $generated@@576)) $generated@@576) ($generated@@160 ($generated@@356 ($generated@@87 $generated@@156 $generated@@4) $generated@@576) ($generated@@261 $generated@@577))))
 :pattern ( ($generated@@154 $generated@@576 ($generated@@261 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@156) (= (type $generated@@579) $generated@@70)) ($generated@@154 $generated@@578 ($generated@@177 $generated@@579))) (and (= ($generated@@290 ($generated@@356 ($generated@@87 $generated@@156 $generated@@2) $generated@@578)) $generated@@578) ($generated@@160 ($generated@@356 ($generated@@87 $generated@@156 $generated@@2) $generated@@578) ($generated@@177 $generated@@579))))
 :pattern ( ($generated@@154 $generated@@578 ($generated@@177 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@156) (= (type $generated@@581) $generated@@70)) ($generated@@154 $generated@@580 ($generated@@513 $generated@@581))) (and (= ($generated@@290 ($generated@@356 ($generated@@284 $generated@@156) $generated@@580)) $generated@@580) ($generated@@160 ($generated@@356 ($generated@@284 $generated@@156) $generated@@580) ($generated@@513 $generated@@581))))
 :pattern ( ($generated@@154 $generated@@580 ($generated@@513 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (=> (and (and (and (= (type $generated@@582) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@583) $generated@@88)) (= (type $generated@@584) ($generated@@72 $generated@@586))) ($generated@@152 ($generated@@93 $generated@@582 $generated@@583 ($generated@@95 ($generated@@92 $generated@@582 $generated@@583) $generated@@584 $generated@@585)))) ($generated@@143 $generated@@582 ($generated@@93 $generated@@582 $generated@@583 ($generated@@95 ($generated@@92 $generated@@582 $generated@@583) $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@93 $generated@@582 $generated@@583 ($generated@@95 ($generated@@92 $generated@@582 $generated@@583) $generated@@584 $generated@@585)))
)))
(assert (= ($generated@@81 $generated@@147) $generated@@65))
(assert (= ($generated@@568 $generated@@147) $generated@@68))
(assert (= ($generated@@81 $generated@@239) $generated@@66))
(assert (= ($generated@@568 $generated@@239) $generated@@68))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@87 $generated@@156 $generated@@2)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@587 ($generated@@177 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@156) (< 0 ($generated ($generated@@92 $generated@@587 $generated@@590)))) ($generated@@270 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@92 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@85 $generated@@587 ($generated@@177 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@164) (= (type $generated@@592) $generated@@70)) (= (type $generated@@593) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@593) (and ($generated@@162 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@70) ($generated@@85 $generated@@591 ($generated@@163 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 ($generated@@163 $generated@@592 $generated@@594) $generated@@593))
))))) ($generated@@270 ($generated@@171 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@270 ($generated@@171 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@164) (= (type $generated@@596) $generated@@70)) (= (type $generated@@597) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@152 $generated@@597) (and ($generated@@162 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@70) ($generated@@85 $generated@@595 ($generated@@163 $generated@@598 $generated@@596) $generated@@597))
 :pattern ( ($generated@@85 $generated@@595 ($generated@@163 $generated@@598 $generated@@596) $generated@@597))
))))) ($generated@@270 ($generated@@172 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@270 ($generated@@172 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@156) (= (type $generated@@600) $generated@@156)) (= ($generated@@242 ($generated@@266 $generated@@599) ($generated@@266 $generated@@600)) ($generated@@266 ($generated@@242 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@242 ($generated@@266 $generated@@599) ($generated@@266 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@290 ($generated@@266 $generated@@601)) ($generated@@266 ($generated@@290 $generated@@601)))
 :pattern ( ($generated@@290 ($generated@@266 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@285 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@284 $generated@@603)) (= ($generated@@283 $generated@@602) 0)) (= $generated@@602 ($generated@@282 $generated@@603))))
 :pattern ( ($generated@@283 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@87 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@305 ($generated@@93 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@305 $generated@@604) ($generated ($generated@@92 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@305 ($generated@@93 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@609) $generated@@2)) ($generated@@85 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@85 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@611) $generated@@3)) ($generated@@85 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@85 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@613) $generated@@4)) ($generated@@85 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@85 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@615) $generated@@471)) ($generated@@85 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@85 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@617) $generated@@156)) ($generated@@85 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@85 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@284 $generated@@156)) (= (type $generated@@619) $generated@@70)) (= ($generated@@160 $generated@@618 ($generated@@513 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@283 $generated@@618))) ($generated@@154 ($generated@@514 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@514 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@160 $generated@@618 ($generated@@513 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@284 $generated@@156)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@283 $generated@@622))) (< ($generated@@552 ($generated@@356 $generated@@164 ($generated@@514 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@552 ($generated@@356 $generated@@164 ($generated@@514 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@313 $generated@@156 $generated@@156)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@160 $generated@@624 ($generated@@423 $generated@@625 $generated@@626))) (and (and ($generated@@160 ($generated@@311 $generated@@624) ($generated@@256 $generated@@625)) ($generated@@160 ($generated@@366 $generated@@624) ($generated@@256 $generated@@626))) ($generated@@160 ($generated@@397 $generated@@624) ($generated@@256 ($generated@@163 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@160 $generated@@624 ($generated@@423 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@331 $generated@@156 $generated@@156)) (= (type $generated@@628) $generated@@70)) (= (type $generated@@629) $generated@@70)) ($generated@@160 $generated@@627 ($generated@@431 $generated@@628 $generated@@629))) (and (and ($generated@@160 ($generated@@329 $generated@@627) ($generated@@261 $generated@@628)) ($generated@@160 ($generated@@377 $generated@@627) ($generated@@261 $generated@@629))) ($generated@@160 ($generated@@405 $generated@@627) ($generated@@261 ($generated@@163 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@160 $generated@@627 ($generated@@431 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@160 $generated@@630 $generated@@46))
 :pattern ( ($generated@@160 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@160 $generated@@631 $generated@@47))
 :pattern ( ($generated@@160 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@160 $generated@@632 $generated@@44))
 :pattern ( ($generated@@160 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@471) ($generated@@160 $generated@@633 $generated@@45))
 :pattern ( ($generated@@160 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@156) ($generated@@160 $generated@@634 $generated@@48))
 :pattern ( ($generated@@160 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(assert  (and (and (and (= (type $generated@@635) ($generated@@185 $generated@@88 $generated@@4)) (= (type $generated@@636) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@638) $generated@@156)) (= (type $generated@@639) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@641  (=> (and (= $generated@@635 ($generated@@184 $generated@@148 $generated@@636 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@642  (=> (and (and (and ($generated@@152 $generated@@636) ($generated@@637 $generated@@636)) (and ($generated@@154 $generated@@638 $generated@@155) ($generated@@270 $generated@@638 $generated@@155 $generated@@636))) (and (and (not (= $generated@@639 $generated@@148)) ($generated@@160 $generated@@639 $generated@@239)) (and (= 0 $generated@@640) (= (ControlFlow 0 3) 2)))) $generated@@641)))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 18446744073709551616))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@156)) (= (type $generated@@259) $generated@@156)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@147) (= ($generated@@145 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@147) ($generated@@145 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@156) (= (type $generated@@266) $generated@@156)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@145 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@156)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@67)) ($generated@@135 $generated@@280 $generated@@281)) ($generated@@255 $generated@@282 $generated@@283 $generated@@280)) ($generated@@255 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@135 $generated@@280 $generated@@281) ($generated@@255 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@77 $generated@@286 $generated@@287 $generated@@284)) ($generated@@77 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@77 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@79 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@82 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@79 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@82 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@79 $generated@@331 $generated@@2)) (= ($generated@@162 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@84 $generated@@330 $generated@@332))) (<= ($generated ($generated@@84 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@84 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@162 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@156) ($generated@@229 $generated@@336 $generated@@225)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@336)) $generated@@336) ($generated@@143 ($generated@@333 $generated@@80 $generated@@336) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@139)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@333 $generated@@80 $generated@@337) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@139))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@80) (= ($generated@@143 $generated@@338 $generated@@225)  (and ($generated@@143 $generated@@338 $generated@@139) (not (= $generated@@338 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@298 (type $generated@@339))))
(let (($generated@@341 ($generated@@297 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@296 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@295 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@294 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@298 (type $generated@@346))))
(let (($generated@@348 ($generated@@297 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@296 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@295 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@316 (type $generated@@350))))
(let (($generated@@352 ($generated@@315 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@314 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@313 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@312 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@362) $generated@@67)) (= ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@361 $generated@@363)))) ($generated@@229 $generated@@363 $generated@@362))
 :pattern ( ($generated@@84 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@156) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@255 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@156) ($generated@@0 ($generated@@84 $generated@@368 $generated@@371))) ($generated@@255 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@84 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@84 ($generated@@289 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@84 ($generated@@289 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@298 (type $generated@@377))))
(let (($generated@@379 ($generated@@297 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@381) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@316 (type $generated@@385))))
(let (($generated@@387 ($generated@@315 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@79 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@389) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389)))) (= ($generated@@84 ($generated@@383 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@389))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@297 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@296 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@390) $generated@@394))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@315 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@314 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))) (and ($generated@@255 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@255 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))) (and ($generated@@255 ($generated@@84 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@255 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@417) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@416 $generated@@418))) (and ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))) ($generated@@135 $generated@@416 $generated@@418))
 :pattern ( ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@79 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@312 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@312 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@354 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@354 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@156))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@298 (type $generated@@430))))
(let (($generated@@432 ($generated@@297 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@296 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@295 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@156) (= (type $generated@@434) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@430) ($generated@@275 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@316 (type $generated@@435))))
(let (($generated@@437 ($generated@@315 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@314 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@313 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@156) (= (type $generated@@439) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@435) ($generated@@275 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@333 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@156) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@275 ($generated@@333 $generated@@3 $generated@@441)) $generated@@441) ($generated@@143 ($generated@@333 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@275 ($generated@@333 $generated@@4 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@333 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@275 ($generated@@333 $generated@@443 $generated@@444)) $generated@@444) ($generated@@143 ($generated@@333 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@67) (= ($generated@@229 ($generated@@275 $generated@@445) $generated@@446) ($generated@@143 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@275 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@82 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@79 $generated@@448 $generated@@2)) (<= 0 ($generated@@288 $generated@@447))))
 :pattern ( ($generated@@288 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@270 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@269 $generated@@450)) (<= 0 ($generated@@268 $generated@@449))))
 :pattern ( ($generated@@268 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) (= (type $generated@@472) $generated@@156)) (= ($generated@@261 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@146 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@146 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@146 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@146 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@156) (= (type $generated@@484) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@270 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@269 $generated@@156)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@268 $generated@@491))) ($generated@@255 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@78 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@78 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@238 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@161 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@333 $generated@@514 ($generated@@275 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@275 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))) (and ($generated@@229 ($generated@@84 ($generated@@375 $generated@@515) $generated@@518) $generated@@517) ($generated@@229 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))) (and ($generated@@229 ($generated@@84 ($generated@@383 $generated@@519) $generated@@522) $generated@@521) ($generated@@229 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@156)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@228 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@228 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@156) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531))) (and (= ($generated@@275 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529)) $generated@@529) ($generated@@143 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529) ($generated@@400 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@156) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534))) (and (= ($generated@@275 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532)) $generated@@532) ($generated@@143 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532) ($generated@@408 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@156)) ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536))) (and (= ($generated@@275 ($generated@@333 $generated@@147 $generated@@537)) $generated@@537) ($generated@@143 ($generated@@333 $generated@@147 $generated@@537) ($generated@@146 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@84 ($generated@@419 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@84 ($generated@@419 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@72)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@146 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@147) (= ($generated@@523 ($generated@@275 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@275 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@156) ($generated@@229 $generated@@545 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@545)) $generated@@545) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@545) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@78 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@243 $generated@@549))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@243 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@243 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@161 $generated@@551))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@550) ($generated@@161 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@161 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@156) (= (type $generated@@553) $generated@@67)) ($generated@@229 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@275 ($generated@@333 ($generated@@269 $generated@@156) $generated@@552)) $generated@@552) ($generated@@143 ($generated@@333 ($generated@@269 $generated@@156) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (= ($generated@@75 $generated@@225) $generated@@63))
(assert (= ($generated@@540 $generated@@225) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@540 $generated@@139) $generated@@66))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@554 ($generated@@161 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@554 $generated@@557)))) ($generated@@255 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@77 $generated@@554 ($generated@@161 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@147) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@560) (and ($generated@@145 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@67) ($generated@@77 $generated@@558 ($generated@@146 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@146 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@255 ($generated@@154 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@255 ($generated@@154 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@147) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@564) (and ($generated@@145 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@146 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@146 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@255 ($generated@@155 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@255 ($generated@@155 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@156) (= (type $generated@@567) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@566) ($generated@@250 $generated@@567)) ($generated@@250 ($generated@@228 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@566) ($generated@@250 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@248 $generated@@568))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@248 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@569)) ($generated@@250 ($generated@@275 $generated@@569)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@270 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@269 $generated@@571)) (= ($generated@@268 $generated@@570) 0)) (= $generated@@570 ($generated@@267 $generated@@571))))
 :pattern ( ($generated@@268 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@79 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@288 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@288 $generated@@572) ($generated ($generated@@84 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@288 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@2)) ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@3)) ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@4)) ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@443)) ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@156)) ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@269 $generated@@156)) (= (type $generated@@587) $generated@@67)) (= ($generated@@143 $generated@@586 ($generated@@485 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@268 $generated@@586))) ($generated@@229 ($generated@@486 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@486 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@143 $generated@@586 ($generated@@485 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@269 $generated@@156)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@268 $generated@@590))) (< ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@143 $generated@@592 ($generated@@400 $generated@@593 $generated@@594))) (and (and ($generated@@143 ($generated@@294 $generated@@592) ($generated@@238 $generated@@593)) ($generated@@143 ($generated@@343 $generated@@592) ($generated@@238 $generated@@594))) ($generated@@143 ($generated@@374 $generated@@592) ($generated@@238 ($generated@@146 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@400 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@143 $generated@@595 ($generated@@408 $generated@@596 $generated@@597))) (and (and ($generated@@143 ($generated@@312 $generated@@595) ($generated@@243 $generated@@596)) ($generated@@143 ($generated@@354 $generated@@595) ($generated@@243 $generated@@597))) ($generated@@143 ($generated@@382 $generated@@595) ($generated@@243 ($generated@@146 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@143 $generated@@595 ($generated@@408 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@143 $generated@@598 $generated@@46))
 :pattern ( ($generated@@143 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@143 $generated@@599 $generated@@47))
 :pattern ( ($generated@@143 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@143 $generated@@600 $generated@@44))
 :pattern ( ($generated@@143 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@443) ($generated@@143 $generated@@601 $generated@@45))
 :pattern ( ($generated@@143 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@156) ($generated@@143 $generated@@602 $generated@@48))
 :pattern ( ($generated@@143 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(assert  (and (and (and (= (type $generated@@603) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@605) $generated@@80)) (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@612  (=> (= $generated@@603 ($generated@@170 $generated@@140 $generated@@604 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@605 $generated@@140))) (=> (not (= $generated@@605 $generated@@140)) (=> (= $generated@@606 ($generated@@248 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@248 0) $generated@@606) (< $generated@@606 18446744073709551616))) (=> (and (<= ($generated@@248 0) $generated@@606) (< $generated@@606 18446744073709551616)) (=> (= $generated@@607 ($generated@@248 0)) (=> (and (and ($generated@@254 $generated@@608) ($generated@@609 $generated@@608)) (and (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@80) (=> (and (not (= $generated@@613 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@604 $generated@@613) $generated@@60))) (= ($generated@@84 $generated@@608 $generated@@613) ($generated@@84 $generated@@604 $generated@@613))))
 :pattern ( ($generated@@84 $generated@@608 $generated@@613))
)) ($generated@@135 $generated@@604 $generated@@608))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@605 $generated@@140))) (=> (not (= $generated@@605 $generated@@140)) (=> (and (= $generated@@610 ($generated@@248 1)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@248 0) $generated@@610) (< $generated@@610 18446744073709551616)))))))))))))))
(let (($generated@@614  (=> (and ($generated@@254 $generated@@604) ($generated@@609 $generated@@604)) (=> (and (and ($generated@@143 $generated@@605 $generated@@225) ($generated@@77 $generated@@605 $generated@@225 $generated@@604)) (and (= 1 $generated@@611) (= (ControlFlow 0 6) 2))) $generated@@612))))
$generated@@614)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@156)) (= (type $generated@@259) $generated@@156)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@147) (= ($generated@@145 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@147) ($generated@@145 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@156) (= (type $generated@@266) $generated@@156)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@145 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@156)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@67)) ($generated@@135 $generated@@280 $generated@@281)) ($generated@@255 $generated@@282 $generated@@283 $generated@@280)) ($generated@@255 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@135 $generated@@280 $generated@@281) ($generated@@255 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@77 $generated@@286 $generated@@287 $generated@@284)) ($generated@@77 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@77 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@79 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@82 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@79 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@82 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@79 $generated@@331 $generated@@2)) (= ($generated@@162 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@84 $generated@@330 $generated@@332))) (<= ($generated ($generated@@84 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@84 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@162 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@156) ($generated@@229 $generated@@336 $generated@@225)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@336)) $generated@@336) ($generated@@143 ($generated@@333 $generated@@80 $generated@@336) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@139)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@333 $generated@@80 $generated@@337) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@139))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@80) (= ($generated@@143 $generated@@338 $generated@@225)  (and ($generated@@143 $generated@@338 $generated@@139) (not (= $generated@@338 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@298 (type $generated@@339))))
(let (($generated@@341 ($generated@@297 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@296 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@295 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@294 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@298 (type $generated@@346))))
(let (($generated@@348 ($generated@@297 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@296 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@295 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@316 (type $generated@@350))))
(let (($generated@@352 ($generated@@315 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@314 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@313 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@312 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@362) $generated@@67)) (= ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@361 $generated@@363)))) ($generated@@229 $generated@@363 $generated@@362))
 :pattern ( ($generated@@84 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@156) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@255 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@156) ($generated@@0 ($generated@@84 $generated@@368 $generated@@371))) ($generated@@255 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@84 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@84 ($generated@@289 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@84 ($generated@@289 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@298 (type $generated@@377))))
(let (($generated@@379 ($generated@@297 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@381) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@316 (type $generated@@385))))
(let (($generated@@387 ($generated@@315 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@79 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@389) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389)))) (= ($generated@@84 ($generated@@383 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@389))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@297 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@296 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@390) $generated@@394))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@315 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@314 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))) (and ($generated@@255 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@255 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))) (and ($generated@@255 ($generated@@84 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@255 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@417) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@418) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@416 $generated@@418))) (and ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))) ($generated@@135 $generated@@416 $generated@@418))
 :pattern ( ($generated@@135 $generated@@416 $generated@@417) ($generated@@135 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@79 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@312 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@312 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@354 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@354 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@156))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@298 (type $generated@@430))))
(let (($generated@@432 ($generated@@297 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@296 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@295 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@156) (= (type $generated@@434) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@430) ($generated@@275 ($generated@@228 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@374 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@316 (type $generated@@435))))
(let (($generated@@437 ($generated@@315 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@314 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@313 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@156) (= (type $generated@@439) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@435) ($generated@@275 ($generated@@228 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@46)) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@333 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@156) ($generated@@229 $generated@@441 $generated@@47)) (and (= ($generated@@275 ($generated@@333 $generated@@3 $generated@@441)) $generated@@441) ($generated@@143 ($generated@@333 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@44)) (and (= ($generated@@275 ($generated@@333 $generated@@4 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@333 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@229 $generated@@444 $generated@@45)) (and (= ($generated@@275 ($generated@@333 $generated@@443 $generated@@444)) $generated@@444) ($generated@@143 ($generated@@333 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@67) (= ($generated@@229 ($generated@@275 $generated@@445) $generated@@446) ($generated@@143 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@229 ($generated@@275 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@82 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@79 $generated@@448 $generated@@2)) (<= 0 ($generated@@288 $generated@@447))))
 :pattern ( ($generated@@288 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@270 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@269 $generated@@450)) (<= 0 ($generated@@268 $generated@@449))))
 :pattern ( ($generated@@268 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@67)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@67)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@75 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) (= (type $generated@@472) $generated@@156)) (= ($generated@@261 ($generated@@228 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@146 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@146 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@146 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@146 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@156) (= (type $generated@@484) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@270 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@269 $generated@@156)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@268 $generated@@491))) ($generated@@255 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@78 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@78 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@238 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@243 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@161 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@333 $generated@@514 ($generated@@275 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@275 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))) (and ($generated@@229 ($generated@@84 ($generated@@375 $generated@@515) $generated@@518) $generated@@517) ($generated@@229 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@143 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))) (and ($generated@@229 ($generated@@84 ($generated@@383 $generated@@519) $generated@@522) $generated@@521) ($generated@@229 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@143 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@156)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@228 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@228 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@156) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531))) (and (= ($generated@@275 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529)) $generated@@529) ($generated@@143 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@529) ($generated@@400 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@229 $generated@@529 ($generated@@400 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@156) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534))) (and (= ($generated@@275 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532)) $generated@@532) ($generated@@143 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@532) ($generated@@408 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@408 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@156)) ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536))) (and (= ($generated@@275 ($generated@@333 $generated@@147 $generated@@537)) $generated@@537) ($generated@@143 ($generated@@333 $generated@@147 $generated@@537) ($generated@@146 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@146 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@84 ($generated@@419 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@84 ($generated@@419 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@72)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@146 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@147) (= ($generated@@523 ($generated@@275 $generated@@544)) ($generated@@524 $generated@@544)))
 :pattern ( ($generated@@523 ($generated@@275 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@156) ($generated@@229 $generated@@545 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@545)) $generated@@545) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@545) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@545 ($generated@@78 0)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@238 $generated@@547))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@238 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@238 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@243 $generated@@549))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@243 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@243 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@161 $generated@@551))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@550) ($generated@@161 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@161 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@156) (= (type $generated@@553) $generated@@67)) ($generated@@229 $generated@@552 ($generated@@485 $generated@@553))) (and (= ($generated@@275 ($generated@@333 ($generated@@269 $generated@@156) $generated@@552)) $generated@@552) ($generated@@143 ($generated@@333 ($generated@@269 $generated@@156) $generated@@552) ($generated@@485 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@485 $generated@@553)))
)))
(assert (= ($generated@@75 $generated@@225) $generated@@63))
(assert (= ($generated@@540 $generated@@225) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@540 $generated@@139) $generated@@66))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@554 ($generated@@161 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@554 $generated@@557)))) ($generated@@255 $generated@@557 $generated@@555 $generated@@556))
 :pattern ( ($generated@@84 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@77 $generated@@554 ($generated@@161 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@147) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@560) (and ($generated@@145 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@67) ($generated@@77 $generated@@558 ($generated@@146 $generated@@559 $generated@@561) $generated@@560))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@146 $generated@@559 $generated@@561) $generated@@560))
))))) ($generated@@255 ($generated@@154 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@255 ($generated@@154 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@147) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@564) (and ($generated@@145 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@146 $generated@@565 $generated@@563) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@146 $generated@@565 $generated@@563) $generated@@564))
))))) ($generated@@255 ($generated@@155 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@255 ($generated@@155 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@156) (= (type $generated@@567) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@566) ($generated@@250 $generated@@567)) ($generated@@250 ($generated@@228 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@566) ($generated@@250 $generated@@567)))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@248 $generated@@568))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@568))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@248 $generated@@568))))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@569)) ($generated@@250 ($generated@@275 $generated@@569)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@270 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@269 $generated@@571)) (= ($generated@@268 $generated@@570) 0)) (= $generated@@570 ($generated@@267 $generated@@571))))
 :pattern ( ($generated@@268 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@79 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@288 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@288 $generated@@572) ($generated ($generated@@84 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@288 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@2)) ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@3)) ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@4)) ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@443)) ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@156)) ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@269 $generated@@156)) (= (type $generated@@587) $generated@@67)) (= ($generated@@143 $generated@@586 ($generated@@485 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@268 $generated@@586))) ($generated@@229 ($generated@@486 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@486 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@143 $generated@@586 ($generated@@485 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@269 $generated@@156)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@268 $generated@@590))) (< ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@524 ($generated@@333 $generated@@147 ($generated@@486 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@143 $generated@@592 ($generated@@400 $generated@@593 $generated@@594))) (and (and ($generated@@143 ($generated@@294 $generated@@592) ($generated@@238 $generated@@593)) ($generated@@143 ($generated@@343 $generated@@592) ($generated@@238 $generated@@594))) ($generated@@143 ($generated@@374 $generated@@592) ($generated@@238 ($generated@@146 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@400 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@143 $generated@@595 ($generated@@408 $generated@@596 $generated@@597))) (and (and ($generated@@143 ($generated@@312 $generated@@595) ($generated@@243 $generated@@596)) ($generated@@143 ($generated@@354 $generated@@595) ($generated@@243 $generated@@597))) ($generated@@143 ($generated@@382 $generated@@595) ($generated@@243 ($generated@@146 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@143 $generated@@595 ($generated@@408 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@143 $generated@@598 $generated@@46))
 :pattern ( ($generated@@143 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@143 $generated@@599 $generated@@47))
 :pattern ( ($generated@@143 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@143 $generated@@600 $generated@@44))
 :pattern ( ($generated@@143 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@443) ($generated@@143 $generated@@601 $generated@@45))
 :pattern ( ($generated@@143 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@156) ($generated@@143 $generated@@602 $generated@@48))
 :pattern ( ($generated@@143 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 (T@U) Bool)
(declare-fun $generated@@607 () Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(assert  (and (and (= (type $generated@@603) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@608) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@610  (=> (= $generated@@603 ($generated@@170 $generated@@140 $generated@@604 $generated@@60 false)) (=> (and (= $generated@@605 ($generated@@248 42)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@248 0) $generated@@605) (< $generated@@605 18446744073709551616))))))
(let (($generated@@611  (=> (and ($generated@@254 $generated@@604) ($generated@@606 $generated@@604)) (=> (and (and (=> $generated@@607 (and ($generated@@143 $generated@@608 $generated@@225) ($generated@@77 $generated@@608 $generated@@225 $generated@@604))) true) (and (= 1 $generated@@609) (= (ControlFlow 0 3) 2))) $generated@@610))))
$generated@@611)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@276 (Int) Int)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@63) $generated@@79)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (forall (($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@149)) $generated@@75)
 :pattern ( ($generated@@147 $generated@@149))
)) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@75) (= (type $generated@@151) $generated@@88)) (= (type $generated@@152) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@151 ($generated@@147 $generated@@150) $generated@@152)  (or (= $generated@@151 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@151 ($generated@@147 $generated@@150) $generated@@152))
)))
(assert (= (type $generated@@153) $generated@@75))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@154 $generated@@153 $generated@@155))
 :pattern ( ($generated@@85 $generated@@154 $generated@@153 $generated@@155))
)))
(assert (= (type $generated@@156) $generated@@75))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@88) (= (type $generated@@158) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@157 $generated@@156 $generated@@158)  (or (= $generated@@157 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@158 $generated@@157) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@157 $generated@@156 $generated@@158))
)))
(assert (= (type $generated@@159) $generated@@75))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@88) (= (type $generated@@161) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@160 $generated@@159 $generated@@161)  (or (= $generated@@160 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@161 $generated@@160) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@160 $generated@@159 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= (type $generated@@163) $generated@@2) ($generated@@162 $generated@@163 ($generated@@86 0)))
 :pattern ( ($generated@@162 $generated@@163 ($generated@@86 0)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@75)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@75) (= (type $generated@@167) $generated@@88)) (= (type $generated@@168) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168) ($generated@@85 $generated@@167 ($generated@@147 $generated@@166) $generated@@168)))
 :pattern ( ($generated@@85 $generated@@167 ($generated@@164 $generated@@166) $generated@@168))
)))
(assert  (and (= ($generated@@1 $generated@@171) 14) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@75)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@75) (= (type $generated@@175) $generated@@75)) (= (type $generated@@176) $generated@@171)) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@162 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 15) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@182)) $generated@@180)
 :pattern ( ($generated@@179 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@171) (= (type $generated@@184) $generated@@171)) true) (= ($generated@@177 $generated@@183 $generated@@184)  (and (= ($generated@@178 $generated@@183) ($generated@@178 $generated@@184)) (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)))))
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@75)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@87 $generated@@180 $generated@@2)) (= (type $generated@@189) $generated@@75)) ($generated@@162 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@162 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@190 $generated@@191)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@88) (= ($generated@@162 $generated@@192 $generated@@156)  (or (= $generated@@192 $generated@@148) (= ($generated@@190 $generated@@192) $generated@@156))))
 :pattern ( ($generated@@162 $generated@@192 $generated@@156))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> (= (type $generated@@193) $generated@@88) (= ($generated@@162 $generated@@193 $generated@@159)  (or (= $generated@@193 $generated@@148) (= ($generated@@190 $generated@@193) $generated@@159))))
 :pattern ( ($generated@@162 $generated@@193 $generated@@159))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 16)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@88 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@78 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@88) (= (type $generated@@244) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@245) ($generated@@77 $generated@@4))) (= (type $generated@@247) $generated@@88)) (= (type $generated@@248) ($generated@@77 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= (type $generated@@250) $generated@@75))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@88) (= (type $generated@@252) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@251 $generated@@250 $generated@@252) ($generated@@85 $generated@@251 $generated@@156 $generated@@252)))
 :pattern ( ($generated@@85 $generated@@251 $generated@@250 $generated@@252))
)))
(assert (= (type $generated@@253) $generated@@75))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@88) (= (type $generated@@255) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@254 $generated@@253 $generated@@255) ($generated@@85 $generated@@254 $generated@@159 $generated@@255)))
 :pattern ( ($generated@@85 $generated@@254 $generated@@253 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@171)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@75) (= (type $generated@@261) $generated@@75)) (= (type $generated@@262) $generated@@180)) (= (type $generated@@263) $generated@@180)) (= ($generated@@162 ($generated@@256 $generated@@262 $generated@@263) ($generated@@170 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@162 ($generated@@256 $generated@@262 $generated@@263) ($generated@@170 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@171) (= (type $generated@@265) $generated@@171)) (= ($generated@@177 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@177 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@75)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@269) $generated@@75)) (= ($generated@@162 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@180) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@257 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@162 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@75)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@274) $generated@@75)) (= ($generated@@162 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@180) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@257 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@162 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@276 $generated@@277) $generated@@277)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@75) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@180)) (= (type $generated@@287) $generated@@180)) (= (type $generated@@288) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@282 $generated@@288)) (= ($generated@@85 ($generated@@256 $generated@@286 $generated@@287) ($generated@@170 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@85 ($generated@@256 $generated@@286 $generated@@287) ($generated@@170 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@79)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@171) (= ($generated@@169 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@169 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@171) ($generated@@169 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@180) (= (type $generated@@294) $generated@@180)) (= $generated@@292 ($generated@@256 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@169 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@75) (= (type $generated@@304) $generated@@88)) (= ($generated@@162 $generated@@304 ($generated@@164 $generated@@303))  (and ($generated@@162 $generated@@304 ($generated@@147 $generated@@303)) (not (= $generated@@304 $generated@@148)))))
 :pattern ( ($generated@@162 $generated@@304 ($generated@@164 $generated@@303)))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@180)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@75) (= (type $generated@@309) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@283 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@85 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@283 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@310) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@311) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@312) $generated@@180)) (= (type $generated@@313) $generated@@75)) ($generated@@143 $generated@@310 $generated@@311)) ($generated@@283 $generated@@312 $generated@@313 $generated@@310)) ($generated@@283 $generated@@312 $generated@@313 $generated@@311))
 :pattern ( ($generated@@143 $generated@@310 $generated@@311) ($generated@@283 $generated@@312 $generated@@313 $generated@@310))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@314) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@315) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@317) $generated@@75)) ($generated@@143 $generated@@314 $generated@@315)) ($generated@@85 $generated@@316 $generated@@317 $generated@@314)) ($generated@@85 $generated@@316 $generated@@317 $generated@@315))
 :pattern ( ($generated@@143 $generated@@314 $generated@@315) ($generated@@85 $generated@@316 $generated@@317 $generated@@314))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@87 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@90 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@87 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@92 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@80)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@75) (and (= ($generated@@83 ($generated@@147 $generated@@326)) $generated@@61) (= ($generated@@324 ($generated@@147 $generated@@326)) $generated@@70)))
 :pattern ( ($generated@@147 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@75) (and (= ($generated@@83 ($generated@@164 $generated@@327)) $generated@@62) (= ($generated@@324 ($generated@@164 $generated@@327)) $generated@@70)))
 :pattern ( ($generated@@164 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 18)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 19)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@87 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@92 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@92 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@90 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@87 $generated@@365 $generated@@2)) (= ($generated@@186 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@92 $generated@@364 $generated@@366))) (<= ($generated ($generated@@92 $generated@@364 $generated@@366)) ($generated@@318 $generated@@364))))
 :pattern ( ($generated@@92 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@186 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@180) ($generated@@257 $generated@@370 $generated@@156)) (and (= ($generated@@305 ($generated@@367 $generated@@88 $generated@@370)) $generated@@370) ($generated@@162 ($generated@@367 $generated@@88 $generated@@370) $generated@@156)))
 :pattern ( ($generated@@257 $generated@@370 $generated@@156))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@180) ($generated@@257 $generated@@371 $generated@@153)) (and (= ($generated@@305 ($generated@@367 $generated@@2 $generated@@371)) $generated@@371) ($generated@@162 ($generated@@367 $generated@@2 $generated@@371) $generated@@153)))
 :pattern ( ($generated@@257 $generated@@371 $generated@@153))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@180) ($generated@@257 $generated@@372 $generated@@250)) (and (= ($generated@@305 ($generated@@367 $generated@@88 $generated@@372)) $generated@@372) ($generated@@162 ($generated@@367 $generated@@88 $generated@@372) $generated@@250)))
 :pattern ( ($generated@@257 $generated@@372 $generated@@250))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@180) ($generated@@257 $generated@@373 $generated@@253)) (and (= ($generated@@305 ($generated@@367 $generated@@88 $generated@@373)) $generated@@373) ($generated@@162 ($generated@@367 $generated@@88 $generated@@373) $generated@@253)))
 :pattern ( ($generated@@257 $generated@@373 $generated@@253))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@180) ($generated@@257 $generated@@374 $generated@@159)) (and (= ($generated@@305 ($generated@@367 $generated@@88 $generated@@374)) $generated@@374) ($generated@@162 ($generated@@367 $generated@@88 $generated@@374) $generated@@159)))
 :pattern ( ($generated@@257 $generated@@374 $generated@@159))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@75) (= (type $generated@@376) $generated@@88)) (= ($generated@@162 $generated@@376 ($generated@@147 $generated@@375))  (or (= $generated@@376 $generated@@148) (= ($generated@@190 $generated@@376) ($generated@@147 $generated@@375)))))
 :pattern ( ($generated@@162 $generated@@376 ($generated@@147 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@88) (= ($generated@@162 $generated@@377 $generated@@250)  (and ($generated@@162 $generated@@377 $generated@@156) (not (= $generated@@377 $generated@@148)))))
 :pattern ( ($generated@@162 $generated@@377 $generated@@250))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@88) (= ($generated@@162 $generated@@378 $generated@@253)  (and ($generated@@162 $generated@@378 $generated@@159) (not (= $generated@@378 $generated@@148)))))
 :pattern ( ($generated@@162 $generated@@378 $generated@@253))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@332 (type $generated@@379))))
(let (($generated@@381 ($generated@@331 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@330 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@329 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@328 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@332 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@87 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@332 (type $generated@@386))))
(let (($generated@@388 ($generated@@331 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@330 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@329 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@92 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@350 (type $generated@@390))))
(let (($generated@@392 ($generated@@349 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@348 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@347 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@346 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@350 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@87 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@350 (type $generated@@397))))
(let (($generated@@399 ($generated@@349 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@348 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@347 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@92 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@87 $generated@@180 $generated@@2)) (= (type $generated@@402) $generated@@75)) (= ($generated@@162 $generated@@401 ($generated@@185 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@180) (< 0 ($generated ($generated@@92 $generated@@401 $generated@@403)))) ($generated@@257 $generated@@403 $generated@@402))
 :pattern ( ($generated@@92 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@162 $generated@@401 ($generated@@185 $generated@@402)))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@405) $generated@@75)) (= (type $generated@@406) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@404 ($generated@@266 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@180) ($generated@@0 ($generated@@92 $generated@@404 $generated@@407))) ($generated@@283 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@92 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@85 $generated@@404 ($generated@@266 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@87 $generated@@180 $generated@@4)) (= (type $generated@@409) $generated@@75)) (= (type $generated@@410) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@408 ($generated@@271 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@180) ($generated@@0 ($generated@@92 $generated@@408 $generated@@411))) ($generated@@283 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@92 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@85 $generated@@408 ($generated@@271 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(= ($generated ($generated@@92 ($generated@@319 $generated@@413) $generated@@412)) 0))
 :pattern ( (let (($generated@@413 (type $generated@@412)))
($generated@@92 ($generated@@319 $generated@@413) $generated@@412)))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@87 $generated@@180 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@332 (type $generated@@417))))
(let (($generated@@419 ($generated@@331 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@87 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@330 $generated@@180 $generated@@180)) (= (type $generated@@421) $generated@@180)) (= ($generated@@0 ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@420) ($generated@@178 ($generated@@367 $generated@@171 $generated@@421)))) (= ($generated@@92 ($generated@@415 $generated@@420) ($generated@@178 ($generated@@367 $generated@@171 $generated@@421))) ($generated@@179 ($generated@@367 $generated@@171 $generated@@421))))))
 :pattern ( ($generated@@92 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert  (and (forall (($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@424)) ($generated@@87 $generated@@180 $generated@@4))
 :pattern ( ($generated@@422 $generated@@424))
)) (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@350 (type $generated@@425))))
(let (($generated@@427 ($generated@@349 (type $generated@@425))))
(= (type ($generated@@423 $generated@@425)) ($generated@@87 $generated@@427 $generated@@426))))
 :pattern ( ($generated@@423 $generated@@425))
))))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@348 $generated@@180 $generated@@180)) (= (type $generated@@429) $generated@@180)) (= ($generated@@0 ($generated@@92 ($generated@@422 $generated@@428) $generated@@429))  (and ($generated@@0 ($generated@@92 ($generated@@346 $generated@@428) ($generated@@178 ($generated@@367 $generated@@171 $generated@@429)))) (= ($generated@@92 ($generated@@423 $generated@@428) ($generated@@178 ($generated@@367 $generated@@171 $generated@@429))) ($generated@@179 ($generated@@367 $generated@@171 $generated@@429))))))
 :pattern ( ($generated@@92 ($generated@@422 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@331 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@330 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@92 ($generated@@383 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@92 ($generated@@415 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@430) $generated@@434))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@92 ($generated@@383 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@349 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@348 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@92 ($generated@@394 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@92 ($generated@@346 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@92 ($generated@@423 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@435) $generated@@439))
 :pattern ( ($generated@@92 ($generated@@423 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@92 ($generated@@394 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@75)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@330 $generated@@180 $generated@@180)) (= (type $generated@@444) $generated@@75)) (= (type $generated@@445) $generated@@75)) (= (type $generated@@446) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@443) $generated@@447))) (and ($generated@@283 ($generated@@92 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@283 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@85 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (= (type ($generated@@448 $generated@@449 $generated@@450)) $generated@@75)
 :pattern ( ($generated@@448 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (= (type $generated@@451) ($generated@@348 $generated@@180 $generated@@180)) (= (type $generated@@452) $generated@@75)) (= (type $generated@@453) $generated@@75)) (= (type $generated@@454) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@451) $generated@@455))) (and ($generated@@283 ($generated@@92 ($generated@@423 $generated@@451) $generated@@455) $generated@@453 $generated@@454) ($generated@@283 $generated@@455 $generated@@452 $generated@@454)))
 :pattern ( ($generated@@92 ($generated@@423 $generated@@451) $generated@@455))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@451) $generated@@455))
))))
 :pattern ( ($generated@@85 $generated@@451 ($generated@@448 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@456) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@457) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@458) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@456 $generated@@458))) (and ($generated@@143 $generated@@456 $generated@@457) ($generated@@143 $generated@@457 $generated@@458))) ($generated@@143 $generated@@456 $generated@@458))
 :pattern ( ($generated@@143 $generated@@456 $generated@@457) ($generated@@143 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@87 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@350 (type $generated@@461))))
(let (($generated@@463 ($generated@@349 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@348 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@347 $generated@@463 $generated@@462)) (= ($generated@@346 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@346 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@350 (type $generated@@464))))
(let (($generated@@466 ($generated@@349 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@348 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@347 $generated@@466 $generated@@465)) (= ($generated@@394 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@394 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@350 (type $generated@@467))))
(let (($generated@@469 ($generated@@349 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@348 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@347 $generated@@469 $generated@@468)) (= ($generated@@422 $generated@@467) ($generated@@459 $generated@@180))))))
 :pattern ( ($generated@@422 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@332 (type $generated@@470))))
(let (($generated@@472 ($generated@@331 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@330 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@329 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@180) (= (type $generated@@474) $generated@@180)) ($generated@@0 ($generated@@92 ($generated@@414 $generated@@470) ($generated@@305 ($generated@@256 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@414 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@350 (type $generated@@475))))
(let (($generated@@477 ($generated@@349 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@348 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@347 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@180) (= (type $generated@@479) $generated@@180)) ($generated@@0 ($generated@@92 ($generated@@422 $generated@@475) ($generated@@305 ($generated@@256 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@422 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@180) ($generated@@257 $generated@@480 $generated@@46)) (and (= ($generated@@305 ($generated@@367 $generated@@2 $generated@@480)) $generated@@480) ($generated@@162 ($generated@@367 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@180) ($generated@@257 $generated@@481 $generated@@47)) (and (= ($generated@@305 ($generated@@367 $generated@@3 $generated@@481)) $generated@@481) ($generated@@162 ($generated@@367 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@180) ($generated@@257 $generated@@482 $generated@@44)) (and (= ($generated@@305 ($generated@@367 $generated@@4 $generated@@482)) $generated@@482) ($generated@@162 ($generated@@367 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 20))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@180) ($generated@@257 $generated@@484 $generated@@45)) (and (= ($generated@@305 ($generated@@367 $generated@@483 $generated@@484)) $generated@@484) ($generated@@162 ($generated@@367 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@75) (= ($generated@@257 ($generated@@305 $generated@@485) $generated@@486) ($generated@@162 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@257 ($generated@@305 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@90 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@87 $generated@@488 $generated@@2)) (<= 0 ($generated@@318 $generated@@487))))
 :pattern ( ($generated@@318 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@298 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@297 $generated@@490)) (<= 0 ($generated@@296 $generated@@489))))
 :pattern ( ($generated@@296 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@75)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) (= (type $generated@@494) $generated@@75)) (= ($generated@@491 ($generated@@440 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@440 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@75)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) (= (type $generated@@498) $generated@@75)) (= ($generated@@495 ($generated@@440 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@440 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@75) (= (type $generated@@500) $generated@@75)) (= ($generated@@83 ($generated@@440 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@440 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@75)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@75) (= (type $generated@@504) $generated@@75)) (= ($generated@@501 ($generated@@448 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@448 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@75)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@75) (= (type $generated@@508) $generated@@75)) (= ($generated@@505 ($generated@@448 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@448 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@75) (= (type $generated@@510) $generated@@75)) (= ($generated@@83 ($generated@@448 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@448 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@180) (= (type $generated@@512) $generated@@180)) (= ($generated@@289 ($generated@@256 $generated@@511 $generated@@512)) $generated@@63))
 :pattern ( ($generated@@256 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@75)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@75) (= (type $generated@@516) $generated@@75)) (= ($generated@@513 ($generated@@170 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@170 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@75)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@75) (= (type $generated@@520) $generated@@75)) (= ($generated@@517 ($generated@@170 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@170 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@180) (= (type $generated@@522) $generated@@180)) (= ($generated@@178 ($generated@@256 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@256 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@180) (= (type $generated@@524) $generated@@180)) (= ($generated@@179 ($generated@@256 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@256 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@75)
 :pattern ( ($generated@@525 $generated@@527))
)) (forall (($generated@@528 T@U) ($generated@@529 Int) ) (! (let (($generated@@530 ($generated@@298 (type $generated@@528))))
(= (type ($generated@@526 $generated@@528 $generated@@529)) $generated@@530))
 :pattern ( ($generated@@526 $generated@@528 $generated@@529))
))))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@297 $generated@@180)) (= (type $generated@@532) $generated@@75)) (= (type $generated@@533) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@531 ($generated@@525 $generated@@532) $generated@@533) (forall (($generated@@534 Int) ) (!  (=> (and (<= 0 $generated@@534) (< $generated@@534 ($generated@@296 $generated@@531))) ($generated@@283 ($generated@@526 $generated@@531 $generated@@534) $generated@@532 $generated@@533))
 :pattern ( ($generated@@526 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@85 $generated@@531 ($generated@@525 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@86 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@86 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@75)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@75) (= ($generated@@537 ($generated@@266 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@266 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@75) (= ($generated@@83 ($generated@@266 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@75)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@75) (= ($generated@@541 ($generated@@271 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@271 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@75) (= ($generated@@83 ($generated@@271 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@75)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@75) (= ($generated@@545 ($generated@@185 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@185 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@75) (= ($generated@@83 ($generated@@185 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@75)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@75) (= ($generated@@549 ($generated@@525 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@525 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@75) (= ($generated@@83 ($generated@@525 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@525 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@75)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@75) (= ($generated@@553 ($generated@@147 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@147 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@75) (= ($generated@@556 ($generated@@164 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@164 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(= ($generated@@367 $generated@@560 ($generated@@305 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@305 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@330 $generated@@180 $generated@@180)) (= (type $generated@@562) $generated@@75)) (= (type $generated@@563) $generated@@75)) (= ($generated@@162 $generated@@561 ($generated@@440 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@561) $generated@@564))) (and ($generated@@257 ($generated@@92 ($generated@@415 $generated@@561) $generated@@564) $generated@@563) ($generated@@257 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@92 ($generated@@415 $generated@@561) $generated@@564))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@162 $generated@@561 ($generated@@440 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@348 $generated@@180 $generated@@180)) (= (type $generated@@566) $generated@@75)) (= (type $generated@@567) $generated@@75)) (= ($generated@@162 $generated@@565 ($generated@@448 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@180) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@565) $generated@@568))) (and ($generated@@257 ($generated@@92 ($generated@@423 $generated@@565) $generated@@568) $generated@@567) ($generated@@257 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@92 ($generated@@423 $generated@@565) $generated@@568))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@162 $generated@@565 ($generated@@448 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@180) (= (type $generated@@572) $generated@@180)) (< ($generated@@569 $generated@@571) ($generated@@570 ($generated@@256 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@256 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@180) (= (type $generated@@574) $generated@@180)) (< ($generated@@569 $generated@@574) ($generated@@570 ($generated@@256 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@256 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@180) (= (type $generated@@576) $generated@@75)) (= (type $generated@@577) $generated@@75)) ($generated@@257 $generated@@575 ($generated@@440 $generated@@576 $generated@@577))) (and (= ($generated@@305 ($generated@@367 ($generated@@330 $generated@@180 $generated@@180) $generated@@575)) $generated@@575) ($generated@@162 ($generated@@367 ($generated@@330 $generated@@180 $generated@@180) $generated@@575) ($generated@@440 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@257 $generated@@575 ($generated@@440 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@180) (= (type $generated@@579) $generated@@75)) (= (type $generated@@580) $generated@@75)) ($generated@@257 $generated@@578 ($generated@@448 $generated@@579 $generated@@580))) (and (= ($generated@@305 ($generated@@367 ($generated@@348 $generated@@180 $generated@@180) $generated@@578)) $generated@@578) ($generated@@162 ($generated@@367 ($generated@@348 $generated@@180 $generated@@180) $generated@@578) ($generated@@448 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@257 $generated@@578 ($generated@@448 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@75) (= (type $generated@@582) $generated@@75)) (= (type $generated@@583) $generated@@180)) ($generated@@257 $generated@@583 ($generated@@170 $generated@@581 $generated@@582))) (and (= ($generated@@305 ($generated@@367 $generated@@171 $generated@@583)) $generated@@583) ($generated@@162 ($generated@@367 $generated@@171 $generated@@583) ($generated@@170 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@257 $generated@@583 ($generated@@170 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (not ($generated@@0 ($generated@@92 ($generated@@459 $generated@@585) $generated@@584))))
 :pattern ( (let (($generated@@585 (type $generated@@584)))
($generated@@92 ($generated@@459 $generated@@585) $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@75) (= (type $generated@@587) $generated@@75)) (and (= ($generated@@83 ($generated@@170 $generated@@586 $generated@@587)) $generated@@64) (= ($generated@@324 ($generated@@170 $generated@@586 $generated@@587)) $generated@@71)))
 :pattern ( ($generated@@170 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@171) (= ($generated@@569 ($generated@@305 $generated@@588)) ($generated@@570 $generated@@588)))
 :pattern ( ($generated@@569 ($generated@@305 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@180) ($generated@@257 $generated@@589 ($generated@@86 0))) (and (= ($generated@@305 ($generated@@367 $generated@@2 $generated@@589)) $generated@@589) ($generated@@162 ($generated@@367 ($generated@@87 $generated@@180 $generated@@4) $generated@@589) ($generated@@86 0))))
 :pattern ( ($generated@@257 $generated@@589 ($generated@@86 0)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@180) (= (type $generated@@591) $generated@@75)) ($generated@@257 $generated@@590 ($generated@@266 $generated@@591))) (and (= ($generated@@305 ($generated@@367 ($generated@@87 $generated@@180 $generated@@4) $generated@@590)) $generated@@590) ($generated@@162 ($generated@@367 ($generated@@87 $generated@@180 $generated@@4) $generated@@590) ($generated@@266 $generated@@591))))
 :pattern ( ($generated@@257 $generated@@590 ($generated@@266 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@180) (= (type $generated@@593) $generated@@75)) ($generated@@257 $generated@@592 ($generated@@271 $generated@@593))) (and (= ($generated@@305 ($generated@@367 ($generated@@87 $generated@@180 $generated@@4) $generated@@592)) $generated@@592) ($generated@@162 ($generated@@367 ($generated@@87 $generated@@180 $generated@@4) $generated@@592) ($generated@@271 $generated@@593))))
 :pattern ( ($generated@@257 $generated@@592 ($generated@@271 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@180) (= (type $generated@@595) $generated@@75)) ($generated@@257 $generated@@594 ($generated@@185 $generated@@595))) (and (= ($generated@@305 ($generated@@367 ($generated@@87 $generated@@180 $generated@@2) $generated@@594)) $generated@@594) ($generated@@162 ($generated@@367 ($generated@@87 $generated@@180 $generated@@2) $generated@@594) ($generated@@185 $generated@@595))))
 :pattern ( ($generated@@257 $generated@@594 ($generated@@185 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@180) (= (type $generated@@597) $generated@@75)) ($generated@@257 $generated@@596 ($generated@@525 $generated@@597))) (and (= ($generated@@305 ($generated@@367 ($generated@@297 $generated@@180) $generated@@596)) $generated@@596) ($generated@@162 ($generated@@367 ($generated@@297 $generated@@180) $generated@@596) ($generated@@525 $generated@@597))))
 :pattern ( ($generated@@257 $generated@@596 ($generated@@525 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@75) (= (type $generated@@599) $generated@@180)) ($generated@@257 $generated@@599 ($generated@@147 $generated@@598))) (and (= ($generated@@305 ($generated@@367 $generated@@88 $generated@@599)) $generated@@599) ($generated@@162 ($generated@@367 $generated@@88 $generated@@599) ($generated@@147 $generated@@598))))
 :pattern ( ($generated@@257 $generated@@599 ($generated@@147 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@75) (= (type $generated@@601) $generated@@180)) ($generated@@257 $generated@@601 ($generated@@164 $generated@@600))) (and (= ($generated@@305 ($generated@@367 $generated@@88 $generated@@601)) $generated@@601) ($generated@@162 ($generated@@367 $generated@@88 $generated@@601) ($generated@@164 $generated@@600))))
 :pattern ( ($generated@@257 $generated@@601 ($generated@@164 $generated@@600)))
)))
(assert (= ($generated@@83 $generated@@156) $generated@@65))
(assert (= ($generated@@324 $generated@@156) $generated@@72))
(assert (= ($generated@@83 $generated@@153) $generated@@66))
(assert (= ($generated@@324 $generated@@153) $generated@@73))
(assert (= ($generated@@83 $generated@@250) $generated@@67))
(assert (= ($generated@@324 $generated@@250) $generated@@72))
(assert (= ($generated@@83 $generated@@253) $generated@@68))
(assert (= ($generated@@324 $generated@@253) $generated@@74))
(assert (= ($generated@@83 $generated@@159) $generated@@69))
(assert (= ($generated@@324 $generated@@159) $generated@@74))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@87 $generated@@180 $generated@@2)) (= (type $generated@@603) $generated@@75)) (= (type $generated@@604) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@602 ($generated@@185 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@180) (< 0 ($generated ($generated@@92 $generated@@602 $generated@@605)))) ($generated@@283 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@92 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@85 $generated@@602 ($generated@@185 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@171) (= (type $generated@@607) $generated@@75)) (= (type $generated@@608) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@282 $generated@@608) (and ($generated@@169 $generated@@606) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) $generated@@75) ($generated@@85 $generated@@606 ($generated@@170 $generated@@607 $generated@@609) $generated@@608))
 :pattern ( ($generated@@85 $generated@@606 ($generated@@170 $generated@@607 $generated@@609) $generated@@608))
))))) ($generated@@283 ($generated@@178 $generated@@606) $generated@@607 $generated@@608))
 :pattern ( ($generated@@283 ($generated@@178 $generated@@606) $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@171) (= (type $generated@@611) $generated@@75)) (= (type $generated@@612) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@282 $generated@@612) (and ($generated@@169 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@75) ($generated@@85 $generated@@610 ($generated@@170 $generated@@613 $generated@@611) $generated@@612))
 :pattern ( ($generated@@85 $generated@@610 ($generated@@170 $generated@@613 $generated@@611) $generated@@612))
))))) ($generated@@283 ($generated@@179 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@283 ($generated@@179 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) (= ($generated@@162 $generated@@614 $generated@@153)  (and (<= ($generated@@276 0) ($generated $generated@@614)) (< ($generated $generated@@614) 18446744073709551616))))
 :pattern ( ($generated@@162 $generated@@614 $generated@@153))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@180) (= (type $generated@@616) $generated@@180)) (= ($generated@@256 ($generated@@278 $generated@@615) ($generated@@278 $generated@@616)) ($generated@@278 ($generated@@256 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@256 ($generated@@278 $generated@@615) ($generated@@278 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@276 $generated@@617))) ($generated@@278 ($generated@@305 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@276 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@305 ($generated@@278 $generated@@618)) ($generated@@278 ($generated@@305 $generated@@618)))
 :pattern ( ($generated@@305 ($generated@@278 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@298 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@297 $generated@@620)) (= ($generated@@296 $generated@@619) 0)) (= $generated@@619 ($generated@@295 $generated@@620))))
 :pattern ( ($generated@@296 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@87 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@318 ($generated@@93 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@318 $generated@@621) ($generated ($generated@@92 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@318 ($generated@@93 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@626) $generated@@2)) ($generated@@85 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@85 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@628) $generated@@3)) ($generated@@85 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@85 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@630) $generated@@4)) ($generated@@85 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@85 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@632) $generated@@483)) ($generated@@85 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@85 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@634) $generated@@180)) ($generated@@85 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@85 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@297 $generated@@180)) (= (type $generated@@636) $generated@@75)) (= ($generated@@162 $generated@@635 ($generated@@525 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@296 $generated@@635))) ($generated@@257 ($generated@@526 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@526 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@162 $generated@@635 ($generated@@525 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@297 $generated@@180)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@296 $generated@@639))) (< ($generated@@570 ($generated@@367 $generated@@171 ($generated@@526 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@570 ($generated@@367 $generated@@171 ($generated@@526 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@330 $generated@@180 $generated@@180)) (= (type $generated@@642) $generated@@75)) (= (type $generated@@643) $generated@@75)) ($generated@@162 $generated@@641 ($generated@@440 $generated@@642 $generated@@643))) (and (and ($generated@@162 ($generated@@328 $generated@@641) ($generated@@266 $generated@@642)) ($generated@@162 ($generated@@383 $generated@@641) ($generated@@266 $generated@@643))) ($generated@@162 ($generated@@414 $generated@@641) ($generated@@266 ($generated@@170 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@162 $generated@@641 ($generated@@440 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@348 $generated@@180 $generated@@180)) (= (type $generated@@645) $generated@@75)) (= (type $generated@@646) $generated@@75)) ($generated@@162 $generated@@644 ($generated@@448 $generated@@645 $generated@@646))) (and (and ($generated@@162 ($generated@@346 $generated@@644) ($generated@@271 $generated@@645)) ($generated@@162 ($generated@@394 $generated@@644) ($generated@@271 $generated@@646))) ($generated@@162 ($generated@@422 $generated@@644) ($generated@@271 ($generated@@170 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@162 $generated@@644 ($generated@@448 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@162 $generated@@647 $generated@@46))
 :pattern ( ($generated@@162 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@162 $generated@@648 $generated@@47))
 :pattern ( ($generated@@162 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@162 $generated@@649 $generated@@44))
 :pattern ( ($generated@@162 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@483) ($generated@@162 $generated@@650 $generated@@45))
 :pattern ( ($generated@@162 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@180) ($generated@@162 $generated@@651 $generated@@48))
 :pattern ( ($generated@@162 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Bool)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () Bool)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@652) ($generated@@196 $generated@@88 $generated@@4)) (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@658) $generated@@88)) (= (type $generated@@659) $generated@@75)) (= (type $generated@@660) $generated@@75)) (= (type $generated@@661) $generated@@180)) (= (type $generated@@662) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@664) $generated@@88)) (= (type $generated@@667) $generated@@88)) (= (type $generated@@668) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@669) $generated@@88)) (= (type $generated@@672) $generated@@88)) (= (type $generated@@673) $generated@@75)) (= (type $generated@@674) $generated@@75)) (= (type $generated@@675) $generated@@180)) (= (type $generated@@676) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@677) $generated@@88)) (= (type $generated@@678) $generated@@88)) (= (type $generated@@679) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@680) $generated@@88)) (= (type $generated@@681) $generated@@88)) (= (type $generated@@683) $generated@@88)) (= (type $generated@@684) $generated@@88)) (= (type $generated@@686) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@688  (=> (and (= $generated@@652 ($generated@@195 $generated@@148 $generated@@653 $generated@@60 false)) (= $generated@@654 ($generated@@276 5))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= ($generated@@276 0) $generated@@654) (< $generated@@654 18446744073709551616))) (=> (and (<= ($generated@@276 0) $generated@@654) (< $generated@@654 18446744073709551616)) (=> (and (= $generated@@655 ($generated@@276 5)) (= $generated@@656 ($generated@@276 42))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@276 0) $generated@@656) (< $generated@@656 18446744073709551616))) (=> (and (<= ($generated@@276 0) $generated@@656) (< $generated@@656 18446744073709551616)) (=> (= $generated@@657 ($generated@@276 42)) (=> (and ($generated@@162 $generated@@658 ($generated@@164 $generated@@659)) ($generated@@85 $generated@@658 ($generated@@164 $generated@@659) $generated@@653)) (=> (and (and (= $generated@@660 $generated@@153) (= $generated@@661 ($generated@@305 ($generated@@8 $generated@@657)))) (and ($generated@@282 $generated@@662) ($generated@@663 $generated@@662))) (=> (and (and (and ($generated@@162 $generated@@664 ($generated@@164 $generated@@660)) ($generated@@85 $generated@@664 ($generated@@164 $generated@@660) $generated@@662)) (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@88) (=> (and (not (= $generated@@689 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@653 $generated@@689) $generated@@60))) (= ($generated@@92 $generated@@662 $generated@@689) ($generated@@92 $generated@@653 $generated@@689))))
 :pattern ( ($generated@@92 $generated@@662 $generated@@689))
))) (and ($generated@@143 $generated@@653 $generated@@662) (= $generated@@665 ($generated@@276 21)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@276 0) $generated@@665) (< $generated@@665 18446744073709551616))) (=> (and (<= ($generated@@276 0) $generated@@665) (< $generated@@665 18446744073709551616)) (=> (= $generated@@666 ($generated@@276 21)) (=> (and (not (= $generated@@667 $generated@@148)) (and ($generated@@162 $generated@@667 $generated@@250) ($generated@@85 $generated@@667 $generated@@250 $generated@@653))) (=> (and (and (and ($generated@@282 $generated@@668) ($generated@@663 $generated@@668)) (and (not (= $generated@@669 $generated@@148)) (and ($generated@@162 $generated@@669 $generated@@250) ($generated@@85 $generated@@669 $generated@@250 $generated@@668)))) (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@662 $generated@@669) $generated@@60))) (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@88) (=> (and (not (= $generated@@690 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@662 $generated@@690) $generated@@60))) (= ($generated@@92 $generated@@668 $generated@@690) ($generated@@92 $generated@@662 $generated@@690))))
 :pattern ( ($generated@@92 $generated@@668 $generated@@690))
))) (and ($generated@@143 $generated@@662 $generated@@668) (= $generated@@670 ($generated@@276 3))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@276 0) $generated@@670) (< $generated@@670 18446744073709551616))) (=> (and (<= ($generated@@276 0) $generated@@670) (< $generated@@670 18446744073709551616)) (=> (= $generated@@671 ($generated@@276 3)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (and ($generated@@162 $generated@@672 ($generated@@164 $generated@@673)) ($generated@@85 $generated@@672 ($generated@@164 $generated@@673) $generated@@653)) (and (= $generated@@674 $generated@@250) (= $generated@@675 ($generated@@305 $generated@@669)))) (=> (and (and (and (and ($generated@@282 $generated@@676) ($generated@@663 $generated@@676)) (and ($generated@@162 $generated@@677 ($generated@@164 $generated@@674)) ($generated@@85 $generated@@677 ($generated@@164 $generated@@674) $generated@@676))) (and (and (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@88) (=> (and (not (= $generated@@691 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@668 $generated@@691) $generated@@60))) (= ($generated@@92 $generated@@676 $generated@@691) ($generated@@92 $generated@@668 $generated@@691))))
 :pattern ( ($generated@@92 $generated@@676 $generated@@691))
)) ($generated@@143 $generated@@668 $generated@@676)) (and (not (= $generated@@678 $generated@@148)) (and ($generated@@162 $generated@@678 $generated@@253) ($generated@@85 $generated@@678 $generated@@253 $generated@@653))))) (and (and (and ($generated@@282 $generated@@679) ($generated@@663 $generated@@679)) (and (not (= $generated@@680 $generated@@148)) (and ($generated@@162 $generated@@680 $generated@@253) ($generated@@85 $generated@@680 $generated@@253 $generated@@679)))) (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@676 $generated@@680) $generated@@60))) (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@88) (=> (and (not (= $generated@@692 $generated@@148)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@676 $generated@@692) $generated@@60))) (= ($generated@@92 $generated@@679 $generated@@692) ($generated@@92 $generated@@676 $generated@@692))))
 :pattern ( ($generated@@92 $generated@@679 $generated@@692))
))) (and ($generated@@143 $generated@@676 $generated@@679) (= (ControlFlow 0 2) (- 0 1)))))) true)))))))))))))))))))))))
(let (($generated@@693  (=> (and ($generated@@282 $generated@@653) ($generated@@663 $generated@@653)) (=> (and (and (and (and ($generated@@162 $generated@@681 ($generated@@164 $generated@@153)) ($generated@@85 $generated@@681 ($generated@@164 $generated@@153) $generated@@653)) true) (and (=> $generated@@682 (and ($generated@@162 $generated@@683 $generated@@250) ($generated@@85 $generated@@683 $generated@@250 $generated@@653))) true)) (and (and (and ($generated@@162 $generated@@684 ($generated@@164 $generated@@250)) ($generated@@85 $generated@@684 ($generated@@164 $generated@@250) $generated@@653)) true) (and (and (=> $generated@@685 (and ($generated@@162 $generated@@686 $generated@@253) ($generated@@85 $generated@@686 $generated@@253 $generated@@653))) true) (and (= 2 $generated@@687) (= (ControlFlow 0 8) 2))))) $generated@@688))))
$generated@@693)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
