(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int) Int)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U Int Int) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (Int) T@U)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87)) 12))) (forall (($generated@@88 T@T) ) (! (= ($generated@@86 ($generated@@78 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@78 $generated@@88))
))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@74 $generated@@89)) $generated@@77)
 :pattern ( ($generated@@74 $generated@@89))
))) (forall (($generated@@90 T@U) ) (! (let (($generated@@91 (type $generated@@90)))
(= (type ($generated@@75 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@75 $generated@@90))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@82 $generated@@92)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@U) ) (! (= (type ($generated@@84 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@84 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 Int) ) (! (let (($generated@@97 ($generated@@86 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (and (and (= (type $generated@@98) $generated@@77) (= (type $generated@@99) ($generated@@78 $generated@@79))) (or ($generated@@80 ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@99 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) ($generated@@76 $generated@@100)) (<= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101))) (<= ($generated@@76 $generated@@101) ($generated@@83 ($generated@@75 $generated@@99)))))))) (and (=> (not (= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101))) ($generated@@80 ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 (- $generated@@101 1)))) (= ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) (ite (= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) 0 (+ ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 (- $generated@@101 1))) ($generated ($generated@@84 $generated@@2 ($generated@@85 ($generated@@75 $generated@@99) ($generated@@76 (- $generated@@101 1))))))))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 Int) ) (!  (=> (and (and (= (type $generated@@102) $generated@@77) (= (type $generated@@103) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@103 $generated@@104 $generated@@105) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@103 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) $generated@@104) (<= $generated@@104 $generated@@105)) (<= $generated@@105 ($generated@@83 $generated@@103))))))) (and (=> (not (= $generated@@104 $generated@@105)) ($generated@@80 $generated@@103 $generated@@104 (- $generated@@105 1))) (= ($generated@@73 ($generated@@74 $generated@@102) $generated@@103 $generated@@104 $generated@@105) (ite (= $generated@@104 $generated@@105) 0 (+ ($generated@@73 $generated@@102 $generated@@103 $generated@@104 (- $generated@@105 1)) ($generated ($generated@@84 $generated@@2 ($generated@@85 $generated@@103 (- $generated@@105 1)))))))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@102) $generated@@103 $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ) (! (= (type ($generated@@106 $generated@@107)) $generated@@65)
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (= ($generated@@106 $generated@@44) $generated@@49))
(assert (= ($generated@@106 $generated@@45) $generated@@50))
(assert (= ($generated@@106 $generated@@46) $generated@@51))
(assert (= ($generated@@106 $generated@@47) $generated@@52))
(assert (= ($generated@@106 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (= ($generated@@1 ($generated@@110 $generated@@119 $generated@@120)) 14)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@110 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@110 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@114 (type $generated@@125))))
(= (type ($generated@@115 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@115 $generated@@125 $generated@@126))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 (type $generated@@130)))
(let (($generated@@132 (type $generated@@129)))
(= (type ($generated@@116 $generated@@128 $generated@@129 $generated@@130)) ($generated@@110 $generated@@132 $generated@@131))))
 :pattern ( ($generated@@116 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@114 (type $generated@@133))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@115 ($generated@@116 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@115 ($generated@@116 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@115 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@115 ($generated@@116 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@115 $generated@@142 $generated@@144)))
 :weight 0
)))) (= ($generated@@1 $generated@@111) 15)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@67 (type $generated@@146))))
(= (type ($generated@@117 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@117 $generated@@145 $generated@@146))
))) (= ($generated@@1 $generated@@112) 16)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@118 $generated@@148 $generated@@149 $generated@@150)) $generated@@112)
 :pattern ( ($generated@@118 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@67 (type $generated@@152))))
 (=> (= (type $generated@@153) $generated@@154) (= ($generated@@117 ($generated@@118 $generated@@151 $generated@@152 $generated@@153) $generated@@152) $generated@@153)))
 :weight 0
))) (and (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@157 $generated@@158) (= ($generated@@117 ($generated@@118 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@117 $generated@@156 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@117 $generated@@160 $generated@@162)))
 :weight 0
)))) (forall (($generated@@163 Int) ) (! (= (type ($generated@@109 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@109 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@2) (= (type $generated@@165) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@108 $generated@@164 ($generated@@109 0) $generated@@165))
 :pattern ( ($generated@@108 $generated@@164 ($generated@@109 0) $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@81 $generated@@166 ($generated@@109 0)))
 :pattern ( ($generated@@81 $generated@@166 ($generated@@109 0)))
)))
(assert  (and (= ($generated@@1 $generated@@169) 17) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@170 $generated@@171)) $generated@@64)
 :pattern ( ($generated@@168 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (and (= (type $generated@@172) $generated@@64) (= (type $generated@@173) $generated@@64)) (= (type $generated@@174) $generated@@169)) ($generated@@81 $generated@@174 ($generated@@168 $generated@@172 $generated@@173))) ($generated@@167 $generated@@174))
 :pattern ( ($generated@@167 $generated@@174) ($generated@@81 $generated@@174 ($generated@@168 $generated@@172 $generated@@173)))
)))
(assert  (and (forall (($generated@@178 T@U) ) (! (= (type ($generated@@176 $generated@@178)) $generated@@79)
 :pattern ( ($generated@@176 $generated@@178))
)) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@79)
 :pattern ( ($generated@@177 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@169) (= (type $generated@@181) $generated@@169)) true) (= ($generated@@175 $generated@@180 $generated@@181)  (and (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)) (= ($generated@@177 $generated@@180) ($generated@@177 $generated@@181)))))
 :pattern ( ($generated@@175 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@186) $generated@@64)) ($generated@@81 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@81 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 18)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@111 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@67 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@111) (= (type $generated@@237) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@238) ($generated@@66 $generated@@4))) (= (type $generated@@240) $generated@@111)) (= (type $generated@@241) ($generated@@66 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@189 $generated@@111 $generated@@4))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@67 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@111) (= (type $generated@@249) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@250) ($generated@@66 $generated@@4))) (= (type $generated@@252) $generated@@111)) (= (type $generated@@253) ($generated@@66 $generated@@254))) (= ($generated@@0 ($generated@@187 ($generated@@243 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@187 ($generated@@243 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@169)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) $generated@@64)) (= (type $generated@@261) $generated@@79)) (= (type $generated@@262) $generated@@79)) (= ($generated@@81 ($generated@@255 $generated@@261 $generated@@262) ($generated@@168 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@81 ($generated@@255 $generated@@261 $generated@@262) ($generated@@168 $generated@@259 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@169) (= (type $generated@@264) $generated@@169)) (= ($generated@@175 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@175 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@64)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@268) $generated@@64)) (= ($generated@@81 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@79) ($generated@@0 ($generated@@115 $generated@@267 $generated@@269))) ($generated@@256 $generated@@269 $generated@@268))
 :pattern ( ($generated@@115 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@81 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@64)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@273) $generated@@64)) (= ($generated@@81 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@79) ($generated@@0 ($generated@@115 $generated@@272 $generated@@274))) ($generated@@256 $generated@@274 $generated@@273))
 :pattern ( ($generated@@115 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@81 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@76 $generated@@275) $generated@@275)
 :pattern ( ($generated@@76 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@75 $generated@@276) $generated@@276)
 :pattern ( ($generated@@75 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@64)) (= (type $generated@@281) $generated@@79)) (= (type $generated@@282) $generated@@79)) (= (type $generated@@283) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@277 $generated@@283)) (= ($generated@@108 ($generated@@255 $generated@@281 $generated@@282) ($generated@@168 $generated@@279 $generated@@280) $generated@@283)  (and ($generated@@278 $generated@@281 $generated@@279 $generated@@283) ($generated@@278 $generated@@282 $generated@@280 $generated@@283))))
 :pattern ( ($generated@@108 ($generated@@255 $generated@@281 $generated@@282) ($generated@@168 $generated@@279 $generated@@280) $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@169) (= ($generated@@167 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@167 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@169) ($generated@@167 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@79) (= (type $generated@@289) $generated@@79)) (= $generated@@287 ($generated@@255 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@167 $generated@@287))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@78 $generated@@291))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@83 ($generated@@290 $generated@@292)) 0)
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert  (and (forall (($generated@@295 T@U) ) (! (= (type ($generated@@293 $generated@@295)) $generated@@77)
 :pattern ( ($generated@@293 $generated@@295))
)) (= (type $generated@@294) $generated@@77)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (!  (=> (and (= (type $generated@@296) $generated@@77) (= (type $generated@@297) ($generated@@78 $generated@@79))) (= ($generated@@73 $generated@@296 $generated@@297 $generated@@298 $generated@@299) ($generated@@73 $generated@@294 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@73 ($generated@@293 $generated@@296) $generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@79)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@278 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@108 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@278 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@110 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@113 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@110 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@115 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@110 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@115 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@115 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@110 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@115 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@115 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@113 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@110 $generated@@348 $generated@@2)) (= ($generated@@183 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@115 $generated@@347 $generated@@349))) (<= ($generated ($generated@@115 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@115 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@183 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@315 (type $generated@@350))))
(let (($generated@@352 ($generated@@314 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@313 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@312 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@311 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@110 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(let (($generated@@359 ($generated@@314 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@313 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@312 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@115 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@333 (type $generated@@361))))
(let (($generated@@363 ($generated@@332 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@331 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@330 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@329 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@333 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@110 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@333 (type $generated@@368))))
(let (($generated@@370 ($generated@@332 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@331 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@330 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@115 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@81 $generated@@372 ($generated@@182 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (< 0 ($generated ($generated@@115 $generated@@372 $generated@@374)))) ($generated@@256 $generated@@374 $generated@@373))
 :pattern ( ($generated@@115 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@81 $generated@@372 ($generated@@182 $generated@@373)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 Int) ($generated@@378 Int) ) (!  (=> (and (and (= (type $generated@@375) $generated@@77) (= (type $generated@@376) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@376 $generated@@377 $generated@@378) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@376 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) $generated@@377) (<= $generated@@377 $generated@@378)) (<= $generated@@378 ($generated@@83 $generated@@376))))))) true)
 :pattern ( ($generated@@73 $generated@@375 $generated@@376 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@379 ($generated@@265 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@79) ($generated@@0 ($generated@@115 $generated@@379 $generated@@382))) ($generated@@278 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@115 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@108 $generated@@379 ($generated@@265 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@383 ($generated@@270 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@79) ($generated@@0 ($generated@@115 $generated@@383 $generated@@386))) ($generated@@278 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@115 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@108 $generated@@383 ($generated@@270 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@115 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@115 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@110 $generated@@79 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@110 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@396) $generated@@79)) (= ($generated@@0 ($generated@@115 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@115 ($generated@@311 $generated@@395) ($generated@@176 ($generated@@84 $generated@@169 $generated@@396)))) (= ($generated@@115 ($generated@@390 $generated@@395) ($generated@@176 ($generated@@84 $generated@@169 $generated@@396))) ($generated@@177 ($generated@@84 $generated@@169 $generated@@396))))))
 :pattern ( ($generated@@115 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@110 $generated@@79 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@110 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@404) $generated@@79)) (= ($generated@@0 ($generated@@115 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@115 ($generated@@329 $generated@@403) ($generated@@176 ($generated@@84 $generated@@169 $generated@@404)))) (= ($generated@@115 ($generated@@398 $generated@@403) ($generated@@176 ($generated@@84 $generated@@169 $generated@@404))) ($generated@@177 ($generated@@84 $generated@@169 $generated@@404))))))
 :pattern ( ($generated@@115 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@115 ($generated@@354 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@115 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@115 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@115 ($generated@@354 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@115 ($generated@@365 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@115 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@115 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@115 ($generated@@365 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@278 ($generated@@115 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@278 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@108 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@278 ($generated@@115 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@278 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@108 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@110 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@333 (type $generated@@433))))
(let (($generated@@435 ($generated@@332 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@331 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@330 $generated@@435 $generated@@434)) (= ($generated@@329 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@329 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@365 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@365 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@397 $generated@@439) ($generated@@431 $generated@@79))))))
 :pattern ( ($generated@@397 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@315 (type $generated@@442))))
(let (($generated@@444 ($generated@@314 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@313 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@312 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@79) (= (type $generated@@446) $generated@@79)) ($generated@@0 ($generated@@115 ($generated@@389 $generated@@442) ($generated@@300 ($generated@@255 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@333 (type $generated@@447))))
(let (($generated@@449 ($generated@@332 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@331 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@330 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@79) (= (type $generated@@451) $generated@@79)) ($generated@@0 ($generated@@115 ($generated@@397 $generated@@447) ($generated@@300 ($generated@@255 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@397 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@79) ($generated@@256 $generated@@452 $generated@@46)) (and (= ($generated@@300 ($generated@@84 $generated@@2 $generated@@452)) $generated@@452) ($generated@@81 ($generated@@84 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@79) ($generated@@256 $generated@@453 $generated@@47)) (and (= ($generated@@300 ($generated@@84 $generated@@3 $generated@@453)) $generated@@453) ($generated@@81 ($generated@@84 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@79) ($generated@@256 $generated@@454 $generated@@44)) (and (= ($generated@@300 ($generated@@84 $generated@@4 $generated@@454)) $generated@@454) ($generated@@81 ($generated@@84 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 21))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@79) ($generated@@256 $generated@@456 $generated@@45)) (and (= ($generated@@300 ($generated@@84 $generated@@455 $generated@@456)) $generated@@456) ($generated@@81 ($generated@@84 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@64) (= ($generated@@256 ($generated@@300 $generated@@457) $generated@@458) ($generated@@81 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@256 ($generated@@300 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@113 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@110 $generated@@460 $generated@@2)) (<= 0 ($generated@@305 $generated@@459))))
 :pattern ( ($generated@@305 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@86 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@78 $generated@@462)) (<= 0 ($generated@@83 $generated@@461))))
 :pattern ( ($generated@@83 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@415 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@415 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@415 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@106 ($generated@@415 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@423 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@423 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@423 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@106 ($generated@@423 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@79) (= (type $generated@@484) $generated@@79)) (= ($generated@@284 ($generated@@255 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@255 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@168 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@168 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@168 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@168 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@79) (= (type $generated@@494) $generated@@79)) (= ($generated@@176 ($generated@@255 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@255 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@79) (= (type $generated@@496) $generated@@79)) (= ($generated@@177 ($generated@@255 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@255 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@78 $generated@@79)) (= (type $generated@@498) $generated@@64)) (= (type $generated@@499) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@497 ($generated@@82 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@83 $generated@@497))) ($generated@@278 ($generated@@85 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@85 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@108 $generated@@497 ($generated@@82 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@109 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@109 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@265 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@265 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@106 ($generated@@265 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@270 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@270 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@106 ($generated@@270 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@182 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@182 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@106 ($generated@@182 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@82 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@82 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@106 ($generated@@82 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@82 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@84 $generated@@520 ($generated@@300 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@300 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) (= ($generated@@81 $generated@@521 ($generated@@415 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@521) $generated@@524))) (and ($generated@@256 ($generated@@115 ($generated@@390 $generated@@521) $generated@@524) $generated@@523) ($generated@@256 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@521) $generated@@524))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@81 $generated@@521 ($generated@@415 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@81 $generated@@525 ($generated@@423 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@525) $generated@@528))) (and ($generated@@256 ($generated@@115 ($generated@@398 $generated@@525) $generated@@528) $generated@@527) ($generated@@256 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@525) $generated@@528))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@81 $generated@@525 ($generated@@423 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@79) (= (type $generated@@532) $generated@@79)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@255 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@255 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@79) (= (type $generated@@534) $generated@@79)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@255 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@255 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 Int) ($generated@@538 Int) ) (!  (=> (and (= (type $generated@@535) $generated@@77) (= (type $generated@@536) ($generated@@78 $generated@@79))) (= ($generated@@73 ($generated@@74 $generated@@535) $generated@@536 $generated@@537 $generated@@538) ($generated@@73 $generated@@535 $generated@@536 $generated@@537 $generated@@538)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@535) $generated@@536 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@79) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@256 $generated@@539 ($generated@@415 $generated@@540 $generated@@541))) (and (= ($generated@@300 ($generated@@84 ($generated@@313 $generated@@79 $generated@@79) $generated@@539)) $generated@@539) ($generated@@81 ($generated@@84 ($generated@@313 $generated@@79 $generated@@79) $generated@@539) ($generated@@415 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@256 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@79) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@256 $generated@@542 ($generated@@423 $generated@@543 $generated@@544))) (and (= ($generated@@300 ($generated@@84 ($generated@@331 $generated@@79 $generated@@79) $generated@@542)) $generated@@542) ($generated@@81 ($generated@@84 ($generated@@331 $generated@@79 $generated@@79) $generated@@542) ($generated@@423 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@256 $generated@@542 ($generated@@423 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@64) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@79)) ($generated@@256 $generated@@547 ($generated@@168 $generated@@545 $generated@@546))) (and (= ($generated@@300 ($generated@@84 $generated@@169 $generated@@547)) $generated@@547) ($generated@@81 ($generated@@84 $generated@@169 $generated@@547) ($generated@@168 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@256 $generated@@547 ($generated@@168 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@115 ($generated@@431 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@115 ($generated@@431 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@69)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (and (= ($generated@@106 ($generated@@168 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@168 $generated@@552 $generated@@553)) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@169) (= ($generated@@529 ($generated@@300 $generated@@554)) ($generated@@530 $generated@@554)))
 :pattern ( ($generated@@529 ($generated@@300 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@79) ($generated@@256 $generated@@555 ($generated@@109 0))) (and (= ($generated@@300 ($generated@@84 $generated@@2 $generated@@555)) $generated@@555) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@555) ($generated@@109 0))))
 :pattern ( ($generated@@256 $generated@@555 ($generated@@109 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@79) (= (type $generated@@557) $generated@@64)) ($generated@@256 $generated@@556 ($generated@@265 $generated@@557))) (and (= ($generated@@300 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@556)) $generated@@556) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@556) ($generated@@265 $generated@@557))))
 :pattern ( ($generated@@256 $generated@@556 ($generated@@265 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@79) (= (type $generated@@559) $generated@@64)) ($generated@@256 $generated@@558 ($generated@@270 $generated@@559))) (and (= ($generated@@300 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@558)) $generated@@558) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@558) ($generated@@270 $generated@@559))))
 :pattern ( ($generated@@256 $generated@@558 ($generated@@270 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@79) (= (type $generated@@561) $generated@@64)) ($generated@@256 $generated@@560 ($generated@@182 $generated@@561))) (and (= ($generated@@300 ($generated@@84 ($generated@@110 $generated@@79 $generated@@2) $generated@@560)) $generated@@560) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@2) $generated@@560) ($generated@@182 $generated@@561))))
 :pattern ( ($generated@@256 $generated@@560 ($generated@@182 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@79) (= (type $generated@@563) $generated@@64)) ($generated@@256 $generated@@562 ($generated@@82 $generated@@563))) (and (= ($generated@@300 ($generated@@84 ($generated@@78 $generated@@79) $generated@@562)) $generated@@562) ($generated@@81 ($generated@@84 ($generated@@78 $generated@@79) $generated@@562) ($generated@@82 $generated@@563))))
 :pattern ( ($generated@@256 $generated@@562 ($generated@@82 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@564 ($generated@@182 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@79) (< 0 ($generated ($generated@@115 $generated@@564 $generated@@567)))) ($generated@@278 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@115 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@108 $generated@@564 ($generated@@182 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@169) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@110 $generated@@111 $generated@@112))) (and ($generated@@277 $generated@@570) (and ($generated@@167 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@64) ($generated@@108 $generated@@568 ($generated@@168 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@108 $generated@@568 ($generated@@168 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@278 ($generated@@176 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@278 ($generated@@176 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@169) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@110 $generated@@111 $generated@@112))) (and ($generated@@277 $generated@@574) (and ($generated@@167 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@108 $generated@@572 ($generated@@168 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@108 $generated@@572 ($generated@@168 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@278 ($generated@@177 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@278 ($generated@@177 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@79) (= (type $generated@@577) $generated@@79)) (= ($generated@@255 ($generated@@75 $generated@@576) ($generated@@75 $generated@@577)) ($generated@@75 ($generated@@255 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@255 ($generated@@75 $generated@@576) ($generated@@75 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@76 $generated@@578))) ($generated@@75 ($generated@@300 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@76 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@300 ($generated@@75 $generated@@579)) ($generated@@75 ($generated@@300 $generated@@579)))
 :pattern ( ($generated@@300 ($generated@@75 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@86 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@78 $generated@@581)) (= ($generated@@83 $generated@@580) 0)) (= $generated@@580 ($generated@@290 $generated@@581))))
 :pattern ( ($generated@@83 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@110 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@305 ($generated@@116 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@305 $generated@@582) ($generated ($generated@@115 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@305 ($generated@@116 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@587) $generated@@2)) ($generated@@108 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@108 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@589) $generated@@3)) ($generated@@108 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@108 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@591) $generated@@4)) ($generated@@108 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@108 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@593) $generated@@455)) ($generated@@108 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@108 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@595) $generated@@79)) ($generated@@108 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@108 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79)) (= (type $generated@@597) $generated@@64)) (= ($generated@@81 $generated@@596 ($generated@@82 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@83 $generated@@596))) ($generated@@256 ($generated@@85 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@85 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@81 $generated@@596 ($generated@@82 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@78 $generated@@79)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@83 $generated@@600))) (< ($generated@@530 ($generated@@84 $generated@@169 ($generated@@85 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@530 ($generated@@84 $generated@@169 ($generated@@85 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@81 $generated@@602 ($generated@@415 $generated@@603 $generated@@604))) (and (and ($generated@@81 ($generated@@311 $generated@@602) ($generated@@265 $generated@@603)) ($generated@@81 ($generated@@354 $generated@@602) ($generated@@265 $generated@@604))) ($generated@@81 ($generated@@389 $generated@@602) ($generated@@265 ($generated@@168 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@81 $generated@@602 ($generated@@415 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@81 $generated@@605 ($generated@@423 $generated@@606 $generated@@607))) (and (and ($generated@@81 ($generated@@329 $generated@@605) ($generated@@270 $generated@@606)) ($generated@@81 ($generated@@365 $generated@@605) ($generated@@270 $generated@@607))) ($generated@@81 ($generated@@397 $generated@@605) ($generated@@270 ($generated@@168 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@81 $generated@@605 ($generated@@423 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@81 $generated@@608 $generated@@46))
 :pattern ( ($generated@@81 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@81 $generated@@609 $generated@@47))
 :pattern ( ($generated@@81 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@81 $generated@@610 $generated@@44))
 :pattern ( ($generated@@81 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@455) ($generated@@81 $generated@@611 $generated@@45))
 :pattern ( ($generated@@81 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@79) ($generated@@81 $generated@@612 $generated@@48))
 :pattern ( ($generated@@81 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@615) ($generated@@78 $generated@@79)) (= (type $generated@@616) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@618) ($generated@@189 $generated@@111 $generated@@4))) (= (type $generated@@619) $generated@@111)) (= (type $generated@@620) ($generated@@189 $generated@@111 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@622  (=> (not (= $generated@@613 $generated@@614)) (=> (and (and ($generated@@108 $generated@@615 ($generated@@82 $generated@@46) $generated@@616) ($generated@@108 ($generated@@8 $generated@@613) $generated@@46 $generated@@616)) (and (= $generated@@617 (- $generated@@614 1)) ($generated@@108 ($generated@@8 $generated@@617) $generated@@46 $generated@@616))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (<= ($generated@@76 0) $generated@@613)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (<= $generated@@613 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (<= $generated@@617 ($generated@@83 $generated@@615))) (=> (and (and (<= ($generated@@76 0) $generated@@613) (<= $generated@@613 $generated@@617)) (<= $generated@@617 ($generated@@83 $generated@@615))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (or (<= 0 $generated@@613) (< ($generated@@599 $generated@@615) ($generated@@599 $generated@@615))) (= $generated@@613 $generated@@613))) (=> (or (or (<= 0 $generated@@613) (< ($generated@@599 $generated@@615) ($generated@@599 $generated@@615))) (= $generated@@613 $generated@@613)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (or (<= 0 $generated@@614) (< ($generated@@599 $generated@@615) ($generated@@599 $generated@@615))) (< $generated@@613 $generated@@613)) (= $generated@@617 $generated@@614))) (=> (or (or (or (<= 0 $generated@@614) (< ($generated@@599 $generated@@615) ($generated@@599 $generated@@615))) (< $generated@@613 $generated@@613)) (= $generated@@617 $generated@@614)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< ($generated@@599 $generated@@615) ($generated@@599 $generated@@615)) (and (= ($generated@@599 $generated@@615) ($generated@@599 $generated@@615)) (or (< $generated@@613 $generated@@613) (and (= $generated@@613 $generated@@613) (< $generated@@617 $generated@@614)))))) (=> (or (< ($generated@@599 $generated@@615) ($generated@@599 $generated@@615)) (and (= ($generated@@599 $generated@@615) ($generated@@599 $generated@@615)) (or (< $generated@@613 $generated@@613) (and (= $generated@@613 $generated@@613) (< $generated@@617 $generated@@614))))) (=> (and ($generated@@80 $generated@@615 $generated@@613 (- $generated@@614 1)) (= (ControlFlow 0 4) (- 0 3))) (and (<= 0 (- $generated@@614 1)) (< (- $generated@@614 1) ($generated@@83 $generated@@615))))))))))))))))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@618 ($generated@@243 $generated@@619 $generated@@616 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@623) (=> (= (ControlFlow 0 11) 4) $generated@@622)))))
(let (($generated@@625 true))
(let (($generated@@626  (=> (and (and (<= ($generated@@76 0) $generated@@613) (<= $generated@@613 $generated@@614)) (<= $generated@@614 ($generated@@83 $generated@@615))) (and (=> (= (ControlFlow 0 12) 1) $generated@@625) (=> (= (ControlFlow 0 12) 11) $generated@@624)))))
(let (($generated@@627  (=> (and (not (and (<= ($generated@@76 0) $generated@@613) (<= $generated@@613 $generated@@614))) (= (ControlFlow 0 14) 12)) $generated@@626)))
(let (($generated@@628  (=> (and (and (<= ($generated@@76 0) $generated@@613) (<= $generated@@613 $generated@@614)) (= (ControlFlow 0 13) 12)) $generated@@626)))
(let (($generated@@629  (=> (< $generated@@613 ($generated@@76 0)) (and (=> (= (ControlFlow 0 16) 13) $generated@@628) (=> (= (ControlFlow 0 16) 14) $generated@@627)))))
(let (($generated@@630  (=> (<= ($generated@@76 0) $generated@@613) (and (=> (= (ControlFlow 0 15) 13) $generated@@628) (=> (= (ControlFlow 0 15) 14) $generated@@627)))))
(let (($generated@@631  (=> (= $generated@@620 ($generated@@188 $generated@@619 $generated@@616 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@630) (=> (= (ControlFlow 0 17) 16) $generated@@629)))))
(let (($generated@@632  (=> (and (and (and ($generated@@277 $generated@@616) ($generated@@621 $generated@@616)) ($generated@@81 $generated@@615 ($generated@@82 $generated@@46))) (and (= 0 $generated@@72) (= (ControlFlow 0 18) 17))) $generated@@631)))
$generated@@632))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int) Int)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U Int Int) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (Int) T@U)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87)) 12))) (forall (($generated@@88 T@T) ) (! (= ($generated@@86 ($generated@@78 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@78 $generated@@88))
))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@74 $generated@@89)) $generated@@77)
 :pattern ( ($generated@@74 $generated@@89))
))) (forall (($generated@@90 T@U) ) (! (let (($generated@@91 (type $generated@@90)))
(= (type ($generated@@75 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@75 $generated@@90))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@82 $generated@@92)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@U) ) (! (= (type ($generated@@84 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@84 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 Int) ) (! (let (($generated@@97 ($generated@@86 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (and (and (= (type $generated@@98) $generated@@77) (= (type $generated@@99) ($generated@@78 $generated@@79))) (or ($generated@@80 ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@99 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) ($generated@@76 $generated@@100)) (<= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101))) (<= ($generated@@76 $generated@@101) ($generated@@83 ($generated@@75 $generated@@99)))))))) (and (=> (not (= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101))) ($generated@@80 ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 (- $generated@@101 1)))) (= ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) (ite (= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) 0 (+ ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 (- $generated@@101 1))) ($generated ($generated@@84 $generated@@2 ($generated@@85 ($generated@@75 $generated@@99) ($generated@@76 (- $generated@@101 1))))))))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 Int) ) (!  (=> (and (and (= (type $generated@@102) $generated@@77) (= (type $generated@@103) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@103 $generated@@104 $generated@@105) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@103 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) $generated@@104) (<= $generated@@104 $generated@@105)) (<= $generated@@105 ($generated@@83 $generated@@103))))))) (and (=> (not (= $generated@@104 $generated@@105)) ($generated@@80 $generated@@103 $generated@@104 (- $generated@@105 1))) (= ($generated@@73 ($generated@@74 $generated@@102) $generated@@103 $generated@@104 $generated@@105) (ite (= $generated@@104 $generated@@105) 0 (+ ($generated@@73 $generated@@102 $generated@@103 $generated@@104 (- $generated@@105 1)) ($generated ($generated@@84 $generated@@2 ($generated@@85 $generated@@103 (- $generated@@105 1)))))))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@102) $generated@@103 $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ) (! (= (type ($generated@@106 $generated@@107)) $generated@@65)
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (= ($generated@@106 $generated@@44) $generated@@49))
(assert (= ($generated@@106 $generated@@45) $generated@@50))
(assert (= ($generated@@106 $generated@@46) $generated@@51))
(assert (= ($generated@@106 $generated@@47) $generated@@52))
(assert (= ($generated@@106 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (= ($generated@@1 ($generated@@110 $generated@@119 $generated@@120)) 14)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@110 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@110 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@114 (type $generated@@125))))
(= (type ($generated@@115 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@115 $generated@@125 $generated@@126))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 (type $generated@@130)))
(let (($generated@@132 (type $generated@@129)))
(= (type ($generated@@116 $generated@@128 $generated@@129 $generated@@130)) ($generated@@110 $generated@@132 $generated@@131))))
 :pattern ( ($generated@@116 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@114 (type $generated@@133))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@115 ($generated@@116 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@115 ($generated@@116 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@115 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@115 ($generated@@116 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@115 $generated@@142 $generated@@144)))
 :weight 0
)))) (= ($generated@@1 $generated@@111) 15)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@67 (type $generated@@146))))
(= (type ($generated@@117 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@117 $generated@@145 $generated@@146))
))) (= ($generated@@1 $generated@@112) 16)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@118 $generated@@148 $generated@@149 $generated@@150)) $generated@@112)
 :pattern ( ($generated@@118 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@67 (type $generated@@152))))
 (=> (= (type $generated@@153) $generated@@154) (= ($generated@@117 ($generated@@118 $generated@@151 $generated@@152 $generated@@153) $generated@@152) $generated@@153)))
 :weight 0
))) (and (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@157 $generated@@158) (= ($generated@@117 ($generated@@118 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@117 $generated@@156 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@117 $generated@@160 $generated@@162)))
 :weight 0
)))) (forall (($generated@@163 Int) ) (! (= (type ($generated@@109 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@109 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@2) (= (type $generated@@165) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@108 $generated@@164 ($generated@@109 0) $generated@@165))
 :pattern ( ($generated@@108 $generated@@164 ($generated@@109 0) $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@168) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@111) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@117 ($generated@@115 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@81 $generated@@170 ($generated@@109 0)))
 :pattern ( ($generated@@81 $generated@@170 ($generated@@109 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 17) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@64) (= (type $generated@@177) $generated@@64)) (= (type $generated@@178) $generated@@173)) ($generated@@81 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@81 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@79)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@79)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@173) (= (type $generated@@185) $generated@@173)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@64)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@190) $generated@@64)) ($generated@@81 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@81 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 18)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@111 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@67 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@111) (= (type $generated@@241) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@242) ($generated@@66 $generated@@4))) (= (type $generated@@244) $generated@@111)) (= (type $generated@@245) ($generated@@66 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@173)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@79)) (= (type $generated@@254) $generated@@79)) (= ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@172 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@172 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) (= (type $generated@@256) $generated@@173)) (= ($generated@@179 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@179 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@81 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@79) ($generated@@0 ($generated@@115 $generated@@259 $generated@@261))) ($generated@@248 $generated@@261 $generated@@260))
 :pattern ( ($generated@@115 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@81 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@64)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@265) $generated@@64)) (= ($generated@@81 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@79) ($generated@@0 ($generated@@115 $generated@@264 $generated@@266))) ($generated@@248 $generated@@266 $generated@@265))
 :pattern ( ($generated@@115 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@81 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@76 $generated@@267) $generated@@267)
 :pattern ( ($generated@@76 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@75 $generated@@268) $generated@@268)
 :pattern ( ($generated@@75 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@79)) (= (type $generated@@274) $generated@@79)) (= (type $generated@@275) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@269 $generated@@275)) (= ($generated@@108 ($generated@@247 $generated@@273 $generated@@274) ($generated@@172 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@108 ($generated@@247 $generated@@273 $generated@@274) ($generated@@172 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@173) (= ($generated@@171 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@171 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@173) ($generated@@171 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@79) (= (type $generated@@281) $generated@@79)) (= $generated@@279 ($generated@@247 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@171 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@83 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (and (forall (($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@287)) $generated@@77)
 :pattern ( ($generated@@285 $generated@@287))
)) (= (type $generated@@286) $generated@@77)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@77) (= (type $generated@@289) ($generated@@78 $generated@@79))) (= ($generated@@73 $generated@@288 $generated@@289 $generated@@290 $generated@@291) ($generated@@73 $generated@@286 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@73 ($generated@@285 $generated@@288) $generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@79)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@108 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@298) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@299) $generated@@79)) (= (type $generated@@300) $generated@@64)) ($generated@@166 $generated@@297 $generated@@298)) ($generated@@270 $generated@@299 $generated@@300 $generated@@297)) ($generated@@270 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@166 $generated@@297 $generated@@298) ($generated@@270 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@302) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@304) $generated@@64)) ($generated@@166 $generated@@301 $generated@@302)) ($generated@@108 $generated@@303 $generated@@304 $generated@@301)) ($generated@@108 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@166 $generated@@301 $generated@@302) ($generated@@108 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@110 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@113 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@110 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@115 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@110 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@115 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@115 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@110 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@115 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@115 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@113 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@110 $generated@@348 $generated@@2)) (= ($generated@@187 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@115 $generated@@347 $generated@@349))) (<= ($generated ($generated@@115 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@115 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@187 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@315 (type $generated@@350))))
(let (($generated@@352 ($generated@@314 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@313 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@312 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@311 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@110 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(let (($generated@@359 ($generated@@314 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@313 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@312 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@115 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@333 (type $generated@@361))))
(let (($generated@@363 ($generated@@332 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@331 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@330 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@329 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@333 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@110 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@333 (type $generated@@368))))
(let (($generated@@370 ($generated@@332 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@331 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@330 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@115 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@81 $generated@@372 ($generated@@186 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (< 0 ($generated ($generated@@115 $generated@@372 $generated@@374)))) ($generated@@248 $generated@@374 $generated@@373))
 :pattern ( ($generated@@115 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@81 $generated@@372 ($generated@@186 $generated@@373)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 Int) ($generated@@378 Int) ) (!  (=> (and (and (= (type $generated@@375) $generated@@77) (= (type $generated@@376) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@376 $generated@@377 $generated@@378) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@376 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) $generated@@377) (<= $generated@@377 $generated@@378)) (<= $generated@@378 ($generated@@83 $generated@@376))))))) true)
 :pattern ( ($generated@@73 $generated@@375 $generated@@376 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@379 ($generated@@257 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@79) ($generated@@0 ($generated@@115 $generated@@379 $generated@@382))) ($generated@@270 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@115 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@108 $generated@@379 ($generated@@257 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@383 ($generated@@262 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@79) ($generated@@0 ($generated@@115 $generated@@383 $generated@@386))) ($generated@@270 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@115 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@108 $generated@@383 ($generated@@262 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@115 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@115 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@110 $generated@@79 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@110 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@396) $generated@@79)) (= ($generated@@0 ($generated@@115 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@115 ($generated@@311 $generated@@395) ($generated@@180 ($generated@@84 $generated@@173 $generated@@396)))) (= ($generated@@115 ($generated@@390 $generated@@395) ($generated@@180 ($generated@@84 $generated@@173 $generated@@396))) ($generated@@181 ($generated@@84 $generated@@173 $generated@@396))))))
 :pattern ( ($generated@@115 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@110 $generated@@79 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@110 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@404) $generated@@79)) (= ($generated@@0 ($generated@@115 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@115 ($generated@@329 $generated@@403) ($generated@@180 ($generated@@84 $generated@@173 $generated@@404)))) (= ($generated@@115 ($generated@@398 $generated@@403) ($generated@@180 ($generated@@84 $generated@@173 $generated@@404))) ($generated@@181 ($generated@@84 $generated@@173 $generated@@404))))))
 :pattern ( ($generated@@115 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@115 ($generated@@354 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@115 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@115 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@115 ($generated@@354 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@115 ($generated@@365 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@115 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@115 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@115 ($generated@@365 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@270 ($generated@@115 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@270 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@108 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@270 ($generated@@115 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@270 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@108 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@432) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@433) ($generated@@110 $generated@@111 $generated@@112))) (not (= $generated@@431 $generated@@433))) (and ($generated@@166 $generated@@431 $generated@@432) ($generated@@166 $generated@@432 $generated@@433))) ($generated@@166 $generated@@431 $generated@@433))
 :pattern ( ($generated@@166 $generated@@431 $generated@@432) ($generated@@166 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@110 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@365 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@365 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@79))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@79) (= (type $generated@@449) $generated@@79)) ($generated@@0 ($generated@@115 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@247 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@79) (= (type $generated@@454) $generated@@79)) ($generated@@0 ($generated@@115 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@247 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@79) ($generated@@248 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@84 $generated@@2 $generated@@455)) $generated@@455) ($generated@@81 ($generated@@84 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@79) ($generated@@248 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@84 $generated@@3 $generated@@456)) $generated@@456) ($generated@@81 ($generated@@84 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@79) ($generated@@248 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@84 $generated@@4 $generated@@457)) $generated@@457) ($generated@@81 ($generated@@84 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 21))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@79) ($generated@@248 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@84 $generated@@458 $generated@@459)) $generated@@459) ($generated@@81 ($generated@@84 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@64) (= ($generated@@248 ($generated@@292 $generated@@460) $generated@@461) ($generated@@81 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@248 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@113 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@110 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@86 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@78 $generated@@465)) (<= 0 ($generated@@83 $generated@@464))))
 :pattern ( ($generated@@83 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@106 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@106 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@79) (= (type $generated@@487) $generated@@79)) (= ($generated@@276 ($generated@@247 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@172 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@172 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@492 ($generated@@172 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@172 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@79) (= (type $generated@@497) $generated@@79)) (= ($generated@@180 ($generated@@247 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@247 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@79) (= (type $generated@@499) $generated@@79)) (= ($generated@@181 ($generated@@247 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@247 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@78 $generated@@79)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@500 ($generated@@82 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@83 $generated@@500))) ($generated@@270 ($generated@@85 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@85 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@108 $generated@@500 ($generated@@82 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@109 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@109 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@257 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@257 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@106 ($generated@@257 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@262 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@262 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@106 ($generated@@262 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@186 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@186 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@106 ($generated@@186 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@82 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@82 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@106 ($generated@@82 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@82 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@84 $generated@@523 ($generated@@292 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@292 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@81 $generated@@524 ($generated@@415 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@524) $generated@@527))) (and ($generated@@248 ($generated@@115 ($generated@@390 $generated@@524) $generated@@527) $generated@@526) ($generated@@248 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@524) $generated@@527))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@81 $generated@@524 ($generated@@415 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) (= ($generated@@81 $generated@@528 ($generated@@423 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@528) $generated@@531))) (and ($generated@@248 ($generated@@115 ($generated@@398 $generated@@528) $generated@@531) $generated@@530) ($generated@@248 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@528) $generated@@531))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@81 $generated@@528 ($generated@@423 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@79) (= (type $generated@@535) $generated@@79)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@247 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@247 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@79)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@247 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@247 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 Int) ($generated@@541 Int) ) (!  (=> (and (= (type $generated@@538) $generated@@77) (= (type $generated@@539) ($generated@@78 $generated@@79))) (= ($generated@@73 ($generated@@74 $generated@@538) $generated@@539 $generated@@540 $generated@@541) ($generated@@73 $generated@@538 $generated@@539 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@538) $generated@@539 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@79) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@248 $generated@@542 ($generated@@415 $generated@@543 $generated@@544))) (and (= ($generated@@292 ($generated@@84 ($generated@@313 $generated@@79 $generated@@79) $generated@@542)) $generated@@542) ($generated@@81 ($generated@@84 ($generated@@313 $generated@@79 $generated@@79) $generated@@542) ($generated@@415 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@248 $generated@@542 ($generated@@415 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@79) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) ($generated@@248 $generated@@545 ($generated@@423 $generated@@546 $generated@@547))) (and (= ($generated@@292 ($generated@@84 ($generated@@331 $generated@@79 $generated@@79) $generated@@545)) $generated@@545) ($generated@@81 ($generated@@84 ($generated@@331 $generated@@79 $generated@@79) $generated@@545) ($generated@@423 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@248 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@79)) ($generated@@248 $generated@@550 ($generated@@172 $generated@@548 $generated@@549))) (and (= ($generated@@292 ($generated@@84 $generated@@173 $generated@@550)) $generated@@550) ($generated@@81 ($generated@@84 $generated@@173 $generated@@550) ($generated@@172 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@248 $generated@@550 ($generated@@172 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@115 ($generated@@434 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@115 ($generated@@434 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (and (= ($generated@@106 ($generated@@172 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@172 $generated@@555 $generated@@556)) $generated@@63)))
 :pattern ( ($generated@@172 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@173) (= ($generated@@532 ($generated@@292 $generated@@557)) ($generated@@533 $generated@@557)))
 :pattern ( ($generated@@532 ($generated@@292 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@79) ($generated@@248 $generated@@558 ($generated@@109 0))) (and (= ($generated@@292 ($generated@@84 $generated@@2 $generated@@558)) $generated@@558) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@558) ($generated@@109 0))))
 :pattern ( ($generated@@248 $generated@@558 ($generated@@109 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@79) (= (type $generated@@560) $generated@@64)) ($generated@@248 $generated@@559 ($generated@@257 $generated@@560))) (and (= ($generated@@292 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@559)) $generated@@559) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@559) ($generated@@257 $generated@@560))))
 :pattern ( ($generated@@248 $generated@@559 ($generated@@257 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@79) (= (type $generated@@562) $generated@@64)) ($generated@@248 $generated@@561 ($generated@@262 $generated@@562))) (and (= ($generated@@292 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@561)) $generated@@561) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@561) ($generated@@262 $generated@@562))))
 :pattern ( ($generated@@248 $generated@@561 ($generated@@262 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@79) (= (type $generated@@564) $generated@@64)) ($generated@@248 $generated@@563 ($generated@@186 $generated@@564))) (and (= ($generated@@292 ($generated@@84 ($generated@@110 $generated@@79 $generated@@2) $generated@@563)) $generated@@563) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@2) $generated@@563) ($generated@@186 $generated@@564))))
 :pattern ( ($generated@@248 $generated@@563 ($generated@@186 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@79) (= (type $generated@@566) $generated@@64)) ($generated@@248 $generated@@565 ($generated@@82 $generated@@566))) (and (= ($generated@@292 ($generated@@84 ($generated@@78 $generated@@79) $generated@@565)) $generated@@565) ($generated@@81 ($generated@@84 ($generated@@78 $generated@@79) $generated@@565) ($generated@@82 $generated@@566))))
 :pattern ( ($generated@@248 $generated@@565 ($generated@@82 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@567 ($generated@@186 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@79) (< 0 ($generated ($generated@@115 $generated@@567 $generated@@570)))) ($generated@@270 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@115 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@108 $generated@@567 ($generated@@186 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@173) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@110 $generated@@111 $generated@@112))) (and ($generated@@269 $generated@@573) (and ($generated@@171 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@64) ($generated@@108 $generated@@571 ($generated@@172 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@108 $generated@@571 ($generated@@172 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@270 ($generated@@180 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 ($generated@@180 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@173) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) ($generated@@110 $generated@@111 $generated@@112))) (and ($generated@@269 $generated@@577) (and ($generated@@171 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@64) ($generated@@108 $generated@@575 ($generated@@172 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@108 $generated@@575 ($generated@@172 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@270 ($generated@@181 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@270 ($generated@@181 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@79) (= (type $generated@@580) $generated@@79)) (= ($generated@@247 ($generated@@75 $generated@@579) ($generated@@75 $generated@@580)) ($generated@@75 ($generated@@247 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@247 ($generated@@75 $generated@@579) ($generated@@75 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@76 $generated@@581))) ($generated@@75 ($generated@@292 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@76 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@292 ($generated@@75 $generated@@582)) ($generated@@75 ($generated@@292 $generated@@582)))
 :pattern ( ($generated@@292 ($generated@@75 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@86 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@78 $generated@@584)) (= ($generated@@83 $generated@@583) 0)) (= $generated@@583 ($generated@@282 $generated@@584))))
 :pattern ( ($generated@@83 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@110 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@305 ($generated@@116 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@305 $generated@@585) ($generated ($generated@@115 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@305 ($generated@@116 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@590) $generated@@2)) ($generated@@108 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@108 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@592) $generated@@3)) ($generated@@108 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@108 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@594) $generated@@4)) ($generated@@108 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@108 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@596) $generated@@458)) ($generated@@108 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@108 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@598) $generated@@79)) ($generated@@108 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@108 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79)) (= (type $generated@@600) $generated@@64)) (= ($generated@@81 $generated@@599 ($generated@@82 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@83 $generated@@599))) ($generated@@248 ($generated@@85 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@85 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@82 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@78 $generated@@79)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@83 $generated@@603))) (< ($generated@@533 ($generated@@84 $generated@@173 ($generated@@85 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@533 ($generated@@84 $generated@@173 ($generated@@85 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@81 $generated@@605 ($generated@@415 $generated@@606 $generated@@607))) (and (and ($generated@@81 ($generated@@311 $generated@@605) ($generated@@257 $generated@@606)) ($generated@@81 ($generated@@354 $generated@@605) ($generated@@257 $generated@@607))) ($generated@@81 ($generated@@389 $generated@@605) ($generated@@257 ($generated@@172 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@81 $generated@@605 ($generated@@415 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) $generated@@64)) ($generated@@81 $generated@@608 ($generated@@423 $generated@@609 $generated@@610))) (and (and ($generated@@81 ($generated@@329 $generated@@608) ($generated@@262 $generated@@609)) ($generated@@81 ($generated@@365 $generated@@608) ($generated@@262 $generated@@610))) ($generated@@81 ($generated@@397 $generated@@608) ($generated@@262 ($generated@@172 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@423 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@81 $generated@@611 $generated@@46))
 :pattern ( ($generated@@81 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@81 $generated@@612 $generated@@47))
 :pattern ( ($generated@@81 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@81 $generated@@613 $generated@@44))
 :pattern ( ($generated@@81 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@458) ($generated@@81 $generated@@614 $generated@@45))
 :pattern ( ($generated@@81 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@79) ($generated@@81 $generated@@615 $generated@@48))
 :pattern ( ($generated@@81 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@618) ($generated@@78 $generated@@79)) (= (type $generated@@621) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@622) ($generated@@193 $generated@@111 $generated@@4))) (= (type $generated@@623) $generated@@111)) (= (type $generated@@624) ($generated@@110 $generated@@111 $generated@@112))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@626 true))
(let (($generated@@627  (=> (and (=> (and (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617)) (<= $generated@@617 ($generated@@83 $generated@@618))) (<= ($generated@@73 ($generated@@74 $generated@@286) $generated@@618 $generated@@616 $generated@@617) ($generated@@73 ($generated@@74 $generated@@286) $generated@@618 $generated@@619 $generated@@620))) (= (ControlFlow 0 9) 1)) $generated@@626)))
(let (($generated@@628  (=> (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617)) (=> (and (and (<= $generated@@617 ($generated@@83 $generated@@618)) ($generated@@108 $generated@@618 ($generated@@82 $generated@@46) $generated@@621)) (and ($generated@@108 ($generated@@8 $generated@@616) $generated@@46 $generated@@621) ($generated@@108 ($generated@@8 $generated@@617) $generated@@46 $generated@@621))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= ($generated@@76 0) $generated@@616)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= $generated@@616 $generated@@617)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= $generated@@617 ($generated@@83 $generated@@618))) (=> (and (and (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617)) (<= $generated@@617 ($generated@@83 $generated@@618))) (and (and ($generated@@80 $generated@@618 $generated@@616 $generated@@617) ($generated@@108 $generated@@618 ($generated@@82 $generated@@46) $generated@@621)) (and ($generated@@108 ($generated@@8 $generated@@619) $generated@@46 $generated@@621) ($generated@@108 ($generated@@8 $generated@@620) $generated@@46 $generated@@621)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@76 0) $generated@@619)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@619 $generated@@620)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@620 ($generated@@83 $generated@@618))) (=> (and (and (and (and (<= ($generated@@76 0) $generated@@619) (<= $generated@@619 $generated@@620)) (<= $generated@@620 ($generated@@83 $generated@@618))) ($generated@@80 $generated@@618 $generated@@619 $generated@@620)) (and (<= ($generated@@73 ($generated@@74 $generated@@286) $generated@@618 $generated@@616 $generated@@617) ($generated@@73 ($generated@@74 $generated@@286) $generated@@618 $generated@@619 $generated@@620)) (= (ControlFlow 0 2) 1))) $generated@@626))))))))))))
(let (($generated@@629  (=> (and (and (<= ($generated@@76 0) $generated@@619) (<= $generated@@619 $generated@@620)) (<= $generated@@620 ($generated@@83 $generated@@618))) (and (=> (= (ControlFlow 0 10) 2) $generated@@628) (=> (= (ControlFlow 0 10) 9) $generated@@627)))))
(let (($generated@@630  (=> (and (not (and (<= ($generated@@76 0) $generated@@619) (<= $generated@@619 $generated@@620))) (= (ControlFlow 0 12) 10)) $generated@@629)))
(let (($generated@@631  (=> (and (and (<= ($generated@@76 0) $generated@@619) (<= $generated@@619 $generated@@620)) (= (ControlFlow 0 11) 10)) $generated@@629)))
(let (($generated@@632  (=> (< $generated@@619 ($generated@@76 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@631) (=> (= (ControlFlow 0 14) 12) $generated@@630)))))
(let (($generated@@633  (=> (<= ($generated@@76 0) $generated@@619) (and (=> (= (ControlFlow 0 13) 11) $generated@@631) (=> (= (ControlFlow 0 13) 12) $generated@@630)))))
(let (($generated@@634  (=> (= $generated@@622 ($generated@@192 $generated@@623 $generated@@624 $generated@@60 false)) (=> (and (and ($generated@@269 $generated@@621) ($generated@@625 $generated@@621)) (and (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@111) (=> (and (not (= $generated@@635 $generated@@623)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@624 $generated@@635) $generated@@60))) (= ($generated@@115 $generated@@621 $generated@@635) ($generated@@115 $generated@@624 $generated@@635))))
 :pattern ( ($generated@@115 $generated@@621 $generated@@635))
)) ($generated@@166 $generated@@624 $generated@@621))) (and (=> (= (ControlFlow 0 15) 13) $generated@@633) (=> (= (ControlFlow 0 15) 14) $generated@@632))))))
(let (($generated@@636  (=> (and ($generated@@269 $generated@@624) ($generated@@625 $generated@@624)) (=> (and (and ($generated@@81 $generated@@618 ($generated@@82 $generated@@46)) ($generated@@108 $generated@@618 ($generated@@82 $generated@@46) $generated@@624)) (and (= 1 $generated@@72) (= (ControlFlow 0 16) 15))) $generated@@634))))
$generated@@636)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int) Int)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U Int Int) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (Int) T@U)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87)) 12))) (forall (($generated@@88 T@T) ) (! (= ($generated@@86 ($generated@@78 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@78 $generated@@88))
))) (= ($generated@@1 $generated@@79) 13)) (forall (($generated@@89 T@U) ) (! (= (type ($generated@@74 $generated@@89)) $generated@@77)
 :pattern ( ($generated@@74 $generated@@89))
))) (forall (($generated@@90 T@U) ) (! (let (($generated@@91 (type $generated@@90)))
(= (type ($generated@@75 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@75 $generated@@90))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@82 $generated@@92)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@U) ) (! (= (type ($generated@@84 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@84 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 Int) ) (! (let (($generated@@97 ($generated@@86 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (and (and (= (type $generated@@98) $generated@@77) (= (type $generated@@99) ($generated@@78 $generated@@79))) (or ($generated@@80 ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@99 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) ($generated@@76 $generated@@100)) (<= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101))) (<= ($generated@@76 $generated@@101) ($generated@@83 ($generated@@75 $generated@@99)))))))) (and (=> (not (= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101))) ($generated@@80 ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 (- $generated@@101 1)))) (= ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) (ite (= ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)) 0 (+ ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 (- $generated@@101 1))) ($generated ($generated@@84 $generated@@2 ($generated@@85 ($generated@@75 $generated@@99) ($generated@@76 (- $generated@@101 1))))))))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@74 $generated@@98) ($generated@@75 $generated@@99) ($generated@@76 $generated@@100) ($generated@@76 $generated@@101)))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 Int) ) (!  (=> (and (and (= (type $generated@@102) $generated@@77) (= (type $generated@@103) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@103 $generated@@104 $generated@@105) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@103 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) $generated@@104) (<= $generated@@104 $generated@@105)) (<= $generated@@105 ($generated@@83 $generated@@103))))))) (and (=> (not (= $generated@@104 $generated@@105)) ($generated@@80 $generated@@103 $generated@@104 (- $generated@@105 1))) (= ($generated@@73 ($generated@@74 $generated@@102) $generated@@103 $generated@@104 $generated@@105) (ite (= $generated@@104 $generated@@105) 0 (+ ($generated@@73 $generated@@102 $generated@@103 $generated@@104 (- $generated@@105 1)) ($generated ($generated@@84 $generated@@2 ($generated@@85 $generated@@103 (- $generated@@105 1)))))))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@102) $generated@@103 $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ) (! (= (type ($generated@@106 $generated@@107)) $generated@@65)
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (= ($generated@@106 $generated@@44) $generated@@49))
(assert (= ($generated@@106 $generated@@45) $generated@@50))
(assert (= ($generated@@106 $generated@@46) $generated@@51))
(assert (= ($generated@@106 $generated@@47) $generated@@52))
(assert (= ($generated@@106 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (= ($generated@@1 ($generated@@110 $generated@@119 $generated@@120)) 14)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@110 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@110 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@114 (type $generated@@125))))
(= (type ($generated@@115 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@115 $generated@@125 $generated@@126))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 (type $generated@@130)))
(let (($generated@@132 (type $generated@@129)))
(= (type ($generated@@116 $generated@@128 $generated@@129 $generated@@130)) ($generated@@110 $generated@@132 $generated@@131))))
 :pattern ( ($generated@@116 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@114 (type $generated@@133))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@115 ($generated@@116 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@115 ($generated@@116 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@115 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@115 ($generated@@116 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@115 $generated@@142 $generated@@144)))
 :weight 0
)))) (= ($generated@@1 $generated@@111) 15)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@67 (type $generated@@146))))
(= (type ($generated@@117 $generated@@145 $generated@@146)) $generated@@147))
 :pattern ( ($generated@@117 $generated@@145 $generated@@146))
))) (= ($generated@@1 $generated@@112) 16)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@118 $generated@@148 $generated@@149 $generated@@150)) $generated@@112)
 :pattern ( ($generated@@118 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@67 (type $generated@@152))))
 (=> (= (type $generated@@153) $generated@@154) (= ($generated@@117 ($generated@@118 $generated@@151 $generated@@152 $generated@@153) $generated@@152) $generated@@153)))
 :weight 0
))) (and (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@157 $generated@@158) (= ($generated@@117 ($generated@@118 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@117 $generated@@156 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or true (= ($generated@@117 ($generated@@118 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@117 $generated@@160 $generated@@162)))
 :weight 0
)))) (forall (($generated@@163 Int) ) (! (= (type ($generated@@109 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@109 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@2) (= (type $generated@@165) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@108 $generated@@164 ($generated@@109 0) $generated@@165))
 :pattern ( ($generated@@108 $generated@@164 ($generated@@109 0) $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@168) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@111) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@117 ($generated@@115 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@81 $generated@@170 ($generated@@109 0)))
 :pattern ( ($generated@@81 $generated@@170 ($generated@@109 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 17) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@64)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@64) (= (type $generated@@177) $generated@@64)) (= (type $generated@@178) $generated@@173)) ($generated@@81 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@81 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@79)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@79)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@173) (= (type $generated@@185) $generated@@173)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@64)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@190) $generated@@64)) ($generated@@81 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@81 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 18)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@111 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@67 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@111) (= (type $generated@@241) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@242) ($generated@@66 $generated@@4))) (= (type $generated@@244) $generated@@111)) (= (type $generated@@245) ($generated@@66 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@173)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@79)) (= (type $generated@@254) $generated@@79)) (= ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@172 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@172 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) (= (type $generated@@256) $generated@@173)) (= ($generated@@179 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@179 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@81 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@79) ($generated@@0 ($generated@@115 $generated@@259 $generated@@261))) ($generated@@248 $generated@@261 $generated@@260))
 :pattern ( ($generated@@115 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@81 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@64)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@265) $generated@@64)) (= ($generated@@81 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@79) ($generated@@0 ($generated@@115 $generated@@264 $generated@@266))) ($generated@@248 $generated@@266 $generated@@265))
 :pattern ( ($generated@@115 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@81 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@76 $generated@@267) $generated@@267)
 :pattern ( ($generated@@76 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@75 $generated@@268) $generated@@268)
 :pattern ( ($generated@@75 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@79)) (= (type $generated@@274) $generated@@79)) (= (type $generated@@275) ($generated@@110 $generated@@111 $generated@@112))) ($generated@@269 $generated@@275)) (= ($generated@@108 ($generated@@247 $generated@@273 $generated@@274) ($generated@@172 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@108 ($generated@@247 $generated@@273 $generated@@274) ($generated@@172 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@173) (= ($generated@@171 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@171 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@173) ($generated@@171 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@79) (= (type $generated@@281) $generated@@79)) (= $generated@@279 ($generated@@247 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@171 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@83 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (and (forall (($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@287)) $generated@@77)
 :pattern ( ($generated@@285 $generated@@287))
)) (= (type $generated@@286) $generated@@77)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 Int) ($generated@@291 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@77) (= (type $generated@@289) ($generated@@78 $generated@@79))) (= ($generated@@73 $generated@@288 $generated@@289 $generated@@290 $generated@@291) ($generated@@73 $generated@@286 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@73 ($generated@@285 $generated@@288) $generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@79)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@64) (= (type $generated@@296) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@108 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@270 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@297) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@298) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@299) $generated@@79)) (= (type $generated@@300) $generated@@64)) ($generated@@166 $generated@@297 $generated@@298)) ($generated@@270 $generated@@299 $generated@@300 $generated@@297)) ($generated@@270 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@166 $generated@@297 $generated@@298) ($generated@@270 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@302) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@304) $generated@@64)) ($generated@@166 $generated@@301 $generated@@302)) ($generated@@108 $generated@@303 $generated@@304 $generated@@301)) ($generated@@108 $generated@@303 $generated@@304 $generated@@302))
 :pattern ( ($generated@@166 $generated@@301 $generated@@302) ($generated@@108 $generated@@303 $generated@@304 $generated@@301))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@110 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@113 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@110 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@115 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@110 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@115 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@115 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@110 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@115 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@115 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@113 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@110 $generated@@348 $generated@@2)) (= ($generated@@187 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@115 $generated@@347 $generated@@349))) (<= ($generated ($generated@@115 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@115 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@187 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@315 (type $generated@@350))))
(let (($generated@@352 ($generated@@314 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@313 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@312 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@311 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@110 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(let (($generated@@359 ($generated@@314 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@313 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@312 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@115 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@333 (type $generated@@361))))
(let (($generated@@363 ($generated@@332 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@331 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@330 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@329 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@333 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@110 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@333 (type $generated@@368))))
(let (($generated@@370 ($generated@@332 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@331 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@330 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@115 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@81 $generated@@372 ($generated@@186 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (< 0 ($generated ($generated@@115 $generated@@372 $generated@@374)))) ($generated@@248 $generated@@374 $generated@@373))
 :pattern ( ($generated@@115 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@81 $generated@@372 ($generated@@186 $generated@@373)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 Int) ($generated@@378 Int) ) (!  (=> (and (and (= (type $generated@@375) $generated@@77) (= (type $generated@@376) ($generated@@78 $generated@@79))) (or ($generated@@80 $generated@@376 $generated@@377 $generated@@378) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@376 ($generated@@82 $generated@@46)) (and (and (<= ($generated@@76 0) $generated@@377) (<= $generated@@377 $generated@@378)) (<= $generated@@378 ($generated@@83 $generated@@376))))))) true)
 :pattern ( ($generated@@73 $generated@@375 $generated@@376 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@379 ($generated@@257 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@79) ($generated@@0 ($generated@@115 $generated@@379 $generated@@382))) ($generated@@270 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@115 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@108 $generated@@379 ($generated@@257 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@110 $generated@@79 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@383 ($generated@@262 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@79) ($generated@@0 ($generated@@115 $generated@@383 $generated@@386))) ($generated@@270 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@115 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@108 $generated@@383 ($generated@@262 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@115 ($generated@@306 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@115 ($generated@@306 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@110 $generated@@79 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@315 (type $generated@@392))))
(let (($generated@@394 ($generated@@314 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@110 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@396) $generated@@79)) (= ($generated@@0 ($generated@@115 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@115 ($generated@@311 $generated@@395) ($generated@@180 ($generated@@84 $generated@@173 $generated@@396)))) (= ($generated@@115 ($generated@@390 $generated@@395) ($generated@@180 ($generated@@84 $generated@@173 $generated@@396))) ($generated@@181 ($generated@@84 $generated@@173 $generated@@396))))))
 :pattern ( ($generated@@115 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@110 $generated@@79 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@333 (type $generated@@400))))
(let (($generated@@402 ($generated@@332 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@110 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@404) $generated@@79)) (= ($generated@@0 ($generated@@115 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@115 ($generated@@329 $generated@@403) ($generated@@180 ($generated@@84 $generated@@173 $generated@@404)))) (= ($generated@@115 ($generated@@398 $generated@@403) ($generated@@180 ($generated@@84 $generated@@173 $generated@@404))) ($generated@@181 ($generated@@84 $generated@@173 $generated@@404))))))
 :pattern ( ($generated@@115 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@314 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@313 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@115 ($generated@@354 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@115 ($generated@@311 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@115 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@405) $generated@@409))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@115 ($generated@@354 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@332 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@331 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@115 ($generated@@365 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@115 ($generated@@329 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@115 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@410) $generated@@414))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@115 ($generated@@365 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@64)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@418) $generated@@422))) (and ($generated@@270 ($generated@@115 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@270 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@108 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@426) $generated@@430))) (and ($generated@@270 ($generated@@115 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@270 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@108 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@432) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@433) ($generated@@110 $generated@@111 $generated@@112))) (not (= $generated@@431 $generated@@433))) (and ($generated@@166 $generated@@431 $generated@@432) ($generated@@166 $generated@@432 $generated@@433))) ($generated@@166 $generated@@431 $generated@@433))
 :pattern ( ($generated@@166 $generated@@431 $generated@@432) ($generated@@166 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@110 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@333 (type $generated@@436))))
(let (($generated@@438 ($generated@@332 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@331 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@330 $generated@@438 $generated@@437)) (= ($generated@@329 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@329 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@365 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@365 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@79))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@315 (type $generated@@445))))
(let (($generated@@447 ($generated@@314 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@313 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@312 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@79) (= (type $generated@@449) $generated@@79)) ($generated@@0 ($generated@@115 ($generated@@389 $generated@@445) ($generated@@292 ($generated@@247 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@389 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@79) (= (type $generated@@454) $generated@@79)) ($generated@@0 ($generated@@115 ($generated@@397 $generated@@450) ($generated@@292 ($generated@@247 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@79) ($generated@@248 $generated@@455 $generated@@46)) (and (= ($generated@@292 ($generated@@84 $generated@@2 $generated@@455)) $generated@@455) ($generated@@81 ($generated@@84 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@79) ($generated@@248 $generated@@456 $generated@@47)) (and (= ($generated@@292 ($generated@@84 $generated@@3 $generated@@456)) $generated@@456) ($generated@@81 ($generated@@84 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@79) ($generated@@248 $generated@@457 $generated@@44)) (and (= ($generated@@292 ($generated@@84 $generated@@4 $generated@@457)) $generated@@457) ($generated@@81 ($generated@@84 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 21))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@79) ($generated@@248 $generated@@459 $generated@@45)) (and (= ($generated@@292 ($generated@@84 $generated@@458 $generated@@459)) $generated@@459) ($generated@@81 ($generated@@84 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@64) (= ($generated@@248 ($generated@@292 $generated@@460) $generated@@461) ($generated@@81 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@248 ($generated@@292 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@113 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@110 $generated@@463 $generated@@2)) (<= 0 ($generated@@305 $generated@@462))))
 :pattern ( ($generated@@305 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@86 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@78 $generated@@465)) (<= 0 ($generated@@83 $generated@@464))))
 :pattern ( ($generated@@83 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@106 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@106 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@79) (= (type $generated@@487) $generated@@79)) (= ($generated@@276 ($generated@@247 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@172 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@172 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@492 ($generated@@172 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@172 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@79) (= (type $generated@@497) $generated@@79)) (= ($generated@@180 ($generated@@247 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@247 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@79) (= (type $generated@@499) $generated@@79)) (= ($generated@@181 ($generated@@247 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@247 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@78 $generated@@79)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@500 ($generated@@82 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@83 $generated@@500))) ($generated@@270 ($generated@@85 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@85 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@108 $generated@@500 ($generated@@82 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@109 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@109 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@257 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@257 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@106 ($generated@@257 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@257 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@262 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@262 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@106 ($generated@@262 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@262 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@186 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@186 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@106 ($generated@@186 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@82 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@82 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@106 ($generated@@82 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@82 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@84 $generated@@523 ($generated@@292 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@292 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@81 $generated@@524 ($generated@@415 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@311 $generated@@524) $generated@@527))) (and ($generated@@248 ($generated@@115 ($generated@@390 $generated@@524) $generated@@527) $generated@@526) ($generated@@248 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@115 ($generated@@390 $generated@@524) $generated@@527))
 :pattern ( ($generated@@115 ($generated@@311 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@81 $generated@@524 ($generated@@415 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) (= ($generated@@81 $generated@@528 ($generated@@423 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@79) ($generated@@0 ($generated@@115 ($generated@@329 $generated@@528) $generated@@531))) (and ($generated@@248 ($generated@@115 ($generated@@398 $generated@@528) $generated@@531) $generated@@530) ($generated@@248 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@115 ($generated@@398 $generated@@528) $generated@@531))
 :pattern ( ($generated@@115 ($generated@@329 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@81 $generated@@528 ($generated@@423 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@79) (= (type $generated@@535) $generated@@79)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@247 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@247 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@79) (= (type $generated@@537) $generated@@79)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@247 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@247 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 Int) ($generated@@541 Int) ) (!  (=> (and (= (type $generated@@538) $generated@@77) (= (type $generated@@539) ($generated@@78 $generated@@79))) (= ($generated@@73 ($generated@@74 $generated@@538) $generated@@539 $generated@@540 $generated@@541) ($generated@@73 $generated@@538 $generated@@539 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@538) $generated@@539 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@79) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@248 $generated@@542 ($generated@@415 $generated@@543 $generated@@544))) (and (= ($generated@@292 ($generated@@84 ($generated@@313 $generated@@79 $generated@@79) $generated@@542)) $generated@@542) ($generated@@81 ($generated@@84 ($generated@@313 $generated@@79 $generated@@79) $generated@@542) ($generated@@415 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@248 $generated@@542 ($generated@@415 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@79) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) ($generated@@248 $generated@@545 ($generated@@423 $generated@@546 $generated@@547))) (and (= ($generated@@292 ($generated@@84 ($generated@@331 $generated@@79 $generated@@79) $generated@@545)) $generated@@545) ($generated@@81 ($generated@@84 ($generated@@331 $generated@@79 $generated@@79) $generated@@545) ($generated@@423 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@248 $generated@@545 ($generated@@423 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@79)) ($generated@@248 $generated@@550 ($generated@@172 $generated@@548 $generated@@549))) (and (= ($generated@@292 ($generated@@84 $generated@@173 $generated@@550)) $generated@@550) ($generated@@81 ($generated@@84 $generated@@173 $generated@@550) ($generated@@172 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@248 $generated@@550 ($generated@@172 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@115 ($generated@@434 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@115 ($generated@@434 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (and (= ($generated@@106 ($generated@@172 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@172 $generated@@555 $generated@@556)) $generated@@63)))
 :pattern ( ($generated@@172 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@173) (= ($generated@@532 ($generated@@292 $generated@@557)) ($generated@@533 $generated@@557)))
 :pattern ( ($generated@@532 ($generated@@292 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@79) ($generated@@248 $generated@@558 ($generated@@109 0))) (and (= ($generated@@292 ($generated@@84 $generated@@2 $generated@@558)) $generated@@558) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@558) ($generated@@109 0))))
 :pattern ( ($generated@@248 $generated@@558 ($generated@@109 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@79) (= (type $generated@@560) $generated@@64)) ($generated@@248 $generated@@559 ($generated@@257 $generated@@560))) (and (= ($generated@@292 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@559)) $generated@@559) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@559) ($generated@@257 $generated@@560))))
 :pattern ( ($generated@@248 $generated@@559 ($generated@@257 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@79) (= (type $generated@@562) $generated@@64)) ($generated@@248 $generated@@561 ($generated@@262 $generated@@562))) (and (= ($generated@@292 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@561)) $generated@@561) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@4) $generated@@561) ($generated@@262 $generated@@562))))
 :pattern ( ($generated@@248 $generated@@561 ($generated@@262 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@79) (= (type $generated@@564) $generated@@64)) ($generated@@248 $generated@@563 ($generated@@186 $generated@@564))) (and (= ($generated@@292 ($generated@@84 ($generated@@110 $generated@@79 $generated@@2) $generated@@563)) $generated@@563) ($generated@@81 ($generated@@84 ($generated@@110 $generated@@79 $generated@@2) $generated@@563) ($generated@@186 $generated@@564))))
 :pattern ( ($generated@@248 $generated@@563 ($generated@@186 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@79) (= (type $generated@@566) $generated@@64)) ($generated@@248 $generated@@565 ($generated@@82 $generated@@566))) (and (= ($generated@@292 ($generated@@84 ($generated@@78 $generated@@79) $generated@@565)) $generated@@565) ($generated@@81 ($generated@@84 ($generated@@78 $generated@@79) $generated@@565) ($generated@@82 $generated@@566))))
 :pattern ( ($generated@@248 $generated@@565 ($generated@@82 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@110 $generated@@79 $generated@@2)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@110 $generated@@111 $generated@@112))) (= ($generated@@108 $generated@@567 ($generated@@186 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@79) (< 0 ($generated ($generated@@115 $generated@@567 $generated@@570)))) ($generated@@270 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@115 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@108 $generated@@567 ($generated@@186 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@173) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@110 $generated@@111 $generated@@112))) (and ($generated@@269 $generated@@573) (and ($generated@@171 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@64) ($generated@@108 $generated@@571 ($generated@@172 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@108 $generated@@571 ($generated@@172 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@270 ($generated@@180 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@270 ($generated@@180 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@173) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) ($generated@@110 $generated@@111 $generated@@112))) (and ($generated@@269 $generated@@577) (and ($generated@@171 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@64) ($generated@@108 $generated@@575 ($generated@@172 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@108 $generated@@575 ($generated@@172 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@270 ($generated@@181 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@270 ($generated@@181 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@79) (= (type $generated@@580) $generated@@79)) (= ($generated@@247 ($generated@@75 $generated@@579) ($generated@@75 $generated@@580)) ($generated@@75 ($generated@@247 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@247 ($generated@@75 $generated@@579) ($generated@@75 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@76 $generated@@581))) ($generated@@75 ($generated@@292 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@76 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@292 ($generated@@75 $generated@@582)) ($generated@@75 ($generated@@292 $generated@@582)))
 :pattern ( ($generated@@292 ($generated@@75 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@86 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@78 $generated@@584)) (= ($generated@@83 $generated@@583) 0)) (= $generated@@583 ($generated@@282 $generated@@584))))
 :pattern ( ($generated@@83 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@110 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@305 ($generated@@116 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@305 $generated@@585) ($generated ($generated@@115 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@305 ($generated@@116 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@590) $generated@@2)) ($generated@@108 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@108 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@592) $generated@@3)) ($generated@@108 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@108 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@594) $generated@@4)) ($generated@@108 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@108 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@596) $generated@@458)) ($generated@@108 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@108 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@110 $generated@@111 $generated@@112)) (= (type $generated@@598) $generated@@79)) ($generated@@108 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@108 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79)) (= (type $generated@@600) $generated@@64)) (= ($generated@@81 $generated@@599 ($generated@@82 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@83 $generated@@599))) ($generated@@248 ($generated@@85 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@85 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@81 $generated@@599 ($generated@@82 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@78 $generated@@79)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@83 $generated@@603))) (< ($generated@@533 ($generated@@84 $generated@@173 ($generated@@85 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@533 ($generated@@84 $generated@@173 ($generated@@85 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@313 $generated@@79 $generated@@79)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@81 $generated@@605 ($generated@@415 $generated@@606 $generated@@607))) (and (and ($generated@@81 ($generated@@311 $generated@@605) ($generated@@257 $generated@@606)) ($generated@@81 ($generated@@354 $generated@@605) ($generated@@257 $generated@@607))) ($generated@@81 ($generated@@389 $generated@@605) ($generated@@257 ($generated@@172 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@81 $generated@@605 ($generated@@415 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@331 $generated@@79 $generated@@79)) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) $generated@@64)) ($generated@@81 $generated@@608 ($generated@@423 $generated@@609 $generated@@610))) (and (and ($generated@@81 ($generated@@329 $generated@@608) ($generated@@262 $generated@@609)) ($generated@@81 ($generated@@365 $generated@@608) ($generated@@262 $generated@@610))) ($generated@@81 ($generated@@397 $generated@@608) ($generated@@262 ($generated@@172 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@423 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@81 $generated@@611 $generated@@46))
 :pattern ( ($generated@@81 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@81 $generated@@612 $generated@@47))
 :pattern ( ($generated@@81 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@81 $generated@@613 $generated@@44))
 :pattern ( ($generated@@81 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@458) ($generated@@81 $generated@@614 $generated@@45))
 :pattern ( ($generated@@81 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@79) ($generated@@81 $generated@@615 $generated@@48))
 :pattern ( ($generated@@81 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Bool)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () Int)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@619) ($generated@@78 $generated@@79)) (= (type $generated@@620) ($generated@@110 $generated@@111 $generated@@112))) (= (type $generated@@643) $generated@@111)) (= (type $generated@@644) ($generated@@193 $generated@@111 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 90) (let (($generated@@649 true))
(let (($generated@@650  (=> (and (not (and (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617)) (<= $generated@@617 $generated@@618))) (= (ControlFlow 0 38) 30)) $generated@@649)))
(let (($generated@@651  (=> (and (and (and (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617)) (<= $generated@@617 $generated@@618)) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and ($generated@@108 ($generated@@8 $generated@@616) $generated@@46 $generated@@620) ($generated@@108 ($generated@@8 $generated@@617) $generated@@46 $generated@@620))) (and (=> (= (ControlFlow 0 31) (- 0 37)) (<= ($generated@@76 0) $generated@@616)) (and (=> (= (ControlFlow 0 31) (- 0 36)) (<= $generated@@616 $generated@@617)) (and (=> (= (ControlFlow 0 31) (- 0 35)) (<= $generated@@617 ($generated@@83 $generated@@619))) (=> (and (and ($generated@@80 $generated@@619 $generated@@616 $generated@@617) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and ($generated@@108 ($generated@@8 $generated@@621) $generated@@46 $generated@@620) ($generated@@108 ($generated@@8 $generated@@622) $generated@@46 $generated@@620))) (and (=> (= (ControlFlow 0 31) (- 0 34)) (<= ($generated@@76 0) $generated@@621)) (and (=> (= (ControlFlow 0 31) (- 0 33)) (<= $generated@@621 $generated@@622)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (<= $generated@@622 ($generated@@83 $generated@@619))) (=> (and ($generated@@80 $generated@@619 $generated@@621 $generated@@622) (= (ControlFlow 0 31) 30)) $generated@@649)))))))))))
(let (($generated@@652  (=> (not (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617))) (and (=> (= (ControlFlow 0 40) 31) $generated@@651) (=> (= (ControlFlow 0 40) 38) $generated@@650)))))
(let (($generated@@653  (=> (and (<= ($generated@@76 0) $generated@@616) (<= $generated@@616 $generated@@617)) (and (=> (= (ControlFlow 0 39) 31) $generated@@651) (=> (= (ControlFlow 0 39) 38) $generated@@650)))))
(let (($generated@@654  (=> (< $generated@@616 ($generated@@76 0)) (and (=> (= (ControlFlow 0 42) 39) $generated@@653) (=> (= (ControlFlow 0 42) 40) $generated@@652)))))
(let (($generated@@655  (=> (<= ($generated@@76 0) $generated@@616) (and (=> (= (ControlFlow 0 41) 39) $generated@@653) (=> (= (ControlFlow 0 41) 40) $generated@@652)))))
(let (($generated@@656  (and (=> (= (ControlFlow 0 43) 41) $generated@@655) (=> (= (ControlFlow 0 43) 42) $generated@@654))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (=> (and (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622)) (<= $generated@@622 $generated@@618)) ($generated@@80 $generated@@619 $generated@@621 $generated@@622)) (=> (and (and (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622)) (<= $generated@@622 $generated@@618)) (= $generated@@623 ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@621 $generated@@622))) (and (=> (= (ControlFlow 0 44) 43) $generated@@656) (=> (= (ControlFlow 0 44) 29) $generated@@657))))))
(let (($generated@@659  (=> (and (not (and (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622)) (<= $generated@@622 $generated@@618))) (= (ControlFlow 0 49) 44)) $generated@@658)))
(let (($generated@@660  (=> (and (and (and (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622)) (<= $generated@@622 $generated@@618)) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and ($generated@@108 ($generated@@8 $generated@@621) $generated@@46 $generated@@620) ($generated@@108 ($generated@@8 $generated@@622) $generated@@46 $generated@@620))) (and (=> (= (ControlFlow 0 45) (- 0 48)) (<= ($generated@@76 0) $generated@@621)) (and (=> (= (ControlFlow 0 45) (- 0 47)) (<= $generated@@621 $generated@@622)) (and (=> (= (ControlFlow 0 45) (- 0 46)) (<= $generated@@622 ($generated@@83 $generated@@619))) (=> (and ($generated@@80 $generated@@619 $generated@@621 $generated@@622) (= (ControlFlow 0 45) 44)) $generated@@658)))))))
(let (($generated@@661  (=> (not (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622))) (and (=> (= (ControlFlow 0 51) 45) $generated@@660) (=> (= (ControlFlow 0 51) 49) $generated@@659)))))
(let (($generated@@662  (=> (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622)) (and (=> (= (ControlFlow 0 50) 45) $generated@@660) (=> (= (ControlFlow 0 50) 49) $generated@@659)))))
(let (($generated@@663  (=> (< $generated@@621 ($generated@@76 0)) (and (=> (= (ControlFlow 0 53) 50) $generated@@662) (=> (= (ControlFlow 0 53) 51) $generated@@661)))))
(let (($generated@@664  (=> (<= ($generated@@76 0) $generated@@621) (and (=> (= (ControlFlow 0 52) 50) $generated@@662) (=> (= (ControlFlow 0 52) 51) $generated@@661)))))
(let (($generated@@665  (=> (and (forall (($generated@@666 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@666) (<= $generated@@666 $generated@@618)) (and ($generated@@80 $generated@@619 $generated@@666 $generated@@618) ($generated@@80 $generated@@619 $generated@@624 $generated@@618)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@666 $generated@@618))
)) (forall (($generated@@667 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@667) (<= $generated@@667 $generated@@618)) (<= ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@667 $generated@@618) ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@624 $generated@@618))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@667 $generated@@618))
))) (and (=> (= (ControlFlow 0 54) 52) $generated@@664) (=> (= (ControlFlow 0 54) 53) $generated@@663)))))
(let (($generated@@668  (=> (and (not (and (<= ($generated@@76 0) $generated@@625) (<= $generated@@625 $generated@@618))) (= (ControlFlow 0 62) 54)) $generated@@665)))
(let (($generated@@669  (=> (and (and (and (<= ($generated@@76 0) $generated@@625) (<= $generated@@625 $generated@@618)) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and ($generated@@108 ($generated@@8 $generated@@625) $generated@@46 $generated@@620) ($generated@@108 ($generated@@8 $generated@@618) $generated@@46 $generated@@620))) (and (=> (= (ControlFlow 0 55) (- 0 61)) (<= ($generated@@76 0) $generated@@625)) (and (=> (= (ControlFlow 0 55) (- 0 60)) (<= $generated@@625 $generated@@618)) (and (=> (= (ControlFlow 0 55) (- 0 59)) (<= $generated@@618 ($generated@@83 $generated@@619))) (=> (and (and ($generated@@80 $generated@@619 $generated@@625 $generated@@618) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and ($generated@@108 ($generated@@8 $generated@@624) $generated@@46 $generated@@620) ($generated@@108 ($generated@@8 $generated@@618) $generated@@46 $generated@@620))) (and (=> (= (ControlFlow 0 55) (- 0 58)) (<= ($generated@@76 0) $generated@@624)) (and (=> (= (ControlFlow 0 55) (- 0 57)) (<= $generated@@624 $generated@@618)) (and (=> (= (ControlFlow 0 55) (- 0 56)) (<= $generated@@618 ($generated@@83 $generated@@619))) (=> (and ($generated@@80 $generated@@619 $generated@@624 $generated@@618) (= (ControlFlow 0 55) 54)) $generated@@665)))))))))))
(let (($generated@@670  (=> (< $generated@@625 ($generated@@76 0)) (and (=> (= (ControlFlow 0 64) 55) $generated@@669) (=> (= (ControlFlow 0 64) 62) $generated@@668)))))
(let (($generated@@671  (=> (<= ($generated@@76 0) $generated@@625) (and (=> (= (ControlFlow 0 63) 55) $generated@@669) (=> (= (ControlFlow 0 63) 62) $generated@@668)))))
(let (($generated@@672  (and (=> (= (ControlFlow 0 65) 63) $generated@@671) (=> (= (ControlFlow 0 65) 64) $generated@@670))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (=> (and (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618)) (<= $generated@@618 ($generated@@83 $generated@@619))) ($generated@@80 $generated@@619 $generated@@624 $generated@@618)) (=> (and (and (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618)) (<= $generated@@618 ($generated@@83 $generated@@619))) (= $generated@@626 ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@624 $generated@@618))) (and (=> (= (ControlFlow 0 66) 65) $generated@@672) (=> (= (ControlFlow 0 66) 28) $generated@@673))))))
(let (($generated@@675  (=> (and (not (and (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618)) (<= $generated@@618 ($generated@@83 $generated@@619)))) (= (ControlFlow 0 71) 66)) $generated@@674)))
(let (($generated@@676  (=> (and (and (and (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618)) (<= $generated@@618 ($generated@@83 $generated@@619))) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and ($generated@@108 ($generated@@8 $generated@@624) $generated@@46 $generated@@620) ($generated@@108 ($generated@@8 $generated@@618) $generated@@46 $generated@@620))) (and (=> (= (ControlFlow 0 67) (- 0 70)) (<= ($generated@@76 0) $generated@@624)) (and (=> (= (ControlFlow 0 67) (- 0 69)) (<= $generated@@624 $generated@@618)) (and (=> (= (ControlFlow 0 67) (- 0 68)) (<= $generated@@618 ($generated@@83 $generated@@619))) (=> (and ($generated@@80 $generated@@619 $generated@@624 $generated@@618) (= (ControlFlow 0 67) 66)) $generated@@674)))))))
(let (($generated@@677  (=> (not (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618))) (and (=> (= (ControlFlow 0 73) 67) $generated@@676) (=> (= (ControlFlow 0 73) 71) $generated@@675)))))
(let (($generated@@678  (=> (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618)) (and (=> (= (ControlFlow 0 72) 67) $generated@@676) (=> (= (ControlFlow 0 72) 71) $generated@@675)))))
(let (($generated@@679  (=> (< $generated@@624 ($generated@@76 0)) (and (=> (= (ControlFlow 0 75) 72) $generated@@678) (=> (= (ControlFlow 0 75) 73) $generated@@677)))))
(let (($generated@@680  (=> (<= ($generated@@76 0) $generated@@624) (and (=> (= (ControlFlow 0 74) 72) $generated@@678) (=> (= (ControlFlow 0 74) 73) $generated@@677)))))
(let (($generated@@681  (=> (not $generated@@627) (and (=> (= (ControlFlow 0 76) 74) $generated@@680) (=> (= (ControlFlow 0 76) 75) $generated@@679)))))
(let (($generated@@682  (and (=> (= (ControlFlow 0 22) (- 0 25)) (<= ($generated@@76 0) $generated@@628)) (=> (<= ($generated@@76 0) $generated@@628) (and (=> (= (ControlFlow 0 22) (- 0 24)) (<= $generated@@628 $generated@@629)) (=> (<= $generated@@628 $generated@@629) (and (=> (= (ControlFlow 0 22) (- 0 23)) (<= $generated@@629 ($generated@@83 $generated@@619))) (=> (<= $generated@@629 ($generated@@83 $generated@@619)) (=> (= (ControlFlow 0 22) (- 0 21)) (forall (($generated@@683 Int) ($generated@@684 Int) ) (!  (=> true (=> (and (and (<= ($generated@@76 0) $generated@@683) (<= $generated@@683 $generated@@684)) (<= $generated@@684 ($generated@@83 $generated@@619))) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@683 $generated@@684) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@683 $generated@@684))
)))))))))))
(let (($generated@@685  (=> (and (and (<= ($generated@@83 $generated@@619) $generated@@618) (= $generated@@628 $generated@@621)) (and (= $generated@@629 $generated@@622) (= (ControlFlow 0 26) 22))) $generated@@682)))
(let (($generated@@686  (and (=> (= (ControlFlow 0 3) (- 0 14)) (or (<= 0 $generated@@630) (= (- ($generated@@83 $generated@@619) $generated@@631) $generated@@630))) (=> (or (<= 0 $generated@@630) (= (- ($generated@@83 $generated@@619) $generated@@631) $generated@@630)) (and (=> (= (ControlFlow 0 3) (- 0 13)) (< (- ($generated@@83 $generated@@619) $generated@@631) $generated@@630)) (=> (< (- ($generated@@83 $generated@@619) $generated@@631) $generated@@630) (=> (=> (and (and (<= ($generated@@76 0) $generated@@632) (<= $generated@@632 $generated@@631)) (<= $generated@@631 ($generated@@83 $generated@@619))) (and ($generated@@80 $generated@@619 $generated@@632 $generated@@631) (=> (= $generated@@633 ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@632 $generated@@631)) (and (forall (($generated@@687 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@687) (<= $generated@@687 $generated@@631)) (and ($generated@@80 $generated@@619 $generated@@687 $generated@@631) ($generated@@80 $generated@@619 $generated@@632 $generated@@631)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@687 $generated@@631))
)) (=> (forall (($generated@@688 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@688) (<= $generated@@688 $generated@@631)) (<= ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@688 $generated@@631) ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@632 $generated@@631))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@688 $generated@@631))
)) (=> (and (and (<= ($generated@@76 0) $generated@@634) (<= $generated@@634 $generated@@635)) (<= $generated@@635 $generated@@631)) (and ($generated@@80 $generated@@619 $generated@@634 $generated@@635) (=> (= $generated@@636 ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@634 $generated@@635)) (forall (($generated@@689 Int) ($generated@@690 Int) ) (!  (=> (and (and (<= ($generated@@76 0) $generated@@689) (<= $generated@@689 $generated@@690)) (<= $generated@@690 $generated@@631)) (and ($generated@@80 $generated@@619 $generated@@689 $generated@@690) ($generated@@80 $generated@@619 $generated@@634 $generated@@635)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@689 $generated@@690))
)))))))))) (and (=> (= (ControlFlow 0 3) (- 0 12)) (=> $generated@@627 (<= ($generated@@76 0) $generated@@632))) (=> (=> $generated@@627 (<= ($generated@@76 0) $generated@@632)) (and (=> (= (ControlFlow 0 3) (- 0 11)) (=> $generated@@627 (<= $generated@@632 $generated@@631))) (=> (=> $generated@@627 (<= $generated@@632 $generated@@631)) (and (=> (= (ControlFlow 0 3) (- 0 10)) (=> $generated@@627 (<= $generated@@631 ($generated@@83 $generated@@619)))) (=> (=> $generated@@627 (<= $generated@@631 ($generated@@83 $generated@@619))) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> $generated@@627 (= $generated@@633 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@632 $generated@@631)))) (=> (=> $generated@@627 (= $generated@@633 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@632 $generated@@631))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> $generated@@627 (forall (($generated@@691 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@691) (<= $generated@@691 $generated@@631)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@691 $generated@@631) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@632 $generated@@631))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@691 $generated@@631))
)))) (=> (=> $generated@@627 (forall (($generated@@692 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@692) (<= $generated@@692 $generated@@631)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@692 $generated@@631) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@632 $generated@@631))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@692 $generated@@631))
))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> $generated@@627 (<= ($generated@@76 0) $generated@@634))) (=> (=> $generated@@627 (<= ($generated@@76 0) $generated@@634)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> $generated@@627 (<= $generated@@634 $generated@@635))) (=> (=> $generated@@627 (<= $generated@@634 $generated@@635)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@627 (<= $generated@@635 $generated@@631))) (=> (=> $generated@@627 (<= $generated@@635 $generated@@631)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@627 (= $generated@@636 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@634 $generated@@635)))) (=> (=> $generated@@627 (= $generated@@636 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@634 $generated@@635))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@627 (forall (($generated@@693 Int) ($generated@@694 Int) ) (!  (=> true (=> (and (and (<= ($generated@@76 0) $generated@@693) (<= $generated@@693 $generated@@694)) (<= $generated@@694 $generated@@631)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@693 $generated@@694) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@693 $generated@@694))
)))))))))))))))))))))))))))))
(let (($generated@@695  (=> (<= $generated@@637 $generated@@623) (=> (and (= $generated@@634 $generated@@621) (= $generated@@635 $generated@@622)) (=> (and (and (= $generated@@636 $generated@@623) (= $generated@@632 $generated@@624)) (and (= $generated@@633 $generated@@637) (= (ControlFlow 0 17) 3))) $generated@@686)))))
(let (($generated@@696  (=> (< $generated@@623 $generated@@637) (=> (and (= $generated@@634 $generated@@624) (= $generated@@635 $generated@@631)) (=> (and (and (= $generated@@636 $generated@@637) (= $generated@@632 $generated@@624)) (and (= $generated@@633 $generated@@637) (= (ControlFlow 0 16) 3))) $generated@@686)))))
(let (($generated@@697  (=> (<= 0 $generated@@637) (and (=> (= (ControlFlow 0 18) 16) $generated@@696) (=> (= (ControlFlow 0 18) 17) $generated@@695)))))
(let (($generated@@698  (=> (and (and (and (< $generated@@637 0) (= $generated@@638 ($generated@@76 0))) (and (= $generated@@634 $generated@@621) (= $generated@@635 $generated@@622))) (and (and (= $generated@@636 $generated@@623) (= $generated@@632 $generated@@631)) (and (= $generated@@633 $generated@@638) (= (ControlFlow 0 15) 3)))) $generated@@686)))
(let (($generated@@699  (=> (and (< $generated@@618 ($generated@@83 $generated@@619)) (= $generated@@630 (- ($generated@@83 $generated@@619) $generated@@618))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@83 $generated@@619)))) (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@83 $generated@@619))) (=> (and (= $generated@@637 (+ $generated@@626 ($generated ($generated@@84 $generated@@2 ($generated@@85 $generated@@619 $generated@@618))))) (= $generated@@631 (+ $generated@@618 1))) (and (=> (= (ControlFlow 0 19) 15) $generated@@698) (=> (= (ControlFlow 0 19) 18) $generated@@697))))))))
(let (($generated@@700  (=> $generated@@627 (and (=> (= (ControlFlow 0 27) 26) $generated@@685) (=> (= (ControlFlow 0 27) 19) $generated@@699)))))
(let (($generated@@701  (and (=> (= (ControlFlow 0 77) 76) $generated@@681) (=> (= (ControlFlow 0 77) 27) $generated@@700))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (<= 0 $generated@@621) (<= 0 $generated@@622)) (not false)) (= $generated@@639 0)) (= $generated@@640 0)) (<= 0 $generated@@623)) (<= 0 $generated@@618)) (<= 0 $generated@@624)) (<= 0 $generated@@626)) (= $generated@@641 0)) (= $generated@@642 0)) (=> $generated@@627 (=> (and (and (<= ($generated@@76 0) $generated@@624) (<= $generated@@624 $generated@@618)) (<= $generated@@618 ($generated@@83 $generated@@619))) ($generated@@80 $generated@@619 $generated@@624 $generated@@618)))) (and (and (=> $generated@@627 (<= ($generated@@76 0) $generated@@624)) (=> $generated@@627 (<= $generated@@624 $generated@@618))) (and (=> $generated@@627 (<= $generated@@618 ($generated@@83 $generated@@619))) (=> $generated@@627 (= $generated@@626 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@624 $generated@@618)))))) (and (and (and (and (=> $generated@@627 (forall (($generated@@704 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@704) (<= $generated@@704 $generated@@618)) (and ($generated@@80 $generated@@619 $generated@@704 $generated@@618) ($generated@@80 $generated@@619 $generated@@624 $generated@@618)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@704 $generated@@618))
))) (=> $generated@@627 (forall (($generated@@705 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@705) (<= $generated@@705 $generated@@618)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@705 $generated@@618) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@624 $generated@@618))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@705 $generated@@618))
)))) (and (=> $generated@@627 (forall (($generated@@706 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@706) (<= $generated@@706 $generated@@618)) (<= ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@706 $generated@@618) ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@624 $generated@@618))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@706 $generated@@618))
))) (=> $generated@@627 (=> (and (and (<= ($generated@@76 0) $generated@@621) (<= $generated@@621 $generated@@622)) (<= $generated@@622 $generated@@618)) ($generated@@80 $generated@@619 $generated@@621 $generated@@622))))) (and (and (=> $generated@@627 (<= ($generated@@76 0) $generated@@621)) (=> $generated@@627 (<= $generated@@621 $generated@@622))) (and (=> $generated@@627 (<= $generated@@622 $generated@@618)) (=> $generated@@627 (= $generated@@623 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@621 $generated@@622)))))) (and (and (and (=> $generated@@627 (forall (($generated@@707 Int) ($generated@@708 Int) ) (!  (=> (and (and (<= ($generated@@76 0) $generated@@707) (<= $generated@@707 $generated@@708)) (<= $generated@@708 $generated@@618)) (and ($generated@@80 $generated@@619 $generated@@707 $generated@@708) ($generated@@80 $generated@@619 $generated@@621 $generated@@622)))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@707 $generated@@708))
))) (=> $generated@@627 (forall (($generated@@709 Int) ($generated@@710 Int) ) (!  (=> true (=> (and (and (<= ($generated@@76 0) $generated@@709) (<= $generated@@709 $generated@@710)) (<= $generated@@710 $generated@@618)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@709 $generated@@710) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@709 $generated@@710))
)))) (and (=> $generated@@627 (forall (($generated@@711 Int) ($generated@@712 Int) ) (!  (=> true (=> (and (and (<= ($generated@@76 0) $generated@@711) (<= $generated@@711 $generated@@712)) (<= $generated@@712 $generated@@618)) (<= ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@711 $generated@@712) ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@73 ($generated@@74 $generated@@286) $generated@@619 $generated@@711 $generated@@712))
))) (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@111) (=> (and (not (= $generated@@713 $generated@@643)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@620 $generated@@713) $generated@@60))) (= ($generated@@115 $generated@@620 $generated@@713) ($generated@@115 $generated@@620 $generated@@713))))
 :pattern ( ($generated@@115 $generated@@620 $generated@@713))
)))) (and (and ($generated@@166 $generated@@620 $generated@@620) (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (! (let (($generated@@716 ($generated@@67 (type $generated@@715))))
 (=> (and (and (= (type $generated@@714) $generated@@111) (= (type $generated@@715) ($generated@@66 $generated@@716))) (and (not (= $generated@@714 $generated@@643)) ($generated@@0 ($generated@@117 ($generated@@115 $generated@@620 $generated@@714) $generated@@60)))) (or (= ($generated@@117 ($generated@@115 $generated@@620 $generated@@714) $generated@@715) ($generated@@117 ($generated@@115 $generated@@620 $generated@@714) $generated@@715)) ($generated@@0 ($generated@@191 $generated@@644 $generated@@714 $generated@@715)))))
 :pattern ( ($generated@@117 ($generated@@115 $generated@@620 $generated@@714) $generated@@715))
))) (and (<= (- ($generated@@83 $generated@@619) $generated@@618) $generated@@645) (=> (= (- ($generated@@83 $generated@@619) $generated@@618) $generated@@645) true)))))) (and (=> (= (ControlFlow 0 78) 1) $generated@@702) (=> (= (ControlFlow 0 78) 77) $generated@@701)))))
(let (($generated@@717  (=> (and (and (and (= $generated@@644 ($generated@@192 $generated@@643 $generated@@620 $generated@@60 false)) (= $generated@@639 ($generated@@76 0))) (and (= $generated@@640 ($generated@@76 0)) (= $generated@@646 ($generated@@76 0)))) (and (and (= $generated@@647 ($generated@@76 0)) (= $generated@@641 ($generated@@76 0))) (and (= $generated@@642 ($generated@@76 0)) (= $generated@@645 (- ($generated@@83 $generated@@619) $generated@@647))))) (and (=> (= (ControlFlow 0 79) (- 0 89)) (=> $generated@@627 (<= ($generated@@76 0) $generated@@641))) (=> (=> $generated@@627 (<= ($generated@@76 0) $generated@@641)) (and (=> (= (ControlFlow 0 79) (- 0 88)) (=> $generated@@627 (<= $generated@@641 $generated@@647))) (=> (=> $generated@@627 (<= $generated@@641 $generated@@647)) (and (=> (= (ControlFlow 0 79) (- 0 87)) (=> $generated@@627 (<= $generated@@647 ($generated@@83 $generated@@619)))) (=> (=> $generated@@627 (<= $generated@@647 ($generated@@83 $generated@@619))) (and (=> (= (ControlFlow 0 79) (- 0 86)) (=> $generated@@627 (= $generated@@642 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@641 $generated@@647)))) (=> (=> $generated@@627 (= $generated@@642 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@641 $generated@@647))) (and (=> (= (ControlFlow 0 79) (- 0 85)) (=> $generated@@627 (forall (($generated@@718 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@718) (<= $generated@@718 $generated@@647)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@718 $generated@@647) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@641 $generated@@647))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@718 $generated@@647))
)))) (=> (=> $generated@@627 (forall (($generated@@719 Int) ) (!  (=> true (=> (and (<= ($generated@@76 0) $generated@@719) (<= $generated@@719 $generated@@647)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@719 $generated@@647) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@641 $generated@@647))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@719 $generated@@647))
))) (and (=> (= (ControlFlow 0 79) (- 0 84)) (=> $generated@@627 (<= ($generated@@76 0) $generated@@639))) (=> (=> $generated@@627 (<= ($generated@@76 0) $generated@@639)) (and (=> (= (ControlFlow 0 79) (- 0 83)) (=> $generated@@627 (<= $generated@@639 $generated@@640))) (=> (=> $generated@@627 (<= $generated@@639 $generated@@640)) (and (=> (= (ControlFlow 0 79) (- 0 82)) (=> $generated@@627 (<= $generated@@640 $generated@@647))) (=> (=> $generated@@627 (<= $generated@@640 $generated@@647)) (and (=> (= (ControlFlow 0 79) (- 0 81)) (=> $generated@@627 (= $generated@@646 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@639 $generated@@640)))) (=> (=> $generated@@627 (= $generated@@646 ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@639 $generated@@640))) (and (=> (= (ControlFlow 0 79) (- 0 80)) (=> $generated@@627 (forall (($generated@@720 Int) ($generated@@721 Int) ) (!  (=> true (=> (and (and (<= ($generated@@76 0) $generated@@720) (<= $generated@@720 $generated@@721)) (<= $generated@@721 $generated@@647)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@720 $generated@@721) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@720 $generated@@721))
)))) (=> (=> $generated@@627 (forall (($generated@@722 Int) ($generated@@723 Int) ) (!  (=> true (=> (and (and (<= ($generated@@76 0) $generated@@722) (<= $generated@@722 $generated@@723)) (<= $generated@@723 $generated@@647)) (<= ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@722 $generated@@723) ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@73 ($generated@@74 ($generated@@74 $generated@@286)) $generated@@619 $generated@@722 $generated@@723))
))) (=> (= (ControlFlow 0 79) 78) $generated@@703))))))))))))))))))))))))
(let (($generated@@724  (=> (and ($generated@@269 $generated@@620) ($generated@@648 $generated@@620)) (=> (and (and ($generated@@81 $generated@@619 ($generated@@82 $generated@@46)) ($generated@@108 $generated@@619 ($generated@@82 $generated@@46) $generated@@620)) (and (= 1 $generated@@72) (= (ControlFlow 0 90) 79))) $generated@@717))))
$generated@@724))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
