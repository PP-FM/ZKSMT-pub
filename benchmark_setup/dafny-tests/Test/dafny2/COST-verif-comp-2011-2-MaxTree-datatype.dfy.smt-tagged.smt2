(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U Int T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (Int) Int)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@316 (T@U T@U Int) Bool)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 () T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U Int) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 T@U) ) (! (= (type ($generated@@136 $generated@@139 $generated@@140 $generated@@141)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@72)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@137) (= (type $generated@@145) $generated@@137)) (= ($generated@@138 ($generated@@136 $generated@@143 $generated@@144 $generated@@145)) $generated@@65))
 :pattern ( ($generated@@136 $generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@137)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@137) (= (type $generated@@150) $generated@@137)) (= ($generated@@146 ($generated@@136 $generated@@148 $generated@@149 $generated@@150)) $generated@@148))
 :pattern ( ($generated@@136 $generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@137) (= (type $generated@@154) $generated@@137)) (= ($generated@@151 ($generated@@136 $generated@@152 $generated@@153 $generated@@154)) $generated@@153))
 :pattern ( ($generated@@136 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@137)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@137) (= (type $generated@@159) $generated@@137)) (= ($generated@@155 ($generated@@136 $generated@@157 $generated@@158 $generated@@159)) $generated@@159))
 :pattern ( ($generated@@136 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@160 $generated@@161 ($generated@@79 0)))
 :pattern ( ($generated@@160 $generated@@161 ($generated@@79 0)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@164 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@68) (= (type $generated@@167) $generated@@68)) (= (type $generated@@168) $generated@@137)) ($generated@@160 $generated@@168 ($generated@@163 $generated@@166 $generated@@167))) ($generated@@162 $generated@@168))
 :pattern ( ($generated@@162 $generated@@168) ($generated@@160 $generated@@168 ($generated@@163 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@137) (= (type $generated@@176) $generated@@137)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (= (type $generated@@177) $generated@@137))
(assert (= ($generated@@138 $generated@@177) $generated@@63))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@172 $generated@@2)) (= (type $generated@@182) $generated@@68)) ($generated@@160 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@160 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@71 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@70 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@70 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@71 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@81) (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@246) ($generated@@70 $generated@@4))) (= (type $generated@@248) $generated@@81)) (= (type $generated@@249) ($generated@@70 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@137)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@68) (= (type $generated@@256) $generated@@68)) (= (type $generated@@257) $generated@@172)) (= (type $generated@@258) $generated@@172)) (= ($generated@@160 ($generated@@251 $generated@@257 $generated@@258) ($generated@@163 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@160 ($generated@@251 $generated@@257 $generated@@258) ($generated@@163 $generated@@255 $generated@@256)))
)))
(assert (= (type $generated@@259) $generated@@68))
(assert ($generated@@160 $generated@@177 $generated@@259))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@260 $generated@@261)) ($generated@@78 $generated@@177 $generated@@259 $generated@@261))
 :pattern ( ($generated@@78 $generated@@177 $generated@@259 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@137) (= (type $generated@@263) $generated@@137)) (= ($generated@@169 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@169 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@137) (= (type $generated@@266) $generated@@137)) (= ($generated@@264 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@264 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@80 $generated@@172 $generated@@4)) (= (type $generated@@270) $generated@@68)) (= ($generated@@160 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@172) ($generated@@0 ($generated@@85 $generated@@269 $generated@@271))) ($generated@@252 $generated@@271 $generated@@270))
 :pattern ( ($generated@@85 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@160 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@80 $generated@@172 $generated@@4)) (= (type $generated@@275) $generated@@68)) (= ($generated@@160 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@172) ($generated@@0 ($generated@@85 $generated@@274 $generated@@276))) ($generated@@252 $generated@@276 $generated@@275))
 :pattern ( ($generated@@85 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@160 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 Int) ) (! (= ($generated@@277 $generated@@278) $generated@@278)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 (type $generated@@280)))
(= (type ($generated@@279 $generated@@280)) $generated@@281))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@279 $generated@@282) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 Int) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@137) (= (type $generated@@285) $generated@@137)) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@260 $generated@@286)) (= ($generated@@78 ($generated@@136 $generated@@283 $generated@@284 $generated@@285) $generated@@259 $generated@@286)  (and (and ($generated@@78 $generated@@283 $generated@@259 $generated@@286) ($generated@@78 ($generated@@8 $generated@@284) $generated@@46 $generated@@286)) ($generated@@78 $generated@@285 $generated@@259 $generated@@286))))
 :pattern ( ($generated@@78 ($generated@@136 $generated@@283 $generated@@284 $generated@@285) $generated@@259 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@137) (= (type $generated@@289) $generated@@137)) (and ($generated@@287 $generated@@288) ($generated@@287 $generated@@289))) (= ($generated@@264 $generated@@288 $generated@@289) true))
 :pattern ( ($generated@@264 $generated@@288 $generated@@289) ($generated@@287 $generated@@288))
 :pattern ( ($generated@@264 $generated@@288 $generated@@289) ($generated@@287 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@68) (= (type $generated@@292) $generated@@68)) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@172)) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@260 $generated@@295)) (= ($generated@@78 ($generated@@251 $generated@@293 $generated@@294) ($generated@@163 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@78 ($generated@@251 $generated@@293 $generated@@294) ($generated@@163 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@137) (= ($generated@@162 $generated@@296) (= ($generated@@138 $generated@@296) $generated@@61)))
 :pattern ( ($generated@@162 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@137) (= ($generated@@287 $generated@@297) (= ($generated@@138 $generated@@297) $generated@@63)))
 :pattern ( ($generated@@287 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@137) (= ($generated@@298 $generated@@299) (= ($generated@@138 $generated@@299) $generated@@65)))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@137) ($generated@@298 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@137) (= (type $generated@@303) $generated@@137)) (= $generated@@300 ($generated@@136 $generated@@301 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@298 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@137) ($generated@@162 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@172) (= (type $generated@@306) $generated@@172)) (= $generated@@304 ($generated@@251 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@162 $generated@@304))
)))
(assert  (and (and (forall (($generated@@311 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@311)) 17)) (forall (($generated@@312 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@309 $generated@@312))
))) (forall (($generated@@313 T@T) ) (! (= (type ($generated@@307 $generated@@313)) ($generated@@309 $generated@@313))
 :pattern ( ($generated@@307 $generated@@313))
))))
(assert (forall (($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@314)) 0)
 :pattern ( ($generated@@307 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@137) ($generated@@287 $generated@@315)) (= $generated@@315 $generated@@177))
 :pattern ( ($generated@@287 $generated@@315))
)))
(assert  (and (= ($generated@@1 $generated@@318) 18) (forall (($generated@@319 T@U) ) (! (= (type ($generated@@317 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@317 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 Int) ) (!  (=> (and (= (type $generated@@320) $generated@@318) (= (type $generated@@321) $generated@@137)) (= ($generated@@316 ($generated@@317 $generated@@320) $generated@@321 $generated@@322) ($generated@@316 $generated@@320 $generated@@321 $generated@@322)))
 :pattern ( ($generated@@316 ($generated@@317 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@172)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@68) (= (type $generated@@327) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@290 ($generated@@323 $generated@@325) $generated@@326 $generated@@327) ($generated@@78 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@290 ($generated@@323 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@80 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@83 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@80 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@85 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 19)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 20)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@83 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@80 $generated@@371 $generated@@2)) (= ($generated@@179 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@85 $generated@@370 $generated@@372))) (<= ($generated ($generated@@85 $generated@@370 $generated@@372)) ($generated@@328 $generated@@370))))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@179 $generated@@370))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@172) ($generated@@252 $generated@@376 $generated@@259)) (and (= ($generated@@323 ($generated@@373 $generated@@137 $generated@@376)) $generated@@376) ($generated@@160 ($generated@@373 $generated@@137 $generated@@376) $generated@@259)))
 :pattern ( ($generated@@252 $generated@@376 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 Int) ) (!  (=> (and (and (= (type $generated@@379) $generated@@318) (= (type $generated@@380) $generated@@137)) (or ($generated@@378 $generated@@380 $generated@@381) (and (not (= 1 $generated@@377)) ($generated@@160 $generated@@380 $generated@@259)))) true)
 :pattern ( ($generated@@316 $generated@@379 $generated@@380 $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(let (($generated@@384 ($generated@@337 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@336 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@335 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@334 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@338 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@338 (type $generated@@389))))
(let (($generated@@391 ($generated@@337 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@336 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@335 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@356 (type $generated@@393))))
(let (($generated@@395 ($generated@@355 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@354 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@353 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@352 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@356 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@80 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@80 $generated@@172 $generated@@2)) (= (type $generated@@405) $generated@@68)) (= ($generated@@160 $generated@@404 ($generated@@178 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@172) (< 0 ($generated ($generated@@85 $generated@@404 $generated@@406)))) ($generated@@252 $generated@@406 $generated@@405))
 :pattern ( ($generated@@85 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@160 $generated@@404 ($generated@@178 $generated@@405)))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 Int) ) (!  (=> (and (and (= (type $generated@@407) $generated@@318) (= (type $generated@@408) $generated@@137)) (or ($generated@@378 ($generated@@279 $generated@@408) ($generated@@277 $generated@@409)) (and (not (= 1 $generated@@377)) ($generated@@160 $generated@@408 $generated@@259)))) (and (=> (not ($generated@@0 ($generated@@279 ($generated@@11 ($generated@@287 ($generated@@279 $generated@@408)))))) (let (($generated@@410 ($generated@@279 ($generated@@155 ($generated@@279 $generated@@408)))))
(let (($generated@@411 ($generated@@277 ($generated@@151 ($generated@@279 $generated@@408)))))
(let (($generated@@412 ($generated@@279 ($generated@@146 ($generated@@279 $generated@@408)))))
 (=> (not (= $generated@@411 ($generated@@277 $generated@@409))) (and ($generated@@378 $generated@@412 ($generated@@277 $generated@@409)) (=> (not ($generated@@316 ($generated@@317 $generated@@407) $generated@@412 ($generated@@277 $generated@@409))) ($generated@@378 $generated@@410 ($generated@@277 $generated@@409))))))))) (= ($generated@@316 ($generated@@317 $generated@@407) ($generated@@279 $generated@@408) ($generated@@277 $generated@@409)) (ite ($generated@@287 ($generated@@279 $generated@@408)) false (let (($generated@@413 ($generated@@279 ($generated@@155 ($generated@@279 $generated@@408)))))
(let (($generated@@414 ($generated@@277 ($generated@@151 ($generated@@279 $generated@@408)))))
(let (($generated@@415 ($generated@@279 ($generated@@146 ($generated@@279 $generated@@408)))))
 (or (or (= $generated@@414 ($generated@@277 $generated@@409)) ($generated@@316 ($generated@@317 $generated@@407) $generated@@415 ($generated@@277 $generated@@409))) ($generated@@316 ($generated@@317 $generated@@407) $generated@@413 ($generated@@277 $generated@@409))))))))))
 :weight 3
 :pattern ( ($generated@@316 ($generated@@317 $generated@@407) ($generated@@279 $generated@@408) ($generated@@277 $generated@@409)))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@80 $generated@@172 $generated@@4)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@416 ($generated@@267 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@172) ($generated@@0 ($generated@@85 $generated@@416 $generated@@419))) ($generated@@290 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@85 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@416 ($generated@@267 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@80 $generated@@172 $generated@@4)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@420 ($generated@@272 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@172) ($generated@@0 ($generated@@85 $generated@@420 $generated@@423))) ($generated@@290 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@85 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@78 $generated@@420 ($generated@@272 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(= ($generated ($generated@@85 ($generated@@329 $generated@@425) $generated@@424)) 0))
 :pattern ( (let (($generated@@425 (type $generated@@424)))
($generated@@85 ($generated@@329 $generated@@425) $generated@@424)))
)))
(assert  (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@428)) ($generated@@80 $generated@@172 $generated@@4))
 :pattern ( ($generated@@426 $generated@@428))
)) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@338 (type $generated@@429))))
(let (($generated@@431 ($generated@@337 (type $generated@@429))))
(= (type ($generated@@427 $generated@@429)) ($generated@@80 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@427 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@336 $generated@@172 $generated@@172)) (= (type $generated@@433) $generated@@172)) (= ($generated@@0 ($generated@@85 ($generated@@426 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@432) ($generated@@170 ($generated@@373 $generated@@137 $generated@@433)))) (= ($generated@@85 ($generated@@427 $generated@@432) ($generated@@170 ($generated@@373 $generated@@137 $generated@@433))) ($generated@@171 ($generated@@373 $generated@@137 $generated@@433))))))
 :pattern ( ($generated@@85 ($generated@@426 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@80 $generated@@172 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@356 (type $generated@@437))))
(let (($generated@@439 ($generated@@355 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@80 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@354 $generated@@172 $generated@@172)) (= (type $generated@@441) $generated@@172)) (= ($generated@@0 ($generated@@85 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@440) ($generated@@170 ($generated@@373 $generated@@137 $generated@@441)))) (= ($generated@@85 ($generated@@435 $generated@@440) ($generated@@170 ($generated@@373 $generated@@137 $generated@@441))) ($generated@@171 ($generated@@373 $generated@@137 $generated@@441))))))
 :pattern ( ($generated@@85 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@337 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@336 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@85 ($generated@@427 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@427 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@355 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@354 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@68)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@336 $generated@@172 $generated@@172)) (= (type $generated@@456) $generated@@68)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@172) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@455) $generated@@459))) (and ($generated@@290 ($generated@@85 ($generated@@427 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@290 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@85 ($generated@@427 $generated@@455) $generated@@459))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@78 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@354 $generated@@172 $generated@@172)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) $generated@@68)) (= (type $generated@@466) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@172) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@463) $generated@@467))) (and ($generated@@290 ($generated@@85 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@290 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@78 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@137) ($generated@@160 $generated@@468 $generated@@259)) (or ($generated@@287 $generated@@468) ($generated@@298 $generated@@468)))
 :pattern ( ($generated@@298 $generated@@468) ($generated@@160 $generated@@468 $generated@@259))
 :pattern ( ($generated@@287 $generated@@468) ($generated@@160 $generated@@468 $generated@@259))
)))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@80 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@356 (type $generated@@471))))
(let (($generated@@473 ($generated@@355 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@354 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@353 $generated@@473 $generated@@472)) (= ($generated@@352 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@352 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@356 (type $generated@@474))))
(let (($generated@@476 ($generated@@355 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@354 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@353 $generated@@476 $generated@@475)) (= ($generated@@397 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@397 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@356 (type $generated@@477))))
(let (($generated@@479 ($generated@@355 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@354 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@353 $generated@@479 $generated@@478)) (= ($generated@@434 $generated@@477) ($generated@@469 $generated@@172))))))
 :pattern ( ($generated@@434 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@338 (type $generated@@480))))
(let (($generated@@482 ($generated@@337 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@336 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@335 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@172) (= (type $generated@@484) $generated@@172)) ($generated@@0 ($generated@@85 ($generated@@426 $generated@@480) ($generated@@323 ($generated@@251 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@426 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@356 (type $generated@@485))))
(let (($generated@@487 ($generated@@355 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@354 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@353 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@172) (= (type $generated@@489) $generated@@172)) ($generated@@0 ($generated@@85 ($generated@@434 $generated@@485) ($generated@@323 ($generated@@251 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@434 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) ($generated@@252 $generated@@490 $generated@@46)) (and (= ($generated@@323 ($generated@@373 $generated@@2 $generated@@490)) $generated@@490) ($generated@@160 ($generated@@373 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@172) ($generated@@252 $generated@@491 $generated@@47)) (and (= ($generated@@323 ($generated@@373 $generated@@3 $generated@@491)) $generated@@491) ($generated@@160 ($generated@@373 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@172) ($generated@@252 $generated@@492 $generated@@44)) (and (= ($generated@@323 ($generated@@373 $generated@@4 $generated@@492)) $generated@@492) ($generated@@160 ($generated@@373 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 21))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@172) ($generated@@252 $generated@@494 $generated@@45)) (and (= ($generated@@323 ($generated@@373 $generated@@493 $generated@@494)) $generated@@494) ($generated@@160 ($generated@@373 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@252 ($generated@@323 $generated@@495) $generated@@496) ($generated@@160 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@252 ($generated@@323 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@83 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@80 $generated@@498 $generated@@2)) (<= 0 ($generated@@328 $generated@@497))))
 :pattern ( ($generated@@328 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@310 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@309 $generated@@500)) (<= 0 ($generated@@308 $generated@@499))))
 :pattern ( ($generated@@308 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@452 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@452 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@452 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@452 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@76 ($generated@@452 $generated@@509 $generated@@510)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@460 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@460 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@460 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@460 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@76 ($generated@@460 $generated@@519 $generated@@520)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@172) (= (type $generated@@522) $generated@@172)) (= ($generated@@138 ($generated@@251 $generated@@521 $generated@@522)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@523 ($generated@@163 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@163 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@163 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@163 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@172) (= (type $generated@@532) $generated@@172)) (= ($generated@@170 ($generated@@251 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@251 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@172) (= (type $generated@@534) $generated@@172)) (= ($generated@@171 ($generated@@251 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@251 $generated@@533 $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@310 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@309 $generated@@172)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@308 $generated@@541))) ($generated@@290 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@78 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 Int) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@137) (= (type $generated@@547) $generated@@137)) (= ($generated@@136 ($generated@@279 $generated@@545) ($generated@@277 $generated@@546) ($generated@@279 $generated@@547)) ($generated@@279 ($generated@@136 $generated@@545 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@136 ($generated@@279 $generated@@545) ($generated@@277 $generated@@546) ($generated@@279 $generated@@547)))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@79 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@79 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@68)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@68) (= ($generated@@550 ($generated@@267 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@267 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@76 ($generated@@267 $generated@@553)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@554 ($generated@@272 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@272 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@76 ($generated@@272 $generated@@557)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@178 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@178 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@76 ($generated@@178 $generated@@561)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@535 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@535 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@76 ($generated@@535 $generated@@565)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@373 $generated@@567 ($generated@@323 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@323 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@137) (= (type $generated@@571) $generated@@137)) (< ($generated@@568 $generated@@569) ($generated@@568 ($generated@@136 $generated@@569 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@136 $generated@@569 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 Int) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@137) (= (type $generated@@574) $generated@@137)) (< ($generated@@568 $generated@@574) ($generated@@568 ($generated@@136 $generated@@572 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@136 $generated@@572 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@336 $generated@@172 $generated@@172)) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) (= ($generated@@160 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@172) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@575) $generated@@578))) (and ($generated@@252 ($generated@@85 ($generated@@427 $generated@@575) $generated@@578) $generated@@577) ($generated@@252 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@85 ($generated@@427 $generated@@575) $generated@@578))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@160 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@354 $generated@@172 $generated@@172)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) (= ($generated@@160 $generated@@579 ($generated@@460 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@172) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@579) $generated@@582))) (and ($generated@@252 ($generated@@85 ($generated@@435 $generated@@579) $generated@@582) $generated@@581) ($generated@@252 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@85 ($generated@@435 $generated@@579) $generated@@582))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@160 $generated@@579 ($generated@@460 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@137) (= (type $generated@@584) $generated@@137)) (and ($generated@@298 $generated@@583) ($generated@@298 $generated@@584))) (= ($generated@@264 $generated@@583 $generated@@584)  (and (and ($generated@@264 ($generated@@146 $generated@@583) ($generated@@146 $generated@@584)) (= ($generated@@151 $generated@@583) ($generated@@151 $generated@@584))) ($generated@@264 ($generated@@155 $generated@@583) ($generated@@155 $generated@@584)))))
 :pattern ( ($generated@@264 $generated@@583 $generated@@584) ($generated@@298 $generated@@583))
 :pattern ( ($generated@@264 $generated@@583 $generated@@584) ($generated@@298 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@172) (= (type $generated@@587) $generated@@172)) (< ($generated@@585 $generated@@586) ($generated@@568 ($generated@@251 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@251 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@172) (= (type $generated@@589) $generated@@172)) (< ($generated@@585 $generated@@589) ($generated@@568 ($generated@@251 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@251 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@172) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@252 $generated@@590 ($generated@@452 $generated@@591 $generated@@592))) (and (= ($generated@@323 ($generated@@373 ($generated@@336 $generated@@172 $generated@@172) $generated@@590)) $generated@@590) ($generated@@160 ($generated@@373 ($generated@@336 $generated@@172 $generated@@172) $generated@@590) ($generated@@452 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@252 $generated@@590 ($generated@@452 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@172) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@252 $generated@@593 ($generated@@460 $generated@@594 $generated@@595))) (and (= ($generated@@323 ($generated@@373 ($generated@@354 $generated@@172 $generated@@172) $generated@@593)) $generated@@593) ($generated@@160 ($generated@@373 ($generated@@354 $generated@@172 $generated@@172) $generated@@593) ($generated@@460 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@252 $generated@@593 ($generated@@460 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@172)) ($generated@@252 $generated@@598 ($generated@@163 $generated@@596 $generated@@597))) (and (= ($generated@@323 ($generated@@373 $generated@@137 $generated@@598)) $generated@@598) ($generated@@160 ($generated@@373 $generated@@137 $generated@@598) ($generated@@163 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@252 $generated@@598 ($generated@@163 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (not ($generated@@0 ($generated@@85 ($generated@@469 $generated@@600) $generated@@599))))
 :pattern ( (let (($generated@@600 (type $generated@@599)))
($generated@@85 ($generated@@469 $generated@@600) $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@73)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@68) (= (type $generated@@604) $generated@@68)) (and (= ($generated@@76 ($generated@@163 $generated@@603 $generated@@604)) $generated@@62) (= ($generated@@601 ($generated@@163 $generated@@603 $generated@@604)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@137) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@606) (and ($generated@@298 $generated@@605) ($generated@@78 $generated@@605 $generated@@259 $generated@@606)))) ($generated@@78 ($generated@@8 ($generated@@151 $generated@@605)) $generated@@46 $generated@@606))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@151 $generated@@605)) $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@137) (= ($generated@@585 ($generated@@323 $generated@@607)) ($generated@@568 $generated@@607)))
 :pattern ( ($generated@@585 ($generated@@323 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@172) ($generated@@252 $generated@@608 ($generated@@79 0))) (and (= ($generated@@323 ($generated@@373 $generated@@2 $generated@@608)) $generated@@608) ($generated@@160 ($generated@@373 ($generated@@80 $generated@@172 $generated@@4) $generated@@608) ($generated@@79 0))))
 :pattern ( ($generated@@252 $generated@@608 ($generated@@79 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@172) (= (type $generated@@610) $generated@@68)) ($generated@@252 $generated@@609 ($generated@@267 $generated@@610))) (and (= ($generated@@323 ($generated@@373 ($generated@@80 $generated@@172 $generated@@4) $generated@@609)) $generated@@609) ($generated@@160 ($generated@@373 ($generated@@80 $generated@@172 $generated@@4) $generated@@609) ($generated@@267 $generated@@610))))
 :pattern ( ($generated@@252 $generated@@609 ($generated@@267 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@172) (= (type $generated@@612) $generated@@68)) ($generated@@252 $generated@@611 ($generated@@272 $generated@@612))) (and (= ($generated@@323 ($generated@@373 ($generated@@80 $generated@@172 $generated@@4) $generated@@611)) $generated@@611) ($generated@@160 ($generated@@373 ($generated@@80 $generated@@172 $generated@@4) $generated@@611) ($generated@@272 $generated@@612))))
 :pattern ( ($generated@@252 $generated@@611 ($generated@@272 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@172) (= (type $generated@@614) $generated@@68)) ($generated@@252 $generated@@613 ($generated@@178 $generated@@614))) (and (= ($generated@@323 ($generated@@373 ($generated@@80 $generated@@172 $generated@@2) $generated@@613)) $generated@@613) ($generated@@160 ($generated@@373 ($generated@@80 $generated@@172 $generated@@2) $generated@@613) ($generated@@178 $generated@@614))))
 :pattern ( ($generated@@252 $generated@@613 ($generated@@178 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@172) (= (type $generated@@616) $generated@@68)) ($generated@@252 $generated@@615 ($generated@@535 $generated@@616))) (and (= ($generated@@323 ($generated@@373 ($generated@@309 $generated@@172) $generated@@615)) $generated@@615) ($generated@@160 ($generated@@373 ($generated@@309 $generated@@172) $generated@@615) ($generated@@535 $generated@@616))))
 :pattern ( ($generated@@252 $generated@@615 ($generated@@535 $generated@@616)))
)))
(assert (= ($generated@@76 $generated@@259) $generated@@64))
(assert (= ($generated@@601 $generated@@259) $generated@@67))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@80 $generated@@172 $generated@@2)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@617 ($generated@@178 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@172) (< 0 ($generated ($generated@@85 $generated@@617 $generated@@620)))) ($generated@@290 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@85 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@78 $generated@@617 ($generated@@178 $generated@@618) $generated@@619))
)))
(assert (= $generated@@177 ($generated@@279 $generated@@177)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@137) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@623) (and ($generated@@162 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@68) ($generated@@78 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@78 $generated@@621 ($generated@@163 $generated@@622 $generated@@624) $generated@@623))
))))) ($generated@@290 ($generated@@170 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@290 ($generated@@170 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@137) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@627) (and ($generated@@162 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@78 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@78 $generated@@625 ($generated@@163 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@290 ($generated@@171 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@290 ($generated@@171 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@137) (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@630) (and ($generated@@298 $generated@@629) ($generated@@78 $generated@@629 $generated@@259 $generated@@630)))) ($generated@@78 ($generated@@146 $generated@@629) $generated@@259 $generated@@630))
 :pattern ( ($generated@@78 ($generated@@146 $generated@@629) $generated@@259 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@137) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@260 $generated@@632) (and ($generated@@298 $generated@@631) ($generated@@78 $generated@@631 $generated@@259 $generated@@632)))) ($generated@@78 ($generated@@155 $generated@@631) $generated@@259 $generated@@632))
 :pattern ( ($generated@@78 ($generated@@155 $generated@@631) $generated@@259 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@172) (= (type $generated@@634) $generated@@172)) (= ($generated@@251 ($generated@@279 $generated@@633) ($generated@@279 $generated@@634)) ($generated@@279 ($generated@@251 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@251 ($generated@@279 $generated@@633) ($generated@@279 $generated@@634)))
)))
(assert (forall (($generated@@635 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@277 $generated@@635))) ($generated@@279 ($generated@@323 ($generated@@8 $generated@@635))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@277 $generated@@635))))
)))
(assert (forall (($generated@@636 T@U) ) (! (= ($generated@@323 ($generated@@279 $generated@@636)) ($generated@@279 ($generated@@323 $generated@@636)))
 :pattern ( ($generated@@323 ($generated@@279 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@310 (type $generated@@637))))
 (=> (and (= (type $generated@@637) ($generated@@309 $generated@@638)) (= ($generated@@308 $generated@@637) 0)) (= $generated@@637 ($generated@@307 $generated@@638))))
 :pattern ( ($generated@@308 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@640)))
 (=> (and (and (= (type $generated@@639) ($generated@@80 $generated@@642 $generated@@2)) (= (type $generated@@641) $generated@@2)) (<= 0 ($generated $generated@@641))) (= ($generated@@328 ($generated@@86 $generated@@639 $generated@@640 $generated@@641)) (+ (- ($generated@@328 $generated@@639) ($generated ($generated@@85 $generated@@639 $generated@@640))) ($generated $generated@@641)))))
 :pattern ( ($generated@@328 ($generated@@86 $generated@@639 $generated@@640 $generated@@641)))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (and (and (= (type $generated@@643) $generated@@318) (= (type $generated@@644) $generated@@137)) (or ($generated@@378 $generated@@644 $generated@@645) (and (not (= 1 $generated@@377)) ($generated@@160 $generated@@644 $generated@@259)))) (and (=> (not ($generated@@287 $generated@@644)) (let (($generated@@646 ($generated@@155 $generated@@644)))
(let (($generated@@647 ($generated@@151 $generated@@644)))
(let (($generated@@648 ($generated@@146 $generated@@644)))
 (=> (not (= $generated@@647 $generated@@645)) (and ($generated@@378 $generated@@648 $generated@@645) (=> (not ($generated@@316 $generated@@643 $generated@@648 $generated@@645)) ($generated@@378 $generated@@646 $generated@@645)))))))) (= ($generated@@316 ($generated@@317 $generated@@643) $generated@@644 $generated@@645) (ite ($generated@@287 $generated@@644) false (let (($generated@@649 ($generated@@155 $generated@@644)))
(let (($generated@@650 ($generated@@151 $generated@@644)))
(let (($generated@@651 ($generated@@146 $generated@@644)))
 (or (or (= $generated@@650 $generated@@645) ($generated@@316 $generated@@643 $generated@@651 $generated@@645)) ($generated@@316 $generated@@643 $generated@@649 $generated@@645)))))))))
 :pattern ( ($generated@@316 ($generated@@317 $generated@@643) $generated@@644 $generated@@645))
))))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@653) $generated@@2)) ($generated@@78 $generated@@653 $generated@@46 $generated@@652))
 :pattern ( ($generated@@78 $generated@@653 $generated@@46 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@655) $generated@@3)) ($generated@@78 $generated@@655 $generated@@47 $generated@@654))
 :pattern ( ($generated@@78 $generated@@655 $generated@@47 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@4)) ($generated@@78 $generated@@657 $generated@@44 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@44 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@659) $generated@@493)) ($generated@@78 $generated@@659 $generated@@45 $generated@@658))
 :pattern ( ($generated@@78 $generated@@659 $generated@@45 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) $generated@@172)) ($generated@@78 $generated@@661 $generated@@48 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@48 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@137) (= (type $generated@@664) $generated@@137)) (= ($generated@@160 ($generated@@136 $generated@@662 $generated@@663 $generated@@664) $generated@@259)  (and (and ($generated@@160 $generated@@662 $generated@@259) ($generated@@160 ($generated@@8 $generated@@663) $generated@@46)) ($generated@@160 $generated@@664 $generated@@259))))
 :pattern ( ($generated@@160 ($generated@@136 $generated@@662 $generated@@663 $generated@@664) $generated@@259))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@309 $generated@@172)) (= (type $generated@@666) $generated@@68)) (= ($generated@@160 $generated@@665 ($generated@@535 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@308 $generated@@665))) ($generated@@252 ($generated@@536 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@536 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@160 $generated@@665 ($generated@@535 $generated@@666)))
)))
(assert  (and (forall (($generated@@670 T@U) ) (! (= (type ($generated@@668 $generated@@670)) $generated@@318)
 :pattern ( ($generated@@668 $generated@@670))
)) (= (type $generated@@669) $generated@@318)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (and (= (type $generated@@671) $generated@@318) (= (type $generated@@672) $generated@@137)) (= ($generated@@316 $generated@@671 $generated@@672 $generated@@673) ($generated@@316 $generated@@669 $generated@@672 $generated@@673)))
 :pattern ( ($generated@@316 ($generated@@668 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@309 $generated@@172)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@308 $generated@@675))) (< ($generated@@568 ($generated@@373 $generated@@137 ($generated@@536 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@568 ($generated@@373 $generated@@137 ($generated@@536 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@336 $generated@@172 $generated@@172)) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@68)) ($generated@@160 $generated@@677 ($generated@@452 $generated@@678 $generated@@679))) (and (and ($generated@@160 ($generated@@334 $generated@@677) ($generated@@267 $generated@@678)) ($generated@@160 ($generated@@386 $generated@@677) ($generated@@267 $generated@@679))) ($generated@@160 ($generated@@426 $generated@@677) ($generated@@267 ($generated@@163 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@160 $generated@@677 ($generated@@452 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@354 $generated@@172 $generated@@172)) (= (type $generated@@681) $generated@@68)) (= (type $generated@@682) $generated@@68)) ($generated@@160 $generated@@680 ($generated@@460 $generated@@681 $generated@@682))) (and (and ($generated@@160 ($generated@@352 $generated@@680) ($generated@@272 $generated@@681)) ($generated@@160 ($generated@@397 $generated@@680) ($generated@@272 $generated@@682))) ($generated@@160 ($generated@@434 $generated@@680) ($generated@@272 ($generated@@163 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@160 $generated@@680 ($generated@@460 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@160 $generated@@683 $generated@@46))
 :pattern ( ($generated@@160 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@160 $generated@@684 $generated@@47))
 :pattern ( ($generated@@160 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@160 $generated@@685 $generated@@44))
 :pattern ( ($generated@@160 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@493) ($generated@@160 $generated@@686 $generated@@45))
 :pattern ( ($generated@@160 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@172) ($generated@@160 $generated@@687 $generated@@48))
 :pattern ( ($generated@@160 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@690) $generated@@137) (= (type $generated@@691) $generated@@137)) (= (type $generated@@692) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@693) $generated@@137)) (= (type $generated@@694) $generated@@137)) (= (type $generated@@696) $generated@@137)) (= (type $generated@@697) $generated@@137)) (= (type $generated@@699) $generated@@137)) (= (type $generated@@700) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@701) $generated@@81)) (= (type $generated@@702) ($generated@@185 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@704 true))
(let (($generated@@705  (=> (and (or (= $generated@@688 $generated@@689) ($generated@@316 ($generated@@317 $generated@@669) $generated@@690 $generated@@689)) (= (ControlFlow 0 8) 4)) $generated@@704)))
(let (($generated@@706  (=> (not (or (= $generated@@688 $generated@@689) ($generated@@316 ($generated@@317 $generated@@669) $generated@@690 $generated@@689))) (=> (and ($generated@@78 $generated@@691 $generated@@259 $generated@@692) ($generated@@78 ($generated@@8 $generated@@689) $generated@@46 $generated@@692)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (or (<= 0 $generated@@689) (< ($generated@@568 $generated@@691) ($generated@@568 $generated@@693))) (= $generated@@689 $generated@@689))) (=> (or (or (<= 0 $generated@@689) (< ($generated@@568 $generated@@691) ($generated@@568 $generated@@693))) (= $generated@@689 $generated@@689)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (< ($generated@@568 $generated@@691) ($generated@@568 $generated@@693)) (and (= ($generated@@568 $generated@@691) ($generated@@568 $generated@@693)) (< $generated@@689 $generated@@689)))) (=> (or (< ($generated@@568 $generated@@691) ($generated@@568 $generated@@693)) (and (= ($generated@@568 $generated@@691) ($generated@@568 $generated@@693)) (< $generated@@689 $generated@@689))) (=> (and ($generated@@378 $generated@@691 $generated@@689) (= (ControlFlow 0 5) 4)) $generated@@704)))))))))
(let (($generated@@707  (=> (= $generated@@688 $generated@@689) (and (=> (= (ControlFlow 0 12) 5) $generated@@706) (=> (= (ControlFlow 0 12) 8) $generated@@705)))))
(let (($generated@@708  (=> (not (= $generated@@688 $generated@@689)) (=> (and ($generated@@78 $generated@@690 $generated@@259 $generated@@692) ($generated@@78 ($generated@@8 $generated@@689) $generated@@46 $generated@@692)) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (or (<= 0 $generated@@689) (< ($generated@@568 $generated@@690) ($generated@@568 $generated@@693))) (= $generated@@689 $generated@@689))) (=> (or (or (<= 0 $generated@@689) (< ($generated@@568 $generated@@690) ($generated@@568 $generated@@693))) (= $generated@@689 $generated@@689)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (< ($generated@@568 $generated@@690) ($generated@@568 $generated@@693)) (and (= ($generated@@568 $generated@@690) ($generated@@568 $generated@@693)) (< $generated@@689 $generated@@689)))) (=> (or (< ($generated@@568 $generated@@690) ($generated@@568 $generated@@693)) (and (= ($generated@@568 $generated@@690) ($generated@@568 $generated@@693)) (< $generated@@689 $generated@@689))) (=> ($generated@@378 $generated@@690 $generated@@689) (and (=> (= (ControlFlow 0 9) 5) $generated@@706) (=> (= (ControlFlow 0 9) 8) $generated@@705)))))))))))
(let (($generated@@709  (=> (= $generated@@693 ($generated@@136 $generated@@694 $generated@@695 $generated@@696)) (=> (and ($generated@@160 $generated@@694 $generated@@259) ($generated@@160 $generated@@696 $generated@@259)) (=> (and (and (and (and ($generated@@160 $generated@@691 $generated@@259) ($generated@@78 $generated@@691 $generated@@259 $generated@@692)) (and (= $generated@@697 $generated@@696) ($generated@@160 $generated@@697 $generated@@259))) (and (and (= $generated@@691 $generated@@697) (= $generated@@698 $generated@@695)) (and ($generated@@160 ($generated@@8 $generated@@698) $generated@@46) (= $generated@@688 $generated@@698)))) (and (and (and ($generated@@160 $generated@@690 $generated@@259) ($generated@@78 $generated@@690 $generated@@259 $generated@@692)) (= $generated@@699 $generated@@694)) (and ($generated@@160 $generated@@699 $generated@@259) (= $generated@@690 $generated@@699)))) (and (=> (= (ControlFlow 0 13) 9) $generated@@708) (=> (= (ControlFlow 0 13) 12) $generated@@707)))))))
(let (($generated@@710 true))
(let (($generated@@711  (=> (not (= $generated@@693 $generated@@177)) (and (=> (= (ControlFlow 0 14) 13) $generated@@709) (=> (= (ControlFlow 0 14) 3) $generated@@710)))))
(let (($generated@@712 true))
(let (($generated@@713  (=> (= $generated@@700 ($generated@@239 $generated@@701 $generated@@692 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 2) $generated@@712) (=> (= (ControlFlow 0 15) 14) $generated@@711)))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (= $generated@@702 ($generated@@184 $generated@@701 $generated@@692 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 1) $generated@@714) (=> (= (ControlFlow 0 16) 15) $generated@@713)))))
(let (($generated@@716  (=> (and (and (and ($generated@@260 $generated@@692) ($generated@@703 $generated@@692)) ($generated@@160 $generated@@693 $generated@@259)) (and (= 1 $generated@@377) (= (ControlFlow 0 17) 16))) $generated@@715)))
$generated@@716))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@308 (T@U T@U Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 () T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U Int) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@T) T@U)
(declare-fun $generated@@498 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@541 (T@U Int) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@679 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@140 $generated@@143 $generated@@144 $generated@@145)) $generated@@141)
 :pattern ( ($generated@@140 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@72)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@141) (= (type $generated@@149) $generated@@141)) (= ($generated@@142 ($generated@@140 $generated@@147 $generated@@148 $generated@@149)) $generated@@65))
 :pattern ( ($generated@@140 $generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@141)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@141) (= (type $generated@@154) $generated@@141)) (= ($generated@@150 ($generated@@140 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@140 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 Int) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@141) (= (type $generated@@158) $generated@@141)) (= ($generated@@155 ($generated@@140 $generated@@156 $generated@@157 $generated@@158)) $generated@@157))
 :pattern ( ($generated@@140 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@141)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@141) (= (type $generated@@163) $generated@@141)) (= ($generated@@159 ($generated@@140 $generated@@161 $generated@@162 $generated@@163)) $generated@@163))
 :pattern ( ($generated@@140 $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@79 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@79 0)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@141)) ($generated@@164 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@164 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@141) (= (type $generated@@180) $generated@@141)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (= (type $generated@@181) $generated@@141))
(assert (= ($generated@@142 $generated@@181) $generated@@63))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@186) $generated@@68)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@81 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@81) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@81)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@141)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@68) (= (type $generated@@248) $generated@@68)) (= (type $generated@@249) $generated@@176)) (= (type $generated@@250) $generated@@176)) (= ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (= (type $generated@@251) $generated@@68))
(assert ($generated@@164 $generated@@181 $generated@@251))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@252 $generated@@253)) ($generated@@78 $generated@@181 $generated@@251 $generated@@253))
 :pattern ( ($generated@@78 $generated@@181 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@141) (= (type $generated@@255) $generated@@141)) (= ($generated@@173 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@173 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@141) (= (type $generated@@258) $generated@@141)) (= ($generated@@256 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@164 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@176) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@244 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@164 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@164 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@176) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@244 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@164 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@141) (= (type $generated@@277) $generated@@141)) (= (type $generated@@278) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@278)) (= ($generated@@78 ($generated@@140 $generated@@275 $generated@@276 $generated@@277) $generated@@251 $generated@@278)  (and (and ($generated@@78 $generated@@275 $generated@@251 $generated@@278) ($generated@@78 ($generated@@8 $generated@@276) $generated@@46 $generated@@278)) ($generated@@78 $generated@@277 $generated@@251 $generated@@278))))
 :pattern ( ($generated@@78 ($generated@@140 $generated@@275 $generated@@276 $generated@@277) $generated@@251 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@141) (= (type $generated@@281) $generated@@141)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@256 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@176)) (= (type $generated@@286) $generated@@176)) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@287)) (= ($generated@@78 ($generated@@243 $generated@@285 $generated@@286) ($generated@@167 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@78 ($generated@@243 $generated@@285 $generated@@286) ($generated@@167 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@141) (= ($generated@@166 $generated@@288) (= ($generated@@142 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@141) (= ($generated@@279 $generated@@289) (= ($generated@@142 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@279 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@141) (= ($generated@@290 $generated@@291) (= ($generated@@142 $generated@@291) $generated@@65)))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@141) ($generated@@290 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@141) (= (type $generated@@295) $generated@@141)) (= $generated@@292 ($generated@@140 $generated@@293 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@141) ($generated@@166 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@176) (= (type $generated@@298) $generated@@176)) (= $generated@@296 ($generated@@243 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@166 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 17)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@141) ($generated@@279 $generated@@307)) (= $generated@@307 $generated@@181))
 :pattern ( ($generated@@279 $generated@@307))
)))
(assert  (and (= ($generated@@1 $generated@@310) 18) (forall (($generated@@311 T@U) ) (! (= (type ($generated@@309 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@309 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 Int) ) (!  (=> (and (= (type $generated@@312) $generated@@310) (= (type $generated@@313) $generated@@141)) (= ($generated@@308 ($generated@@309 $generated@@312) $generated@@313 $generated@@314) ($generated@@308 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@176)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@68) (= (type $generated@@319) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@282 ($generated@@315 $generated@@317) $generated@@318 $generated@@319) ($generated@@78 $generated@@317 $generated@@318 $generated@@319)))
 :pattern ( ($generated@@282 ($generated@@315 $generated@@317) $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@320) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@321) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@322) $generated@@176)) (= (type $generated@@323) $generated@@68)) ($generated@@136 $generated@@320 $generated@@321)) ($generated@@282 $generated@@322 $generated@@323 $generated@@320)) ($generated@@282 $generated@@322 $generated@@323 $generated@@321))
 :pattern ( ($generated@@136 $generated@@320 $generated@@321) ($generated@@282 $generated@@322 $generated@@323 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@324) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@327) $generated@@68)) ($generated@@136 $generated@@324 $generated@@325)) ($generated@@78 $generated@@326 $generated@@327 $generated@@324)) ($generated@@78 $generated@@326 $generated@@327 $generated@@325))
 :pattern ( ($generated@@136 $generated@@324 $generated@@325) ($generated@@78 $generated@@326 $generated@@327 $generated@@324))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@80 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@83 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@80 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@85 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 19)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 20)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@83 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@80 $generated@@371 $generated@@2)) (= ($generated@@183 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@85 $generated@@370 $generated@@372))) (<= ($generated ($generated@@85 $generated@@370 $generated@@372)) ($generated@@328 $generated@@370))))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@183 $generated@@370))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@176) ($generated@@244 $generated@@376 $generated@@251)) (and (= ($generated@@315 ($generated@@373 $generated@@141 $generated@@376)) $generated@@376) ($generated@@164 ($generated@@373 $generated@@141 $generated@@376) $generated@@251)))
 :pattern ( ($generated@@244 $generated@@376 $generated@@251))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 Int) ) (!  (=> (and (and (= (type $generated@@379) $generated@@310) (= (type $generated@@380) $generated@@141)) (or ($generated@@378 $generated@@380 $generated@@381) (and (not (= 1 $generated@@377)) ($generated@@164 $generated@@380 $generated@@251)))) true)
 :pattern ( ($generated@@308 $generated@@379 $generated@@380 $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(let (($generated@@384 ($generated@@337 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@336 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@335 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@334 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@338 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@338 (type $generated@@389))))
(let (($generated@@391 ($generated@@337 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@336 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@335 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@356 (type $generated@@393))))
(let (($generated@@395 ($generated@@355 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@354 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@353 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@352 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@356 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@80 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@405) $generated@@68)) (= ($generated@@164 $generated@@404 ($generated@@182 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@176) (< 0 ($generated ($generated@@85 $generated@@404 $generated@@406)))) ($generated@@244 $generated@@406 $generated@@405))
 :pattern ( ($generated@@85 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@164 $generated@@404 ($generated@@182 $generated@@405)))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 Int) ) (!  (=> (and (and (= (type $generated@@407) $generated@@310) (= (type $generated@@408) $generated@@141)) (or ($generated@@378 ($generated@@271 $generated@@408) ($generated@@269 $generated@@409)) (and (not (= 1 $generated@@377)) ($generated@@164 $generated@@408 $generated@@251)))) (and (=> (not ($generated@@0 ($generated@@271 ($generated@@11 ($generated@@279 ($generated@@271 $generated@@408)))))) (let (($generated@@410 ($generated@@271 ($generated@@159 ($generated@@271 $generated@@408)))))
(let (($generated@@411 ($generated@@269 ($generated@@155 ($generated@@271 $generated@@408)))))
(let (($generated@@412 ($generated@@271 ($generated@@150 ($generated@@271 $generated@@408)))))
 (=> (not (= $generated@@411 ($generated@@269 $generated@@409))) (and ($generated@@378 $generated@@412 ($generated@@269 $generated@@409)) (=> (not ($generated@@308 ($generated@@309 $generated@@407) $generated@@412 ($generated@@269 $generated@@409))) ($generated@@378 $generated@@410 ($generated@@269 $generated@@409))))))))) (= ($generated@@308 ($generated@@309 $generated@@407) ($generated@@271 $generated@@408) ($generated@@269 $generated@@409)) (ite ($generated@@279 ($generated@@271 $generated@@408)) false (let (($generated@@413 ($generated@@271 ($generated@@159 ($generated@@271 $generated@@408)))))
(let (($generated@@414 ($generated@@269 ($generated@@155 ($generated@@271 $generated@@408)))))
(let (($generated@@415 ($generated@@271 ($generated@@150 ($generated@@271 $generated@@408)))))
 (or (or (= $generated@@414 ($generated@@269 $generated@@409)) ($generated@@308 ($generated@@309 $generated@@407) $generated@@415 ($generated@@269 $generated@@409))) ($generated@@308 ($generated@@309 $generated@@407) $generated@@413 ($generated@@269 $generated@@409))))))))))
 :weight 3
 :pattern ( ($generated@@308 ($generated@@309 $generated@@407) ($generated@@271 $generated@@408) ($generated@@269 $generated@@409)))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@141) ($generated@@416 $generated@@417)) (or ($generated@@279 $generated@@417) ($generated@@290 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@259 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@176) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@282 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@259 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@264 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@176) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@282 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@264 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@85 ($generated@@329 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@85 ($generated@@329 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@176 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@338 (type $generated@@431))))
(let (($generated@@433 ($generated@@337 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@435) $generated@@176)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@434) ($generated@@174 ($generated@@373 $generated@@141 $generated@@435)))) (= ($generated@@85 ($generated@@429 $generated@@434) ($generated@@174 ($generated@@373 $generated@@141 $generated@@435))) ($generated@@175 ($generated@@373 $generated@@141 $generated@@435))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@80 $generated@@176 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@356 (type $generated@@439))))
(let (($generated@@441 ($generated@@355 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@80 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@443) $generated@@176)) (= ($generated@@0 ($generated@@85 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@442) ($generated@@174 ($generated@@373 $generated@@141 $generated@@443)))) (= ($generated@@85 ($generated@@437 $generated@@442) ($generated@@174 ($generated@@373 $generated@@141 $generated@@443))) ($generated@@175 ($generated@@373 $generated@@141 $generated@@443))))))
 :pattern ( ($generated@@85 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@337 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@85 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@444) $generated@@448))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@355 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@354 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@85 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@457) $generated@@461))) (and ($generated@@282 ($generated@@85 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@282 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@465) $generated@@469))) (and ($generated@@282 ($generated@@85 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@282 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@78 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@141) ($generated@@164 $generated@@470 $generated@@251)) (or ($generated@@279 $generated@@470) ($generated@@290 $generated@@470)))
 :pattern ( ($generated@@290 $generated@@470) ($generated@@164 $generated@@470 $generated@@251))
 :pattern ( ($generated@@279 $generated@@470) ($generated@@164 $generated@@470 $generated@@251))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@472) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@471 $generated@@473))) (and ($generated@@136 $generated@@471 $generated@@472) ($generated@@136 $generated@@472 $generated@@473))) ($generated@@136 $generated@@471 $generated@@473))
 :pattern ( ($generated@@136 $generated@@471 $generated@@472) ($generated@@136 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@T) ) (! (= (type ($generated@@474 $generated@@475)) ($generated@@80 $generated@@475 $generated@@4))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@356 (type $generated@@476))))
(let (($generated@@478 ($generated@@355 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@354 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@353 $generated@@478 $generated@@477)) (= ($generated@@352 $generated@@476) ($generated@@474 $generated@@478))))))
 :pattern ( ($generated@@352 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@356 (type $generated@@479))))
(let (($generated@@481 ($generated@@355 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@354 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@353 $generated@@481 $generated@@480)) (= ($generated@@397 $generated@@479) ($generated@@474 $generated@@480))))))
 :pattern ( ($generated@@397 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@356 (type $generated@@482))))
(let (($generated@@484 ($generated@@355 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@354 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@353 $generated@@484 $generated@@483)) (= ($generated@@436 $generated@@482) ($generated@@474 $generated@@176))))))
 :pattern ( ($generated@@436 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@338 (type $generated@@485))))
(let (($generated@@487 ($generated@@337 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@336 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@335 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@176) (= (type $generated@@489) $generated@@176)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@485) ($generated@@315 ($generated@@243 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@428 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@356 (type $generated@@490))))
(let (($generated@@492 ($generated@@355 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@354 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@353 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (and (and (= (type $generated@@493) $generated@@176) (= (type $generated@@494) $generated@@176)) ($generated@@0 ($generated@@85 ($generated@@436 $generated@@490) ($generated@@315 ($generated@@243 $generated@@493 $generated@@494)))))
 :no-pattern (type $generated@@493)
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@436 $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@176) ($generated@@244 $generated@@495 $generated@@46)) (and (= ($generated@@315 ($generated@@373 $generated@@2 $generated@@495)) $generated@@495) ($generated@@164 ($generated@@373 $generated@@2 $generated@@495) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@495 $generated@@46))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@176) ($generated@@244 $generated@@496 $generated@@47)) (and (= ($generated@@315 ($generated@@373 $generated@@3 $generated@@496)) $generated@@496) ($generated@@164 ($generated@@373 $generated@@3 $generated@@496) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@496 $generated@@47))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@176) ($generated@@244 $generated@@497 $generated@@44)) (and (= ($generated@@315 ($generated@@373 $generated@@4 $generated@@497)) $generated@@497) ($generated@@164 ($generated@@373 $generated@@4 $generated@@497) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@497 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@498) 21))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@176) ($generated@@244 $generated@@499 $generated@@45)) (and (= ($generated@@315 ($generated@@373 $generated@@498 $generated@@499)) $generated@@499) ($generated@@164 ($generated@@373 $generated@@498 $generated@@499) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@499 $generated@@45))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@244 ($generated@@315 $generated@@500) $generated@@501) ($generated@@164 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@244 ($generated@@315 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@83 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@80 $generated@@503 $generated@@2)) (<= 0 ($generated@@328 $generated@@502))))
 :pattern ( ($generated@@328 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@302 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@301 $generated@@505)) (<= 0 ($generated@@300 $generated@@504))))
 :pattern ( ($generated@@300 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@454 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@454 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@454 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@514 $generated@@515)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@462 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@462 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@520 ($generated@@462 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@524 $generated@@525)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@176) (= (type $generated@@527) $generated@@176)) (= ($generated@@142 ($generated@@243 $generated@@526 $generated@@527)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@167 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@167 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@167 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@167 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@176) (= (type $generated@@537) $generated@@176)) (= ($generated@@174 ($generated@@243 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@243 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@176) (= (type $generated@@539) $generated@@176)) (= ($generated@@175 ($generated@@243 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@243 $generated@@538 $generated@@539))
)))
(assert  (and (forall (($generated@@542 T@U) ) (! (= (type ($generated@@540 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@542))
)) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (! (let (($generated@@545 ($generated@@302 (type $generated@@543))))
(= (type ($generated@@541 $generated@@543 $generated@@544)) $generated@@545))
 :pattern ( ($generated@@541 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@301 $generated@@176)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@546 ($generated@@540 $generated@@547) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> (and (<= 0 $generated@@549) (< $generated@@549 ($generated@@300 $generated@@546))) ($generated@@282 ($generated@@541 $generated@@546 $generated@@549) $generated@@547 $generated@@548))
 :pattern ( ($generated@@541 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@78 $generated@@546 ($generated@@540 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 Int) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@141) (= (type $generated@@552) $generated@@141)) (= ($generated@@140 ($generated@@271 $generated@@550) ($generated@@269 $generated@@551) ($generated@@271 $generated@@552)) ($generated@@271 ($generated@@140 $generated@@550 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@140 ($generated@@271 $generated@@550) ($generated@@269 $generated@@551) ($generated@@271 $generated@@552)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@79 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@79 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@259 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@259 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@264 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@264 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@182 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@182 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@76 ($generated@@182 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@540 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@540 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@76 ($generated@@540 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@540 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@373 $generated@@572 ($generated@@315 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@315 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@141) (= (type $generated@@576) $generated@@141)) (< ($generated@@573 $generated@@574) ($generated@@573 ($generated@@140 $generated@@574 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@140 $generated@@574 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@141) (= (type $generated@@579) $generated@@141)) (< ($generated@@573 $generated@@579) ($generated@@573 ($generated@@140 $generated@@577 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@140 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) (= ($generated@@164 $generated@@580 ($generated@@454 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@580) $generated@@583))) (and ($generated@@244 ($generated@@85 ($generated@@429 $generated@@580) $generated@@583) $generated@@582) ($generated@@244 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@580) $generated@@583))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@164 $generated@@580 ($generated@@454 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) (= ($generated@@164 $generated@@584 ($generated@@462 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@584) $generated@@587))) (and ($generated@@244 ($generated@@85 ($generated@@437 $generated@@584) $generated@@587) $generated@@586) ($generated@@244 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@584) $generated@@587))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@164 $generated@@584 ($generated@@462 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@141) (= (type $generated@@589) $generated@@141)) (and ($generated@@290 $generated@@588) ($generated@@290 $generated@@589))) (= ($generated@@256 $generated@@588 $generated@@589)  (and (and ($generated@@256 ($generated@@150 $generated@@588) ($generated@@150 $generated@@589)) (= ($generated@@155 $generated@@588) ($generated@@155 $generated@@589))) ($generated@@256 ($generated@@159 $generated@@588) ($generated@@159 $generated@@589)))))
 :pattern ( ($generated@@256 $generated@@588 $generated@@589) ($generated@@290 $generated@@588))
 :pattern ( ($generated@@256 $generated@@588 $generated@@589) ($generated@@290 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@176) (= (type $generated@@592) $generated@@176)) (< ($generated@@590 $generated@@591) ($generated@@573 ($generated@@243 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@243 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@176) (= (type $generated@@594) $generated@@176)) (< ($generated@@590 $generated@@594) ($generated@@573 ($generated@@243 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@243 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@176) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@244 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@315 ($generated@@373 ($generated@@336 $generated@@176 $generated@@176) $generated@@595)) $generated@@595) ($generated@@164 ($generated@@373 ($generated@@336 $generated@@176 $generated@@176) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@244 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@176) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@244 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@315 ($generated@@373 ($generated@@354 $generated@@176 $generated@@176) $generated@@598)) $generated@@598) ($generated@@164 ($generated@@373 ($generated@@354 $generated@@176 $generated@@176) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@244 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@176)) ($generated@@244 $generated@@603 ($generated@@167 $generated@@601 $generated@@602))) (and (= ($generated@@315 ($generated@@373 $generated@@141 $generated@@603)) $generated@@603) ($generated@@164 ($generated@@373 $generated@@141 $generated@@603) ($generated@@167 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@244 $generated@@603 ($generated@@167 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
 (not ($generated@@0 ($generated@@85 ($generated@@474 $generated@@605) $generated@@604))))
 :pattern ( (let (($generated@@605 (type $generated@@604)))
($generated@@85 ($generated@@474 $generated@@605) $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@73)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@608 $generated@@609)) $generated@@62) (= ($generated@@606 ($generated@@167 $generated@@608 $generated@@609)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@141) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@611) (and ($generated@@290 $generated@@610) ($generated@@78 $generated@@610 $generated@@251 $generated@@611)))) ($generated@@78 ($generated@@8 ($generated@@155 $generated@@610)) $generated@@46 $generated@@611))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@155 $generated@@610)) $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@141) (= ($generated@@590 ($generated@@315 $generated@@612)) ($generated@@573 $generated@@612)))
 :pattern ( ($generated@@590 ($generated@@315 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@176) ($generated@@244 $generated@@613 ($generated@@79 0))) (and (= ($generated@@315 ($generated@@373 $generated@@2 $generated@@613)) $generated@@613) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@613) ($generated@@79 0))))
 :pattern ( ($generated@@244 $generated@@613 ($generated@@79 0)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@176) (= (type $generated@@615) $generated@@68)) ($generated@@244 $generated@@614 ($generated@@259 $generated@@615))) (and (= ($generated@@315 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@614)) $generated@@614) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@614) ($generated@@259 $generated@@615))))
 :pattern ( ($generated@@244 $generated@@614 ($generated@@259 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@176) (= (type $generated@@617) $generated@@68)) ($generated@@244 $generated@@616 ($generated@@264 $generated@@617))) (and (= ($generated@@315 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@616)) $generated@@616) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@616) ($generated@@264 $generated@@617))))
 :pattern ( ($generated@@244 $generated@@616 ($generated@@264 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@176) (= (type $generated@@619) $generated@@68)) ($generated@@244 $generated@@618 ($generated@@182 $generated@@619))) (and (= ($generated@@315 ($generated@@373 ($generated@@80 $generated@@176 $generated@@2) $generated@@618)) $generated@@618) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@2) $generated@@618) ($generated@@182 $generated@@619))))
 :pattern ( ($generated@@244 $generated@@618 ($generated@@182 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@176) (= (type $generated@@621) $generated@@68)) ($generated@@244 $generated@@620 ($generated@@540 $generated@@621))) (and (= ($generated@@315 ($generated@@373 ($generated@@301 $generated@@176) $generated@@620)) $generated@@620) ($generated@@164 ($generated@@373 ($generated@@301 $generated@@176) $generated@@620) ($generated@@540 $generated@@621))))
 :pattern ( ($generated@@244 $generated@@620 ($generated@@540 $generated@@621)))
)))
(assert (= ($generated@@76 $generated@@251) $generated@@64))
(assert (= ($generated@@606 $generated@@251) $generated@@67))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@622 ($generated@@182 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@176) (< 0 ($generated ($generated@@85 $generated@@622 $generated@@625)))) ($generated@@282 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@85 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@182 $generated@@623) $generated@@624))
)))
(assert (= $generated@@181 ($generated@@271 $generated@@181)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@141) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@628) (and ($generated@@166 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@68) ($generated@@78 $generated@@626 ($generated@@167 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@167 $generated@@627 $generated@@629) $generated@@628))
))))) ($generated@@282 ($generated@@174 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@282 ($generated@@174 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@141) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@632) (and ($generated@@166 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@78 $generated@@630 ($generated@@167 $generated@@633 $generated@@631) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@167 $generated@@633 $generated@@631) $generated@@632))
))))) ($generated@@282 ($generated@@175 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@282 ($generated@@175 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@141) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@635) (and ($generated@@290 $generated@@634) ($generated@@78 $generated@@634 $generated@@251 $generated@@635)))) ($generated@@78 ($generated@@150 $generated@@634) $generated@@251 $generated@@635))
 :pattern ( ($generated@@78 ($generated@@150 $generated@@634) $generated@@251 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@141) (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@637) (and ($generated@@290 $generated@@636) ($generated@@78 $generated@@636 $generated@@251 $generated@@637)))) ($generated@@78 ($generated@@159 $generated@@636) $generated@@251 $generated@@637))
 :pattern ( ($generated@@78 ($generated@@159 $generated@@636) $generated@@251 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@176) (= (type $generated@@639) $generated@@176)) (= ($generated@@243 ($generated@@271 $generated@@638) ($generated@@271 $generated@@639)) ($generated@@271 ($generated@@243 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@243 ($generated@@271 $generated@@638) ($generated@@271 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@315 ($generated@@8 ($generated@@269 $generated@@640))) ($generated@@271 ($generated@@315 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@315 ($generated@@8 ($generated@@269 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@315 ($generated@@271 $generated@@641)) ($generated@@271 ($generated@@315 $generated@@641)))
 :pattern ( ($generated@@315 ($generated@@271 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@302 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@301 $generated@@643)) (= ($generated@@300 $generated@@642) 0)) (= $generated@@642 ($generated@@299 $generated@@643))))
 :pattern ( ($generated@@300 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@80 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@328 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@328 $generated@@644) ($generated ($generated@@85 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@328 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (and (and (= (type $generated@@648) $generated@@310) (= (type $generated@@649) $generated@@141)) (or ($generated@@378 $generated@@649 $generated@@650) (and (not (= 1 $generated@@377)) ($generated@@164 $generated@@649 $generated@@251)))) (and (=> (not ($generated@@279 $generated@@649)) (let (($generated@@651 ($generated@@159 $generated@@649)))
(let (($generated@@652 ($generated@@155 $generated@@649)))
(let (($generated@@653 ($generated@@150 $generated@@649)))
 (=> (not (= $generated@@652 $generated@@650)) (and ($generated@@378 $generated@@653 $generated@@650) (=> (not ($generated@@308 $generated@@648 $generated@@653 $generated@@650)) ($generated@@378 $generated@@651 $generated@@650)))))))) (= ($generated@@308 ($generated@@309 $generated@@648) $generated@@649 $generated@@650) (ite ($generated@@279 $generated@@649) false (let (($generated@@654 ($generated@@159 $generated@@649)))
(let (($generated@@655 ($generated@@155 $generated@@649)))
(let (($generated@@656 ($generated@@150 $generated@@649)))
 (or (or (= $generated@@655 $generated@@650) ($generated@@308 $generated@@648 $generated@@656 $generated@@650)) ($generated@@308 $generated@@648 $generated@@654 $generated@@650)))))))))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@648) $generated@@649 $generated@@650))
))))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@2)) ($generated@@78 $generated@@658 $generated@@46 $generated@@657))
 :pattern ( ($generated@@78 $generated@@658 $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@660) $generated@@3)) ($generated@@78 $generated@@660 $generated@@47 $generated@@659))
 :pattern ( ($generated@@78 $generated@@660 $generated@@47 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@662) $generated@@4)) ($generated@@78 $generated@@662 $generated@@44 $generated@@661))
 :pattern ( ($generated@@78 $generated@@662 $generated@@44 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@664) $generated@@498)) ($generated@@78 $generated@@664 $generated@@45 $generated@@663))
 :pattern ( ($generated@@78 $generated@@664 $generated@@45 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@666) $generated@@176)) ($generated@@78 $generated@@666 $generated@@48 $generated@@665))
 :pattern ( ($generated@@78 $generated@@666 $generated@@48 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@141) (= (type $generated@@669) $generated@@141)) (= ($generated@@164 ($generated@@140 $generated@@667 $generated@@668 $generated@@669) $generated@@251)  (and (and ($generated@@164 $generated@@667 $generated@@251) ($generated@@164 ($generated@@8 $generated@@668) $generated@@46)) ($generated@@164 $generated@@669 $generated@@251))))
 :pattern ( ($generated@@164 ($generated@@140 $generated@@667 $generated@@668 $generated@@669) $generated@@251))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@301 $generated@@176)) (= (type $generated@@671) $generated@@68)) (= ($generated@@164 $generated@@670 ($generated@@540 $generated@@671)) (forall (($generated@@672 Int) ) (!  (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@300 $generated@@670))) ($generated@@244 ($generated@@541 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@541 $generated@@670 $generated@@672))
))))
 :pattern ( ($generated@@164 $generated@@670 ($generated@@540 $generated@@671)))
)))
(assert  (and (forall (($generated@@675 T@U) ) (! (= (type ($generated@@673 $generated@@675)) $generated@@310)
 :pattern ( ($generated@@673 $generated@@675))
)) (= (type $generated@@674) $generated@@310)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 Int) ) (!  (=> (and (= (type $generated@@676) $generated@@310) (= (type $generated@@677) $generated@@141)) (= ($generated@@308 $generated@@676 $generated@@677 $generated@@678) ($generated@@308 $generated@@674 $generated@@677 $generated@@678)))
 :pattern ( ($generated@@308 ($generated@@673 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 Int) ) (!  (=> (= (type $generated@@680) ($generated@@301 $generated@@176)) (=> (and (<= 0 $generated@@681) (< $generated@@681 ($generated@@300 $generated@@680))) (< ($generated@@573 ($generated@@373 $generated@@141 ($generated@@541 $generated@@680 $generated@@681))) ($generated@@679 $generated@@680))))
 :pattern ( ($generated@@573 ($generated@@373 $generated@@141 ($generated@@541 $generated@@680 $generated@@681))))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@683) $generated@@68)) (= (type $generated@@684) $generated@@68)) ($generated@@164 $generated@@682 ($generated@@454 $generated@@683 $generated@@684))) (and (and ($generated@@164 ($generated@@334 $generated@@682) ($generated@@259 $generated@@683)) ($generated@@164 ($generated@@386 $generated@@682) ($generated@@259 $generated@@684))) ($generated@@164 ($generated@@428 $generated@@682) ($generated@@259 ($generated@@167 $generated@@683 $generated@@684)))))
 :pattern ( ($generated@@164 $generated@@682 ($generated@@454 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (= (type $generated@@685) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@686) $generated@@68)) (= (type $generated@@687) $generated@@68)) ($generated@@164 $generated@@685 ($generated@@462 $generated@@686 $generated@@687))) (and (and ($generated@@164 ($generated@@352 $generated@@685) ($generated@@264 $generated@@686)) ($generated@@164 ($generated@@397 $generated@@685) ($generated@@264 $generated@@687))) ($generated@@164 ($generated@@436 $generated@@685) ($generated@@264 ($generated@@167 $generated@@686 $generated@@687)))))
 :pattern ( ($generated@@164 $generated@@685 ($generated@@462 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@2) ($generated@@164 $generated@@688 $generated@@46))
 :pattern ( ($generated@@164 $generated@@688 $generated@@46))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@3) ($generated@@164 $generated@@689 $generated@@47))
 :pattern ( ($generated@@164 $generated@@689 $generated@@47))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@4) ($generated@@164 $generated@@690 $generated@@44))
 :pattern ( ($generated@@164 $generated@@690 $generated@@44))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@498) ($generated@@164 $generated@@691 $generated@@45))
 :pattern ( ($generated@@164 $generated@@691 $generated@@45))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@176) ($generated@@164 $generated@@692 $generated@@48))
 :pattern ( ($generated@@164 $generated@@692 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 (T@U) Bool)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () Int)
(declare-fun $generated@@711 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@693) $generated@@141) (= (type $generated@@695) $generated@@141)) (= (type $generated@@697) $generated@@141)) (= (type $generated@@698) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@699) $generated@@141)) (= (type $generated@@700) $generated@@141)) (= (type $generated@@703) $generated@@141)) (= (type $generated@@704) $generated@@141)) (= (type $generated@@705) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@708) $generated@@81)) (= (type $generated@@709) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@711) ($generated@@189 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@712  (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@378 $generated@@693 $generated@@694) (or ($generated@@308 ($generated@@309 $generated@@674) $generated@@693 $generated@@694) (=> ($generated@@279 $generated@@693) ($generated@@0 ($generated@@271 ($generated@@11 false))))))) (=> (=> ($generated@@378 $generated@@693 $generated@@694) (or ($generated@@308 ($generated@@309 $generated@@674) $generated@@693 $generated@@694) (=> ($generated@@279 $generated@@693) ($generated@@0 ($generated@@271 ($generated@@11 false)))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@378 $generated@@693 $generated@@694) (or ($generated@@308 ($generated@@309 $generated@@674) $generated@@693 $generated@@694) (=> (not ($generated@@279 $generated@@693)) (let (($generated@@713 ($generated@@159 $generated@@693)))
(let (($generated@@714 ($generated@@155 $generated@@693)))
(let (($generated@@715 ($generated@@150 $generated@@693)))
 (or (or (= $generated@@714 $generated@@694) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@715 $generated@@694)) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@713 $generated@@694))))))))) (=> (=> ($generated@@378 $generated@@693 $generated@@694) (or ($generated@@308 ($generated@@309 $generated@@674) $generated@@693 $generated@@694) (=> (not ($generated@@279 $generated@@693)) (let (($generated@@716 ($generated@@159 $generated@@693)))
(let (($generated@@717 ($generated@@155 $generated@@693)))
(let (($generated@@718 ($generated@@150 $generated@@693)))
 (or (or (= $generated@@717 $generated@@694) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@718 $generated@@694)) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@716 $generated@@694)))))))) (=> (= (ControlFlow 0 6) (- 0 5)) (forall (($generated@@719 Int) ) (!  (=> true (=> ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@693 $generated@@719) (<= $generated@@719 $generated@@694)))
 :pattern ( ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@693 $generated@@719))
)))))))))
(let (($generated@@720  (=> (= $generated@@693 ($generated@@140 $generated@@695 $generated@@696 $generated@@697)) (=> (and (and ($generated@@164 $generated@@695 $generated@@251) ($generated@@78 $generated@@695 $generated@@251 $generated@@698)) (and ($generated@@164 $generated@@697 $generated@@251) ($generated@@78 $generated@@697 $generated@@251 $generated@@698))) (=> (and (and (and ($generated@@164 $generated@@699 $generated@@251) ($generated@@78 $generated@@699 $generated@@251 $generated@@698)) (and (= $generated@@700 $generated@@697) ($generated@@164 $generated@@700 $generated@@251))) (and (and (= $generated@@699 $generated@@700) (= $generated@@701 $generated@@696)) (and ($generated@@164 ($generated@@8 $generated@@701) $generated@@46) (= $generated@@702 $generated@@701)))) (=> (and (and (and (and (and ($generated@@164 $generated@@703 $generated@@251) ($generated@@78 $generated@@703 $generated@@251 $generated@@698)) (= $generated@@704 $generated@@695)) (and ($generated@@164 $generated@@704 $generated@@251) (= $generated@@703 $generated@@704))) (and (and (and ($generated@@252 $generated@@705) ($generated@@706 $generated@@705)) (=> (not (= $generated@@707 $generated@@702)) ($generated@@378 $generated@@699 $generated@@707))) (and (or (= $generated@@707 $generated@@702) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@699 $generated@@707)) (=> (<= $generated@@702 $generated@@707) (forall (($generated@@721 Int) ) (! ($generated@@378 $generated@@699 $generated@@721)
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@699 $generated@@721))
)))))) (and (and (and (and (<= $generated@@702 $generated@@707) (forall (($generated@@722 Int) ) (!  (=> true (=> ($generated@@308 ($generated@@309 $generated@@674) $generated@@699 $generated@@722) (<= $generated@@722 $generated@@707)))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@699 $generated@@722))
))) (and (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@81) (=> (and (not (= $generated@@723 $generated@@708)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@698 $generated@@723) $generated@@60))) (= ($generated@@85 $generated@@705 $generated@@723) ($generated@@85 $generated@@698 $generated@@723))))
 :pattern ( ($generated@@85 $generated@@705 $generated@@723))
)) ($generated@@136 $generated@@698 $generated@@705))) (and (and ($generated@@252 $generated@@709) ($generated@@706 $generated@@709)) (=> (not (= $generated@@710 $generated@@707)) ($generated@@378 $generated@@703 $generated@@710)))) (and (and (and (or (= $generated@@710 $generated@@707) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@703 $generated@@710)) (=> (<= $generated@@707 $generated@@710) (forall (($generated@@724 Int) ) (! ($generated@@378 $generated@@703 $generated@@724)
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@703 $generated@@724))
)))) (and (<= $generated@@707 $generated@@710) (forall (($generated@@725 Int) ) (!  (=> true (=> ($generated@@308 ($generated@@309 $generated@@674) $generated@@703 $generated@@725) (<= $generated@@725 $generated@@710)))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@703 $generated@@725))
)))) (and (and (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@81) (=> (and (not (= $generated@@726 $generated@@708)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@705 $generated@@726) $generated@@60))) (= ($generated@@85 $generated@@709 $generated@@726) ($generated@@85 $generated@@705 $generated@@726))))
 :pattern ( ($generated@@85 $generated@@709 $generated@@726))
)) ($generated@@136 $generated@@705 $generated@@709)) (and (= $generated@@694 $generated@@710) (= (ControlFlow 0 9) 6)))))) $generated@@712))))))
(let (($generated@@727 true))
(let (($generated@@728  (=> (and (= $generated@@693 $generated@@181) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@729  (=> (not (= $generated@@693 ($generated@@140 $generated@@695 $generated@@696 $generated@@697))) (and (=> (= (ControlFlow 0 4) 2) $generated@@728) (=> (= (ControlFlow 0 4) 3) $generated@@727)))))
(let (($generated@@730  (=> (= $generated@@711 ($generated@@188 $generated@@708 $generated@@698 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@720) (=> (= (ControlFlow 0 10) 4) $generated@@729)))))
(let (($generated@@731  (=> (and ($generated@@252 $generated@@698) ($generated@@706 $generated@@698)) (=> (and (and (and (and ($generated@@164 $generated@@693 $generated@@251) ($generated@@78 $generated@@693 $generated@@251 $generated@@698)) ($generated@@416 $generated@@693)) (= 3 $generated@@377)) (and (not ($generated@@256 $generated@@693 $generated@@181)) (= (ControlFlow 0 11) 10))) $generated@@730))))
$generated@@731))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@308 (T@U T@U Int) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 () T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 (T@U Int) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@474 (T@T) T@U)
(declare-fun $generated@@498 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@541 (T@U Int) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@673 (T@U) T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@679 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 T@U) ) (! (= (type ($generated@@140 $generated@@143 $generated@@144 $generated@@145)) $generated@@141)
 :pattern ( ($generated@@140 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@72)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@141) (= (type $generated@@149) $generated@@141)) (= ($generated@@142 ($generated@@140 $generated@@147 $generated@@148 $generated@@149)) $generated@@65))
 :pattern ( ($generated@@140 $generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@141)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@141) (= (type $generated@@154) $generated@@141)) (= ($generated@@150 ($generated@@140 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@140 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 Int) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@141) (= (type $generated@@158) $generated@@141)) (= ($generated@@155 ($generated@@140 $generated@@156 $generated@@157 $generated@@158)) $generated@@157))
 :pattern ( ($generated@@140 $generated@@156 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@141)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 Int) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@141) (= (type $generated@@163) $generated@@141)) (= ($generated@@159 ($generated@@140 $generated@@161 $generated@@162 $generated@@163)) $generated@@163))
 :pattern ( ($generated@@140 $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@79 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@79 0)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@141)) ($generated@@164 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@164 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@141) (= (type $generated@@180) $generated@@141)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (= (type $generated@@181) $generated@@141))
(assert (= ($generated@@142 $generated@@181) $generated@@63))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@186) $generated@@68)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@81 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@81) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@81)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@141)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@68) (= (type $generated@@248) $generated@@68)) (= (type $generated@@249) $generated@@176)) (= (type $generated@@250) $generated@@176)) (= ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@164 ($generated@@243 $generated@@249 $generated@@250) ($generated@@167 $generated@@247 $generated@@248)))
)))
(assert (= (type $generated@@251) $generated@@68))
(assert ($generated@@164 $generated@@181 $generated@@251))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@252 $generated@@253)) ($generated@@78 $generated@@181 $generated@@251 $generated@@253))
 :pattern ( ($generated@@78 $generated@@181 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@141) (= (type $generated@@255) $generated@@141)) (= ($generated@@173 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@173 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@141) (= (type $generated@@258) $generated@@141)) (= ($generated@@256 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@164 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@176) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@244 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@164 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@164 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@176) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@244 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@164 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@275) $generated@@141) (= (type $generated@@277) $generated@@141)) (= (type $generated@@278) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@278)) (= ($generated@@78 ($generated@@140 $generated@@275 $generated@@276 $generated@@277) $generated@@251 $generated@@278)  (and (and ($generated@@78 $generated@@275 $generated@@251 $generated@@278) ($generated@@78 ($generated@@8 $generated@@276) $generated@@46 $generated@@278)) ($generated@@78 $generated@@277 $generated@@251 $generated@@278))))
 :pattern ( ($generated@@78 ($generated@@140 $generated@@275 $generated@@276 $generated@@277) $generated@@251 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@141) (= (type $generated@@281) $generated@@141)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@256 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@176)) (= (type $generated@@286) $generated@@176)) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@252 $generated@@287)) (= ($generated@@78 ($generated@@243 $generated@@285 $generated@@286) ($generated@@167 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@78 ($generated@@243 $generated@@285 $generated@@286) ($generated@@167 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@141) (= ($generated@@166 $generated@@288) (= ($generated@@142 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@141) (= ($generated@@279 $generated@@289) (= ($generated@@142 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@279 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@141) (= ($generated@@290 $generated@@291) (= ($generated@@142 $generated@@291) $generated@@65)))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@141) ($generated@@290 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@141) (= (type $generated@@295) $generated@@141)) (= $generated@@292 ($generated@@140 $generated@@293 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@290 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@141) ($generated@@166 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@176) (= (type $generated@@298) $generated@@176)) (= $generated@@296 ($generated@@243 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@166 $generated@@296))
)))
(assert  (and (and (forall (($generated@@303 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@303)) 17)) (forall (($generated@@304 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
))) (forall (($generated@@305 T@T) ) (! (= (type ($generated@@299 $generated@@305)) ($generated@@301 $generated@@305))
 :pattern ( ($generated@@299 $generated@@305))
))))
(assert (forall (($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@306)) 0)
 :pattern ( ($generated@@299 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@141) ($generated@@279 $generated@@307)) (= $generated@@307 $generated@@181))
 :pattern ( ($generated@@279 $generated@@307))
)))
(assert  (and (= ($generated@@1 $generated@@310) 18) (forall (($generated@@311 T@U) ) (! (= (type ($generated@@309 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@309 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 Int) ) (!  (=> (and (= (type $generated@@312) $generated@@310) (= (type $generated@@313) $generated@@141)) (= ($generated@@308 ($generated@@309 $generated@@312) $generated@@313 $generated@@314) ($generated@@308 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@176)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@68) (= (type $generated@@319) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@282 ($generated@@315 $generated@@317) $generated@@318 $generated@@319) ($generated@@78 $generated@@317 $generated@@318 $generated@@319)))
 :pattern ( ($generated@@282 ($generated@@315 $generated@@317) $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@320) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@321) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@322) $generated@@176)) (= (type $generated@@323) $generated@@68)) ($generated@@136 $generated@@320 $generated@@321)) ($generated@@282 $generated@@322 $generated@@323 $generated@@320)) ($generated@@282 $generated@@322 $generated@@323 $generated@@321))
 :pattern ( ($generated@@136 $generated@@320 $generated@@321) ($generated@@282 $generated@@322 $generated@@323 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@324) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@325) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@327) $generated@@68)) ($generated@@136 $generated@@324 $generated@@325)) ($generated@@78 $generated@@326 $generated@@327 $generated@@324)) ($generated@@78 $generated@@326 $generated@@327 $generated@@325))
 :pattern ( ($generated@@136 $generated@@324 $generated@@325) ($generated@@78 $generated@@326 $generated@@327 $generated@@324))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@329 $generated@@330)) ($generated@@80 $generated@@330 $generated@@2))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@83 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@80 $generated@@332 $generated@@2)) (and (= (= ($generated@@328 $generated@@331) 0) (= $generated@@331 ($generated@@329 $generated@@332))) (=> (not (= ($generated@@328 $generated@@331) 0)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) (< 0 ($generated ($generated@@85 $generated@@331 $generated@@333))))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 19)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@80 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@85 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 20)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@85 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@83 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@80 $generated@@371 $generated@@2)) (= ($generated@@183 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (and (<= 0 ($generated ($generated@@85 $generated@@370 $generated@@372))) (<= ($generated ($generated@@85 $generated@@370 $generated@@372)) ($generated@@328 $generated@@370))))
 :pattern ( ($generated@@85 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@183 $generated@@370))
)))
(assert (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@373 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@176) ($generated@@244 $generated@@376 $generated@@251)) (and (= ($generated@@315 ($generated@@373 $generated@@141 $generated@@376)) $generated@@376) ($generated@@164 ($generated@@373 $generated@@141 $generated@@376) $generated@@251)))
 :pattern ( ($generated@@244 $generated@@376 $generated@@251))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 Int) ) (!  (=> (and (and (= (type $generated@@379) $generated@@310) (= (type $generated@@380) $generated@@141)) (or ($generated@@378 $generated@@380 $generated@@381) (and (not (= 1 $generated@@377)) ($generated@@164 $generated@@380 $generated@@251)))) true)
 :pattern ( ($generated@@308 $generated@@379 $generated@@380 $generated@@381))
))))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(let (($generated@@384 ($generated@@337 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@336 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@335 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@334 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@338 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@338 (type $generated@@389))))
(let (($generated@@391 ($generated@@337 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@336 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@335 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@356 (type $generated@@393))))
(let (($generated@@395 ($generated@@355 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@354 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@353 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@352 $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@356 (type $generated@@398))))
(= (type ($generated@@397 $generated@@398)) ($generated@@80 $generated@@399 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@401) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@397 $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@405) $generated@@68)) (= ($generated@@164 $generated@@404 ($generated@@182 $generated@@405)) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@176) (< 0 ($generated ($generated@@85 $generated@@404 $generated@@406)))) ($generated@@244 $generated@@406 $generated@@405))
 :pattern ( ($generated@@85 $generated@@404 $generated@@406))
))))
 :pattern ( ($generated@@164 $generated@@404 ($generated@@182 $generated@@405)))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 Int) ) (!  (=> (and (and (= (type $generated@@407) $generated@@310) (= (type $generated@@408) $generated@@141)) (or ($generated@@378 ($generated@@271 $generated@@408) ($generated@@269 $generated@@409)) (and (not (= 1 $generated@@377)) ($generated@@164 $generated@@408 $generated@@251)))) (and (=> (not ($generated@@0 ($generated@@271 ($generated@@11 ($generated@@279 ($generated@@271 $generated@@408)))))) (let (($generated@@410 ($generated@@271 ($generated@@159 ($generated@@271 $generated@@408)))))
(let (($generated@@411 ($generated@@269 ($generated@@155 ($generated@@271 $generated@@408)))))
(let (($generated@@412 ($generated@@271 ($generated@@150 ($generated@@271 $generated@@408)))))
 (=> (not (= $generated@@411 ($generated@@269 $generated@@409))) (and ($generated@@378 $generated@@412 ($generated@@269 $generated@@409)) (=> (not ($generated@@308 ($generated@@309 $generated@@407) $generated@@412 ($generated@@269 $generated@@409))) ($generated@@378 $generated@@410 ($generated@@269 $generated@@409))))))))) (= ($generated@@308 ($generated@@309 $generated@@407) ($generated@@271 $generated@@408) ($generated@@269 $generated@@409)) (ite ($generated@@279 ($generated@@271 $generated@@408)) false (let (($generated@@413 ($generated@@271 ($generated@@159 ($generated@@271 $generated@@408)))))
(let (($generated@@414 ($generated@@269 ($generated@@155 ($generated@@271 $generated@@408)))))
(let (($generated@@415 ($generated@@271 ($generated@@150 ($generated@@271 $generated@@408)))))
 (or (or (= $generated@@414 ($generated@@269 $generated@@409)) ($generated@@308 ($generated@@309 $generated@@407) $generated@@415 ($generated@@269 $generated@@409))) ($generated@@308 ($generated@@309 $generated@@407) $generated@@413 ($generated@@269 $generated@@409))))))))))
 :weight 3
 :pattern ( ($generated@@308 ($generated@@309 $generated@@407) ($generated@@271 $generated@@408) ($generated@@269 $generated@@409)))
))))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@141) ($generated@@416 $generated@@417)) (or ($generated@@279 $generated@@417) ($generated@@290 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@259 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@176) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@282 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@259 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@176 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@264 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@176) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@282 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@264 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@85 ($generated@@329 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@85 ($generated@@329 $generated@@427) $generated@@426)))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@80 $generated@@176 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@338 (type $generated@@431))))
(let (($generated@@433 ($generated@@337 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@80 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@435) $generated@@176)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@434) ($generated@@174 ($generated@@373 $generated@@141 $generated@@435)))) (= ($generated@@85 ($generated@@429 $generated@@434) ($generated@@174 ($generated@@373 $generated@@141 $generated@@435))) ($generated@@175 ($generated@@373 $generated@@141 $generated@@435))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@80 $generated@@176 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@356 (type $generated@@439))))
(let (($generated@@441 ($generated@@355 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@80 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@443) $generated@@176)) (= ($generated@@0 ($generated@@85 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@442) ($generated@@174 ($generated@@373 $generated@@141 $generated@@443)))) (= ($generated@@85 ($generated@@437 $generated@@442) ($generated@@174 ($generated@@373 $generated@@141 $generated@@443))) ($generated@@175 ($generated@@373 $generated@@141 $generated@@443))))))
 :pattern ( ($generated@@85 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@337 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@85 ($generated@@334 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@85 ($generated@@429 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@444) $generated@@448))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@355 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@354 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@85 ($generated@@352 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@85 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@449) $generated@@453))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@457) $generated@@461))) (and ($generated@@282 ($generated@@85 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@282 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@78 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@465) $generated@@469))) (and ($generated@@282 ($generated@@85 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@282 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@78 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@141) ($generated@@164 $generated@@470 $generated@@251)) (or ($generated@@279 $generated@@470) ($generated@@290 $generated@@470)))
 :pattern ( ($generated@@290 $generated@@470) ($generated@@164 $generated@@470 $generated@@251))
 :pattern ( ($generated@@279 $generated@@470) ($generated@@164 $generated@@470 $generated@@251))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@472) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@473) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@471 $generated@@473))) (and ($generated@@136 $generated@@471 $generated@@472) ($generated@@136 $generated@@472 $generated@@473))) ($generated@@136 $generated@@471 $generated@@473))
 :pattern ( ($generated@@136 $generated@@471 $generated@@472) ($generated@@136 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@T) ) (! (= (type ($generated@@474 $generated@@475)) ($generated@@80 $generated@@475 $generated@@4))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@356 (type $generated@@476))))
(let (($generated@@478 ($generated@@355 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@354 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@353 $generated@@478 $generated@@477)) (= ($generated@@352 $generated@@476) ($generated@@474 $generated@@478))))))
 :pattern ( ($generated@@352 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@356 (type $generated@@479))))
(let (($generated@@481 ($generated@@355 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@354 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@353 $generated@@481 $generated@@480)) (= ($generated@@397 $generated@@479) ($generated@@474 $generated@@480))))))
 :pattern ( ($generated@@397 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@356 (type $generated@@482))))
(let (($generated@@484 ($generated@@355 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@354 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@353 $generated@@484 $generated@@483)) (= ($generated@@436 $generated@@482) ($generated@@474 $generated@@176))))))
 :pattern ( ($generated@@436 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@338 (type $generated@@485))))
(let (($generated@@487 ($generated@@337 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@336 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@335 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@176) (= (type $generated@@489) $generated@@176)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@485) ($generated@@315 ($generated@@243 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@428 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@356 (type $generated@@490))))
(let (($generated@@492 ($generated@@355 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@354 $generated@@492 $generated@@491)) (or (= $generated@@490 ($generated@@353 $generated@@492 $generated@@491)) (exists (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (and (and (= (type $generated@@493) $generated@@176) (= (type $generated@@494) $generated@@176)) ($generated@@0 ($generated@@85 ($generated@@436 $generated@@490) ($generated@@315 ($generated@@243 $generated@@493 $generated@@494)))))
 :no-pattern (type $generated@@493)
 :no-pattern (type $generated@@494)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
))))))
 :pattern ( ($generated@@436 $generated@@490))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@176) ($generated@@244 $generated@@495 $generated@@46)) (and (= ($generated@@315 ($generated@@373 $generated@@2 $generated@@495)) $generated@@495) ($generated@@164 ($generated@@373 $generated@@2 $generated@@495) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@495 $generated@@46))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@176) ($generated@@244 $generated@@496 $generated@@47)) (and (= ($generated@@315 ($generated@@373 $generated@@3 $generated@@496)) $generated@@496) ($generated@@164 ($generated@@373 $generated@@3 $generated@@496) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@496 $generated@@47))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@176) ($generated@@244 $generated@@497 $generated@@44)) (and (= ($generated@@315 ($generated@@373 $generated@@4 $generated@@497)) $generated@@497) ($generated@@164 ($generated@@373 $generated@@4 $generated@@497) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@497 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@498) 21))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@176) ($generated@@244 $generated@@499 $generated@@45)) (and (= ($generated@@315 ($generated@@373 $generated@@498 $generated@@499)) $generated@@499) ($generated@@164 ($generated@@373 $generated@@498 $generated@@499) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@499 $generated@@45))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@244 ($generated@@315 $generated@@500) $generated@@501) ($generated@@164 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@244 ($generated@@315 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@83 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@80 $generated@@503 $generated@@2)) (<= 0 ($generated@@328 $generated@@502))))
 :pattern ( ($generated@@328 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@302 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@301 $generated@@505)) (<= 0 ($generated@@300 $generated@@504))))
 :pattern ( ($generated@@300 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@454 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@454 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@454 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@454 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@76 ($generated@@454 $generated@@514 $generated@@515)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@462 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@462 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@520 ($generated@@462 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@462 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@76 ($generated@@462 $generated@@524 $generated@@525)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@176) (= (type $generated@@527) $generated@@176)) (= ($generated@@142 ($generated@@243 $generated@@526 $generated@@527)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@167 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@167 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@167 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@167 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@176) (= (type $generated@@537) $generated@@176)) (= ($generated@@174 ($generated@@243 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@243 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@176) (= (type $generated@@539) $generated@@176)) (= ($generated@@175 ($generated@@243 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@243 $generated@@538 $generated@@539))
)))
(assert  (and (forall (($generated@@542 T@U) ) (! (= (type ($generated@@540 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@542))
)) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (! (let (($generated@@545 ($generated@@302 (type $generated@@543))))
(= (type ($generated@@541 $generated@@543 $generated@@544)) $generated@@545))
 :pattern ( ($generated@@541 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@301 $generated@@176)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@546 ($generated@@540 $generated@@547) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> (and (<= 0 $generated@@549) (< $generated@@549 ($generated@@300 $generated@@546))) ($generated@@282 ($generated@@541 $generated@@546 $generated@@549) $generated@@547 $generated@@548))
 :pattern ( ($generated@@541 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@78 $generated@@546 ($generated@@540 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 Int) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@141) (= (type $generated@@552) $generated@@141)) (= ($generated@@140 ($generated@@271 $generated@@550) ($generated@@269 $generated@@551) ($generated@@271 $generated@@552)) ($generated@@271 ($generated@@140 $generated@@550 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@140 ($generated@@271 $generated@@550) ($generated@@269 $generated@@551) ($generated@@271 $generated@@552)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@79 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@79 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@259 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@259 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@264 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@264 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@182 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@182 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@76 ($generated@@182 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@540 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@540 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@76 ($generated@@540 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@540 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@373 $generated@@572 ($generated@@315 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@315 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@141) (= (type $generated@@576) $generated@@141)) (< ($generated@@573 $generated@@574) ($generated@@573 ($generated@@140 $generated@@574 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@140 $generated@@574 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 Int) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@141) (= (type $generated@@579) $generated@@141)) (< ($generated@@573 $generated@@579) ($generated@@573 ($generated@@140 $generated@@577 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@140 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) (= ($generated@@164 $generated@@580 ($generated@@454 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@334 $generated@@580) $generated@@583))) (and ($generated@@244 ($generated@@85 ($generated@@429 $generated@@580) $generated@@583) $generated@@582) ($generated@@244 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@85 ($generated@@429 $generated@@580) $generated@@583))
 :pattern ( ($generated@@85 ($generated@@334 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@164 $generated@@580 ($generated@@454 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) (= ($generated@@164 $generated@@584 ($generated@@462 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@176) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@584) $generated@@587))) (and ($generated@@244 ($generated@@85 ($generated@@437 $generated@@584) $generated@@587) $generated@@586) ($generated@@244 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@85 ($generated@@437 $generated@@584) $generated@@587))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@164 $generated@@584 ($generated@@462 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@141) (= (type $generated@@589) $generated@@141)) (and ($generated@@290 $generated@@588) ($generated@@290 $generated@@589))) (= ($generated@@256 $generated@@588 $generated@@589)  (and (and ($generated@@256 ($generated@@150 $generated@@588) ($generated@@150 $generated@@589)) (= ($generated@@155 $generated@@588) ($generated@@155 $generated@@589))) ($generated@@256 ($generated@@159 $generated@@588) ($generated@@159 $generated@@589)))))
 :pattern ( ($generated@@256 $generated@@588 $generated@@589) ($generated@@290 $generated@@588))
 :pattern ( ($generated@@256 $generated@@588 $generated@@589) ($generated@@290 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@176) (= (type $generated@@592) $generated@@176)) (< ($generated@@590 $generated@@591) ($generated@@573 ($generated@@243 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@243 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@176) (= (type $generated@@594) $generated@@176)) (< ($generated@@590 $generated@@594) ($generated@@573 ($generated@@243 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@243 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@176) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@244 $generated@@595 ($generated@@454 $generated@@596 $generated@@597))) (and (= ($generated@@315 ($generated@@373 ($generated@@336 $generated@@176 $generated@@176) $generated@@595)) $generated@@595) ($generated@@164 ($generated@@373 ($generated@@336 $generated@@176 $generated@@176) $generated@@595) ($generated@@454 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@244 $generated@@595 ($generated@@454 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@176) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@244 $generated@@598 ($generated@@462 $generated@@599 $generated@@600))) (and (= ($generated@@315 ($generated@@373 ($generated@@354 $generated@@176 $generated@@176) $generated@@598)) $generated@@598) ($generated@@164 ($generated@@373 ($generated@@354 $generated@@176 $generated@@176) $generated@@598) ($generated@@462 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@244 $generated@@598 ($generated@@462 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@176)) ($generated@@244 $generated@@603 ($generated@@167 $generated@@601 $generated@@602))) (and (= ($generated@@315 ($generated@@373 $generated@@141 $generated@@603)) $generated@@603) ($generated@@164 ($generated@@373 $generated@@141 $generated@@603) ($generated@@167 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@244 $generated@@603 ($generated@@167 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
 (not ($generated@@0 ($generated@@85 ($generated@@474 $generated@@605) $generated@@604))))
 :pattern ( (let (($generated@@605 (type $generated@@604)))
($generated@@85 ($generated@@474 $generated@@605) $generated@@604)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@73)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@608 $generated@@609)) $generated@@62) (= ($generated@@606 ($generated@@167 $generated@@608 $generated@@609)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@141) (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@611) (and ($generated@@290 $generated@@610) ($generated@@78 $generated@@610 $generated@@251 $generated@@611)))) ($generated@@78 ($generated@@8 ($generated@@155 $generated@@610)) $generated@@46 $generated@@611))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@155 $generated@@610)) $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@141) (= ($generated@@590 ($generated@@315 $generated@@612)) ($generated@@573 $generated@@612)))
 :pattern ( ($generated@@590 ($generated@@315 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@176) ($generated@@244 $generated@@613 ($generated@@79 0))) (and (= ($generated@@315 ($generated@@373 $generated@@2 $generated@@613)) $generated@@613) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@613) ($generated@@79 0))))
 :pattern ( ($generated@@244 $generated@@613 ($generated@@79 0)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@176) (= (type $generated@@615) $generated@@68)) ($generated@@244 $generated@@614 ($generated@@259 $generated@@615))) (and (= ($generated@@315 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@614)) $generated@@614) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@614) ($generated@@259 $generated@@615))))
 :pattern ( ($generated@@244 $generated@@614 ($generated@@259 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@176) (= (type $generated@@617) $generated@@68)) ($generated@@244 $generated@@616 ($generated@@264 $generated@@617))) (and (= ($generated@@315 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@616)) $generated@@616) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@4) $generated@@616) ($generated@@264 $generated@@617))))
 :pattern ( ($generated@@244 $generated@@616 ($generated@@264 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@176) (= (type $generated@@619) $generated@@68)) ($generated@@244 $generated@@618 ($generated@@182 $generated@@619))) (and (= ($generated@@315 ($generated@@373 ($generated@@80 $generated@@176 $generated@@2) $generated@@618)) $generated@@618) ($generated@@164 ($generated@@373 ($generated@@80 $generated@@176 $generated@@2) $generated@@618) ($generated@@182 $generated@@619))))
 :pattern ( ($generated@@244 $generated@@618 ($generated@@182 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@176) (= (type $generated@@621) $generated@@68)) ($generated@@244 $generated@@620 ($generated@@540 $generated@@621))) (and (= ($generated@@315 ($generated@@373 ($generated@@301 $generated@@176) $generated@@620)) $generated@@620) ($generated@@164 ($generated@@373 ($generated@@301 $generated@@176) $generated@@620) ($generated@@540 $generated@@621))))
 :pattern ( ($generated@@244 $generated@@620 ($generated@@540 $generated@@621)))
)))
(assert (= ($generated@@76 $generated@@251) $generated@@64))
(assert (= ($generated@@606 $generated@@251) $generated@@67))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@80 $generated@@176 $generated@@2)) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@622 ($generated@@182 $generated@@623) $generated@@624) (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@176) (< 0 ($generated ($generated@@85 $generated@@622 $generated@@625)))) ($generated@@282 $generated@@625 $generated@@623 $generated@@624))
 :pattern ( ($generated@@85 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@78 $generated@@622 ($generated@@182 $generated@@623) $generated@@624))
)))
(assert (= $generated@@181 ($generated@@271 $generated@@181)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@141) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@628) (and ($generated@@166 $generated@@626) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@68) ($generated@@78 $generated@@626 ($generated@@167 $generated@@627 $generated@@629) $generated@@628))
 :pattern ( ($generated@@78 $generated@@626 ($generated@@167 $generated@@627 $generated@@629) $generated@@628))
))))) ($generated@@282 ($generated@@174 $generated@@626) $generated@@627 $generated@@628))
 :pattern ( ($generated@@282 ($generated@@174 $generated@@626) $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@141) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@632) (and ($generated@@166 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@68) ($generated@@78 $generated@@630 ($generated@@167 $generated@@633 $generated@@631) $generated@@632))
 :pattern ( ($generated@@78 $generated@@630 ($generated@@167 $generated@@633 $generated@@631) $generated@@632))
))))) ($generated@@282 ($generated@@175 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@282 ($generated@@175 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@141) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@635) (and ($generated@@290 $generated@@634) ($generated@@78 $generated@@634 $generated@@251 $generated@@635)))) ($generated@@78 ($generated@@150 $generated@@634) $generated@@251 $generated@@635))
 :pattern ( ($generated@@78 ($generated@@150 $generated@@634) $generated@@251 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@141) (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@252 $generated@@637) (and ($generated@@290 $generated@@636) ($generated@@78 $generated@@636 $generated@@251 $generated@@637)))) ($generated@@78 ($generated@@159 $generated@@636) $generated@@251 $generated@@637))
 :pattern ( ($generated@@78 ($generated@@159 $generated@@636) $generated@@251 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@176) (= (type $generated@@639) $generated@@176)) (= ($generated@@243 ($generated@@271 $generated@@638) ($generated@@271 $generated@@639)) ($generated@@271 ($generated@@243 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@243 ($generated@@271 $generated@@638) ($generated@@271 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@315 ($generated@@8 ($generated@@269 $generated@@640))) ($generated@@271 ($generated@@315 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@315 ($generated@@8 ($generated@@269 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@315 ($generated@@271 $generated@@641)) ($generated@@271 ($generated@@315 $generated@@641)))
 :pattern ( ($generated@@315 ($generated@@271 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@302 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@301 $generated@@643)) (= ($generated@@300 $generated@@642) 0)) (= $generated@@642 ($generated@@299 $generated@@643))))
 :pattern ( ($generated@@300 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@80 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@328 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@328 $generated@@644) ($generated ($generated@@85 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@328 ($generated@@86 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert  (=> (<= 1 $generated@@377) (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (and (and (= (type $generated@@648) $generated@@310) (= (type $generated@@649) $generated@@141)) (or ($generated@@378 $generated@@649 $generated@@650) (and (not (= 1 $generated@@377)) ($generated@@164 $generated@@649 $generated@@251)))) (and (=> (not ($generated@@279 $generated@@649)) (let (($generated@@651 ($generated@@159 $generated@@649)))
(let (($generated@@652 ($generated@@155 $generated@@649)))
(let (($generated@@653 ($generated@@150 $generated@@649)))
 (=> (not (= $generated@@652 $generated@@650)) (and ($generated@@378 $generated@@653 $generated@@650) (=> (not ($generated@@308 $generated@@648 $generated@@653 $generated@@650)) ($generated@@378 $generated@@651 $generated@@650)))))))) (= ($generated@@308 ($generated@@309 $generated@@648) $generated@@649 $generated@@650) (ite ($generated@@279 $generated@@649) false (let (($generated@@654 ($generated@@159 $generated@@649)))
(let (($generated@@655 ($generated@@155 $generated@@649)))
(let (($generated@@656 ($generated@@150 $generated@@649)))
 (or (or (= $generated@@655 $generated@@650) ($generated@@308 $generated@@648 $generated@@656 $generated@@650)) ($generated@@308 $generated@@648 $generated@@654 $generated@@650)))))))))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@648) $generated@@649 $generated@@650))
))))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@658) $generated@@2)) ($generated@@78 $generated@@658 $generated@@46 $generated@@657))
 :pattern ( ($generated@@78 $generated@@658 $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@660) $generated@@3)) ($generated@@78 $generated@@660 $generated@@47 $generated@@659))
 :pattern ( ($generated@@78 $generated@@660 $generated@@47 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@662) $generated@@4)) ($generated@@78 $generated@@662 $generated@@44 $generated@@661))
 :pattern ( ($generated@@78 $generated@@662 $generated@@44 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@664) $generated@@498)) ($generated@@78 $generated@@664 $generated@@45 $generated@@663))
 :pattern ( ($generated@@78 $generated@@664 $generated@@45 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@666) $generated@@176)) ($generated@@78 $generated@@666 $generated@@48 $generated@@665))
 :pattern ( ($generated@@78 $generated@@666 $generated@@48 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@141) (= (type $generated@@669) $generated@@141)) (= ($generated@@164 ($generated@@140 $generated@@667 $generated@@668 $generated@@669) $generated@@251)  (and (and ($generated@@164 $generated@@667 $generated@@251) ($generated@@164 ($generated@@8 $generated@@668) $generated@@46)) ($generated@@164 $generated@@669 $generated@@251))))
 :pattern ( ($generated@@164 ($generated@@140 $generated@@667 $generated@@668 $generated@@669) $generated@@251))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@301 $generated@@176)) (= (type $generated@@671) $generated@@68)) (= ($generated@@164 $generated@@670 ($generated@@540 $generated@@671)) (forall (($generated@@672 Int) ) (!  (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@300 $generated@@670))) ($generated@@244 ($generated@@541 $generated@@670 $generated@@672) $generated@@671))
 :pattern ( ($generated@@541 $generated@@670 $generated@@672))
))))
 :pattern ( ($generated@@164 $generated@@670 ($generated@@540 $generated@@671)))
)))
(assert  (and (forall (($generated@@675 T@U) ) (! (= (type ($generated@@673 $generated@@675)) $generated@@310)
 :pattern ( ($generated@@673 $generated@@675))
)) (= (type $generated@@674) $generated@@310)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 Int) ) (!  (=> (and (= (type $generated@@676) $generated@@310) (= (type $generated@@677) $generated@@141)) (= ($generated@@308 $generated@@676 $generated@@677 $generated@@678) ($generated@@308 $generated@@674 $generated@@677 $generated@@678)))
 :pattern ( ($generated@@308 ($generated@@673 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 Int) ) (!  (=> (= (type $generated@@680) ($generated@@301 $generated@@176)) (=> (and (<= 0 $generated@@681) (< $generated@@681 ($generated@@300 $generated@@680))) (< ($generated@@573 ($generated@@373 $generated@@141 ($generated@@541 $generated@@680 $generated@@681))) ($generated@@679 $generated@@680))))
 :pattern ( ($generated@@573 ($generated@@373 $generated@@141 ($generated@@541 $generated@@680 $generated@@681))))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) ($generated@@336 $generated@@176 $generated@@176)) (= (type $generated@@683) $generated@@68)) (= (type $generated@@684) $generated@@68)) ($generated@@164 $generated@@682 ($generated@@454 $generated@@683 $generated@@684))) (and (and ($generated@@164 ($generated@@334 $generated@@682) ($generated@@259 $generated@@683)) ($generated@@164 ($generated@@386 $generated@@682) ($generated@@259 $generated@@684))) ($generated@@164 ($generated@@428 $generated@@682) ($generated@@259 ($generated@@167 $generated@@683 $generated@@684)))))
 :pattern ( ($generated@@164 $generated@@682 ($generated@@454 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (= (type $generated@@685) ($generated@@354 $generated@@176 $generated@@176)) (= (type $generated@@686) $generated@@68)) (= (type $generated@@687) $generated@@68)) ($generated@@164 $generated@@685 ($generated@@462 $generated@@686 $generated@@687))) (and (and ($generated@@164 ($generated@@352 $generated@@685) ($generated@@264 $generated@@686)) ($generated@@164 ($generated@@397 $generated@@685) ($generated@@264 $generated@@687))) ($generated@@164 ($generated@@436 $generated@@685) ($generated@@264 ($generated@@167 $generated@@686 $generated@@687)))))
 :pattern ( ($generated@@164 $generated@@685 ($generated@@462 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@2) ($generated@@164 $generated@@688 $generated@@46))
 :pattern ( ($generated@@164 $generated@@688 $generated@@46))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@3) ($generated@@164 $generated@@689 $generated@@47))
 :pattern ( ($generated@@164 $generated@@689 $generated@@47))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@4) ($generated@@164 $generated@@690 $generated@@44))
 :pattern ( ($generated@@164 $generated@@690 $generated@@44))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@498) ($generated@@164 $generated@@691 $generated@@45))
 :pattern ( ($generated@@164 $generated@@691 $generated@@45))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@176) ($generated@@164 $generated@@692 $generated@@48))
 :pattern ( ($generated@@164 $generated@@692 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 (T@U) Bool)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () Int)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@695) $generated@@141) (= (type $generated@@698) $generated@@141)) (= (type $generated@@699) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@702) $generated@@81)) (= (type $generated@@703) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@704) $generated@@141)) (= (type $generated@@705) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@707) $generated@@141)) (= (type $generated@@709) $generated@@141)) (= (type $generated@@710) $generated@@141)) (= (type $generated@@712) $generated@@141)) (= (type $generated@@713) ($generated@@189 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@714  (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (= $generated@@693 $generated@@694) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@695 $generated@@693))) (=> (or (= $generated@@693 $generated@@694) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@695 $generated@@693)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= $generated@@694 $generated@@693)) (=> (<= $generated@@694 $generated@@693) (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@715 Int) ) (!  (=> true (=> ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@695 $generated@@715) (<= $generated@@715 $generated@@693)))
 :pattern ( ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@695 $generated@@715))
)))))))))
(let (($generated@@716  (=> (= $generated@@696 (ite (< $generated@@697 $generated@@694) $generated@@694 $generated@@697)) (and (=> (= (ControlFlow 0 7) (- 0 11)) (or (or (<= 0 $generated@@694) (< ($generated@@573 $generated@@698) ($generated@@573 $generated@@695))) (= $generated@@696 $generated@@694))) (=> (or (or (<= 0 $generated@@694) (< ($generated@@573 $generated@@698) ($generated@@573 $generated@@695))) (= $generated@@696 $generated@@694)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (< ($generated@@573 $generated@@698) ($generated@@573 $generated@@695)) (and (= ($generated@@573 $generated@@698) ($generated@@573 $generated@@695)) (< $generated@@696 $generated@@694)))) (=> (or (< ($generated@@573 $generated@@698) ($generated@@573 $generated@@695)) (and (= ($generated@@573 $generated@@698) ($generated@@573 $generated@@695)) (< $generated@@696 $generated@@694))) (=> (and (and (and (and ($generated@@252 $generated@@699) ($generated@@700 $generated@@699)) (=> (not (= $generated@@701 $generated@@696)) ($generated@@378 $generated@@698 $generated@@701))) (and (or (= $generated@@701 $generated@@696) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@698 $generated@@701)) (=> (<= $generated@@696 $generated@@701) (forall (($generated@@717 Int) ) (! ($generated@@378 $generated@@698 $generated@@717)
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@698 $generated@@717))
))))) (and (and (<= $generated@@696 $generated@@701) (forall (($generated@@718 Int) ) (!  (=> true (=> ($generated@@308 ($generated@@309 $generated@@674) $generated@@698 $generated@@718) (<= $generated@@718 $generated@@701)))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@698 $generated@@718))
))) (and (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) $generated@@81) (=> (and (not (= $generated@@719 $generated@@702)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@703 $generated@@719) $generated@@60))) (= ($generated@@85 $generated@@699 $generated@@719) ($generated@@85 $generated@@703 $generated@@719))))
 :pattern ( ($generated@@85 $generated@@699 $generated@@719))
)) ($generated@@136 $generated@@703 $generated@@699)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (or (<= 0 $generated@@694) (< ($generated@@573 $generated@@704) ($generated@@573 $generated@@695))) (= $generated@@701 $generated@@694))) (=> (or (or (<= 0 $generated@@694) (< ($generated@@573 $generated@@704) ($generated@@573 $generated@@695))) (= $generated@@701 $generated@@694)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (< ($generated@@573 $generated@@704) ($generated@@573 $generated@@695)) (and (= ($generated@@573 $generated@@704) ($generated@@573 $generated@@695)) (< $generated@@701 $generated@@694)))) (=> (or (< ($generated@@573 $generated@@704) ($generated@@573 $generated@@695)) (and (= ($generated@@573 $generated@@704) ($generated@@573 $generated@@695)) (< $generated@@701 $generated@@694))) (=> (and (and ($generated@@252 $generated@@705) ($generated@@700 $generated@@705)) (=> (not (= $generated@@706 $generated@@701)) ($generated@@378 $generated@@704 $generated@@706))) (=> (and (and (and (or (= $generated@@706 $generated@@701) ($generated@@308 ($generated@@309 ($generated@@309 $generated@@674)) $generated@@704 $generated@@706)) (=> (<= $generated@@701 $generated@@706) (forall (($generated@@720 Int) ) (! ($generated@@378 $generated@@704 $generated@@720)
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@704 $generated@@720))
)))) (and (<= $generated@@701 $generated@@706) (forall (($generated@@721 Int) ) (!  (=> true (=> ($generated@@308 ($generated@@309 $generated@@674) $generated@@704 $generated@@721) (<= $generated@@721 $generated@@706)))
 :pattern ( ($generated@@308 ($generated@@309 $generated@@674) $generated@@704 $generated@@721))
)))) (and (and (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@81) (=> (and (not (= $generated@@722 $generated@@702)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@699 $generated@@722) $generated@@60))) (= ($generated@@85 $generated@@705 $generated@@722) ($generated@@85 $generated@@699 $generated@@722))))
 :pattern ( ($generated@@85 $generated@@705 $generated@@722))
)) ($generated@@136 $generated@@699 $generated@@705)) (and (= $generated@@693 $generated@@706) (= (ControlFlow 0 7) 3)))) $generated@@714))))))))))))))
(let (($generated@@723  (=> (and (<= $generated@@694 $generated@@697) (= (ControlFlow 0 13) 7)) $generated@@716)))
(let (($generated@@724  (=> (and (< $generated@@697 $generated@@694) (= (ControlFlow 0 12) 7)) $generated@@716)))
(let (($generated@@725  (=> (= $generated@@695 ($generated@@140 $generated@@707 $generated@@708 $generated@@709)) (=> (and (and ($generated@@164 $generated@@707 $generated@@251) ($generated@@78 $generated@@707 $generated@@251 $generated@@703)) (and ($generated@@164 $generated@@709 $generated@@251) ($generated@@78 $generated@@709 $generated@@251 $generated@@703))) (=> (and (and (and (and ($generated@@164 $generated@@698 $generated@@251) ($generated@@78 $generated@@698 $generated@@251 $generated@@703)) (and (= $generated@@710 $generated@@709) ($generated@@164 $generated@@710 $generated@@251))) (and (and (= $generated@@698 $generated@@710) (= $generated@@711 $generated@@708)) (and ($generated@@164 ($generated@@8 $generated@@711) $generated@@46) (= $generated@@697 $generated@@711)))) (and (and (and ($generated@@164 $generated@@704 $generated@@251) ($generated@@78 $generated@@704 $generated@@251 $generated@@703)) (= $generated@@712 $generated@@707)) (and ($generated@@164 $generated@@712 $generated@@251) (= $generated@@704 $generated@@712)))) (and (=> (= (ControlFlow 0 14) 12) $generated@@724) (=> (= (ControlFlow 0 14) 13) $generated@@723)))))))
(let (($generated@@726  (=> (= $generated@@695 $generated@@181) (=> (and (= $generated@@693 $generated@@694) (= (ControlFlow 0 6) 3)) $generated@@714))))
(let (($generated@@727 true))
(let (($generated@@728  (=> (not (= $generated@@695 $generated@@181)) (and (=> (= (ControlFlow 0 15) 14) $generated@@725) (=> (= (ControlFlow 0 15) 1) $generated@@727)))))
(let (($generated@@729  (=> (= $generated@@713 ($generated@@188 $generated@@702 $generated@@703 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 6) $generated@@726) (=> (= (ControlFlow 0 16) 15) $generated@@728)))))
(let (($generated@@730  (=> (and ($generated@@252 $generated@@703) ($generated@@700 $generated@@703)) (=> (and (and (and ($generated@@164 $generated@@695 $generated@@251) ($generated@@78 $generated@@695 $generated@@251 $generated@@703)) ($generated@@416 $generated@@695)) (and (= 2 $generated@@377) (= (ControlFlow 0 17) 16))) $generated@@729))))
$generated@@730)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
