(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@T) T@U)
(declare-fun $generated@@258 (T@U) Int)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 () T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@139 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@66)) (= (type $generated@@143) $generated@@138)) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142))) ($generated@@136 $generated@@143))
 :pattern ( ($generated@@136 $generated@@143) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@138) (= (type $generated@@151) $generated@@138)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@66)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@66)) ($generated@@134 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@134 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@79 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@69 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@79) (= (type $generated@@207) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@208) ($generated@@68 $generated@@4))) (= (type $generated@@210) $generated@@79)) (= (type $generated@@211) ($generated@@68 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert  (and (= (type $generated@@214) $generated@@147) (= (type $generated@@215) $generated@@66)))
(assert  (=> true (=> true ($generated@@213 $generated@@214 $generated@@215))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218)) $generated@@138)
 :pattern ( ($generated@@216 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@66) (= (type $generated@@220) $generated@@66)) (= (type $generated@@221) $generated@@147)) (= (type $generated@@222) $generated@@147)) (= ($generated@@134 ($generated@@216 $generated@@221 $generated@@222) ($generated@@137 $generated@@219 $generated@@220))  (and ($generated@@213 $generated@@221 $generated@@219) ($generated@@213 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@134 ($generated@@216 $generated@@221 $generated@@222) ($generated@@137 $generated@@219 $generated@@220)))
)))
(assert (= ($generated@@1 $generated@@224) 17))
(assert  (=> true (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@224) (= (type $generated@@227) $generated@@147)) (or ($generated@@225 $generated@@227) ($generated@@213 $generated@@227 $generated@@215))) true)
 :pattern ( ($generated@@223 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@138) (= (type $generated@@229) $generated@@138)) (= ($generated@@144 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@144 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@134 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@147) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@213 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@134 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@134 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@147) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@213 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@134 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (let (($generated@@242 (type $generated@@241)))
(= (type ($generated@@240 $generated@@241)) $generated@@242))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@240 $generated@@243) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@246) $generated@@66) (= (type $generated@@247) $generated@@66)) (= (type $generated@@248) $generated@@147)) (= (type $generated@@249) $generated@@147)) (= (type $generated@@250) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@244 $generated@@250)) (= ($generated@@76 ($generated@@216 $generated@@248 $generated@@249) ($generated@@137 $generated@@246 $generated@@247) $generated@@250)  (and ($generated@@245 $generated@@248 $generated@@246 $generated@@250) ($generated@@245 $generated@@249 $generated@@247 $generated@@250))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@248 $generated@@249) ($generated@@137 $generated@@246 $generated@@247) $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@70)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ) (!  (=> (= (type $generated@@253) $generated@@138) (= ($generated@@136 $generated@@253) (= ($generated@@251 $generated@@253) $generated@@61)))
 :pattern ( ($generated@@136 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@138) ($generated@@136 $generated@@254)) (exists (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (and (and (= (type $generated@@255) $generated@@147) (= (type $generated@@256) $generated@@147)) (= $generated@@254 ($generated@@216 $generated@@255 $generated@@256)))
 :no-pattern (type $generated@@255)
 :no-pattern (type $generated@@256)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
 :no-pattern ($generated $generated@@256)
 :no-pattern ($generated@@0 $generated@@256)
)))
 :pattern ( ($generated@@136 $generated@@254))
)))
(assert  (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 18)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@T) ) (! (= (type ($generated@@257 $generated@@263)) ($generated@@259 $generated@@263))
 :pattern ( ($generated@@257 $generated@@263))
))))
(assert (forall (($generated@@264 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@264)) 0)
 :pattern ( ($generated@@257 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@147)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269) ($generated@@76 $generated@@267 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@267) $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) ($generated@@78 $generated@@147 $generated@@2))
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)))
(assert  (=> true (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@224) (= (type $generated@@275) $generated@@147)) (or ($generated@@271 $generated@@275) ($generated@@213 $generated@@275 $generated@@215))) ($generated@@134 ($generated@@270 $generated@@274 $generated@@275) ($generated@@152 $generated@@46)))
 :pattern ( ($generated@@270 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@78 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@81 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@78 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@83 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 19)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@78 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@83 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@83 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 20)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@78 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@81 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@78 $generated@@319 $generated@@2)) (= ($generated@@153 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@83 $generated@@318 $generated@@320))) (<= ($generated ($generated@@83 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@83 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@153 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@286 (type $generated@@321))))
(let (($generated@@323 ($generated@@285 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@284 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@283 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@83 ($generated@@282 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@286 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@286 (type $generated@@328))))
(let (($generated@@330 ($generated@@285 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@284 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@283 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@83 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@304 (type $generated@@332))))
(let (($generated@@334 ($generated@@303 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@302 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@301 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@300 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@304 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@304 (type $generated@@339))))
(let (($generated@@341 ($generated@@303 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@302 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@301 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@344) $generated@@66)) (= ($generated@@134 $generated@@343 ($generated@@152 $generated@@344)) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@343 $generated@@345)))) ($generated@@213 $generated@@345 $generated@@344))
 :pattern ( ($generated@@83 $generated@@343 $generated@@345))
))))
 :pattern ( ($generated@@134 $generated@@343 ($generated@@152 $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@81 (type $generated@@347))))
 (=> (and (= (type $generated@@347) ($generated@@78 $generated@@349 $generated@@2)) (= (type $generated@@348) ($generated@@78 $generated@@349 $generated@@2))) (= ($generated@@346 $generated@@347 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (= ($generated ($generated@@83 $generated@@347 $generated@@350)) ($generated ($generated@@83 $generated@@348 $generated@@350))))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@352) $generated@@66)) (= (type $generated@@353) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@351 ($generated@@230 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@147) ($generated@@0 ($generated@@83 $generated@@351 $generated@@354))) ($generated@@245 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@83 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@76 $generated@@351 ($generated@@230 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@235 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@147) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@245 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@235 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@83 ($generated@@277 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@83 ($generated@@277 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@286 (type $generated@@367))))
(let (($generated@@369 ($generated@@285 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@78 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@371) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@83 ($generated@@282 $generated@@370) ($generated@@145 ($generated@@362 $generated@@138 $generated@@371)))) (= ($generated@@83 ($generated@@363 $generated@@370) ($generated@@145 ($generated@@362 $generated@@138 $generated@@371))) ($generated@@146 ($generated@@362 $generated@@138 $generated@@371))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@304 (type $generated@@375))))
(let (($generated@@377 ($generated@@303 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@379) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@378) ($generated@@145 ($generated@@362 $generated@@138 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@145 ($generated@@362 $generated@@138 $generated@@379))) ($generated@@146 ($generated@@362 $generated@@138 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@285 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@284 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@325 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@282 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@282 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@325 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@303 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@302 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@66)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@282 $generated@@393) $generated@@397))) (and ($generated@@245 ($generated@@83 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@245 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@282 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@76 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@401) $generated@@405))) (and ($generated@@245 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@245 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) $generated@@224)
 :pattern ( ($generated@@406 $generated@@408))
)) (= (type $generated@@407) $generated@@224)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@224) (= (type $generated@@410) $generated@@147)) (= ($generated@@223 $generated@@409 $generated@@410) ($generated@@223 $generated@@407 $generated@@410)))
 :pattern ( ($generated@@223 ($generated@@406 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@81 (type $generated@@411))))
 (=> (and (and (= (type $generated@@411) ($generated@@78 $generated@@413 $generated@@2)) (= (type $generated@@412) ($generated@@78 $generated@@413 $generated@@2))) ($generated@@346 $generated@@411 $generated@@412)) (= $generated@@411 $generated@@412)))
 :pattern ( ($generated@@346 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@78 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@304 (type $generated@@416))))
(let (($generated@@418 ($generated@@303 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@302 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@301 $generated@@418 $generated@@417)) (= ($generated@@300 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@300 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@304 (type $generated@@419))))
(let (($generated@@421 ($generated@@303 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@302 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@301 $generated@@421 $generated@@420)) (= ($generated@@336 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@336 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@304 (type $generated@@422))))
(let (($generated@@424 ($generated@@303 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@302 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@301 $generated@@424 $generated@@423)) (= ($generated@@372 $generated@@422) ($generated@@414 $generated@@147))))))
 :pattern ( ($generated@@372 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@286 (type $generated@@425))))
(let (($generated@@427 ($generated@@285 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@284 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@283 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@147) (= (type $generated@@429) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@425) ($generated@@265 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@361 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@304 (type $generated@@430))))
(let (($generated@@432 ($generated@@303 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@302 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@301 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@147) (= (type $generated@@434) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@430) ($generated@@265 ($generated@@216 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@372 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@147) ($generated@@213 $generated@@435 $generated@@46)) (and (= ($generated@@265 ($generated@@362 $generated@@2 $generated@@435)) $generated@@435) ($generated@@134 ($generated@@362 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@213 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@147) ($generated@@213 $generated@@436 $generated@@47)) (and (= ($generated@@265 ($generated@@362 $generated@@3 $generated@@436)) $generated@@436) ($generated@@134 ($generated@@362 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@213 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@147) ($generated@@213 $generated@@437 $generated@@44)) (and (= ($generated@@265 ($generated@@362 $generated@@4 $generated@@437)) $generated@@437) ($generated@@134 ($generated@@362 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@213 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 21))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@147) ($generated@@213 $generated@@439 $generated@@45)) (and (= ($generated@@265 ($generated@@362 $generated@@438 $generated@@439)) $generated@@439) ($generated@@134 ($generated@@362 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@213 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@224)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@224) (= (type $generated@@443) $generated@@147)) (= ($generated@@223 ($generated@@440 $generated@@442) $generated@@443) ($generated@@223 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@223 ($generated@@440 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@66) (= ($generated@@213 ($generated@@265 $generated@@444) $generated@@445) ($generated@@134 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@213 ($generated@@265 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@81 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@78 $generated@@447 $generated@@2)) (<= 0 ($generated@@276 $generated@@446))))
 :pattern ( ($generated@@276 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@260 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@259 $generated@@449)) (<= 0 ($generated@@258 $generated@@448))))
 :pattern ( ($generated@@258 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@390 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@390 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@66) (= (type $generated@@457) $generated@@66)) (= ($generated@@454 ($generated@@390 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@390 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@74 ($generated@@390 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@398 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@398 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@398 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@398 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@147) (= (type $generated@@471) $generated@@147)) (= ($generated@@251 ($generated@@216 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@137 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@137 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@137 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@137 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@147) (= (type $generated@@481) $generated@@147)) (= ($generated@@145 ($generated@@216 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@216 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@147) (= (type $generated@@483) $generated@@147)) (= ($generated@@146 ($generated@@216 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@216 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@224) (= (type $generated@@485) $generated@@147)) (= ($generated@@270 $generated@@484 $generated@@485) ($generated@@270 $generated@@407 $generated@@485)))
 :pattern ( ($generated@@270 ($generated@@406 $generated@@484) $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@260 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@259 $generated@@147)) (= (type $generated@@493) $generated@@66)) (= (type $generated@@494) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@258 $generated@@492))) ($generated@@245 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@76 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@77 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@77 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@498 ($generated@@230 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@230 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@502 ($generated@@235 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@235 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@152 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@152 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@152 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@362 $generated@@515 ($generated@@265 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@265 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@517) $generated@@66)) (= (type $generated@@518) $generated@@66)) (= ($generated@@134 $generated@@516 ($generated@@390 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@282 $generated@@516) $generated@@519))) (and ($generated@@213 ($generated@@83 ($generated@@363 $generated@@516) $generated@@519) $generated@@518) ($generated@@213 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@516) $generated@@519))
 :pattern ( ($generated@@83 ($generated@@282 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@134 $generated@@516 ($generated@@390 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) (= ($generated@@134 $generated@@520 ($generated@@398 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@520) $generated@@523))) (and ($generated@@213 ($generated@@83 ($generated@@373 $generated@@520) $generated@@523) $generated@@522) ($generated@@213 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@520) $generated@@523))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@134 $generated@@520 ($generated@@398 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@147) (= (type $generated@@527) $generated@@147)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@216 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@216 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@147) (= (type $generated@@529) $generated@@147)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@216 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@216 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@224) (= (type $generated@@531) $generated@@147)) (= ($generated@@270 ($generated@@440 $generated@@530) $generated@@531) ($generated@@270 $generated@@530 $generated@@531)))
 :pattern ( ($generated@@270 ($generated@@440 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@147) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@213 $generated@@532 ($generated@@390 $generated@@533 $generated@@534))) (and (= ($generated@@265 ($generated@@362 ($generated@@284 $generated@@147 $generated@@147) $generated@@532)) $generated@@532) ($generated@@134 ($generated@@362 ($generated@@284 $generated@@147 $generated@@147) $generated@@532) ($generated@@390 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@213 $generated@@532 ($generated@@390 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@147) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@213 $generated@@535 ($generated@@398 $generated@@536 $generated@@537))) (and (= ($generated@@265 ($generated@@362 ($generated@@302 $generated@@147 $generated@@147) $generated@@535)) $generated@@535) ($generated@@134 ($generated@@362 ($generated@@302 $generated@@147 $generated@@147) $generated@@535) ($generated@@398 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@213 $generated@@535 ($generated@@398 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@147)) ($generated@@213 $generated@@540 ($generated@@137 $generated@@538 $generated@@539))) (and (= ($generated@@265 ($generated@@362 $generated@@138 $generated@@540)) $generated@@540) ($generated@@134 ($generated@@362 $generated@@138 $generated@@540) ($generated@@137 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@213 $generated@@540 ($generated@@137 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@83 ($generated@@414 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@83 ($generated@@414 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@71)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (and (= ($generated@@74 ($generated@@137 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@137 $generated@@545 $generated@@546)) $generated@@64)))
 :pattern ( ($generated@@137 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@138) (= ($generated@@524 ($generated@@265 $generated@@547)) ($generated@@525 $generated@@547)))
 :pattern ( ($generated@@524 ($generated@@265 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@147) ($generated@@213 $generated@@548 ($generated@@77 0))) (and (= ($generated@@265 ($generated@@362 $generated@@2 $generated@@548)) $generated@@548) ($generated@@134 ($generated@@362 ($generated@@78 $generated@@147 $generated@@4) $generated@@548) ($generated@@77 0))))
 :pattern ( ($generated@@213 $generated@@548 ($generated@@77 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@147) (= (type $generated@@550) $generated@@66)) ($generated@@213 $generated@@549 ($generated@@230 $generated@@550))) (and (= ($generated@@265 ($generated@@362 ($generated@@78 $generated@@147 $generated@@4) $generated@@549)) $generated@@549) ($generated@@134 ($generated@@362 ($generated@@78 $generated@@147 $generated@@4) $generated@@549) ($generated@@230 $generated@@550))))
 :pattern ( ($generated@@213 $generated@@549 ($generated@@230 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@147) (= (type $generated@@552) $generated@@66)) ($generated@@213 $generated@@551 ($generated@@235 $generated@@552))) (and (= ($generated@@265 ($generated@@362 ($generated@@78 $generated@@147 $generated@@4) $generated@@551)) $generated@@551) ($generated@@134 ($generated@@362 ($generated@@78 $generated@@147 $generated@@4) $generated@@551) ($generated@@235 $generated@@552))))
 :pattern ( ($generated@@213 $generated@@551 ($generated@@235 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@147) (= (type $generated@@554) $generated@@66)) ($generated@@213 $generated@@553 ($generated@@152 $generated@@554))) (and (= ($generated@@265 ($generated@@362 ($generated@@78 $generated@@147 $generated@@2) $generated@@553)) $generated@@553) ($generated@@134 ($generated@@362 ($generated@@78 $generated@@147 $generated@@2) $generated@@553) ($generated@@152 $generated@@554))))
 :pattern ( ($generated@@213 $generated@@553 ($generated@@152 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@147) (= (type $generated@@556) $generated@@66)) ($generated@@213 $generated@@555 ($generated@@486 $generated@@556))) (and (= ($generated@@265 ($generated@@362 ($generated@@259 $generated@@147) $generated@@555)) $generated@@555) ($generated@@134 ($generated@@362 ($generated@@259 $generated@@147) $generated@@555) ($generated@@486 $generated@@556))))
 :pattern ( ($generated@@213 $generated@@555 ($generated@@486 $generated@@556)))
)))
(assert (= ($generated@@74 $generated@@215) $generated@@63))
(assert (= ($generated@@543 $generated@@215) $generated@@65))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@557 ($generated@@152 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@557 $generated@@560)))) ($generated@@245 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@83 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@76 $generated@@557 ($generated@@152 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@138) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@244 $generated@@563) (and ($generated@@136 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@66) ($generated@@76 $generated@@561 ($generated@@137 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@76 $generated@@561 ($generated@@137 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@245 ($generated@@145 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@245 ($generated@@145 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@138) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@244 $generated@@567) (and ($generated@@136 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@137 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@137 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@245 ($generated@@146 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@245 ($generated@@146 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@147) (= (type $generated@@570) $generated@@147)) (= ($generated@@216 ($generated@@240 $generated@@569) ($generated@@240 $generated@@570)) ($generated@@240 ($generated@@216 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@216 ($generated@@240 $generated@@569) ($generated@@240 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@265 ($generated@@240 $generated@@571)) ($generated@@240 ($generated@@265 $generated@@571)))
 :pattern ( ($generated@@265 ($generated@@240 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@260 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@259 $generated@@573)) (= ($generated@@258 $generated@@572) 0)) (= $generated@@572 ($generated@@257 $generated@@573))))
 :pattern ( ($generated@@258 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@78 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@276 ($generated@@84 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@276 $generated@@574) ($generated ($generated@@83 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@276 ($generated@@84 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@2)) ($generated@@76 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@3)) ($generated@@76 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@4)) ($generated@@76 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@438)) ($generated@@76 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@147)) ($generated@@76 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@259 $generated@@147)) (= (type $generated@@589) $generated@@66)) (= ($generated@@134 $generated@@588 ($generated@@486 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@258 $generated@@588))) ($generated@@213 ($generated@@487 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@487 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@134 $generated@@588 ($generated@@486 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@259 $generated@@147)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@258 $generated@@592))) (< ($generated@@525 ($generated@@362 $generated@@138 ($generated@@487 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@525 ($generated@@362 $generated@@138 ($generated@@487 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@284 $generated@@147 $generated@@147)) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) ($generated@@134 $generated@@594 ($generated@@390 $generated@@595 $generated@@596))) (and (and ($generated@@134 ($generated@@282 $generated@@594) ($generated@@230 $generated@@595)) ($generated@@134 ($generated@@325 $generated@@594) ($generated@@230 $generated@@596))) ($generated@@134 ($generated@@361 $generated@@594) ($generated@@230 ($generated@@137 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@134 $generated@@594 ($generated@@390 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@302 $generated@@147 $generated@@147)) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@134 $generated@@597 ($generated@@398 $generated@@598 $generated@@599))) (and (and ($generated@@134 ($generated@@300 $generated@@597) ($generated@@235 $generated@@598)) ($generated@@134 ($generated@@336 $generated@@597) ($generated@@235 $generated@@599))) ($generated@@134 ($generated@@372 $generated@@597) ($generated@@235 ($generated@@137 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@134 $generated@@597 ($generated@@398 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@134 $generated@@600 $generated@@46))
 :pattern ( ($generated@@134 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@134 $generated@@601 $generated@@47))
 :pattern ( ($generated@@134 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@134 $generated@@602 $generated@@44))
 :pattern ( ($generated@@134 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@438) ($generated@@134 $generated@@603 $generated@@45))
 :pattern ( ($generated@@134 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@147) ($generated@@134 $generated@@604 $generated@@48))
 :pattern ( ($generated@@134 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 (T@U) Bool)
(declare-fun $generated@@607 () Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@609) ($generated@@159 $generated@@79 $generated@@4))) (= (type $generated@@610) $generated@@79)) (= (type $generated@@611) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@613  (=> (and (and ($generated@@244 $generated@@605) ($generated@@606 $generated@@605)) (and $generated@@607 (let (($generated@@614 $generated@@214))
 (and ($generated@@225 $generated@@614) (=> ($generated@@223 ($generated@@440 $generated@@407) $generated@@614) ($generated@@271 $generated@@614)))))) (=> (and (and (and (let (($generated@@615 $generated@@214))
($generated@@223 ($generated@@440 ($generated@@440 $generated@@407)) $generated@@615)) (let (($generated@@616 $generated@@214))
($generated@@346 ($generated@@270 ($generated@@440 ($generated@@440 $generated@@407)) $generated@@616) ($generated@@277 $generated@@147)))) (and (= $generated@@608 $generated@@605) $generated@@607)) (and (and $generated@@607 ($generated@@225 $generated@@214)) (= (ControlFlow 0 3) (- 0 2)))) ($generated@@223 ($generated@@440 ($generated@@440 $generated@@407)) $generated@@214)))))
(let (($generated@@617 true))
(let (($generated@@618  (=> (= $generated@@609 ($generated@@158 $generated@@610 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@617) (=> (= (ControlFlow 0 4) 3) $generated@@613)))))
(let (($generated@@619  (=> (and (and (and ($generated@@244 $generated@@608) ($generated@@606 $generated@@608)) ($generated@@213 $generated@@611 $generated@@215)) (and (= 1 $generated@@612) (= (ControlFlow 0 5) 4))) $generated@@618)))
$generated@@619)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 () Bool)
(declare-fun $generated@@273 () Bool)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@T T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@514 (T@U Int) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@135 $generated@@145)) ($generated@@78 $generated@@136 $generated@@2))
 :pattern ( ($generated@@135 $generated@@145))
))) (= (type $generated@@139) $generated@@66)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@141 $generated@@146 $generated@@147)) ($generated@@78 $generated@@136 $generated@@2))
 :pattern ( ($generated@@141 $generated@@146 $generated@@147))
))) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@142 $generated@@148)) $generated@@144)
 :pattern ( ($generated@@142 $generated@@148))
))) (= (type $generated@@143) $generated@@144)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@136) (or ($generated@@137 $generated@@149) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@149 $generated@@139)))) (and ($generated@@140 $generated@@149) (= ($generated@@135 $generated@@149) ($generated@@141 ($generated@@142 $generated@@143) $generated@@149))))
 :pattern ( ($generated@@135 $generated@@149))
))))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@77 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@77 0)))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@136) (or ($generated@@153 $generated@@154) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@154 $generated@@139)))) true)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert  (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@136)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@136)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@66)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@174) $generated@@66)) ($generated@@150 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@150 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@79 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@69 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@79) (= (type $generated@@225) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@226) ($generated@@68 $generated@@4))) (= (type $generated@@228) $generated@@79)) (= (type $generated@@229) ($generated@@68 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@177 $generated@@79 $generated@@4))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@69 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@79) (= (type $generated@@237) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@238) ($generated@@68 $generated@@4))) (= (type $generated@@240) $generated@@79)) (= (type $generated@@241) ($generated@@68 $generated@@242))) (= ($generated@@0 ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (= (type $generated@@243) $generated@@136))
(assert  (=> true (=> true ($generated@@138 $generated@@243 $generated@@139))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@245 $generated@@246)) $generated@@157)
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@66) (= (type $generated@@248) $generated@@66)) (= (type $generated@@249) $generated@@136)) (= (type $generated@@250) $generated@@136)) (= ($generated@@150 ($generated@@244 $generated@@249 $generated@@250) ($generated@@156 $generated@@247 $generated@@248))  (and ($generated@@138 $generated@@249 $generated@@247) ($generated@@138 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@150 ($generated@@244 $generated@@249 $generated@@250) ($generated@@156 $generated@@247 $generated@@248)))
)))
(assert  (=> true (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@144) (= (type $generated@@254) $generated@@136)) (or ($generated@@252 $generated@@254) ($generated@@138 $generated@@254 $generated@@139))) true)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@157) (= (type $generated@@256) $generated@@157)) (= ($generated@@163 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@163 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@136) (or ($generated@@153 ($generated@@257 $generated@@260)) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@260 $generated@@139)))) (and ($generated@@252 ($generated@@257 $generated@@260)) (= ($generated@@152 ($generated@@257 $generated@@260)) ($generated@@251 ($generated@@142 $generated@@143) ($generated@@257 $generated@@260)))))
 :weight 3
 :pattern ( ($generated@@152 ($generated@@257 $generated@@260)))
))))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@66)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@264) $generated@@66)) (= ($generated@@150 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@0 ($generated@@83 $generated@@263 $generated@@265))) ($generated@@138 $generated@@265 $generated@@264))
 :pattern ( ($generated@@83 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@150 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@66)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@150 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@136) ($generated@@0 ($generated@@83 $generated@@268 $generated@@270))) ($generated@@138 $generated@@270 $generated@@269))
 :pattern ( ($generated@@83 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@150 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@257 $generated@@271) $generated@@271)
 :pattern ( ($generated@@257 $generated@@271))
)))
(assert (= (type $generated@@274) $generated@@136))
(assert  (=> (<= 3 $generated@@134) (=> (or $generated@@272 (not (= 3 $generated@@134))) (and $generated@@273 (= $generated@@274 $generated@@243)))))
(assert  (=> (<= 3 $generated@@134) (=> (or $generated@@272 (not (= 3 $generated@@134))) (and $generated@@273 (= $generated@@274 $generated@@243)))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@66) (= (type $generated@@278) $generated@@66)) (= (type $generated@@279) $generated@@136)) (= (type $generated@@280) $generated@@136)) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@275 $generated@@281)) (= ($generated@@76 ($generated@@244 $generated@@279 $generated@@280) ($generated@@156 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@76 ($generated@@244 $generated@@279 $generated@@280) ($generated@@156 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@78 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert  (=> (<= 3 $generated@@134) (=> (or $generated@@272 (not (= 3 $generated@@134))) (and (let (($generated@@285 ($generated@@257 $generated@@274)))
 (and ($generated@@152 $generated@@285) ($generated@@282 ($generated@@135 $generated@@285) ($generated@@283 $generated@@136)))) ($generated@@138 $generated@@274 $generated@@139)))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@70)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@157) (= ($generated@@155 $generated@@288) (= ($generated@@286 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@288))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@136) (or ($generated@@137 ($generated@@257 $generated@@289)) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@289 $generated@@139)))) (and ($generated@@140 ($generated@@257 $generated@@289)) (= ($generated@@135 ($generated@@257 $generated@@289)) ($generated@@141 ($generated@@142 $generated@@143) ($generated@@257 $generated@@289)))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@257 $generated@@289)))
))))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@136) (or ($generated@@137 $generated@@290) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@290 $generated@@139)))) ($generated@@150 ($generated@@135 $generated@@290) ($generated@@170 $generated@@46)))
 :pattern ( ($generated@@135 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@157) ($generated@@155 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@136) (= (type $generated@@293) $generated@@136)) (= $generated@@291 ($generated@@244 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@155 $generated@@291))
)))
(assert  (and (and (forall (($generated@@298 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@298)) 18)) (forall (($generated@@299 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
))) (forall (($generated@@300 T@T) ) (! (= (type ($generated@@294 $generated@@300)) ($generated@@296 $generated@@300))
 :pattern ( ($generated@@294 $generated@@300))
))))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@301)) 0)
 :pattern ( ($generated@@294 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@136)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@66) (= (type $generated@@306) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@276 ($generated@@302 $generated@@304) $generated@@305 $generated@@306) ($generated@@76 $generated@@304 $generated@@305 $generated@@306)))
 :pattern ( ($generated@@276 ($generated@@302 $generated@@304) $generated@@305 $generated@@306))
)))
(assert  (=> true (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) $generated@@144) (= (type $generated@@308) $generated@@136)) (or ($generated@@140 $generated@@308) ($generated@@138 $generated@@308 $generated@@139))) ($generated@@150 ($generated@@141 $generated@@307 $generated@@308) ($generated@@170 $generated@@46)))
 :pattern ( ($generated@@141 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@81 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@78 $generated@@311 $generated@@2)) (and (= (= ($generated@@309 $generated@@310) 0) (= $generated@@310 ($generated@@283 $generated@@311))) (=> (not (= ($generated@@309 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@83 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@78 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@83 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 20)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@83 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@83 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@81 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@78 $generated@@350 $generated@@2)) (= ($generated@@171 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@83 $generated@@349 $generated@@351))) (<= ($generated ($generated@@83 $generated@@349 $generated@@351)) ($generated@@309 $generated@@349))))
 :pattern ( ($generated@@83 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@171 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@317 (type $generated@@352))))
(let (($generated@@354 ($generated@@316 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@315 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@314 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@313 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@317 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(let (($generated@@361 ($generated@@316 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@315 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@314 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@335 (type $generated@@363))))
(let (($generated@@365 ($generated@@334 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@333 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@332 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@331 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@335 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@78 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@335 (type $generated@@370))))
(let (($generated@@372 ($generated@@334 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@333 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@332 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@375) $generated@@66)) (= ($generated@@150 $generated@@374 ($generated@@170 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@136) (< 0 ($generated ($generated@@83 $generated@@374 $generated@@376)))) ($generated@@138 $generated@@376 $generated@@375))
 :pattern ( ($generated@@83 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@150 $generated@@374 ($generated@@170 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@81 (type $generated@@377))))
 (=> (and (= (type $generated@@377) ($generated@@78 $generated@@379 $generated@@2)) (= (type $generated@@378) ($generated@@78 $generated@@379 $generated@@2))) (= ($generated@@282 $generated@@377 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (= ($generated ($generated@@83 $generated@@377 $generated@@380)) ($generated ($generated@@83 $generated@@378 $generated@@380))))
 :pattern ( ($generated@@83 $generated@@377 $generated@@380))
 :pattern ( ($generated@@83 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@282 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@261 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@136) ($generated@@0 ($generated@@83 $generated@@381 $generated@@384))) ($generated@@276 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@83 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@261 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@386) $generated@@66)) (= (type $generated@@387) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@385 ($generated@@266 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@136) ($generated@@0 ($generated@@83 $generated@@385 $generated@@388))) ($generated@@276 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@83 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@76 $generated@@385 ($generated@@266 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(= ($generated ($generated@@83 ($generated@@283 $generated@@390) $generated@@389)) 0))
 :pattern ( (let (($generated@@390 (type $generated@@389)))
($generated@@83 ($generated@@283 $generated@@390) $generated@@389)))
)))
(assert  (and (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@391 $generated@@394)) ($generated@@78 $generated@@136 $generated@@4))
 :pattern ( ($generated@@391 $generated@@394))
)) (forall (($generated@@395 T@T) ($generated@@396 T@U) ) (! (= (type ($generated@@392 $generated@@395 $generated@@396)) $generated@@395)
 :pattern ( ($generated@@392 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@317 (type $generated@@397))))
(let (($generated@@399 ($generated@@316 (type $generated@@397))))
(= (type ($generated@@393 $generated@@397)) ($generated@@78 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@393 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@315 $generated@@136 $generated@@136)) (= (type $generated@@401) $generated@@136)) (= ($generated@@0 ($generated@@83 ($generated@@391 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@400) ($generated@@164 ($generated@@392 $generated@@157 $generated@@401)))) (= ($generated@@83 ($generated@@393 $generated@@400) ($generated@@164 ($generated@@392 $generated@@157 $generated@@401))) ($generated@@165 ($generated@@392 $generated@@157 $generated@@401))))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@400) $generated@@401))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@78 $generated@@136 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@335 (type $generated@@405))))
(let (($generated@@407 ($generated@@334 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@78 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@333 $generated@@136 $generated@@136)) (= (type $generated@@409) $generated@@136)) (= ($generated@@0 ($generated@@83 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@83 ($generated@@331 $generated@@408) ($generated@@164 ($generated@@392 $generated@@157 $generated@@409)))) (= ($generated@@83 ($generated@@403 $generated@@408) ($generated@@164 ($generated@@392 $generated@@157 $generated@@409))) ($generated@@165 ($generated@@392 $generated@@157 $generated@@409))))))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@316 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@315 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@83 ($generated@@313 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@83 ($generated@@393 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@410) $generated@@414))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@334 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@333 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@83 ($generated@@331 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@83 ($generated@@403 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@415) $generated@@419))
 :pattern ( ($generated@@83 ($generated@@403 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@66)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@315 $generated@@136 $generated@@136)) (= (type $generated@@424) $generated@@66)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@423) $generated@@427))) (and ($generated@@276 ($generated@@83 ($generated@@393 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@276 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@423) $generated@@427))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@76 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@66)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@333 $generated@@136 $generated@@136)) (= (type $generated@@432) $generated@@66)) (= (type $generated@@433) $generated@@66)) (= (type $generated@@434) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@431) $generated@@435))) (and ($generated@@276 ($generated@@83 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@276 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@83 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@76 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@144)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@144) (= (type $generated@@439) $generated@@136)) (= ($generated@@251 $generated@@438 $generated@@439) ($generated@@251 $generated@@143 $generated@@439)))
 :pattern ( ($generated@@251 ($generated@@436 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@81 (type $generated@@440))))
 (=> (and (and (= (type $generated@@440) ($generated@@78 $generated@@442 $generated@@2)) (= (type $generated@@441) ($generated@@78 $generated@@442 $generated@@2))) ($generated@@282 $generated@@440 $generated@@441)) (= $generated@@440 $generated@@441)))
 :pattern ( ($generated@@282 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@78 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@331 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@331 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@335 (type $generated@@448))))
(let (($generated@@450 ($generated@@334 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@333 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@332 $generated@@450 $generated@@449)) (= ($generated@@367 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@367 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@335 (type $generated@@451))))
(let (($generated@@453 ($generated@@334 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@333 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@332 $generated@@453 $generated@@452)) (= ($generated@@402 $generated@@451) ($generated@@443 $generated@@136))))))
 :pattern ( ($generated@@402 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@317 (type $generated@@454))))
(let (($generated@@456 ($generated@@316 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@315 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@314 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@136) (= (type $generated@@458) $generated@@136)) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@454) ($generated@@302 ($generated@@244 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@391 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@136) (= (type $generated@@463) $generated@@136)) ($generated@@0 ($generated@@83 ($generated@@402 $generated@@459) ($generated@@302 ($generated@@244 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@402 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@136) ($generated@@138 $generated@@464 $generated@@46)) (and (= ($generated@@302 ($generated@@392 $generated@@2 $generated@@464)) $generated@@464) ($generated@@150 ($generated@@392 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@138 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@136) ($generated@@138 $generated@@465 $generated@@47)) (and (= ($generated@@302 ($generated@@392 $generated@@3 $generated@@465)) $generated@@465) ($generated@@150 ($generated@@392 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@138 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@136) ($generated@@138 $generated@@466 $generated@@44)) (and (= ($generated@@302 ($generated@@392 $generated@@4 $generated@@466)) $generated@@466) ($generated@@150 ($generated@@392 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@138 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 21))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@136) ($generated@@138 $generated@@468 $generated@@45)) (and (= ($generated@@302 ($generated@@392 $generated@@467 $generated@@468)) $generated@@468) ($generated@@150 ($generated@@392 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@138 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@144) (= (type $generated@@470) $generated@@136)) (= ($generated@@251 ($generated@@142 $generated@@469) $generated@@470) ($generated@@251 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@251 ($generated@@142 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@66) (= ($generated@@138 ($generated@@302 $generated@@471) $generated@@472) ($generated@@150 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@138 ($generated@@302 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@81 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@78 $generated@@474 $generated@@2)) (<= 0 ($generated@@309 $generated@@473))))
 :pattern ( ($generated@@309 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@297 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@296 $generated@@476)) (<= 0 ($generated@@295 $generated@@475))))
 :pattern ( ($generated@@295 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@420 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@420 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@74 ($generated@@420 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@420 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) $generated@@66)) (= ($generated@@487 ($generated@@428 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@428 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@428 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@428 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@74 ($generated@@428 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@428 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@136) (= (type $generated@@498) $generated@@136)) (= ($generated@@286 ($generated@@244 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@499 ($generated@@156 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@156 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@156 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@156 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@136) (= (type $generated@@508) $generated@@136)) (= ($generated@@164 ($generated@@244 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@136) (= (type $generated@@510) $generated@@136)) (= ($generated@@165 ($generated@@244 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@244 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@144) (= (type $generated@@512) $generated@@136)) (= ($generated@@141 $generated@@511 $generated@@512) ($generated@@141 $generated@@143 $generated@@512)))
 :pattern ( ($generated@@141 ($generated@@436 $generated@@511) $generated@@512))
)))
(assert  (and (forall (($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@515))
)) (forall (($generated@@516 T@U) ($generated@@517 Int) ) (! (let (($generated@@518 ($generated@@297 (type $generated@@516))))
(= (type ($generated@@514 $generated@@516 $generated@@517)) $generated@@518))
 :pattern ( ($generated@@514 $generated@@516 $generated@@517))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@296 $generated@@136)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@519 ($generated@@513 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@295 $generated@@519))) ($generated@@276 ($generated@@514 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@514 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@76 $generated@@519 ($generated@@513 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@77 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@77 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@525 ($generated@@261 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@261 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@66) (= ($generated@@74 ($generated@@261 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@529 ($generated@@266 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@266 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@74 ($generated@@266 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@170 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@170 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@170 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@537 ($generated@@513 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@513 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@74 ($generated@@513 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@513 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
(= ($generated@@392 $generated@@542 ($generated@@302 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@302 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@315 $generated@@136 $generated@@136)) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) $generated@@66)) (= ($generated@@150 $generated@@543 ($generated@@420 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@313 $generated@@543) $generated@@546))) (and ($generated@@138 ($generated@@83 ($generated@@393 $generated@@543) $generated@@546) $generated@@545) ($generated@@138 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@543) $generated@@546))
 :pattern ( ($generated@@83 ($generated@@313 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@150 $generated@@543 ($generated@@420 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@333 $generated@@136 $generated@@136)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@66)) (= ($generated@@150 $generated@@547 ($generated@@428 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@547) $generated@@550))) (and ($generated@@138 ($generated@@83 ($generated@@403 $generated@@547) $generated@@550) $generated@@549) ($generated@@138 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@83 ($generated@@403 $generated@@547) $generated@@550))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@150 $generated@@547 ($generated@@428 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@136)) (< ($generated@@551 $generated@@553) ($generated@@552 ($generated@@244 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@244 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@136)) (< ($generated@@551 $generated@@556) ($generated@@552 ($generated@@244 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@244 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@144) (= (type $generated@@558) $generated@@136)) (= ($generated@@141 ($generated@@142 $generated@@557) $generated@@558) ($generated@@141 $generated@@557 $generated@@558)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) $generated@@66)) ($generated@@138 $generated@@559 ($generated@@420 $generated@@560 $generated@@561))) (and (= ($generated@@302 ($generated@@392 ($generated@@315 $generated@@136 $generated@@136) $generated@@559)) $generated@@559) ($generated@@150 ($generated@@392 ($generated@@315 $generated@@136 $generated@@136) $generated@@559) ($generated@@420 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@138 $generated@@559 ($generated@@420 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) ($generated@@138 $generated@@562 ($generated@@428 $generated@@563 $generated@@564))) (and (= ($generated@@302 ($generated@@392 ($generated@@333 $generated@@136 $generated@@136) $generated@@562)) $generated@@562) ($generated@@150 ($generated@@392 ($generated@@333 $generated@@136 $generated@@136) $generated@@562) ($generated@@428 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@138 $generated@@562 ($generated@@428 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@66) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@136)) ($generated@@138 $generated@@567 ($generated@@156 $generated@@565 $generated@@566))) (and (= ($generated@@302 ($generated@@392 $generated@@157 $generated@@567)) $generated@@567) ($generated@@150 ($generated@@392 $generated@@157 $generated@@567) ($generated@@156 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@138 $generated@@567 ($generated@@156 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (not ($generated@@0 ($generated@@83 ($generated@@443 $generated@@569) $generated@@568))))
 :pattern ( (let (($generated@@569 (type $generated@@568)))
($generated@@83 ($generated@@443 $generated@@569) $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@71)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@66) (= (type $generated@@573) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@570 ($generated@@156 $generated@@572 $generated@@573)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@157) (= ($generated@@551 ($generated@@302 $generated@@574)) ($generated@@552 $generated@@574)))
 :pattern ( ($generated@@551 ($generated@@302 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@136) ($generated@@138 $generated@@575 ($generated@@77 0))) (and (= ($generated@@302 ($generated@@392 $generated@@2 $generated@@575)) $generated@@575) ($generated@@150 ($generated@@392 ($generated@@78 $generated@@136 $generated@@4) $generated@@575) ($generated@@77 0))))
 :pattern ( ($generated@@138 $generated@@575 ($generated@@77 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) $generated@@66)) ($generated@@138 $generated@@576 ($generated@@261 $generated@@577))) (and (= ($generated@@302 ($generated@@392 ($generated@@78 $generated@@136 $generated@@4) $generated@@576)) $generated@@576) ($generated@@150 ($generated@@392 ($generated@@78 $generated@@136 $generated@@4) $generated@@576) ($generated@@261 $generated@@577))))
 :pattern ( ($generated@@138 $generated@@576 ($generated@@261 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@136) (= (type $generated@@579) $generated@@66)) ($generated@@138 $generated@@578 ($generated@@266 $generated@@579))) (and (= ($generated@@302 ($generated@@392 ($generated@@78 $generated@@136 $generated@@4) $generated@@578)) $generated@@578) ($generated@@150 ($generated@@392 ($generated@@78 $generated@@136 $generated@@4) $generated@@578) ($generated@@266 $generated@@579))))
 :pattern ( ($generated@@138 $generated@@578 ($generated@@266 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@66)) ($generated@@138 $generated@@580 ($generated@@170 $generated@@581))) (and (= ($generated@@302 ($generated@@392 ($generated@@78 $generated@@136 $generated@@2) $generated@@580)) $generated@@580) ($generated@@150 ($generated@@392 ($generated@@78 $generated@@136 $generated@@2) $generated@@580) ($generated@@170 $generated@@581))))
 :pattern ( ($generated@@138 $generated@@580 ($generated@@170 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@66)) ($generated@@138 $generated@@582 ($generated@@513 $generated@@583))) (and (= ($generated@@302 ($generated@@392 ($generated@@296 $generated@@136) $generated@@582)) $generated@@582) ($generated@@150 ($generated@@392 ($generated@@296 $generated@@136) $generated@@582) ($generated@@513 $generated@@583))))
 :pattern ( ($generated@@138 $generated@@582 ($generated@@513 $generated@@583)))
)))
(assert (= ($generated@@74 $generated@@139) $generated@@63))
(assert (= ($generated@@570 $generated@@139) $generated@@65))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@584 ($generated@@170 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@136) (< 0 ($generated ($generated@@83 $generated@@584 $generated@@587)))) ($generated@@276 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@83 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@76 $generated@@584 ($generated@@170 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@157) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@275 $generated@@590) (and ($generated@@155 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@66) ($generated@@76 $generated@@588 ($generated@@156 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@76 $generated@@588 ($generated@@156 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@276 ($generated@@164 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@276 ($generated@@164 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@157) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@275 $generated@@594) (and ($generated@@155 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@66) ($generated@@76 $generated@@592 ($generated@@156 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@156 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@276 ($generated@@165 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@276 ($generated@@165 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@136) (= (type $generated@@597) $generated@@136)) (= ($generated@@244 ($generated@@257 $generated@@596) ($generated@@257 $generated@@597)) ($generated@@257 ($generated@@244 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@244 ($generated@@257 $generated@@596) ($generated@@257 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@302 ($generated@@257 $generated@@598)) ($generated@@257 ($generated@@302 $generated@@598)))
 :pattern ( ($generated@@302 ($generated@@257 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@297 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@296 $generated@@600)) (= ($generated@@295 $generated@@599) 0)) (= $generated@@599 ($generated@@294 $generated@@600))))
 :pattern ( ($generated@@295 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@78 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@309 ($generated@@84 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@309 $generated@@601) ($generated ($generated@@83 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@309 ($generated@@84 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@136) (or ($generated@@153 $generated@@605) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@605 $generated@@139)))) (and ($generated@@252 $generated@@605) (= ($generated@@152 $generated@@605) ($generated@@251 ($generated@@142 $generated@@143) $generated@@605))))
 :pattern ( ($generated@@152 $generated@@605))
))))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@607) $generated@@2)) ($generated@@76 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@76 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@609) $generated@@3)) ($generated@@76 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@76 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@611) $generated@@4)) ($generated@@76 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@76 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) $generated@@467)) ($generated@@76 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@76 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@136)) ($generated@@76 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@296 $generated@@136)) (= (type $generated@@617) $generated@@66)) (= ($generated@@150 $generated@@616 ($generated@@513 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@295 $generated@@616))) ($generated@@138 ($generated@@514 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@514 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@150 $generated@@616 ($generated@@513 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@296 $generated@@136)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@295 $generated@@620))) (< ($generated@@552 ($generated@@392 $generated@@157 ($generated@@514 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@552 ($generated@@392 $generated@@157 ($generated@@514 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@315 $generated@@136 $generated@@136)) (= (type $generated@@623) $generated@@66)) (= (type $generated@@624) $generated@@66)) ($generated@@150 $generated@@622 ($generated@@420 $generated@@623 $generated@@624))) (and (and ($generated@@150 ($generated@@313 $generated@@622) ($generated@@261 $generated@@623)) ($generated@@150 ($generated@@356 $generated@@622) ($generated@@261 $generated@@624))) ($generated@@150 ($generated@@391 $generated@@622) ($generated@@261 ($generated@@156 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@150 $generated@@622 ($generated@@420 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@333 $generated@@136 $generated@@136)) (= (type $generated@@626) $generated@@66)) (= (type $generated@@627) $generated@@66)) ($generated@@150 $generated@@625 ($generated@@428 $generated@@626 $generated@@627))) (and (and ($generated@@150 ($generated@@331 $generated@@625) ($generated@@266 $generated@@626)) ($generated@@150 ($generated@@367 $generated@@625) ($generated@@266 $generated@@627))) ($generated@@150 ($generated@@402 $generated@@625) ($generated@@266 ($generated@@156 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@150 $generated@@625 ($generated@@428 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@150 $generated@@628 $generated@@46))
 :pattern ( ($generated@@150 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@150 $generated@@629 $generated@@47))
 :pattern ( ($generated@@150 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@150 $generated@@630 $generated@@44))
 :pattern ( ($generated@@150 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@467) ($generated@@150 $generated@@631 $generated@@45))
 :pattern ( ($generated@@150 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@136) ($generated@@150 $generated@@632 $generated@@48))
 :pattern ( ($generated@@150 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@636) ($generated@@177 $generated@@79 $generated@@4)) (= (type $generated@@637) $generated@@79)) (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@633) $generated@@136)) (= (type $generated@@635) $generated@@136)) (= (type $generated@@640) ($generated@@177 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@641 true))
(let (($generated@@642  (=> (and (not ($generated@@152 $generated@@633)) (= (ControlFlow 0 7) 5)) $generated@@641)))
(let (($generated@@643  (=> (and (and ($generated@@152 $generated@@633) ($generated@@276 $generated@@633 $generated@@139 $generated@@634)) (and ($generated@@137 $generated@@633) (= (ControlFlow 0 6) 5))) $generated@@641)))
(let (($generated@@644  (=> ($generated@@138 $generated@@274 $generated@@139) (=> (and ($generated@@138 $generated@@633 $generated@@139) ($generated@@276 $generated@@633 $generated@@139 $generated@@634)) (and (=> (= (ControlFlow 0 8) (- 0 9)) true) (=> (and (= $generated@@635 ($generated@@257 $generated@@274)) $generated@@272) (=> (and (and ($generated@@138 $generated@@635 $generated@@139) (= $generated@@633 $generated@@635)) (and ($generated@@276 $generated@@633 $generated@@139 $generated@@634) ($generated@@153 $generated@@633))) (and (=> (= (ControlFlow 0 8) 6) $generated@@643) (=> (= (ControlFlow 0 8) 7) $generated@@642)))))))))
(let (($generated@@645  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@646 ($generated@@257 $generated@@274)))
 (=> ($generated@@153 $generated@@646) (or ($generated@@152 $generated@@646) ($generated@@251 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@646))))) (=> (let (($generated@@647 ($generated@@257 $generated@@274)))
 (=> ($generated@@153 $generated@@647) (or ($generated@@152 $generated@@647) ($generated@@251 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@647)))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@648 ($generated@@257 $generated@@274)))
($generated@@282 ($generated@@135 $generated@@648) ($generated@@283 $generated@@136))))))))
(let (($generated@@649  (=> (= $generated@@636 ($generated@@231 $generated@@637 $generated@@634 $generated@@60 false)) (=> (and (and ($generated@@275 $generated@@638) ($generated@@639 $generated@@638)) (and $generated@@273 (let (($generated@@650 $generated@@243))
 (and ($generated@@252 $generated@@650) (=> ($generated@@251 ($generated@@142 $generated@@143) $generated@@650) ($generated@@140 $generated@@650)))))) (=> (and (and (and (let (($generated@@651 $generated@@243))
($generated@@251 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@651)) (let (($generated@@652 $generated@@243))
($generated@@282 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@652) ($generated@@283 $generated@@136)))) (and (= $generated@@634 $generated@@638) $generated@@273)) (and (and (= $generated@@274 $generated@@243) $generated@@273) (and ($generated@@138 $generated@@274 $generated@@139) (= (ControlFlow 0 4) 2)))) $generated@@645)))))
(let (($generated@@653  (=> (= $generated@@640 ($generated@@176 $generated@@637 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@644) (=> (= (ControlFlow 0 10) 4) $generated@@649)))))
(let (($generated@@654  (=> (and (and ($generated@@275 $generated@@634) ($generated@@639 $generated@@634)) (and (= 3 $generated@@134) (= (ControlFlow 0 11) 10))) $generated@@653)))
$generated@@654)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (Int) Int)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@310 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U) Bool)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@396 (T@T T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@484 (T@T) T@U)
(declare-fun $generated@@508 () T@T)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@553 (T@U Int) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@79) (= (type $generated@@150) $generated@@79)) (= ($generated@@146 ($generated@@77 $generated@@148 $generated@@149 $generated@@150)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) $generated@@79)) (= ($generated@@151 ($generated@@77 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@77 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@79)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@79) (= (type $generated@@159) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@157 $generated@@158 $generated@@159)) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@160 $generated@@161)) $generated@@79)
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@79) (= (type $generated@@164) $generated@@79)) (= ($generated@@160 ($generated@@77 $generated@@162 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@76 $generated@@165 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@165 ($generated@@89 0)))
)))
(assert (= ($generated@@1 $generated@@168) 15))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@168) (= (type $generated@@171) $generated@@79)) (or ($generated@@169 $generated@@171) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@171 $generated@@78)))) true)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@68) (= (type $generated@@177) $generated@@68)) (= (type $generated@@178) $generated@@79)) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@79) (= (type $generated@@186) $generated@@79)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (= (type $generated@@187) $generated@@79))
(assert (= ($generated@@146 $generated@@187) $generated@@63))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@68)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@192) $generated@@68)) ($generated@@76 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@76 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@91 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@71 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@91) (= (type $generated@@243) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@244) ($generated@@70 $generated@@4))) (= (type $generated@@246) $generated@@91)) (= (type $generated@@247) ($generated@@70 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@195 $generated@@91 $generated@@4))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@91) (= (type $generated@@255) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@91)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@193 ($generated@@249 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@193 ($generated@@249 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@261 $generated@@265)) $generated@@168)
 :pattern ( ($generated@@261 $generated@@265))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@168) (= (type $generated@@267) $generated@@79)) (or ($generated@@169 $generated@@267) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@267 $generated@@78)))) (and (=> (not ($generated@@262 $generated@@267)) (let (($generated@@268 ($generated@@160 $generated@@267)))
(let (($generated@@269 ($generated@@155 $generated@@267)))
(let (($generated@@270 ($generated@@151 $generated@@267)))
 (and ($generated@@169 $generated@@269) (=> ($generated@@167 $generated@@266 $generated@@269) (and ($generated@@169 $generated@@268) (=> ($generated@@167 $generated@@266 $generated@@268) (and ($generated@@263 $generated@@269) (=> (or ($generated@@264 $generated@@269 $generated@@187) (<= $generated@@270 ($generated@@151 $generated@@269))) ($generated@@263 $generated@@268))))))))))) (= ($generated@@167 ($generated@@261 $generated@@266) $generated@@267) (ite ($generated@@262 $generated@@267) true (let (($generated@@271 ($generated@@160 $generated@@267)))
(let (($generated@@272 ($generated@@155 $generated@@267)))
(let (($generated@@273 ($generated@@151 $generated@@267)))
 (and (and (and ($generated@@167 $generated@@266 $generated@@272) ($generated@@167 $generated@@266 $generated@@271)) (or ($generated@@264 $generated@@272 $generated@@187) (<= $generated@@273 ($generated@@151 $generated@@272)))) (or ($generated@@264 $generated@@271 $generated@@187) (<= $generated@@273 ($generated@@151 $generated@@271)))))))))))
 :pattern ( ($generated@@167 ($generated@@261 $generated@@266) $generated@@267))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277)) $generated@@79)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@68) (= (type $generated@@279) $generated@@68)) (= (type $generated@@280) $generated@@182)) (= (type $generated@@281) $generated@@182)) (= ($generated@@76 ($generated@@274 $generated@@280 $generated@@281) ($generated@@173 $generated@@278 $generated@@279))  (and ($generated@@275 $generated@@280 $generated@@278) ($generated@@275 $generated@@281 $generated@@279))))
 :pattern ( ($generated@@76 ($generated@@274 $generated@@280 $generated@@281) ($generated@@173 $generated@@278 $generated@@279)))
)))
(assert ($generated@@76 $generated@@187 $generated@@78))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@282 $generated@@283)) ($generated@@88 $generated@@187 $generated@@78 $generated@@283))
 :pattern ( ($generated@@88 $generated@@187 $generated@@78 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@79) (= (type $generated@@285) $generated@@79)) (= ($generated@@179 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@179 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@79) (= (type $generated@@287) $generated@@79)) (= ($generated@@264 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@264 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@291) $generated@@68)) (= ($generated@@76 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@182) ($generated@@0 ($generated@@95 $generated@@290 $generated@@292))) ($generated@@275 $generated@@292 $generated@@291))
 :pattern ( ($generated@@95 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@76 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@68)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@296) $generated@@68)) (= ($generated@@76 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@182) ($generated@@0 ($generated@@95 $generated@@295 $generated@@297))) ($generated@@275 $generated@@297 $generated@@296))
 :pattern ( ($generated@@95 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@76 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@298 $generated@@299) $generated@@299)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
(= (type ($generated@@300 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= ($generated@@300 $generated@@303) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@79) (= (type $generated@@305) $generated@@79)) (and ($generated@@262 $generated@@304) ($generated@@262 $generated@@305))) (= ($generated@@264 $generated@@304 $generated@@305) true))
 :pattern ( ($generated@@264 $generated@@304 $generated@@305) ($generated@@262 $generated@@304))
 :pattern ( ($generated@@264 $generated@@304 $generated@@305) ($generated@@262 $generated@@305))
)))
(assert (forall (($generated@@306 Int) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (= (type $generated@@307) $generated@@79) (= (type $generated@@308) $generated@@79)) (= (type $generated@@309) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@282 $generated@@309)) (= ($generated@@88 ($generated@@77 $generated@@306 $generated@@307 $generated@@308) $generated@@78 $generated@@309)  (and (and ($generated@@88 ($generated@@8 $generated@@306) $generated@@46 $generated@@309) ($generated@@88 $generated@@307 $generated@@78 $generated@@309)) ($generated@@88 $generated@@308 $generated@@78 $generated@@309))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@306 $generated@@307 $generated@@308) $generated@@78 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@311) $generated@@68) (= (type $generated@@312) $generated@@68)) (= (type $generated@@313) $generated@@182)) (= (type $generated@@314) $generated@@182)) (= (type $generated@@315) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@282 $generated@@315)) (= ($generated@@88 ($generated@@274 $generated@@313 $generated@@314) ($generated@@173 $generated@@311 $generated@@312) $generated@@315)  (and ($generated@@310 $generated@@313 $generated@@311 $generated@@315) ($generated@@310 $generated@@314 $generated@@312 $generated@@315))))
 :pattern ( ($generated@@88 ($generated@@274 $generated@@313 $generated@@314) ($generated@@173 $generated@@311 $generated@@312) $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@79) (= ($generated@@172 $generated@@316) (= ($generated@@146 $generated@@316) $generated@@61)))
 :pattern ( ($generated@@172 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@79) (= ($generated@@262 $generated@@317) (= ($generated@@146 $generated@@317) $generated@@63)))
 :pattern ( ($generated@@262 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@79) (= ($generated@@318 $generated@@319) (= ($generated@@146 $generated@@319) $generated@@65)))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@79) ($generated@@318 $generated@@320)) (exists (($generated@@321 Int) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@79) (= (type $generated@@323) $generated@@79)) (= $generated@@320 ($generated@@77 $generated@@321 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@318 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@79) ($generated@@172 $generated@@324)) (exists (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (and (and (= (type $generated@@325) $generated@@182) (= (type $generated@@326) $generated@@182)) (= $generated@@324 ($generated@@274 $generated@@325 $generated@@326)))
 :no-pattern (type $generated@@325)
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
)))
 :pattern ( ($generated@@172 $generated@@324))
)))
(assert  (and (and (forall (($generated@@331 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@331)) 18)) (forall (($generated@@332 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@329 $generated@@332))
))) (forall (($generated@@333 T@T) ) (! (= (type ($generated@@327 $generated@@333)) ($generated@@329 $generated@@333))
 :pattern ( ($generated@@327 $generated@@333))
))))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@334)) 0)
 :pattern ( ($generated@@327 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@79) ($generated@@262 $generated@@335)) (= $generated@@335 $generated@@187))
 :pattern ( ($generated@@262 $generated@@335))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@336) $generated@@168) (= (type $generated@@337) $generated@@79)) (or ($generated@@169 ($generated@@300 $generated@@337)) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@337 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@262 ($generated@@300 $generated@@337)))))) (let (($generated@@338 ($generated@@300 ($generated@@160 ($generated@@300 $generated@@337)))))
(let (($generated@@339 ($generated@@300 ($generated@@155 ($generated@@300 $generated@@337)))))
(let (($generated@@340 ($generated@@298 ($generated@@151 ($generated@@300 $generated@@337)))))
 (and ($generated@@169 $generated@@339) (=> ($generated@@167 ($generated@@261 $generated@@336) $generated@@339) (and ($generated@@169 $generated@@338) (=> ($generated@@167 ($generated@@261 $generated@@336) $generated@@338) (and ($generated@@263 $generated@@339) (=> (or ($generated@@264 $generated@@339 $generated@@187) (<= $generated@@340 ($generated@@151 $generated@@339))) ($generated@@263 $generated@@338))))))))))) (= ($generated@@167 ($generated@@261 $generated@@336) ($generated@@300 $generated@@337)) (ite ($generated@@262 ($generated@@300 $generated@@337)) true (let (($generated@@341 ($generated@@300 ($generated@@160 ($generated@@300 $generated@@337)))))
(let (($generated@@342 ($generated@@300 ($generated@@155 ($generated@@300 $generated@@337)))))
(let (($generated@@343 ($generated@@298 ($generated@@151 ($generated@@300 $generated@@337)))))
 (and (and (and ($generated@@167 ($generated@@261 $generated@@336) $generated@@342) ($generated@@167 ($generated@@261 $generated@@336) $generated@@341)) (or ($generated@@264 $generated@@342 $generated@@187) (<= $generated@@343 ($generated@@298 ($generated@@151 $generated@@342))))) (or ($generated@@264 $generated@@341 $generated@@187) (<= $generated@@343 ($generated@@298 ($generated@@151 $generated@@341))))))))))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@261 $generated@@336) ($generated@@300 $generated@@337)))
))))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@182)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@68) (= (type $generated@@348) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@310 ($generated@@344 $generated@@346) $generated@@347 $generated@@348) ($generated@@88 $generated@@346 $generated@@347 $generated@@348)))
 :pattern ( ($generated@@310 ($generated@@344 $generated@@346) $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@349) $generated@@79) (= (type $generated@@350) $generated@@79)) (and ($generated@@318 $generated@@349) ($generated@@318 $generated@@350))) (= ($generated@@264 $generated@@349 $generated@@350)  (and (and (= ($generated@@151 $generated@@349) ($generated@@151 $generated@@350)) ($generated@@264 ($generated@@155 $generated@@349) ($generated@@155 $generated@@350))) ($generated@@264 ($generated@@160 $generated@@349) ($generated@@160 $generated@@350)))))
 :pattern ( ($generated@@264 $generated@@349 $generated@@350) ($generated@@318 $generated@@349))
 :pattern ( ($generated@@264 $generated@@349 $generated@@350) ($generated@@318 $generated@@350))
)))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@90 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@93 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@90 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@95 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 19)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@90 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@95 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@95 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 20)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@90 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@95 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@95 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@93 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@90 $generated@@394 $generated@@2)) (= ($generated@@189 $generated@@393) (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@394) (and (<= 0 ($generated ($generated@@95 $generated@@393 $generated@@395))) (<= ($generated ($generated@@95 $generated@@393 $generated@@395)) ($generated@@351 $generated@@393))))
 :pattern ( ($generated@@95 $generated@@393 $generated@@395))
)))))
 :pattern ( ($generated@@189 $generated@@393))
)))
(assert (forall (($generated@@397 T@T) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@182) ($generated@@275 $generated@@399 $generated@@78)) (and (= ($generated@@344 ($generated@@396 $generated@@79 $generated@@399)) $generated@@399) ($generated@@76 ($generated@@396 $generated@@79 $generated@@399) $generated@@78)))
 :pattern ( ($generated@@275 $generated@@399 $generated@@78))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@361 (type $generated@@400))))
(let (($generated@@402 ($generated@@360 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@359 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@358 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@95 ($generated@@357 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@357 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@361 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@90 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@361 (type $generated@@407))))
(let (($generated@@409 ($generated@@360 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@359 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@358 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@95 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@379 (type $generated@@411))))
(let (($generated@@413 ($generated@@378 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@377 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@376 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@375 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@379 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@90 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@379 (type $generated@@418))))
(let (($generated@@420 ($generated@@378 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@377 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@376 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@95 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@423) $generated@@68)) (= ($generated@@76 $generated@@422 ($generated@@188 $generated@@423)) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@422 $generated@@424)))) ($generated@@275 $generated@@424 $generated@@423))
 :pattern ( ($generated@@95 $generated@@422 $generated@@424))
))))
 :pattern ( ($generated@@76 $generated@@422 ($generated@@188 $generated@@423)))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@79) ($generated@@263 $generated@@425)) (or ($generated@@262 $generated@@425) ($generated@@318 $generated@@425)))
 :pattern ( ($generated@@263 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@426 ($generated@@288 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@182) ($generated@@0 ($generated@@95 $generated@@426 $generated@@429))) ($generated@@310 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@95 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@88 $generated@@426 ($generated@@288 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@430 ($generated@@293 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@182) ($generated@@0 ($generated@@95 $generated@@430 $generated@@433))) ($generated@@310 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@95 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@88 $generated@@430 ($generated@@293 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@95 ($generated@@352 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@95 ($generated@@352 $generated@@435) $generated@@434)))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@361 (type $generated@@439))))
(let (($generated@@441 ($generated@@360 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@90 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@443) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@95 ($generated@@357 $generated@@442) ($generated@@180 ($generated@@396 $generated@@79 $generated@@443)))) (= ($generated@@95 ($generated@@437 $generated@@442) ($generated@@180 ($generated@@396 $generated@@79 $generated@@443))) ($generated@@181 ($generated@@396 $generated@@79 $generated@@443))))))
 :pattern ( ($generated@@95 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@379 (type $generated@@447))))
(let (($generated@@449 ($generated@@378 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@90 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@451) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@95 ($generated@@375 $generated@@450) ($generated@@180 ($generated@@396 $generated@@79 $generated@@451)))) (= ($generated@@95 ($generated@@445 $generated@@450) ($generated@@180 ($generated@@396 $generated@@79 $generated@@451))) ($generated@@181 ($generated@@396 $generated@@79 $generated@@451))))))
 :pattern ( ($generated@@95 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@360 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@359 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@95 ($generated@@404 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@95 ($generated@@357 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@95 ($generated@@437 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@95 ($generated@@357 $generated@@452) $generated@@456))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@95 ($generated@@404 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@378 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@377 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@95 ($generated@@415 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@95 ($generated@@375 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@95 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@457) $generated@@461))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@95 ($generated@@415 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@357 $generated@@465) $generated@@469))) (and ($generated@@310 ($generated@@95 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@310 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@95 ($generated@@357 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@88 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@474) $generated@@68)) (= (type $generated@@475) $generated@@68)) (= (type $generated@@476) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@473) $generated@@477))) (and ($generated@@310 ($generated@@95 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@310 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@88 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@168)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@168)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@168) (= (type $generated@@482) $generated@@79)) (= ($generated@@167 $generated@@481 $generated@@482) ($generated@@167 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@167 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@79) ($generated@@76 $generated@@483 $generated@@78)) (or ($generated@@262 $generated@@483) ($generated@@318 $generated@@483)))
 :pattern ( ($generated@@318 $generated@@483) ($generated@@76 $generated@@483 $generated@@78))
 :pattern ( ($generated@@262 $generated@@483) ($generated@@76 $generated@@483 $generated@@78))
)))
(assert (forall (($generated@@485 T@T) ) (! (= (type ($generated@@484 $generated@@485)) ($generated@@90 $generated@@485 $generated@@4))
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@379 (type $generated@@486))))
(let (($generated@@488 ($generated@@378 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@377 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@376 $generated@@488 $generated@@487)) (= ($generated@@375 $generated@@486) ($generated@@484 $generated@@488))))))
 :pattern ( ($generated@@375 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@379 (type $generated@@489))))
(let (($generated@@491 ($generated@@378 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@377 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@376 $generated@@491 $generated@@490)) (= ($generated@@415 $generated@@489) ($generated@@484 $generated@@490))))))
 :pattern ( ($generated@@415 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@379 (type $generated@@492))))
(let (($generated@@494 ($generated@@378 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@377 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@376 $generated@@494 $generated@@493)) (= ($generated@@444 $generated@@492) ($generated@@484 $generated@@182))))))
 :pattern ( ($generated@@444 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@361 (type $generated@@495))))
(let (($generated@@497 ($generated@@360 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@359 $generated@@497 $generated@@496)) (or (= $generated@@495 ($generated@@358 $generated@@497 $generated@@496)) (exists (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (and (and (= (type $generated@@498) $generated@@182) (= (type $generated@@499) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@436 $generated@@495) ($generated@@344 ($generated@@274 $generated@@498 $generated@@499)))))
 :no-pattern (type $generated@@498)
 :no-pattern (type $generated@@499)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
))))))
 :pattern ( ($generated@@436 $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@379 (type $generated@@500))))
(let (($generated@@502 ($generated@@378 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@377 $generated@@502 $generated@@501)) (or (= $generated@@500 ($generated@@376 $generated@@502 $generated@@501)) (exists (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (and (and (= (type $generated@@503) $generated@@182) (= (type $generated@@504) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@444 $generated@@500) ($generated@@344 ($generated@@274 $generated@@503 $generated@@504)))))
 :no-pattern (type $generated@@503)
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@444 $generated@@500))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@182) ($generated@@275 $generated@@505 $generated@@46)) (and (= ($generated@@344 ($generated@@396 $generated@@2 $generated@@505)) $generated@@505) ($generated@@76 ($generated@@396 $generated@@2 $generated@@505) $generated@@46)))
 :pattern ( ($generated@@275 $generated@@505 $generated@@46))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@182) ($generated@@275 $generated@@506 $generated@@47)) (and (= ($generated@@344 ($generated@@396 $generated@@3 $generated@@506)) $generated@@506) ($generated@@76 ($generated@@396 $generated@@3 $generated@@506) $generated@@47)))
 :pattern ( ($generated@@275 $generated@@506 $generated@@47))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@182) ($generated@@275 $generated@@507 $generated@@44)) (and (= ($generated@@344 ($generated@@396 $generated@@4 $generated@@507)) $generated@@507) ($generated@@76 ($generated@@396 $generated@@4 $generated@@507) $generated@@44)))
 :pattern ( ($generated@@275 $generated@@507 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@508) 21))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@182) ($generated@@275 $generated@@509 $generated@@45)) (and (= ($generated@@344 ($generated@@396 $generated@@508 $generated@@509)) $generated@@509) ($generated@@76 ($generated@@396 $generated@@508 $generated@@509) $generated@@45)))
 :pattern ( ($generated@@275 $generated@@509 $generated@@45))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@168) (= (type $generated@@511) $generated@@79)) (= ($generated@@167 ($generated@@261 $generated@@510) $generated@@511) ($generated@@167 $generated@@510 $generated@@511)))
 :pattern ( ($generated@@167 ($generated@@261 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@275 ($generated@@344 $generated@@512) $generated@@513) ($generated@@76 $generated@@512 $generated@@513)))
 :pattern ( ($generated@@275 ($generated@@344 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@93 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@90 $generated@@515 $generated@@2)) (<= 0 ($generated@@351 $generated@@514))))
 :pattern ( ($generated@@351 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@330 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@329 $generated@@517)) (<= 0 ($generated@@328 $generated@@516))))
 :pattern ( ($generated@@328 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@462 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@462 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@86 ($generated@@462 $generated@@526 $generated@@527)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@470 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@470 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@470 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@470 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@86 ($generated@@470 $generated@@536 $generated@@537)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@182) (= (type $generated@@539) $generated@@182)) (= ($generated@@146 ($generated@@274 $generated@@538 $generated@@539)) $generated@@61))
 :pattern ( ($generated@@274 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@68) (= (type $generated@@543) $generated@@68)) (= ($generated@@540 ($generated@@173 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@173 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@544 ($generated@@173 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@173 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@182) (= (type $generated@@549) $generated@@182)) (= ($generated@@180 ($generated@@274 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@274 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@182) (= (type $generated@@551) $generated@@182)) (= ($generated@@181 ($generated@@274 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@274 $generated@@550 $generated@@551))
)))
(assert  (and (forall (($generated@@554 T@U) ) (! (= (type ($generated@@552 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@554))
)) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@330 (type $generated@@555))))
(= (type ($generated@@553 $generated@@555 $generated@@556)) $generated@@557))
 :pattern ( ($generated@@553 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@329 $generated@@182)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@558 ($generated@@552 $generated@@559) $generated@@560) (forall (($generated@@561 Int) ) (!  (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@328 $generated@@558))) ($generated@@310 ($generated@@553 $generated@@558 $generated@@561) $generated@@559 $generated@@560))
 :pattern ( ($generated@@553 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@88 $generated@@558 ($generated@@552 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 Int) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@79) (= (type $generated@@564) $generated@@79)) (= ($generated@@77 ($generated@@298 $generated@@562) ($generated@@300 $generated@@563) ($generated@@300 $generated@@564)) ($generated@@300 ($generated@@77 $generated@@562 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@77 ($generated@@298 $generated@@562) ($generated@@300 $generated@@563) ($generated@@300 $generated@@564)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@565 ($generated@@89 $generated@@566)) $generated@@566)
 :pattern ( ($generated@@89 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@288 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@288 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@86 ($generated@@288 $generated@@570)) $generated@@54))
 :pattern ( ($generated@@288 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@68)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@571 ($generated@@293 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@293 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@86 ($generated@@293 $generated@@574)) $generated@@55))
 :pattern ( ($generated@@293 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@575 ($generated@@188 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@188 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@68) (= ($generated@@86 ($generated@@188 $generated@@578)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@579 ($generated@@552 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@552 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@68) (= ($generated@@86 ($generated@@552 $generated@@582)) $generated@@57))
 :pattern ( ($generated@@552 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@396 $generated@@584 ($generated@@344 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@344 $generated@@583))
)))
(assert (forall (($generated@@586 Int) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@79) (= (type $generated@@588) $generated@@79)) (< ($generated@@585 $generated@@587) ($generated@@585 ($generated@@77 $generated@@586 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@77 $generated@@586 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 Int) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@79) (= (type $generated@@591) $generated@@79)) (< ($generated@@585 $generated@@591) ($generated@@585 ($generated@@77 $generated@@589 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@77 $generated@@589 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@68)) (= ($generated@@76 $generated@@592 ($generated@@462 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@357 $generated@@592) $generated@@595))) (and ($generated@@275 ($generated@@95 ($generated@@437 $generated@@592) $generated@@595) $generated@@594) ($generated@@275 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@592) $generated@@595))
 :pattern ( ($generated@@95 ($generated@@357 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@462 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) (= ($generated@@76 $generated@@596 ($generated@@470 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@596) $generated@@599))) (and ($generated@@275 ($generated@@95 ($generated@@445 $generated@@596) $generated@@599) $generated@@598) ($generated@@275 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@596) $generated@@599))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@76 $generated@@596 ($generated@@470 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@182) (= (type $generated@@602) $generated@@182)) (< ($generated@@600 $generated@@601) ($generated@@585 ($generated@@274 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@274 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@182) (= (type $generated@@604) $generated@@182)) (< ($generated@@600 $generated@@604) ($generated@@585 ($generated@@274 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@274 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@182) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) ($generated@@275 $generated@@605 ($generated@@462 $generated@@606 $generated@@607))) (and (= ($generated@@344 ($generated@@396 ($generated@@359 $generated@@182 $generated@@182) $generated@@605)) $generated@@605) ($generated@@76 ($generated@@396 ($generated@@359 $generated@@182 $generated@@182) $generated@@605) ($generated@@462 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@275 $generated@@605 ($generated@@462 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@182) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) ($generated@@275 $generated@@608 ($generated@@470 $generated@@609 $generated@@610))) (and (= ($generated@@344 ($generated@@396 ($generated@@377 $generated@@182 $generated@@182) $generated@@608)) $generated@@608) ($generated@@76 ($generated@@396 ($generated@@377 $generated@@182 $generated@@182) $generated@@608) ($generated@@470 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@275 $generated@@608 ($generated@@470 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@68) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@182)) ($generated@@275 $generated@@613 ($generated@@173 $generated@@611 $generated@@612))) (and (= ($generated@@344 ($generated@@396 $generated@@79 $generated@@613)) $generated@@613) ($generated@@76 ($generated@@396 $generated@@79 $generated@@613) ($generated@@173 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@275 $generated@@613 ($generated@@173 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@95 ($generated@@484 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@95 ($generated@@484 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@73)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) $generated@@68)) (and (= ($generated@@86 ($generated@@173 $generated@@618 $generated@@619)) $generated@@62) (= ($generated@@616 ($generated@@173 $generated@@618 $generated@@619)) $generated@@66)))
 :pattern ( ($generated@@173 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@79) (= (type $generated@@621) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@621) (and ($generated@@318 $generated@@620) ($generated@@88 $generated@@620 $generated@@78 $generated@@621)))) ($generated@@88 ($generated@@8 ($generated@@151 $generated@@620)) $generated@@46 $generated@@621))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@151 $generated@@620)) $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@79) (= ($generated@@600 ($generated@@344 $generated@@622)) ($generated@@585 $generated@@622)))
 :pattern ( ($generated@@600 ($generated@@344 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@182) ($generated@@275 $generated@@623 ($generated@@89 0))) (and (= ($generated@@344 ($generated@@396 $generated@@2 $generated@@623)) $generated@@623) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@623) ($generated@@89 0))))
 :pattern ( ($generated@@275 $generated@@623 ($generated@@89 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@182) (= (type $generated@@625) $generated@@68)) ($generated@@275 $generated@@624 ($generated@@288 $generated@@625))) (and (= ($generated@@344 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@624)) $generated@@624) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@624) ($generated@@288 $generated@@625))))
 :pattern ( ($generated@@275 $generated@@624 ($generated@@288 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@182) (= (type $generated@@627) $generated@@68)) ($generated@@275 $generated@@626 ($generated@@293 $generated@@627))) (and (= ($generated@@344 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@626)) $generated@@626) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@626) ($generated@@293 $generated@@627))))
 :pattern ( ($generated@@275 $generated@@626 ($generated@@293 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@182) (= (type $generated@@629) $generated@@68)) ($generated@@275 $generated@@628 ($generated@@188 $generated@@629))) (and (= ($generated@@344 ($generated@@396 ($generated@@90 $generated@@182 $generated@@2) $generated@@628)) $generated@@628) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@2) $generated@@628) ($generated@@188 $generated@@629))))
 :pattern ( ($generated@@275 $generated@@628 ($generated@@188 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@182) (= (type $generated@@631) $generated@@68)) ($generated@@275 $generated@@630 ($generated@@552 $generated@@631))) (and (= ($generated@@344 ($generated@@396 ($generated@@329 $generated@@182) $generated@@630)) $generated@@630) ($generated@@76 ($generated@@396 ($generated@@329 $generated@@182) $generated@@630) ($generated@@552 $generated@@631))))
 :pattern ( ($generated@@275 $generated@@630 ($generated@@552 $generated@@631)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@616 $generated@@78) $generated@@67))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@632 ($generated@@188 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@632 $generated@@635)))) ($generated@@310 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@95 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@88 $generated@@632 ($generated@@188 $generated@@633) $generated@@634))
)))
(assert (= $generated@@187 ($generated@@300 $generated@@187)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@79) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@638) (and ($generated@@172 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@68) ($generated@@88 $generated@@636 ($generated@@173 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@88 $generated@@636 ($generated@@173 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@310 ($generated@@180 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@310 ($generated@@180 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@79) (= (type $generated@@641) $generated@@68)) (= (type $generated@@642) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@642) (and ($generated@@172 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@68) ($generated@@88 $generated@@640 ($generated@@173 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@88 $generated@@640 ($generated@@173 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@310 ($generated@@181 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@310 ($generated@@181 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@79) (= (type $generated@@645) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@645) (and ($generated@@318 $generated@@644) ($generated@@88 $generated@@644 $generated@@78 $generated@@645)))) ($generated@@88 ($generated@@155 $generated@@644) $generated@@78 $generated@@645))
 :pattern ( ($generated@@88 ($generated@@155 $generated@@644) $generated@@78 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@79) (= (type $generated@@647) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@647) (and ($generated@@318 $generated@@646) ($generated@@88 $generated@@646 $generated@@78 $generated@@647)))) ($generated@@88 ($generated@@160 $generated@@646) $generated@@78 $generated@@647))
 :pattern ( ($generated@@88 ($generated@@160 $generated@@646) $generated@@78 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@182) (= (type $generated@@649) $generated@@182)) (= ($generated@@274 ($generated@@300 $generated@@648) ($generated@@300 $generated@@649)) ($generated@@300 ($generated@@274 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@274 ($generated@@300 $generated@@648) ($generated@@300 $generated@@649)))
)))
(assert (forall (($generated@@650 Int) ) (! (= ($generated@@344 ($generated@@8 ($generated@@298 $generated@@650))) ($generated@@300 ($generated@@344 ($generated@@8 $generated@@650))))
 :pattern ( ($generated@@344 ($generated@@8 ($generated@@298 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ) (! (= ($generated@@344 ($generated@@300 $generated@@651)) ($generated@@300 ($generated@@344 $generated@@651)))
 :pattern ( ($generated@@344 ($generated@@300 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@330 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@329 $generated@@653)) (= ($generated@@328 $generated@@652) 0)) (= $generated@@652 ($generated@@327 $generated@@653))))
 :pattern ( ($generated@@328 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@655)))
 (=> (and (and (= (type $generated@@654) ($generated@@90 $generated@@657 $generated@@2)) (= (type $generated@@656) $generated@@2)) (<= 0 ($generated $generated@@656))) (= ($generated@@351 ($generated@@96 $generated@@654 $generated@@655 $generated@@656)) (+ (- ($generated@@351 $generated@@654) ($generated ($generated@@95 $generated@@654 $generated@@655))) ($generated $generated@@656)))))
 :pattern ( ($generated@@351 ($generated@@96 $generated@@654 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@659) $generated@@2)) ($generated@@88 $generated@@659 $generated@@46 $generated@@658))
 :pattern ( ($generated@@88 $generated@@659 $generated@@46 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@661) $generated@@3)) ($generated@@88 $generated@@661 $generated@@47 $generated@@660))
 :pattern ( ($generated@@88 $generated@@661 $generated@@47 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@663) $generated@@4)) ($generated@@88 $generated@@663 $generated@@44 $generated@@662))
 :pattern ( ($generated@@88 $generated@@663 $generated@@44 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@665) $generated@@508)) ($generated@@88 $generated@@665 $generated@@45 $generated@@664))
 :pattern ( ($generated@@88 $generated@@665 $generated@@45 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@667) $generated@@182)) ($generated@@88 $generated@@667 $generated@@48 $generated@@666))
 :pattern ( ($generated@@88 $generated@@667 $generated@@48 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@329 $generated@@182)) (= (type $generated@@669) $generated@@68)) (= ($generated@@76 $generated@@668 ($generated@@552 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@328 $generated@@668))) ($generated@@275 ($generated@@553 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@553 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@76 $generated@@668 ($generated@@552 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@329 $generated@@182)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@328 $generated@@672))) (< ($generated@@585 ($generated@@396 $generated@@79 ($generated@@553 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@585 ($generated@@396 $generated@@79 ($generated@@553 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@76 $generated@@674 ($generated@@462 $generated@@675 $generated@@676))) (and (and ($generated@@76 ($generated@@357 $generated@@674) ($generated@@288 $generated@@675)) ($generated@@76 ($generated@@404 $generated@@674) ($generated@@288 $generated@@676))) ($generated@@76 ($generated@@436 $generated@@674) ($generated@@288 ($generated@@173 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@76 $generated@@674 ($generated@@462 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@68)) ($generated@@76 $generated@@677 ($generated@@470 $generated@@678 $generated@@679))) (and (and ($generated@@76 ($generated@@375 $generated@@677) ($generated@@293 $generated@@678)) ($generated@@76 ($generated@@415 $generated@@677) ($generated@@293 $generated@@679))) ($generated@@76 ($generated@@444 $generated@@677) ($generated@@293 ($generated@@173 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@76 $generated@@677 ($generated@@470 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@76 $generated@@680 $generated@@46))
 :pattern ( ($generated@@76 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@76 $generated@@681 $generated@@47))
 :pattern ( ($generated@@76 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@76 $generated@@682 $generated@@44))
 :pattern ( ($generated@@76 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@508) ($generated@@76 $generated@@683 $generated@@45))
 :pattern ( ($generated@@76 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@182) ($generated@@76 $generated@@684 $generated@@48))
 :pattern ( ($generated@@76 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@686) $generated@@79) (= (type $generated@@685) $generated@@79)) (= (type $generated@@688) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@689) $generated@@79)) (= (type $generated@@691) $generated@@79)) (= (type $generated@@692) $generated@@79)) (= (type $generated@@693) $generated@@79)) (= (type $generated@@694) $generated@@79)) (= (type $generated@@696) ($generated@@195 $generated@@91 $generated@@4))) (= (type $generated@@697) $generated@@91)) (= (type $generated@@698) ($generated@@195 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@700 true))
(let (($generated@@701  (=> (and ($generated@@264 $generated@@685 $generated@@187) (= (ControlFlow 0 8) 4)) $generated@@700)))
(let (($generated@@702  (=> (not ($generated@@264 $generated@@685 $generated@@187)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@318 $generated@@685)) (=> ($generated@@318 $generated@@685) (=> (= (ControlFlow 0 6) 4) $generated@@700))))))
(let (($generated@@703  (=> (and (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685)) (or ($generated@@264 $generated@@686 $generated@@187) (<= $generated@@687 ($generated@@151 $generated@@686)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@702) (=> (= (ControlFlow 0 9) 8) $generated@@701)))))
(let (($generated@@704  (=> (and (not (and (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685)) (or ($generated@@264 $generated@@686 $generated@@187) (<= $generated@@687 ($generated@@151 $generated@@686))))) (= (ControlFlow 0 5) 4)) $generated@@700)))
(let (($generated@@705  (=> ($generated@@264 $generated@@686 $generated@@187) (and (=> (= (ControlFlow 0 13) 9) $generated@@703) (=> (= (ControlFlow 0 13) 5) $generated@@704)))))
(let (($generated@@706  (=> (not ($generated@@264 $generated@@686 $generated@@187)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@318 $generated@@686)) (=> ($generated@@318 $generated@@686) (and (=> (= (ControlFlow 0 11) 9) $generated@@703) (=> (= (ControlFlow 0 11) 5) $generated@@704)))))))
(let (($generated@@707  (=> (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685)) (and (=> (= (ControlFlow 0 14) 11) $generated@@706) (=> (= (ControlFlow 0 14) 13) $generated@@705)))))
(let (($generated@@708  (=> (not (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685))) (and (=> (= (ControlFlow 0 10) 9) $generated@@703) (=> (= (ControlFlow 0 10) 5) $generated@@704)))))
(let (($generated@@709  (=> (not ($generated@@167 ($generated@@261 $generated@@479) $generated@@686)) (and (=> (= (ControlFlow 0 17) 14) $generated@@707) (=> (= (ControlFlow 0 17) 10) $generated@@708)))))
(let (($generated@@710  (=> (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@88 $generated@@685 $generated@@78 $generated@@688)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (< ($generated@@585 $generated@@685) ($generated@@585 $generated@@689))) (=> (< ($generated@@585 $generated@@685) ($generated@@585 $generated@@689)) (=> ($generated@@169 $generated@@685) (and (=> (= (ControlFlow 0 15) 14) $generated@@707) (=> (= (ControlFlow 0 15) 10) $generated@@708))))))))
(let (($generated@@711  (=> (= $generated@@689 ($generated@@77 $generated@@690 $generated@@691 $generated@@692)) (=> (and ($generated@@76 $generated@@691 $generated@@78) ($generated@@76 $generated@@692 $generated@@78)) (=> (and (and (and ($generated@@76 $generated@@685 $generated@@78) ($generated@@88 $generated@@685 $generated@@78 $generated@@688)) (= $generated@@693 $generated@@692)) (and ($generated@@76 $generated@@693 $generated@@78) (= $generated@@685 $generated@@693))) (=> (and (and (and (and ($generated@@76 $generated@@686 $generated@@78) ($generated@@88 $generated@@686 $generated@@78 $generated@@688)) (= $generated@@694 $generated@@691)) (and ($generated@@76 $generated@@694 $generated@@78) (= $generated@@686 $generated@@694))) (and (and (= $generated@@695 $generated@@690) ($generated@@76 ($generated@@8 $generated@@695) $generated@@46)) (and (= $generated@@687 $generated@@695) ($generated@@88 $generated@@686 $generated@@78 $generated@@688)))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (< ($generated@@585 $generated@@686) ($generated@@585 $generated@@689))) (=> (< ($generated@@585 $generated@@686) ($generated@@585 $generated@@689)) (=> ($generated@@169 $generated@@686) (and (=> (= (ControlFlow 0 18) 15) $generated@@710) (=> (= (ControlFlow 0 18) 17) $generated@@709)))))))))))
(let (($generated@@712 true))
(let (($generated@@713  (=> (not (= $generated@@689 $generated@@187)) (and (=> (= (ControlFlow 0 20) 18) $generated@@711) (=> (= (ControlFlow 0 20) 3) $generated@@712)))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (= $generated@@696 ($generated@@249 $generated@@697 $generated@@688 $generated@@60 false)) (and (=> (= (ControlFlow 0 21) 2) $generated@@714) (=> (= (ControlFlow 0 21) 20) $generated@@713)))))
(let (($generated@@716 true))
(let (($generated@@717  (=> (= $generated@@698 ($generated@@194 $generated@@697 $generated@@688 $generated@@60 false)) (and (=> (= (ControlFlow 0 22) 1) $generated@@716) (=> (= (ControlFlow 0 22) 21) $generated@@715)))))
(let (($generated@@718  (=> (and (and (and ($generated@@282 $generated@@688) ($generated@@699 $generated@@688)) ($generated@@76 $generated@@689 $generated@@78)) (and (= 1 $generated@@166) (= (ControlFlow 0 23) 22))) $generated@@717)))
$generated@@718))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U Int) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 () Bool)
(declare-fun $generated@@262 () Bool)
(declare-fun $generated@@263 (T@U Int) Bool)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Bool)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@320 (T@U T@U) Bool)
(declare-fun $generated@@321 (T@U T@U) T@U)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@U T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@T) T@U)
(declare-fun $generated@@366 (T@T T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@T T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@U T@U) T@U)
(declare-fun $generated@@491 (T@T) T@U)
(declare-fun $generated@@515 () T@T)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@562 (T@U Int) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@674 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@136) 14) (= ($generated@@1 $generated@@137) 15)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Int) ) (! (= (type ($generated@@134 $generated@@139 $generated@@140 $generated@@141)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@135 $generated@@142)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@142))
))) (= (type $generated@@138) $generated@@136)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@143) $generated@@136) (= (type $generated@@144) $generated@@137)) (= ($generated@@134 $generated@@143 $generated@@144 $generated@@145) ($generated@@134 $generated@@138 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@77 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 16) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@66)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@66) (= (type $generated@@154) $generated@@66)) (= (type $generated@@155) $generated@@150)) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@137)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@137)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (= (type $generated@@237) $generated@@137) (= (type $generated@@238) $generated@@66)))
(assert  (=> true (=> true ($generated@@236 $generated@@237 $generated@@238))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241)) $generated@@150)
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@66) (= (type $generated@@243) $generated@@66)) (= (type $generated@@244) $generated@@137)) (= (type $generated@@245) $generated@@137)) (= ($generated@@146 ($generated@@239 $generated@@244 $generated@@245) ($generated@@149 $generated@@242 $generated@@243))  (and ($generated@@236 $generated@@244 $generated@@242) ($generated@@236 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@146 ($generated@@239 $generated@@244 $generated@@245) ($generated@@149 $generated@@242 $generated@@243)))
)))
(assert  (=> true (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@136) (= (type $generated@@249) $generated@@137)) (or ($generated@@247 $generated@@249) ($generated@@236 $generated@@249 $generated@@238))) true)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@81 (type $generated@@251))))
(= (type ($generated@@250 $generated@@251 $generated@@252)) ($generated@@78 $generated@@253 $generated@@2)))
 :pattern ( ($generated@@250 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
 (=> (and (= (type $generated@@254) ($generated@@78 $generated@@257 $generated@@2)) (= (type $generated@@255) ($generated@@78 $generated@@257 $generated@@2))) (= ($generated ($generated@@83 ($generated@@250 $generated@@254 $generated@@255) $generated@@256)) (+ ($generated ($generated@@83 $generated@@254 $generated@@256)) ($generated ($generated@@83 $generated@@255 $generated@@256))))))
 :pattern ( ($generated@@83 ($generated@@250 $generated@@254 $generated@@255) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@150) (= (type $generated@@259) $generated@@150)) (= ($generated@@156 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@156 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@265 $generated@@269)) $generated@@136)
 :pattern ( ($generated@@265 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@260) (=> (or $generated@@261 (not (= 0 $generated@@260))) (and (and $generated@@262 (let (($generated@@270 $generated@@237))
 (and ($generated@@263 $generated@@270 ($generated@@264 4)) (let (($generated@@271 ($generated@@134 ($generated@@265 $generated@@138) $generated@@270 ($generated@@264 4))))
 (and ($generated@@263 $generated@@271 ($generated@@264 3)) (let (($generated@@272 ($generated@@134 ($generated@@265 $generated@@138) $generated@@271 ($generated@@264 3))))
($generated@@266 $generated@@272))))))) (= $generated@@267 (let (($generated@@273 $generated@@237))
(let (($generated@@274 ($generated@@134 ($generated@@265 $generated@@138) $generated@@273 ($generated@@264 4))))
(let (($generated@@275 ($generated@@134 ($generated@@265 $generated@@138) $generated@@274 ($generated@@264 3))))
(let (($generated@@276 ($generated@@268 $generated@@275)))
$generated@@276)))))))))
(assert  (=> (<= 0 $generated@@260) (=> (or $generated@@261 (not (= 0 $generated@@260))) (and (and $generated@@262 (let (($generated@@277 $generated@@237))
 (and ($generated@@263 $generated@@277 ($generated@@264 4)) (let (($generated@@278 ($generated@@134 ($generated@@265 $generated@@138) $generated@@277 ($generated@@264 4))))
 (and ($generated@@263 $generated@@278 ($generated@@264 3)) (let (($generated@@279 ($generated@@134 ($generated@@265 $generated@@138) $generated@@278 ($generated@@264 3))))
($generated@@266 $generated@@279))))))) (= $generated@@267 (let (($generated@@280 $generated@@237))
(let (($generated@@281 ($generated@@134 ($generated@@265 $generated@@138) $generated@@280 ($generated@@264 4))))
(let (($generated@@282 ($generated@@134 ($generated@@265 $generated@@138) $generated@@281 ($generated@@264 3))))
(let (($generated@@283 ($generated@@268 $generated@@282)))
$generated@@283)))))))))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@66)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@287) $generated@@66)) (= ($generated@@146 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@137) ($generated@@0 ($generated@@83 $generated@@286 $generated@@288))) ($generated@@236 $generated@@288 $generated@@287))
 :pattern ( ($generated@@83 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@146 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@66)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@292) $generated@@66)) (= ($generated@@146 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@137) ($generated@@0 ($generated@@83 $generated@@291 $generated@@293))) ($generated@@236 $generated@@293 $generated@@292))
 :pattern ( ($generated@@83 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@146 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@264 $generated@@294) $generated@@294)
 :pattern ( ($generated@@264 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 (type $generated@@296)))
(= (type ($generated@@295 $generated@@296)) $generated@@297))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= ($generated@@295 $generated@@298) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@66) (= (type $generated@@302) $generated@@66)) (= (type $generated@@303) $generated@@137)) (= (type $generated@@304) $generated@@137)) (= (type $generated@@305) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@299 $generated@@305)) (= ($generated@@76 ($generated@@239 $generated@@303 $generated@@304) ($generated@@149 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@76 ($generated@@239 $generated@@303 $generated@@304) ($generated@@149 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@70)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@150) (= ($generated@@148 $generated@@308) (= ($generated@@306 $generated@@308) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@150) ($generated@@148 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@137) (= (type $generated@@311) $generated@@137)) (= $generated@@309 ($generated@@239 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@148 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 18)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert  (and (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (! (= (type ($generated@@321 $generated@@323 $generated@@324)) ($generated@@78 $generated@@137 $generated@@2))
 :pattern ( ($generated@@321 $generated@@323 $generated@@324))
)) (forall (($generated@@325 T@T) ) (! (= (type ($generated@@322 $generated@@325)) ($generated@@78 $generated@@325 $generated@@2))
 :pattern ( ($generated@@322 $generated@@325))
))))
(assert  (=> true (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@137) (or ($generated@@266 $generated@@326) (and ($generated@@236 $generated@@326 $generated@@238) (not ($generated@@320 ($generated@@321 ($generated@@265 $generated@@138) $generated@@326) ($generated@@322 $generated@@137)))))) true)
 :pattern ( ($generated@@268 $generated@@326))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (let (($generated@@331 (type $generated@@330)))
(= (type ($generated@@328 $generated@@329 $generated@@330)) ($generated@@78 $generated@@331 $generated@@2)))
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@332) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@327 ($generated@@328 $generated@@332 $generated@@333)) (+ ($generated@@327 $generated@@332) 1))))
 :pattern ( ($generated@@327 ($generated@@328 $generated@@332 $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (= (type ($generated@@335 $generated@@336)) $generated@@137)
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@66) (= (type $generated@@339) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@300 ($generated@@335 $generated@@337) $generated@@338 $generated@@339) ($generated@@76 $generated@@337 $generated@@338 $generated@@339)))
 :pattern ( ($generated@@300 ($generated@@335 $generated@@337) $generated@@338 $generated@@339))
)))
(assert  (=> true (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@136) (= (type $generated@@342) $generated@@137)) (or ($generated@@340 $generated@@342) ($generated@@236 $generated@@342 $generated@@238))) ($generated@@146 ($generated@@321 $generated@@341 $generated@@342) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@321 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@81 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@78 $generated@@344 $generated@@2)) (and (= (= ($generated@@327 $generated@@343) 0) (= $generated@@343 ($generated@@322 $generated@@344))) (=> (not (= ($generated@@327 $generated@@343) 0)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) (< 0 ($generated ($generated@@83 $generated@@343 $generated@@345))))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@327 $generated@@343))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 19)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@83 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@83 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert  (and (and (and (and (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (= ($generated@@1 ($generated@@366 $generated@@369 $generated@@370)) 20)) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@367 ($generated@@366 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@366 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@368 ($generated@@366 $generated@@373 $generated@@374)) $generated@@374)
 :pattern ( ($generated@@366 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@367 (type $generated@@375))))
(= (type ($generated@@364 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@375))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= (type ($generated@@365 $generated@@377 $generated@@378)) ($generated@@366 $generated@@377 $generated@@378))
 :pattern ( ($generated@@365 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@T) ) (! (let (($generated@@381 (type $generated@@379)))
 (not ($generated@@0 ($generated@@83 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379))))
 :pattern ( (let (($generated@@381 (type $generated@@379)))
($generated@@83 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@81 (type $generated@@382))))
 (=> (and (= (type $generated@@382) ($generated@@78 $generated@@384 $generated@@2)) (= (type $generated@@383) ($generated@@78 $generated@@384 $generated@@2))) (= ($generated@@327 ($generated@@250 $generated@@382 $generated@@383)) (+ ($generated@@327 $generated@@382) ($generated@@327 $generated@@383)))))
 :pattern ( ($generated@@327 ($generated@@250 $generated@@382 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@81 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@78 $generated@@386 $generated@@2)) (= ($generated@@164 $generated@@385) (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@386) (and (<= 0 ($generated ($generated@@83 $generated@@385 $generated@@387))) (<= ($generated ($generated@@83 $generated@@385 $generated@@387)) ($generated@@327 $generated@@385))))
 :pattern ( ($generated@@83 $generated@@385 $generated@@387))
)))))
 :pattern ( ($generated@@164 $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
 (=> (= (type $generated@@388) ($generated@@78 $generated@@390 $generated@@2)) (= ($generated ($generated@@83 ($generated@@328 $generated@@388 $generated@@389) $generated@@389)) (+ ($generated ($generated@@83 $generated@@388 $generated@@389)) 1))))
 :pattern ( ($generated@@328 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@392)))
 (=> (and (and (= (type $generated@@391) ($generated@@78 $generated@@394 $generated@@2)) (= (type $generated@@393) $generated@@394)) (< 0 ($generated ($generated@@83 $generated@@391 $generated@@393)))) (< 0 ($generated ($generated@@83 ($generated@@328 $generated@@391 $generated@@392) $generated@@393)))))
 :pattern ( ($generated@@328 $generated@@391 $generated@@392) ($generated@@83 $generated@@391 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@350 (type $generated@@395))))
(let (($generated@@397 ($generated@@349 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@348 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@347 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@346 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@350 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@78 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@350 (type $generated@@402))))
(let (($generated@@404 ($generated@@349 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@348 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@347 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@83 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@368 (type $generated@@406))))
(let (($generated@@408 ($generated@@367 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@366 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@365 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@364 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@368 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@368 (type $generated@@413))))
(let (($generated@@415 ($generated@@367 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@366 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@365 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 Int) ) (!  (=> (and (= (type $generated@@417) $generated@@136) (= (type $generated@@418) $generated@@137)) (= ($generated@@134 ($generated@@265 $generated@@417) $generated@@418 $generated@@419) ($generated@@134 $generated@@417 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@134 ($generated@@265 $generated@@417) $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@421)))
 (=> (and (= (type $generated@@420) ($generated@@78 $generated@@423 $generated@@2)) (= (type $generated@@422) $generated@@423)) (= (< 0 ($generated ($generated@@83 ($generated@@328 $generated@@420 $generated@@421) $generated@@422)))  (or (= $generated@@422 $generated@@421) (< 0 ($generated ($generated@@83 $generated@@420 $generated@@422)))))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@425) $generated@@66)) (= ($generated@@146 $generated@@424 ($generated@@163 $generated@@425)) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@424 $generated@@426)))) ($generated@@236 $generated@@426 $generated@@425))
 :pattern ( ($generated@@83 $generated@@424 $generated@@426))
))))
 :pattern ( ($generated@@146 $generated@@424 ($generated@@163 $generated@@425)))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@81 (type $generated@@427))))
 (=> (and (= (type $generated@@427) ($generated@@78 $generated@@429 $generated@@2)) (= (type $generated@@428) ($generated@@78 $generated@@429 $generated@@2))) (= ($generated@@320 $generated@@427 $generated@@428) (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@429) (= ($generated ($generated@@83 $generated@@427 $generated@@430)) ($generated ($generated@@83 $generated@@428 $generated@@430))))
 :pattern ( ($generated@@83 $generated@@427 $generated@@430))
 :pattern ( ($generated@@83 $generated@@428 $generated@@430))
)))))
 :pattern ( ($generated@@320 $generated@@427 $generated@@428))
)))
(assert  (=> (<= 0 $generated@@260) (=> (or $generated@@261 (not (= 0 $generated@@260))) (= ($generated@@264 $generated@@267) ($generated@@264 3)))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@432) $generated@@66)) (= (type $generated@@433) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@431 ($generated@@284 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@137) ($generated@@0 ($generated@@83 $generated@@431 $generated@@434))) ($generated@@300 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@83 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@76 $generated@@431 ($generated@@284 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@289 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@137) ($generated@@0 ($generated@@83 $generated@@435 $generated@@438))) ($generated@@300 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@83 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@289 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@83 ($generated@@322 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@83 ($generated@@322 $generated@@440) $generated@@439)))
)))
(assert  (and (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@441 $generated@@444)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@441 $generated@@444))
)) (forall (($generated@@445 T@T) ($generated@@446 T@U) ) (! (= (type ($generated@@442 $generated@@445 $generated@@446)) $generated@@445)
 :pattern ( ($generated@@442 $generated@@445 $generated@@446))
))) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@350 (type $generated@@447))))
(let (($generated@@449 ($generated@@349 (type $generated@@447))))
(= (type ($generated@@443 $generated@@447)) ($generated@@78 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@443 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@348 $generated@@137 $generated@@137)) (= (type $generated@@451) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@441 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@83 ($generated@@346 $generated@@450) ($generated@@157 ($generated@@442 $generated@@150 $generated@@451)))) (= ($generated@@83 ($generated@@443 $generated@@450) ($generated@@157 ($generated@@442 $generated@@150 $generated@@451))) ($generated@@158 ($generated@@442 $generated@@150 $generated@@451))))))
 :pattern ( ($generated@@83 ($generated@@441 $generated@@450) $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@368 (type $generated@@455))))
(let (($generated@@457 ($generated@@367 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455)) ($generated@@78 $generated@@457 $generated@@456))))
 :pattern ( ($generated@@453 $generated@@455))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@366 $generated@@137 $generated@@137)) (= (type $generated@@459) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@452 $generated@@458) $generated@@459))  (and ($generated@@0 ($generated@@83 ($generated@@364 $generated@@458) ($generated@@157 ($generated@@442 $generated@@150 $generated@@459)))) (= ($generated@@83 ($generated@@453 $generated@@458) ($generated@@157 ($generated@@442 $generated@@150 $generated@@459))) ($generated@@158 ($generated@@442 $generated@@150 $generated@@459))))))
 :pattern ( ($generated@@83 ($generated@@452 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(let (($generated@@463 ($generated@@349 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@348 $generated@@463 $generated@@462)) (= ($generated@@0 ($generated@@83 ($generated@@399 $generated@@460) $generated@@461)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) (and ($generated@@0 ($generated@@83 ($generated@@346 $generated@@460) $generated@@464)) (= $generated@@461 ($generated@@83 ($generated@@443 $generated@@460) $generated@@464))))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@460) $generated@@464))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@460) $generated@@464))
))))))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 (type $generated@@466)))
(let (($generated@@468 ($generated@@367 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@366 $generated@@468 $generated@@467)) (= ($generated@@0 ($generated@@83 ($generated@@410 $generated@@465) $generated@@466)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@468) (and ($generated@@0 ($generated@@83 ($generated@@364 $generated@@465) $generated@@469)) (= $generated@@466 ($generated@@83 ($generated@@453 $generated@@465) $generated@@469))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@465) $generated@@469))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@465) $generated@@469))
))))))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@348 $generated@@137 $generated@@137)) (= (type $generated@@474) $generated@@66)) (= (type $generated@@475) $generated@@66)) (= (type $generated@@476) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@473) $generated@@477))) (and ($generated@@300 ($generated@@83 ($generated@@443 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@300 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@473) $generated@@477))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@76 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (= (type $generated@@481) ($generated@@366 $generated@@137 $generated@@137)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@481) $generated@@485))) (and ($generated@@300 ($generated@@83 ($generated@@453 $generated@@481) $generated@@485) $generated@@483 $generated@@484) ($generated@@300 $generated@@485 $generated@@482 $generated@@484)))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@481) $generated@@485))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@481) $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@136) (= (type $generated@@487) $generated@@137)) (= ($generated@@246 $generated@@486 $generated@@487) ($generated@@246 $generated@@138 $generated@@487)))
 :pattern ( ($generated@@246 ($generated@@135 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@81 (type $generated@@488))))
 (=> (and (and (= (type $generated@@488) ($generated@@78 $generated@@490 $generated@@2)) (= (type $generated@@489) ($generated@@78 $generated@@490 $generated@@2))) ($generated@@320 $generated@@488 $generated@@489)) (= $generated@@488 $generated@@489)))
 :pattern ( ($generated@@320 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@492 T@T) ) (! (= (type ($generated@@491 $generated@@492)) ($generated@@78 $generated@@492 $generated@@4))
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@368 (type $generated@@493))))
(let (($generated@@495 ($generated@@367 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@366 $generated@@495 $generated@@494)) (= (= $generated@@493 ($generated@@365 $generated@@495 $generated@@494)) (= ($generated@@364 $generated@@493) ($generated@@491 $generated@@495))))))
 :pattern ( ($generated@@364 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@368 (type $generated@@496))))
(let (($generated@@498 ($generated@@367 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@366 $generated@@498 $generated@@497)) (= (= $generated@@496 ($generated@@365 $generated@@498 $generated@@497)) (= ($generated@@410 $generated@@496) ($generated@@491 $generated@@497))))))
 :pattern ( ($generated@@410 $generated@@496))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@368 (type $generated@@499))))
(let (($generated@@501 ($generated@@367 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@366 $generated@@501 $generated@@500)) (= (= $generated@@499 ($generated@@365 $generated@@501 $generated@@500)) (= ($generated@@452 $generated@@499) ($generated@@491 $generated@@137))))))
 :pattern ( ($generated@@452 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@350 (type $generated@@502))))
(let (($generated@@504 ($generated@@349 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@348 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@347 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (and (and (= (type $generated@@505) $generated@@137) (= (type $generated@@506) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@441 $generated@@502) ($generated@@335 ($generated@@239 $generated@@505 $generated@@506)))))
 :no-pattern (type $generated@@505)
 :no-pattern (type $generated@@506)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
))))))
 :pattern ( ($generated@@441 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@368 (type $generated@@507))))
(let (($generated@@509 ($generated@@367 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@366 $generated@@509 $generated@@508)) (or (= $generated@@507 ($generated@@365 $generated@@509 $generated@@508)) (exists (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (and (and (= (type $generated@@510) $generated@@137) (= (type $generated@@511) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@452 $generated@@507) ($generated@@335 ($generated@@239 $generated@@510 $generated@@511)))))
 :no-pattern (type $generated@@510)
 :no-pattern (type $generated@@511)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
))))))
 :pattern ( ($generated@@452 $generated@@507))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@137) ($generated@@236 $generated@@512 $generated@@46)) (and (= ($generated@@335 ($generated@@442 $generated@@2 $generated@@512)) $generated@@512) ($generated@@146 ($generated@@442 $generated@@2 $generated@@512) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@512 $generated@@46))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@137) ($generated@@236 $generated@@513 $generated@@47)) (and (= ($generated@@335 ($generated@@442 $generated@@3 $generated@@513)) $generated@@513) ($generated@@146 ($generated@@442 $generated@@3 $generated@@513) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@513 $generated@@47))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@137) ($generated@@236 $generated@@514 $generated@@44)) (and (= ($generated@@335 ($generated@@442 $generated@@4 $generated@@514)) $generated@@514) ($generated@@146 ($generated@@442 $generated@@4 $generated@@514) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@514 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@515) 21))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@137) ($generated@@236 $generated@@516 $generated@@45)) (and (= ($generated@@335 ($generated@@442 $generated@@515 $generated@@516)) $generated@@516) ($generated@@146 ($generated@@442 $generated@@515 $generated@@516) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@516 $generated@@45))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@136) (= (type $generated@@518) $generated@@137)) (= ($generated@@246 ($generated@@265 $generated@@517) $generated@@518) ($generated@@246 $generated@@517 $generated@@518)))
 :pattern ( ($generated@@246 ($generated@@265 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@236 ($generated@@335 $generated@@519) $generated@@520) ($generated@@146 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@236 ($generated@@335 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@81 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@78 $generated@@522 $generated@@2)) (<= 0 ($generated@@327 $generated@@521))))
 :pattern ( ($generated@@327 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@315 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@314 $generated@@524)) (<= 0 ($generated@@313 $generated@@523))))
 :pattern ( ($generated@@313 $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= ($generated@@525 ($generated@@470 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@470 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@529 ($generated@@470 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@470 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= ($generated@@74 ($generated@@470 $generated@@533 $generated@@534)) $generated@@58))
 :pattern ( ($generated@@470 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (= ($generated@@535 ($generated@@478 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@478 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@539 ($generated@@478 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@478 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (= ($generated@@74 ($generated@@478 $generated@@543 $generated@@544)) $generated@@59))
 :pattern ( ($generated@@478 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@137) (= (type $generated@@546) $generated@@137)) (= ($generated@@306 ($generated@@239 $generated@@545 $generated@@546)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@66) (= (type $generated@@550) $generated@@66)) (= ($generated@@547 ($generated@@149 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@149 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@66)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (= ($generated@@551 ($generated@@149 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@149 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@137) (= (type $generated@@556) $generated@@137)) (= ($generated@@157 ($generated@@239 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@239 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@137) (= (type $generated@@558) $generated@@137)) (= ($generated@@158 ($generated@@239 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@239 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@137)) (= ($generated@@321 $generated@@559 $generated@@560) ($generated@@321 $generated@@138 $generated@@560)))
 :pattern ( ($generated@@321 ($generated@@135 $generated@@559) $generated@@560))
)))
(assert  (and (forall (($generated@@563 T@U) ) (! (= (type ($generated@@561 $generated@@563)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@563))
)) (forall (($generated@@564 T@U) ($generated@@565 Int) ) (! (let (($generated@@566 ($generated@@315 (type $generated@@564))))
(= (type ($generated@@562 $generated@@564 $generated@@565)) $generated@@566))
 :pattern ( ($generated@@562 $generated@@564 $generated@@565))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@314 $generated@@137)) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@567 ($generated@@561 $generated@@568) $generated@@569) (forall (($generated@@570 Int) ) (!  (=> (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@313 $generated@@567))) ($generated@@300 ($generated@@562 $generated@@567 $generated@@570) $generated@@568 $generated@@569))
 :pattern ( ($generated@@562 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@561 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@572 Int) ) (! (= ($generated@@571 ($generated@@77 $generated@@572)) $generated@@572)
 :pattern ( ($generated@@77 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@66)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@66) (= ($generated@@573 ($generated@@284 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@284 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@74 ($generated@@284 $generated@@576)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@66)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@66) (= ($generated@@577 ($generated@@289 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@289 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@66) (= ($generated@@74 ($generated@@289 $generated@@580)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@66)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@66) (= ($generated@@581 ($generated@@163 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@163 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@584)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@66)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@66) (= ($generated@@585 ($generated@@561 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@561 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@66) (= ($generated@@74 ($generated@@561 $generated@@588)) $generated@@57))
 :pattern ( ($generated@@561 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@589)))
(= ($generated@@442 $generated@@590 ($generated@@335 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@335 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@348 $generated@@137 $generated@@137)) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) (= ($generated@@146 $generated@@591 ($generated@@470 $generated@@592 $generated@@593)) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@591) $generated@@594))) (and ($generated@@236 ($generated@@83 ($generated@@443 $generated@@591) $generated@@594) $generated@@593) ($generated@@236 $generated@@594 $generated@@592)))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@591) $generated@@594))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@591) $generated@@594))
))))
 :pattern ( ($generated@@146 $generated@@591 ($generated@@470 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@366 $generated@@137 $generated@@137)) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) $generated@@66)) (= ($generated@@146 $generated@@595 ($generated@@478 $generated@@596 $generated@@597)) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@595) $generated@@598))) (and ($generated@@236 ($generated@@83 ($generated@@453 $generated@@595) $generated@@598) $generated@@597) ($generated@@236 $generated@@598 $generated@@596)))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@595) $generated@@598))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@595) $generated@@598))
))))
 :pattern ( ($generated@@146 $generated@@595 ($generated@@478 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@137) (= (type $generated@@602) $generated@@137)) (< ($generated@@599 $generated@@601) ($generated@@600 ($generated@@239 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@239 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@137) (= (type $generated@@604) $generated@@137)) (< ($generated@@599 $generated@@604) ($generated@@600 ($generated@@239 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@239 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@136) (= (type $generated@@606) $generated@@137)) (= ($generated@@321 ($generated@@265 $generated@@605) $generated@@606) ($generated@@321 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@321 ($generated@@265 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@137) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@236 $generated@@607 ($generated@@470 $generated@@608 $generated@@609))) (and (= ($generated@@335 ($generated@@442 ($generated@@348 $generated@@137 $generated@@137) $generated@@607)) $generated@@607) ($generated@@146 ($generated@@442 ($generated@@348 $generated@@137 $generated@@137) $generated@@607) ($generated@@470 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@236 $generated@@607 ($generated@@470 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@137) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@66)) ($generated@@236 $generated@@610 ($generated@@478 $generated@@611 $generated@@612))) (and (= ($generated@@335 ($generated@@442 ($generated@@366 $generated@@137 $generated@@137) $generated@@610)) $generated@@610) ($generated@@146 ($generated@@442 ($generated@@366 $generated@@137 $generated@@137) $generated@@610) ($generated@@478 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@236 $generated@@610 ($generated@@478 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@66) (= (type $generated@@614) $generated@@66)) (= (type $generated@@615) $generated@@137)) ($generated@@236 $generated@@615 ($generated@@149 $generated@@613 $generated@@614))) (and (= ($generated@@335 ($generated@@442 $generated@@150 $generated@@615)) $generated@@615) ($generated@@146 ($generated@@442 $generated@@150 $generated@@615) ($generated@@149 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@236 $generated@@615 ($generated@@149 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
 (not ($generated@@0 ($generated@@83 ($generated@@491 $generated@@617) $generated@@616))))
 :pattern ( (let (($generated@@617 (type $generated@@616)))
($generated@@83 ($generated@@491 $generated@@617) $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@71)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@66) (= (type $generated@@621) $generated@@66)) (and (= ($generated@@74 ($generated@@149 $generated@@620 $generated@@621)) $generated@@62) (= ($generated@@618 ($generated@@149 $generated@@620 $generated@@621)) $generated@@64)))
 :pattern ( ($generated@@149 $generated@@620 $generated@@621))
)))
(assert  (=> true (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (and (and (= (type $generated@@622) $generated@@136) (= (type $generated@@623) $generated@@137)) (or ($generated@@263 $generated@@623 $generated@@624) ($generated@@236 $generated@@623 $generated@@238))) ($generated@@236 ($generated@@134 $generated@@622 $generated@@623 $generated@@624) $generated@@238))
 :pattern ( ($generated@@134 $generated@@622 $generated@@623 $generated@@624))
))))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@150) (= ($generated@@599 ($generated@@335 $generated@@625)) ($generated@@600 $generated@@625)))
 :pattern ( ($generated@@599 ($generated@@335 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@137) ($generated@@236 $generated@@626 ($generated@@77 0))) (and (= ($generated@@335 ($generated@@442 $generated@@2 $generated@@626)) $generated@@626) ($generated@@146 ($generated@@442 ($generated@@78 $generated@@137 $generated@@4) $generated@@626) ($generated@@77 0))))
 :pattern ( ($generated@@236 $generated@@626 ($generated@@77 0)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@137) (= (type $generated@@628) $generated@@66)) ($generated@@236 $generated@@627 ($generated@@284 $generated@@628))) (and (= ($generated@@335 ($generated@@442 ($generated@@78 $generated@@137 $generated@@4) $generated@@627)) $generated@@627) ($generated@@146 ($generated@@442 ($generated@@78 $generated@@137 $generated@@4) $generated@@627) ($generated@@284 $generated@@628))))
 :pattern ( ($generated@@236 $generated@@627 ($generated@@284 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@137) (= (type $generated@@630) $generated@@66)) ($generated@@236 $generated@@629 ($generated@@289 $generated@@630))) (and (= ($generated@@335 ($generated@@442 ($generated@@78 $generated@@137 $generated@@4) $generated@@629)) $generated@@629) ($generated@@146 ($generated@@442 ($generated@@78 $generated@@137 $generated@@4) $generated@@629) ($generated@@289 $generated@@630))))
 :pattern ( ($generated@@236 $generated@@629 ($generated@@289 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@137) (= (type $generated@@632) $generated@@66)) ($generated@@236 $generated@@631 ($generated@@163 $generated@@632))) (and (= ($generated@@335 ($generated@@442 ($generated@@78 $generated@@137 $generated@@2) $generated@@631)) $generated@@631) ($generated@@146 ($generated@@442 ($generated@@78 $generated@@137 $generated@@2) $generated@@631) ($generated@@163 $generated@@632))))
 :pattern ( ($generated@@236 $generated@@631 ($generated@@163 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@137) (= (type $generated@@634) $generated@@66)) ($generated@@236 $generated@@633 ($generated@@561 $generated@@634))) (and (= ($generated@@335 ($generated@@442 ($generated@@314 $generated@@137) $generated@@633)) $generated@@633) ($generated@@146 ($generated@@442 ($generated@@314 $generated@@137) $generated@@633) ($generated@@561 $generated@@634))))
 :pattern ( ($generated@@236 $generated@@633 ($generated@@561 $generated@@634)))
)))
(assert (= ($generated@@74 $generated@@238) $generated@@63))
(assert (= ($generated@@618 $generated@@238) $generated@@65))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@635) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@636) $generated@@66)) (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@635 ($generated@@163 $generated@@636) $generated@@637) (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@635 $generated@@638)))) ($generated@@300 $generated@@638 $generated@@636 $generated@@637))
 :pattern ( ($generated@@83 $generated@@635 $generated@@638))
))))
 :pattern ( ($generated@@76 $generated@@635 ($generated@@163 $generated@@636) $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@150) (= (type $generated@@640) $generated@@66)) (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@299 $generated@@641) (and ($generated@@148 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@66) ($generated@@76 $generated@@639 ($generated@@149 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@76 $generated@@639 ($generated@@149 $generated@@640 $generated@@642) $generated@@641))
))))) ($generated@@300 ($generated@@157 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@300 ($generated@@157 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@150) (= (type $generated@@644) $generated@@66)) (= (type $generated@@645) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@299 $generated@@645) (and ($generated@@148 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@66) ($generated@@76 $generated@@643 ($generated@@149 $generated@@646 $generated@@644) $generated@@645))
 :pattern ( ($generated@@76 $generated@@643 ($generated@@149 $generated@@646 $generated@@644) $generated@@645))
))))) ($generated@@300 ($generated@@158 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@300 ($generated@@158 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@648)))
 (=> (and (and (= (type $generated@@647) ($generated@@78 $generated@@650 $generated@@2)) (= (type $generated@@649) $generated@@650)) (not (= $generated@@648 $generated@@649))) (= ($generated ($generated@@83 $generated@@647 $generated@@649)) ($generated ($generated@@83 ($generated@@328 $generated@@647 $generated@@648) $generated@@649)))))
 :pattern ( ($generated@@328 $generated@@647 $generated@@648) ($generated@@83 $generated@@647 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@137) (= (type $generated@@652) $generated@@137)) (= ($generated@@239 ($generated@@295 $generated@@651) ($generated@@295 $generated@@652)) ($generated@@295 ($generated@@239 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@239 ($generated@@295 $generated@@651) ($generated@@295 $generated@@652)))
)))
(assert (forall (($generated@@653 Int) ) (! (= ($generated@@335 ($generated@@8 ($generated@@264 $generated@@653))) ($generated@@295 ($generated@@335 ($generated@@8 $generated@@653))))
 :pattern ( ($generated@@335 ($generated@@8 ($generated@@264 $generated@@653))))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@335 ($generated@@295 $generated@@654)) ($generated@@295 ($generated@@335 $generated@@654)))
 :pattern ( ($generated@@335 ($generated@@295 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@315 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@314 $generated@@656)) (= ($generated@@313 $generated@@655) 0)) (= $generated@@655 ($generated@@312 $generated@@656))))
 :pattern ( ($generated@@313 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@78 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@327 ($generated@@84 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@327 $generated@@657) ($generated ($generated@@83 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@327 ($generated@@84 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@662) $generated@@2)) ($generated@@76 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@76 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@664) $generated@@3)) ($generated@@76 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@76 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@666) $generated@@4)) ($generated@@76 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@76 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@668) $generated@@515)) ($generated@@76 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@76 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@670) $generated@@137)) ($generated@@76 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@76 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@314 $generated@@137)) (= (type $generated@@672) $generated@@66)) (= ($generated@@146 $generated@@671 ($generated@@561 $generated@@672)) (forall (($generated@@673 Int) ) (!  (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@313 $generated@@671))) ($generated@@236 ($generated@@562 $generated@@671 $generated@@673) $generated@@672))
 :pattern ( ($generated@@562 $generated@@671 $generated@@673))
))))
 :pattern ( ($generated@@146 $generated@@671 ($generated@@561 $generated@@672)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 Int) ) (!  (=> (= (type $generated@@675) ($generated@@314 $generated@@137)) (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@313 $generated@@675))) (< ($generated@@600 ($generated@@442 $generated@@150 ($generated@@562 $generated@@675 $generated@@676))) ($generated@@674 $generated@@675))))
 :pattern ( ($generated@@600 ($generated@@442 $generated@@150 ($generated@@562 $generated@@675 $generated@@676))))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@348 $generated@@137 $generated@@137)) (= (type $generated@@678) $generated@@66)) (= (type $generated@@679) $generated@@66)) ($generated@@146 $generated@@677 ($generated@@470 $generated@@678 $generated@@679))) (and (and ($generated@@146 ($generated@@346 $generated@@677) ($generated@@284 $generated@@678)) ($generated@@146 ($generated@@399 $generated@@677) ($generated@@284 $generated@@679))) ($generated@@146 ($generated@@441 $generated@@677) ($generated@@284 ($generated@@149 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@146 $generated@@677 ($generated@@470 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@366 $generated@@137 $generated@@137)) (= (type $generated@@681) $generated@@66)) (= (type $generated@@682) $generated@@66)) ($generated@@146 $generated@@680 ($generated@@478 $generated@@681 $generated@@682))) (and (and ($generated@@146 ($generated@@364 $generated@@680) ($generated@@289 $generated@@681)) ($generated@@146 ($generated@@410 $generated@@680) ($generated@@289 $generated@@682))) ($generated@@146 ($generated@@452 $generated@@680) ($generated@@289 ($generated@@149 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@146 $generated@@680 ($generated@@478 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@2) ($generated@@146 $generated@@683 $generated@@46))
 :pattern ( ($generated@@146 $generated@@683 $generated@@46))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@3) ($generated@@146 $generated@@684 $generated@@47))
 :pattern ( ($generated@@146 $generated@@684 $generated@@47))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@4) ($generated@@146 $generated@@685 $generated@@44))
 :pattern ( ($generated@@146 $generated@@685 $generated@@44))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@515) ($generated@@146 $generated@@686 $generated@@45))
 :pattern ( ($generated@@146 $generated@@686 $generated@@45))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@137) ($generated@@146 $generated@@687 $generated@@48))
 :pattern ( ($generated@@146 $generated@@687 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 (T@U) Bool)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@688) ($generated@@170 $generated@@79 $generated@@4)) (= (type $generated@@689) $generated@@79)) (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@691) $generated@@137)) (= (type $generated@@692) $generated@@137)) (= (type $generated@@693) $generated@@137)) (= (type $generated@@695) $generated@@137)) (= (type $generated@@696) $generated@@137)) (= (type $generated@@698) $generated@@137)) (= (type $generated@@699) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@702) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@704) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@705) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@708) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@709  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@264 $generated@@267) ($generated@@264 3)))))
(let (($generated@@710  (=> (= $generated@@688 ($generated@@224 $generated@@689 $generated@@690 $generated@@60 false)) (=> (and (and ($generated@@236 $generated@@691 $generated@@238) ($generated@@300 $generated@@691 $generated@@238 $generated@@690)) $generated@@262) (=> (and (and (and (and (and (= $generated@@692 $generated@@237) $generated@@262) (and ($generated@@236 $generated@@692 $generated@@238) (= $generated@@691 $generated@@692))) (and (and ($generated@@236 $generated@@693 $generated@@238) ($generated@@300 $generated@@693 $generated@@238 $generated@@690)) (and ($generated@@300 $generated@@691 $generated@@238 $generated@@690) (= $generated@@694 ($generated@@264 4))))) (and (and (and ($generated@@76 ($generated@@8 $generated@@694) $generated@@46 $generated@@690) ($generated@@263 $generated@@691 ($generated@@264 4))) (and (= $generated@@695 ($generated@@134 ($generated@@265 $generated@@138) $generated@@691 ($generated@@264 4))) ($generated@@263 $generated@@691 ($generated@@264 4)))) (and (and ($generated@@236 $generated@@695 $generated@@238) (= $generated@@693 $generated@@695)) (and ($generated@@236 $generated@@696 $generated@@238) ($generated@@300 $generated@@696 $generated@@238 $generated@@690))))) (and (and (and (and ($generated@@300 $generated@@693 $generated@@238 $generated@@690) (= $generated@@697 ($generated@@264 3))) (and ($generated@@76 ($generated@@8 $generated@@697) $generated@@46 $generated@@690) ($generated@@263 $generated@@693 ($generated@@264 3)))) (and (and (= $generated@@698 ($generated@@134 ($generated@@265 $generated@@138) $generated@@693 ($generated@@264 3))) ($generated@@263 $generated@@693 ($generated@@264 3))) (and ($generated@@236 $generated@@698 $generated@@238) (= $generated@@696 $generated@@698)))) (and (and (and ($generated@@299 $generated@@699) ($generated@@700 $generated@@699)) (and $generated@@262 (let (($generated@@711 $generated@@237))
 (and ($generated@@247 $generated@@711) (=> ($generated@@246 ($generated@@265 $generated@@138) $generated@@711) ($generated@@340 $generated@@711)))))) (and (and (let (($generated@@712 $generated@@237))
($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@712)) (let (($generated@@713 $generated@@237))
($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@713) ($generated@@322 $generated@@137)))) (and (= $generated@@690 $generated@@699) (= $generated@@701 ($generated@@264 4))))))) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@691)) (=> ($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@691) (=> (and (and (and ($generated@@299 $generated@@702) ($generated@@700 $generated@@702)) (and ($generated@@263 $generated@@691 $generated@@701) (let (($generated@@714 ($generated@@134 ($generated@@265 $generated@@138) $generated@@691 $generated@@701)))
 (and ($generated@@247 $generated@@714) (=> ($generated@@246 ($generated@@265 $generated@@138) $generated@@714) (and ($generated@@340 $generated@@714) ($generated@@340 $generated@@691))))))) (and (and (let (($generated@@715 ($generated@@134 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@691 $generated@@701)))
($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@715)) (let (($generated@@716 ($generated@@134 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@691 $generated@@701)))
($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@716) ($generated@@250 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@691) ($generated@@328 ($generated@@322 $generated@@137) ($generated@@335 ($generated@@8 $generated@@701))))))) (and (= $generated@@699 $generated@@702) (= $generated@@703 ($generated@@264 3))))) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@693)) (=> ($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@693) (=> (and ($generated@@299 $generated@@704) ($generated@@700 $generated@@704)) (=> (and (and (and ($generated@@263 $generated@@693 $generated@@703) (let (($generated@@717 ($generated@@134 ($generated@@265 $generated@@138) $generated@@693 $generated@@703)))
 (and ($generated@@247 $generated@@717) (=> ($generated@@246 ($generated@@265 $generated@@138) $generated@@717) (and ($generated@@340 $generated@@717) ($generated@@340 $generated@@693)))))) (and (let (($generated@@718 ($generated@@134 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@693 $generated@@703)))
($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@718)) (let (($generated@@719 ($generated@@134 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@693 $generated@@703)))
($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@719) ($generated@@250 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@693) ($generated@@328 ($generated@@322 $generated@@137) ($generated@@335 ($generated@@8 $generated@@703)))))))) (and (and (= $generated@@702 $generated@@704) ($generated@@300 $generated@@696 $generated@@238 $generated@@704)) (and ($generated@@340 $generated@@696) ($generated@@340 $generated@@696)))) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696) ($generated@@328 ($generated@@328 ($generated@@322 $generated@@137) ($generated@@335 ($generated@@8 ($generated@@264 3)))) ($generated@@335 ($generated@@8 ($generated@@264 4)))))) (=> ($generated@@320 ($generated@@321 ($generated@@265 $generated@@138) $generated@@696) ($generated@@328 ($generated@@328 ($generated@@322 $generated@@137) ($generated@@335 ($generated@@8 ($generated@@264 3)))) ($generated@@335 ($generated@@8 ($generated@@264 4))))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696)) (=> ($generated@@246 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not ($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696) ($generated@@322 $generated@@137)))) (=> (not ($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696) ($generated@@322 $generated@@137))) (=> (and (and (and ($generated@@299 $generated@@705) ($generated@@700 $generated@@705)) (and ($generated@@266 $generated@@696) (let (($generated@@720 ($generated@@268 $generated@@696)))
 (and ($generated@@340 $generated@@696) (=> (> ($generated ($generated@@83 ($generated@@321 ($generated@@265 $generated@@138) $generated@@696) ($generated@@335 ($generated@@8 $generated@@720)))) 0) ($generated@@340 $generated@@696)))))) (and (and (let (($generated@@721 ($generated@@268 $generated@@696)))
(> ($generated ($generated@@83 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696) ($generated@@335 ($generated@@8 $generated@@721)))) 0)) (let (($generated@@722 ($generated@@268 $generated@@696)))
(forall (($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@723) $generated@@2) true) (> ($generated ($generated@@83 ($generated@@321 ($generated@@265 $generated@@138) $generated@@696) ($generated@@335 $generated@@723))) 0)) (<= $generated@@722 ($generated $generated@@723)))
 :pattern ( ($generated@@83 ($generated@@321 ($generated@@265 $generated@@138) $generated@@696) ($generated@@335 $generated@@723)))
)))) (and (= $generated@@704 $generated@@705) ($generated@@300 $generated@@696 $generated@@238 $generated@@705)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@320 ($generated@@321 ($generated@@265 ($generated@@265 $generated@@138)) $generated@@696) ($generated@@322 $generated@@137)))) (=> (not ($generated@@320 ($generated@@321 ($generated@@265 $generated@@138) $generated@@696) ($generated@@322 $generated@@137))) (=> (and (and (and ($generated@@266 $generated@@696) (= $generated@@706 ($generated@@268 $generated@@696))) (and ($generated@@266 $generated@@696) ($generated@@146 ($generated@@8 $generated@@706) $generated@@46))) (and (and (= $generated@@707 $generated@@706) (= $generated@@267 $generated@@707)) (and ($generated@@146 ($generated@@8 $generated@@267) $generated@@46) (= (ControlFlow 0 5) 4)))) $generated@@709))))))))))))))))))))))
(let (($generated@@724  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@725  (=> (= $generated@@708 ($generated@@169 $generated@@689 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 2) $generated@@724) (=> (= (ControlFlow 0 12) 5) $generated@@710)))))
(let (($generated@@726  (=> (and (and ($generated@@299 $generated@@690) ($generated@@700 $generated@@690)) (and (= 0 $generated@@260) (= (ControlFlow 0 13) 12))) $generated@@725)))
$generated@@726))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@T T@T) T@U)
(declare-fun $generated@@279 (T@T T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@341 (T@U T@U) Bool)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@539 () T@U)
(declare-fun $generated@@575 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@139 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@66)) (= (type $generated@@143) $generated@@138)) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142))) ($generated@@136 $generated@@143))
 :pattern ( ($generated@@136 $generated@@143) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@138) (= (type $generated@@151) $generated@@138)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@66)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@66)) ($generated@@134 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@134 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@79 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@69 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@79) (= (type $generated@@207) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@208) ($generated@@68 $generated@@4))) (= (type $generated@@210) $generated@@79)) (= (type $generated@@211) ($generated@@68 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@138)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@66) (= (type $generated@@218) $generated@@66)) (= (type $generated@@219) $generated@@147)) (= (type $generated@@220) $generated@@147)) (= ($generated@@134 ($generated@@213 $generated@@219 $generated@@220) ($generated@@137 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@134 ($generated@@213 $generated@@219 $generated@@220) ($generated@@137 $generated@@217 $generated@@218)))
)))
(assert (= (type $generated@@223) $generated@@66))
(assert  (=> true (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@147) (or ($generated@@222 $generated@@224) ($generated@@214 $generated@@224 $generated@@223))) true)
 :pattern ( ($generated@@221 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@138) (= (type $generated@@226) $generated@@138)) (= ($generated@@144 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@144 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@227 $generated@@228)) $generated@@66)
 :pattern ( ($generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@229) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@230) $generated@@66)) (= ($generated@@134 $generated@@229 ($generated@@227 $generated@@230)) (forall (($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@147) ($generated@@0 ($generated@@83 $generated@@229 $generated@@231))) ($generated@@214 $generated@@231 $generated@@230))
 :pattern ( ($generated@@83 $generated@@229 $generated@@231))
))))
 :pattern ( ($generated@@134 $generated@@229 ($generated@@227 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ) (! (= (type ($generated@@232 $generated@@233)) $generated@@66)
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@235) $generated@@66)) (= ($generated@@134 $generated@@234 ($generated@@232 $generated@@235)) (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) ($generated@@0 ($generated@@83 $generated@@234 $generated@@236))) ($generated@@214 $generated@@236 $generated@@235))
 :pattern ( ($generated@@83 $generated@@234 $generated@@236))
))))
 :pattern ( ($generated@@134 $generated@@234 ($generated@@232 $generated@@235)))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@66) (= (type $generated@@244) $generated@@66)) (= (type $generated@@245) $generated@@147)) (= (type $generated@@246) $generated@@147)) (= (type $generated@@247) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@241 $generated@@247)) (= ($generated@@76 ($generated@@213 $generated@@245 $generated@@246) ($generated@@137 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@76 ($generated@@213 $generated@@245 $generated@@246) ($generated@@137 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@70)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@138) (= ($generated@@136 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@136 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@138) ($generated@@136 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@147) (= (type $generated@@253) $generated@@147)) (= $generated@@251 ($generated@@213 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@136 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@147)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@66) (= (type $generated@@266) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@76 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@268 $generated@@269)) ($generated@@78 $generated@@269 $generated@@2))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@81 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@78 $generated@@271 $generated@@2)) (and (= (= ($generated@@267 $generated@@270) 0) (= $generated@@270 ($generated@@268 $generated@@271))) (=> (not (= ($generated@@267 $generated@@270) 0)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) (< 0 ($generated ($generated@@83 $generated@@270 $generated@@272))))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@273 $generated@@275)) ($generated@@78 $generated@@147 $generated@@2))
 :pattern ( ($generated@@273 $generated@@275))
)))
(assert  (=> true (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@147) (or ($generated@@274 $generated@@276) ($generated@@214 $generated@@276 $generated@@223))) ($generated@@134 ($generated@@273 $generated@@276) ($generated@@152 $generated@@46)))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert  (and (and (and (and (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@282 $generated@@283)) 18)) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@284 $generated@@285)) $generated@@284)
 :pattern ( ($generated@@279 $generated@@284 $generated@@285))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@279 $generated@@286 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@279 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@280 (type $generated@@288))))
(= (type ($generated@@277 $generated@@288)) ($generated@@78 $generated@@289 $generated@@4)))
 :pattern ( ($generated@@277 $generated@@288))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= (type ($generated@@278 $generated@@290 $generated@@291)) ($generated@@279 $generated@@290 $generated@@291))
 :pattern ( ($generated@@278 $generated@@290 $generated@@291))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@T) ) (! (let (($generated@@294 (type $generated@@292)))
 (not ($generated@@0 ($generated@@83 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292))))
 :pattern ( (let (($generated@@294 (type $generated@@292)))
($generated@@83 ($generated@@277 ($generated@@278 $generated@@294 $generated@@293)) $generated@@292)))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 19)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@78 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@83 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@81 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@78 $generated@@314 $generated@@2)) (= ($generated@@153 $generated@@313) (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@314) (and (<= 0 ($generated ($generated@@83 $generated@@313 $generated@@315))) (<= ($generated ($generated@@83 $generated@@313 $generated@@315)) ($generated@@267 $generated@@313))))
 :pattern ( ($generated@@83 $generated@@313 $generated@@315))
)))))
 :pattern ( ($generated@@153 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@281 (type $generated@@316))))
(let (($generated@@318 ($generated@@280 (type $generated@@316))))
 (=> (= (type $generated@@316) ($generated@@279 $generated@@318 $generated@@317)) (or (= $generated@@316 ($generated@@278 $generated@@318 $generated@@317)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) ($generated@@0 ($generated@@83 ($generated@@277 $generated@@316) $generated@@319)))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@277 $generated@@316))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@281 (type $generated@@321))))
(= (type ($generated@@320 $generated@@321)) ($generated@@78 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@281 (type $generated@@323))))
(let (($generated@@325 ($generated@@280 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@279 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@278 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@324) ($generated@@0 ($generated@@83 ($generated@@320 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@299 (type $generated@@327))))
(let (($generated@@329 ($generated@@298 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@297 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@296 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@295 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@299 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@78 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@299 (type $generated@@334))))
(let (($generated@@336 ($generated@@298 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@297 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@296 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@83 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@339) $generated@@66)) (= ($generated@@134 $generated@@338 ($generated@@152 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@338 $generated@@340)))) ($generated@@214 $generated@@340 $generated@@339))
 :pattern ( ($generated@@83 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@134 $generated@@338 ($generated@@152 $generated@@339)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@81 (type $generated@@342))))
 (=> (and (= (type $generated@@342) ($generated@@78 $generated@@344 $generated@@2)) (= (type $generated@@343) ($generated@@78 $generated@@344 $generated@@2))) (= ($generated@@341 $generated@@342 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (= ($generated ($generated@@83 $generated@@342 $generated@@345)) ($generated ($generated@@83 $generated@@343 $generated@@345))))
 :pattern ( ($generated@@83 $generated@@342 $generated@@345))
 :pattern ( ($generated@@83 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@347) $generated@@66)) (= (type $generated@@348) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@346 ($generated@@227 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@147) ($generated@@0 ($generated@@83 $generated@@346 $generated@@349))) ($generated@@242 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@83 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@76 $generated@@346 ($generated@@227 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@351) $generated@@66)) (= (type $generated@@352) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@350 ($generated@@232 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@147) ($generated@@0 ($generated@@83 $generated@@350 $generated@@353))) ($generated@@242 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@83 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@76 $generated@@350 ($generated@@232 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
(= ($generated ($generated@@83 ($generated@@268 $generated@@355) $generated@@354)) 0))
 :pattern ( (let (($generated@@355 (type $generated@@354)))
($generated@@83 ($generated@@268 $generated@@355) $generated@@354)))
)))
(assert  (and (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@356 $generated@@359)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@356 $generated@@359))
)) (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@357 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@357 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@281 (type $generated@@362))))
(let (($generated@@364 ($generated@@280 (type $generated@@362))))
(= (type ($generated@@358 $generated@@362)) ($generated@@78 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@358 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@279 $generated@@147 $generated@@147)) (= (type $generated@@366) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@83 ($generated@@277 $generated@@365) ($generated@@145 ($generated@@357 $generated@@138 $generated@@366)))) (= ($generated@@83 ($generated@@358 $generated@@365) ($generated@@145 ($generated@@357 $generated@@138 $generated@@366))) ($generated@@146 ($generated@@357 $generated@@138 $generated@@366))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@299 (type $generated@@370))))
(let (($generated@@372 ($generated@@298 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@297 $generated@@147 $generated@@147)) (= (type $generated@@374) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@373) ($generated@@145 ($generated@@357 $generated@@138 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@145 ($generated@@357 $generated@@138 $generated@@374))) ($generated@@146 ($generated@@357 $generated@@138 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@280 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@279 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@83 ($generated@@320 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@83 ($generated@@277 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@83 ($generated@@358 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@83 ($generated@@277 $generated@@375) $generated@@379))
 :pattern ( ($generated@@83 ($generated@@358 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@83 ($generated@@320 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@298 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@297 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@83 ($generated@@331 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@83 ($generated@@295 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@380) $generated@@384))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@83 ($generated@@331 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@66)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@279 $generated@@147 $generated@@147)) (= (type $generated@@389) $generated@@66)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@277 $generated@@388) $generated@@392))) (and ($generated@@242 ($generated@@83 ($generated@@358 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@242 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@83 ($generated@@358 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@277 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@297 $generated@@147 $generated@@147)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@396) $generated@@400))) (and ($generated@@242 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@242 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@81 (type $generated@@401))))
 (=> (and (and (= (type $generated@@401) ($generated@@78 $generated@@403 $generated@@2)) (= (type $generated@@402) ($generated@@78 $generated@@403 $generated@@2))) ($generated@@341 $generated@@401 $generated@@402)) (= $generated@@401 $generated@@402)))
 :pattern ( ($generated@@341 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@78 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@299 (type $generated@@406))))
(let (($generated@@408 ($generated@@298 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@297 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@296 $generated@@408 $generated@@407)) (= ($generated@@295 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@295 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@299 (type $generated@@409))))
(let (($generated@@411 ($generated@@298 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@297 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@296 $generated@@411 $generated@@410)) (= ($generated@@331 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@331 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@299 (type $generated@@412))))
(let (($generated@@414 ($generated@@298 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@297 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@296 $generated@@414 $generated@@413)) (= ($generated@@367 $generated@@412) ($generated@@404 $generated@@147))))))
 :pattern ( ($generated@@367 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@281 (type $generated@@415))))
(let (($generated@@417 ($generated@@280 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@279 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@278 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@147) (= (type $generated@@419) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@415) ($generated@@262 ($generated@@213 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@356 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@299 (type $generated@@420))))
(let (($generated@@422 ($generated@@298 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@297 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@296 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@147) (= (type $generated@@424) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@262 ($generated@@213 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@147) ($generated@@214 $generated@@425 $generated@@46)) (and (= ($generated@@262 ($generated@@357 $generated@@2 $generated@@425)) $generated@@425) ($generated@@134 ($generated@@357 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@147) ($generated@@214 $generated@@426 $generated@@47)) (and (= ($generated@@262 ($generated@@357 $generated@@3 $generated@@426)) $generated@@426) ($generated@@134 ($generated@@357 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@147) ($generated@@214 $generated@@427 $generated@@44)) (and (= ($generated@@262 ($generated@@357 $generated@@4 $generated@@427)) $generated@@427) ($generated@@134 ($generated@@357 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@147) ($generated@@214 $generated@@429 $generated@@45)) (and (= ($generated@@262 ($generated@@357 $generated@@428 $generated@@429)) $generated@@429) ($generated@@134 ($generated@@357 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@66) (= ($generated@@214 ($generated@@262 $generated@@430) $generated@@431) ($generated@@134 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@214 ($generated@@262 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@81 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@78 $generated@@433 $generated@@2)) (<= 0 ($generated@@267 $generated@@432))))
 :pattern ( ($generated@@267 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@257 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@256 $generated@@435)) (<= 0 ($generated@@255 $generated@@434))))
 :pattern ( ($generated@@255 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@385 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@385 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@66) (= (type $generated@@443) $generated@@66)) (= ($generated@@440 ($generated@@385 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@385 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@74 ($generated@@385 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@393 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@66) (= (type $generated@@453) $generated@@66)) (= ($generated@@450 ($generated@@393 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@393 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@147) (= (type $generated@@457) $generated@@147)) (= ($generated@@248 ($generated@@213 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@213 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@458 ($generated@@137 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@137 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@137 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@137 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@147) (= (type $generated@@467) $generated@@147)) (= ($generated@@145 ($generated@@213 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@213 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@147) (= (type $generated@@469) $generated@@147)) (= ($generated@@146 ($generated@@213 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@213 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@257 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@256 $generated@@147)) (= (type $generated@@477) $generated@@66)) (= (type $generated@@478) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@255 $generated@@476))) ($generated@@242 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@76 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@77 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@77 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@66) (= ($generated@@482 ($generated@@227 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@227 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@66) (= ($generated@@74 ($generated@@227 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@486 ($generated@@232 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@232 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@74 ($generated@@232 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@232 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@490 ($generated@@152 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@152 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@74 ($generated@@152 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@74 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@357 $generated@@499 ($generated@@262 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@262 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@279 $generated@@147 $generated@@147)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) $generated@@66)) (= ($generated@@134 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@277 $generated@@500) $generated@@503))) (and ($generated@@214 ($generated@@83 ($generated@@358 $generated@@500) $generated@@503) $generated@@502) ($generated@@214 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@83 ($generated@@358 $generated@@500) $generated@@503))
 :pattern ( ($generated@@83 ($generated@@277 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@134 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@297 $generated@@147 $generated@@147)) (= (type $generated@@505) $generated@@66)) (= (type $generated@@506) $generated@@66)) (= ($generated@@134 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@295 $generated@@504) $generated@@507))) (and ($generated@@214 ($generated@@83 ($generated@@368 $generated@@504) $generated@@507) $generated@@506) ($generated@@214 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@504) $generated@@507))
 :pattern ( ($generated@@83 ($generated@@295 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@134 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@147) (= (type $generated@@511) $generated@@147)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@213 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@213 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@147) (= (type $generated@@513) $generated@@147)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@213 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@213 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@147) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) ($generated@@214 $generated@@514 ($generated@@385 $generated@@515 $generated@@516))) (and (= ($generated@@262 ($generated@@357 ($generated@@279 $generated@@147 $generated@@147) $generated@@514)) $generated@@514) ($generated@@134 ($generated@@357 ($generated@@279 $generated@@147 $generated@@147) $generated@@514) ($generated@@385 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@214 $generated@@514 ($generated@@385 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@147) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) ($generated@@214 $generated@@517 ($generated@@393 $generated@@518 $generated@@519))) (and (= ($generated@@262 ($generated@@357 ($generated@@297 $generated@@147 $generated@@147) $generated@@517)) $generated@@517) ($generated@@134 ($generated@@357 ($generated@@297 $generated@@147 $generated@@147) $generated@@517) ($generated@@393 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@214 $generated@@517 ($generated@@393 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@66) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@147)) ($generated@@214 $generated@@522 ($generated@@137 $generated@@520 $generated@@521))) (and (= ($generated@@262 ($generated@@357 $generated@@138 $generated@@522)) $generated@@522) ($generated@@134 ($generated@@357 $generated@@138 $generated@@522) ($generated@@137 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@214 $generated@@522 ($generated@@137 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@83 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@83 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@71)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (and (= ($generated@@74 ($generated@@137 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@137 $generated@@527 $generated@@528)) $generated@@64)))
 :pattern ( ($generated@@137 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@138) (= ($generated@@508 ($generated@@262 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@262 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@147) ($generated@@214 $generated@@530 ($generated@@77 0))) (and (= ($generated@@262 ($generated@@357 $generated@@2 $generated@@530)) $generated@@530) ($generated@@134 ($generated@@357 ($generated@@78 $generated@@147 $generated@@4) $generated@@530) ($generated@@77 0))))
 :pattern ( ($generated@@214 $generated@@530 ($generated@@77 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@147) (= (type $generated@@532) $generated@@66)) ($generated@@214 $generated@@531 ($generated@@227 $generated@@532))) (and (= ($generated@@262 ($generated@@357 ($generated@@78 $generated@@147 $generated@@4) $generated@@531)) $generated@@531) ($generated@@134 ($generated@@357 ($generated@@78 $generated@@147 $generated@@4) $generated@@531) ($generated@@227 $generated@@532))))
 :pattern ( ($generated@@214 $generated@@531 ($generated@@227 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@147) (= (type $generated@@534) $generated@@66)) ($generated@@214 $generated@@533 ($generated@@232 $generated@@534))) (and (= ($generated@@262 ($generated@@357 ($generated@@78 $generated@@147 $generated@@4) $generated@@533)) $generated@@533) ($generated@@134 ($generated@@357 ($generated@@78 $generated@@147 $generated@@4) $generated@@533) ($generated@@232 $generated@@534))))
 :pattern ( ($generated@@214 $generated@@533 ($generated@@232 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@147) (= (type $generated@@536) $generated@@66)) ($generated@@214 $generated@@535 ($generated@@152 $generated@@536))) (and (= ($generated@@262 ($generated@@357 ($generated@@78 $generated@@147 $generated@@2) $generated@@535)) $generated@@535) ($generated@@134 ($generated@@357 ($generated@@78 $generated@@147 $generated@@2) $generated@@535) ($generated@@152 $generated@@536))))
 :pattern ( ($generated@@214 $generated@@535 ($generated@@152 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@147) (= (type $generated@@538) $generated@@66)) ($generated@@214 $generated@@537 ($generated@@470 $generated@@538))) (and (= ($generated@@262 ($generated@@357 ($generated@@256 $generated@@147) $generated@@537)) $generated@@537) ($generated@@134 ($generated@@357 ($generated@@256 $generated@@147) $generated@@537) ($generated@@470 $generated@@538))))
 :pattern ( ($generated@@214 $generated@@537 ($generated@@470 $generated@@538)))
)))
(assert (= (type $generated@@539) $generated@@147))
(assert  (=> true (=> true (and (let (($generated@@540 $generated@@539))
 (and ($generated@@221 $generated@@540) ($generated@@341 ($generated@@273 $generated@@540) ($generated@@268 $generated@@147)))) ($generated@@214 $generated@@539 $generated@@223)))))
(assert (= ($generated@@74 $generated@@223) $generated@@63))
(assert (= ($generated@@525 $generated@@223) $generated@@65))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@541 ($generated@@152 $generated@@542) $generated@@543) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@541 $generated@@544)))) ($generated@@242 $generated@@544 $generated@@542 $generated@@543))
 :pattern ( ($generated@@83 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@76 $generated@@541 ($generated@@152 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@138) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@241 $generated@@547) (and ($generated@@136 $generated@@545) (exists (($generated@@548 T@U) ) (!  (and (= (type $generated@@548) $generated@@66) ($generated@@76 $generated@@545 ($generated@@137 $generated@@546 $generated@@548) $generated@@547))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@137 $generated@@546 $generated@@548) $generated@@547))
))))) ($generated@@242 ($generated@@145 $generated@@545) $generated@@546 $generated@@547))
 :pattern ( ($generated@@242 ($generated@@145 $generated@@545) $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@138) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@241 $generated@@551) (and ($generated@@136 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@137 $generated@@552 $generated@@550) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@137 $generated@@552 $generated@@550) $generated@@551))
))))) ($generated@@242 ($generated@@146 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@242 ($generated@@146 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@147) (= (type $generated@@554) $generated@@147)) (= ($generated@@213 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)) ($generated@@237 ($generated@@213 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@213 ($generated@@237 $generated@@553) ($generated@@237 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@555)) ($generated@@237 ($generated@@262 $generated@@555)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@257 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@256 $generated@@557)) (= ($generated@@255 $generated@@556) 0)) (= $generated@@556 ($generated@@254 $generated@@557))))
 :pattern ( ($generated@@255 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@78 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@267 ($generated@@84 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@267 $generated@@558) ($generated ($generated@@83 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@267 ($generated@@84 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@563) $generated@@2)) ($generated@@76 $generated@@563 $generated@@46 $generated@@562))
 :pattern ( ($generated@@76 $generated@@563 $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@565) $generated@@3)) ($generated@@76 $generated@@565 $generated@@47 $generated@@564))
 :pattern ( ($generated@@76 $generated@@565 $generated@@47 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@4)) ($generated@@76 $generated@@567 $generated@@44 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@44 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@428)) ($generated@@76 $generated@@569 $generated@@45 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@45 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@147)) ($generated@@76 $generated@@571 $generated@@48 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@48 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@256 $generated@@147)) (= (type $generated@@573) $generated@@66)) (= ($generated@@134 $generated@@572 ($generated@@470 $generated@@573)) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@255 $generated@@572))) ($generated@@214 ($generated@@471 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@471 $generated@@572 $generated@@574))
))))
 :pattern ( ($generated@@134 $generated@@572 ($generated@@470 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (= (type $generated@@576) ($generated@@256 $generated@@147)) (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@255 $generated@@576))) (< ($generated@@509 ($generated@@357 $generated@@138 ($generated@@471 $generated@@576 $generated@@577))) ($generated@@575 $generated@@576))))
 :pattern ( ($generated@@509 ($generated@@357 $generated@@138 ($generated@@471 $generated@@576 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@279 $generated@@147 $generated@@147)) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) $generated@@66)) ($generated@@134 $generated@@578 ($generated@@385 $generated@@579 $generated@@580))) (and (and ($generated@@134 ($generated@@277 $generated@@578) ($generated@@227 $generated@@579)) ($generated@@134 ($generated@@320 $generated@@578) ($generated@@227 $generated@@580))) ($generated@@134 ($generated@@356 $generated@@578) ($generated@@227 ($generated@@137 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@134 $generated@@578 ($generated@@385 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@297 $generated@@147 $generated@@147)) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) ($generated@@134 $generated@@581 ($generated@@393 $generated@@582 $generated@@583))) (and (and ($generated@@134 ($generated@@295 $generated@@581) ($generated@@232 $generated@@582)) ($generated@@134 ($generated@@331 $generated@@581) ($generated@@232 $generated@@583))) ($generated@@134 ($generated@@367 $generated@@581) ($generated@@232 ($generated@@137 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@134 $generated@@581 ($generated@@393 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@2) ($generated@@134 $generated@@584 $generated@@46))
 :pattern ( ($generated@@134 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@3) ($generated@@134 $generated@@585 $generated@@47))
 :pattern ( ($generated@@134 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@4) ($generated@@134 $generated@@586 $generated@@44))
 :pattern ( ($generated@@134 $generated@@586 $generated@@44))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@428) ($generated@@134 $generated@@587 $generated@@45))
 :pattern ( ($generated@@134 $generated@@587 $generated@@45))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@147) ($generated@@134 $generated@@588 $generated@@48))
 :pattern ( ($generated@@134 $generated@@588 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@589 () Bool)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 (T@U) Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(assert  (and (and (and (= (type $generated@@590) ($generated@@159 $generated@@79 $generated@@4)) (= (type $generated@@591) $generated@@79)) (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@594) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@596  (=> $generated@@589 (=> (and (and $generated@@589 ($generated@@222 $generated@@539)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@221 $generated@@539)))))
(let (($generated@@597 true))
(let (($generated@@598  (=> (= $generated@@590 ($generated@@158 $generated@@591 $generated@@592 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@597) (=> (= (ControlFlow 0 4) 3) $generated@@596)))))
(let (($generated@@599  (=> (and (and (and ($generated@@241 $generated@@592) ($generated@@593 $generated@@592)) ($generated@@214 $generated@@594 $generated@@223)) (and (= 1 $generated@@595) (= (ControlFlow 0 5) 4))) $generated@@598)))
$generated@@599)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (Int) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@298 (T@U T@U T@U) Bool)
(declare-fun $generated@@306 (T@U) Bool)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@467 () T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@541 (T@U Int) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@659 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@79) (= (type $generated@@150) $generated@@79)) (= ($generated@@146 ($generated@@77 $generated@@148 $generated@@149 $generated@@150)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) $generated@@79)) (= ($generated@@151 ($generated@@77 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@77 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@79)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@79) (= (type $generated@@159) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@157 $generated@@158 $generated@@159)) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@160 $generated@@161)) $generated@@79)
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@79) (= (type $generated@@164) $generated@@79)) (= ($generated@@160 ($generated@@77 $generated@@162 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@76 $generated@@165 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@165 ($generated@@89 0)))
)))
(assert (= ($generated@@1 $generated@@168) 15))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@168) (= (type $generated@@171) $generated@@79)) (or ($generated@@169 $generated@@171) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@171 $generated@@78)))) true)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@68) (= (type $generated@@177) $generated@@68)) (= (type $generated@@178) $generated@@79)) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@79) (= (type $generated@@186) $generated@@79)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (= (type $generated@@187) $generated@@79))
(assert (= ($generated@@146 $generated@@187) $generated@@63))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@68)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@192) $generated@@68)) ($generated@@76 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@76 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@91 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@71 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@91) (= (type $generated@@243) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@244) ($generated@@70 $generated@@4))) (= (type $generated@@246) $generated@@91)) (= (type $generated@@247) ($generated@@70 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@249 $generated@@253)) $generated@@168)
 :pattern ( ($generated@@249 $generated@@253))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@168) (= (type $generated@@255) $generated@@79)) (or ($generated@@169 $generated@@255) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@255 $generated@@78)))) (and (=> (not ($generated@@250 $generated@@255)) (let (($generated@@256 ($generated@@160 $generated@@255)))
(let (($generated@@257 ($generated@@155 $generated@@255)))
(let (($generated@@258 ($generated@@151 $generated@@255)))
 (and ($generated@@169 $generated@@257) (=> ($generated@@167 $generated@@254 $generated@@257) (and ($generated@@169 $generated@@256) (=> ($generated@@167 $generated@@254 $generated@@256) (and ($generated@@251 $generated@@257) (=> (or ($generated@@252 $generated@@257 $generated@@187) (<= $generated@@258 ($generated@@151 $generated@@257))) ($generated@@251 $generated@@256))))))))))) (= ($generated@@167 ($generated@@249 $generated@@254) $generated@@255) (ite ($generated@@250 $generated@@255) true (let (($generated@@259 ($generated@@160 $generated@@255)))
(let (($generated@@260 ($generated@@155 $generated@@255)))
(let (($generated@@261 ($generated@@151 $generated@@255)))
 (and (and (and ($generated@@167 $generated@@254 $generated@@260) ($generated@@167 $generated@@254 $generated@@259)) (or ($generated@@252 $generated@@260 $generated@@187) (<= $generated@@261 ($generated@@151 $generated@@260)))) (or ($generated@@252 $generated@@259 $generated@@187) (<= $generated@@261 ($generated@@151 $generated@@259)))))))))))
 :pattern ( ($generated@@167 ($generated@@249 $generated@@254) $generated@@255))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@79)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@182)) (= (type $generated@@269) $generated@@182)) (= ($generated@@76 ($generated@@262 $generated@@268 $generated@@269) ($generated@@173 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@76 ($generated@@262 $generated@@268 $generated@@269) ($generated@@173 $generated@@266 $generated@@267)))
)))
(assert ($generated@@76 $generated@@187 $generated@@78))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@270 $generated@@271)) ($generated@@88 $generated@@187 $generated@@78 $generated@@271))
 :pattern ( ($generated@@88 $generated@@187 $generated@@78 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@79) (= (type $generated@@273) $generated@@79)) (= ($generated@@179 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@179 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@79) (= (type $generated@@275) $generated@@79)) (= ($generated@@252 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@252 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@279) $generated@@68)) (= ($generated@@76 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@182) ($generated@@0 ($generated@@95 $generated@@278 $generated@@280))) ($generated@@263 $generated@@280 $generated@@279))
 :pattern ( ($generated@@95 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@76 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@284) $generated@@68)) (= ($generated@@76 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@182) ($generated@@0 ($generated@@95 $generated@@283 $generated@@285))) ($generated@@263 $generated@@285 $generated@@284))
 :pattern ( ($generated@@95 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@76 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@286 $generated@@287) $generated@@287)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
(= (type ($generated@@288 $generated@@289)) $generated@@290))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= ($generated@@288 $generated@@291) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (= (type $generated@@292) $generated@@79) (= (type $generated@@293) $generated@@79)) (and ($generated@@250 $generated@@292) ($generated@@250 $generated@@293))) (= ($generated@@252 $generated@@292 $generated@@293) true))
 :pattern ( ($generated@@252 $generated@@292 $generated@@293) ($generated@@250 $generated@@292))
 :pattern ( ($generated@@252 $generated@@292 $generated@@293) ($generated@@250 $generated@@293))
)))
(assert (forall (($generated@@294 Int) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (= (type $generated@@295) $generated@@79) (= (type $generated@@296) $generated@@79)) (= (type $generated@@297) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@270 $generated@@297)) (= ($generated@@88 ($generated@@77 $generated@@294 $generated@@295 $generated@@296) $generated@@78 $generated@@297)  (and (and ($generated@@88 ($generated@@8 $generated@@294) $generated@@46 $generated@@297) ($generated@@88 $generated@@295 $generated@@78 $generated@@297)) ($generated@@88 $generated@@296 $generated@@78 $generated@@297))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@294 $generated@@295 $generated@@296) $generated@@78 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@68) (= (type $generated@@300) $generated@@68)) (= (type $generated@@301) $generated@@182)) (= (type $generated@@302) $generated@@182)) (= (type $generated@@303) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@270 $generated@@303)) (= ($generated@@88 ($generated@@262 $generated@@301 $generated@@302) ($generated@@173 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@298 $generated@@301 $generated@@299 $generated@@303) ($generated@@298 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@88 ($generated@@262 $generated@@301 $generated@@302) ($generated@@173 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@79) (= ($generated@@172 $generated@@304) (= ($generated@@146 $generated@@304) $generated@@61)))
 :pattern ( ($generated@@172 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@79) (= ($generated@@250 $generated@@305) (= ($generated@@146 $generated@@305) $generated@@63)))
 :pattern ( ($generated@@250 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@79) (= ($generated@@306 $generated@@307) (= ($generated@@146 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@79) ($generated@@306 $generated@@308)) (exists (($generated@@309 Int) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@79) (= (type $generated@@311) $generated@@79)) (= $generated@@308 ($generated@@77 $generated@@309 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@306 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@79) ($generated@@172 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@182) (= (type $generated@@314) $generated@@182)) (= $generated@@312 ($generated@@262 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@172 $generated@@312))
)))
(assert  (and (and (forall (($generated@@319 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@319)) 18)) (forall (($generated@@320 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@317 $generated@@320))
))) (forall (($generated@@321 T@T) ) (! (= (type ($generated@@315 $generated@@321)) ($generated@@317 $generated@@321))
 :pattern ( ($generated@@315 $generated@@321))
))))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@322)) 0)
 :pattern ( ($generated@@315 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@79) ($generated@@250 $generated@@323)) (= $generated@@323 $generated@@187))
 :pattern ( ($generated@@250 $generated@@323))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) $generated@@168) (= (type $generated@@325) $generated@@79)) (or ($generated@@169 ($generated@@288 $generated@@325)) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@325 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@250 ($generated@@288 $generated@@325)))))) (let (($generated@@326 ($generated@@288 ($generated@@160 ($generated@@288 $generated@@325)))))
(let (($generated@@327 ($generated@@288 ($generated@@155 ($generated@@288 $generated@@325)))))
(let (($generated@@328 ($generated@@286 ($generated@@151 ($generated@@288 $generated@@325)))))
 (and ($generated@@169 $generated@@327) (=> ($generated@@167 ($generated@@249 $generated@@324) $generated@@327) (and ($generated@@169 $generated@@326) (=> ($generated@@167 ($generated@@249 $generated@@324) $generated@@326) (and ($generated@@251 $generated@@327) (=> (or ($generated@@252 $generated@@327 $generated@@187) (<= $generated@@328 ($generated@@151 $generated@@327))) ($generated@@251 $generated@@326))))))))))) (= ($generated@@167 ($generated@@249 $generated@@324) ($generated@@288 $generated@@325)) (ite ($generated@@250 ($generated@@288 $generated@@325)) true (let (($generated@@329 ($generated@@288 ($generated@@160 ($generated@@288 $generated@@325)))))
(let (($generated@@330 ($generated@@288 ($generated@@155 ($generated@@288 $generated@@325)))))
(let (($generated@@331 ($generated@@286 ($generated@@151 ($generated@@288 $generated@@325)))))
 (and (and (and ($generated@@167 ($generated@@249 $generated@@324) $generated@@330) ($generated@@167 ($generated@@249 $generated@@324) $generated@@329)) (or ($generated@@252 $generated@@330 $generated@@187) (<= $generated@@331 ($generated@@286 ($generated@@151 $generated@@330))))) (or ($generated@@252 $generated@@329 $generated@@187) (<= $generated@@331 ($generated@@286 ($generated@@151 $generated@@329))))))))))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@249 $generated@@324) ($generated@@288 $generated@@325)))
))))
(assert (forall (($generated@@333 T@U) ) (! (= (type ($generated@@332 $generated@@333)) $generated@@182)
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@68) (= (type $generated@@336) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@298 ($generated@@332 $generated@@334) $generated@@335 $generated@@336) ($generated@@88 $generated@@334 $generated@@335 $generated@@336)))
 :pattern ( ($generated@@298 ($generated@@332 $generated@@334) $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@337) $generated@@79) (= (type $generated@@338) $generated@@79)) (and ($generated@@306 $generated@@337) ($generated@@306 $generated@@338))) (= ($generated@@252 $generated@@337 $generated@@338)  (and (and (= ($generated@@151 $generated@@337) ($generated@@151 $generated@@338)) ($generated@@252 ($generated@@155 $generated@@337) ($generated@@155 $generated@@338))) ($generated@@252 ($generated@@160 $generated@@337) ($generated@@160 $generated@@338)))))
 :pattern ( ($generated@@252 $generated@@337 $generated@@338) ($generated@@306 $generated@@337))
 :pattern ( ($generated@@252 $generated@@337 $generated@@338) ($generated@@306 $generated@@338))
)))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@90 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@93 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@90 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@95 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@90 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@95 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@95 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@90 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@95 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@95 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@93 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@90 $generated@@382 $generated@@2)) (= ($generated@@189 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@95 $generated@@381 $generated@@383))) (<= ($generated ($generated@@95 $generated@@381 $generated@@383)) ($generated@@339 $generated@@381))))
 :pattern ( ($generated@@95 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@189 $generated@@381))
)))
(assert (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@182) ($generated@@263 $generated@@387 $generated@@78)) (and (= ($generated@@332 ($generated@@384 $generated@@79 $generated@@387)) $generated@@387) ($generated@@76 ($generated@@384 $generated@@79 $generated@@387) $generated@@78)))
 :pattern ( ($generated@@263 $generated@@387 $generated@@78))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@349 (type $generated@@388))))
(let (($generated@@390 ($generated@@348 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@347 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@346 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@345 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@349 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@90 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@349 (type $generated@@395))))
(let (($generated@@397 ($generated@@348 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@347 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@346 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@95 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@367 (type $generated@@399))))
(let (($generated@@401 ($generated@@366 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@365 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@364 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@363 $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@367 (type $generated@@404))))
(= (type ($generated@@403 $generated@@404)) ($generated@@90 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@367 (type $generated@@406))))
(let (($generated@@408 ($generated@@366 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@365 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@364 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@407) ($generated@@0 ($generated@@95 ($generated@@403 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@403 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@411) $generated@@68)) (= ($generated@@76 $generated@@410 ($generated@@188 $generated@@411)) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@410 $generated@@412)))) ($generated@@263 $generated@@412 $generated@@411))
 :pattern ( ($generated@@95 $generated@@410 $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@410 ($generated@@188 $generated@@411)))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@79) ($generated@@251 $generated@@413)) (or ($generated@@250 $generated@@413) ($generated@@306 $generated@@413)))
 :pattern ( ($generated@@251 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@414 ($generated@@276 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@182) ($generated@@0 ($generated@@95 $generated@@414 $generated@@417))) ($generated@@298 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@95 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@88 $generated@@414 ($generated@@276 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@418 ($generated@@281 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@182) ($generated@@0 ($generated@@95 $generated@@418 $generated@@421))) ($generated@@298 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@95 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@88 $generated@@418 ($generated@@281 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@95 ($generated@@340 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@95 ($generated@@340 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@349 (type $generated@@427))))
(let (($generated@@429 ($generated@@348 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@90 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@347 $generated@@182 $generated@@182)) (= (type $generated@@431) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@95 ($generated@@345 $generated@@430) ($generated@@180 ($generated@@384 $generated@@79 $generated@@431)))) (= ($generated@@95 ($generated@@425 $generated@@430) ($generated@@180 ($generated@@384 $generated@@79 $generated@@431))) ($generated@@181 ($generated@@384 $generated@@79 $generated@@431))))))
 :pattern ( ($generated@@95 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@367 (type $generated@@435))))
(let (($generated@@437 ($generated@@366 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@90 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@365 $generated@@182 $generated@@182)) (= (type $generated@@439) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@95 ($generated@@363 $generated@@438) ($generated@@180 ($generated@@384 $generated@@79 $generated@@439)))) (= ($generated@@95 ($generated@@433 $generated@@438) ($generated@@180 ($generated@@384 $generated@@79 $generated@@439))) ($generated@@181 ($generated@@384 $generated@@79 $generated@@439))))))
 :pattern ( ($generated@@95 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@348 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@347 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@95 ($generated@@392 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@95 ($generated@@345 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@95 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@440) $generated@@444))
 :pattern ( ($generated@@95 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@95 ($generated@@392 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@366 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@365 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@95 ($generated@@403 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@95 ($generated@@363 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@95 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@445) $generated@@449))
 :pattern ( ($generated@@95 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@95 ($generated@@403 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@68)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@347 $generated@@182 $generated@@182)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) $generated@@68)) (= (type $generated@@456) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@453) $generated@@457))) (and ($generated@@298 ($generated@@95 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@298 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@95 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@88 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@365 $generated@@182 $generated@@182)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@461) $generated@@465))) (and ($generated@@298 ($generated@@95 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@298 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@95 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@88 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert  (and (forall (($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@468)) $generated@@168)
 :pattern ( ($generated@@466 $generated@@468))
)) (= (type $generated@@467) $generated@@168)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@168) (= (type $generated@@470) $generated@@79)) (= ($generated@@167 $generated@@469 $generated@@470) ($generated@@167 $generated@@467 $generated@@470)))
 :pattern ( ($generated@@167 ($generated@@466 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@79) ($generated@@76 $generated@@471 $generated@@78)) (or ($generated@@250 $generated@@471) ($generated@@306 $generated@@471)))
 :pattern ( ($generated@@306 $generated@@471) ($generated@@76 $generated@@471 $generated@@78))
 :pattern ( ($generated@@250 $generated@@471) ($generated@@76 $generated@@471 $generated@@78))
)))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@90 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@367 (type $generated@@474))))
(let (($generated@@476 ($generated@@366 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@365 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@364 $generated@@476 $generated@@475)) (= ($generated@@363 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@363 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@367 (type $generated@@477))))
(let (($generated@@479 ($generated@@366 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@365 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@364 $generated@@479 $generated@@478)) (= ($generated@@403 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@403 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@367 (type $generated@@480))))
(let (($generated@@482 ($generated@@366 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@365 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@364 $generated@@482 $generated@@481)) (= ($generated@@432 $generated@@480) ($generated@@472 $generated@@182))))))
 :pattern ( ($generated@@432 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@349 (type $generated@@483))))
(let (($generated@@485 ($generated@@348 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@347 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@346 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@182) (= (type $generated@@487) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@424 $generated@@483) ($generated@@332 ($generated@@262 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@424 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@367 (type $generated@@488))))
(let (($generated@@490 ($generated@@366 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@365 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@364 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@182) (= (type $generated@@492) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@432 $generated@@488) ($generated@@332 ($generated@@262 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@432 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@182) ($generated@@263 $generated@@493 $generated@@46)) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@493)) $generated@@493) ($generated@@76 ($generated@@384 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@182) ($generated@@263 $generated@@494 $generated@@47)) (and (= ($generated@@332 ($generated@@384 $generated@@3 $generated@@494)) $generated@@494) ($generated@@76 ($generated@@384 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@182) ($generated@@263 $generated@@495 $generated@@44)) (and (= ($generated@@332 ($generated@@384 $generated@@4 $generated@@495)) $generated@@495) ($generated@@76 ($generated@@384 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@182) ($generated@@263 $generated@@497 $generated@@45)) (and (= ($generated@@332 ($generated@@384 $generated@@496 $generated@@497)) $generated@@497) ($generated@@76 ($generated@@384 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@168) (= (type $generated@@499) $generated@@79)) (= ($generated@@167 ($generated@@249 $generated@@498) $generated@@499) ($generated@@167 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@167 ($generated@@249 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@263 ($generated@@332 $generated@@500) $generated@@501) ($generated@@76 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@263 ($generated@@332 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@93 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@90 $generated@@503 $generated@@2)) (<= 0 ($generated@@339 $generated@@502))))
 :pattern ( ($generated@@339 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@318 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@317 $generated@@505)) (<= 0 ($generated@@316 $generated@@504))))
 :pattern ( ($generated@@316 $generated@@504))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@450 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@450 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@450 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@450 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@86 ($generated@@450 $generated@@514 $generated@@515)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@458 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@458 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@68) (= (type $generated@@523) $generated@@68)) (= ($generated@@520 ($generated@@458 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@458 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@86 ($generated@@458 $generated@@524 $generated@@525)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@182) (= (type $generated@@527) $generated@@182)) (= ($generated@@146 ($generated@@262 $generated@@526 $generated@@527)) $generated@@61))
 :pattern ( ($generated@@262 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@173 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@173 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@173 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@173 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@182) (= (type $generated@@537) $generated@@182)) (= ($generated@@180 ($generated@@262 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@262 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@182) (= (type $generated@@539) $generated@@182)) (= ($generated@@181 ($generated@@262 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@262 $generated@@538 $generated@@539))
)))
(assert  (and (forall (($generated@@542 T@U) ) (! (= (type ($generated@@540 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@542))
)) (forall (($generated@@543 T@U) ($generated@@544 Int) ) (! (let (($generated@@545 ($generated@@318 (type $generated@@543))))
(= (type ($generated@@541 $generated@@543 $generated@@544)) $generated@@545))
 :pattern ( ($generated@@541 $generated@@543 $generated@@544))
))))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@317 $generated@@182)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@546 ($generated@@540 $generated@@547) $generated@@548) (forall (($generated@@549 Int) ) (!  (=> (and (<= 0 $generated@@549) (< $generated@@549 ($generated@@316 $generated@@546))) ($generated@@298 ($generated@@541 $generated@@546 $generated@@549) $generated@@547 $generated@@548))
 :pattern ( ($generated@@541 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@88 $generated@@546 ($generated@@540 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 Int) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@79) (= (type $generated@@552) $generated@@79)) (= ($generated@@77 ($generated@@286 $generated@@550) ($generated@@288 $generated@@551) ($generated@@288 $generated@@552)) ($generated@@288 ($generated@@77 $generated@@550 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@77 ($generated@@286 $generated@@550) ($generated@@288 $generated@@551) ($generated@@288 $generated@@552)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@89 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@89 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@276 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@276 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@86 ($generated@@276 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@281 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@281 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@86 ($generated@@281 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@188 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@188 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@86 ($generated@@188 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@540 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@540 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@86 ($generated@@540 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@540 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@384 $generated@@572 ($generated@@332 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@332 $generated@@571))
)))
(assert (forall (($generated@@574 Int) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@79) (= (type $generated@@576) $generated@@79)) (< ($generated@@573 $generated@@575) ($generated@@573 ($generated@@77 $generated@@574 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@77 $generated@@574 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 Int) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@79) (= (type $generated@@579) $generated@@79)) (< ($generated@@573 $generated@@579) ($generated@@573 ($generated@@77 $generated@@577 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@77 $generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@347 $generated@@182 $generated@@182)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) (= ($generated@@76 $generated@@580 ($generated@@450 $generated@@581 $generated@@582)) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@580) $generated@@583))) (and ($generated@@263 ($generated@@95 ($generated@@425 $generated@@580) $generated@@583) $generated@@582) ($generated@@263 $generated@@583 $generated@@581)))
 :pattern ( ($generated@@95 ($generated@@425 $generated@@580) $generated@@583))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@580) $generated@@583))
))))
 :pattern ( ($generated@@76 $generated@@580 ($generated@@450 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@365 $generated@@182 $generated@@182)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@68)) (= ($generated@@76 $generated@@584 ($generated@@458 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@584) $generated@@587))) (and ($generated@@263 ($generated@@95 ($generated@@433 $generated@@584) $generated@@587) $generated@@586) ($generated@@263 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@95 ($generated@@433 $generated@@584) $generated@@587))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@76 $generated@@584 ($generated@@458 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@182) (= (type $generated@@590) $generated@@182)) (< ($generated@@588 $generated@@589) ($generated@@573 ($generated@@262 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@262 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@182) (= (type $generated@@592) $generated@@182)) (< ($generated@@588 $generated@@592) ($generated@@573 ($generated@@262 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@262 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@182) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@263 $generated@@593 ($generated@@450 $generated@@594 $generated@@595))) (and (= ($generated@@332 ($generated@@384 ($generated@@347 $generated@@182 $generated@@182) $generated@@593)) $generated@@593) ($generated@@76 ($generated@@384 ($generated@@347 $generated@@182 $generated@@182) $generated@@593) ($generated@@450 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@263 $generated@@593 ($generated@@450 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@182) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@263 $generated@@596 ($generated@@458 $generated@@597 $generated@@598))) (and (= ($generated@@332 ($generated@@384 ($generated@@365 $generated@@182 $generated@@182) $generated@@596)) $generated@@596) ($generated@@76 ($generated@@384 ($generated@@365 $generated@@182 $generated@@182) $generated@@596) ($generated@@458 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@263 $generated@@596 ($generated@@458 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@68) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@182)) ($generated@@263 $generated@@601 ($generated@@173 $generated@@599 $generated@@600))) (and (= ($generated@@332 ($generated@@384 $generated@@79 $generated@@601)) $generated@@601) ($generated@@76 ($generated@@384 $generated@@79 $generated@@601) ($generated@@173 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@263 $generated@@601 ($generated@@173 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@95 ($generated@@472 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@95 ($generated@@472 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@73)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@68) (= (type $generated@@607) $generated@@68)) (and (= ($generated@@86 ($generated@@173 $generated@@606 $generated@@607)) $generated@@62) (= ($generated@@604 ($generated@@173 $generated@@606 $generated@@607)) $generated@@66)))
 :pattern ( ($generated@@173 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@79) (= (type $generated@@609) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@609) (and ($generated@@306 $generated@@608) ($generated@@88 $generated@@608 $generated@@78 $generated@@609)))) ($generated@@88 ($generated@@8 ($generated@@151 $generated@@608)) $generated@@46 $generated@@609))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@151 $generated@@608)) $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@79) (= ($generated@@588 ($generated@@332 $generated@@610)) ($generated@@573 $generated@@610)))
 :pattern ( ($generated@@588 ($generated@@332 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@182) ($generated@@263 $generated@@611 ($generated@@89 0))) (and (= ($generated@@332 ($generated@@384 $generated@@2 $generated@@611)) $generated@@611) ($generated@@76 ($generated@@384 ($generated@@90 $generated@@182 $generated@@4) $generated@@611) ($generated@@89 0))))
 :pattern ( ($generated@@263 $generated@@611 ($generated@@89 0)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@182) (= (type $generated@@613) $generated@@68)) ($generated@@263 $generated@@612 ($generated@@276 $generated@@613))) (and (= ($generated@@332 ($generated@@384 ($generated@@90 $generated@@182 $generated@@4) $generated@@612)) $generated@@612) ($generated@@76 ($generated@@384 ($generated@@90 $generated@@182 $generated@@4) $generated@@612) ($generated@@276 $generated@@613))))
 :pattern ( ($generated@@263 $generated@@612 ($generated@@276 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@182) (= (type $generated@@615) $generated@@68)) ($generated@@263 $generated@@614 ($generated@@281 $generated@@615))) (and (= ($generated@@332 ($generated@@384 ($generated@@90 $generated@@182 $generated@@4) $generated@@614)) $generated@@614) ($generated@@76 ($generated@@384 ($generated@@90 $generated@@182 $generated@@4) $generated@@614) ($generated@@281 $generated@@615))))
 :pattern ( ($generated@@263 $generated@@614 ($generated@@281 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@182) (= (type $generated@@617) $generated@@68)) ($generated@@263 $generated@@616 ($generated@@188 $generated@@617))) (and (= ($generated@@332 ($generated@@384 ($generated@@90 $generated@@182 $generated@@2) $generated@@616)) $generated@@616) ($generated@@76 ($generated@@384 ($generated@@90 $generated@@182 $generated@@2) $generated@@616) ($generated@@188 $generated@@617))))
 :pattern ( ($generated@@263 $generated@@616 ($generated@@188 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@182) (= (type $generated@@619) $generated@@68)) ($generated@@263 $generated@@618 ($generated@@540 $generated@@619))) (and (= ($generated@@332 ($generated@@384 ($generated@@317 $generated@@182) $generated@@618)) $generated@@618) ($generated@@76 ($generated@@384 ($generated@@317 $generated@@182) $generated@@618) ($generated@@540 $generated@@619))))
 :pattern ( ($generated@@263 $generated@@618 ($generated@@540 $generated@@619)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@604 $generated@@78) $generated@@67))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@620) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@620 ($generated@@188 $generated@@621) $generated@@622) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@620 $generated@@623)))) ($generated@@298 $generated@@623 $generated@@621 $generated@@622))
 :pattern ( ($generated@@95 $generated@@620 $generated@@623))
))))
 :pattern ( ($generated@@88 $generated@@620 ($generated@@188 $generated@@621) $generated@@622))
)))
(assert (= $generated@@187 ($generated@@288 $generated@@187)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@79) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@626) (and ($generated@@172 $generated@@624) (exists (($generated@@627 T@U) ) (!  (and (= (type $generated@@627) $generated@@68) ($generated@@88 $generated@@624 ($generated@@173 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@88 $generated@@624 ($generated@@173 $generated@@625 $generated@@627) $generated@@626))
))))) ($generated@@298 ($generated@@180 $generated@@624) $generated@@625 $generated@@626))
 :pattern ( ($generated@@298 ($generated@@180 $generated@@624) $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@630) (and ($generated@@172 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@68) ($generated@@88 $generated@@628 ($generated@@173 $generated@@631 $generated@@629) $generated@@630))
 :pattern ( ($generated@@88 $generated@@628 ($generated@@173 $generated@@631 $generated@@629) $generated@@630))
))))) ($generated@@298 ($generated@@181 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@298 ($generated@@181 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@79) (= (type $generated@@633) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@633) (and ($generated@@306 $generated@@632) ($generated@@88 $generated@@632 $generated@@78 $generated@@633)))) ($generated@@88 ($generated@@155 $generated@@632) $generated@@78 $generated@@633))
 :pattern ( ($generated@@88 ($generated@@155 $generated@@632) $generated@@78 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@79) (= (type $generated@@635) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@635) (and ($generated@@306 $generated@@634) ($generated@@88 $generated@@634 $generated@@78 $generated@@635)))) ($generated@@88 ($generated@@160 $generated@@634) $generated@@78 $generated@@635))
 :pattern ( ($generated@@88 ($generated@@160 $generated@@634) $generated@@78 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@182) (= (type $generated@@637) $generated@@182)) (= ($generated@@262 ($generated@@288 $generated@@636) ($generated@@288 $generated@@637)) ($generated@@288 ($generated@@262 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@262 ($generated@@288 $generated@@636) ($generated@@288 $generated@@637)))
)))
(assert (forall (($generated@@638 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@286 $generated@@638))) ($generated@@288 ($generated@@332 ($generated@@8 $generated@@638))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@286 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ) (! (= ($generated@@332 ($generated@@288 $generated@@639)) ($generated@@288 ($generated@@332 $generated@@639)))
 :pattern ( ($generated@@332 ($generated@@288 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@318 (type $generated@@640))))
 (=> (and (= (type $generated@@640) ($generated@@317 $generated@@641)) (= ($generated@@316 $generated@@640) 0)) (= $generated@@640 ($generated@@315 $generated@@641))))
 :pattern ( ($generated@@316 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (! (let (($generated@@645 (type $generated@@643)))
 (=> (and (and (= (type $generated@@642) ($generated@@90 $generated@@645 $generated@@2)) (= (type $generated@@644) $generated@@2)) (<= 0 ($generated $generated@@644))) (= ($generated@@339 ($generated@@96 $generated@@642 $generated@@643 $generated@@644)) (+ (- ($generated@@339 $generated@@642) ($generated ($generated@@95 $generated@@642 $generated@@643))) ($generated $generated@@644)))))
 :pattern ( ($generated@@339 ($generated@@96 $generated@@642 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@647) $generated@@2)) ($generated@@88 $generated@@647 $generated@@46 $generated@@646))
 :pattern ( ($generated@@88 $generated@@647 $generated@@46 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@649) $generated@@3)) ($generated@@88 $generated@@649 $generated@@47 $generated@@648))
 :pattern ( ($generated@@88 $generated@@649 $generated@@47 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@651) $generated@@4)) ($generated@@88 $generated@@651 $generated@@44 $generated@@650))
 :pattern ( ($generated@@88 $generated@@651 $generated@@44 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@653) $generated@@496)) ($generated@@88 $generated@@653 $generated@@45 $generated@@652))
 :pattern ( ($generated@@88 $generated@@653 $generated@@45 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@655) $generated@@182)) ($generated@@88 $generated@@655 $generated@@48 $generated@@654))
 :pattern ( ($generated@@88 $generated@@655 $generated@@48 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@317 $generated@@182)) (= (type $generated@@657) $generated@@68)) (= ($generated@@76 $generated@@656 ($generated@@540 $generated@@657)) (forall (($generated@@658 Int) ) (!  (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@316 $generated@@656))) ($generated@@263 ($generated@@541 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@541 $generated@@656 $generated@@658))
))))
 :pattern ( ($generated@@76 $generated@@656 ($generated@@540 $generated@@657)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 Int) ) (!  (=> (= (type $generated@@660) ($generated@@317 $generated@@182)) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@316 $generated@@660))) (< ($generated@@573 ($generated@@384 $generated@@79 ($generated@@541 $generated@@660 $generated@@661))) ($generated@@659 $generated@@660))))
 :pattern ( ($generated@@573 ($generated@@384 $generated@@79 ($generated@@541 $generated@@660 $generated@@661))))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) ($generated@@347 $generated@@182 $generated@@182)) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@68)) ($generated@@76 $generated@@662 ($generated@@450 $generated@@663 $generated@@664))) (and (and ($generated@@76 ($generated@@345 $generated@@662) ($generated@@276 $generated@@663)) ($generated@@76 ($generated@@392 $generated@@662) ($generated@@276 $generated@@664))) ($generated@@76 ($generated@@424 $generated@@662) ($generated@@276 ($generated@@173 $generated@@663 $generated@@664)))))
 :pattern ( ($generated@@76 $generated@@662 ($generated@@450 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@365 $generated@@182 $generated@@182)) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@68)) ($generated@@76 $generated@@665 ($generated@@458 $generated@@666 $generated@@667))) (and (and ($generated@@76 ($generated@@363 $generated@@665) ($generated@@281 $generated@@666)) ($generated@@76 ($generated@@403 $generated@@665) ($generated@@281 $generated@@667))) ($generated@@76 ($generated@@432 $generated@@665) ($generated@@281 ($generated@@173 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@76 $generated@@665 ($generated@@458 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@2) ($generated@@76 $generated@@668 $generated@@46))
 :pattern ( ($generated@@76 $generated@@668 $generated@@46))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@3) ($generated@@76 $generated@@669 $generated@@47))
 :pattern ( ($generated@@76 $generated@@669 $generated@@47))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@4) ($generated@@76 $generated@@670 $generated@@44))
 :pattern ( ($generated@@76 $generated@@670 $generated@@44))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@496) ($generated@@76 $generated@@671 $generated@@45))
 :pattern ( ($generated@@76 $generated@@671 $generated@@45))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@182) ($generated@@76 $generated@@672 $generated@@48))
 :pattern ( ($generated@@76 $generated@@672 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 (T@U) Bool)
(declare-fun $generated@@677 () T@U)
(assert  (and (and (and (= (type $generated@@673) ($generated@@195 $generated@@91 $generated@@4)) (= (type $generated@@674) $generated@@91)) (= (type $generated@@675) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@677) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@678  (=> ($generated@@169 ($generated@@288 $generated@@187)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@169 ($generated@@288 $generated@@187)) (or ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@167 ($generated@@249 $generated@@467) ($generated@@288 $generated@@187))))) (=> ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@250 ($generated@@288 $generated@@187))))) ($generated@@0 ($generated@@288 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@169 ($generated@@288 $generated@@187)) (or ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@167 ($generated@@249 $generated@@467) ($generated@@288 $generated@@187))))) (=> (not ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@250 ($generated@@288 $generated@@187)))))) (let (($generated@@679 ($generated@@288 ($generated@@155 ($generated@@288 $generated@@187)))))
($generated@@167 ($generated@@249 ($generated@@249 $generated@@467)) $generated@@679)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@169 ($generated@@288 $generated@@187)) (or ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@167 ($generated@@249 $generated@@467) ($generated@@288 $generated@@187))))) (=> (not ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@250 ($generated@@288 $generated@@187)))))) (let (($generated@@680 ($generated@@288 ($generated@@160 ($generated@@288 $generated@@187)))))
($generated@@167 ($generated@@249 ($generated@@249 $generated@@467)) $generated@@680)))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@169 ($generated@@288 $generated@@187)) (or ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@167 ($generated@@249 $generated@@467) ($generated@@288 $generated@@187))))) (=> (not ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@250 ($generated@@288 $generated@@187)))))) (let (($generated@@681 ($generated@@288 ($generated@@155 ($generated@@288 $generated@@187)))))
(let (($generated@@682 ($generated@@286 ($generated@@151 ($generated@@288 $generated@@187)))))
 (or ($generated@@252 $generated@@681 $generated@@187) (<= $generated@@682 ($generated@@151 $generated@@681))))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@169 ($generated@@288 $generated@@187)) (or ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@167 ($generated@@249 $generated@@467) ($generated@@288 $generated@@187))))) (=> (not ($generated@@0 ($generated@@288 ($generated@@11 ($generated@@250 ($generated@@288 $generated@@187)))))) (let (($generated@@683 ($generated@@288 ($generated@@160 ($generated@@288 $generated@@187)))))
(let (($generated@@684 ($generated@@286 ($generated@@151 ($generated@@288 $generated@@187)))))
 (or ($generated@@252 $generated@@683 $generated@@187) (<= $generated@@684 ($generated@@151 $generated@@683))))))))))))))))
(let (($generated@@685 true))
(let (($generated@@686  (=> (= $generated@@673 ($generated@@194 $generated@@674 $generated@@675 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@685) (=> (= (ControlFlow 0 8) 3) $generated@@678)))))
(let (($generated@@687  (=> (and (and (and ($generated@@270 $generated@@675) ($generated@@676 $generated@@675)) ($generated@@76 $generated@@677 $generated@@78)) (and (= 2 $generated@@166) (= (ControlFlow 0 9) 8))) $generated@@686)))
$generated@@687)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 () Bool)
(declare-fun $generated@@274 () Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@T T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@136 $generated@@146)) ($generated@@79 $generated@@137 $generated@@2))
 :pattern ( ($generated@@136 $generated@@146))
))) (= (type $generated@@140) $generated@@67)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@142 $generated@@147 $generated@@148)) ($generated@@79 $generated@@137 $generated@@2))
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@145) 15)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@143 $generated@@149)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@149))
))) (= (type $generated@@144) $generated@@145)))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@137) (or ($generated@@138 $generated@@150) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@150 $generated@@140)))) (and ($generated@@141 $generated@@150) (= ($generated@@136 $generated@@150) ($generated@@142 ($generated@@143 $generated@@144) $generated@@150))))
 :pattern ( ($generated@@136 $generated@@150))
))))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@78 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@67)) (= (type $generated@@160) $generated@@155)) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@137)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@137)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@155) (= (type $generated@@167) $generated@@155)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@172) $generated@@67)) ($generated@@151 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@151 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@80 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@70 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@224) ($generated@@69 $generated@@4))) (= (type $generated@@226) $generated@@80)) (= (type $generated@@227) ($generated@@69 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@80 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@70 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@80) (= (type $generated@@235) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@236) ($generated@@69 $generated@@4))) (= (type $generated@@238) $generated@@80)) (= (type $generated@@239) ($generated@@69 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert  (and (= (type $generated@@241) $generated@@137) (= (type $generated@@242) $generated@@67)))
(assert  (=> true (=> true ($generated@@139 $generated@@241 $generated@@242))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@137) (= (type $generated@@245) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@243 $generated@@244 $generated@@140 $generated@@245) ($generated@@243 $generated@@244 $generated@@242 $generated@@245)))
 :pattern ( ($generated@@243 $generated@@244 $generated@@140 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@246 $generated@@247 $generated@@248)) $generated@@155)
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@67) (= (type $generated@@250) $generated@@67)) (= (type $generated@@251) $generated@@137)) (= (type $generated@@252) $generated@@137)) (= ($generated@@151 ($generated@@246 $generated@@251 $generated@@252) ($generated@@154 $generated@@249 $generated@@250))  (and ($generated@@139 $generated@@251 $generated@@249) ($generated@@139 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@151 ($generated@@246 $generated@@251 $generated@@252) ($generated@@154 $generated@@249 $generated@@250)))
)))
(assert  (=> true (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@145) (= (type $generated@@256) $generated@@137)) (or ($generated@@254 $generated@@256) ($generated@@139 $generated@@256 $generated@@242))) true)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@155) (= (type $generated@@258) $generated@@155)) (= ($generated@@161 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@161 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@67)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@262) $generated@@67)) (= ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@137) ($generated@@0 ($generated@@84 $generated@@261 $generated@@263))) ($generated@@139 $generated@@263 $generated@@262))
 :pattern ( ($generated@@84 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@67)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@267) $generated@@67)) (= ($generated@@151 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@137) ($generated@@0 ($generated@@84 $generated@@266 $generated@@268))) ($generated@@139 $generated@@268 $generated@@267))
 :pattern ( ($generated@@84 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@151 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (= (type $generated@@275) $generated@@137))
(assert  (=> (<= 3 $generated@@135) (=> (or $generated@@273 (not (= 3 $generated@@135))) (and $generated@@274 (= $generated@@275 $generated@@241)))))
(assert  (=> (<= 3 $generated@@135) (=> (or $generated@@273 (not (= 3 $generated@@135))) (and $generated@@274 (= $generated@@275 $generated@@241)))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@67) (= (type $generated@@278) $generated@@67)) (= (type $generated@@279) $generated@@137)) (= (type $generated@@280) $generated@@137)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@276 $generated@@281)) (= ($generated@@77 ($generated@@246 $generated@@279 $generated@@280) ($generated@@154 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@243 $generated@@279 $generated@@277 $generated@@281) ($generated@@243 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@77 ($generated@@246 $generated@@279 $generated@@280) ($generated@@154 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@71)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@155) (= ($generated@@153 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@284))
)))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@137) (or ($generated@@138 ($generated@@269 $generated@@285)) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@285 $generated@@140)))) (and ($generated@@141 ($generated@@269 $generated@@285)) (= ($generated@@136 ($generated@@269 $generated@@285)) ($generated@@142 ($generated@@143 $generated@@144) ($generated@@269 $generated@@285)))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@269 $generated@@285)))
))))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@137) (or ($generated@@138 $generated@@286) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@286 $generated@@140)))) ($generated@@151 ($generated@@136 $generated@@286) ($generated@@168 $generated@@46)))
 :pattern ( ($generated@@136 $generated@@286))
))))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@155) ($generated@@153 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@137) (= (type $generated@@289) $generated@@137)) (= $generated@@287 ($generated@@246 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@153 $generated@@287))
)))
(assert  (and (and (forall (($generated@@294 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@294)) 18)) (forall (($generated@@295 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
))) (forall (($generated@@296 T@T) ) (! (= (type ($generated@@290 $generated@@296)) ($generated@@292 $generated@@296))
 :pattern ( ($generated@@290 $generated@@296))
))))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@297)) 0)
 :pattern ( ($generated@@290 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@137)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@243 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@77 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@243 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert  (=> true (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@303) $generated@@145) (= (type $generated@@304) $generated@@137)) (or ($generated@@141 $generated@@304) ($generated@@139 $generated@@304 $generated@@242))) ($generated@@151 ($generated@@142 $generated@@303 $generated@@304) ($generated@@168 $generated@@46)))
 :pattern ( ($generated@@142 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@79 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@82 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@79 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@84 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@79 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@84 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@84 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 20)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@79 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@84 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@84 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (=> (<= 3 $generated@@135) (=> (or $generated@@273 (not (= 3 $generated@@135))) (and ($generated@@347 ($generated@@136 ($generated@@269 $generated@@275)) ($generated@@306 $generated@@137)) ($generated@@139 $generated@@275 $generated@@140)))))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@82 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@79 $generated@@349 $generated@@2)) (= ($generated@@169 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@84 $generated@@348 $generated@@350))) (<= ($generated ($generated@@84 $generated@@348 $generated@@350)) ($generated@@305 $generated@@348))))
 :pattern ( ($generated@@84 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@169 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@315 (type $generated@@351))))
(let (($generated@@353 ($generated@@314 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@313 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@312 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@84 ($generated@@311 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@311 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@315 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@79 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@315 (type $generated@@358))))
(let (($generated@@360 ($generated@@314 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@313 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@312 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@333 (type $generated@@362))))
(let (($generated@@364 ($generated@@332 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@331 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@330 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@329 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@333 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@79 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@333 (type $generated@@369))))
(let (($generated@@371 ($generated@@332 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@331 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@330 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@151 $generated@@373 ($generated@@168 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@137) (< 0 ($generated ($generated@@84 $generated@@373 $generated@@375)))) ($generated@@139 $generated@@375 $generated@@374))
 :pattern ( ($generated@@84 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@151 $generated@@373 ($generated@@168 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@82 (type $generated@@376))))
 (=> (and (= (type $generated@@376) ($generated@@79 $generated@@378 $generated@@2)) (= (type $generated@@377) ($generated@@79 $generated@@378 $generated@@2))) (= ($generated@@347 $generated@@376 $generated@@377) (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@378) (= ($generated ($generated@@84 $generated@@376 $generated@@379)) ($generated ($generated@@84 $generated@@377 $generated@@379))))
 :pattern ( ($generated@@84 $generated@@376 $generated@@379))
 :pattern ( ($generated@@84 $generated@@377 $generated@@379))
)))))
 :pattern ( ($generated@@347 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@380 ($generated@@259 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@137) ($generated@@0 ($generated@@84 $generated@@380 $generated@@383))) ($generated@@243 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@84 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@77 $generated@@380 ($generated@@259 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@385) $generated@@67)) (= (type $generated@@386) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@384 ($generated@@264 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@137) ($generated@@0 ($generated@@84 $generated@@384 $generated@@387))) ($generated@@243 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@84 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@77 $generated@@384 ($generated@@264 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@84 ($generated@@306 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@84 ($generated@@306 $generated@@389) $generated@@388)))
)))
(assert  (and (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@390 $generated@@393)) ($generated@@79 $generated@@137 $generated@@4))
 :pattern ( ($generated@@390 $generated@@393))
)) (forall (($generated@@394 T@T) ($generated@@395 T@U) ) (! (= (type ($generated@@391 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@391 $generated@@394 $generated@@395))
))) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@315 (type $generated@@396))))
(let (($generated@@398 ($generated@@314 (type $generated@@396))))
(= (type ($generated@@392 $generated@@396)) ($generated@@79 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@392 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@313 $generated@@137 $generated@@137)) (= (type $generated@@400) $generated@@137)) (= ($generated@@0 ($generated@@84 ($generated@@390 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@84 ($generated@@311 $generated@@399) ($generated@@162 ($generated@@391 $generated@@155 $generated@@400)))) (= ($generated@@84 ($generated@@392 $generated@@399) ($generated@@162 ($generated@@391 $generated@@155 $generated@@400))) ($generated@@163 ($generated@@391 $generated@@155 $generated@@400))))))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@79 $generated@@137 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@333 (type $generated@@404))))
(let (($generated@@406 ($generated@@332 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@79 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@331 $generated@@137 $generated@@137)) (= (type $generated@@408) $generated@@137)) (= ($generated@@0 ($generated@@84 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@84 ($generated@@329 $generated@@407) ($generated@@162 ($generated@@391 $generated@@155 $generated@@408)))) (= ($generated@@84 ($generated@@402 $generated@@407) ($generated@@162 ($generated@@391 $generated@@155 $generated@@408))) ($generated@@163 ($generated@@391 $generated@@155 $generated@@408))))))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@314 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@313 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@355 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@311 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@392 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@311 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@332 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@331 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@84 ($generated@@329 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@84 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@414) $generated@@418))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@67)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@313 $generated@@137 $generated@@137)) (= (type $generated@@423) $generated@@67)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@311 $generated@@422) $generated@@426))) (and ($generated@@243 ($generated@@84 ($generated@@392 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@243 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@422) $generated@@426))
 :pattern ( ($generated@@84 ($generated@@311 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@77 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@331 $generated@@137 $generated@@137)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@430) $generated@@434))) (and ($generated@@243 ($generated@@84 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@243 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@77 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@145)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) (= (type $generated@@438) $generated@@137)) (= ($generated@@253 $generated@@437 $generated@@438) ($generated@@253 $generated@@144 $generated@@438)))
 :pattern ( ($generated@@253 ($generated@@435 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@82 (type $generated@@439))))
 (=> (and (and (= (type $generated@@439) ($generated@@79 $generated@@441 $generated@@2)) (= (type $generated@@440) ($generated@@79 $generated@@441 $generated@@2))) ($generated@@347 $generated@@439 $generated@@440)) (= $generated@@439 $generated@@440)))
 :pattern ( ($generated@@347 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@79 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@333 (type $generated@@444))))
(let (($generated@@446 ($generated@@332 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@331 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@330 $generated@@446 $generated@@445)) (= ($generated@@329 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@329 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@333 (type $generated@@447))))
(let (($generated@@449 ($generated@@332 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@331 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@330 $generated@@449 $generated@@448)) (= ($generated@@366 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@366 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (= ($generated@@401 $generated@@450) ($generated@@442 $generated@@137))))))
 :pattern ( ($generated@@401 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@315 (type $generated@@453))))
(let (($generated@@455 ($generated@@314 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@313 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@312 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@137) (= (type $generated@@457) $generated@@137)) ($generated@@0 ($generated@@84 ($generated@@390 $generated@@453) ($generated@@298 ($generated@@246 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@390 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@333 (type $generated@@458))))
(let (($generated@@460 ($generated@@332 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@331 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@330 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@137) (= (type $generated@@462) $generated@@137)) ($generated@@0 ($generated@@84 ($generated@@401 $generated@@458) ($generated@@298 ($generated@@246 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@401 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@137) ($generated@@139 $generated@@463 $generated@@46)) (and (= ($generated@@298 ($generated@@391 $generated@@2 $generated@@463)) $generated@@463) ($generated@@151 ($generated@@391 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@139 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@137) ($generated@@139 $generated@@464 $generated@@47)) (and (= ($generated@@298 ($generated@@391 $generated@@3 $generated@@464)) $generated@@464) ($generated@@151 ($generated@@391 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@139 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@137) ($generated@@139 $generated@@465 $generated@@44)) (and (= ($generated@@298 ($generated@@391 $generated@@4 $generated@@465)) $generated@@465) ($generated@@151 ($generated@@391 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@139 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 21))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@137) ($generated@@139 $generated@@467 $generated@@45)) (and (= ($generated@@298 ($generated@@391 $generated@@466 $generated@@467)) $generated@@467) ($generated@@151 ($generated@@391 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@139 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@137)) (= ($generated@@253 ($generated@@143 $generated@@468) $generated@@469) ($generated@@253 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@253 ($generated@@143 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@67) (= ($generated@@139 ($generated@@298 $generated@@470) $generated@@471) ($generated@@151 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@139 ($generated@@298 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@82 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@79 $generated@@473 $generated@@2)) (<= 0 ($generated@@305 $generated@@472))))
 :pattern ( ($generated@@305 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@293 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@292 $generated@@475)) (<= 0 ($generated@@291 $generated@@474))))
 :pattern ( ($generated@@291 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@419 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@419 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@419 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@419 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@419 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@427 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@427 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@427 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@427 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@75 ($generated@@427 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@137) (= (type $generated@@497) $generated@@137)) (= ($generated@@282 ($generated@@246 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@246 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@498 ($generated@@154 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@154 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@154 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@154 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@137) (= (type $generated@@507) $generated@@137)) (= ($generated@@162 ($generated@@246 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@246 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@137) (= (type $generated@@509) $generated@@137)) (= ($generated@@163 ($generated@@246 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@246 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@137)) (= ($generated@@142 $generated@@510 $generated@@511) ($generated@@142 $generated@@144 $generated@@511)))
 :pattern ( ($generated@@142 ($generated@@435 $generated@@510) $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@293 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@292 $generated@@137)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@291 $generated@@518))) ($generated@@243 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@77 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@78 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@78 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@259 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@259 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@259 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@264 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@264 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@75 ($generated@@264 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@168 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@168 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@75 ($generated@@168 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@67) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@67) (= ($generated@@75 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@391 $generated@@541 ($generated@@298 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@298 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@313 $generated@@137 $generated@@137)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) (= ($generated@@151 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@311 $generated@@542) $generated@@545))) (and ($generated@@139 ($generated@@84 ($generated@@392 $generated@@542) $generated@@545) $generated@@544) ($generated@@139 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@542) $generated@@545))
 :pattern ( ($generated@@84 ($generated@@311 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@151 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@331 $generated@@137 $generated@@137)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@151 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@546) $generated@@549))) (and ($generated@@139 ($generated@@84 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@139 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@151 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@137) (= (type $generated@@553) $generated@@137)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@246 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@246 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@137) (= (type $generated@@555) $generated@@137)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@246 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@246 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@137)) (= ($generated@@142 ($generated@@143 $generated@@556) $generated@@557) ($generated@@142 $generated@@556 $generated@@557)))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@137) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) $generated@@67)) ($generated@@139 $generated@@558 ($generated@@419 $generated@@559 $generated@@560))) (and (= ($generated@@298 ($generated@@391 ($generated@@313 $generated@@137 $generated@@137) $generated@@558)) $generated@@558) ($generated@@151 ($generated@@391 ($generated@@313 $generated@@137 $generated@@137) $generated@@558) ($generated@@419 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@139 $generated@@558 ($generated@@419 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@137) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) $generated@@67)) ($generated@@139 $generated@@561 ($generated@@427 $generated@@562 $generated@@563))) (and (= ($generated@@298 ($generated@@391 ($generated@@331 $generated@@137 $generated@@137) $generated@@561)) $generated@@561) ($generated@@151 ($generated@@391 ($generated@@331 $generated@@137 $generated@@137) $generated@@561) ($generated@@427 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@139 $generated@@561 ($generated@@427 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@67) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@137)) ($generated@@139 $generated@@566 ($generated@@154 $generated@@564 $generated@@565))) (and (= ($generated@@298 ($generated@@391 $generated@@155 $generated@@566)) $generated@@566) ($generated@@151 ($generated@@391 $generated@@155 $generated@@566) ($generated@@154 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@139 $generated@@566 ($generated@@154 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@84 ($generated@@442 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@84 ($generated@@442 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@72)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@67) (= (type $generated@@572) $generated@@67)) (and (= ($generated@@75 ($generated@@154 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@154 $generated@@571 $generated@@572)) $generated@@65)))
 :pattern ( ($generated@@154 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@155) (= ($generated@@550 ($generated@@298 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@298 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@137) ($generated@@139 $generated@@574 ($generated@@78 0))) (and (= ($generated@@298 ($generated@@391 $generated@@2 $generated@@574)) $generated@@574) ($generated@@151 ($generated@@391 ($generated@@79 $generated@@137 $generated@@4) $generated@@574) ($generated@@78 0))))
 :pattern ( ($generated@@139 $generated@@574 ($generated@@78 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@137) (= (type $generated@@576) $generated@@67)) ($generated@@139 $generated@@575 ($generated@@259 $generated@@576))) (and (= ($generated@@298 ($generated@@391 ($generated@@79 $generated@@137 $generated@@4) $generated@@575)) $generated@@575) ($generated@@151 ($generated@@391 ($generated@@79 $generated@@137 $generated@@4) $generated@@575) ($generated@@259 $generated@@576))))
 :pattern ( ($generated@@139 $generated@@575 ($generated@@259 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@137) (= (type $generated@@578) $generated@@67)) ($generated@@139 $generated@@577 ($generated@@264 $generated@@578))) (and (= ($generated@@298 ($generated@@391 ($generated@@79 $generated@@137 $generated@@4) $generated@@577)) $generated@@577) ($generated@@151 ($generated@@391 ($generated@@79 $generated@@137 $generated@@4) $generated@@577) ($generated@@264 $generated@@578))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@264 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@137) (= (type $generated@@580) $generated@@67)) ($generated@@139 $generated@@579 ($generated@@168 $generated@@580))) (and (= ($generated@@298 ($generated@@391 ($generated@@79 $generated@@137 $generated@@2) $generated@@579)) $generated@@579) ($generated@@151 ($generated@@391 ($generated@@79 $generated@@137 $generated@@2) $generated@@579) ($generated@@168 $generated@@580))))
 :pattern ( ($generated@@139 $generated@@579 ($generated@@168 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@137) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@581 ($generated@@512 $generated@@582))) (and (= ($generated@@298 ($generated@@391 ($generated@@292 $generated@@137) $generated@@581)) $generated@@581) ($generated@@151 ($generated@@391 ($generated@@292 $generated@@137) $generated@@581) ($generated@@512 $generated@@582))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@512 $generated@@582)))
)))
(assert (= ($generated@@75 $generated@@242) $generated@@63))
(assert (= ($generated@@569 $generated@@242) $generated@@66))
(assert (= ($generated@@75 $generated@@140) $generated@@64))
(assert (= ($generated@@569 $generated@@140) $generated@@66))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@584) $generated@@67)) (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@583 ($generated@@168 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@137) (< 0 ($generated ($generated@@84 $generated@@583 $generated@@586)))) ($generated@@243 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@84 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@77 $generated@@583 ($generated@@168 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@155) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@276 $generated@@589) (and ($generated@@153 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@67) ($generated@@77 $generated@@587 ($generated@@154 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@77 $generated@@587 ($generated@@154 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@243 ($generated@@162 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@243 ($generated@@162 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@155) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@276 $generated@@593) (and ($generated@@153 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@67) ($generated@@77 $generated@@591 ($generated@@154 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@77 $generated@@591 ($generated@@154 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@243 ($generated@@163 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@243 ($generated@@163 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@137) (= (type $generated@@596) $generated@@137)) (= ($generated@@246 ($generated@@269 $generated@@595) ($generated@@269 $generated@@596)) ($generated@@269 ($generated@@246 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@246 ($generated@@269 $generated@@595) ($generated@@269 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@298 ($generated@@269 $generated@@597)) ($generated@@269 ($generated@@298 $generated@@597)))
 :pattern ( ($generated@@298 ($generated@@269 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@293 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@292 $generated@@599)) (= ($generated@@291 $generated@@598) 0)) (= $generated@@598 ($generated@@290 $generated@@599))))
 :pattern ( ($generated@@291 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@79 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@305 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@305 $generated@@600) ($generated ($generated@@84 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@305 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@137) (= ($generated@@139 $generated@@604 $generated@@140)  (and ($generated@@139 $generated@@604 $generated@@242) ($generated@@253 ($generated@@143 $generated@@144) $generated@@604))))
 :pattern ( ($generated@@139 $generated@@604 $generated@@140))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@2)) ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@3)) ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@4)) ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@466)) ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@137)) ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@292 $generated@@137)) (= (type $generated@@616) $generated@@67)) (= ($generated@@151 $generated@@615 ($generated@@512 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@291 $generated@@615))) ($generated@@139 ($generated@@513 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@513 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@151 $generated@@615 ($generated@@512 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@292 $generated@@137)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@291 $generated@@619))) (< ($generated@@551 ($generated@@391 $generated@@155 ($generated@@513 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@551 ($generated@@391 $generated@@155 ($generated@@513 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@313 $generated@@137 $generated@@137)) (= (type $generated@@622) $generated@@67)) (= (type $generated@@623) $generated@@67)) ($generated@@151 $generated@@621 ($generated@@419 $generated@@622 $generated@@623))) (and (and ($generated@@151 ($generated@@311 $generated@@621) ($generated@@259 $generated@@622)) ($generated@@151 ($generated@@355 $generated@@621) ($generated@@259 $generated@@623))) ($generated@@151 ($generated@@390 $generated@@621) ($generated@@259 ($generated@@154 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@151 $generated@@621 ($generated@@419 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@331 $generated@@137 $generated@@137)) (= (type $generated@@625) $generated@@67)) (= (type $generated@@626) $generated@@67)) ($generated@@151 $generated@@624 ($generated@@427 $generated@@625 $generated@@626))) (and (and ($generated@@151 ($generated@@329 $generated@@624) ($generated@@264 $generated@@625)) ($generated@@151 ($generated@@366 $generated@@624) ($generated@@264 $generated@@626))) ($generated@@151 ($generated@@401 $generated@@624) ($generated@@264 ($generated@@154 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@151 $generated@@624 ($generated@@427 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@151 $generated@@627 $generated@@46))
 :pattern ( ($generated@@151 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@151 $generated@@628 $generated@@47))
 :pattern ( ($generated@@151 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@151 $generated@@629 $generated@@44))
 :pattern ( ($generated@@151 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@466) ($generated@@151 $generated@@630 $generated@@45))
 :pattern ( ($generated@@151 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@137) ($generated@@151 $generated@@631 $generated@@48))
 :pattern ( ($generated@@151 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(assert  (and (and (and (and (= (type $generated@@632) ($generated@@175 $generated@@80 $generated@@4)) (= (type $generated@@633) $generated@@80)) (= (type $generated@@634) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@637) ($generated@@175 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@638  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@347 ($generated@@136 ($generated@@269 $generated@@275)) ($generated@@306 $generated@@137)))))
(let (($generated@@639  (=> (= $generated@@632 ($generated@@229 $generated@@633 $generated@@634 $generated@@60 false)) (=> (and (and (and ($generated@@276 $generated@@635) ($generated@@636 $generated@@635)) (and $generated@@274 (let (($generated@@640 $generated@@241))
 (and ($generated@@254 $generated@@640) (=> ($generated@@253 ($generated@@143 $generated@@144) $generated@@640) ($generated@@141 $generated@@640)))))) (and (and (let (($generated@@641 $generated@@241))
($generated@@253 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@641)) (let (($generated@@642 $generated@@241))
($generated@@347 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@642) ($generated@@306 $generated@@137)))) (and (= $generated@@634 $generated@@635) $generated@@274))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@139 $generated@@241 $generated@@140)) (=> ($generated@@139 $generated@@241 $generated@@140) (=> (and (and (= $generated@@275 $generated@@241) $generated@@274) (and ($generated@@139 $generated@@275 $generated@@140) (= (ControlFlow 0 5) 4))) $generated@@638)))))))
(let (($generated@@643  (=> (and ($generated@@139 $generated@@275 $generated@@140) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@644  (=> (= $generated@@637 ($generated@@174 $generated@@633 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@643) (=> (= (ControlFlow 0 7) 5) $generated@@639)))))
(let (($generated@@645  (=> (and (and ($generated@@276 $generated@@634) ($generated@@636 $generated@@634)) (and (= 3 $generated@@135) (= (ControlFlow 0 8) 7))) $generated@@644)))
$generated@@645))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U Int) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U Int) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (Int) Int)
(declare-fun $generated@@268 (T@U Int) Bool)
(declare-fun $generated@@269 (T@U Int) Bool)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Bool)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@U T@U) T@U)
(declare-fun $generated@@330 (T@U T@U) Bool)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@441 (T@T T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@U T@U) T@U)
(declare-fun $generated@@492 (T@T) T@U)
(declare-fun $generated@@516 () T@T)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@563 (T@U Int) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@601 (T@U) Int)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@676 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@136 $generated@@146)) ($generated@@79 $generated@@137 $generated@@2))
 :pattern ( ($generated@@136 $generated@@146))
))) (= (type $generated@@140) $generated@@67)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@142 $generated@@147 $generated@@148)) ($generated@@79 $generated@@137 $generated@@2))
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@145) 15)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@143 $generated@@149)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@149))
))) (= (type $generated@@144) $generated@@145)))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@137) (or ($generated@@138 $generated@@150) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@150 $generated@@140)))) (and ($generated@@141 $generated@@150) (= ($generated@@136 $generated@@150) ($generated@@142 ($generated@@143 $generated@@144) $generated@@150))))
 :pattern ( ($generated@@136 $generated@@150))
))))
(assert  (and (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Int) ) (! (= (type ($generated@@151 $generated@@153 $generated@@154 $generated@@155)) $generated@@137)
 :pattern ( ($generated@@151 $generated@@153 $generated@@154 $generated@@155))
)) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@152 $generated@@156)) $generated@@145)
 :pattern ( ($generated@@152 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Int) ) (!  (=> (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@137)) (= ($generated@@151 $generated@@157 $generated@@158 $generated@@159) ($generated@@151 $generated@@144 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@151 ($generated@@152 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@160 $generated@@161 ($generated@@78 0)))
 :pattern ( ($generated@@160 $generated@@161 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@164) 16) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@160 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@160 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@137)
 :pattern ( ($generated@@171 $generated@@173))
)) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@137)
 :pattern ( ($generated@@172 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@164) (= (type $generated@@176) $generated@@164)) true) (= ($generated@@170 $generated@@175 $generated@@176)  (and (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)) (= ($generated@@172 $generated@@175) ($generated@@172 $generated@@176)))))
 :pattern ( ($generated@@170 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@160 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@160 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 17)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@70 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@80) (= (type $generated@@244) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@245) ($generated@@69 $generated@@4))) (= (type $generated@@247) $generated@@80)) (= (type $generated@@248) ($generated@@69 $generated@@249))) (= ($generated@@0 ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (= (type $generated@@251) $generated@@67))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@137) (= (type $generated@@253) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 $generated@@252 $generated@@140 $generated@@253) ($generated@@250 $generated@@252 $generated@@251 $generated@@253)))
 :pattern ( ($generated@@250 $generated@@252 $generated@@140 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@255 $generated@@256)) $generated@@164)
 :pattern ( ($generated@@254 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@67) (= (type $generated@@258) $generated@@67)) (= (type $generated@@259) $generated@@137)) (= (type $generated@@260) $generated@@137)) (= ($generated@@160 ($generated@@254 $generated@@259 $generated@@260) ($generated@@163 $generated@@257 $generated@@258))  (and ($generated@@139 $generated@@259 $generated@@257) ($generated@@139 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@160 ($generated@@254 $generated@@259 $generated@@260) ($generated@@163 $generated@@257 $generated@@258)))
)))
(assert  (=> true (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@145) (= (type $generated@@264) $generated@@137)) (or ($generated@@262 $generated@@264) ($generated@@139 $generated@@264 $generated@@251))) true)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
))))
(assert  (and (forall (($generated@@270 T@U) ($generated@@271 Int) ) (! (= (type ($generated@@265 $generated@@270 $generated@@271)) $generated@@137)
 :pattern ( ($generated@@265 $generated@@270 $generated@@271))
)) (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@266 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@274 T@U) ($generated@@275 Int) ) (!  (=> (and (= (type $generated@@274) $generated@@137) (or ($generated@@268 ($generated@@266 $generated@@274) ($generated@@267 $generated@@275)) (and (not (= 3 $generated@@135)) ($generated@@139 $generated@@274 $generated@@140)))) (and ($generated@@269 ($generated@@266 $generated@@274) ($generated@@267 $generated@@275)) (= ($generated@@265 ($generated@@266 $generated@@274) ($generated@@267 $generated@@275)) ($generated@@151 ($generated@@143 $generated@@144) ($generated@@266 $generated@@274) ($generated@@267 $generated@@275)))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@266 $generated@@274) ($generated@@267 $generated@@275)))
))))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@82 (type $generated@@277))))
(= (type ($generated@@276 $generated@@277 $generated@@278)) ($generated@@79 $generated@@279 $generated@@2)))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (and (= (type $generated@@280) ($generated@@79 $generated@@283 $generated@@2)) (= (type $generated@@281) ($generated@@79 $generated@@283 $generated@@2))) (= ($generated ($generated@@84 ($generated@@276 $generated@@280 $generated@@281) $generated@@282)) (+ ($generated ($generated@@84 $generated@@280 $generated@@282)) ($generated ($generated@@84 $generated@@281 $generated@@282))))))
 :pattern ( ($generated@@84 ($generated@@276 $generated@@280 $generated@@281) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@164) (= (type $generated@@285) $generated@@164)) (= ($generated@@170 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@170 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@67)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@289) $generated@@67)) (= ($generated@@160 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@137) ($generated@@0 ($generated@@84 $generated@@288 $generated@@290))) ($generated@@139 $generated@@290 $generated@@289))
 :pattern ( ($generated@@84 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@160 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@67)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@294) $generated@@67)) (= ($generated@@160 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@137) ($generated@@0 ($generated@@84 $generated@@293 $generated@@295))) ($generated@@139 $generated@@295 $generated@@294))
 :pattern ( ($generated@@84 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@160 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@267 $generated@@296) $generated@@296)
 :pattern ( ($generated@@267 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (= ($generated@@266 $generated@@297) $generated@@297)
 :pattern ( ($generated@@266 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) $generated@@67)) (= (type $generated@@301) $generated@@137)) (= (type $generated@@302) $generated@@137)) (= (type $generated@@303) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@298 $generated@@303)) (= ($generated@@77 ($generated@@254 $generated@@301 $generated@@302) ($generated@@163 $generated@@299 $generated@@300) $generated@@303)  (and ($generated@@250 $generated@@301 $generated@@299 $generated@@303) ($generated@@250 $generated@@302 $generated@@300 $generated@@303))))
 :pattern ( ($generated@@77 ($generated@@254 $generated@@301 $generated@@302) ($generated@@163 $generated@@299 $generated@@300) $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@71)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@164) (= ($generated@@162 $generated@@306) (= ($generated@@304 $generated@@306) $generated@@61)))
 :pattern ( ($generated@@162 $generated@@306))
)))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@137) (or ($generated@@138 ($generated@@266 $generated@@307)) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@307 $generated@@140)))) (and ($generated@@141 ($generated@@266 $generated@@307)) (= ($generated@@136 ($generated@@266 $generated@@307)) ($generated@@142 ($generated@@143 $generated@@144) ($generated@@266 $generated@@307)))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@266 $generated@@307)))
))))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@137) (or ($generated@@138 $generated@@308) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@308 $generated@@140)))) ($generated@@160 ($generated@@136 $generated@@308) ($generated@@177 $generated@@46)))
 :pattern ( ($generated@@136 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@164) ($generated@@162 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@137) (= (type $generated@@311) $generated@@137)) (= $generated@@309 ($generated@@254 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@162 $generated@@309))
)))
(assert  (and (and (forall (($generated@@316 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@316)) 18)) (forall (($generated@@317 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@314 $generated@@317))
))) (forall (($generated@@318 T@T) ) (! (= (type ($generated@@312 $generated@@318)) ($generated@@314 $generated@@318))
 :pattern ( ($generated@@312 $generated@@318))
))))
(assert (forall (($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@319)) 0)
 :pattern ( ($generated@@312 $generated@@319))
)))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@320 T@U) ($generated@@321 Int) ) (!  (=> (and (= (type $generated@@320) $generated@@137) (or ($generated@@268 $generated@@320 $generated@@321) (and (not (= 3 $generated@@135)) ($generated@@139 $generated@@320 $generated@@140)))) (and ($generated@@269 $generated@@320 $generated@@321) (= ($generated@@265 $generated@@320 $generated@@321) ($generated@@151 ($generated@@143 $generated@@144) $generated@@320 $generated@@321))))
 :pattern ( ($generated@@265 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= (type ($generated@@323 $generated@@324 $generated@@325)) ($generated@@79 $generated@@326 $generated@@2)))
 :pattern ( ($generated@@323 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (! (let (($generated@@329 (type $generated@@328)))
 (=> (= (type $generated@@327) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@322 ($generated@@323 $generated@@327 $generated@@328)) (+ ($generated@@322 $generated@@327) 1))))
 :pattern ( ($generated@@322 ($generated@@323 $generated@@327 $generated@@328)))
)))
(assert  (and (forall (($generated@@333 T@T) ) (! (= (type ($generated@@331 $generated@@333)) ($generated@@79 $generated@@333 $generated@@2))
 :pattern ( ($generated@@331 $generated@@333))
)) (forall (($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@334)) $generated@@137)
 :pattern ( ($generated@@332 $generated@@334))
))))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@335 T@U) ($generated@@336 Int) ) (!  (=> (and (= (type $generated@@335) $generated@@137) (or ($generated@@268 $generated@@335 $generated@@336) (and (not (= 3 $generated@@135)) ($generated@@139 $generated@@335 $generated@@140)))) (and ($generated@@330 ($generated@@136 ($generated@@265 $generated@@335 $generated@@336)) ($generated@@276 ($generated@@136 $generated@@335) ($generated@@323 ($generated@@331 $generated@@137) ($generated@@332 ($generated@@8 $generated@@336))))) ($generated@@139 ($generated@@265 $generated@@335 $generated@@336) $generated@@140)))
 :pattern ( ($generated@@265 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@67) (= (type $generated@@339) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@332 $generated@@337) $generated@@338 $generated@@339) ($generated@@77 $generated@@337 $generated@@338 $generated@@339)))
 :pattern ( ($generated@@250 ($generated@@332 $generated@@337) $generated@@338 $generated@@339))
)))
(assert  (=> true (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@340) $generated@@145) (= (type $generated@@341) $generated@@137)) (or ($generated@@141 $generated@@341) ($generated@@139 $generated@@341 $generated@@251))) ($generated@@160 ($generated@@142 $generated@@340 $generated@@341) ($generated@@177 $generated@@46)))
 :pattern ( ($generated@@142 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@82 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@79 $generated@@343 $generated@@2)) (and (= (= ($generated@@322 $generated@@342) 0) (= $generated@@342 ($generated@@331 $generated@@343))) (=> (not (= ($generated@@322 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@84 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@322 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@79 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@84 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@84 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@79 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@84 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@84 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@82 (type $generated@@381))))
 (=> (and (= (type $generated@@381) ($generated@@79 $generated@@383 $generated@@2)) (= (type $generated@@382) ($generated@@79 $generated@@383 $generated@@2))) (= ($generated@@322 ($generated@@276 $generated@@381 $generated@@382)) (+ ($generated@@322 $generated@@381) ($generated@@322 $generated@@382)))))
 :pattern ( ($generated@@322 ($generated@@276 $generated@@381 $generated@@382)))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@82 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@79 $generated@@385 $generated@@2)) (= ($generated@@178 $generated@@384) (forall (($generated@@386 T@U) ) (!  (=> (= (type $generated@@386) $generated@@385) (and (<= 0 ($generated ($generated@@84 $generated@@384 $generated@@386))) (<= ($generated ($generated@@84 $generated@@384 $generated@@386)) ($generated@@322 $generated@@384))))
 :pattern ( ($generated@@84 $generated@@384 $generated@@386))
)))))
 :pattern ( ($generated@@178 $generated@@384))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
 (=> (= (type $generated@@387) ($generated@@79 $generated@@389 $generated@@2)) (= ($generated ($generated@@84 ($generated@@323 $generated@@387 $generated@@388) $generated@@388)) (+ ($generated ($generated@@84 $generated@@387 $generated@@388)) 1))))
 :pattern ( ($generated@@323 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@391)))
 (=> (and (and (= (type $generated@@390) ($generated@@79 $generated@@393 $generated@@2)) (= (type $generated@@392) $generated@@393)) (< 0 ($generated ($generated@@84 $generated@@390 $generated@@392)))) (< 0 ($generated ($generated@@84 ($generated@@323 $generated@@390 $generated@@391) $generated@@392)))))
 :pattern ( ($generated@@323 $generated@@390 $generated@@391) ($generated@@84 $generated@@390 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@349 (type $generated@@394))))
(let (($generated@@396 ($generated@@348 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@347 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@346 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@345 $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@349 (type $generated@@399))))
(= (type ($generated@@398 $generated@@399)) ($generated@@79 $generated@@400 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@349 (type $generated@@401))))
(let (($generated@@403 ($generated@@348 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@347 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@346 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@402) ($generated@@0 ($generated@@84 ($generated@@398 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@398 $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@367 (type $generated@@405))))
(let (($generated@@407 ($generated@@366 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@365 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@364 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@363 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@367 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@79 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@367 (type $generated@@412))))
(let (($generated@@414 ($generated@@366 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@365 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@364 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@84 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 Int) ) (!  (=> (and (= (type $generated@@416) $generated@@145) (= (type $generated@@417) $generated@@137)) (= ($generated@@151 ($generated@@143 $generated@@416) $generated@@417 $generated@@418) ($generated@@151 $generated@@416 $generated@@417 $generated@@418)))
 :pattern ( ($generated@@151 ($generated@@143 $generated@@416) $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@420)))
 (=> (and (= (type $generated@@419) ($generated@@79 $generated@@422 $generated@@2)) (= (type $generated@@421) $generated@@422)) (= (< 0 ($generated ($generated@@84 ($generated@@323 $generated@@419 $generated@@420) $generated@@421)))  (or (= $generated@@421 $generated@@420) (< 0 ($generated ($generated@@84 $generated@@419 $generated@@421)))))))
 :pattern ( ($generated@@84 ($generated@@323 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@424) $generated@@67)) (= ($generated@@160 $generated@@423 ($generated@@177 $generated@@424)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@137) (< 0 ($generated ($generated@@84 $generated@@423 $generated@@425)))) ($generated@@139 $generated@@425 $generated@@424))
 :pattern ( ($generated@@84 $generated@@423 $generated@@425))
))))
 :pattern ( ($generated@@160 $generated@@423 ($generated@@177 $generated@@424)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@82 (type $generated@@426))))
 (=> (and (= (type $generated@@426) ($generated@@79 $generated@@428 $generated@@2)) (= (type $generated@@427) ($generated@@79 $generated@@428 $generated@@2))) (= ($generated@@330 $generated@@426 $generated@@427) (forall (($generated@@429 T@U) ) (!  (=> (= (type $generated@@429) $generated@@428) (= ($generated ($generated@@84 $generated@@426 $generated@@429)) ($generated ($generated@@84 $generated@@427 $generated@@429))))
 :pattern ( ($generated@@84 $generated@@426 $generated@@429))
 :pattern ( ($generated@@84 $generated@@427 $generated@@429))
)))))
 :pattern ( ($generated@@330 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@430 ($generated@@286 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@137) ($generated@@0 ($generated@@84 $generated@@430 $generated@@433))) ($generated@@250 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@84 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@77 $generated@@430 ($generated@@286 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (= (type $generated@@434) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@435) $generated@@67)) (= (type $generated@@436) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@434 ($generated@@291 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@137) ($generated@@0 ($generated@@84 $generated@@434 $generated@@437))) ($generated@@250 $generated@@437 $generated@@435 $generated@@436))
 :pattern ( ($generated@@84 $generated@@434 $generated@@437))
))))
 :pattern ( ($generated@@77 $generated@@434 ($generated@@291 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(= ($generated ($generated@@84 ($generated@@331 $generated@@439) $generated@@438)) 0))
 :pattern ( (let (($generated@@439 (type $generated@@438)))
($generated@@84 ($generated@@331 $generated@@439) $generated@@438)))
)))
(assert  (and (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@440 $generated@@443)) ($generated@@79 $generated@@137 $generated@@4))
 :pattern ( ($generated@@440 $generated@@443))
)) (forall (($generated@@444 T@T) ($generated@@445 T@U) ) (! (= (type ($generated@@441 $generated@@444 $generated@@445)) $generated@@444)
 :pattern ( ($generated@@441 $generated@@444 $generated@@445))
))) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@349 (type $generated@@446))))
(let (($generated@@448 ($generated@@348 (type $generated@@446))))
(= (type ($generated@@442 $generated@@446)) ($generated@@79 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@442 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@347 $generated@@137 $generated@@137)) (= (type $generated@@450) $generated@@137)) (= ($generated@@0 ($generated@@84 ($generated@@440 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@84 ($generated@@345 $generated@@449) ($generated@@171 ($generated@@441 $generated@@164 $generated@@450)))) (= ($generated@@84 ($generated@@442 $generated@@449) ($generated@@171 ($generated@@441 $generated@@164 $generated@@450))) ($generated@@172 ($generated@@441 $generated@@164 $generated@@450))))))
 :pattern ( ($generated@@84 ($generated@@440 $generated@@449) $generated@@450))
)))
(assert  (and (forall (($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@453)) ($generated@@79 $generated@@137 $generated@@4))
 :pattern ( ($generated@@451 $generated@@453))
)) (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@367 (type $generated@@454))))
(let (($generated@@456 ($generated@@366 (type $generated@@454))))
(= (type ($generated@@452 $generated@@454)) ($generated@@79 $generated@@456 $generated@@455))))
 :pattern ( ($generated@@452 $generated@@454))
))))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) ($generated@@365 $generated@@137 $generated@@137)) (= (type $generated@@458) $generated@@137)) (= ($generated@@0 ($generated@@84 ($generated@@451 $generated@@457) $generated@@458))  (and ($generated@@0 ($generated@@84 ($generated@@363 $generated@@457) ($generated@@171 ($generated@@441 $generated@@164 $generated@@458)))) (= ($generated@@84 ($generated@@452 $generated@@457) ($generated@@171 ($generated@@441 $generated@@164 $generated@@458))) ($generated@@172 ($generated@@441 $generated@@164 $generated@@458))))))
 :pattern ( ($generated@@84 ($generated@@451 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@348 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@347 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@84 ($generated@@398 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@84 ($generated@@345 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@84 ($generated@@442 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@459) $generated@@463))
 :pattern ( ($generated@@84 ($generated@@442 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
(let (($generated@@467 ($generated@@366 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@365 $generated@@467 $generated@@466)) (= ($generated@@0 ($generated@@84 ($generated@@409 $generated@@464) $generated@@465)) (exists (($generated@@468 T@U) ) (!  (and (= (type $generated@@468) $generated@@467) (and ($generated@@0 ($generated@@84 ($generated@@363 $generated@@464) $generated@@468)) (= $generated@@465 ($generated@@84 ($generated@@452 $generated@@464) $generated@@468))))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@464) $generated@@468))
 :pattern ( ($generated@@84 ($generated@@452 $generated@@464) $generated@@468))
))))))
 :pattern ( ($generated@@84 ($generated@@409 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) ($generated@@347 $generated@@137 $generated@@137)) (= (type $generated@@473) $generated@@67)) (= (type $generated@@474) $generated@@67)) (= (type $generated@@475) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@472) $generated@@476))) (and ($generated@@250 ($generated@@84 ($generated@@442 $generated@@472) $generated@@476) $generated@@474 $generated@@475) ($generated@@250 $generated@@476 $generated@@473 $generated@@475)))
 :pattern ( ($generated@@84 ($generated@@442 $generated@@472) $generated@@476))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@472) $generated@@476))
))))
 :pattern ( ($generated@@77 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (= (type $generated@@480) ($generated@@365 $generated@@137 $generated@@137)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) $generated@@67)) (= (type $generated@@483) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@480) $generated@@484))) (and ($generated@@250 ($generated@@84 ($generated@@452 $generated@@480) $generated@@484) $generated@@482 $generated@@483) ($generated@@250 $generated@@484 $generated@@481 $generated@@483)))
 :pattern ( ($generated@@84 ($generated@@452 $generated@@480) $generated@@484))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@480) $generated@@484))
))))
 :pattern ( ($generated@@77 $generated@@480 ($generated@@477 $generated@@481 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) (= (type $generated@@486) $generated@@137)) (= ($generated@@261 $generated@@485 $generated@@486) ($generated@@261 $generated@@144 $generated@@486)))
 :pattern ( ($generated@@261 ($generated@@152 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@82 (type $generated@@487))))
 (=> (and (and (= (type $generated@@487) ($generated@@79 $generated@@489 $generated@@2)) (= (type $generated@@488) ($generated@@79 $generated@@489 $generated@@2))) ($generated@@330 $generated@@487 $generated@@488)) (= $generated@@487 $generated@@488)))
 :pattern ( ($generated@@330 $generated@@487 $generated@@488))
)))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (!  (=> (and (= (type $generated@@490) $generated@@137) (or ($generated@@268 $generated@@490 ($generated@@267 $generated@@491)) (and (not (= 3 $generated@@135)) ($generated@@139 $generated@@490 $generated@@140)))) (and ($generated@@269 $generated@@490 ($generated@@267 $generated@@491)) (= ($generated@@265 $generated@@490 ($generated@@267 $generated@@491)) ($generated@@151 ($generated@@143 $generated@@144) $generated@@490 ($generated@@267 $generated@@491)))))
 :weight 3
 :pattern ( ($generated@@265 $generated@@490 ($generated@@267 $generated@@491)))
))))
(assert (forall (($generated@@493 T@T) ) (! (= (type ($generated@@492 $generated@@493)) ($generated@@79 $generated@@493 $generated@@4))
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@367 (type $generated@@494))))
(let (($generated@@496 ($generated@@366 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@365 $generated@@496 $generated@@495)) (= (= $generated@@494 ($generated@@364 $generated@@496 $generated@@495)) (= ($generated@@363 $generated@@494) ($generated@@492 $generated@@496))))))
 :pattern ( ($generated@@363 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@367 (type $generated@@497))))
(let (($generated@@499 ($generated@@366 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@365 $generated@@499 $generated@@498)) (= (= $generated@@497 ($generated@@364 $generated@@499 $generated@@498)) (= ($generated@@409 $generated@@497) ($generated@@492 $generated@@498))))))
 :pattern ( ($generated@@409 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@367 (type $generated@@500))))
(let (($generated@@502 ($generated@@366 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@365 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@364 $generated@@502 $generated@@501)) (= ($generated@@451 $generated@@500) ($generated@@492 $generated@@137))))))
 :pattern ( ($generated@@451 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@349 (type $generated@@503))))
(let (($generated@@505 ($generated@@348 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@347 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@346 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@137) (= (type $generated@@507) $generated@@137)) ($generated@@0 ($generated@@84 ($generated@@440 $generated@@503) ($generated@@332 ($generated@@254 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@440 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@367 (type $generated@@508))))
(let (($generated@@510 ($generated@@366 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@365 $generated@@510 $generated@@509)) (or (= $generated@@508 ($generated@@364 $generated@@510 $generated@@509)) (exists (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (and (and (= (type $generated@@511) $generated@@137) (= (type $generated@@512) $generated@@137)) ($generated@@0 ($generated@@84 ($generated@@451 $generated@@508) ($generated@@332 ($generated@@254 $generated@@511 $generated@@512)))))
 :no-pattern (type $generated@@511)
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@511)
 :no-pattern ($generated@@0 $generated@@511)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
))))))
 :pattern ( ($generated@@451 $generated@@508))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@137) ($generated@@139 $generated@@513 $generated@@46)) (and (= ($generated@@332 ($generated@@441 $generated@@2 $generated@@513)) $generated@@513) ($generated@@160 ($generated@@441 $generated@@2 $generated@@513) $generated@@46)))
 :pattern ( ($generated@@139 $generated@@513 $generated@@46))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@137) ($generated@@139 $generated@@514 $generated@@47)) (and (= ($generated@@332 ($generated@@441 $generated@@3 $generated@@514)) $generated@@514) ($generated@@160 ($generated@@441 $generated@@3 $generated@@514) $generated@@47)))
 :pattern ( ($generated@@139 $generated@@514 $generated@@47))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@137) ($generated@@139 $generated@@515 $generated@@44)) (and (= ($generated@@332 ($generated@@441 $generated@@4 $generated@@515)) $generated@@515) ($generated@@160 ($generated@@441 $generated@@4 $generated@@515) $generated@@44)))
 :pattern ( ($generated@@139 $generated@@515 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@516) 21))
(assert (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@137) ($generated@@139 $generated@@517 $generated@@45)) (and (= ($generated@@332 ($generated@@441 $generated@@516 $generated@@517)) $generated@@517) ($generated@@160 ($generated@@441 $generated@@516 $generated@@517) $generated@@45)))
 :pattern ( ($generated@@139 $generated@@517 $generated@@45))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@137)) (= ($generated@@261 ($generated@@143 $generated@@518) $generated@@519) ($generated@@261 $generated@@518 $generated@@519)))
 :pattern ( ($generated@@261 ($generated@@143 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@139 ($generated@@332 $generated@@520) $generated@@521) ($generated@@160 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@139 ($generated@@332 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@82 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@79 $generated@@523 $generated@@2)) (<= 0 ($generated@@322 $generated@@522))))
 :pattern ( ($generated@@322 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 ($generated@@315 (type $generated@@524))))
 (=> (= (type $generated@@524) ($generated@@314 $generated@@525)) (<= 0 ($generated@@313 $generated@@524))))
 :pattern ( ($generated@@313 $generated@@524))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@67) (= (type $generated@@529) $generated@@67)) (= ($generated@@526 ($generated@@469 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@469 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= ($generated@@530 ($generated@@469 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@469 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (= ($generated@@75 ($generated@@469 $generated@@534 $generated@@535)) $generated@@58))
 :pattern ( ($generated@@469 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= ($generated@@536 ($generated@@477 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@477 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@67)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (= ($generated@@540 ($generated@@477 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@477 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= ($generated@@75 ($generated@@477 $generated@@544 $generated@@545)) $generated@@59))
 :pattern ( ($generated@@477 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@137) (= (type $generated@@547) $generated@@137)) (= ($generated@@304 ($generated@@254 $generated@@546 $generated@@547)) $generated@@61))
 :pattern ( ($generated@@254 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@67) (= (type $generated@@551) $generated@@67)) (= ($generated@@548 ($generated@@163 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@163 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (= ($generated@@552 ($generated@@163 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@163 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@137) (= (type $generated@@557) $generated@@137)) (= ($generated@@171 ($generated@@254 $generated@@556 $generated@@557)) $generated@@556))
 :pattern ( ($generated@@254 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@137) (= (type $generated@@559) $generated@@137)) (= ($generated@@172 ($generated@@254 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@254 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@137)) (= ($generated@@142 $generated@@560 $generated@@561) ($generated@@142 $generated@@144 $generated@@561)))
 :pattern ( ($generated@@142 ($generated@@152 $generated@@560) $generated@@561))
)))
(assert  (and (forall (($generated@@564 T@U) ) (! (= (type ($generated@@562 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@562 $generated@@564))
)) (forall (($generated@@565 T@U) ($generated@@566 Int) ) (! (let (($generated@@567 ($generated@@315 (type $generated@@565))))
(= (type ($generated@@563 $generated@@565 $generated@@566)) $generated@@567))
 :pattern ( ($generated@@563 $generated@@565 $generated@@566))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@314 $generated@@137)) (= (type $generated@@569) $generated@@67)) (= (type $generated@@570) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@568 ($generated@@562 $generated@@569) $generated@@570) (forall (($generated@@571 Int) ) (!  (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@313 $generated@@568))) ($generated@@250 ($generated@@563 $generated@@568 $generated@@571) $generated@@569 $generated@@570))
 :pattern ( ($generated@@563 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@77 $generated@@568 ($generated@@562 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@572 ($generated@@78 $generated@@573)) $generated@@573)
 :pattern ( ($generated@@78 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@67)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@67) (= ($generated@@574 ($generated@@286 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@286 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@67) (= ($generated@@75 ($generated@@286 $generated@@577)) $generated@@54))
 :pattern ( ($generated@@286 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@67)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@67) (= ($generated@@578 ($generated@@291 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@291 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@67) (= ($generated@@75 ($generated@@291 $generated@@581)) $generated@@55))
 :pattern ( ($generated@@291 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@67)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@67) (= ($generated@@582 ($generated@@177 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@177 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@585)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@67)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@67) (= ($generated@@586 ($generated@@562 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@562 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@67) (= ($generated@@75 ($generated@@562 $generated@@589)) $generated@@57))
 :pattern ( ($generated@@562 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
(= ($generated@@441 $generated@@591 ($generated@@332 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@332 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@347 $generated@@137 $generated@@137)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) (= ($generated@@160 $generated@@592 ($generated@@469 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@345 $generated@@592) $generated@@595))) (and ($generated@@139 ($generated@@84 ($generated@@442 $generated@@592) $generated@@595) $generated@@594) ($generated@@139 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@84 ($generated@@442 $generated@@592) $generated@@595))
 :pattern ( ($generated@@84 ($generated@@345 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@160 $generated@@592 ($generated@@469 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@365 $generated@@137 $generated@@137)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) (= ($generated@@160 $generated@@596 ($generated@@477 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@363 $generated@@596) $generated@@599))) (and ($generated@@139 ($generated@@84 ($generated@@452 $generated@@596) $generated@@599) $generated@@598) ($generated@@139 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@84 ($generated@@452 $generated@@596) $generated@@599))
 :pattern ( ($generated@@84 ($generated@@363 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@160 $generated@@596 ($generated@@477 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@137) (= (type $generated@@603) $generated@@137)) (< ($generated@@600 $generated@@602) ($generated@@601 ($generated@@254 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@254 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@137) (= (type $generated@@605) $generated@@137)) (< ($generated@@600 $generated@@605) ($generated@@601 ($generated@@254 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@254 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@145) (= (type $generated@@607) $generated@@137)) (= ($generated@@142 ($generated@@143 $generated@@606) $generated@@607) ($generated@@142 $generated@@606 $generated@@607)))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@606) $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@137) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) $generated@@67)) ($generated@@139 $generated@@608 ($generated@@469 $generated@@609 $generated@@610))) (and (= ($generated@@332 ($generated@@441 ($generated@@347 $generated@@137 $generated@@137) $generated@@608)) $generated@@608) ($generated@@160 ($generated@@441 ($generated@@347 $generated@@137 $generated@@137) $generated@@608) ($generated@@469 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@139 $generated@@608 ($generated@@469 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@137) (= (type $generated@@612) $generated@@67)) (= (type $generated@@613) $generated@@67)) ($generated@@139 $generated@@611 ($generated@@477 $generated@@612 $generated@@613))) (and (= ($generated@@332 ($generated@@441 ($generated@@365 $generated@@137 $generated@@137) $generated@@611)) $generated@@611) ($generated@@160 ($generated@@441 ($generated@@365 $generated@@137 $generated@@137) $generated@@611) ($generated@@477 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@139 $generated@@611 ($generated@@477 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@67) (= (type $generated@@615) $generated@@67)) (= (type $generated@@616) $generated@@137)) ($generated@@139 $generated@@616 ($generated@@163 $generated@@614 $generated@@615))) (and (= ($generated@@332 ($generated@@441 $generated@@164 $generated@@616)) $generated@@616) ($generated@@160 ($generated@@441 $generated@@164 $generated@@616) ($generated@@163 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@139 $generated@@616 ($generated@@163 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@617)))
 (not ($generated@@0 ($generated@@84 ($generated@@492 $generated@@618) $generated@@617))))
 :pattern ( (let (($generated@@618 (type $generated@@617)))
($generated@@84 ($generated@@492 $generated@@618) $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@72)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@67) (= (type $generated@@622) $generated@@67)) (and (= ($generated@@75 ($generated@@163 $generated@@621 $generated@@622)) $generated@@62) (= ($generated@@619 ($generated@@163 $generated@@621 $generated@@622)) $generated@@65)))
 :pattern ( ($generated@@163 $generated@@621 $generated@@622))
)))
(assert  (=> true (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (and (and (= (type $generated@@623) $generated@@145) (= (type $generated@@624) $generated@@137)) (or ($generated@@269 $generated@@624 $generated@@625) ($generated@@139 $generated@@624 $generated@@251))) ($generated@@139 ($generated@@151 $generated@@623 $generated@@624 $generated@@625) $generated@@251))
 :pattern ( ($generated@@151 $generated@@623 $generated@@624 $generated@@625))
))))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@164) (= ($generated@@600 ($generated@@332 $generated@@626)) ($generated@@601 $generated@@626)))
 :pattern ( ($generated@@600 ($generated@@332 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@137) ($generated@@139 $generated@@627 ($generated@@78 0))) (and (= ($generated@@332 ($generated@@441 $generated@@2 $generated@@627)) $generated@@627) ($generated@@160 ($generated@@441 ($generated@@79 $generated@@137 $generated@@4) $generated@@627) ($generated@@78 0))))
 :pattern ( ($generated@@139 $generated@@627 ($generated@@78 0)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@137) (= (type $generated@@629) $generated@@67)) ($generated@@139 $generated@@628 ($generated@@286 $generated@@629))) (and (= ($generated@@332 ($generated@@441 ($generated@@79 $generated@@137 $generated@@4) $generated@@628)) $generated@@628) ($generated@@160 ($generated@@441 ($generated@@79 $generated@@137 $generated@@4) $generated@@628) ($generated@@286 $generated@@629))))
 :pattern ( ($generated@@139 $generated@@628 ($generated@@286 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@137) (= (type $generated@@631) $generated@@67)) ($generated@@139 $generated@@630 ($generated@@291 $generated@@631))) (and (= ($generated@@332 ($generated@@441 ($generated@@79 $generated@@137 $generated@@4) $generated@@630)) $generated@@630) ($generated@@160 ($generated@@441 ($generated@@79 $generated@@137 $generated@@4) $generated@@630) ($generated@@291 $generated@@631))))
 :pattern ( ($generated@@139 $generated@@630 ($generated@@291 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@632) $generated@@137) (= (type $generated@@633) $generated@@67)) ($generated@@139 $generated@@632 ($generated@@177 $generated@@633))) (and (= ($generated@@332 ($generated@@441 ($generated@@79 $generated@@137 $generated@@2) $generated@@632)) $generated@@632) ($generated@@160 ($generated@@441 ($generated@@79 $generated@@137 $generated@@2) $generated@@632) ($generated@@177 $generated@@633))))
 :pattern ( ($generated@@139 $generated@@632 ($generated@@177 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@137) (= (type $generated@@635) $generated@@67)) ($generated@@139 $generated@@634 ($generated@@562 $generated@@635))) (and (= ($generated@@332 ($generated@@441 ($generated@@314 $generated@@137) $generated@@634)) $generated@@634) ($generated@@160 ($generated@@441 ($generated@@314 $generated@@137) $generated@@634) ($generated@@562 $generated@@635))))
 :pattern ( ($generated@@139 $generated@@634 ($generated@@562 $generated@@635)))
)))
(assert (= ($generated@@75 $generated@@251) $generated@@63))
(assert (= ($generated@@619 $generated@@251) $generated@@66))
(assert (= ($generated@@75 $generated@@140) $generated@@64))
(assert (= ($generated@@619 $generated@@140) $generated@@66))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@636) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@637) $generated@@67)) (= (type $generated@@638) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@636 ($generated@@177 $generated@@637) $generated@@638) (forall (($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@137) (< 0 ($generated ($generated@@84 $generated@@636 $generated@@639)))) ($generated@@250 $generated@@639 $generated@@637 $generated@@638))
 :pattern ( ($generated@@84 $generated@@636 $generated@@639))
))))
 :pattern ( ($generated@@77 $generated@@636 ($generated@@177 $generated@@637) $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@164) (= (type $generated@@641) $generated@@67)) (= (type $generated@@642) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@298 $generated@@642) (and ($generated@@162 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@67) ($generated@@77 $generated@@640 ($generated@@163 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@163 $generated@@641 $generated@@643) $generated@@642))
))))) ($generated@@250 ($generated@@171 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@250 ($generated@@171 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) $generated@@164) (= (type $generated@@645) $generated@@67)) (= (type $generated@@646) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@298 $generated@@646) (and ($generated@@162 $generated@@644) (exists (($generated@@647 T@U) ) (!  (and (= (type $generated@@647) $generated@@67) ($generated@@77 $generated@@644 ($generated@@163 $generated@@647 $generated@@645) $generated@@646))
 :pattern ( ($generated@@77 $generated@@644 ($generated@@163 $generated@@647 $generated@@645) $generated@@646))
))))) ($generated@@250 ($generated@@172 $generated@@644) $generated@@645 $generated@@646))
 :pattern ( ($generated@@250 ($generated@@172 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@649)))
 (=> (and (and (= (type $generated@@648) ($generated@@79 $generated@@651 $generated@@2)) (= (type $generated@@650) $generated@@651)) (not (= $generated@@649 $generated@@650))) (= ($generated ($generated@@84 $generated@@648 $generated@@650)) ($generated ($generated@@84 ($generated@@323 $generated@@648 $generated@@649) $generated@@650)))))
 :pattern ( ($generated@@323 $generated@@648 $generated@@649) ($generated@@84 $generated@@648 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@137) (= (type $generated@@653) $generated@@137)) (= ($generated@@254 ($generated@@266 $generated@@652) ($generated@@266 $generated@@653)) ($generated@@266 ($generated@@254 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@254 ($generated@@266 $generated@@652) ($generated@@266 $generated@@653)))
)))
(assert (forall (($generated@@654 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@267 $generated@@654))) ($generated@@266 ($generated@@332 ($generated@@8 $generated@@654))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@267 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ) (! (= ($generated@@332 ($generated@@266 $generated@@655)) ($generated@@266 ($generated@@332 $generated@@655)))
 :pattern ( ($generated@@332 ($generated@@266 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (! (let (($generated@@657 ($generated@@315 (type $generated@@656))))
 (=> (and (= (type $generated@@656) ($generated@@314 $generated@@657)) (= ($generated@@313 $generated@@656) 0)) (= $generated@@656 ($generated@@312 $generated@@657))))
 :pattern ( ($generated@@313 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 (type $generated@@659)))
 (=> (and (and (= (type $generated@@658) ($generated@@79 $generated@@661 $generated@@2)) (= (type $generated@@660) $generated@@2)) (<= 0 ($generated $generated@@660))) (= ($generated@@322 ($generated@@85 $generated@@658 $generated@@659 $generated@@660)) (+ (- ($generated@@322 $generated@@658) ($generated ($generated@@84 $generated@@658 $generated@@659))) ($generated $generated@@660)))))
 :pattern ( ($generated@@322 ($generated@@85 $generated@@658 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@137) (= ($generated@@139 $generated@@662 $generated@@140)  (and ($generated@@139 $generated@@662 $generated@@251) ($generated@@261 ($generated@@143 $generated@@144) $generated@@662))))
 :pattern ( ($generated@@139 $generated@@662 $generated@@140))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@664) $generated@@2)) ($generated@@77 $generated@@664 $generated@@46 $generated@@663))
 :pattern ( ($generated@@77 $generated@@664 $generated@@46 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@666) $generated@@3)) ($generated@@77 $generated@@666 $generated@@47 $generated@@665))
 :pattern ( ($generated@@77 $generated@@666 $generated@@47 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@668) $generated@@4)) ($generated@@77 $generated@@668 $generated@@44 $generated@@667))
 :pattern ( ($generated@@77 $generated@@668 $generated@@44 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@670) $generated@@516)) ($generated@@77 $generated@@670 $generated@@45 $generated@@669))
 :pattern ( ($generated@@77 $generated@@670 $generated@@45 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@672) $generated@@137)) ($generated@@77 $generated@@672 $generated@@48 $generated@@671))
 :pattern ( ($generated@@77 $generated@@672 $generated@@48 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@314 $generated@@137)) (= (type $generated@@674) $generated@@67)) (= ($generated@@160 $generated@@673 ($generated@@562 $generated@@674)) (forall (($generated@@675 Int) ) (!  (=> (and (<= 0 $generated@@675) (< $generated@@675 ($generated@@313 $generated@@673))) ($generated@@139 ($generated@@563 $generated@@673 $generated@@675) $generated@@674))
 :pattern ( ($generated@@563 $generated@@673 $generated@@675))
))))
 :pattern ( ($generated@@160 $generated@@673 ($generated@@562 $generated@@674)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 Int) ) (!  (=> (= (type $generated@@677) ($generated@@314 $generated@@137)) (=> (and (<= 0 $generated@@678) (< $generated@@678 ($generated@@313 $generated@@677))) (< ($generated@@601 ($generated@@441 $generated@@164 ($generated@@563 $generated@@677 $generated@@678))) ($generated@@676 $generated@@677))))
 :pattern ( ($generated@@601 ($generated@@441 $generated@@164 ($generated@@563 $generated@@677 $generated@@678))))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) ($generated@@347 $generated@@137 $generated@@137)) (= (type $generated@@680) $generated@@67)) (= (type $generated@@681) $generated@@67)) ($generated@@160 $generated@@679 ($generated@@469 $generated@@680 $generated@@681))) (and (and ($generated@@160 ($generated@@345 $generated@@679) ($generated@@286 $generated@@680)) ($generated@@160 ($generated@@398 $generated@@679) ($generated@@286 $generated@@681))) ($generated@@160 ($generated@@440 $generated@@679) ($generated@@286 ($generated@@163 $generated@@680 $generated@@681)))))
 :pattern ( ($generated@@160 $generated@@679 ($generated@@469 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) ($generated@@365 $generated@@137 $generated@@137)) (= (type $generated@@683) $generated@@67)) (= (type $generated@@684) $generated@@67)) ($generated@@160 $generated@@682 ($generated@@477 $generated@@683 $generated@@684))) (and (and ($generated@@160 ($generated@@363 $generated@@682) ($generated@@291 $generated@@683)) ($generated@@160 ($generated@@409 $generated@@682) ($generated@@291 $generated@@684))) ($generated@@160 ($generated@@451 $generated@@682) ($generated@@291 ($generated@@163 $generated@@683 $generated@@684)))))
 :pattern ( ($generated@@160 $generated@@682 ($generated@@477 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@2) ($generated@@160 $generated@@685 $generated@@46))
 :pattern ( ($generated@@160 $generated@@685 $generated@@46))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@3) ($generated@@160 $generated@@686 $generated@@47))
 :pattern ( ($generated@@160 $generated@@686 $generated@@47))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@4) ($generated@@160 $generated@@687 $generated@@44))
 :pattern ( ($generated@@160 $generated@@687 $generated@@44))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@516) ($generated@@160 $generated@@688 $generated@@45))
 :pattern ( ($generated@@160 $generated@@688 $generated@@45))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@137) ($generated@@160 $generated@@689 $generated@@48))
 :pattern ( ($generated@@160 $generated@@689 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 (T@U) Bool)
(declare-fun $generated@@697 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@690) $generated@@137) (= (type $generated@@694) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@692) ($generated@@184 $generated@@80 $generated@@4))) (= (type $generated@@693) $generated@@80)) (= (type $generated@@695) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@697) ($generated@@184 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@698  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@330 ($generated@@136 ($generated@@265 $generated@@690 $generated@@691)) ($generated@@276 ($generated@@136 $generated@@690) ($generated@@323 ($generated@@331 $generated@@137) ($generated@@332 ($generated@@8 $generated@@691))))))))
(let (($generated@@699  (=> (= $generated@@692 ($generated@@238 $generated@@693 $generated@@694 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@261 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@690)) (=> ($generated@@261 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@690) (=> (and ($generated@@298 $generated@@695) ($generated@@696 $generated@@695)) (=> (and (and (and ($generated@@269 $generated@@690 $generated@@691) (let (($generated@@700 ($generated@@151 ($generated@@143 $generated@@144) $generated@@690 $generated@@691)))
 (and ($generated@@262 $generated@@700) (=> ($generated@@261 ($generated@@143 $generated@@144) $generated@@700) (and ($generated@@141 $generated@@700) ($generated@@141 $generated@@690)))))) (and (let (($generated@@701 ($generated@@151 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@690 $generated@@691)))
($generated@@261 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@701)) (let (($generated@@702 ($generated@@151 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@690 $generated@@691)))
($generated@@330 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@702) ($generated@@276 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@690) ($generated@@323 ($generated@@331 $generated@@137) ($generated@@332 ($generated@@8 $generated@@691)))))))) (and (and (= $generated@@694 $generated@@695) ($generated@@250 $generated@@690 $generated@@251 $generated@@695)) (and ($generated@@77 ($generated@@8 $generated@@691) $generated@@46 $generated@@695) ($generated@@269 $generated@@690 $generated@@691)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@139 ($generated@@151 ($generated@@143 $generated@@144) $generated@@690 $generated@@691) $generated@@140)) (=> ($generated@@139 ($generated@@151 ($generated@@143 $generated@@144) $generated@@690 $generated@@691) $generated@@140) (=> (and (and (= ($generated@@265 $generated@@690 $generated@@691) ($generated@@151 ($generated@@143 $generated@@144) $generated@@690 $generated@@691)) ($generated@@269 $generated@@690 $generated@@691)) (and ($generated@@139 ($generated@@265 $generated@@690 $generated@@691) $generated@@140) (= (ControlFlow 0 6) 5))) $generated@@698))))))))))
(let (($generated@@703  (=> ($generated@@139 ($generated@@265 $generated@@690 $generated@@691) $generated@@140) (=> (and ($generated@@250 $generated@@690 $generated@@140 $generated@@694) ($generated@@77 ($generated@@8 $generated@@691) $generated@@46 $generated@@694)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@691) (= $generated@@691 $generated@@691))) (=> (or (<= 0 $generated@@691) (= $generated@@691 $generated@@691)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@690 $generated@@690) (= $generated@@691 $generated@@691)) (< $generated@@691 $generated@@691)))))))))
(let (($generated@@704  (=> (= $generated@@697 ($generated@@183 $generated@@693 $generated@@694 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@703) (=> (= (ControlFlow 0 9) 6) $generated@@699)))))
(let (($generated@@705  (=> (and (and (and ($generated@@298 $generated@@694) ($generated@@696 $generated@@694)) ($generated@@139 $generated@@690 $generated@@140)) (and (= 3 $generated@@135) (= (ControlFlow 0 10) 9))) $generated@@704)))
$generated@@705))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (Int) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@266 () Bool)
(declare-fun $generated@@267 () Bool)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@T) T@U)
(declare-fun $generated@@455 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert  (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@88 $generated@@89)) 12))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@84 ($generated@@83 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@83 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@85 ($generated@@83 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@83 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@85 (type $generated@@94))))
(= (type ($generated@@86 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@86 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@87 $generated@@97 $generated@@98 $generated@@99)) ($generated@@83 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@85 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@86 ($generated@@87 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@86 ($generated@@87 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@86 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@86 $generated@@111 $generated@@113)))
 :weight 0
)))) (forall (($generated@@114 T@U) ) (! (= (type ($generated@@76 $generated@@114)) ($generated@@83 $generated@@77 $generated@@2))
 :pattern ( ($generated@@76 $generated@@114))
))) (= (type $generated@@80) $generated@@67)) (forall (($generated@@115 T@U) ) (! (= (type ($generated@@82 $generated@@115)) ($generated@@83 $generated@@77 $generated@@2))
 :pattern ( ($generated@@82 $generated@@115))
))))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@116 T@U) ) (!  (=> (and (= (type $generated@@116) $generated@@77) (or ($generated@@78 $generated@@116) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@116 $generated@@80)))) (and ($generated@@81 $generated@@116) (= ($generated@@76 $generated@@116) ($generated@@82 $generated@@116))))
 :pattern ( ($generated@@76 $generated@@116))
))))
(assert (forall (($generated@@118 T@U) ) (! (= (type ($generated@@117 $generated@@118)) $generated@@68)
 :pattern ( ($generated@@117 $generated@@118))
)))
(assert (= ($generated@@117 $generated@@44) $generated@@49))
(assert (= ($generated@@117 $generated@@45) $generated@@50))
(assert (= ($generated@@117 $generated@@46) $generated@@51))
(assert (= ($generated@@117 $generated@@47) $generated@@52))
(assert (= ($generated@@117 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@121) 13) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@126))))
(= (type ($generated@@123 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@123 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@122) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@124 $generated@@128 $generated@@129 $generated@@130)) $generated@@122)
 :pattern ( ($generated@@124 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@70 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@123 ($generated@@124 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@123 ($generated@@124 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@123 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@123 ($generated@@124 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@123 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@120 $generated@@143)) $generated@@67)
 :pattern ( ($generated@@120 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@83 $generated@@121 $generated@@122))) ($generated@@119 $generated@@144 ($generated@@120 0) $generated@@145))
 :pattern ( ($generated@@119 $generated@@144 ($generated@@120 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@120 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@120 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@77)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@77)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@167) $generated@@67)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@121 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@70 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@121) (= (type $generated@@218) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@219) ($generated@@69 $generated@@4))) (= (type $generated@@221) $generated@@121)) (= (type $generated@@222) ($generated@@69 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@123 ($generated@@86 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@121 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@70 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@121) (= (type $generated@@230) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@231) ($generated@@69 $generated@@4))) (= (type $generated@@233) $generated@@121)) (= (type $generated@@234) ($generated@@69 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@123 ($generated@@86 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (= (type $generated@@237) $generated@@67))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@236 $generated@@238 $generated@@80 $generated@@239) ($generated@@236 $generated@@238 $generated@@237 $generated@@239)))
 :pattern ( ($generated@@236 $generated@@238 $generated@@80 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242)) $generated@@150)
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@77)) (= (type $generated@@246) $generated@@77)) (= ($generated@@146 ($generated@@240 $generated@@245 $generated@@246) ($generated@@149 $generated@@243 $generated@@244))  (and ($generated@@79 $generated@@245 $generated@@243) ($generated@@79 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@146 ($generated@@240 $generated@@245 $generated@@246) ($generated@@149 $generated@@243 $generated@@244)))
)))
(assert  (=> true (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@77) (or ($generated@@248 $generated@@249) ($generated@@79 $generated@@249 $generated@@237))) true)
 :pattern ( ($generated@@247 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@150) (= (type $generated@@251) $generated@@150)) (= ($generated@@156 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@156 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@146 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@77) ($generated@@0 ($generated@@86 $generated@@254 $generated@@256))) ($generated@@79 $generated@@256 $generated@@255))
 :pattern ( ($generated@@86 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@146 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@67)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@260) $generated@@67)) (= ($generated@@146 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@77) ($generated@@0 ($generated@@86 $generated@@259 $generated@@261))) ($generated@@79 $generated@@261 $generated@@260))
 :pattern ( ($generated@@86 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@146 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert  (and (= (type $generated@@268) $generated@@77) (= (type $generated@@269) $generated@@77)))
(assert  (=> (<= 3 $generated@@75) (=> (or $generated@@266 (not (= 3 $generated@@75))) (and $generated@@267 (= $generated@@268 $generated@@269)))))
(assert  (=> (<= 3 $generated@@75) (=> (or $generated@@266 (not (= 3 $generated@@75))) (and $generated@@267 (= $generated@@268 $generated@@269)))))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@77) (or ($generated@@78 ($generated@@262 $generated@@270)) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@270 $generated@@80)))) (and ($generated@@81 ($generated@@262 $generated@@270)) (= ($generated@@76 ($generated@@262 $generated@@270)) ($generated@@82 ($generated@@262 $generated@@270)))))
 :weight 3
 :pattern ( ($generated@@76 ($generated@@262 $generated@@270)))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) $generated@@67)) (= (type $generated@@274) $generated@@77)) (= (type $generated@@275) $generated@@77)) (= (type $generated@@276) ($generated@@83 $generated@@121 $generated@@122))) ($generated@@271 $generated@@276)) (= ($generated@@119 ($generated@@240 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@236 $generated@@274 $generated@@272 $generated@@276) ($generated@@236 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@119 ($generated@@240 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@71)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@150) (= ($generated@@148 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@279))
)))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@77) (or ($generated@@78 $generated@@280) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@280 $generated@@80)))) ($generated@@146 ($generated@@76 $generated@@280) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@76 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@150) ($generated@@148 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@77) (= (type $generated@@283) $generated@@77)) (= $generated@@281 ($generated@@240 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@148 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@77)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@67) (= (type $generated@@296) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@236 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@119 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@236 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@83 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@84 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@83 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@86 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (=> true (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@77) (or ($generated@@81 $generated@@303) ($generated@@79 $generated@@303 $generated@@237))) ($generated@@146 ($generated@@82 $generated@@303) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@82 $generated@@303))
))))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@83 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@86 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@86 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@83 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@86 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@86 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (=> (<= 3 $generated@@75) (=> (or $generated@@266 (not (= 3 $generated@@75))) (and ($generated@@340 ($generated@@76 ($generated@@262 $generated@@268)) ($generated@@298 $generated@@77)) ($generated@@79 $generated@@268 $generated@@80)))))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@84 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@83 $generated@@342 $generated@@2)) (= ($generated@@164 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@86 $generated@@341 $generated@@343))) (<= ($generated ($generated@@86 $generated@@341 $generated@@343)) ($generated@@297 $generated@@341))))
 :pattern ( ($generated@@86 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@164 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@308 (type $generated@@344))))
(let (($generated@@346 ($generated@@307 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@306 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@305 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@86 ($generated@@304 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@304 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@308 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@83 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@308 (type $generated@@351))))
(let (($generated@@353 ($generated@@307 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@306 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@305 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@86 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@326 (type $generated@@355))))
(let (($generated@@357 ($generated@@325 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@324 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@323 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@86 ($generated@@322 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@322 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@326 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@83 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@326 (type $generated@@362))))
(let (($generated@@364 ($generated@@325 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@324 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@323 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@86 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@367) $generated@@67)) (= ($generated@@146 $generated@@366 ($generated@@163 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@77) (< 0 ($generated ($generated@@86 $generated@@366 $generated@@368)))) ($generated@@79 $generated@@368 $generated@@367))
 :pattern ( ($generated@@86 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@146 $generated@@366 ($generated@@163 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@84 (type $generated@@369))))
 (=> (and (= (type $generated@@369) ($generated@@83 $generated@@371 $generated@@2)) (= (type $generated@@370) ($generated@@83 $generated@@371 $generated@@2))) (= ($generated@@340 $generated@@369 $generated@@370) (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@371) (= ($generated ($generated@@86 $generated@@369 $generated@@372)) ($generated ($generated@@86 $generated@@370 $generated@@372))))
 :pattern ( ($generated@@86 $generated@@369 $generated@@372))
 :pattern ( ($generated@@86 $generated@@370 $generated@@372))
)))))
 :pattern ( ($generated@@340 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@373 ($generated@@252 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@77) ($generated@@0 ($generated@@86 $generated@@373 $generated@@376))) ($generated@@236 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@86 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@119 $generated@@373 ($generated@@252 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@377 ($generated@@257 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@77) ($generated@@0 ($generated@@86 $generated@@377 $generated@@380))) ($generated@@236 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@86 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@119 $generated@@377 ($generated@@257 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@86 ($generated@@298 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@86 ($generated@@298 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@83 $generated@@77 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@308 (type $generated@@389))))
(let (($generated@@391 ($generated@@307 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@83 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@306 $generated@@77 $generated@@77)) (= (type $generated@@393) $generated@@77)) (= ($generated@@0 ($generated@@86 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@86 ($generated@@304 $generated@@392) ($generated@@157 ($generated@@384 $generated@@150 $generated@@393)))) (= ($generated@@86 ($generated@@385 $generated@@392) ($generated@@157 ($generated@@384 $generated@@150 $generated@@393))) ($generated@@158 ($generated@@384 $generated@@150 $generated@@393))))))
 :pattern ( ($generated@@86 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@83 $generated@@77 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@326 (type $generated@@397))))
(let (($generated@@399 ($generated@@325 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@83 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@324 $generated@@77 $generated@@77)) (= (type $generated@@401) $generated@@77)) (= ($generated@@0 ($generated@@86 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@86 ($generated@@322 $generated@@400) ($generated@@157 ($generated@@384 $generated@@150 $generated@@401)))) (= ($generated@@86 ($generated@@395 $generated@@400) ($generated@@157 ($generated@@384 $generated@@150 $generated@@401))) ($generated@@158 ($generated@@384 $generated@@150 $generated@@401))))))
 :pattern ( ($generated@@86 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@307 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@306 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@86 ($generated@@348 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@86 ($generated@@304 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@86 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@86 ($generated@@304 $generated@@402) $generated@@406))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@86 ($generated@@348 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@325 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@324 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@86 ($generated@@359 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@86 ($generated@@322 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@86 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@86 ($generated@@322 $generated@@407) $generated@@411))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@86 ($generated@@359 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@67)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@306 $generated@@77 $generated@@77)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) $generated@@67)) (= (type $generated@@418) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@304 $generated@@415) $generated@@419))) (and ($generated@@236 ($generated@@86 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@236 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@86 ($generated@@304 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@119 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@67)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@324 $generated@@77 $generated@@77)) (= (type $generated@@424) $generated@@67)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@322 $generated@@423) $generated@@427))) (and ($generated@@236 ($generated@@86 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@236 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@86 ($generated@@322 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@119 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@84 (type $generated@@428))))
 (=> (and (and (= (type $generated@@428) ($generated@@83 $generated@@430 $generated@@2)) (= (type $generated@@429) ($generated@@83 $generated@@430 $generated@@2))) ($generated@@340 $generated@@428 $generated@@429)) (= $generated@@428 $generated@@429)))
 :pattern ( ($generated@@340 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@432 T@T) ) (! (= (type ($generated@@431 $generated@@432)) ($generated@@83 $generated@@432 $generated@@4))
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@326 (type $generated@@433))))
(let (($generated@@435 ($generated@@325 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@324 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@323 $generated@@435 $generated@@434)) (= ($generated@@322 $generated@@433) ($generated@@431 $generated@@435))))))
 :pattern ( ($generated@@322 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@326 (type $generated@@436))))
(let (($generated@@438 ($generated@@325 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@324 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@323 $generated@@438 $generated@@437)) (= ($generated@@359 $generated@@436) ($generated@@431 $generated@@437))))))
 :pattern ( ($generated@@359 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@326 (type $generated@@439))))
(let (($generated@@441 ($generated@@325 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@324 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@323 $generated@@441 $generated@@440)) (= ($generated@@394 $generated@@439) ($generated@@431 $generated@@77))))))
 :pattern ( ($generated@@394 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@308 (type $generated@@442))))
(let (($generated@@444 ($generated@@307 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@306 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@305 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@77) (= (type $generated@@446) $generated@@77)) ($generated@@0 ($generated@@86 ($generated@@383 $generated@@442) ($generated@@292 ($generated@@240 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@383 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@326 (type $generated@@447))))
(let (($generated@@449 ($generated@@325 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@324 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@323 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@77) (= (type $generated@@451) $generated@@77)) ($generated@@0 ($generated@@86 ($generated@@394 $generated@@447) ($generated@@292 ($generated@@240 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@77) ($generated@@79 $generated@@452 $generated@@46)) (and (= ($generated@@292 ($generated@@384 $generated@@2 $generated@@452)) $generated@@452) ($generated@@146 ($generated@@384 $generated@@2 $generated@@452) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@452 $generated@@46))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@77) ($generated@@79 $generated@@453 $generated@@47)) (and (= ($generated@@292 ($generated@@384 $generated@@3 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@384 $generated@@3 $generated@@453) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@453 $generated@@47))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@77) ($generated@@79 $generated@@454 $generated@@44)) (and (= ($generated@@292 ($generated@@384 $generated@@4 $generated@@454)) $generated@@454) ($generated@@146 ($generated@@384 $generated@@4 $generated@@454) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@454 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@455) 20))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@77) ($generated@@79 $generated@@456 $generated@@45)) (and (= ($generated@@292 ($generated@@384 $generated@@455 $generated@@456)) $generated@@456) ($generated@@146 ($generated@@384 $generated@@455 $generated@@456) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@456 $generated@@45))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@67) (= ($generated@@79 ($generated@@292 $generated@@457) $generated@@458) ($generated@@146 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@79 ($generated@@292 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@84 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@83 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@287 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@286 $generated@@462)) (<= 0 ($generated@@285 $generated@@461))))
 :pattern ( ($generated@@285 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@412 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@412 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@117 ($generated@@412 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@420 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@420 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@117 ($generated@@420 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@77) (= (type $generated@@484) $generated@@77)) (= ($generated@@277 ($generated@@240 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@149 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@149 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@489 ($generated@@149 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@149 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@77) (= (type $generated@@494) $generated@@77)) (= ($generated@@157 ($generated@@240 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@240 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@77) (= (type $generated@@496) $generated@@77)) (= ($generated@@158 ($generated@@240 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@240 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@287 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@286 $generated@@77)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@285 $generated@@503))) ($generated@@236 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@119 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@120 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@120 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@252 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@252 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@117 ($generated@@252 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@257 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@257 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@117 ($generated@@257 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@517 ($generated@@163 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@163 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@117 ($generated@@163 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@117 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@384 $generated@@526 ($generated@@292 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@292 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@306 $generated@@77 $generated@@77)) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) (= ($generated@@146 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@304 $generated@@527) $generated@@530))) (and ($generated@@79 ($generated@@86 ($generated@@385 $generated@@527) $generated@@530) $generated@@529) ($generated@@79 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@527) $generated@@530))
 :pattern ( ($generated@@86 ($generated@@304 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@146 $generated@@527 ($generated@@412 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@324 $generated@@77 $generated@@77)) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) (= ($generated@@146 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@322 $generated@@531) $generated@@534))) (and ($generated@@79 ($generated@@86 ($generated@@395 $generated@@531) $generated@@534) $generated@@533) ($generated@@79 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@86 ($generated@@395 $generated@@531) $generated@@534))
 :pattern ( ($generated@@86 ($generated@@322 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@146 $generated@@531 ($generated@@420 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@77) (= (type $generated@@538) $generated@@77)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@240 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@240 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@77) (= (type $generated@@540) $generated@@77)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@240 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@240 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@77) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) $generated@@67)) ($generated@@79 $generated@@541 ($generated@@412 $generated@@542 $generated@@543))) (and (= ($generated@@292 ($generated@@384 ($generated@@306 $generated@@77 $generated@@77) $generated@@541)) $generated@@541) ($generated@@146 ($generated@@384 ($generated@@306 $generated@@77 $generated@@77) $generated@@541) ($generated@@412 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@79 $generated@@541 ($generated@@412 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@77) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) $generated@@67)) ($generated@@79 $generated@@544 ($generated@@420 $generated@@545 $generated@@546))) (and (= ($generated@@292 ($generated@@384 ($generated@@324 $generated@@77 $generated@@77) $generated@@544)) $generated@@544) ($generated@@146 ($generated@@384 ($generated@@324 $generated@@77 $generated@@77) $generated@@544) ($generated@@420 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@79 $generated@@544 ($generated@@420 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@67) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) $generated@@77)) ($generated@@79 $generated@@549 ($generated@@149 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@384 $generated@@150 $generated@@549)) $generated@@549) ($generated@@146 ($generated@@384 $generated@@150 $generated@@549) ($generated@@149 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@79 $generated@@549 ($generated@@149 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@86 ($generated@@431 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@86 ($generated@@431 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@72)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (and (= ($generated@@117 ($generated@@149 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@149 $generated@@554 $generated@@555)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@150) (= ($generated@@535 ($generated@@292 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@292 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@77) ($generated@@79 $generated@@557 ($generated@@120 0))) (and (= ($generated@@292 ($generated@@384 $generated@@2 $generated@@557)) $generated@@557) ($generated@@146 ($generated@@384 ($generated@@83 $generated@@77 $generated@@4) $generated@@557) ($generated@@120 0))))
 :pattern ( ($generated@@79 $generated@@557 ($generated@@120 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@77) (= (type $generated@@559) $generated@@67)) ($generated@@79 $generated@@558 ($generated@@252 $generated@@559))) (and (= ($generated@@292 ($generated@@384 ($generated@@83 $generated@@77 $generated@@4) $generated@@558)) $generated@@558) ($generated@@146 ($generated@@384 ($generated@@83 $generated@@77 $generated@@4) $generated@@558) ($generated@@252 $generated@@559))))
 :pattern ( ($generated@@79 $generated@@558 ($generated@@252 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@77) (= (type $generated@@561) $generated@@67)) ($generated@@79 $generated@@560 ($generated@@257 $generated@@561))) (and (= ($generated@@292 ($generated@@384 ($generated@@83 $generated@@77 $generated@@4) $generated@@560)) $generated@@560) ($generated@@146 ($generated@@384 ($generated@@83 $generated@@77 $generated@@4) $generated@@560) ($generated@@257 $generated@@561))))
 :pattern ( ($generated@@79 $generated@@560 ($generated@@257 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@77) (= (type $generated@@563) $generated@@67)) ($generated@@79 $generated@@562 ($generated@@163 $generated@@563))) (and (= ($generated@@292 ($generated@@384 ($generated@@83 $generated@@77 $generated@@2) $generated@@562)) $generated@@562) ($generated@@146 ($generated@@384 ($generated@@83 $generated@@77 $generated@@2) $generated@@562) ($generated@@163 $generated@@563))))
 :pattern ( ($generated@@79 $generated@@562 ($generated@@163 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@77) (= (type $generated@@565) $generated@@67)) ($generated@@79 $generated@@564 ($generated@@497 $generated@@565))) (and (= ($generated@@292 ($generated@@384 ($generated@@286 $generated@@77) $generated@@564)) $generated@@564) ($generated@@146 ($generated@@384 ($generated@@286 $generated@@77) $generated@@564) ($generated@@497 $generated@@565))))
 :pattern ( ($generated@@79 $generated@@564 ($generated@@497 $generated@@565)))
)))
(assert  (=> true (=> true (and (let (($generated@@566 $generated@@269))
 (and ($generated@@247 $generated@@566) ($generated@@340 ($generated@@82 $generated@@566) ($generated@@298 $generated@@77)))) ($generated@@79 $generated@@269 $generated@@237)))))
(assert (= ($generated@@117 $generated@@237) $generated@@63))
(assert (= ($generated@@552 $generated@@237) $generated@@66))
(assert (= ($generated@@117 $generated@@80) $generated@@64))
(assert (= ($generated@@552 $generated@@80) $generated@@66))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@567 ($generated@@163 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@77) (< 0 ($generated ($generated@@86 $generated@@567 $generated@@570)))) ($generated@@236 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@86 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@119 $generated@@567 ($generated@@163 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@67)) (= (type $generated@@573) ($generated@@83 $generated@@121 $generated@@122))) (and ($generated@@271 $generated@@573) (and ($generated@@148 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@67) ($generated@@119 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@119 $generated@@571 ($generated@@149 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@236 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@236 ($generated@@157 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@67)) (= (type $generated@@577) ($generated@@83 $generated@@121 $generated@@122))) (and ($generated@@271 $generated@@577) (and ($generated@@148 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@67) ($generated@@119 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@119 $generated@@575 ($generated@@149 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@236 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@236 ($generated@@158 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@77) (= (type $generated@@580) $generated@@77)) (= ($generated@@240 ($generated@@262 $generated@@579) ($generated@@262 $generated@@580)) ($generated@@262 ($generated@@240 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@240 ($generated@@262 $generated@@579) ($generated@@262 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@77) (= ($generated@@79 $generated@@581 $generated@@80)  (and ($generated@@79 $generated@@581 $generated@@237) ($generated@@247 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@581 $generated@@80))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@292 ($generated@@262 $generated@@582)) ($generated@@262 ($generated@@292 $generated@@582)))
 :pattern ( ($generated@@292 ($generated@@262 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@287 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@286 $generated@@584)) (= ($generated@@285 $generated@@583) 0)) (= $generated@@583 ($generated@@284 $generated@@584))))
 :pattern ( ($generated@@285 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@83 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@297 ($generated@@87 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@297 $generated@@585) ($generated ($generated@@86 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@297 ($generated@@87 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@590) $generated@@2)) ($generated@@119 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@119 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@592) $generated@@3)) ($generated@@119 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@119 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@594) $generated@@4)) ($generated@@119 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@119 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@596) $generated@@455)) ($generated@@119 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@119 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@598) $generated@@77)) ($generated@@119 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@119 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@286 $generated@@77)) (= (type $generated@@600) $generated@@67)) (= ($generated@@146 $generated@@599 ($generated@@497 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@285 $generated@@599))) ($generated@@79 ($generated@@498 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@498 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@146 $generated@@599 ($generated@@497 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@286 $generated@@77)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@285 $generated@@603))) (< ($generated@@536 ($generated@@384 $generated@@150 ($generated@@498 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@536 ($generated@@384 $generated@@150 ($generated@@498 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@306 $generated@@77 $generated@@77)) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) $generated@@67)) ($generated@@146 $generated@@605 ($generated@@412 $generated@@606 $generated@@607))) (and (and ($generated@@146 ($generated@@304 $generated@@605) ($generated@@252 $generated@@606)) ($generated@@146 ($generated@@348 $generated@@605) ($generated@@252 $generated@@607))) ($generated@@146 ($generated@@383 $generated@@605) ($generated@@252 ($generated@@149 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@146 $generated@@605 ($generated@@412 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@324 $generated@@77 $generated@@77)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) $generated@@67)) ($generated@@146 $generated@@608 ($generated@@420 $generated@@609 $generated@@610))) (and (and ($generated@@146 ($generated@@322 $generated@@608) ($generated@@257 $generated@@609)) ($generated@@146 ($generated@@359 $generated@@608) ($generated@@257 $generated@@610))) ($generated@@146 ($generated@@394 $generated@@608) ($generated@@257 ($generated@@149 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@146 $generated@@608 ($generated@@420 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@146 $generated@@611 $generated@@46))
 :pattern ( ($generated@@146 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@146 $generated@@612 $generated@@47))
 :pattern ( ($generated@@146 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@146 $generated@@613 $generated@@44))
 :pattern ( ($generated@@146 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@455) ($generated@@146 $generated@@614 $generated@@45))
 :pattern ( ($generated@@146 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@77) ($generated@@146 $generated@@615 $generated@@48))
 :pattern ( ($generated@@146 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@616) ($generated@@170 $generated@@121 $generated@@4)) (= (type $generated@@617) $generated@@121)) (= (type $generated@@618) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@619) ($generated@@170 $generated@@121 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@621  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@340 ($generated@@76 ($generated@@262 $generated@@268)) ($generated@@298 $generated@@77)))))
(let (($generated@@622  (=> (and (= $generated@@616 ($generated@@224 $generated@@617 $generated@@618 $generated@@60 false)) $generated@@267) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@79 $generated@@269 $generated@@80)) (=> ($generated@@79 $generated@@269 $generated@@80) (=> (and (and (= $generated@@268 $generated@@269) $generated@@267) (and ($generated@@79 $generated@@268 $generated@@80) (= (ControlFlow 0 5) 4))) $generated@@621))))))
(let (($generated@@623  (=> (and ($generated@@79 $generated@@268 $generated@@80) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@624  (=> (= $generated@@619 ($generated@@169 $generated@@617 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@623) (=> (= (ControlFlow 0 7) 5) $generated@@622)))))
(let (($generated@@625  (=> (and (and ($generated@@271 $generated@@618) ($generated@@620 $generated@@618)) (and (= 3 $generated@@75) (= (ControlFlow 0 8) 7))) $generated@@624)))
$generated@@625))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U Int) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (Int) Int)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@321 (T@U Int) T@U)
(declare-fun $generated@@322 (T@U Int) Bool)
(declare-fun $generated@@323 (T@U Int) Bool)
(declare-fun $generated@@330 (T@U T@U) Bool)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@T) T@U)
(declare-fun $generated@@366 (T@T T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@T T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@517 () T@T)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@564 (T@U Int) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(declare-fun $generated@@602 (T@U) Int)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@677 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@135 $generated@@145)) ($generated@@78 $generated@@136 $generated@@2))
 :pattern ( ($generated@@135 $generated@@145))
))) (= (type $generated@@139) $generated@@66)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@141 $generated@@146 $generated@@147)) ($generated@@78 $generated@@136 $generated@@2))
 :pattern ( ($generated@@141 $generated@@146 $generated@@147))
))) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@142 $generated@@148)) $generated@@144)
 :pattern ( ($generated@@142 $generated@@148))
))) (= (type $generated@@143) $generated@@144)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@136) (or ($generated@@137 $generated@@149) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@149 $generated@@139)))) (and ($generated@@140 $generated@@149) (= ($generated@@135 $generated@@149) ($generated@@141 ($generated@@142 $generated@@143) $generated@@149))))
 :pattern ( ($generated@@135 $generated@@149))
))))
(assert  (and (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Int) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153 $generated@@154)) $generated@@136)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153 $generated@@154))
)) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@151 $generated@@155)) $generated@@144)
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@136)) (= ($generated@@150 $generated@@156 $generated@@157 $generated@@158) ($generated@@150 $generated@@143 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@77 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@77 0)))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@136) (or ($generated@@162 $generated@@163) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@163 $generated@@139)))) true)
 :pattern ( ($generated@@161 $generated@@163))
))))
(assert  (and (= ($generated@@1 $generated@@166) 16) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@167 $generated@@168)) $generated@@66)
 :pattern ( ($generated@@165 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@66) (= (type $generated@@170) $generated@@66)) (= (type $generated@@171) $generated@@166)) ($generated@@159 $generated@@171 ($generated@@165 $generated@@169 $generated@@170))) ($generated@@164 $generated@@171))
 :pattern ( ($generated@@164 $generated@@171) ($generated@@159 $generated@@171 ($generated@@165 $generated@@169 $generated@@170)))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@136)
 :pattern ( ($generated@@173 $generated@@175))
)) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@136)
 :pattern ( ($generated@@174 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@166) (= (type $generated@@178) $generated@@166)) true) (= ($generated@@172 $generated@@177 $generated@@178)  (and (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (= ($generated@@174 $generated@@177) ($generated@@174 $generated@@178)))))
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@66)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@183) $generated@@66)) ($generated@@159 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@159 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 17)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@79 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@69 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@79) (= (type $generated@@234) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@235) ($generated@@68 $generated@@4))) (= (type $generated@@237) $generated@@79)) (= (type $generated@@238) ($generated@@68 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@186 $generated@@79 $generated@@4))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@69 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@79) (= (type $generated@@246) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@247) ($generated@@68 $generated@@4))) (= (type $generated@@249) $generated@@79)) (= (type $generated@@250) ($generated@@68 $generated@@251))) (= ($generated@@0 ($generated@@184 ($generated@@240 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@184 ($generated@@240 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@252 $generated@@253 $generated@@254)) $generated@@166)
 :pattern ( ($generated@@252 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@66) (= (type $generated@@256) $generated@@66)) (= (type $generated@@257) $generated@@136)) (= (type $generated@@258) $generated@@136)) (= ($generated@@159 ($generated@@252 $generated@@257 $generated@@258) ($generated@@165 $generated@@255 $generated@@256))  (and ($generated@@138 $generated@@257 $generated@@255) ($generated@@138 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@159 ($generated@@252 $generated@@257 $generated@@258) ($generated@@165 $generated@@255 $generated@@256)))
)))
(assert  (=> true (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@144) (= (type $generated@@262) $generated@@136)) (or ($generated@@260 $generated@@262) ($generated@@138 $generated@@262 $generated@@139))) true)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@81 (type $generated@@264))))
(= (type ($generated@@263 $generated@@264 $generated@@265)) ($generated@@78 $generated@@266 $generated@@2)))
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
 (=> (and (= (type $generated@@267) ($generated@@78 $generated@@270 $generated@@2)) (= (type $generated@@268) ($generated@@78 $generated@@270 $generated@@2))) (= ($generated ($generated@@83 ($generated@@263 $generated@@267 $generated@@268) $generated@@269)) (+ ($generated ($generated@@83 $generated@@267 $generated@@269)) ($generated ($generated@@83 $generated@@268 $generated@@269))))))
 :pattern ( ($generated@@83 ($generated@@263 $generated@@267 $generated@@268) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@166) (= (type $generated@@272) $generated@@166)) (= ($generated@@172 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@172 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@273 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@136) (or ($generated@@162 ($generated@@273 $generated@@276)) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@276 $generated@@139)))) (and ($generated@@260 ($generated@@273 $generated@@276)) (= ($generated@@161 ($generated@@273 $generated@@276)) ($generated@@259 ($generated@@142 $generated@@143) ($generated@@273 $generated@@276)))))
 :weight 3
 :pattern ( ($generated@@161 ($generated@@273 $generated@@276)))
))))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@66)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@280) $generated@@66)) (= ($generated@@159 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@136) ($generated@@0 ($generated@@83 $generated@@279 $generated@@281))) ($generated@@138 $generated@@281 $generated@@280))
 :pattern ( ($generated@@83 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@159 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@66)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@285) $generated@@66)) (= ($generated@@159 $generated@@284 ($generated@@282 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@136) ($generated@@0 ($generated@@83 $generated@@284 $generated@@286))) ($generated@@138 $generated@@286 $generated@@285))
 :pattern ( ($generated@@83 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@159 $generated@@284 ($generated@@282 $generated@@285)))
)))
(assert (forall (($generated@@288 Int) ) (! (= ($generated@@287 $generated@@288) $generated@@288)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@273 $generated@@289) $generated@@289)
 :pattern ( ($generated@@273 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) $generated@@66)) (= (type $generated@@294) $generated@@136)) (= (type $generated@@295) $generated@@136)) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@290 $generated@@296)) (= ($generated@@76 ($generated@@252 $generated@@294 $generated@@295) ($generated@@165 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@76 ($generated@@252 $generated@@294 $generated@@295) ($generated@@165 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@166) (= ($generated@@164 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@164 $generated@@299))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@136) (or ($generated@@137 ($generated@@273 $generated@@300)) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@300 $generated@@139)))) (and ($generated@@140 ($generated@@273 $generated@@300)) (= ($generated@@135 ($generated@@273 $generated@@300)) ($generated@@141 ($generated@@142 $generated@@143) ($generated@@273 $generated@@300)))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@273 $generated@@300)))
))))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@136) (or ($generated@@137 $generated@@301) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@301 $generated@@139)))) ($generated@@159 ($generated@@135 $generated@@301) ($generated@@179 $generated@@46)))
 :pattern ( ($generated@@135 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@166) ($generated@@164 $generated@@302)) (exists (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (and (and (= (type $generated@@303) $generated@@136) (= (type $generated@@304) $generated@@136)) (= $generated@@302 ($generated@@252 $generated@@303 $generated@@304)))
 :no-pattern (type $generated@@303)
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))
 :pattern ( ($generated@@164 $generated@@302))
)))
(assert  (and (and (forall (($generated@@309 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@309)) 18)) (forall (($generated@@310 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
))) (forall (($generated@@311 T@T) ) (! (= (type ($generated@@305 $generated@@311)) ($generated@@307 $generated@@311))
 :pattern ( ($generated@@305 $generated@@311))
))))
(assert (forall (($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@312)) 0)
 :pattern ( ($generated@@305 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (! (let (($generated@@317 (type $generated@@316)))
(= (type ($generated@@314 $generated@@315 $generated@@316)) ($generated@@78 $generated@@317 $generated@@2)))
 :pattern ( ($generated@@314 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 (type $generated@@319)))
 (=> (= (type $generated@@318) ($generated@@78 $generated@@320 $generated@@2)) (= ($generated@@313 ($generated@@314 $generated@@318 $generated@@319)) (+ ($generated@@313 $generated@@318) 1))))
 :pattern ( ($generated@@313 ($generated@@314 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 Int) ) (! (= (type ($generated@@321 $generated@@324 $generated@@325)) $generated@@136)
 :pattern ( ($generated@@321 $generated@@324 $generated@@325))
)))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (and (= (type $generated@@326) $generated@@136) (or ($generated@@322 ($generated@@273 $generated@@326) ($generated@@287 $generated@@327)) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@326 $generated@@139) ($generated@@0 ($generated@@273 ($generated@@11 ($generated@@161 ($generated@@273 $generated@@326))))))))) (and ($generated@@323 ($generated@@273 $generated@@326) ($generated@@287 $generated@@327)) (= ($generated@@321 ($generated@@273 $generated@@326) ($generated@@287 $generated@@327)) ($generated@@150 ($generated@@142 $generated@@143) ($generated@@273 $generated@@326) ($generated@@287 $generated@@327)))))
 :weight 3
 :pattern ( ($generated@@321 ($generated@@273 $generated@@326) ($generated@@287 $generated@@327)))
))))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@328 T@U) ($generated@@329 Int) ) (!  (=> (and (= (type $generated@@328) $generated@@136) (or ($generated@@322 $generated@@328 $generated@@329) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@328 $generated@@139) ($generated@@161 $generated@@328))))) (and ($generated@@323 $generated@@328 $generated@@329) (= ($generated@@321 $generated@@328 $generated@@329) ($generated@@150 ($generated@@142 $generated@@143) $generated@@328 $generated@@329))))
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))))
(assert  (and (forall (($generated@@333 T@T) ) (! (= (type ($generated@@331 $generated@@333)) ($generated@@78 $generated@@333 $generated@@2))
 :pattern ( ($generated@@331 $generated@@333))
)) (forall (($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@334)) $generated@@136)
 :pattern ( ($generated@@332 $generated@@334))
))))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@335 T@U) ($generated@@336 Int) ) (!  (=> (and (= (type $generated@@335) $generated@@136) (or ($generated@@322 $generated@@335 $generated@@336) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@335 $generated@@139) ($generated@@161 $generated@@335))))) (and (let (($generated@@337 ($generated@@321 $generated@@335 $generated@@336)))
 (and ($generated@@161 $generated@@337) ($generated@@330 ($generated@@135 $generated@@337) ($generated@@263 ($generated@@135 $generated@@335) ($generated@@314 ($generated@@331 $generated@@136) ($generated@@332 ($generated@@8 $generated@@336))))))) ($generated@@138 ($generated@@321 $generated@@335 $generated@@336) $generated@@139)))
 :pattern ( ($generated@@321 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@66) (= (type $generated@@340) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@291 ($generated@@332 $generated@@338) $generated@@339 $generated@@340) ($generated@@76 $generated@@338 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@291 ($generated@@332 $generated@@338) $generated@@339 $generated@@340))
)))
(assert  (=> true (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@144) (= (type $generated@@342) $generated@@136)) (or ($generated@@140 $generated@@342) ($generated@@138 $generated@@342 $generated@@139))) ($generated@@159 ($generated@@141 $generated@@341 $generated@@342) ($generated@@179 $generated@@46)))
 :pattern ( ($generated@@141 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@81 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@78 $generated@@344 $generated@@2)) (and (= (= ($generated@@313 $generated@@343) 0) (= $generated@@343 ($generated@@331 $generated@@344))) (=> (not (= ($generated@@313 $generated@@343) 0)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) (< 0 ($generated ($generated@@83 $generated@@343 $generated@@345))))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@313 $generated@@343))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 19)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@78 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@83 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@83 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert  (and (and (and (and (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (= ($generated@@1 ($generated@@366 $generated@@369 $generated@@370)) 20)) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@367 ($generated@@366 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@366 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@368 ($generated@@366 $generated@@373 $generated@@374)) $generated@@374)
 :pattern ( ($generated@@366 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@367 (type $generated@@375))))
(= (type ($generated@@364 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@375))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= (type ($generated@@365 $generated@@377 $generated@@378)) ($generated@@366 $generated@@377 $generated@@378))
 :pattern ( ($generated@@365 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@T) ) (! (let (($generated@@381 (type $generated@@379)))
 (not ($generated@@0 ($generated@@83 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379))))
 :pattern ( (let (($generated@@381 (type $generated@@379)))
($generated@@83 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@81 (type $generated@@382))))
 (=> (and (= (type $generated@@382) ($generated@@78 $generated@@384 $generated@@2)) (= (type $generated@@383) ($generated@@78 $generated@@384 $generated@@2))) (= ($generated@@313 ($generated@@263 $generated@@382 $generated@@383)) (+ ($generated@@313 $generated@@382) ($generated@@313 $generated@@383)))))
 :pattern ( ($generated@@313 ($generated@@263 $generated@@382 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@81 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@78 $generated@@386 $generated@@2)) (= ($generated@@180 $generated@@385) (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@386) (and (<= 0 ($generated ($generated@@83 $generated@@385 $generated@@387))) (<= ($generated ($generated@@83 $generated@@385 $generated@@387)) ($generated@@313 $generated@@385))))
 :pattern ( ($generated@@83 $generated@@385 $generated@@387))
)))))
 :pattern ( ($generated@@180 $generated@@385))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
 (=> (= (type $generated@@388) ($generated@@78 $generated@@390 $generated@@2)) (= ($generated ($generated@@83 ($generated@@314 $generated@@388 $generated@@389) $generated@@389)) (+ ($generated ($generated@@83 $generated@@388 $generated@@389)) 1))))
 :pattern ( ($generated@@314 $generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@392)))
 (=> (and (and (= (type $generated@@391) ($generated@@78 $generated@@394 $generated@@2)) (= (type $generated@@393) $generated@@394)) (< 0 ($generated ($generated@@83 $generated@@391 $generated@@393)))) (< 0 ($generated ($generated@@83 ($generated@@314 $generated@@391 $generated@@392) $generated@@393)))))
 :pattern ( ($generated@@314 $generated@@391 $generated@@392) ($generated@@83 $generated@@391 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@350 (type $generated@@395))))
(let (($generated@@397 ($generated@@349 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@348 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@347 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@346 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@350 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@78 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@350 (type $generated@@402))))
(let (($generated@@404 ($generated@@349 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@348 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@347 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@83 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@368 (type $generated@@406))))
(let (($generated@@408 ($generated@@367 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@366 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@365 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@406) $generated@@409)))
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@364 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@368 (type $generated@@411))))
(= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@412 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@368 (type $generated@@413))))
(let (($generated@@415 ($generated@@367 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@366 $generated@@415 $generated@@414)) (or (= $generated@@413 ($generated@@365 $generated@@415 $generated@@414)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@414) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@413) $generated@@416)))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@410 $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 Int) ) (!  (=> (and (= (type $generated@@417) $generated@@144) (= (type $generated@@418) $generated@@136)) (= ($generated@@150 ($generated@@142 $generated@@417) $generated@@418 $generated@@419) ($generated@@150 $generated@@417 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@150 ($generated@@142 $generated@@417) $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@421)))
 (=> (and (= (type $generated@@420) ($generated@@78 $generated@@423 $generated@@2)) (= (type $generated@@422) $generated@@423)) (= (< 0 ($generated ($generated@@83 ($generated@@314 $generated@@420 $generated@@421) $generated@@422)))  (or (= $generated@@422 $generated@@421) (< 0 ($generated ($generated@@83 $generated@@420 $generated@@422)))))))
 :pattern ( ($generated@@83 ($generated@@314 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@425) $generated@@66)) (= ($generated@@159 $generated@@424 ($generated@@179 $generated@@425)) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@136) (< 0 ($generated ($generated@@83 $generated@@424 $generated@@426)))) ($generated@@138 $generated@@426 $generated@@425))
 :pattern ( ($generated@@83 $generated@@424 $generated@@426))
))))
 :pattern ( ($generated@@159 $generated@@424 ($generated@@179 $generated@@425)))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@81 (type $generated@@427))))
 (=> (and (= (type $generated@@427) ($generated@@78 $generated@@429 $generated@@2)) (= (type $generated@@428) ($generated@@78 $generated@@429 $generated@@2))) (= ($generated@@330 $generated@@427 $generated@@428) (forall (($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@429) (= ($generated ($generated@@83 $generated@@427 $generated@@430)) ($generated ($generated@@83 $generated@@428 $generated@@430))))
 :pattern ( ($generated@@83 $generated@@427 $generated@@430))
 :pattern ( ($generated@@83 $generated@@428 $generated@@430))
)))))
 :pattern ( ($generated@@330 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@431) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@432) $generated@@66)) (= (type $generated@@433) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@431 ($generated@@277 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@136) ($generated@@0 ($generated@@83 $generated@@431 $generated@@434))) ($generated@@291 $generated@@434 $generated@@432 $generated@@433))
 :pattern ( ($generated@@83 $generated@@431 $generated@@434))
))))
 :pattern ( ($generated@@76 $generated@@431 ($generated@@277 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (= (type $generated@@435) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@282 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@136) ($generated@@0 ($generated@@83 $generated@@435 $generated@@438))) ($generated@@291 $generated@@438 $generated@@436 $generated@@437))
 :pattern ( ($generated@@83 $generated@@435 $generated@@438))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@282 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(= ($generated ($generated@@83 ($generated@@331 $generated@@440) $generated@@439)) 0))
 :pattern ( (let (($generated@@440 (type $generated@@439)))
($generated@@83 ($generated@@331 $generated@@440) $generated@@439)))
)))
(assert  (and (and (forall (($generated@@444 T@U) ) (! (= (type ($generated@@441 $generated@@444)) ($generated@@78 $generated@@136 $generated@@4))
 :pattern ( ($generated@@441 $generated@@444))
)) (forall (($generated@@445 T@T) ($generated@@446 T@U) ) (! (= (type ($generated@@442 $generated@@445 $generated@@446)) $generated@@445)
 :pattern ( ($generated@@442 $generated@@445 $generated@@446))
))) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@350 (type $generated@@447))))
(let (($generated@@449 ($generated@@349 (type $generated@@447))))
(= (type ($generated@@443 $generated@@447)) ($generated@@78 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@443 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@348 $generated@@136 $generated@@136)) (= (type $generated@@451) $generated@@136)) (= ($generated@@0 ($generated@@83 ($generated@@441 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@83 ($generated@@346 $generated@@450) ($generated@@173 ($generated@@442 $generated@@166 $generated@@451)))) (= ($generated@@83 ($generated@@443 $generated@@450) ($generated@@173 ($generated@@442 $generated@@166 $generated@@451))) ($generated@@174 ($generated@@442 $generated@@166 $generated@@451))))))
 :pattern ( ($generated@@83 ($generated@@441 $generated@@450) $generated@@451))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) ($generated@@78 $generated@@136 $generated@@4))
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@368 (type $generated@@455))))
(let (($generated@@457 ($generated@@367 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455)) ($generated@@78 $generated@@457 $generated@@456))))
 :pattern ( ($generated@@453 $generated@@455))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@366 $generated@@136 $generated@@136)) (= (type $generated@@459) $generated@@136)) (= ($generated@@0 ($generated@@83 ($generated@@452 $generated@@458) $generated@@459))  (and ($generated@@0 ($generated@@83 ($generated@@364 $generated@@458) ($generated@@173 ($generated@@442 $generated@@166 $generated@@459)))) (= ($generated@@83 ($generated@@453 $generated@@458) ($generated@@173 ($generated@@442 $generated@@166 $generated@@459))) ($generated@@174 ($generated@@442 $generated@@166 $generated@@459))))))
 :pattern ( ($generated@@83 ($generated@@452 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(let (($generated@@463 ($generated@@349 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@348 $generated@@463 $generated@@462)) (= ($generated@@0 ($generated@@83 ($generated@@399 $generated@@460) $generated@@461)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) (and ($generated@@0 ($generated@@83 ($generated@@346 $generated@@460) $generated@@464)) (= $generated@@461 ($generated@@83 ($generated@@443 $generated@@460) $generated@@464))))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@460) $generated@@464))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@460) $generated@@464))
))))))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 (type $generated@@466)))
(let (($generated@@468 ($generated@@367 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@366 $generated@@468 $generated@@467)) (= ($generated@@0 ($generated@@83 ($generated@@410 $generated@@465) $generated@@466)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@468) (and ($generated@@0 ($generated@@83 ($generated@@364 $generated@@465) $generated@@469)) (= $generated@@466 ($generated@@83 ($generated@@453 $generated@@465) $generated@@469))))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@465) $generated@@469))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@465) $generated@@469))
))))))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@348 $generated@@136 $generated@@136)) (= (type $generated@@474) $generated@@66)) (= (type $generated@@475) $generated@@66)) (= (type $generated@@476) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@473) $generated@@477))) (and ($generated@@291 ($generated@@83 ($generated@@443 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@291 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@473) $generated@@477))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@76 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (= (type $generated@@481) ($generated@@366 $generated@@136 $generated@@136)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@481) $generated@@485))) (and ($generated@@291 ($generated@@83 ($generated@@453 $generated@@481) $generated@@485) $generated@@483 $generated@@484) ($generated@@291 $generated@@485 $generated@@482 $generated@@484)))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@481) $generated@@485))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@481) $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@144) (= (type $generated@@487) $generated@@136)) (= ($generated@@259 $generated@@486 $generated@@487) ($generated@@259 $generated@@143 $generated@@487)))
 :pattern ( ($generated@@259 ($generated@@151 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@81 (type $generated@@488))))
 (=> (and (and (= (type $generated@@488) ($generated@@78 $generated@@490 $generated@@2)) (= (type $generated@@489) ($generated@@78 $generated@@490 $generated@@2))) ($generated@@330 $generated@@488 $generated@@489)) (= $generated@@488 $generated@@489)))
 :pattern ( ($generated@@330 $generated@@488 $generated@@489))
)))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (!  (=> (and (= (type $generated@@491) $generated@@136) (or ($generated@@322 $generated@@491 ($generated@@287 $generated@@492)) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@491 $generated@@139) ($generated@@161 $generated@@491))))) (and ($generated@@323 $generated@@491 ($generated@@287 $generated@@492)) (= ($generated@@321 $generated@@491 ($generated@@287 $generated@@492)) ($generated@@150 ($generated@@142 $generated@@143) $generated@@491 ($generated@@287 $generated@@492)))))
 :weight 3
 :pattern ( ($generated@@321 $generated@@491 ($generated@@287 $generated@@492)))
))))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@78 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@368 (type $generated@@495))))
(let (($generated@@497 ($generated@@367 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@366 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@365 $generated@@497 $generated@@496)) (= ($generated@@364 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@364 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@368 (type $generated@@498))))
(let (($generated@@500 ($generated@@367 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@366 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@365 $generated@@500 $generated@@499)) (= ($generated@@410 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@410 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@368 (type $generated@@501))))
(let (($generated@@503 ($generated@@367 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@366 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@365 $generated@@503 $generated@@502)) (= ($generated@@452 $generated@@501) ($generated@@493 $generated@@136))))))
 :pattern ( ($generated@@452 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@350 (type $generated@@504))))
(let (($generated@@506 ($generated@@349 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@348 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@347 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@136) (= (type $generated@@508) $generated@@136)) ($generated@@0 ($generated@@83 ($generated@@441 $generated@@504) ($generated@@332 ($generated@@252 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@441 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@368 (type $generated@@509))))
(let (($generated@@511 ($generated@@367 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@366 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@365 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@136) (= (type $generated@@513) $generated@@136)) ($generated@@0 ($generated@@83 ($generated@@452 $generated@@509) ($generated@@332 ($generated@@252 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@452 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@136) ($generated@@138 $generated@@514 $generated@@46)) (and (= ($generated@@332 ($generated@@442 $generated@@2 $generated@@514)) $generated@@514) ($generated@@159 ($generated@@442 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@138 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@136) ($generated@@138 $generated@@515 $generated@@47)) (and (= ($generated@@332 ($generated@@442 $generated@@3 $generated@@515)) $generated@@515) ($generated@@159 ($generated@@442 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@138 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@136) ($generated@@138 $generated@@516 $generated@@44)) (and (= ($generated@@332 ($generated@@442 $generated@@4 $generated@@516)) $generated@@516) ($generated@@159 ($generated@@442 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@138 $generated@@516 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@517) 21))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@136) ($generated@@138 $generated@@518 $generated@@45)) (and (= ($generated@@332 ($generated@@442 $generated@@517 $generated@@518)) $generated@@518) ($generated@@159 ($generated@@442 $generated@@517 $generated@@518) $generated@@45)))
 :pattern ( ($generated@@138 $generated@@518 $generated@@45))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@144) (= (type $generated@@520) $generated@@136)) (= ($generated@@259 ($generated@@142 $generated@@519) $generated@@520) ($generated@@259 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@259 ($generated@@142 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@138 ($generated@@332 $generated@@521) $generated@@522) ($generated@@159 $generated@@521 $generated@@522)))
 :pattern ( ($generated@@138 ($generated@@332 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@81 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@78 $generated@@524 $generated@@2)) (<= 0 ($generated@@313 $generated@@523))))
 :pattern ( ($generated@@313 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@308 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@307 $generated@@526)) (<= 0 ($generated@@306 $generated@@525))))
 :pattern ( ($generated@@306 $generated@@525))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@470 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@470 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= ($generated@@531 ($generated@@470 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@470 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= ($generated@@74 ($generated@@470 $generated@@535 $generated@@536)) $generated@@58))
 :pattern ( ($generated@@470 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= ($generated@@537 ($generated@@478 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@478 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (= ($generated@@541 ($generated@@478 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@478 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= ($generated@@74 ($generated@@478 $generated@@545 $generated@@546)) $generated@@59))
 :pattern ( ($generated@@478 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@136)) (= ($generated@@297 ($generated@@252 $generated@@547 $generated@@548)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@66)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (= ($generated@@549 ($generated@@165 $generated@@551 $generated@@552)) $generated@@551))
 :pattern ( ($generated@@165 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@66)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@66) (= (type $generated@@556) $generated@@66)) (= ($generated@@553 ($generated@@165 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@165 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@136) (= (type $generated@@558) $generated@@136)) (= ($generated@@173 ($generated@@252 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@252 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@136)) (= ($generated@@174 ($generated@@252 $generated@@559 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@252 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@144) (= (type $generated@@562) $generated@@136)) (= ($generated@@141 $generated@@561 $generated@@562) ($generated@@141 $generated@@143 $generated@@562)))
 :pattern ( ($generated@@141 ($generated@@151 $generated@@561) $generated@@562))
)))
(assert  (and (forall (($generated@@565 T@U) ) (! (= (type ($generated@@563 $generated@@565)) $generated@@66)
 :pattern ( ($generated@@563 $generated@@565))
)) (forall (($generated@@566 T@U) ($generated@@567 Int) ) (! (let (($generated@@568 ($generated@@308 (type $generated@@566))))
(= (type ($generated@@564 $generated@@566 $generated@@567)) $generated@@568))
 :pattern ( ($generated@@564 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@307 $generated@@136)) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@569 ($generated@@563 $generated@@570) $generated@@571) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@306 $generated@@569))) ($generated@@291 ($generated@@564 $generated@@569 $generated@@572) $generated@@570 $generated@@571))
 :pattern ( ($generated@@564 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@563 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@573 ($generated@@77 $generated@@574)) $generated@@574)
 :pattern ( ($generated@@77 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@66)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@66) (= ($generated@@575 ($generated@@277 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@277 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@66) (= ($generated@@74 ($generated@@277 $generated@@578)) $generated@@54))
 :pattern ( ($generated@@277 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@66)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@66) (= ($generated@@579 ($generated@@282 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@282 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@66) (= ($generated@@74 ($generated@@282 $generated@@582)) $generated@@55))
 :pattern ( ($generated@@282 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@66)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@66) (= ($generated@@583 ($generated@@179 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@179 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@66) (= ($generated@@74 ($generated@@179 $generated@@586)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@66)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@66) (= ($generated@@587 ($generated@@563 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@563 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@66) (= ($generated@@74 ($generated@@563 $generated@@590)) $generated@@57))
 :pattern ( ($generated@@563 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
(= ($generated@@442 $generated@@592 ($generated@@332 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@332 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@593) ($generated@@348 $generated@@136 $generated@@136)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) (= ($generated@@159 $generated@@593 ($generated@@470 $generated@@594 $generated@@595)) (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@346 $generated@@593) $generated@@596))) (and ($generated@@138 ($generated@@83 ($generated@@443 $generated@@593) $generated@@596) $generated@@595) ($generated@@138 $generated@@596 $generated@@594)))
 :pattern ( ($generated@@83 ($generated@@443 $generated@@593) $generated@@596))
 :pattern ( ($generated@@83 ($generated@@346 $generated@@593) $generated@@596))
))))
 :pattern ( ($generated@@159 $generated@@593 ($generated@@470 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@366 $generated@@136 $generated@@136)) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) (= ($generated@@159 $generated@@597 ($generated@@478 $generated@@598 $generated@@599)) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@364 $generated@@597) $generated@@600))) (and ($generated@@138 ($generated@@83 ($generated@@453 $generated@@597) $generated@@600) $generated@@599) ($generated@@138 $generated@@600 $generated@@598)))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@597) $generated@@600))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@597) $generated@@600))
))))
 :pattern ( ($generated@@159 $generated@@597 ($generated@@478 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@136) (= (type $generated@@604) $generated@@136)) (< ($generated@@601 $generated@@603) ($generated@@602 ($generated@@252 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@252 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@136) (= (type $generated@@606) $generated@@136)) (< ($generated@@601 $generated@@606) ($generated@@602 ($generated@@252 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@252 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@144) (= (type $generated@@608) $generated@@136)) (= ($generated@@141 ($generated@@142 $generated@@607) $generated@@608) ($generated@@141 $generated@@607 $generated@@608)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@136) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@66)) ($generated@@138 $generated@@609 ($generated@@470 $generated@@610 $generated@@611))) (and (= ($generated@@332 ($generated@@442 ($generated@@348 $generated@@136 $generated@@136) $generated@@609)) $generated@@609) ($generated@@159 ($generated@@442 ($generated@@348 $generated@@136 $generated@@136) $generated@@609) ($generated@@470 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@138 $generated@@609 ($generated@@470 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@136) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) $generated@@66)) ($generated@@138 $generated@@612 ($generated@@478 $generated@@613 $generated@@614))) (and (= ($generated@@332 ($generated@@442 ($generated@@366 $generated@@136 $generated@@136) $generated@@612)) $generated@@612) ($generated@@159 ($generated@@442 ($generated@@366 $generated@@136 $generated@@136) $generated@@612) ($generated@@478 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@138 $generated@@612 ($generated@@478 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@66) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) $generated@@136)) ($generated@@138 $generated@@617 ($generated@@165 $generated@@615 $generated@@616))) (and (= ($generated@@332 ($generated@@442 $generated@@166 $generated@@617)) $generated@@617) ($generated@@159 ($generated@@442 $generated@@166 $generated@@617) ($generated@@165 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@138 $generated@@617 ($generated@@165 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@618)))
 (not ($generated@@0 ($generated@@83 ($generated@@493 $generated@@619) $generated@@618))))
 :pattern ( (let (($generated@@619 (type $generated@@618)))
($generated@@83 ($generated@@493 $generated@@619) $generated@@618)))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@71)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@66) (= (type $generated@@623) $generated@@66)) (and (= ($generated@@74 ($generated@@165 $generated@@622 $generated@@623)) $generated@@62) (= ($generated@@620 ($generated@@165 $generated@@622 $generated@@623)) $generated@@64)))
 :pattern ( ($generated@@165 $generated@@622 $generated@@623))
)))
(assert  (=> true (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (and (and (= (type $generated@@624) $generated@@144) (= (type $generated@@625) $generated@@136)) (or ($generated@@323 $generated@@625 $generated@@626) ($generated@@138 $generated@@625 $generated@@139))) ($generated@@138 ($generated@@150 $generated@@624 $generated@@625 $generated@@626) $generated@@139))
 :pattern ( ($generated@@150 $generated@@624 $generated@@625 $generated@@626))
))))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@166) (= ($generated@@601 ($generated@@332 $generated@@627)) ($generated@@602 $generated@@627)))
 :pattern ( ($generated@@601 ($generated@@332 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@136) ($generated@@138 $generated@@628 ($generated@@77 0))) (and (= ($generated@@332 ($generated@@442 $generated@@2 $generated@@628)) $generated@@628) ($generated@@159 ($generated@@442 ($generated@@78 $generated@@136 $generated@@4) $generated@@628) ($generated@@77 0))))
 :pattern ( ($generated@@138 $generated@@628 ($generated@@77 0)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@136) (= (type $generated@@630) $generated@@66)) ($generated@@138 $generated@@629 ($generated@@277 $generated@@630))) (and (= ($generated@@332 ($generated@@442 ($generated@@78 $generated@@136 $generated@@4) $generated@@629)) $generated@@629) ($generated@@159 ($generated@@442 ($generated@@78 $generated@@136 $generated@@4) $generated@@629) ($generated@@277 $generated@@630))))
 :pattern ( ($generated@@138 $generated@@629 ($generated@@277 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@136) (= (type $generated@@632) $generated@@66)) ($generated@@138 $generated@@631 ($generated@@282 $generated@@632))) (and (= ($generated@@332 ($generated@@442 ($generated@@78 $generated@@136 $generated@@4) $generated@@631)) $generated@@631) ($generated@@159 ($generated@@442 ($generated@@78 $generated@@136 $generated@@4) $generated@@631) ($generated@@282 $generated@@632))))
 :pattern ( ($generated@@138 $generated@@631 ($generated@@282 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@136) (= (type $generated@@634) $generated@@66)) ($generated@@138 $generated@@633 ($generated@@179 $generated@@634))) (and (= ($generated@@332 ($generated@@442 ($generated@@78 $generated@@136 $generated@@2) $generated@@633)) $generated@@633) ($generated@@159 ($generated@@442 ($generated@@78 $generated@@136 $generated@@2) $generated@@633) ($generated@@179 $generated@@634))))
 :pattern ( ($generated@@138 $generated@@633 ($generated@@179 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@136) (= (type $generated@@636) $generated@@66)) ($generated@@138 $generated@@635 ($generated@@563 $generated@@636))) (and (= ($generated@@332 ($generated@@442 ($generated@@307 $generated@@136) $generated@@635)) $generated@@635) ($generated@@159 ($generated@@442 ($generated@@307 $generated@@136) $generated@@635) ($generated@@563 $generated@@636))))
 :pattern ( ($generated@@138 $generated@@635 ($generated@@563 $generated@@636)))
)))
(assert (= ($generated@@74 $generated@@139) $generated@@63))
(assert (= ($generated@@620 $generated@@139) $generated@@65))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@638) $generated@@66)) (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@637 ($generated@@179 $generated@@638) $generated@@639) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@136) (< 0 ($generated ($generated@@83 $generated@@637 $generated@@640)))) ($generated@@291 $generated@@640 $generated@@638 $generated@@639))
 :pattern ( ($generated@@83 $generated@@637 $generated@@640))
))))
 :pattern ( ($generated@@76 $generated@@637 ($generated@@179 $generated@@638) $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@166) (= (type $generated@@642) $generated@@66)) (= (type $generated@@643) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@290 $generated@@643) (and ($generated@@164 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@66) ($generated@@76 $generated@@641 ($generated@@165 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@76 $generated@@641 ($generated@@165 $generated@@642 $generated@@644) $generated@@643))
))))) ($generated@@291 ($generated@@173 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@291 ($generated@@173 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@166) (= (type $generated@@646) $generated@@66)) (= (type $generated@@647) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@290 $generated@@647) (and ($generated@@164 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@66) ($generated@@76 $generated@@645 ($generated@@165 $generated@@648 $generated@@646) $generated@@647))
 :pattern ( ($generated@@76 $generated@@645 ($generated@@165 $generated@@648 $generated@@646) $generated@@647))
))))) ($generated@@291 ($generated@@174 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@291 ($generated@@174 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@78 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@652)) (not (= $generated@@650 $generated@@651))) (= ($generated ($generated@@83 $generated@@649 $generated@@651)) ($generated ($generated@@83 ($generated@@314 $generated@@649 $generated@@650) $generated@@651)))))
 :pattern ( ($generated@@314 $generated@@649 $generated@@650) ($generated@@83 $generated@@649 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@136) (= (type $generated@@654) $generated@@136)) (= ($generated@@252 ($generated@@273 $generated@@653) ($generated@@273 $generated@@654)) ($generated@@273 ($generated@@252 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@252 ($generated@@273 $generated@@653) ($generated@@273 $generated@@654)))
)))
(assert (forall (($generated@@655 Int) ) (! (= ($generated@@332 ($generated@@8 ($generated@@287 $generated@@655))) ($generated@@273 ($generated@@332 ($generated@@8 $generated@@655))))
 :pattern ( ($generated@@332 ($generated@@8 ($generated@@287 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ) (! (= ($generated@@332 ($generated@@273 $generated@@656)) ($generated@@273 ($generated@@332 $generated@@656)))
 :pattern ( ($generated@@332 ($generated@@273 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (! (let (($generated@@658 ($generated@@308 (type $generated@@657))))
 (=> (and (= (type $generated@@657) ($generated@@307 $generated@@658)) (= ($generated@@306 $generated@@657) 0)) (= $generated@@657 ($generated@@305 $generated@@658))))
 :pattern ( ($generated@@306 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@660)))
 (=> (and (and (= (type $generated@@659) ($generated@@78 $generated@@662 $generated@@2)) (= (type $generated@@661) $generated@@2)) (<= 0 ($generated $generated@@661))) (= ($generated@@313 ($generated@@84 $generated@@659 $generated@@660 $generated@@661)) (+ (- ($generated@@313 $generated@@659) ($generated ($generated@@83 $generated@@659 $generated@@660))) ($generated $generated@@661)))))
 :pattern ( ($generated@@313 ($generated@@84 $generated@@659 $generated@@660 $generated@@661)))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@136) (or ($generated@@162 $generated@@663) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@663 $generated@@139)))) (and ($generated@@260 $generated@@663) (= ($generated@@161 $generated@@663) ($generated@@259 ($generated@@142 $generated@@143) $generated@@663))))
 :pattern ( ($generated@@161 $generated@@663))
))))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@665) $generated@@2)) ($generated@@76 $generated@@665 $generated@@46 $generated@@664))
 :pattern ( ($generated@@76 $generated@@665 $generated@@46 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@667) $generated@@3)) ($generated@@76 $generated@@667 $generated@@47 $generated@@666))
 :pattern ( ($generated@@76 $generated@@667 $generated@@47 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@669) $generated@@4)) ($generated@@76 $generated@@669 $generated@@44 $generated@@668))
 :pattern ( ($generated@@76 $generated@@669 $generated@@44 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@671) $generated@@517)) ($generated@@76 $generated@@671 $generated@@45 $generated@@670))
 :pattern ( ($generated@@76 $generated@@671 $generated@@45 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@673) $generated@@136)) ($generated@@76 $generated@@673 $generated@@48 $generated@@672))
 :pattern ( ($generated@@76 $generated@@673 $generated@@48 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@307 $generated@@136)) (= (type $generated@@675) $generated@@66)) (= ($generated@@159 $generated@@674 ($generated@@563 $generated@@675)) (forall (($generated@@676 Int) ) (!  (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@306 $generated@@674))) ($generated@@138 ($generated@@564 $generated@@674 $generated@@676) $generated@@675))
 :pattern ( ($generated@@564 $generated@@674 $generated@@676))
))))
 :pattern ( ($generated@@159 $generated@@674 ($generated@@563 $generated@@675)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 Int) ) (!  (=> (= (type $generated@@678) ($generated@@307 $generated@@136)) (=> (and (<= 0 $generated@@679) (< $generated@@679 ($generated@@306 $generated@@678))) (< ($generated@@602 ($generated@@442 $generated@@166 ($generated@@564 $generated@@678 $generated@@679))) ($generated@@677 $generated@@678))))
 :pattern ( ($generated@@602 ($generated@@442 $generated@@166 ($generated@@564 $generated@@678 $generated@@679))))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@348 $generated@@136 $generated@@136)) (= (type $generated@@681) $generated@@66)) (= (type $generated@@682) $generated@@66)) ($generated@@159 $generated@@680 ($generated@@470 $generated@@681 $generated@@682))) (and (and ($generated@@159 ($generated@@346 $generated@@680) ($generated@@277 $generated@@681)) ($generated@@159 ($generated@@399 $generated@@680) ($generated@@277 $generated@@682))) ($generated@@159 ($generated@@441 $generated@@680) ($generated@@277 ($generated@@165 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@159 $generated@@680 ($generated@@470 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@366 $generated@@136 $generated@@136)) (= (type $generated@@684) $generated@@66)) (= (type $generated@@685) $generated@@66)) ($generated@@159 $generated@@683 ($generated@@478 $generated@@684 $generated@@685))) (and (and ($generated@@159 ($generated@@364 $generated@@683) ($generated@@282 $generated@@684)) ($generated@@159 ($generated@@410 $generated@@683) ($generated@@282 $generated@@685))) ($generated@@159 ($generated@@452 $generated@@683) ($generated@@282 ($generated@@165 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@159 $generated@@683 ($generated@@478 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@2) ($generated@@159 $generated@@686 $generated@@46))
 :pattern ( ($generated@@159 $generated@@686 $generated@@46))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@3) ($generated@@159 $generated@@687 $generated@@47))
 :pattern ( ($generated@@159 $generated@@687 $generated@@47))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@4) ($generated@@159 $generated@@688 $generated@@44))
 :pattern ( ($generated@@159 $generated@@688 $generated@@44))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@517) ($generated@@159 $generated@@689 $generated@@45))
 :pattern ( ($generated@@159 $generated@@689 $generated@@45))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@136) ($generated@@159 $generated@@690 $generated@@48))
 :pattern ( ($generated@@159 $generated@@690 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 (T@U) Bool)
(declare-fun $generated@@700 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@693) $generated@@136) (= (type $generated@@696) ($generated@@186 $generated@@79 $generated@@4))) (= (type $generated@@697) $generated@@79)) (= (type $generated@@692) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@698) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@691) $generated@@136)) (= (type $generated@@695) $generated@@136)) (= (type $generated@@700) ($generated@@186 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@701 true))
(let (($generated@@702  (=> (and (not ($generated@@161 $generated@@691)) (= (ControlFlow 0 8) 6)) $generated@@701)))
(let (($generated@@703  (=> (and ($generated@@161 $generated@@691) ($generated@@291 $generated@@691 $generated@@139 $generated@@692)) (=> (and (and ($generated@@137 $generated@@691) ($generated@@291 $generated@@693 $generated@@139 $generated@@692)) (and ($generated@@137 $generated@@693) (= (ControlFlow 0 7) 6))) $generated@@701))))
(let (($generated@@704  (=> ($generated@@138 ($generated@@321 $generated@@693 $generated@@694) $generated@@139) (=> (and (and ($generated@@138 $generated@@691 $generated@@139) ($generated@@291 $generated@@691 $generated@@139 $generated@@692)) (and ($generated@@291 $generated@@693 $generated@@139 $generated@@692) ($generated@@76 ($generated@@8 $generated@@694) $generated@@46 $generated@@692))) (and (=> (= (ControlFlow 0 9) (- 0 12)) (=> ($generated@@162 $generated@@693) (or ($generated@@161 $generated@@693) ($generated@@259 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@693)))) (=> ($generated@@161 $generated@@693) (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (<= 0 $generated@@694) (= $generated@@694 $generated@@694))) (=> (or (<= 0 $generated@@694) (= $generated@@694 $generated@@694)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (and (= $generated@@693 $generated@@693) (= $generated@@694 $generated@@694)) (< $generated@@694 $generated@@694))) (=> (or (and (= $generated@@693 $generated@@693) (= $generated@@694 $generated@@694)) (< $generated@@694 $generated@@694)) (=> (or (and (= $generated@@693 $generated@@693) (= $generated@@694 $generated@@694)) ($generated@@322 $generated@@693 $generated@@694)) (=> (and (= $generated@@695 ($generated@@321 $generated@@693 $generated@@694)) ($generated@@322 $generated@@693 $generated@@694)) (=> (and (and ($generated@@138 $generated@@695 $generated@@139) (= $generated@@691 $generated@@695)) (and ($generated@@291 $generated@@691 $generated@@139 $generated@@692) ($generated@@162 $generated@@691))) (and (=> (= (ControlFlow 0 9) 7) $generated@@703) (=> (= (ControlFlow 0 9) 8) $generated@@702)))))))))))))))
(let (($generated@@705  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@706 ($generated@@321 $generated@@693 $generated@@694)))
 (=> ($generated@@162 $generated@@706) (or ($generated@@161 $generated@@706) ($generated@@259 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@706))))) (=> (let (($generated@@707 ($generated@@321 $generated@@693 $generated@@694)))
 (=> ($generated@@162 $generated@@707) (or ($generated@@161 $generated@@707) ($generated@@259 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@707)))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@708 ($generated@@321 $generated@@693 $generated@@694)))
($generated@@330 ($generated@@135 $generated@@708) ($generated@@263 ($generated@@135 $generated@@693) ($generated@@314 ($generated@@331 $generated@@136) ($generated@@332 ($generated@@8 $generated@@694)))))))))))
(let (($generated@@709  (=> (= $generated@@696 ($generated@@240 $generated@@697 $generated@@692 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@259 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@693)) (=> ($generated@@259 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@693) (=> (and ($generated@@290 $generated@@698) ($generated@@699 $generated@@698)) (=> (and (and ($generated@@323 $generated@@693 $generated@@694) (let (($generated@@710 ($generated@@150 ($generated@@142 $generated@@143) $generated@@693 $generated@@694)))
 (and ($generated@@260 $generated@@710) (=> ($generated@@259 ($generated@@142 $generated@@143) $generated@@710) (and ($generated@@140 $generated@@710) ($generated@@140 $generated@@693)))))) (and (let (($generated@@711 ($generated@@150 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@693 $generated@@694)))
($generated@@259 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@711)) (let (($generated@@712 ($generated@@150 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@693 $generated@@694)))
($generated@@330 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@712) ($generated@@263 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@693) ($generated@@314 ($generated@@331 $generated@@136) ($generated@@332 ($generated@@8 $generated@@694)))))))) (=> (and (and (and (= $generated@@692 $generated@@698) ($generated@@291 $generated@@693 $generated@@139 $generated@@698)) (and ($generated@@76 ($generated@@8 $generated@@694) $generated@@46 $generated@@698) ($generated@@323 $generated@@693 $generated@@694))) (and (and (= ($generated@@321 $generated@@693 $generated@@694) ($generated@@150 ($generated@@142 $generated@@143) $generated@@693 $generated@@694)) ($generated@@323 $generated@@693 $generated@@694)) (and ($generated@@138 ($generated@@321 $generated@@693 $generated@@694) $generated@@139) (= (ControlFlow 0 4) 2)))) $generated@@705))))))))
(let (($generated@@713  (=> (and (and (= $generated@@700 ($generated@@185 $generated@@697 $generated@@692 $generated@@60 false)) ($generated@@291 $generated@@693 $generated@@139 $generated@@692)) (and ($generated@@162 $generated@@693) ($generated@@161 $generated@@693))) (and (=> (= (ControlFlow 0 13) 9) $generated@@704) (=> (= (ControlFlow 0 13) 4) $generated@@709)))))
(let (($generated@@714  (=> (and (and (and ($generated@@290 $generated@@692) ($generated@@699 $generated@@692)) ($generated@@138 $generated@@693 $generated@@139)) (and (= 3 $generated@@134) (= (ControlFlow 0 14) 13))) $generated@@713)))
$generated@@714)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@136 $generated@@146)) ($generated@@79 $generated@@137 $generated@@2))
 :pattern ( ($generated@@136 $generated@@146))
))) (= (type $generated@@140) $generated@@67)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@142 $generated@@147 $generated@@148)) ($generated@@79 $generated@@137 $generated@@2))
 :pattern ( ($generated@@142 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@145) 15)) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@143 $generated@@149)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@149))
))) (= (type $generated@@144) $generated@@145)))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@137) (or ($generated@@138 $generated@@150) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@150 $generated@@140)))) (and ($generated@@141 $generated@@150) (= ($generated@@136 $generated@@150) ($generated@@142 ($generated@@143 $generated@@144) $generated@@150))))
 :pattern ( ($generated@@136 $generated@@150))
))))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@78 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@155) 16) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@67)) (= (type $generated@@160) $generated@@155)) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@151 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@137)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@137)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@155) (= (type $generated@@167) $generated@@155)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@172) $generated@@67)) ($generated@@151 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@151 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 17)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@80 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@70 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@224) ($generated@@69 $generated@@4))) (= (type $generated@@226) $generated@@80)) (= (type $generated@@227) ($generated@@69 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@80 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@70 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@80) (= (type $generated@@235) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@236) ($generated@@69 $generated@@4))) (= (type $generated@@238) $generated@@80)) (= (type $generated@@239) ($generated@@69 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (= (type $generated@@242) $generated@@67))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@137) (= (type $generated@@244) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@241 $generated@@243 $generated@@140 $generated@@244) ($generated@@241 $generated@@243 $generated@@242 $generated@@244)))
 :pattern ( ($generated@@241 $generated@@243 $generated@@140 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@155)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@67) (= (type $generated@@249) $generated@@67)) (= (type $generated@@250) $generated@@137)) (= (type $generated@@251) $generated@@137)) (= ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@154 $generated@@248 $generated@@249))  (and ($generated@@139 $generated@@250 $generated@@248) ($generated@@139 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@154 $generated@@248 $generated@@249)))
)))
(assert  (=> true (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@145) (= (type $generated@@255) $generated@@137)) (or ($generated@@253 $generated@@255) ($generated@@139 $generated@@255 $generated@@242))) true)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@155) (= (type $generated@@257) $generated@@155)) (= ($generated@@161 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@161 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@67)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@261) $generated@@67)) (= ($generated@@151 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@137) ($generated@@0 ($generated@@84 $generated@@260 $generated@@262))) ($generated@@139 $generated@@262 $generated@@261))
 :pattern ( ($generated@@84 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@151 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@67)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@266) $generated@@67)) (= ($generated@@151 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@137) ($generated@@0 ($generated@@84 $generated@@265 $generated@@267))) ($generated@@139 $generated@@267 $generated@@266))
 :pattern ( ($generated@@84 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@151 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@67) (= (type $generated@@274) $generated@@67)) (= (type $generated@@275) $generated@@137)) (= (type $generated@@276) $generated@@137)) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@272 $generated@@277)) (= ($generated@@77 ($generated@@245 $generated@@275 $generated@@276) ($generated@@154 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@241 $generated@@275 $generated@@273 $generated@@277) ($generated@@241 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@77 ($generated@@245 $generated@@275 $generated@@276) ($generated@@154 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@71)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@155) (= ($generated@@153 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@280))
)))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@137) (or ($generated@@138 ($generated@@268 $generated@@281)) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@281 $generated@@140)))) (and ($generated@@141 ($generated@@268 $generated@@281)) (= ($generated@@136 ($generated@@268 $generated@@281)) ($generated@@142 ($generated@@143 $generated@@144) ($generated@@268 $generated@@281)))))
 :weight 3
 :pattern ( ($generated@@136 ($generated@@268 $generated@@281)))
))))
(assert  (=> (<= 2 $generated@@135) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@137) (or ($generated@@138 $generated@@282) (and (not (= 2 $generated@@135)) ($generated@@139 $generated@@282 $generated@@140)))) ($generated@@151 ($generated@@136 $generated@@282) ($generated@@168 $generated@@46)))
 :pattern ( ($generated@@136 $generated@@282))
))))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@286 $generated@@289)) ($generated@@79 $generated@@289 $generated@@2))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@137) (or ($generated@@284 $generated@@290) (and (not (= 3 $generated@@135)) (and ($generated@@139 $generated@@290 $generated@@140) (not ($generated@@285 ($generated@@136 $generated@@290) ($generated@@286 $generated@@137))))))) (and ($generated@@287 $generated@@290) (= ($generated@@283 $generated@@290) ($generated@@288 $generated@@290))))
 :pattern ( ($generated@@283 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@155) ($generated@@153 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@137) (= (type $generated@@293) $generated@@137)) (= $generated@@291 ($generated@@245 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@153 $generated@@291))
)))
(assert  (and (and (forall (($generated@@298 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@298)) 18)) (forall (($generated@@299 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@296 $generated@@299))
))) (forall (($generated@@300 T@T) ) (! (= (type ($generated@@294 $generated@@300)) ($generated@@296 $generated@@300))
 :pattern ( ($generated@@294 $generated@@300))
))))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@301)) 0)
 :pattern ( ($generated@@294 $generated@@301))
)))
(assert  (=> true (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@137) (or ($generated@@287 $generated@@302) (and ($generated@@139 $generated@@302 $generated@@242) (not ($generated@@285 ($generated@@142 ($generated@@143 $generated@@144) $generated@@302) ($generated@@286 $generated@@137)))))) true)
 :pattern ( ($generated@@288 $generated@@302))
))))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@137)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@67) (= (type $generated@@307) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@241 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@77 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@241 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert  (=> true (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@145) (= (type $generated@@309) $generated@@137)) (or ($generated@@141 $generated@@309) ($generated@@139 $generated@@309 $generated@@242))) ($generated@@151 ($generated@@142 $generated@@308 $generated@@309) ($generated@@168 $generated@@46)))
 :pattern ( ($generated@@142 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@82 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@79 $generated@@312 $generated@@2)) (and (= (= ($generated@@310 $generated@@311) 0) (= $generated@@311 ($generated@@286 $generated@@312))) (=> (not (= ($generated@@310 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@84 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@79 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@84 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@84 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 20)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@79 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@84 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@84 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@82 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@79 $generated@@351 $generated@@2)) (= ($generated@@169 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@84 $generated@@350 $generated@@352))) (<= ($generated ($generated@@84 $generated@@350 $generated@@352)) ($generated@@310 $generated@@350))))
 :pattern ( ($generated@@84 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@169 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@84 ($generated@@314 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@314 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@318 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@79 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@318 (type $generated@@360))))
(let (($generated@@362 ($generated@@317 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@316 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@315 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@336 (type $generated@@364))))
(let (($generated@@366 ($generated@@335 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@334 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@333 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@84 ($generated@@332 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@332 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@336 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@79 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@336 (type $generated@@371))))
(let (($generated@@373 ($generated@@335 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@334 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@333 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@84 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@376) $generated@@67)) (= ($generated@@151 $generated@@375 ($generated@@168 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@137) (< 0 ($generated ($generated@@84 $generated@@375 $generated@@377)))) ($generated@@139 $generated@@377 $generated@@376))
 :pattern ( ($generated@@84 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@151 $generated@@375 ($generated@@168 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@82 (type $generated@@378))))
 (=> (and (= (type $generated@@378) ($generated@@79 $generated@@380 $generated@@2)) (= (type $generated@@379) ($generated@@79 $generated@@380 $generated@@2))) (= ($generated@@285 $generated@@378 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (= ($generated ($generated@@84 $generated@@378 $generated@@381)) ($generated ($generated@@84 $generated@@379 $generated@@381))))
 :pattern ( ($generated@@84 $generated@@378 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@285 $generated@@378 $generated@@379))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@383) $generated@@67)) (= (type $generated@@384) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@382 ($generated@@258 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@137) ($generated@@0 ($generated@@84 $generated@@382 $generated@@385))) ($generated@@241 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@84 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@77 $generated@@382 ($generated@@258 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@79 $generated@@137 $generated@@4)) (= (type $generated@@387) $generated@@67)) (= (type $generated@@388) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@386 ($generated@@263 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@137) ($generated@@0 ($generated@@84 $generated@@386 $generated@@389))) ($generated@@241 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@84 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@77 $generated@@386 ($generated@@263 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@84 ($generated@@286 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@84 ($generated@@286 $generated@@391) $generated@@390)))
)))
(assert  (and (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@392 $generated@@395)) ($generated@@79 $generated@@137 $generated@@4))
 :pattern ( ($generated@@392 $generated@@395))
)) (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@393 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@393 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@318 (type $generated@@398))))
(let (($generated@@400 ($generated@@317 (type $generated@@398))))
(= (type ($generated@@394 $generated@@398)) ($generated@@79 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@394 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@316 $generated@@137 $generated@@137)) (= (type $generated@@402) $generated@@137)) (= ($generated@@0 ($generated@@84 ($generated@@392 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@84 ($generated@@314 $generated@@401) ($generated@@162 ($generated@@393 $generated@@155 $generated@@402)))) (= ($generated@@84 ($generated@@394 $generated@@401) ($generated@@162 ($generated@@393 $generated@@155 $generated@@402))) ($generated@@163 ($generated@@393 $generated@@155 $generated@@402))))))
 :pattern ( ($generated@@84 ($generated@@392 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@79 $generated@@137 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@336 (type $generated@@406))))
(let (($generated@@408 ($generated@@335 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@79 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@334 $generated@@137 $generated@@137)) (= (type $generated@@410) $generated@@137)) (= ($generated@@0 ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@84 ($generated@@332 $generated@@409) ($generated@@162 ($generated@@393 $generated@@155 $generated@@410)))) (= ($generated@@84 ($generated@@404 $generated@@409) ($generated@@162 ($generated@@393 $generated@@155 $generated@@410))) ($generated@@163 ($generated@@393 $generated@@155 $generated@@410))))))
 :pattern ( ($generated@@84 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@317 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@316 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@84 ($generated@@314 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@84 ($generated@@394 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@84 ($generated@@314 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@335 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@334 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@84 ($generated@@368 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@84 ($generated@@332 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@416) $generated@@420))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@84 ($generated@@368 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@67)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@316 $generated@@137 $generated@@137)) (= (type $generated@@425) $generated@@67)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@314 $generated@@424) $generated@@428))) (and ($generated@@241 ($generated@@84 ($generated@@394 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@241 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@424) $generated@@428))
 :pattern ( ($generated@@84 ($generated@@314 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@77 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@67)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@334 $generated@@137 $generated@@137)) (= (type $generated@@433) $generated@@67)) (= (type $generated@@434) $generated@@67)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@332 $generated@@432) $generated@@436))) (and ($generated@@241 ($generated@@84 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@241 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@145)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) (= (type $generated@@440) $generated@@137)) (= ($generated@@252 $generated@@439 $generated@@440) ($generated@@252 $generated@@144 $generated@@440)))
 :pattern ( ($generated@@252 ($generated@@437 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@82 (type $generated@@441))))
 (=> (and (and (= (type $generated@@441) ($generated@@79 $generated@@443 $generated@@2)) (= (type $generated@@442) ($generated@@79 $generated@@443 $generated@@2))) ($generated@@285 $generated@@441 $generated@@442)) (= $generated@@441 $generated@@442)))
 :pattern ( ($generated@@285 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@79 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@336 (type $generated@@446))))
(let (($generated@@448 ($generated@@335 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@334 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@333 $generated@@448 $generated@@447)) (= ($generated@@332 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@332 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@336 (type $generated@@449))))
(let (($generated@@451 ($generated@@335 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@334 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@333 $generated@@451 $generated@@450)) (= ($generated@@368 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@368 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@336 (type $generated@@452))))
(let (($generated@@454 ($generated@@335 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@334 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@333 $generated@@454 $generated@@453)) (= ($generated@@403 $generated@@452) ($generated@@444 $generated@@137))))))
 :pattern ( ($generated@@403 $generated@@452))
)))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@137) (or ($generated@@284 ($generated@@268 $generated@@455)) (and (not (= 3 $generated@@135)) (and ($generated@@139 $generated@@455 $generated@@140) (not ($generated@@285 ($generated@@136 ($generated@@268 $generated@@455)) ($generated@@286 $generated@@137))))))) (and ($generated@@287 ($generated@@268 $generated@@455)) (= ($generated@@283 ($generated@@268 $generated@@455)) ($generated@@288 ($generated@@268 $generated@@455)))))
 :weight 3
 :pattern ( ($generated@@283 ($generated@@268 $generated@@455)))
))))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@318 (type $generated@@456))))
(let (($generated@@458 ($generated@@317 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@316 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@315 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@137) (= (type $generated@@460) $generated@@137)) ($generated@@0 ($generated@@84 ($generated@@392 $generated@@456) ($generated@@303 ($generated@@245 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@392 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@336 (type $generated@@461))))
(let (($generated@@463 ($generated@@335 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@334 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@333 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@137) (= (type $generated@@465) $generated@@137)) ($generated@@0 ($generated@@84 ($generated@@403 $generated@@461) ($generated@@303 ($generated@@245 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@403 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@137) ($generated@@139 $generated@@466 $generated@@46)) (and (= ($generated@@303 ($generated@@393 $generated@@2 $generated@@466)) $generated@@466) ($generated@@151 ($generated@@393 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@139 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@137) ($generated@@139 $generated@@467 $generated@@47)) (and (= ($generated@@303 ($generated@@393 $generated@@3 $generated@@467)) $generated@@467) ($generated@@151 ($generated@@393 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@139 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@137) ($generated@@139 $generated@@468 $generated@@44)) (and (= ($generated@@303 ($generated@@393 $generated@@4 $generated@@468)) $generated@@468) ($generated@@151 ($generated@@393 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@139 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 21))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@137) ($generated@@139 $generated@@470 $generated@@45)) (and (= ($generated@@303 ($generated@@393 $generated@@469 $generated@@470)) $generated@@470) ($generated@@151 ($generated@@393 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@139 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@137)) (= ($generated@@252 ($generated@@143 $generated@@471) $generated@@472) ($generated@@252 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@252 ($generated@@143 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@67) (= ($generated@@139 ($generated@@303 $generated@@473) $generated@@474) ($generated@@151 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@139 ($generated@@303 $generated@@473) $generated@@474))
)))
(assert  (=> (<= 3 $generated@@135) (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@137) (or ($generated@@284 $generated@@475) (and (not (= 3 $generated@@135)) (and ($generated@@139 $generated@@475 $generated@@140) (not ($generated@@285 ($generated@@136 $generated@@475) ($generated@@286 $generated@@137))))))) (let (($generated@@476 ($generated@@283 $generated@@475)))
 (and (> ($generated ($generated@@84 ($generated@@136 $generated@@475) ($generated@@303 ($generated@@8 $generated@@476)))) 0) (forall (($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@477) $generated@@2) true) (> ($generated ($generated@@84 ($generated@@136 $generated@@475) ($generated@@303 $generated@@477))) 0)) (<= $generated@@476 ($generated $generated@@477)))
 :pattern ( ($generated@@84 ($generated@@136 $generated@@475) ($generated@@303 $generated@@477)))
)))))
 :pattern ( ($generated@@283 $generated@@475))
))))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@82 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@79 $generated@@479 $generated@@2)) (<= 0 ($generated@@310 $generated@@478))))
 :pattern ( ($generated@@310 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@297 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@296 $generated@@481)) (<= 0 ($generated@@295 $generated@@480))))
 :pattern ( ($generated@@295 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@482 ($generated@@421 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@421 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@486 ($generated@@421 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@421 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@75 ($generated@@421 $generated@@490 $generated@@491)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@429 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@429 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@496 ($generated@@429 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@429 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@67) (= (type $generated@@501) $generated@@67)) (= ($generated@@75 ($generated@@429 $generated@@500 $generated@@501)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@137) (= (type $generated@@503) $generated@@137)) (= ($generated@@278 ($generated@@245 $generated@@502 $generated@@503)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@67) (= (type $generated@@507) $generated@@67)) (= ($generated@@504 ($generated@@154 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@154 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@67) (= (type $generated@@511) $generated@@67)) (= ($generated@@508 ($generated@@154 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@154 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@137) (= (type $generated@@513) $generated@@137)) (= ($generated@@162 ($generated@@245 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@245 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@137) (= (type $generated@@515) $generated@@137)) (= ($generated@@163 ($generated@@245 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@245 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@137)) (= ($generated@@142 $generated@@516 $generated@@517) ($generated@@142 $generated@@144 $generated@@517)))
 :pattern ( ($generated@@142 ($generated@@437 $generated@@516) $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@297 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@296 $generated@@137)) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@295 $generated@@524))) ($generated@@241 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@77 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@78 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@78 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@67)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@530 ($generated@@258 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@258 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@75 ($generated@@258 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@67)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@67) (= ($generated@@534 ($generated@@263 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@263 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@67) (= ($generated@@75 ($generated@@263 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@168 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@168 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@67) (= ($generated@@75 ($generated@@168 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@67)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@67) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@67) (= ($generated@@75 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@393 $generated@@547 ($generated@@303 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@303 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@316 $generated@@137 $generated@@137)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) $generated@@67)) (= ($generated@@151 $generated@@548 ($generated@@421 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@314 $generated@@548) $generated@@551))) (and ($generated@@139 ($generated@@84 ($generated@@394 $generated@@548) $generated@@551) $generated@@550) ($generated@@139 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@84 ($generated@@394 $generated@@548) $generated@@551))
 :pattern ( ($generated@@84 ($generated@@314 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@151 $generated@@548 ($generated@@421 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@334 $generated@@137 $generated@@137)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) (= ($generated@@151 $generated@@552 ($generated@@429 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@137) ($generated@@0 ($generated@@84 ($generated@@332 $generated@@552) $generated@@555))) (and ($generated@@139 ($generated@@84 ($generated@@404 $generated@@552) $generated@@555) $generated@@554) ($generated@@139 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@84 ($generated@@404 $generated@@552) $generated@@555))
 :pattern ( ($generated@@84 ($generated@@332 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@151 $generated@@552 ($generated@@429 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@137) (= (type $generated@@559) $generated@@137)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@245 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@245 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@137) (= (type $generated@@561) $generated@@137)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@245 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@245 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@137)) (= ($generated@@142 ($generated@@143 $generated@@562) $generated@@563) ($generated@@142 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@137) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@139 $generated@@564 ($generated@@421 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@393 ($generated@@316 $generated@@137 $generated@@137) $generated@@564)) $generated@@564) ($generated@@151 ($generated@@393 ($generated@@316 $generated@@137 $generated@@137) $generated@@564) ($generated@@421 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@139 $generated@@564 ($generated@@421 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@137) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@139 $generated@@567 ($generated@@429 $generated@@568 $generated@@569))) (and (= ($generated@@303 ($generated@@393 ($generated@@334 $generated@@137 $generated@@137) $generated@@567)) $generated@@567) ($generated@@151 ($generated@@393 ($generated@@334 $generated@@137 $generated@@137) $generated@@567) ($generated@@429 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@139 $generated@@567 ($generated@@429 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@137)) ($generated@@139 $generated@@572 ($generated@@154 $generated@@570 $generated@@571))) (and (= ($generated@@303 ($generated@@393 $generated@@155 $generated@@572)) $generated@@572) ($generated@@151 ($generated@@393 $generated@@155 $generated@@572) ($generated@@154 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@139 $generated@@572 ($generated@@154 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@84 ($generated@@444 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@84 ($generated@@444 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@72)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@67) (= (type $generated@@578) $generated@@67)) (and (= ($generated@@75 ($generated@@154 $generated@@577 $generated@@578)) $generated@@62) (= ($generated@@575 ($generated@@154 $generated@@577 $generated@@578)) $generated@@65)))
 :pattern ( ($generated@@154 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@155) (= ($generated@@556 ($generated@@303 $generated@@579)) ($generated@@557 $generated@@579)))
 :pattern ( ($generated@@556 ($generated@@303 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@137) ($generated@@139 $generated@@580 ($generated@@78 0))) (and (= ($generated@@303 ($generated@@393 $generated@@2 $generated@@580)) $generated@@580) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@137 $generated@@4) $generated@@580) ($generated@@78 0))))
 :pattern ( ($generated@@139 $generated@@580 ($generated@@78 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@137) (= (type $generated@@582) $generated@@67)) ($generated@@139 $generated@@581 ($generated@@258 $generated@@582))) (and (= ($generated@@303 ($generated@@393 ($generated@@79 $generated@@137 $generated@@4) $generated@@581)) $generated@@581) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@137 $generated@@4) $generated@@581) ($generated@@258 $generated@@582))))
 :pattern ( ($generated@@139 $generated@@581 ($generated@@258 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@137) (= (type $generated@@584) $generated@@67)) ($generated@@139 $generated@@583 ($generated@@263 $generated@@584))) (and (= ($generated@@303 ($generated@@393 ($generated@@79 $generated@@137 $generated@@4) $generated@@583)) $generated@@583) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@137 $generated@@4) $generated@@583) ($generated@@263 $generated@@584))))
 :pattern ( ($generated@@139 $generated@@583 ($generated@@263 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@137) (= (type $generated@@586) $generated@@67)) ($generated@@139 $generated@@585 ($generated@@168 $generated@@586))) (and (= ($generated@@303 ($generated@@393 ($generated@@79 $generated@@137 $generated@@2) $generated@@585)) $generated@@585) ($generated@@151 ($generated@@393 ($generated@@79 $generated@@137 $generated@@2) $generated@@585) ($generated@@168 $generated@@586))))
 :pattern ( ($generated@@139 $generated@@585 ($generated@@168 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@137) (= (type $generated@@588) $generated@@67)) ($generated@@139 $generated@@587 ($generated@@518 $generated@@588))) (and (= ($generated@@303 ($generated@@393 ($generated@@296 $generated@@137) $generated@@587)) $generated@@587) ($generated@@151 ($generated@@393 ($generated@@296 $generated@@137) $generated@@587) ($generated@@518 $generated@@588))))
 :pattern ( ($generated@@139 $generated@@587 ($generated@@518 $generated@@588)))
)))
(assert (= ($generated@@75 $generated@@242) $generated@@63))
(assert (= ($generated@@575 $generated@@242) $generated@@66))
(assert (= ($generated@@75 $generated@@140) $generated@@64))
(assert (= ($generated@@575 $generated@@140) $generated@@66))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@79 $generated@@137 $generated@@2)) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@589 ($generated@@168 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@137) (< 0 ($generated ($generated@@84 $generated@@589 $generated@@592)))) ($generated@@241 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@84 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@77 $generated@@589 ($generated@@168 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@155) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@272 $generated@@595) (and ($generated@@153 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@67) ($generated@@77 $generated@@593 ($generated@@154 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@77 $generated@@593 ($generated@@154 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@241 ($generated@@162 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@241 ($generated@@162 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@155) (= (type $generated@@598) $generated@@67)) (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@272 $generated@@599) (and ($generated@@153 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@67) ($generated@@77 $generated@@597 ($generated@@154 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@77 $generated@@597 ($generated@@154 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@241 ($generated@@163 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@241 ($generated@@163 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@137) (= (type $generated@@602) $generated@@137)) (= ($generated@@245 ($generated@@268 $generated@@601) ($generated@@268 $generated@@602)) ($generated@@268 ($generated@@245 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@245 ($generated@@268 $generated@@601) ($generated@@268 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@303 ($generated@@268 $generated@@603)) ($generated@@268 ($generated@@303 $generated@@603)))
 :pattern ( ($generated@@303 ($generated@@268 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@297 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@296 $generated@@605)) (= ($generated@@295 $generated@@604) 0)) (= $generated@@604 ($generated@@294 $generated@@605))))
 :pattern ( ($generated@@295 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@79 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@310 ($generated@@85 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@310 $generated@@606) ($generated ($generated@@84 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@310 ($generated@@85 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@137) (= ($generated@@139 $generated@@610 $generated@@140)  (and ($generated@@139 $generated@@610 $generated@@242) ($generated@@252 ($generated@@143 $generated@@144) $generated@@610))))
 :pattern ( ($generated@@139 $generated@@610 $generated@@140))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@2)) ($generated@@77 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@3)) ($generated@@77 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@616) $generated@@4)) ($generated@@77 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@77 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@618) $generated@@469)) ($generated@@77 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@77 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@620) $generated@@137)) ($generated@@77 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@77 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@296 $generated@@137)) (= (type $generated@@622) $generated@@67)) (= ($generated@@151 $generated@@621 ($generated@@518 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@295 $generated@@621))) ($generated@@139 ($generated@@519 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@519 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@151 $generated@@621 ($generated@@518 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@296 $generated@@137)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@295 $generated@@625))) (< ($generated@@557 ($generated@@393 $generated@@155 ($generated@@519 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@557 ($generated@@393 $generated@@155 ($generated@@519 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@316 $generated@@137 $generated@@137)) (= (type $generated@@628) $generated@@67)) (= (type $generated@@629) $generated@@67)) ($generated@@151 $generated@@627 ($generated@@421 $generated@@628 $generated@@629))) (and (and ($generated@@151 ($generated@@314 $generated@@627) ($generated@@258 $generated@@628)) ($generated@@151 ($generated@@357 $generated@@627) ($generated@@258 $generated@@629))) ($generated@@151 ($generated@@392 $generated@@627) ($generated@@258 ($generated@@154 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@151 $generated@@627 ($generated@@421 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@334 $generated@@137 $generated@@137)) (= (type $generated@@631) $generated@@67)) (= (type $generated@@632) $generated@@67)) ($generated@@151 $generated@@630 ($generated@@429 $generated@@631 $generated@@632))) (and (and ($generated@@151 ($generated@@332 $generated@@630) ($generated@@263 $generated@@631)) ($generated@@151 ($generated@@368 $generated@@630) ($generated@@263 $generated@@632))) ($generated@@151 ($generated@@403 $generated@@630) ($generated@@263 ($generated@@154 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@151 $generated@@630 ($generated@@429 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@151 $generated@@633 $generated@@46))
 :pattern ( ($generated@@151 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@151 $generated@@634 $generated@@47))
 :pattern ( ($generated@@151 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@151 $generated@@635 $generated@@44))
 :pattern ( ($generated@@151 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@469) ($generated@@151 $generated@@636 $generated@@45))
 :pattern ( ($generated@@151 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@137) ($generated@@151 $generated@@637 $generated@@48))
 :pattern ( ($generated@@151 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(declare-fun $generated@@647 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@638) $generated@@137) (= (type $generated@@643) ($generated@@175 $generated@@80 $generated@@4))) (= (type $generated@@644) $generated@@80)) (= (type $generated@@640) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@645) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@647) ($generated@@175 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@648 true))
(let (($generated@@649 true))
(let (($generated@@650  (=> (and (>= 0 ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@639))))) (= (ControlFlow 0 12) 8)) $generated@@649)))
(let (($generated@@651  (=> (and (> ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@639)))) 0) (= (ControlFlow 0 11) 8)) $generated@@649)))
(let (($generated@@652  (=> (and ($generated@@241 $generated@@638 $generated@@140 $generated@@640) ($generated@@138 $generated@@638)) (and (=> (= (ControlFlow 0 13) 11) $generated@@651) (=> (= (ControlFlow 0 13) 12) $generated@@650)))))
(let (($generated@@653  (=> (> ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@641)))) 0) (and (=> (= (ControlFlow 0 14) 13) $generated@@652) (=> (= (ControlFlow 0 14) 10) $generated@@648)))))
(let (($generated@@654  (=> (and (>= 0 ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@641))))) (= (ControlFlow 0 9) 8)) $generated@@649)))
(let (($generated@@655  (=> ($generated@@241 $generated@@638 $generated@@140 $generated@@640) (and (=> (= (ControlFlow 0 15) (- 0 17)) (not ($generated@@285 ($generated@@136 $generated@@638) ($generated@@286 $generated@@137)))) (=> (not ($generated@@285 ($generated@@136 $generated@@638) ($generated@@286 $generated@@137))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= $generated@@638 $generated@@638)) (=> (= $generated@@638 $generated@@638) (=> (or (= $generated@@638 $generated@@638) ($generated@@284 $generated@@638)) (=> (and (= $generated@@642 ($generated@@283 $generated@@638)) ($generated@@284 $generated@@638)) (=> (and (and ($generated@@151 ($generated@@8 $generated@@642) $generated@@46) (= $generated@@641 $generated@@642)) (and ($generated@@241 $generated@@638 $generated@@140 $generated@@640) ($generated@@138 $generated@@638))) (and (=> (= (ControlFlow 0 15) 14) $generated@@653) (=> (= (ControlFlow 0 15) 9) $generated@@654))))))))))))
(let (($generated@@656  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@657 ($generated@@283 $generated@@638)))
(> ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@657)))) 0))) (=> (let (($generated@@658 ($generated@@283 $generated@@638)))
(> ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@658)))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@659 ($generated@@283 $generated@@638)))
(forall (($generated@@660 Int) ) (!  (=> true (=> (> ($generated ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@660)))) 0) (<= $generated@@659 $generated@@660)))
 :pattern ( ($generated@@84 ($generated@@136 $generated@@638) ($generated@@303 ($generated@@8 $generated@@660))))
))))))))
(let (($generated@@661  (=> (= $generated@@643 ($generated@@229 $generated@@644 $generated@@640 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@252 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@638)) (=> ($generated@@252 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@638) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@285 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@638) ($generated@@286 $generated@@137)))) (=> (not ($generated@@285 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@638) ($generated@@286 $generated@@137))) (=> (and (and (and ($generated@@272 $generated@@645) ($generated@@646 $generated@@645)) (and ($generated@@287 $generated@@638) (let (($generated@@662 ($generated@@288 $generated@@638)))
 (and ($generated@@141 $generated@@638) (=> (> ($generated ($generated@@84 ($generated@@142 ($generated@@143 $generated@@144) $generated@@638) ($generated@@303 ($generated@@8 $generated@@662)))) 0) ($generated@@141 $generated@@638)))))) (and (and (let (($generated@@663 ($generated@@288 $generated@@638)))
(> ($generated ($generated@@84 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@638) ($generated@@303 ($generated@@8 $generated@@663)))) 0)) (let (($generated@@664 ($generated@@288 $generated@@638)))
(forall (($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@2) true) (> ($generated ($generated@@84 ($generated@@142 ($generated@@143 $generated@@144) $generated@@638) ($generated@@303 $generated@@665))) 0)) (<= $generated@@664 ($generated $generated@@665)))
 :pattern ( ($generated@@84 ($generated@@142 ($generated@@143 $generated@@144) $generated@@638) ($generated@@303 $generated@@665)))
)))) (and (= $generated@@640 $generated@@645) ($generated@@241 $generated@@638 $generated@@242 $generated@@645)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@285 ($generated@@142 ($generated@@143 ($generated@@143 $generated@@144)) $generated@@638) ($generated@@286 $generated@@137)))) (=> (and (not ($generated@@285 ($generated@@142 ($generated@@143 $generated@@144) $generated@@638) ($generated@@286 $generated@@137))) ($generated@@287 $generated@@638)) (=> (and (and (= ($generated@@283 $generated@@638) ($generated@@288 $generated@@638)) ($generated@@287 $generated@@638)) (and ($generated@@151 ($generated@@8 ($generated@@283 $generated@@638)) $generated@@46) (= (ControlFlow 0 4) 2))) $generated@@656)))))))))))
(let (($generated@@666  (=> (and (and (= $generated@@647 ($generated@@174 $generated@@644 $generated@@640 $generated@@60 false)) ($generated@@241 $generated@@638 $generated@@140 $generated@@640)) (and ($generated@@138 $generated@@638) (not ($generated@@285 ($generated@@136 $generated@@638) ($generated@@286 $generated@@137))))) (and (=> (= (ControlFlow 0 18) 15) $generated@@655) (=> (= (ControlFlow 0 18) 4) $generated@@661)))))
(let (($generated@@667  (=> (and (and (and ($generated@@272 $generated@@640) ($generated@@646 $generated@@640)) ($generated@@139 $generated@@638 $generated@@140)) (and (= 3 $generated@@135) (= (ControlFlow 0 19) 18))) $generated@@666)))
$generated@@667)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 (T@T) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Bool)
(declare-fun $generated@@116 () Bool)
(declare-fun $generated@@117 (T@U Int) Bool)
(declare-fun $generated@@118 (Int) Int)
(declare-fun $generated@@119 (T@U Int) T@U)
(declare-fun $generated@@120 (T@U) Bool)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (Int) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@471 (T@T) T@U)
(declare-fun $generated@@495 () T@T)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@538 (T@U Int) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@648 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@86 $generated@@87)) 11)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@81 $generated@@88 $generated@@89))
))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@83 ($generated@@81 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@81 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@83 (type $generated@@92))))
(= (type ($generated@@84 $generated@@92 $generated@@93)) $generated@@94))
 :pattern ( ($generated@@84 $generated@@92 $generated@@93))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 (type $generated@@97)))
(let (($generated@@99 (type $generated@@96)))
(= (type ($generated@@85 $generated@@95 $generated@@96 $generated@@97)) ($generated@@81 $generated@@99 $generated@@98))))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96 $generated@@97))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@83 (type $generated@@100))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@84 ($generated@@85 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@84 ($generated@@85 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@84 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@84 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@78) 12)) (forall (($generated@@112 T@U) ) (! (= (type ($generated@@75 $generated@@112)) ($generated@@81 $generated@@78 $generated@@2))
 :pattern ( ($generated@@75 $generated@@112))
))) (= (type $generated@@76) $generated@@78)) (forall (($generated@@113 T@T) ) (! (= (type ($generated@@77 $generated@@113)) ($generated@@81 $generated@@113 $generated@@2))
 :pattern ( ($generated@@77 $generated@@113))
))) (= (type $generated@@80) $generated@@66)))
(assert  (=> true (=> true (and ($generated@@74 ($generated@@75 $generated@@76) ($generated@@77 $generated@@78)) ($generated@@79 $generated@@76 $generated@@80)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 Int) ) (! (= (type ($generated@@119 $generated@@123 $generated@@124)) $generated@@78)
 :pattern ( ($generated@@119 $generated@@123 $generated@@124))
)))
(assert  (=> (<= 0 $generated@@114) (=> (or $generated@@115 (not (= 0 $generated@@114))) (and (and $generated@@116 (let (($generated@@125 $generated@@76))
 (and ($generated@@117 $generated@@125 ($generated@@118 4)) (let (($generated@@126 ($generated@@119 $generated@@125 ($generated@@118 4))))
 (and ($generated@@117 $generated@@126 ($generated@@118 3)) (let (($generated@@127 ($generated@@119 $generated@@126 ($generated@@118 3))))
($generated@@120 $generated@@127))))))) (= $generated@@121 (let (($generated@@128 $generated@@76))
(let (($generated@@129 ($generated@@119 $generated@@128 ($generated@@118 4))))
(let (($generated@@130 ($generated@@119 $generated@@129 ($generated@@118 3))))
(let (($generated@@131 ($generated@@122 $generated@@130)))
$generated@@131)))))))))
(assert  (=> (<= 0 $generated@@114) (=> (or $generated@@115 (not (= 0 $generated@@114))) (and (and $generated@@116 (let (($generated@@132 $generated@@76))
 (and ($generated@@117 $generated@@132 ($generated@@118 4)) (let (($generated@@133 ($generated@@119 $generated@@132 ($generated@@118 4))))
 (and ($generated@@117 $generated@@133 ($generated@@118 3)) (let (($generated@@134 ($generated@@119 $generated@@133 ($generated@@118 3))))
($generated@@120 $generated@@134))))))) (= $generated@@121 (let (($generated@@135 $generated@@76))
(let (($generated@@136 ($generated@@119 $generated@@135 ($generated@@118 4))))
(let (($generated@@137 ($generated@@119 $generated@@136 ($generated@@118 3))))
(let (($generated@@138 ($generated@@122 $generated@@137)))
$generated@@138)))))))))
(assert (forall (($generated@@140 T@U) ) (! (= (type ($generated@@139 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@140))
)))
(assert (= ($generated@@139 $generated@@44) $generated@@49))
(assert (= ($generated@@139 $generated@@45) $generated@@50))
(assert (= ($generated@@139 $generated@@46) $generated@@51))
(assert (= ($generated@@139 $generated@@47) $generated@@52))
(assert (= ($generated@@139 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@143) 13) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@69 (type $generated@@148))))
(= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@144) 14)) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@150 $generated@@151 $generated@@152)) $generated@@144)
 :pattern ( ($generated@@146 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@69 (type $generated@@154))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@145 ($generated@@146 $generated@@153 $generated@@154 $generated@@155) $generated@@154) $generated@@155)))
 :weight 0
))) (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@145 $generated@@158 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or true (= ($generated@@145 ($generated@@146 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@145 $generated@@162 $generated@@164)))
 :weight 0
)))) (forall (($generated@@165 Int) ) (! (= (type ($generated@@142 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@142 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@81 $generated@@143 $generated@@144))) ($generated@@141 $generated@@166 ($generated@@142 0) $generated@@167))
 :pattern ( ($generated@@141 $generated@@166 ($generated@@142 0) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@168 $generated@@169 ($generated@@142 0)))
 :pattern ( ($generated@@168 $generated@@169 ($generated@@142 0)))
)))
(assert  (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@173 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@171 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (= (type $generated@@175) $generated@@66) (= (type $generated@@176) $generated@@66)) (= (type $generated@@177) $generated@@172)) ($generated@@168 $generated@@177 ($generated@@171 $generated@@175 $generated@@176))) ($generated@@170 $generated@@177))
 :pattern ( ($generated@@170 $generated@@177) ($generated@@168 $generated@@177 ($generated@@171 $generated@@175 $generated@@176)))
)))
(assert  (and (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@78)
 :pattern ( ($generated@@179 $generated@@181))
)) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@78)
 :pattern ( ($generated@@180 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@172) (= (type $generated@@184) $generated@@172)) true) (= ($generated@@178 $generated@@183 $generated@@184)  (and (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)) (= ($generated@@180 $generated@@183) ($generated@@180 $generated@@184)))))
 :pattern ( ($generated@@178 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@66)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@81 $generated@@78 $generated@@2)) (= (type $generated@@189) $generated@@66)) ($generated@@168 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@168 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@143 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@69 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@143) (= (type $generated@@240) ($generated@@81 $generated@@143 $generated@@144))) (= (type $generated@@241) ($generated@@68 $generated@@4))) (= (type $generated@@243) $generated@@143)) (= (type $generated@@244) ($generated@@68 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@145 ($generated@@84 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@192 $generated@@143 $generated@@4))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@69 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@143) (= (type $generated@@252) ($generated@@81 $generated@@143 $generated@@144))) (= (type $generated@@253) ($generated@@68 $generated@@4))) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) ($generated@@68 $generated@@257))) (= ($generated@@0 ($generated@@190 ($generated@@246 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@145 ($generated@@84 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@190 ($generated@@246 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@259 $generated@@260)) $generated@@172)
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@78)) (= (type $generated@@264) $generated@@78)) (= ($generated@@168 ($generated@@258 $generated@@263 $generated@@264) ($generated@@171 $generated@@261 $generated@@262))  (and ($generated@@79 $generated@@263 $generated@@261) ($generated@@79 $generated@@264 $generated@@262))))
 :pattern ( ($generated@@168 ($generated@@258 $generated@@263 $generated@@264) ($generated@@171 $generated@@261 $generated@@262)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@82 (type $generated@@266))))
(= (type ($generated@@265 $generated@@266 $generated@@267)) ($generated@@81 $generated@@268 $generated@@2)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
 (=> (and (= (type $generated@@269) ($generated@@81 $generated@@272 $generated@@2)) (= (type $generated@@270) ($generated@@81 $generated@@272 $generated@@2))) (= ($generated ($generated@@84 ($generated@@265 $generated@@269 $generated@@270) $generated@@271)) (+ ($generated ($generated@@84 $generated@@269 $generated@@271)) ($generated ($generated@@84 $generated@@270 $generated@@271))))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@269 $generated@@270) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@172) (= (type $generated@@274) $generated@@172)) (= ($generated@@178 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@178 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@66)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@278) $generated@@66)) (= ($generated@@168 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@78) ($generated@@0 ($generated@@84 $generated@@277 $generated@@279))) ($generated@@79 $generated@@279 $generated@@278))
 :pattern ( ($generated@@84 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@168 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@66)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@283) $generated@@66)) (= ($generated@@168 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@78) ($generated@@0 ($generated@@84 $generated@@282 $generated@@284))) ($generated@@79 $generated@@284 $generated@@283))
 :pattern ( ($generated@@84 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@168 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@118 $generated@@285) $generated@@285)
 :pattern ( ($generated@@118 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) $generated@@66)) (= (type $generated@@294) $generated@@78)) (= (type $generated@@295) $generated@@78)) (= (type $generated@@296) ($generated@@81 $generated@@143 $generated@@144))) ($generated@@290 $generated@@296)) (= ($generated@@141 ($generated@@258 $generated@@294 $generated@@295) ($generated@@171 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@141 ($generated@@258 $generated@@294 $generated@@295) ($generated@@171 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@172) (= ($generated@@170 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@170 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@172) ($generated@@170 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@78) (= (type $generated@@302) $generated@@78)) (= $generated@@300 ($generated@@258 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@170 $generated@@300))
)))
(assert  (and (and (forall (($generated@@307 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@307)) 17)) (forall (($generated@@308 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
))) (forall (($generated@@309 T@T) ) (! (= (type ($generated@@303 $generated@@309)) ($generated@@305 $generated@@309))
 :pattern ( ($generated@@303 $generated@@309))
))))
(assert (forall (($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@310)) 0)
 :pattern ( ($generated@@303 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
(= (type ($generated@@312 $generated@@313 $generated@@314)) ($generated@@81 $generated@@315 $generated@@2)))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 (type $generated@@317)))
 (=> (= (type $generated@@316) ($generated@@81 $generated@@318 $generated@@2)) (= ($generated@@311 ($generated@@312 $generated@@316 $generated@@317)) (+ ($generated@@311 $generated@@316) 1))))
 :pattern ( ($generated@@311 ($generated@@312 $generated@@316 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@78)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@66) (= (type $generated@@323) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@291 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@141 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@291 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@82 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@81 $generated@@325 $generated@@2)) (and (= (= ($generated@@311 $generated@@324) 0) (= $generated@@324 ($generated@@77 $generated@@325))) (=> (not (= ($generated@@311 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@84 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@311 $generated@@324))
)))
(assert  (=> true (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@78) (or ($generated@@327 $generated@@328) ($generated@@79 $generated@@328 $generated@@80))) ($generated@@168 ($generated@@75 $generated@@328) ($generated@@185 $generated@@46)))
 :pattern ( ($generated@@75 $generated@@328))
))))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@84 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@84 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@81 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@84 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@84 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@82 (type $generated@@365))))
 (=> (and (= (type $generated@@365) ($generated@@81 $generated@@367 $generated@@2)) (= (type $generated@@366) ($generated@@81 $generated@@367 $generated@@2))) (= ($generated@@311 ($generated@@265 $generated@@365 $generated@@366)) (+ ($generated@@311 $generated@@365) ($generated@@311 $generated@@366)))))
 :pattern ( ($generated@@311 ($generated@@265 $generated@@365 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@82 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@81 $generated@@369 $generated@@2)) (= ($generated@@186 $generated@@368) (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@369) (and (<= 0 ($generated ($generated@@84 $generated@@368 $generated@@370))) (<= ($generated ($generated@@84 $generated@@368 $generated@@370)) ($generated@@311 $generated@@368))))
 :pattern ( ($generated@@84 $generated@@368 $generated@@370))
)))))
 :pattern ( ($generated@@186 $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (= (type $generated@@371) ($generated@@81 $generated@@373 $generated@@2)) (= ($generated ($generated@@84 ($generated@@312 $generated@@371 $generated@@372) $generated@@372)) (+ ($generated ($generated@@84 $generated@@371 $generated@@372)) 1))))
 :pattern ( ($generated@@312 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@375)))
 (=> (and (and (= (type $generated@@374) ($generated@@81 $generated@@377 $generated@@2)) (= (type $generated@@376) $generated@@377)) (< 0 ($generated ($generated@@84 $generated@@374 $generated@@376)))) (< 0 ($generated ($generated@@84 ($generated@@312 $generated@@374 $generated@@375) $generated@@376)))))
 :pattern ( ($generated@@312 $generated@@374 $generated@@375) ($generated@@84 $generated@@374 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@333 (type $generated@@378))))
(let (($generated@@380 ($generated@@332 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@331 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@330 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@329 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@81 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@333 (type $generated@@385))))
(let (($generated@@387 ($generated@@332 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@331 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@330 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@351 (type $generated@@389))))
(let (($generated@@391 ($generated@@350 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@349 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@348 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@347 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@81 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@351 (type $generated@@396))))
(let (($generated@@398 ($generated@@350 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@349 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@348 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@84 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@401)))
 (=> (and (= (type $generated@@400) ($generated@@81 $generated@@403 $generated@@2)) (= (type $generated@@402) $generated@@403)) (= (< 0 ($generated ($generated@@84 ($generated@@312 $generated@@400 $generated@@401) $generated@@402)))  (or (= $generated@@402 $generated@@401) (< 0 ($generated ($generated@@84 $generated@@400 $generated@@402)))))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@400 $generated@@401) $generated@@402))
)))
(assert  (=> true (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (and (= (type $generated@@404) $generated@@78) (or ($generated@@117 $generated@@404 $generated@@405) ($generated@@79 $generated@@404 $generated@@80))) (and ($generated@@74 ($generated@@75 ($generated@@119 $generated@@404 $generated@@405)) ($generated@@265 ($generated@@75 $generated@@404) ($generated@@312 ($generated@@77 $generated@@78) ($generated@@319 ($generated@@8 $generated@@405))))) ($generated@@79 ($generated@@119 $generated@@404 $generated@@405) $generated@@80)))
 :pattern ( ($generated@@119 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@81 $generated@@78 $generated@@2)) (= (type $generated@@407) $generated@@66)) (= ($generated@@168 $generated@@406 ($generated@@185 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@78) (< 0 ($generated ($generated@@84 $generated@@406 $generated@@408)))) ($generated@@79 $generated@@408 $generated@@407))
 :pattern ( ($generated@@84 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@168 $generated@@406 ($generated@@185 $generated@@407)))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@82 (type $generated@@409))))
 (=> (and (= (type $generated@@409) ($generated@@81 $generated@@411 $generated@@2)) (= (type $generated@@410) ($generated@@81 $generated@@411 $generated@@2))) (= ($generated@@74 $generated@@409 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (= ($generated ($generated@@84 $generated@@409 $generated@@412)) ($generated ($generated@@84 $generated@@410 $generated@@412))))
 :pattern ( ($generated@@84 $generated@@409 $generated@@412))
 :pattern ( ($generated@@84 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@74 $generated@@409 $generated@@410))
)))
(assert  (=> (<= 0 $generated@@114) (=> (or $generated@@115 (not (= 0 $generated@@114))) (= ($generated@@118 $generated@@121) ($generated@@118 3)))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@413 ($generated@@275 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@78) ($generated@@0 ($generated@@84 $generated@@413 $generated@@416))) ($generated@@291 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@84 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@141 $generated@@413 ($generated@@275 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@417 ($generated@@280 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@78) ($generated@@0 ($generated@@84 $generated@@417 $generated@@420))) ($generated@@291 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@84 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@141 $generated@@417 ($generated@@280 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@84 ($generated@@77 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@84 ($generated@@77 $generated@@422) $generated@@421)))
)))
(assert  (and (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@423 $generated@@426)) ($generated@@81 $generated@@78 $generated@@4))
 :pattern ( ($generated@@423 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@424 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@424 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@333 (type $generated@@429))))
(let (($generated@@431 ($generated@@332 (type $generated@@429))))
(= (type ($generated@@425 $generated@@429)) ($generated@@81 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@425 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@433) $generated@@78)) (= ($generated@@0 ($generated@@84 ($generated@@423 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@84 ($generated@@329 $generated@@432) ($generated@@179 ($generated@@424 $generated@@172 $generated@@433)))) (= ($generated@@84 ($generated@@425 $generated@@432) ($generated@@179 ($generated@@424 $generated@@172 $generated@@433))) ($generated@@180 ($generated@@424 $generated@@172 $generated@@433))))))
 :pattern ( ($generated@@84 ($generated@@423 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@81 $generated@@78 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@351 (type $generated@@437))))
(let (($generated@@439 ($generated@@350 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@81 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@441) $generated@@78)) (= ($generated@@0 ($generated@@84 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@84 ($generated@@347 $generated@@440) ($generated@@179 ($generated@@424 $generated@@172 $generated@@441)))) (= ($generated@@84 ($generated@@435 $generated@@440) ($generated@@179 ($generated@@424 $generated@@172 $generated@@441))) ($generated@@180 ($generated@@424 $generated@@172 $generated@@441))))))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@84 ($generated@@329 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@84 ($generated@@425 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@442) $generated@@446))
 :pattern ( ($generated@@84 ($generated@@425 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@350 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@349 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@84 ($generated@@393 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@84 ($generated@@347 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@84 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@447) $generated@@451))
 :pattern ( ($generated@@84 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@84 ($generated@@393 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@456) $generated@@66)) (= (type $generated@@457) $generated@@66)) (= (type $generated@@458) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@455) $generated@@459))) (and ($generated@@291 ($generated@@84 ($generated@@425 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@291 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@84 ($generated@@425 $generated@@455) $generated@@459))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@141 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@464) $generated@@66)) (= (type $generated@@465) $generated@@66)) (= (type $generated@@466) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@463) $generated@@467))) (and ($generated@@291 ($generated@@84 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@291 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@84 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@141 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@82 (type $generated@@468))))
 (=> (and (and (= (type $generated@@468) ($generated@@81 $generated@@470 $generated@@2)) (= (type $generated@@469) ($generated@@81 $generated@@470 $generated@@2))) ($generated@@74 $generated@@468 $generated@@469)) (= $generated@@468 $generated@@469)))
 :pattern ( ($generated@@74 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@472 T@T) ) (! (= (type ($generated@@471 $generated@@472)) ($generated@@81 $generated@@472 $generated@@4))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@351 (type $generated@@473))))
(let (($generated@@475 ($generated@@350 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@349 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@348 $generated@@475 $generated@@474)) (= ($generated@@347 $generated@@473) ($generated@@471 $generated@@475))))))
 :pattern ( ($generated@@347 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@351 (type $generated@@476))))
(let (($generated@@478 ($generated@@350 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@349 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@348 $generated@@478 $generated@@477)) (= ($generated@@393 $generated@@476) ($generated@@471 $generated@@477))))))
 :pattern ( ($generated@@393 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@351 (type $generated@@479))))
(let (($generated@@481 ($generated@@350 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@349 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@348 $generated@@481 $generated@@480)) (= ($generated@@434 $generated@@479) ($generated@@471 $generated@@78))))))
 :pattern ( ($generated@@434 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@333 (type $generated@@482))))
(let (($generated@@484 ($generated@@332 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@331 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@330 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (and (and (= (type $generated@@485) $generated@@78) (= (type $generated@@486) $generated@@78)) ($generated@@0 ($generated@@84 ($generated@@423 $generated@@482) ($generated@@319 ($generated@@258 $generated@@485 $generated@@486)))))
 :no-pattern (type $generated@@485)
 :no-pattern (type $generated@@486)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
))))))
 :pattern ( ($generated@@423 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@351 (type $generated@@487))))
(let (($generated@@489 ($generated@@350 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@349 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@348 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@78) (= (type $generated@@491) $generated@@78)) ($generated@@0 ($generated@@84 ($generated@@434 $generated@@487) ($generated@@319 ($generated@@258 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@434 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@78) ($generated@@79 $generated@@492 $generated@@46)) (and (= ($generated@@319 ($generated@@424 $generated@@2 $generated@@492)) $generated@@492) ($generated@@168 ($generated@@424 $generated@@2 $generated@@492) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@492 $generated@@46))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@78) ($generated@@79 $generated@@493 $generated@@47)) (and (= ($generated@@319 ($generated@@424 $generated@@3 $generated@@493)) $generated@@493) ($generated@@168 ($generated@@424 $generated@@3 $generated@@493) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@47))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@78) ($generated@@79 $generated@@494 $generated@@44)) (and (= ($generated@@319 ($generated@@424 $generated@@4 $generated@@494)) $generated@@494) ($generated@@168 ($generated@@424 $generated@@4 $generated@@494) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@495) 20))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@78) ($generated@@79 $generated@@496 $generated@@45)) (and (= ($generated@@319 ($generated@@424 $generated@@495 $generated@@496)) $generated@@496) ($generated@@168 ($generated@@424 $generated@@495 $generated@@496) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@496 $generated@@45))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@79 ($generated@@319 $generated@@497) $generated@@498) ($generated@@168 $generated@@497 $generated@@498)))
 :pattern ( ($generated@@79 ($generated@@319 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@82 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@81 $generated@@500 $generated@@2)) (<= 0 ($generated@@311 $generated@@499))))
 :pattern ( ($generated@@311 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@306 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@305 $generated@@502)) (<= 0 ($generated@@304 $generated@@501))))
 :pattern ( ($generated@@304 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@452 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@452 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@452 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@452 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@139 ($generated@@452 $generated@@511 $generated@@512)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@460 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@460 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@460 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@460 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@139 ($generated@@460 $generated@@521 $generated@@522)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@78) (= (type $generated@@524) $generated@@78)) (= ($generated@@297 ($generated@@258 $generated@@523 $generated@@524)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= ($generated@@525 ($generated@@171 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@171 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@529 ($generated@@171 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@171 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@78) (= (type $generated@@534) $generated@@78)) (= ($generated@@179 ($generated@@258 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@258 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@78) (= (type $generated@@536) $generated@@78)) (= ($generated@@180 ($generated@@258 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@258 $generated@@535 $generated@@536))
)))
(assert  (and (forall (($generated@@539 T@U) ) (! (= (type ($generated@@537 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@539))
)) (forall (($generated@@540 T@U) ($generated@@541 Int) ) (! (let (($generated@@542 ($generated@@306 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540 $generated@@541)) $generated@@542))
 :pattern ( ($generated@@538 $generated@@540 $generated@@541))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@305 $generated@@78)) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@543 ($generated@@537 $generated@@544) $generated@@545) (forall (($generated@@546 Int) ) (!  (=> (and (<= 0 $generated@@546) (< $generated@@546 ($generated@@304 $generated@@543))) ($generated@@291 ($generated@@538 $generated@@543 $generated@@546) $generated@@544 $generated@@545))
 :pattern ( ($generated@@538 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@141 $generated@@543 ($generated@@537 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@547 ($generated@@142 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@142 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@66)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@549 ($generated@@275 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@275 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@66) (= ($generated@@139 ($generated@@275 $generated@@552)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@66)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@553 ($generated@@280 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@280 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@139 ($generated@@280 $generated@@556)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@557 ($generated@@185 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@185 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@139 ($generated@@185 $generated@@560)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@537 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@537 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@139 ($generated@@537 $generated@@564)) $generated@@57))
 :pattern ( ($generated@@537 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(= ($generated@@424 $generated@@566 ($generated@@319 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@319 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@66)) (= ($generated@@168 $generated@@567 ($generated@@452 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@567) $generated@@570))) (and ($generated@@79 ($generated@@84 ($generated@@425 $generated@@567) $generated@@570) $generated@@569) ($generated@@79 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@84 ($generated@@425 $generated@@567) $generated@@570))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@168 $generated@@567 ($generated@@452 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) (= ($generated@@168 $generated@@571 ($generated@@460 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@571) $generated@@574))) (and ($generated@@79 ($generated@@84 ($generated@@435 $generated@@571) $generated@@574) $generated@@573) ($generated@@79 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@84 ($generated@@435 $generated@@571) $generated@@574))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@168 $generated@@571 ($generated@@460 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@78) (= (type $generated@@578) $generated@@78)) (< ($generated@@575 $generated@@577) ($generated@@576 ($generated@@258 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@258 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@78) (= (type $generated@@580) $generated@@78)) (< ($generated@@575 $generated@@580) ($generated@@576 ($generated@@258 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@258 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@78) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) ($generated@@79 $generated@@581 ($generated@@452 $generated@@582 $generated@@583))) (and (= ($generated@@319 ($generated@@424 ($generated@@331 $generated@@78 $generated@@78) $generated@@581)) $generated@@581) ($generated@@168 ($generated@@424 ($generated@@331 $generated@@78 $generated@@78) $generated@@581) ($generated@@452 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@452 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@78) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) $generated@@66)) ($generated@@79 $generated@@584 ($generated@@460 $generated@@585 $generated@@586))) (and (= ($generated@@319 ($generated@@424 ($generated@@349 $generated@@78 $generated@@78) $generated@@584)) $generated@@584) ($generated@@168 ($generated@@424 ($generated@@349 $generated@@78 $generated@@78) $generated@@584) ($generated@@460 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@460 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@66) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@78)) ($generated@@79 $generated@@589 ($generated@@171 $generated@@587 $generated@@588))) (and (= ($generated@@319 ($generated@@424 $generated@@172 $generated@@589)) $generated@@589) ($generated@@168 ($generated@@424 $generated@@172 $generated@@589) ($generated@@171 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@79 $generated@@589 ($generated@@171 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@84 ($generated@@471 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@84 ($generated@@471 $generated@@591) $generated@@590)))
)))
(assert  (=> true (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@78) (or ($generated@@120 $generated@@592) (and ($generated@@79 $generated@@592 $generated@@80) (not ($generated@@74 ($generated@@75 $generated@@592) ($generated@@77 $generated@@78)))))) (let (($generated@@593 ($generated@@122 $generated@@592)))
 (and (> ($generated ($generated@@84 ($generated@@75 $generated@@592) ($generated@@319 ($generated@@8 $generated@@593)))) 0) (forall (($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@2) true) (> ($generated ($generated@@84 ($generated@@75 $generated@@592) ($generated@@319 $generated@@594))) 0)) (<= $generated@@593 ($generated $generated@@594)))
 :pattern ( ($generated@@84 ($generated@@75 $generated@@592) ($generated@@319 $generated@@594)))
)))))
 :pattern ( ($generated@@122 $generated@@592))
))))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@139 ($generated@@171 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@171 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@171 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@172) (= ($generated@@575 ($generated@@319 $generated@@599)) ($generated@@576 $generated@@599)))
 :pattern ( ($generated@@575 ($generated@@319 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@78) ($generated@@79 $generated@@600 ($generated@@142 0))) (and (= ($generated@@319 ($generated@@424 $generated@@2 $generated@@600)) $generated@@600) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@600) ($generated@@142 0))))
 :pattern ( ($generated@@79 $generated@@600 ($generated@@142 0)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@78) (= (type $generated@@602) $generated@@66)) ($generated@@79 $generated@@601 ($generated@@275 $generated@@602))) (and (= ($generated@@319 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@601)) $generated@@601) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@601) ($generated@@275 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@275 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@78) (= (type $generated@@604) $generated@@66)) ($generated@@79 $generated@@603 ($generated@@280 $generated@@604))) (and (= ($generated@@319 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@603)) $generated@@603) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@603) ($generated@@280 $generated@@604))))
 :pattern ( ($generated@@79 $generated@@603 ($generated@@280 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@78) (= (type $generated@@606) $generated@@66)) ($generated@@79 $generated@@605 ($generated@@185 $generated@@606))) (and (= ($generated@@319 ($generated@@424 ($generated@@81 $generated@@78 $generated@@2) $generated@@605)) $generated@@605) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@2) $generated@@605) ($generated@@185 $generated@@606))))
 :pattern ( ($generated@@79 $generated@@605 ($generated@@185 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@78) (= (type $generated@@608) $generated@@66)) ($generated@@79 $generated@@607 ($generated@@537 $generated@@608))) (and (= ($generated@@319 ($generated@@424 ($generated@@305 $generated@@78) $generated@@607)) $generated@@607) ($generated@@168 ($generated@@424 ($generated@@305 $generated@@78) $generated@@607) ($generated@@537 $generated@@608))))
 :pattern ( ($generated@@79 $generated@@607 ($generated@@537 $generated@@608)))
)))
(assert (= ($generated@@139 $generated@@80) $generated@@63))
(assert (= ($generated@@595 $generated@@80) $generated@@65))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@81 $generated@@78 $generated@@2)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@609 ($generated@@185 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@78) (< 0 ($generated ($generated@@84 $generated@@609 $generated@@612)))) ($generated@@291 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@84 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@141 $generated@@609 ($generated@@185 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@172) (= (type $generated@@614) $generated@@66)) (= (type $generated@@615) ($generated@@81 $generated@@143 $generated@@144))) (and ($generated@@290 $generated@@615) (and ($generated@@170 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@66) ($generated@@141 $generated@@613 ($generated@@171 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@171 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@291 ($generated@@179 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@291 ($generated@@179 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@172) (= (type $generated@@618) $generated@@66)) (= (type $generated@@619) ($generated@@81 $generated@@143 $generated@@144))) (and ($generated@@290 $generated@@619) (and ($generated@@170 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@66) ($generated@@141 $generated@@617 ($generated@@171 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@141 $generated@@617 ($generated@@171 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@291 ($generated@@180 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@291 ($generated@@180 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@81 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@624)) (not (= $generated@@622 $generated@@623))) (= ($generated ($generated@@84 $generated@@621 $generated@@623)) ($generated ($generated@@84 ($generated@@312 $generated@@621 $generated@@622) $generated@@623)))))
 :pattern ( ($generated@@312 $generated@@621 $generated@@622) ($generated@@84 $generated@@621 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@78) (= (type $generated@@626) $generated@@78)) (= ($generated@@258 ($generated@@286 $generated@@625) ($generated@@286 $generated@@626)) ($generated@@286 ($generated@@258 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@258 ($generated@@286 $generated@@625) ($generated@@286 $generated@@626)))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@118 $generated@@627))) ($generated@@286 ($generated@@319 ($generated@@8 $generated@@627))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@118 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ) (! (= ($generated@@319 ($generated@@286 $generated@@628)) ($generated@@286 ($generated@@319 $generated@@628)))
 :pattern ( ($generated@@319 ($generated@@286 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@306 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@305 $generated@@630)) (= ($generated@@304 $generated@@629) 0)) (= $generated@@629 ($generated@@303 $generated@@630))))
 :pattern ( ($generated@@304 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@632)))
 (=> (and (and (= (type $generated@@631) ($generated@@81 $generated@@634 $generated@@2)) (= (type $generated@@633) $generated@@2)) (<= 0 ($generated $generated@@633))) (= ($generated@@311 ($generated@@85 $generated@@631 $generated@@632 $generated@@633)) (+ (- ($generated@@311 $generated@@631) ($generated ($generated@@84 $generated@@631 $generated@@632))) ($generated $generated@@633)))))
 :pattern ( ($generated@@311 ($generated@@85 $generated@@631 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@636) $generated@@2)) ($generated@@141 $generated@@636 $generated@@46 $generated@@635))
 :pattern ( ($generated@@141 $generated@@636 $generated@@46 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@638) $generated@@3)) ($generated@@141 $generated@@638 $generated@@47 $generated@@637))
 :pattern ( ($generated@@141 $generated@@638 $generated@@47 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@640) $generated@@4)) ($generated@@141 $generated@@640 $generated@@44 $generated@@639))
 :pattern ( ($generated@@141 $generated@@640 $generated@@44 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@642) $generated@@495)) ($generated@@141 $generated@@642 $generated@@45 $generated@@641))
 :pattern ( ($generated@@141 $generated@@642 $generated@@45 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@644) $generated@@78)) ($generated@@141 $generated@@644 $generated@@48 $generated@@643))
 :pattern ( ($generated@@141 $generated@@644 $generated@@48 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@305 $generated@@78)) (= (type $generated@@646) $generated@@66)) (= ($generated@@168 $generated@@645 ($generated@@537 $generated@@646)) (forall (($generated@@647 Int) ) (!  (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@304 $generated@@645))) ($generated@@79 ($generated@@538 $generated@@645 $generated@@647) $generated@@646))
 :pattern ( ($generated@@538 $generated@@645 $generated@@647))
))))
 :pattern ( ($generated@@168 $generated@@645 ($generated@@537 $generated@@646)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (= (type $generated@@649) ($generated@@305 $generated@@78)) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@304 $generated@@649))) (< ($generated@@576 ($generated@@424 $generated@@172 ($generated@@538 $generated@@649 $generated@@650))) ($generated@@648 $generated@@649))))
 :pattern ( ($generated@@576 ($generated@@424 $generated@@172 ($generated@@538 $generated@@649 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@652) $generated@@66)) (= (type $generated@@653) $generated@@66)) ($generated@@168 $generated@@651 ($generated@@452 $generated@@652 $generated@@653))) (and (and ($generated@@168 ($generated@@329 $generated@@651) ($generated@@275 $generated@@652)) ($generated@@168 ($generated@@382 $generated@@651) ($generated@@275 $generated@@653))) ($generated@@168 ($generated@@423 $generated@@651) ($generated@@275 ($generated@@171 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@168 $generated@@651 ($generated@@452 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@655) $generated@@66)) (= (type $generated@@656) $generated@@66)) ($generated@@168 $generated@@654 ($generated@@460 $generated@@655 $generated@@656))) (and (and ($generated@@168 ($generated@@347 $generated@@654) ($generated@@280 $generated@@655)) ($generated@@168 ($generated@@393 $generated@@654) ($generated@@280 $generated@@656))) ($generated@@168 ($generated@@434 $generated@@654) ($generated@@280 ($generated@@171 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@168 $generated@@654 ($generated@@460 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@2) ($generated@@168 $generated@@657 $generated@@46))
 :pattern ( ($generated@@168 $generated@@657 $generated@@46))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@3) ($generated@@168 $generated@@658 $generated@@47))
 :pattern ( ($generated@@168 $generated@@658 $generated@@47))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@4) ($generated@@168 $generated@@659 $generated@@44))
 :pattern ( ($generated@@168 $generated@@659 $generated@@44))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@495) ($generated@@168 $generated@@660 $generated@@45))
 :pattern ( ($generated@@168 $generated@@660 $generated@@45))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@78) ($generated@@168 $generated@@661 $generated@@48))
 :pattern ( ($generated@@168 $generated@@661 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@662) ($generated@@192 $generated@@143 $generated@@4)) (= (type $generated@@663) $generated@@143)) (= (type $generated@@664) ($generated@@81 $generated@@143 $generated@@144))) (= (type $generated@@665) $generated@@78)) (= (type $generated@@666) $generated@@78)) (= (type $generated@@667) $generated@@78)) (= (type $generated@@669) $generated@@78)) (= (type $generated@@670) $generated@@78)) (= (type $generated@@672) $generated@@78)) (= (type $generated@@675) ($generated@@192 $generated@@143 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@677  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@118 $generated@@121) ($generated@@118 3)))))
(let (($generated@@678  (=> (= $generated@@662 ($generated@@246 $generated@@663 $generated@@664 $generated@@60 false)) (=> (and (and (and (and (and (and ($generated@@79 $generated@@665 $generated@@80) ($generated@@291 $generated@@665 $generated@@80 $generated@@664)) $generated@@116) (and (= $generated@@666 $generated@@76) $generated@@116)) (and (and ($generated@@79 $generated@@666 $generated@@80) (= $generated@@665 $generated@@666)) (and ($generated@@79 $generated@@667 $generated@@80) ($generated@@291 $generated@@667 $generated@@80 $generated@@664)))) (and (and (and ($generated@@291 $generated@@665 $generated@@80 $generated@@664) (= $generated@@668 ($generated@@118 4))) (and ($generated@@141 ($generated@@8 $generated@@668) $generated@@46 $generated@@664) ($generated@@117 $generated@@665 ($generated@@118 4)))) (and (and (= $generated@@669 ($generated@@119 $generated@@665 ($generated@@118 4))) ($generated@@117 $generated@@665 ($generated@@118 4))) (and ($generated@@79 $generated@@669 $generated@@80) (= $generated@@667 $generated@@669))))) (and (and (and (and ($generated@@79 $generated@@670 $generated@@80) ($generated@@291 $generated@@670 $generated@@80 $generated@@664)) ($generated@@291 $generated@@667 $generated@@80 $generated@@664)) (and (= $generated@@671 ($generated@@118 3)) ($generated@@141 ($generated@@8 $generated@@671) $generated@@46 $generated@@664))) (and (and (and ($generated@@117 $generated@@667 ($generated@@118 3)) (= $generated@@672 ($generated@@119 $generated@@667 ($generated@@118 3)))) (and ($generated@@117 $generated@@667 ($generated@@118 3)) ($generated@@79 $generated@@672 $generated@@80))) (and (and (= $generated@@670 $generated@@672) ($generated@@291 $generated@@670 $generated@@80 $generated@@664)) (and ($generated@@327 $generated@@670) ($generated@@327 $generated@@670)))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@74 ($generated@@75 $generated@@670) ($generated@@312 ($generated@@312 ($generated@@77 $generated@@78) ($generated@@319 ($generated@@8 ($generated@@118 3)))) ($generated@@319 ($generated@@8 ($generated@@118 4)))))) (=> ($generated@@74 ($generated@@75 $generated@@670) ($generated@@312 ($generated@@312 ($generated@@77 $generated@@78) ($generated@@319 ($generated@@8 ($generated@@118 3)))) ($generated@@319 ($generated@@8 ($generated@@118 4))))) (=> ($generated@@291 $generated@@670 $generated@@80 $generated@@664) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@74 ($generated@@75 $generated@@670) ($generated@@77 $generated@@78)))) (=> (not ($generated@@74 ($generated@@75 $generated@@670) ($generated@@77 $generated@@78))) (=> (and (and (and ($generated@@120 $generated@@670) (= $generated@@673 ($generated@@122 $generated@@670))) (and ($generated@@120 $generated@@670) ($generated@@168 ($generated@@8 $generated@@673) $generated@@46))) (and (and (= $generated@@674 $generated@@673) (= $generated@@121 $generated@@674)) (and ($generated@@168 ($generated@@8 $generated@@121) $generated@@46) (= (ControlFlow 0 5) 4)))) $generated@@677))))))))))
(let (($generated@@679  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@680  (=> (= $generated@@675 ($generated@@191 $generated@@663 $generated@@664 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@679) (=> (= (ControlFlow 0 8) 5) $generated@@678)))))
(let (($generated@@681  (=> (and (and ($generated@@290 $generated@@664) ($generated@@676 $generated@@664)) (and (= 0 $generated@@114) (= (ControlFlow 0 9) 8))) $generated@@680)))
$generated@@681))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (Int) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U Int) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@250 (T@U Int) Bool)
(declare-fun $generated@@251 (T@U Int) Bool)
(declare-fun $generated@@252 (T@U Int) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@U T@U) T@U)
(declare-fun $generated@@318 (T@U T@U) Bool)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@351 (T@T T@T) T@U)
(declare-fun $generated@@352 (T@T T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@T T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@466 (T@U T@U) T@U)
(declare-fun $generated@@477 (T@T) T@U)
(declare-fun $generated@@501 () T@T)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@544 (T@U Int) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert  (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@88 $generated@@89)) 12))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@84 ($generated@@83 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@83 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@85 ($generated@@83 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@83 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@85 (type $generated@@94))))
(= (type ($generated@@86 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@86 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@87 $generated@@97 $generated@@98 $generated@@99)) ($generated@@83 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@85 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@86 ($generated@@87 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@86 ($generated@@87 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@86 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@86 $generated@@111 $generated@@113)))
 :weight 0
)))) (forall (($generated@@114 T@U) ) (! (= (type ($generated@@76 $generated@@114)) ($generated@@83 $generated@@77 $generated@@2))
 :pattern ( ($generated@@76 $generated@@114))
))) (= (type $generated@@80) $generated@@67)) (forall (($generated@@115 T@U) ) (! (= (type ($generated@@82 $generated@@115)) ($generated@@83 $generated@@77 $generated@@2))
 :pattern ( ($generated@@82 $generated@@115))
))))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@116 T@U) ) (!  (=> (and (= (type $generated@@116) $generated@@77) (or ($generated@@78 $generated@@116) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@116 $generated@@80)))) (and ($generated@@81 $generated@@116) (= ($generated@@76 $generated@@116) ($generated@@82 $generated@@116))))
 :pattern ( ($generated@@76 $generated@@116))
))))
(assert (forall (($generated@@118 T@U) ) (! (= (type ($generated@@117 $generated@@118)) $generated@@68)
 :pattern ( ($generated@@117 $generated@@118))
)))
(assert (= ($generated@@117 $generated@@44) $generated@@49))
(assert (= ($generated@@117 $generated@@45) $generated@@50))
(assert (= ($generated@@117 $generated@@46) $generated@@51))
(assert (= ($generated@@117 $generated@@47) $generated@@52))
(assert (= ($generated@@117 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@121) 13) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@126))))
(= (type ($generated@@123 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@123 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@122) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@124 $generated@@128 $generated@@129 $generated@@130)) $generated@@122)
 :pattern ( ($generated@@124 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@70 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@123 ($generated@@124 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@123 ($generated@@124 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@123 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@123 ($generated@@124 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@123 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@120 $generated@@143)) $generated@@67)
 :pattern ( ($generated@@120 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@83 $generated@@121 $generated@@122))) ($generated@@119 $generated@@144 ($generated@@120 0) $generated@@145))
 :pattern ( ($generated@@119 $generated@@144 ($generated@@120 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@120 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@120 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@77)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@77)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@167) $generated@@67)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@121 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@70 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@121) (= (type $generated@@218) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@219) ($generated@@69 $generated@@4))) (= (type $generated@@221) $generated@@121)) (= (type $generated@@222) ($generated@@69 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@123 ($generated@@86 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@121 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@70 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@121) (= (type $generated@@230) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@231) ($generated@@69 $generated@@4))) (= (type $generated@@233) $generated@@121)) (= (type $generated@@234) ($generated@@69 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@123 ($generated@@86 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (= (type $generated@@237) $generated@@67))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@236 $generated@@238 $generated@@80 $generated@@239) ($generated@@236 $generated@@238 $generated@@237 $generated@@239)))
 :pattern ( ($generated@@236 $generated@@238 $generated@@80 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242)) $generated@@150)
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@77)) (= (type $generated@@246) $generated@@77)) (= ($generated@@146 ($generated@@240 $generated@@245 $generated@@246) ($generated@@149 $generated@@243 $generated@@244))  (and ($generated@@79 $generated@@245 $generated@@243) ($generated@@79 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@146 ($generated@@240 $generated@@245 $generated@@246) ($generated@@149 $generated@@243 $generated@@244)))
)))
(assert  (and (and (forall (($generated@@253 T@U) ($generated@@254 Int) ) (! (= (type ($generated@@247 $generated@@253 $generated@@254)) $generated@@77)
 :pattern ( ($generated@@247 $generated@@253 $generated@@254))
)) (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@248 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@248 $generated@@255))
))) (forall (($generated@@257 T@U) ($generated@@258 Int) ) (! (= (type ($generated@@252 $generated@@257 $generated@@258)) $generated@@77)
 :pattern ( ($generated@@252 $generated@@257 $generated@@258))
))))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@259 T@U) ($generated@@260 Int) ) (!  (=> (and (= (type $generated@@259) $generated@@77) (or ($generated@@250 ($generated@@248 $generated@@259) ($generated@@249 $generated@@260)) (and (not (= 3 $generated@@75)) ($generated@@79 $generated@@259 $generated@@80)))) (and ($generated@@251 ($generated@@248 $generated@@259) ($generated@@249 $generated@@260)) (= ($generated@@247 ($generated@@248 $generated@@259) ($generated@@249 $generated@@260)) ($generated@@252 ($generated@@248 $generated@@259) ($generated@@249 $generated@@260)))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@248 $generated@@259) ($generated@@249 $generated@@260)))
))))
(assert  (=> true (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@77) (or ($generated@@262 $generated@@263) ($generated@@79 $generated@@263 $generated@@237))) true)
 :pattern ( ($generated@@261 $generated@@263))
))))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@84 (type $generated@@265))))
(= (type ($generated@@264 $generated@@265 $generated@@266)) ($generated@@83 $generated@@267 $generated@@2)))
 :pattern ( ($generated@@264 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
 (=> (and (= (type $generated@@268) ($generated@@83 $generated@@271 $generated@@2)) (= (type $generated@@269) ($generated@@83 $generated@@271 $generated@@2))) (= ($generated ($generated@@86 ($generated@@264 $generated@@268 $generated@@269) $generated@@270)) (+ ($generated ($generated@@86 $generated@@268 $generated@@270)) ($generated ($generated@@86 $generated@@269 $generated@@270))))))
 :pattern ( ($generated@@86 ($generated@@264 $generated@@268 $generated@@269) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@150) (= (type $generated@@273) $generated@@150)) (= ($generated@@156 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@156 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@67)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@277) $generated@@67)) (= ($generated@@146 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@77) ($generated@@0 ($generated@@86 $generated@@276 $generated@@278))) ($generated@@79 $generated@@278 $generated@@277))
 :pattern ( ($generated@@86 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@146 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@67)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@282) $generated@@67)) (= ($generated@@146 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@77) ($generated@@0 ($generated@@86 $generated@@281 $generated@@283))) ($generated@@79 $generated@@283 $generated@@282))
 :pattern ( ($generated@@86 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@146 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@249 $generated@@284) $generated@@284)
 :pattern ( ($generated@@249 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (= ($generated@@248 $generated@@285) $generated@@285)
 :pattern ( ($generated@@248 $generated@@285))
)))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@77) (or ($generated@@78 ($generated@@248 $generated@@286)) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@286 $generated@@80)))) (and ($generated@@81 ($generated@@248 $generated@@286)) (= ($generated@@76 ($generated@@248 $generated@@286)) ($generated@@82 ($generated@@248 $generated@@286)))))
 :weight 3
 :pattern ( ($generated@@76 ($generated@@248 $generated@@286)))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) $generated@@67)) (= (type $generated@@290) $generated@@77)) (= (type $generated@@291) $generated@@77)) (= (type $generated@@292) ($generated@@83 $generated@@121 $generated@@122))) ($generated@@287 $generated@@292)) (= ($generated@@119 ($generated@@240 $generated@@290 $generated@@291) ($generated@@149 $generated@@288 $generated@@289) $generated@@292)  (and ($generated@@236 $generated@@290 $generated@@288 $generated@@292) ($generated@@236 $generated@@291 $generated@@289 $generated@@292))))
 :pattern ( ($generated@@119 ($generated@@240 $generated@@290 $generated@@291) ($generated@@149 $generated@@288 $generated@@289) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@71)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@150) (= ($generated@@148 $generated@@295) (= ($generated@@293 $generated@@295) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@295))
)))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@296 T@U) ($generated@@297 Int) ) (!  (=> (and (= (type $generated@@296) $generated@@77) (or ($generated@@250 $generated@@296 $generated@@297) (and (not (= 3 $generated@@75)) ($generated@@79 $generated@@296 $generated@@80)))) (and ($generated@@251 $generated@@296 $generated@@297) (= ($generated@@247 $generated@@296 $generated@@297) ($generated@@252 $generated@@296 $generated@@297))))
 :pattern ( ($generated@@247 $generated@@296 $generated@@297))
))))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@77) (or ($generated@@78 $generated@@298) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@298 $generated@@80)))) ($generated@@146 ($generated@@76 $generated@@298) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@76 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@150) ($generated@@148 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@77) (= (type $generated@@301) $generated@@77)) (= $generated@@299 ($generated@@240 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@148 $generated@@299))
)))
(assert  (and (and (forall (($generated@@306 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@306)) 17)) (forall (($generated@@307 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@304 $generated@@307))
))) (forall (($generated@@308 T@T) ) (! (= (type ($generated@@302 $generated@@308)) ($generated@@304 $generated@@308))
 :pattern ( ($generated@@302 $generated@@308))
))))
(assert (forall (($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@309)) 0)
 :pattern ( ($generated@@302 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (! (let (($generated@@314 (type $generated@@313)))
(= (type ($generated@@311 $generated@@312 $generated@@313)) ($generated@@83 $generated@@314 $generated@@2)))
 :pattern ( ($generated@@311 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (! (let (($generated@@317 (type $generated@@316)))
 (=> (= (type $generated@@315) ($generated@@83 $generated@@317 $generated@@2)) (= ($generated@@310 ($generated@@311 $generated@@315 $generated@@316)) (+ ($generated@@310 $generated@@315) 1))))
 :pattern ( ($generated@@310 ($generated@@311 $generated@@315 $generated@@316)))
)))
(assert  (and (forall (($generated@@321 T@T) ) (! (= (type ($generated@@319 $generated@@321)) ($generated@@83 $generated@@321 $generated@@2))
 :pattern ( ($generated@@319 $generated@@321))
)) (forall (($generated@@322 T@U) ) (! (= (type ($generated@@320 $generated@@322)) $generated@@77)
 :pattern ( ($generated@@320 $generated@@322))
))))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@323 T@U) ($generated@@324 Int) ) (!  (=> (and (= (type $generated@@323) $generated@@77) (or ($generated@@250 $generated@@323 $generated@@324) (and (not (= 3 $generated@@75)) ($generated@@79 $generated@@323 $generated@@80)))) (and ($generated@@318 ($generated@@76 ($generated@@247 $generated@@323 $generated@@324)) ($generated@@264 ($generated@@76 $generated@@323) ($generated@@311 ($generated@@319 $generated@@77) ($generated@@320 ($generated@@8 $generated@@324))))) ($generated@@79 ($generated@@247 $generated@@323 $generated@@324) $generated@@80)))
 :pattern ( ($generated@@247 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@67) (= (type $generated@@327) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@236 ($generated@@320 $generated@@325) $generated@@326 $generated@@327) ($generated@@119 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@236 ($generated@@320 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@84 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@83 $generated@@329 $generated@@2)) (and (= (= ($generated@@310 $generated@@328) 0) (= $generated@@328 ($generated@@319 $generated@@329))) (=> (not (= ($generated@@310 $generated@@328) 0)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) (< 0 ($generated ($generated@@86 $generated@@328 $generated@@330))))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@310 $generated@@328))
)))
(assert  (=> true (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@77) (or ($generated@@81 $generated@@331) ($generated@@79 $generated@@331 $generated@@237))) ($generated@@146 ($generated@@82 $generated@@331) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@82 $generated@@331))
))))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 18)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@83 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@86 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@86 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert  (and (and (and (and (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (= ($generated@@1 ($generated@@352 $generated@@355 $generated@@356)) 19)) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= ($generated@@353 ($generated@@352 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@352 $generated@@357 $generated@@358))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@352 $generated@@359 $generated@@360)) $generated@@360)
 :pattern ( ($generated@@352 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@353 (type $generated@@361))))
(= (type ($generated@@350 $generated@@361)) ($generated@@83 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@361))
))) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= (type ($generated@@351 $generated@@363 $generated@@364)) ($generated@@352 $generated@@363 $generated@@364))
 :pattern ( ($generated@@351 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@T) ) (! (let (($generated@@367 (type $generated@@365)))
 (not ($generated@@0 ($generated@@86 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365))))
 :pattern ( (let (($generated@@367 (type $generated@@365)))
($generated@@86 ($generated@@350 ($generated@@351 $generated@@367 $generated@@366)) $generated@@365)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@84 (type $generated@@368))))
 (=> (and (= (type $generated@@368) ($generated@@83 $generated@@370 $generated@@2)) (= (type $generated@@369) ($generated@@83 $generated@@370 $generated@@2))) (= ($generated@@310 ($generated@@264 $generated@@368 $generated@@369)) (+ ($generated@@310 $generated@@368) ($generated@@310 $generated@@369)))))
 :pattern ( ($generated@@310 ($generated@@264 $generated@@368 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@84 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@83 $generated@@372 $generated@@2)) (= ($generated@@164 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (and (<= 0 ($generated ($generated@@86 $generated@@371 $generated@@373))) (<= ($generated ($generated@@86 $generated@@371 $generated@@373)) ($generated@@310 $generated@@371))))
 :pattern ( ($generated@@86 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@164 $generated@@371))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (= (type $generated@@374) ($generated@@83 $generated@@376 $generated@@2)) (= ($generated ($generated@@86 ($generated@@311 $generated@@374 $generated@@375) $generated@@375)) (+ ($generated ($generated@@86 $generated@@374 $generated@@375)) 1))))
 :pattern ( ($generated@@311 $generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@378)))
 (=> (and (and (= (type $generated@@377) ($generated@@83 $generated@@380 $generated@@2)) (= (type $generated@@379) $generated@@380)) (< 0 ($generated ($generated@@86 $generated@@377 $generated@@379)))) (< 0 ($generated ($generated@@86 ($generated@@311 $generated@@377 $generated@@378) $generated@@379)))))
 :pattern ( ($generated@@311 $generated@@377 $generated@@378) ($generated@@86 $generated@@377 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@336 (type $generated@@381))))
(let (($generated@@383 ($generated@@335 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@334 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@333 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@86 ($generated@@332 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@332 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@336 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@83 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@336 (type $generated@@388))))
(let (($generated@@390 ($generated@@335 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@334 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@333 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@86 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@354 (type $generated@@392))))
(let (($generated@@394 ($generated@@353 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@352 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@351 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@350 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@354 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@83 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@354 (type $generated@@399))))
(let (($generated@@401 ($generated@@353 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@352 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@351 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@86 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@404)))
 (=> (and (= (type $generated@@403) ($generated@@83 $generated@@406 $generated@@2)) (= (type $generated@@405) $generated@@406)) (= (< 0 ($generated ($generated@@86 ($generated@@311 $generated@@403 $generated@@404) $generated@@405)))  (or (= $generated@@405 $generated@@404) (< 0 ($generated ($generated@@86 $generated@@403 $generated@@405)))))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@408) $generated@@67)) (= ($generated@@146 $generated@@407 ($generated@@163 $generated@@408)) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@77) (< 0 ($generated ($generated@@86 $generated@@407 $generated@@409)))) ($generated@@79 $generated@@409 $generated@@408))
 :pattern ( ($generated@@86 $generated@@407 $generated@@409))
))))
 :pattern ( ($generated@@146 $generated@@407 ($generated@@163 $generated@@408)))
)))
(assert  (=> true (forall (($generated@@410 T@U) ($generated@@411 Int) ) (!  (=> (and (= (type $generated@@410) $generated@@77) (or ($generated@@251 $generated@@410 $generated@@411) (and ($generated@@79 $generated@@410 $generated@@237) ($generated@@261 $generated@@410)))) (and (let (($generated@@412 ($generated@@252 $generated@@410 $generated@@411)))
 (and ($generated@@261 $generated@@412) ($generated@@318 ($generated@@82 $generated@@412) ($generated@@264 ($generated@@82 $generated@@410) ($generated@@311 ($generated@@319 $generated@@77) ($generated@@320 ($generated@@8 $generated@@411))))))) ($generated@@79 ($generated@@252 $generated@@410 $generated@@411) $generated@@237)))
 :pattern ( ($generated@@252 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@84 (type $generated@@413))))
 (=> (and (= (type $generated@@413) ($generated@@83 $generated@@415 $generated@@2)) (= (type $generated@@414) ($generated@@83 $generated@@415 $generated@@2))) (= ($generated@@318 $generated@@413 $generated@@414) (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@415) (= ($generated ($generated@@86 $generated@@413 $generated@@416)) ($generated ($generated@@86 $generated@@414 $generated@@416))))
 :pattern ( ($generated@@86 $generated@@413 $generated@@416))
 :pattern ( ($generated@@86 $generated@@414 $generated@@416))
)))))
 :pattern ( ($generated@@318 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@417 ($generated@@274 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@77) ($generated@@0 ($generated@@86 $generated@@417 $generated@@420))) ($generated@@236 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@86 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@119 $generated@@417 ($generated@@274 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@421) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@421 ($generated@@279 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@77) ($generated@@0 ($generated@@86 $generated@@421 $generated@@424))) ($generated@@236 $generated@@424 $generated@@422 $generated@@423))
 :pattern ( ($generated@@86 $generated@@421 $generated@@424))
))))
 :pattern ( ($generated@@119 $generated@@421 ($generated@@279 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(= ($generated ($generated@@86 ($generated@@319 $generated@@426) $generated@@425)) 0))
 :pattern ( (let (($generated@@426 (type $generated@@425)))
($generated@@86 ($generated@@319 $generated@@426) $generated@@425)))
)))
(assert  (and (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@427 $generated@@430)) ($generated@@83 $generated@@77 $generated@@4))
 :pattern ( ($generated@@427 $generated@@430))
)) (forall (($generated@@431 T@T) ($generated@@432 T@U) ) (! (= (type ($generated@@428 $generated@@431 $generated@@432)) $generated@@431)
 :pattern ( ($generated@@428 $generated@@431 $generated@@432))
))) (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@336 (type $generated@@433))))
(let (($generated@@435 ($generated@@335 (type $generated@@433))))
(= (type ($generated@@429 $generated@@433)) ($generated@@83 $generated@@435 $generated@@434))))
 :pattern ( ($generated@@429 $generated@@433))
))))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@334 $generated@@77 $generated@@77)) (= (type $generated@@437) $generated@@77)) (= ($generated@@0 ($generated@@86 ($generated@@427 $generated@@436) $generated@@437))  (and ($generated@@0 ($generated@@86 ($generated@@332 $generated@@436) ($generated@@157 ($generated@@428 $generated@@150 $generated@@437)))) (= ($generated@@86 ($generated@@429 $generated@@436) ($generated@@157 ($generated@@428 $generated@@150 $generated@@437))) ($generated@@158 ($generated@@428 $generated@@150 $generated@@437))))))
 :pattern ( ($generated@@86 ($generated@@427 $generated@@436) $generated@@437))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@83 $generated@@77 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@354 (type $generated@@441))))
(let (($generated@@443 ($generated@@353 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@83 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@352 $generated@@77 $generated@@77)) (= (type $generated@@445) $generated@@77)) (= ($generated@@0 ($generated@@86 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@86 ($generated@@350 $generated@@444) ($generated@@157 ($generated@@428 $generated@@150 $generated@@445)))) (= ($generated@@86 ($generated@@439 $generated@@444) ($generated@@157 ($generated@@428 $generated@@150 $generated@@445))) ($generated@@158 ($generated@@428 $generated@@150 $generated@@445))))))
 :pattern ( ($generated@@86 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(let (($generated@@449 ($generated@@335 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@334 $generated@@449 $generated@@448)) (= ($generated@@0 ($generated@@86 ($generated@@385 $generated@@446) $generated@@447)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) (and ($generated@@0 ($generated@@86 ($generated@@332 $generated@@446) $generated@@450)) (= $generated@@447 ($generated@@86 ($generated@@429 $generated@@446) $generated@@450))))
 :pattern ( ($generated@@86 ($generated@@332 $generated@@446) $generated@@450))
 :pattern ( ($generated@@86 ($generated@@429 $generated@@446) $generated@@450))
))))))
 :pattern ( ($generated@@86 ($generated@@385 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(let (($generated@@454 ($generated@@353 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@352 $generated@@454 $generated@@453)) (= ($generated@@0 ($generated@@86 ($generated@@396 $generated@@451) $generated@@452)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) (and ($generated@@0 ($generated@@86 ($generated@@350 $generated@@451) $generated@@455)) (= $generated@@452 ($generated@@86 ($generated@@439 $generated@@451) $generated@@455))))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@451) $generated@@455))
 :pattern ( ($generated@@86 ($generated@@439 $generated@@451) $generated@@455))
))))))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@451) $generated@@452))
)))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@456 T@U) ($generated@@457 Int) ) (!  (=> (and (= (type $generated@@456) $generated@@77) (or ($generated@@250 $generated@@456 ($generated@@249 $generated@@457)) (and (not (= 3 $generated@@75)) ($generated@@79 $generated@@456 $generated@@80)))) (and ($generated@@251 $generated@@456 ($generated@@249 $generated@@457)) (= ($generated@@247 $generated@@456 ($generated@@249 $generated@@457)) ($generated@@252 $generated@@456 ($generated@@249 $generated@@457)))))
 :weight 3
 :pattern ( ($generated@@247 $generated@@456 ($generated@@249 $generated@@457)))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@334 $generated@@77 $generated@@77)) (= (type $generated@@462) $generated@@67)) (= (type $generated@@463) $generated@@67)) (= (type $generated@@464) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@332 $generated@@461) $generated@@465))) (and ($generated@@236 ($generated@@86 ($generated@@429 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@236 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@86 ($generated@@429 $generated@@461) $generated@@465))
 :pattern ( ($generated@@86 ($generated@@332 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@119 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (! (= (type ($generated@@466 $generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (= (type $generated@@469) ($generated@@352 $generated@@77 $generated@@77)) (= (type $generated@@470) $generated@@67)) (= (type $generated@@471) $generated@@67)) (= (type $generated@@472) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@469) $generated@@473))) (and ($generated@@236 ($generated@@86 ($generated@@439 $generated@@469) $generated@@473) $generated@@471 $generated@@472) ($generated@@236 $generated@@473 $generated@@470 $generated@@472)))
 :pattern ( ($generated@@86 ($generated@@439 $generated@@469) $generated@@473))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@469) $generated@@473))
))))
 :pattern ( ($generated@@119 $generated@@469 ($generated@@466 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@84 (type $generated@@474))))
 (=> (and (and (= (type $generated@@474) ($generated@@83 $generated@@476 $generated@@2)) (= (type $generated@@475) ($generated@@83 $generated@@476 $generated@@2))) ($generated@@318 $generated@@474 $generated@@475)) (= $generated@@474 $generated@@475)))
 :pattern ( ($generated@@318 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@478 T@T) ) (! (= (type ($generated@@477 $generated@@478)) ($generated@@83 $generated@@478 $generated@@4))
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@354 (type $generated@@479))))
(let (($generated@@481 ($generated@@353 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@352 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@351 $generated@@481 $generated@@480)) (= ($generated@@350 $generated@@479) ($generated@@477 $generated@@481))))))
 :pattern ( ($generated@@350 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@354 (type $generated@@482))))
(let (($generated@@484 ($generated@@353 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@352 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@351 $generated@@484 $generated@@483)) (= ($generated@@396 $generated@@482) ($generated@@477 $generated@@483))))))
 :pattern ( ($generated@@396 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@354 (type $generated@@485))))
(let (($generated@@487 ($generated@@353 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@352 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@351 $generated@@487 $generated@@486)) (= ($generated@@438 $generated@@485) ($generated@@477 $generated@@77))))))
 :pattern ( ($generated@@438 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@336 (type $generated@@488))))
(let (($generated@@490 ($generated@@335 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@334 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@333 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@77) (= (type $generated@@492) $generated@@77)) ($generated@@0 ($generated@@86 ($generated@@427 $generated@@488) ($generated@@320 ($generated@@240 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@427 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@354 (type $generated@@493))))
(let (($generated@@495 ($generated@@353 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@352 $generated@@495 $generated@@494)) (or (= $generated@@493 ($generated@@351 $generated@@495 $generated@@494)) (exists (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (and (and (= (type $generated@@496) $generated@@77) (= (type $generated@@497) $generated@@77)) ($generated@@0 ($generated@@86 ($generated@@438 $generated@@493) ($generated@@320 ($generated@@240 $generated@@496 $generated@@497)))))
 :no-pattern (type $generated@@496)
 :no-pattern (type $generated@@497)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
))))))
 :pattern ( ($generated@@438 $generated@@493))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@77) ($generated@@79 $generated@@498 $generated@@46)) (and (= ($generated@@320 ($generated@@428 $generated@@2 $generated@@498)) $generated@@498) ($generated@@146 ($generated@@428 $generated@@2 $generated@@498) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@498 $generated@@46))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@77) ($generated@@79 $generated@@499 $generated@@47)) (and (= ($generated@@320 ($generated@@428 $generated@@3 $generated@@499)) $generated@@499) ($generated@@146 ($generated@@428 $generated@@3 $generated@@499) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@499 $generated@@47))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@77) ($generated@@79 $generated@@500 $generated@@44)) (and (= ($generated@@320 ($generated@@428 $generated@@4 $generated@@500)) $generated@@500) ($generated@@146 ($generated@@428 $generated@@4 $generated@@500) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@500 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@501) 20))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@77) ($generated@@79 $generated@@502 $generated@@45)) (and (= ($generated@@320 ($generated@@428 $generated@@501 $generated@@502)) $generated@@502) ($generated@@146 ($generated@@428 $generated@@501 $generated@@502) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@502 $generated@@45))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@79 ($generated@@320 $generated@@503) $generated@@504) ($generated@@146 $generated@@503 $generated@@504)))
 :pattern ( ($generated@@79 ($generated@@320 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@84 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@83 $generated@@506 $generated@@2)) (<= 0 ($generated@@310 $generated@@505))))
 :pattern ( ($generated@@310 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@305 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@304 $generated@@508)) (<= 0 ($generated@@303 $generated@@507))))
 :pattern ( ($generated@@303 $generated@@507))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@67) (= (type $generated@@512) $generated@@67)) (= ($generated@@509 ($generated@@458 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@458 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@67) (= (type $generated@@516) $generated@@67)) (= ($generated@@513 ($generated@@458 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@458 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@67) (= (type $generated@@518) $generated@@67)) (= ($generated@@117 ($generated@@458 $generated@@517 $generated@@518)) $generated@@58))
 :pattern ( ($generated@@458 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@67) (= (type $generated@@522) $generated@@67)) (= ($generated@@519 ($generated@@466 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@466 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@67) (= (type $generated@@526) $generated@@67)) (= ($generated@@523 ($generated@@466 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@466 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= ($generated@@117 ($generated@@466 $generated@@527 $generated@@528)) $generated@@59))
 :pattern ( ($generated@@466 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@77) (= (type $generated@@530) $generated@@77)) (= ($generated@@293 ($generated@@240 $generated@@529 $generated@@530)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= ($generated@@531 ($generated@@149 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@149 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@67)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (= ($generated@@535 ($generated@@149 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@149 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@77) (= (type $generated@@540) $generated@@77)) (= ($generated@@157 ($generated@@240 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@240 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@77) (= (type $generated@@542) $generated@@77)) (= ($generated@@158 ($generated@@240 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@240 $generated@@541 $generated@@542))
)))
(assert  (and (forall (($generated@@545 T@U) ) (! (= (type ($generated@@543 $generated@@545)) $generated@@67)
 :pattern ( ($generated@@543 $generated@@545))
)) (forall (($generated@@546 T@U) ($generated@@547 Int) ) (! (let (($generated@@548 ($generated@@305 (type $generated@@546))))
(= (type ($generated@@544 $generated@@546 $generated@@547)) $generated@@548))
 :pattern ( ($generated@@544 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@304 $generated@@77)) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@549 ($generated@@543 $generated@@550) $generated@@551) (forall (($generated@@552 Int) ) (!  (=> (and (<= 0 $generated@@552) (< $generated@@552 ($generated@@303 $generated@@549))) ($generated@@236 ($generated@@544 $generated@@549 $generated@@552) $generated@@550 $generated@@551))
 :pattern ( ($generated@@544 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@119 $generated@@549 ($generated@@543 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@553 ($generated@@120 $generated@@554)) $generated@@554)
 :pattern ( ($generated@@120 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@67)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@67) (= ($generated@@555 ($generated@@274 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@274 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@117 ($generated@@274 $generated@@558)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@67)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@67) (= ($generated@@559 ($generated@@279 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@279 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@67) (= ($generated@@117 ($generated@@279 $generated@@562)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@67)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@67) (= ($generated@@563 ($generated@@163 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@163 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@117 ($generated@@163 $generated@@566)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@67)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@67) (= ($generated@@567 ($generated@@543 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@543 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@67) (= ($generated@@117 ($generated@@543 $generated@@570)) $generated@@57))
 :pattern ( ($generated@@543 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@428 $generated@@572 ($generated@@320 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@320 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@334 $generated@@77 $generated@@77)) (= (type $generated@@574) $generated@@67)) (= (type $generated@@575) $generated@@67)) (= ($generated@@146 $generated@@573 ($generated@@458 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@332 $generated@@573) $generated@@576))) (and ($generated@@79 ($generated@@86 ($generated@@429 $generated@@573) $generated@@576) $generated@@575) ($generated@@79 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@86 ($generated@@429 $generated@@573) $generated@@576))
 :pattern ( ($generated@@86 ($generated@@332 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@146 $generated@@573 ($generated@@458 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@352 $generated@@77 $generated@@77)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) $generated@@67)) (= ($generated@@146 $generated@@577 ($generated@@466 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@577) $generated@@580))) (and ($generated@@79 ($generated@@86 ($generated@@439 $generated@@577) $generated@@580) $generated@@579) ($generated@@79 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@86 ($generated@@439 $generated@@577) $generated@@580))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@146 $generated@@577 ($generated@@466 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@77) (= (type $generated@@584) $generated@@77)) (< ($generated@@581 $generated@@583) ($generated@@582 ($generated@@240 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@77) (= (type $generated@@586) $generated@@77)) (< ($generated@@581 $generated@@586) ($generated@@582 ($generated@@240 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@77) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@79 $generated@@587 ($generated@@458 $generated@@588 $generated@@589))) (and (= ($generated@@320 ($generated@@428 ($generated@@334 $generated@@77 $generated@@77) $generated@@587)) $generated@@587) ($generated@@146 ($generated@@428 ($generated@@334 $generated@@77 $generated@@77) $generated@@587) ($generated@@458 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@79 $generated@@587 ($generated@@458 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@77) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@79 $generated@@590 ($generated@@466 $generated@@591 $generated@@592))) (and (= ($generated@@320 ($generated@@428 ($generated@@352 $generated@@77 $generated@@77) $generated@@590)) $generated@@590) ($generated@@146 ($generated@@428 ($generated@@352 $generated@@77 $generated@@77) $generated@@590) ($generated@@466 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@79 $generated@@590 ($generated@@466 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@67) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@77)) ($generated@@79 $generated@@595 ($generated@@149 $generated@@593 $generated@@594))) (and (= ($generated@@320 ($generated@@428 $generated@@150 $generated@@595)) $generated@@595) ($generated@@146 ($generated@@428 $generated@@150 $generated@@595) ($generated@@149 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@149 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (not ($generated@@0 ($generated@@86 ($generated@@477 $generated@@597) $generated@@596))))
 :pattern ( (let (($generated@@597 (type $generated@@596)))
($generated@@86 ($generated@@477 $generated@@597) $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@72)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@67) (= (type $generated@@601) $generated@@67)) (and (= ($generated@@117 ($generated@@149 $generated@@600 $generated@@601)) $generated@@62) (= ($generated@@598 ($generated@@149 $generated@@600 $generated@@601)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@150) (= ($generated@@581 ($generated@@320 $generated@@602)) ($generated@@582 $generated@@602)))
 :pattern ( ($generated@@581 ($generated@@320 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@77) ($generated@@79 $generated@@603 ($generated@@120 0))) (and (= ($generated@@320 ($generated@@428 $generated@@2 $generated@@603)) $generated@@603) ($generated@@146 ($generated@@428 ($generated@@83 $generated@@77 $generated@@4) $generated@@603) ($generated@@120 0))))
 :pattern ( ($generated@@79 $generated@@603 ($generated@@120 0)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@77) (= (type $generated@@605) $generated@@67)) ($generated@@79 $generated@@604 ($generated@@274 $generated@@605))) (and (= ($generated@@320 ($generated@@428 ($generated@@83 $generated@@77 $generated@@4) $generated@@604)) $generated@@604) ($generated@@146 ($generated@@428 ($generated@@83 $generated@@77 $generated@@4) $generated@@604) ($generated@@274 $generated@@605))))
 :pattern ( ($generated@@79 $generated@@604 ($generated@@274 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@77) (= (type $generated@@607) $generated@@67)) ($generated@@79 $generated@@606 ($generated@@279 $generated@@607))) (and (= ($generated@@320 ($generated@@428 ($generated@@83 $generated@@77 $generated@@4) $generated@@606)) $generated@@606) ($generated@@146 ($generated@@428 ($generated@@83 $generated@@77 $generated@@4) $generated@@606) ($generated@@279 $generated@@607))))
 :pattern ( ($generated@@79 $generated@@606 ($generated@@279 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@77) (= (type $generated@@609) $generated@@67)) ($generated@@79 $generated@@608 ($generated@@163 $generated@@609))) (and (= ($generated@@320 ($generated@@428 ($generated@@83 $generated@@77 $generated@@2) $generated@@608)) $generated@@608) ($generated@@146 ($generated@@428 ($generated@@83 $generated@@77 $generated@@2) $generated@@608) ($generated@@163 $generated@@609))))
 :pattern ( ($generated@@79 $generated@@608 ($generated@@163 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@77) (= (type $generated@@611) $generated@@67)) ($generated@@79 $generated@@610 ($generated@@543 $generated@@611))) (and (= ($generated@@320 ($generated@@428 ($generated@@304 $generated@@77) $generated@@610)) $generated@@610) ($generated@@146 ($generated@@428 ($generated@@304 $generated@@77) $generated@@610) ($generated@@543 $generated@@611))))
 :pattern ( ($generated@@79 $generated@@610 ($generated@@543 $generated@@611)))
)))
(assert (= ($generated@@117 $generated@@237) $generated@@63))
(assert (= ($generated@@598 $generated@@237) $generated@@66))
(assert (= ($generated@@117 $generated@@80) $generated@@64))
(assert (= ($generated@@598 $generated@@80) $generated@@66))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@612 ($generated@@163 $generated@@613) $generated@@614) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@77) (< 0 ($generated ($generated@@86 $generated@@612 $generated@@615)))) ($generated@@236 $generated@@615 $generated@@613 $generated@@614))
 :pattern ( ($generated@@86 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@119 $generated@@612 ($generated@@163 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@150) (= (type $generated@@617) $generated@@67)) (= (type $generated@@618) ($generated@@83 $generated@@121 $generated@@122))) (and ($generated@@287 $generated@@618) (and ($generated@@148 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@67) ($generated@@119 $generated@@616 ($generated@@149 $generated@@617 $generated@@619) $generated@@618))
 :pattern ( ($generated@@119 $generated@@616 ($generated@@149 $generated@@617 $generated@@619) $generated@@618))
))))) ($generated@@236 ($generated@@157 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@236 ($generated@@157 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@150) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) ($generated@@83 $generated@@121 $generated@@122))) (and ($generated@@287 $generated@@622) (and ($generated@@148 $generated@@620) (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@67) ($generated@@119 $generated@@620 ($generated@@149 $generated@@623 $generated@@621) $generated@@622))
 :pattern ( ($generated@@119 $generated@@620 ($generated@@149 $generated@@623 $generated@@621) $generated@@622))
))))) ($generated@@236 ($generated@@158 $generated@@620) $generated@@621 $generated@@622))
 :pattern ( ($generated@@236 ($generated@@158 $generated@@620) $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@625)))
 (=> (and (and (= (type $generated@@624) ($generated@@83 $generated@@627 $generated@@2)) (= (type $generated@@626) $generated@@627)) (not (= $generated@@625 $generated@@626))) (= ($generated ($generated@@86 $generated@@624 $generated@@626)) ($generated ($generated@@86 ($generated@@311 $generated@@624 $generated@@625) $generated@@626)))))
 :pattern ( ($generated@@311 $generated@@624 $generated@@625) ($generated@@86 $generated@@624 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@77) (= (type $generated@@629) $generated@@77)) (= ($generated@@240 ($generated@@248 $generated@@628) ($generated@@248 $generated@@629)) ($generated@@248 ($generated@@240 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@240 ($generated@@248 $generated@@628) ($generated@@248 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@77) (= ($generated@@79 $generated@@630 $generated@@80)  (and ($generated@@79 $generated@@630 $generated@@237) ($generated@@261 $generated@@630))))
 :pattern ( ($generated@@79 $generated@@630 $generated@@80))
)))
(assert (forall (($generated@@631 Int) ) (! (= ($generated@@320 ($generated@@8 ($generated@@249 $generated@@631))) ($generated@@248 ($generated@@320 ($generated@@8 $generated@@631))))
 :pattern ( ($generated@@320 ($generated@@8 ($generated@@249 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ) (! (= ($generated@@320 ($generated@@248 $generated@@632)) ($generated@@248 ($generated@@320 $generated@@632)))
 :pattern ( ($generated@@320 ($generated@@248 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@305 (type $generated@@633))))
 (=> (and (= (type $generated@@633) ($generated@@304 $generated@@634)) (= ($generated@@303 $generated@@633) 0)) (= $generated@@633 ($generated@@302 $generated@@634))))
 :pattern ( ($generated@@303 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@636)))
 (=> (and (and (= (type $generated@@635) ($generated@@83 $generated@@638 $generated@@2)) (= (type $generated@@637) $generated@@2)) (<= 0 ($generated $generated@@637))) (= ($generated@@310 ($generated@@87 $generated@@635 $generated@@636 $generated@@637)) (+ (- ($generated@@310 $generated@@635) ($generated ($generated@@86 $generated@@635 $generated@@636))) ($generated $generated@@637)))))
 :pattern ( ($generated@@310 ($generated@@87 $generated@@635 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@640) $generated@@2)) ($generated@@119 $generated@@640 $generated@@46 $generated@@639))
 :pattern ( ($generated@@119 $generated@@640 $generated@@46 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@642) $generated@@3)) ($generated@@119 $generated@@642 $generated@@47 $generated@@641))
 :pattern ( ($generated@@119 $generated@@642 $generated@@47 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@644) $generated@@4)) ($generated@@119 $generated@@644 $generated@@44 $generated@@643))
 :pattern ( ($generated@@119 $generated@@644 $generated@@44 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@646) $generated@@501)) ($generated@@119 $generated@@646 $generated@@45 $generated@@645))
 :pattern ( ($generated@@119 $generated@@646 $generated@@45 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@648) $generated@@77)) ($generated@@119 $generated@@648 $generated@@48 $generated@@647))
 :pattern ( ($generated@@119 $generated@@648 $generated@@48 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@304 $generated@@77)) (= (type $generated@@650) $generated@@67)) (= ($generated@@146 $generated@@649 ($generated@@543 $generated@@650)) (forall (($generated@@651 Int) ) (!  (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@303 $generated@@649))) ($generated@@79 ($generated@@544 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@544 $generated@@649 $generated@@651))
))))
 :pattern ( ($generated@@146 $generated@@649 ($generated@@543 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 Int) ) (!  (=> (= (type $generated@@653) ($generated@@304 $generated@@77)) (=> (and (<= 0 $generated@@654) (< $generated@@654 ($generated@@303 $generated@@653))) (< ($generated@@582 ($generated@@428 $generated@@150 ($generated@@544 $generated@@653 $generated@@654))) ($generated@@652 $generated@@653))))
 :pattern ( ($generated@@582 ($generated@@428 $generated@@150 ($generated@@544 $generated@@653 $generated@@654))))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) ($generated@@334 $generated@@77 $generated@@77)) (= (type $generated@@656) $generated@@67)) (= (type $generated@@657) $generated@@67)) ($generated@@146 $generated@@655 ($generated@@458 $generated@@656 $generated@@657))) (and (and ($generated@@146 ($generated@@332 $generated@@655) ($generated@@274 $generated@@656)) ($generated@@146 ($generated@@385 $generated@@655) ($generated@@274 $generated@@657))) ($generated@@146 ($generated@@427 $generated@@655) ($generated@@274 ($generated@@149 $generated@@656 $generated@@657)))))
 :pattern ( ($generated@@146 $generated@@655 ($generated@@458 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) ($generated@@352 $generated@@77 $generated@@77)) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@67)) ($generated@@146 $generated@@658 ($generated@@466 $generated@@659 $generated@@660))) (and (and ($generated@@146 ($generated@@350 $generated@@658) ($generated@@279 $generated@@659)) ($generated@@146 ($generated@@396 $generated@@658) ($generated@@279 $generated@@660))) ($generated@@146 ($generated@@438 $generated@@658) ($generated@@279 ($generated@@149 $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@146 $generated@@658 ($generated@@466 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@2) ($generated@@146 $generated@@661 $generated@@46))
 :pattern ( ($generated@@146 $generated@@661 $generated@@46))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@3) ($generated@@146 $generated@@662 $generated@@47))
 :pattern ( ($generated@@146 $generated@@662 $generated@@47))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@4) ($generated@@146 $generated@@663 $generated@@44))
 :pattern ( ($generated@@146 $generated@@663 $generated@@44))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@501) ($generated@@146 $generated@@664 $generated@@45))
 :pattern ( ($generated@@146 $generated@@664 $generated@@45))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@77) ($generated@@146 $generated@@665 $generated@@48))
 :pattern ( ($generated@@146 $generated@@665 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@666) $generated@@77) (= (type $generated@@670) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@668) ($generated@@170 $generated@@121 $generated@@4))) (= (type $generated@@669) $generated@@121)) (= (type $generated@@671) ($generated@@170 $generated@@121 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@673  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@318 ($generated@@76 ($generated@@247 $generated@@666 $generated@@667)) ($generated@@264 ($generated@@76 $generated@@666) ($generated@@311 ($generated@@319 $generated@@77) ($generated@@320 ($generated@@8 $generated@@667))))))))
(let (($generated@@674  (=> (= $generated@@668 ($generated@@224 $generated@@669 $generated@@670 $generated@@60 false)) (=> (and ($generated@@236 $generated@@666 $generated@@237 $generated@@670) ($generated@@119 ($generated@@8 $generated@@667) $generated@@46 $generated@@670)) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@261 $generated@@666)) (=> (and ($generated@@261 $generated@@666) ($generated@@251 $generated@@666 $generated@@667)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@79 ($generated@@252 $generated@@666 $generated@@667) $generated@@80)) (=> ($generated@@79 ($generated@@252 $generated@@666 $generated@@667) $generated@@80) (=> (and (and (= ($generated@@247 $generated@@666 $generated@@667) ($generated@@252 $generated@@666 $generated@@667)) ($generated@@251 $generated@@666 $generated@@667)) (and ($generated@@79 ($generated@@247 $generated@@666 $generated@@667) $generated@@80) (= (ControlFlow 0 6) 5))) $generated@@673)))))))))
(let (($generated@@675  (=> ($generated@@79 ($generated@@247 $generated@@666 $generated@@667) $generated@@80) (=> (and ($generated@@236 $generated@@666 $generated@@80 $generated@@670) ($generated@@119 ($generated@@8 $generated@@667) $generated@@46 $generated@@670)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@667) (= $generated@@667 $generated@@667))) (=> (or (<= 0 $generated@@667) (= $generated@@667 $generated@@667)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@666 $generated@@666) (= $generated@@667 $generated@@667)) (< $generated@@667 $generated@@667)))))))))
(let (($generated@@676  (=> (= $generated@@671 ($generated@@169 $generated@@669 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@675) (=> (= (ControlFlow 0 9) 6) $generated@@674)))))
(let (($generated@@677  (=> (and (and (and ($generated@@287 $generated@@670) ($generated@@672 $generated@@670)) ($generated@@79 $generated@@666 $generated@@80)) (and (= 3 $generated@@75) (= (ControlFlow 0 10) 9))) $generated@@676)))
$generated@@677))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (Int) Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@301 (T@U T@U T@U) Bool)
(declare-fun $generated@@307 () Int)
(declare-fun $generated@@308 (T@U T@U) T@U)
(declare-fun $generated@@309 () T@T)
(declare-fun $generated@@310 (T@U) Bool)
(declare-fun $generated@@317 (T@U) Bool)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@U T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@T) T@U)
(declare-fun $generated@@366 (T@T T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@T) T@U)
(declare-fun $generated@@384 (T@T T@T) T@T)
(declare-fun $generated@@385 (T@T) T@T)
(declare-fun $generated@@386 (T@T) T@T)
(declare-fun $generated@@406 (T@T T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@489 (T@U T@U) T@U)
(declare-fun $generated@@497 (T@U T@U) T@U)
(declare-fun $generated@@506 (T@T) T@U)
(declare-fun $generated@@530 () T@T)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@578 (T@U Int) T@U)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@600 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@625 (T@U) Int)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@702 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@79) (= (type $generated@@150) $generated@@79)) (= ($generated@@146 ($generated@@77 $generated@@148 $generated@@149 $generated@@150)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) $generated@@79)) (= ($generated@@151 ($generated@@77 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@77 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@79)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@79) (= (type $generated@@159) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@157 $generated@@158 $generated@@159)) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@160 $generated@@161)) $generated@@79)
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@79) (= (type $generated@@164) $generated@@79)) (= ($generated@@160 ($generated@@77 $generated@@162 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@76 $generated@@165 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@165 ($generated@@89 0)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@79)) ($generated@@76 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@76 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@79) (= (type $generated@@180) $generated@@79)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (= (type $generated@@181) $generated@@79))
(assert (= ($generated@@146 $generated@@181) $generated@@63))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@186) $generated@@68)) ($generated@@76 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@76 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 16)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@91 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@71 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@91) (= (type $generated@@237) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@238) ($generated@@70 $generated@@4))) (= (type $generated@@240) $generated@@91)) (= (type $generated@@241) ($generated@@70 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ) (! (= (type ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247)) ($generated@@189 $generated@@91 $generated@@4))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@71 (type $generated@@253))))
 (=> (and (and (and (and (= (type $generated@@248) $generated@@91) (= (type $generated@@249) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@250) ($generated@@70 $generated@@4))) (= (type $generated@@252) $generated@@91)) (= (type $generated@@253) ($generated@@70 $generated@@254))) (= ($generated@@0 ($generated@@187 ($generated@@243 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))  (=> (and (not (= $generated@@252 $generated@@248)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@249 $generated@@252) $generated@@250))) $generated@@251))))
 :pattern ( ($generated@@187 ($generated@@243 $generated@@248 $generated@@249 $generated@@250 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@79)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@176)) (= (type $generated@@262) $generated@@176)) (= ($generated@@76 ($generated@@255 $generated@@261 $generated@@262) ($generated@@167 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@255 $generated@@261 $generated@@262) ($generated@@167 $generated@@259 $generated@@260)))
)))
(assert ($generated@@76 $generated@@181 $generated@@78))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@263 $generated@@264)) ($generated@@88 $generated@@181 $generated@@78 $generated@@264))
 :pattern ( ($generated@@88 $generated@@181 $generated@@78 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@93 (type $generated@@266))))
(= (type ($generated@@265 $generated@@266 $generated@@267)) ($generated@@90 $generated@@268 $generated@@2)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
 (=> (and (= (type $generated@@269) ($generated@@90 $generated@@272 $generated@@2)) (= (type $generated@@270) ($generated@@90 $generated@@272 $generated@@2))) (= ($generated ($generated@@95 ($generated@@265 $generated@@269 $generated@@270) $generated@@271)) (+ ($generated ($generated@@95 $generated@@269 $generated@@271)) ($generated ($generated@@95 $generated@@270 $generated@@271))))))
 :pattern ( ($generated@@95 ($generated@@265 $generated@@269 $generated@@270) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@79) (= (type $generated@@274) $generated@@79)) (= ($generated@@173 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@173 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@79) (= (type $generated@@277) $generated@@79)) (= ($generated@@275 $generated@@276 $generated@@277) (= $generated@@276 $generated@@277)))
 :pattern ( ($generated@@275 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@68)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@281) $generated@@68)) (= ($generated@@76 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@176) ($generated@@0 ($generated@@95 $generated@@280 $generated@@282))) ($generated@@256 $generated@@282 $generated@@281))
 :pattern ( ($generated@@95 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@76 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@68)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@286) $generated@@68)) (= ($generated@@76 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@176) ($generated@@0 ($generated@@95 $generated@@285 $generated@@287))) ($generated@@256 $generated@@287 $generated@@286))
 :pattern ( ($generated@@95 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@76 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@288 $generated@@289) $generated@@289)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
(= (type ($generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@290 $generated@@293) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@79) (= (type $generated@@296) $generated@@79)) (and ($generated@@294 $generated@@295) ($generated@@294 $generated@@296))) (= ($generated@@275 $generated@@295 $generated@@296) true))
 :pattern ( ($generated@@275 $generated@@295 $generated@@296) ($generated@@294 $generated@@295))
 :pattern ( ($generated@@275 $generated@@295 $generated@@296) ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@297 Int) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) $generated@@79) (= (type $generated@@299) $generated@@79)) (= (type $generated@@300) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@263 $generated@@300)) (= ($generated@@88 ($generated@@77 $generated@@297 $generated@@298 $generated@@299) $generated@@78 $generated@@300)  (and (and ($generated@@88 ($generated@@8 $generated@@297) $generated@@46 $generated@@300) ($generated@@88 $generated@@298 $generated@@78 $generated@@300)) ($generated@@88 $generated@@299 $generated@@78 $generated@@300))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@297 $generated@@298 $generated@@299) $generated@@78 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) $generated@@68) (= (type $generated@@303) $generated@@68)) (= (type $generated@@304) $generated@@176)) (= (type $generated@@305) $generated@@176)) (= (type $generated@@306) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@263 $generated@@306)) (= ($generated@@88 ($generated@@255 $generated@@304 $generated@@305) ($generated@@167 $generated@@302 $generated@@303) $generated@@306)  (and ($generated@@301 $generated@@304 $generated@@302 $generated@@306) ($generated@@301 $generated@@305 $generated@@303 $generated@@306))))
 :pattern ( ($generated@@88 ($generated@@255 $generated@@304 $generated@@305) ($generated@@167 $generated@@302 $generated@@303) $generated@@306))
)))
(assert  (and (= ($generated@@1 $generated@@309) 17) (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (= (type ($generated@@308 $generated@@311 $generated@@312)) ($generated@@90 $generated@@176 $generated@@2))
 :pattern ( ($generated@@308 $generated@@311 $generated@@312))
))))
(assert  (=> (<= 1 $generated@@307) (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@313) $generated@@309) (= (type $generated@@314) $generated@@79)) (or ($generated@@310 $generated@@314) (and (not (= 1 $generated@@307)) ($generated@@76 $generated@@314 $generated@@78)))) ($generated@@76 ($generated@@308 $generated@@313 $generated@@314) ($generated@@182 $generated@@46)))
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@79) (= ($generated@@166 $generated@@315) (= ($generated@@146 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@79) (= ($generated@@294 $generated@@316) (= ($generated@@146 $generated@@316) $generated@@63)))
 :pattern ( ($generated@@294 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@79) (= ($generated@@317 $generated@@318) (= ($generated@@146 $generated@@318) $generated@@65)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@79) ($generated@@317 $generated@@319)) (exists (($generated@@320 Int) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (and (and (= (type $generated@@321) $generated@@79) (= (type $generated@@322) $generated@@79)) (= $generated@@319 ($generated@@77 $generated@@320 $generated@@321 $generated@@322)))
 :no-pattern (type $generated@@321)
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@317 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@79) ($generated@@166 $generated@@323)) (exists (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (and (and (= (type $generated@@324) $generated@@176) (= (type $generated@@325) $generated@@176)) (= $generated@@323 ($generated@@255 $generated@@324 $generated@@325)))
 :no-pattern (type $generated@@324)
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
)))
 :pattern ( ($generated@@166 $generated@@323))
)))
(assert  (and (and (forall (($generated@@330 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@330)) 18)) (forall (($generated@@331 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331))
))) (forall (($generated@@332 T@T) ) (! (= (type ($generated@@326 $generated@@332)) ($generated@@328 $generated@@332))
 :pattern ( ($generated@@326 $generated@@332))
))))
(assert (forall (($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@333)) 0)
 :pattern ( ($generated@@326 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@79) ($generated@@294 $generated@@334)) (= $generated@@334 $generated@@181))
 :pattern ( ($generated@@294 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
(= (type ($generated@@336 $generated@@337 $generated@@338)) ($generated@@90 $generated@@339 $generated@@2)))
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
 (=> (= (type $generated@@340) ($generated@@90 $generated@@342 $generated@@2)) (= ($generated@@335 ($generated@@336 $generated@@340 $generated@@341)) (+ ($generated@@335 $generated@@340) 1))))
 :pattern ( ($generated@@335 ($generated@@336 $generated@@340 $generated@@341)))
)))
(assert  (and (and (forall (($generated@@346 T@U) ) (! (= (type ($generated@@343 $generated@@346)) $generated@@309)
 :pattern ( ($generated@@343 $generated@@346))
)) (forall (($generated@@347 T@T) ) (! (= (type ($generated@@344 $generated@@347)) ($generated@@90 $generated@@347 $generated@@2))
 :pattern ( ($generated@@344 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) $generated@@176)
 :pattern ( ($generated@@345 $generated@@348))
))))
(assert  (=> (<= 1 $generated@@307) (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@349) $generated@@309) (= (type $generated@@350) $generated@@79)) (or ($generated@@310 ($generated@@290 $generated@@350)) (and (not (= 1 $generated@@307)) ($generated@@76 $generated@@350 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@290 ($generated@@11 ($generated@@294 ($generated@@290 $generated@@350)))))) (let (($generated@@351 ($generated@@290 ($generated@@160 ($generated@@290 $generated@@350)))))
(let (($generated@@352 ($generated@@290 ($generated@@155 ($generated@@290 $generated@@350)))))
 (and ($generated@@310 $generated@@352) ($generated@@310 $generated@@351))))) (= ($generated@@308 ($generated@@343 $generated@@349) ($generated@@290 $generated@@350)) (ite ($generated@@294 ($generated@@290 $generated@@350)) ($generated@@344 $generated@@176) (let (($generated@@353 ($generated@@290 ($generated@@160 ($generated@@290 $generated@@350)))))
(let (($generated@@354 ($generated@@290 ($generated@@155 ($generated@@290 $generated@@350)))))
(let (($generated@@355 ($generated@@288 ($generated@@151 ($generated@@290 $generated@@350)))))
($generated@@265 ($generated@@265 ($generated@@336 ($generated@@344 $generated@@176) ($generated@@345 ($generated@@8 $generated@@355))) ($generated@@308 ($generated@@343 $generated@@349) $generated@@354)) ($generated@@308 ($generated@@343 $generated@@349) $generated@@353)))))))))
 :weight 3
 :pattern ( ($generated@@308 ($generated@@343 $generated@@349) ($generated@@290 $generated@@350)))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@68) (= (type $generated@@358) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@301 ($generated@@345 $generated@@356) $generated@@357 $generated@@358) ($generated@@88 $generated@@356 $generated@@357 $generated@@358)))
 :pattern ( ($generated@@301 ($generated@@345 $generated@@356) $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@359) $generated@@79) (= (type $generated@@360) $generated@@79)) (and ($generated@@317 $generated@@359) ($generated@@317 $generated@@360))) (= ($generated@@275 $generated@@359 $generated@@360)  (and (and (= ($generated@@151 $generated@@359) ($generated@@151 $generated@@360)) ($generated@@275 ($generated@@155 $generated@@359) ($generated@@155 $generated@@360))) ($generated@@275 ($generated@@160 $generated@@359) ($generated@@160 $generated@@360)))))
 :pattern ( ($generated@@275 $generated@@359 $generated@@360) ($generated@@317 $generated@@359))
 :pattern ( ($generated@@275 $generated@@359 $generated@@360) ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@93 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@90 $generated@@362 $generated@@2)) (and (= (= ($generated@@335 $generated@@361) 0) (= $generated@@361 ($generated@@344 $generated@@362))) (=> (not (= ($generated@@335 $generated@@361) 0)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) (< 0 ($generated ($generated@@95 $generated@@361 $generated@@363))))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@335 $generated@@361))
)))
(assert  (and (and (and (and (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (= ($generated@@1 ($generated@@366 $generated@@369 $generated@@370)) 19)) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@367 ($generated@@366 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@366 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@T) ($generated@@374 T@T) ) (! (= ($generated@@368 ($generated@@366 $generated@@373 $generated@@374)) $generated@@374)
 :pattern ( ($generated@@366 $generated@@373 $generated@@374))
))) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@367 (type $generated@@375))))
(= (type ($generated@@364 $generated@@375)) ($generated@@90 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@375))
))) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= (type ($generated@@365 $generated@@377 $generated@@378)) ($generated@@366 $generated@@377 $generated@@378))
 :pattern ( ($generated@@365 $generated@@377 $generated@@378))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@T) ) (! (let (($generated@@381 (type $generated@@379)))
 (not ($generated@@0 ($generated@@95 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379))))
 :pattern ( (let (($generated@@381 (type $generated@@379)))
($generated@@95 ($generated@@364 ($generated@@365 $generated@@381 $generated@@380)) $generated@@379)))
)))
(assert  (and (and (and (and (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (= ($generated@@1 ($generated@@384 $generated@@387 $generated@@388)) 20)) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@385 ($generated@@384 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@384 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= ($generated@@386 ($generated@@384 $generated@@391 $generated@@392)) $generated@@392)
 :pattern ( ($generated@@384 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@385 (type $generated@@393))))
(= (type ($generated@@382 $generated@@393)) ($generated@@90 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@393))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= (type ($generated@@383 $generated@@395 $generated@@396)) ($generated@@384 $generated@@395 $generated@@396))
 :pattern ( ($generated@@383 $generated@@395 $generated@@396))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@T) ) (! (let (($generated@@399 (type $generated@@397)))
 (not ($generated@@0 ($generated@@95 ($generated@@382 ($generated@@383 $generated@@399 $generated@@398)) $generated@@397))))
 :pattern ( (let (($generated@@399 (type $generated@@397)))
($generated@@95 ($generated@@382 ($generated@@383 $generated@@399 $generated@@398)) $generated@@397)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@93 (type $generated@@400))))
 (=> (and (= (type $generated@@400) ($generated@@90 $generated@@402 $generated@@2)) (= (type $generated@@401) ($generated@@90 $generated@@402 $generated@@2))) (= ($generated@@335 ($generated@@265 $generated@@400 $generated@@401)) (+ ($generated@@335 $generated@@400) ($generated@@335 $generated@@401)))))
 :pattern ( ($generated@@335 ($generated@@265 $generated@@400 $generated@@401)))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@93 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@90 $generated@@404 $generated@@2)) (= ($generated@@183 $generated@@403) (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@404) (and (<= 0 ($generated ($generated@@95 $generated@@403 $generated@@405))) (<= ($generated ($generated@@95 $generated@@403 $generated@@405)) ($generated@@335 $generated@@403))))
 :pattern ( ($generated@@95 $generated@@403 $generated@@405))
)))))
 :pattern ( ($generated@@183 $generated@@403))
)))
(assert (forall (($generated@@407 T@T) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@407)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@176) ($generated@@256 $generated@@409 $generated@@78)) (and (= ($generated@@345 ($generated@@406 $generated@@79 $generated@@409)) $generated@@409) ($generated@@76 ($generated@@406 $generated@@79 $generated@@409) $generated@@78)))
 :pattern ( ($generated@@256 $generated@@409 $generated@@78))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
 (=> (= (type $generated@@410) ($generated@@90 $generated@@412 $generated@@2)) (= ($generated ($generated@@95 ($generated@@336 $generated@@410 $generated@@411) $generated@@411)) (+ ($generated ($generated@@95 $generated@@410 $generated@@411)) 1))))
 :pattern ( ($generated@@336 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@414)))
 (=> (and (and (= (type $generated@@413) ($generated@@90 $generated@@416 $generated@@2)) (= (type $generated@@415) $generated@@416)) (< 0 ($generated ($generated@@95 $generated@@413 $generated@@415)))) (< 0 ($generated ($generated@@95 ($generated@@336 $generated@@413 $generated@@414) $generated@@415)))))
 :pattern ( ($generated@@336 $generated@@413 $generated@@414) ($generated@@95 $generated@@413 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@368 (type $generated@@417))))
(let (($generated@@419 ($generated@@367 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@366 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@365 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@95 ($generated@@364 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@364 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@368 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@90 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@368 (type $generated@@424))))
(let (($generated@@426 ($generated@@367 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@366 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@365 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@95 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@386 (type $generated@@428))))
(let (($generated@@430 ($generated@@385 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@384 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@383 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) ($generated@@0 ($generated@@95 ($generated@@382 $generated@@428) $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@382 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@386 (type $generated@@433))))
(= (type ($generated@@432 $generated@@433)) ($generated@@90 $generated@@434 $generated@@4)))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@386 (type $generated@@435))))
(let (($generated@@437 ($generated@@385 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@384 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@383 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@436) ($generated@@0 ($generated@@95 ($generated@@432 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@432 $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@440)))
 (=> (and (= (type $generated@@439) ($generated@@90 $generated@@442 $generated@@2)) (= (type $generated@@441) $generated@@442)) (= (< 0 ($generated ($generated@@95 ($generated@@336 $generated@@439 $generated@@440) $generated@@441)))  (or (= $generated@@441 $generated@@440) (< 0 ($generated ($generated@@95 $generated@@439 $generated@@441)))))))
 :pattern ( ($generated@@95 ($generated@@336 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@444) $generated@@68)) (= ($generated@@76 $generated@@443 ($generated@@182 $generated@@444)) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@176) (< 0 ($generated ($generated@@95 $generated@@443 $generated@@445)))) ($generated@@256 $generated@@445 $generated@@444))
 :pattern ( ($generated@@95 $generated@@443 $generated@@445))
))))
 :pattern ( ($generated@@76 $generated@@443 ($generated@@182 $generated@@444)))
)))
(assert  (=> (<= 1 $generated@@307) (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) $generated@@309) (= (type $generated@@447) $generated@@79)) (or ($generated@@310 $generated@@447) (and (not (= 1 $generated@@307)) ($generated@@76 $generated@@447 $generated@@78)))) (and (=> (not ($generated@@294 $generated@@447)) (let (($generated@@448 ($generated@@160 $generated@@447)))
(let (($generated@@449 ($generated@@155 $generated@@447)))
 (and ($generated@@310 $generated@@449) ($generated@@310 $generated@@448))))) (= ($generated@@308 ($generated@@343 $generated@@446) $generated@@447) (ite ($generated@@294 $generated@@447) ($generated@@344 $generated@@176) (let (($generated@@450 ($generated@@160 $generated@@447)))
(let (($generated@@451 ($generated@@155 $generated@@447)))
(let (($generated@@452 ($generated@@151 $generated@@447)))
($generated@@265 ($generated@@265 ($generated@@336 ($generated@@344 $generated@@176) ($generated@@345 ($generated@@8 $generated@@452))) ($generated@@308 $generated@@446 $generated@@451)) ($generated@@308 $generated@@446 $generated@@450)))))))))
 :pattern ( ($generated@@308 ($generated@@343 $generated@@446) $generated@@447))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@453 ($generated@@278 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@176) ($generated@@0 ($generated@@95 $generated@@453 $generated@@456))) ($generated@@301 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@95 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@88 $generated@@453 ($generated@@278 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (= (type $generated@@457) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@457 ($generated@@283 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@176) ($generated@@0 ($generated@@95 $generated@@457 $generated@@460))) ($generated@@301 $generated@@460 $generated@@458 $generated@@459))
 :pattern ( ($generated@@95 $generated@@457 $generated@@460))
))))
 :pattern ( ($generated@@88 $generated@@457 ($generated@@283 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(= ($generated ($generated@@95 ($generated@@344 $generated@@462) $generated@@461)) 0))
 :pattern ( (let (($generated@@462 (type $generated@@461)))
($generated@@95 ($generated@@344 $generated@@462) $generated@@461)))
)))
(assert  (and (forall (($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@465)) ($generated@@90 $generated@@176 $generated@@4))
 :pattern ( ($generated@@463 $generated@@465))
)) (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@368 (type $generated@@466))))
(let (($generated@@468 ($generated@@367 (type $generated@@466))))
(= (type ($generated@@464 $generated@@466)) ($generated@@90 $generated@@468 $generated@@467))))
 :pattern ( ($generated@@464 $generated@@466))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) ($generated@@366 $generated@@176 $generated@@176)) (= (type $generated@@470) $generated@@176)) (= ($generated@@0 ($generated@@95 ($generated@@463 $generated@@469) $generated@@470))  (and ($generated@@0 ($generated@@95 ($generated@@364 $generated@@469) ($generated@@174 ($generated@@406 $generated@@79 $generated@@470)))) (= ($generated@@95 ($generated@@464 $generated@@469) ($generated@@174 ($generated@@406 $generated@@79 $generated@@470))) ($generated@@175 ($generated@@406 $generated@@79 $generated@@470))))))
 :pattern ( ($generated@@95 ($generated@@463 $generated@@469) $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) ($generated@@90 $generated@@176 $generated@@4))
 :pattern ( ($generated@@471 $generated@@473))
)) (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@386 (type $generated@@474))))
(let (($generated@@476 ($generated@@385 (type $generated@@474))))
(= (type ($generated@@472 $generated@@474)) ($generated@@90 $generated@@476 $generated@@475))))
 :pattern ( ($generated@@472 $generated@@474))
))))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) ($generated@@384 $generated@@176 $generated@@176)) (= (type $generated@@478) $generated@@176)) (= ($generated@@0 ($generated@@95 ($generated@@471 $generated@@477) $generated@@478))  (and ($generated@@0 ($generated@@95 ($generated@@382 $generated@@477) ($generated@@174 ($generated@@406 $generated@@79 $generated@@478)))) (= ($generated@@95 ($generated@@472 $generated@@477) ($generated@@174 ($generated@@406 $generated@@79 $generated@@478))) ($generated@@175 ($generated@@406 $generated@@79 $generated@@478))))))
 :pattern ( ($generated@@95 ($generated@@471 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (let (($generated@@481 (type $generated@@480)))
(let (($generated@@482 ($generated@@367 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@366 $generated@@482 $generated@@481)) (= ($generated@@0 ($generated@@95 ($generated@@421 $generated@@479) $generated@@480)) (exists (($generated@@483 T@U) ) (!  (and (= (type $generated@@483) $generated@@482) (and ($generated@@0 ($generated@@95 ($generated@@364 $generated@@479) $generated@@483)) (= $generated@@480 ($generated@@95 ($generated@@464 $generated@@479) $generated@@483))))
 :pattern ( ($generated@@95 ($generated@@364 $generated@@479) $generated@@483))
 :pattern ( ($generated@@95 ($generated@@464 $generated@@479) $generated@@483))
))))))
 :pattern ( ($generated@@95 ($generated@@421 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
(let (($generated@@487 ($generated@@385 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@384 $generated@@487 $generated@@486)) (= ($generated@@0 ($generated@@95 ($generated@@432 $generated@@484) $generated@@485)) (exists (($generated@@488 T@U) ) (!  (and (= (type $generated@@488) $generated@@487) (and ($generated@@0 ($generated@@95 ($generated@@382 $generated@@484) $generated@@488)) (= $generated@@485 ($generated@@95 ($generated@@472 $generated@@484) $generated@@488))))
 :pattern ( ($generated@@95 ($generated@@382 $generated@@484) $generated@@488))
 :pattern ( ($generated@@95 ($generated@@472 $generated@@484) $generated@@488))
))))))
 :pattern ( ($generated@@95 ($generated@@432 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) ($generated@@366 $generated@@176 $generated@@176)) (= (type $generated@@493) $generated@@68)) (= (type $generated@@494) $generated@@68)) (= (type $generated@@495) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@492 ($generated@@489 $generated@@493 $generated@@494) $generated@@495) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@364 $generated@@492) $generated@@496))) (and ($generated@@301 ($generated@@95 ($generated@@464 $generated@@492) $generated@@496) $generated@@494 $generated@@495) ($generated@@301 $generated@@496 $generated@@493 $generated@@495)))
 :pattern ( ($generated@@95 ($generated@@464 $generated@@492) $generated@@496))
 :pattern ( ($generated@@95 ($generated@@364 $generated@@492) $generated@@496))
))))
 :pattern ( ($generated@@88 $generated@@492 ($generated@@489 $generated@@493 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) ($generated@@384 $generated@@176 $generated@@176)) (= (type $generated@@501) $generated@@68)) (= (type $generated@@502) $generated@@68)) (= (type $generated@@503) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@382 $generated@@500) $generated@@504))) (and ($generated@@301 ($generated@@95 ($generated@@472 $generated@@500) $generated@@504) $generated@@502 $generated@@503) ($generated@@301 $generated@@504 $generated@@501 $generated@@503)))
 :pattern ( ($generated@@95 ($generated@@472 $generated@@500) $generated@@504))
 :pattern ( ($generated@@95 ($generated@@382 $generated@@500) $generated@@504))
))))
 :pattern ( ($generated@@88 $generated@@500 ($generated@@497 $generated@@501 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@79) ($generated@@76 $generated@@505 $generated@@78)) (or ($generated@@294 $generated@@505) ($generated@@317 $generated@@505)))
 :pattern ( ($generated@@317 $generated@@505) ($generated@@76 $generated@@505 $generated@@78))
 :pattern ( ($generated@@294 $generated@@505) ($generated@@76 $generated@@505 $generated@@78))
)))
(assert (forall (($generated@@507 T@T) ) (! (= (type ($generated@@506 $generated@@507)) ($generated@@90 $generated@@507 $generated@@4))
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@386 (type $generated@@508))))
(let (($generated@@510 ($generated@@385 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@384 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@383 $generated@@510 $generated@@509)) (= ($generated@@382 $generated@@508) ($generated@@506 $generated@@510))))))
 :pattern ( ($generated@@382 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@386 (type $generated@@511))))
(let (($generated@@513 ($generated@@385 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@384 $generated@@513 $generated@@512)) (= (= $generated@@511 ($generated@@383 $generated@@513 $generated@@512)) (= ($generated@@432 $generated@@511) ($generated@@506 $generated@@512))))))
 :pattern ( ($generated@@432 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@386 (type $generated@@514))))
(let (($generated@@516 ($generated@@385 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@384 $generated@@516 $generated@@515)) (= (= $generated@@514 ($generated@@383 $generated@@516 $generated@@515)) (= ($generated@@471 $generated@@514) ($generated@@506 $generated@@176))))))
 :pattern ( ($generated@@471 $generated@@514))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@368 (type $generated@@517))))
(let (($generated@@519 ($generated@@367 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@366 $generated@@519 $generated@@518)) (or (= $generated@@517 ($generated@@365 $generated@@519 $generated@@518)) (exists (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (and (and (= (type $generated@@520) $generated@@176) (= (type $generated@@521) $generated@@176)) ($generated@@0 ($generated@@95 ($generated@@463 $generated@@517) ($generated@@345 ($generated@@255 $generated@@520 $generated@@521)))))
 :no-pattern (type $generated@@520)
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
))))))
 :pattern ( ($generated@@463 $generated@@517))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@386 (type $generated@@522))))
(let (($generated@@524 ($generated@@385 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@384 $generated@@524 $generated@@523)) (or (= $generated@@522 ($generated@@383 $generated@@524 $generated@@523)) (exists (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (and (and (= (type $generated@@525) $generated@@176) (= (type $generated@@526) $generated@@176)) ($generated@@0 ($generated@@95 ($generated@@471 $generated@@522) ($generated@@345 ($generated@@255 $generated@@525 $generated@@526)))))
 :no-pattern (type $generated@@525)
 :no-pattern (type $generated@@526)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
 :no-pattern ($generated $generated@@526)
 :no-pattern ($generated@@0 $generated@@526)
))))))
 :pattern ( ($generated@@471 $generated@@522))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@176) ($generated@@256 $generated@@527 $generated@@46)) (and (= ($generated@@345 ($generated@@406 $generated@@2 $generated@@527)) $generated@@527) ($generated@@76 ($generated@@406 $generated@@2 $generated@@527) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@527 $generated@@46))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@176) ($generated@@256 $generated@@528 $generated@@47)) (and (= ($generated@@345 ($generated@@406 $generated@@3 $generated@@528)) $generated@@528) ($generated@@76 ($generated@@406 $generated@@3 $generated@@528) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@528 $generated@@47))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@176) ($generated@@256 $generated@@529 $generated@@44)) (and (= ($generated@@345 ($generated@@406 $generated@@4 $generated@@529)) $generated@@529) ($generated@@76 ($generated@@406 $generated@@4 $generated@@529) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@529 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@530) 21))
(assert (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@176) ($generated@@256 $generated@@531 $generated@@45)) (and (= ($generated@@345 ($generated@@406 $generated@@530 $generated@@531)) $generated@@531) ($generated@@76 ($generated@@406 $generated@@530 $generated@@531) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@531 $generated@@45))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@256 ($generated@@345 $generated@@532) $generated@@533) ($generated@@76 $generated@@532 $generated@@533)))
 :pattern ( ($generated@@256 ($generated@@345 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@93 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@90 $generated@@535 $generated@@2)) (<= 0 ($generated@@335 $generated@@534))))
 :pattern ( ($generated@@335 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@329 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@328 $generated@@537)) (<= 0 ($generated@@327 $generated@@536))))
 :pattern ( ($generated@@327 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@538 ($generated@@489 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@489 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@68) (= (type $generated@@545) $generated@@68)) (= ($generated@@542 ($generated@@489 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@489 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@86 ($generated@@489 $generated@@546 $generated@@547)) $generated@@58))
 :pattern ( ($generated@@489 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@548 ($generated@@497 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@497 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= ($generated@@552 ($generated@@497 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@497 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (= ($generated@@86 ($generated@@497 $generated@@556 $generated@@557)) $generated@@59))
 :pattern ( ($generated@@497 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@176) (= (type $generated@@559) $generated@@176)) (= ($generated@@146 ($generated@@255 $generated@@558 $generated@@559)) $generated@@61))
 :pattern ( ($generated@@255 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (= ($generated@@560 ($generated@@167 $generated@@562 $generated@@563)) $generated@@562))
 :pattern ( ($generated@@167 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (= ($generated@@564 ($generated@@167 $generated@@566 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@167 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@176) (= (type $generated@@569) $generated@@176)) (= ($generated@@174 ($generated@@255 $generated@@568 $generated@@569)) $generated@@568))
 :pattern ( ($generated@@255 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@176) (= (type $generated@@571) $generated@@176)) (= ($generated@@175 ($generated@@255 $generated@@570 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@255 $generated@@570 $generated@@571))
)))
(assert  (and (forall (($generated@@574 T@U) ) (! (= (type ($generated@@572 $generated@@574)) $generated@@309)
 :pattern ( ($generated@@572 $generated@@574))
)) (= (type $generated@@573) $generated@@309)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@309) (= (type $generated@@576) $generated@@79)) (= ($generated@@308 $generated@@575 $generated@@576) ($generated@@308 $generated@@573 $generated@@576)))
 :pattern ( ($generated@@308 ($generated@@572 $generated@@575) $generated@@576))
)))
(assert  (and (forall (($generated@@579 T@U) ) (! (= (type ($generated@@577 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@577 $generated@@579))
)) (forall (($generated@@580 T@U) ($generated@@581 Int) ) (! (let (($generated@@582 ($generated@@329 (type $generated@@580))))
(= (type ($generated@@578 $generated@@580 $generated@@581)) $generated@@582))
 :pattern ( ($generated@@578 $generated@@580 $generated@@581))
))))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@328 $generated@@176)) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@583 ($generated@@577 $generated@@584) $generated@@585) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@327 $generated@@583))) ($generated@@301 ($generated@@578 $generated@@583 $generated@@586) $generated@@584 $generated@@585))
 :pattern ( ($generated@@578 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@88 $generated@@583 ($generated@@577 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 Int) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@79) (= (type $generated@@589) $generated@@79)) (= ($generated@@77 ($generated@@288 $generated@@587) ($generated@@290 $generated@@588) ($generated@@290 $generated@@589)) ($generated@@290 ($generated@@77 $generated@@587 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@77 ($generated@@288 $generated@@587) ($generated@@290 $generated@@588) ($generated@@290 $generated@@589)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@590 ($generated@@89 $generated@@591)) $generated@@591)
 :pattern ( ($generated@@89 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@68)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@68) (= ($generated@@592 ($generated@@278 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@278 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@68) (= ($generated@@86 ($generated@@278 $generated@@595)) $generated@@54))
 :pattern ( ($generated@@278 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@68)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@68) (= ($generated@@596 ($generated@@283 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@283 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@68) (= ($generated@@86 ($generated@@283 $generated@@599)) $generated@@55))
 :pattern ( ($generated@@283 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ) (! (= (type ($generated@@600 $generated@@601)) $generated@@68)
 :pattern ( ($generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@68) (= ($generated@@600 ($generated@@182 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@182 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@68) (= ($generated@@86 ($generated@@182 $generated@@603)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@68)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@68) (= ($generated@@604 ($generated@@577 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@577 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@68) (= ($generated@@86 ($generated@@577 $generated@@607)) $generated@@57))
 :pattern ( ($generated@@577 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
(= ($generated@@406 $generated@@609 ($generated@@345 $generated@@608)) $generated@@608))
 :pattern ( ($generated@@345 $generated@@608))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@79) (= (type $generated@@613) $generated@@79)) (< ($generated@@610 $generated@@612) ($generated@@610 ($generated@@77 $generated@@611 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@77 $generated@@611 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@79)) (< ($generated@@610 $generated@@616) ($generated@@610 ($generated@@77 $generated@@614 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@77 $generated@@614 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@366 $generated@@176 $generated@@176)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) $generated@@68)) (= ($generated@@76 $generated@@617 ($generated@@489 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@364 $generated@@617) $generated@@620))) (and ($generated@@256 ($generated@@95 ($generated@@464 $generated@@617) $generated@@620) $generated@@619) ($generated@@256 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@95 ($generated@@464 $generated@@617) $generated@@620))
 :pattern ( ($generated@@95 ($generated@@364 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@76 $generated@@617 ($generated@@489 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@384 $generated@@176 $generated@@176)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@68)) (= ($generated@@76 $generated@@621 ($generated@@497 $generated@@622 $generated@@623)) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@382 $generated@@621) $generated@@624))) (and ($generated@@256 ($generated@@95 ($generated@@472 $generated@@621) $generated@@624) $generated@@623) ($generated@@256 $generated@@624 $generated@@622)))
 :pattern ( ($generated@@95 ($generated@@472 $generated@@621) $generated@@624))
 :pattern ( ($generated@@95 ($generated@@382 $generated@@621) $generated@@624))
))))
 :pattern ( ($generated@@76 $generated@@621 ($generated@@497 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@176) (= (type $generated@@627) $generated@@176)) (< ($generated@@625 $generated@@626) ($generated@@610 ($generated@@255 $generated@@626 $generated@@627))))
 :pattern ( ($generated@@255 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@176) (= (type $generated@@629) $generated@@176)) (< ($generated@@625 $generated@@629) ($generated@@610 ($generated@@255 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@255 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@309) (= (type $generated@@631) $generated@@79)) (= ($generated@@308 ($generated@@343 $generated@@630) $generated@@631) ($generated@@308 $generated@@630 $generated@@631)))
 :pattern ( ($generated@@308 ($generated@@343 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@176) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@68)) ($generated@@256 $generated@@632 ($generated@@489 $generated@@633 $generated@@634))) (and (= ($generated@@345 ($generated@@406 ($generated@@366 $generated@@176 $generated@@176) $generated@@632)) $generated@@632) ($generated@@76 ($generated@@406 ($generated@@366 $generated@@176 $generated@@176) $generated@@632) ($generated@@489 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@256 $generated@@632 ($generated@@489 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@176) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@256 $generated@@635 ($generated@@497 $generated@@636 $generated@@637))) (and (= ($generated@@345 ($generated@@406 ($generated@@384 $generated@@176 $generated@@176) $generated@@635)) $generated@@635) ($generated@@76 ($generated@@406 ($generated@@384 $generated@@176 $generated@@176) $generated@@635) ($generated@@497 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@256 $generated@@635 ($generated@@497 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@68) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) $generated@@176)) ($generated@@256 $generated@@640 ($generated@@167 $generated@@638 $generated@@639))) (and (= ($generated@@345 ($generated@@406 $generated@@79 $generated@@640)) $generated@@640) ($generated@@76 ($generated@@406 $generated@@79 $generated@@640) ($generated@@167 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@256 $generated@@640 ($generated@@167 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 (type $generated@@641)))
 (not ($generated@@0 ($generated@@95 ($generated@@506 $generated@@642) $generated@@641))))
 :pattern ( (let (($generated@@642 (type $generated@@641)))
($generated@@95 ($generated@@506 $generated@@642) $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@73)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@68) (= (type $generated@@646) $generated@@68)) (and (= ($generated@@86 ($generated@@167 $generated@@645 $generated@@646)) $generated@@62) (= ($generated@@643 ($generated@@167 $generated@@645 $generated@@646)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) $generated@@79) (= (type $generated@@648) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@263 $generated@@648) (and ($generated@@317 $generated@@647) ($generated@@88 $generated@@647 $generated@@78 $generated@@648)))) ($generated@@88 ($generated@@8 ($generated@@151 $generated@@647)) $generated@@46 $generated@@648))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@151 $generated@@647)) $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@79) (= ($generated@@625 ($generated@@345 $generated@@649)) ($generated@@610 $generated@@649)))
 :pattern ( ($generated@@625 ($generated@@345 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@176) ($generated@@256 $generated@@650 ($generated@@89 0))) (and (= ($generated@@345 ($generated@@406 $generated@@2 $generated@@650)) $generated@@650) ($generated@@76 ($generated@@406 ($generated@@90 $generated@@176 $generated@@4) $generated@@650) ($generated@@89 0))))
 :pattern ( ($generated@@256 $generated@@650 ($generated@@89 0)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@176) (= (type $generated@@652) $generated@@68)) ($generated@@256 $generated@@651 ($generated@@278 $generated@@652))) (and (= ($generated@@345 ($generated@@406 ($generated@@90 $generated@@176 $generated@@4) $generated@@651)) $generated@@651) ($generated@@76 ($generated@@406 ($generated@@90 $generated@@176 $generated@@4) $generated@@651) ($generated@@278 $generated@@652))))
 :pattern ( ($generated@@256 $generated@@651 ($generated@@278 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@176) (= (type $generated@@654) $generated@@68)) ($generated@@256 $generated@@653 ($generated@@283 $generated@@654))) (and (= ($generated@@345 ($generated@@406 ($generated@@90 $generated@@176 $generated@@4) $generated@@653)) $generated@@653) ($generated@@76 ($generated@@406 ($generated@@90 $generated@@176 $generated@@4) $generated@@653) ($generated@@283 $generated@@654))))
 :pattern ( ($generated@@256 $generated@@653 ($generated@@283 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@176) (= (type $generated@@656) $generated@@68)) ($generated@@256 $generated@@655 ($generated@@182 $generated@@656))) (and (= ($generated@@345 ($generated@@406 ($generated@@90 $generated@@176 $generated@@2) $generated@@655)) $generated@@655) ($generated@@76 ($generated@@406 ($generated@@90 $generated@@176 $generated@@2) $generated@@655) ($generated@@182 $generated@@656))))
 :pattern ( ($generated@@256 $generated@@655 ($generated@@182 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@176) (= (type $generated@@658) $generated@@68)) ($generated@@256 $generated@@657 ($generated@@577 $generated@@658))) (and (= ($generated@@345 ($generated@@406 ($generated@@328 $generated@@176) $generated@@657)) $generated@@657) ($generated@@76 ($generated@@406 ($generated@@328 $generated@@176) $generated@@657) ($generated@@577 $generated@@658))))
 :pattern ( ($generated@@256 $generated@@657 ($generated@@577 $generated@@658)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@643 $generated@@78) $generated@@67))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@659 ($generated@@182 $generated@@660) $generated@@661) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@176) (< 0 ($generated ($generated@@95 $generated@@659 $generated@@662)))) ($generated@@301 $generated@@662 $generated@@660 $generated@@661))
 :pattern ( ($generated@@95 $generated@@659 $generated@@662))
))))
 :pattern ( ($generated@@88 $generated@@659 ($generated@@182 $generated@@660) $generated@@661))
)))
(assert (= $generated@@181 ($generated@@290 $generated@@181)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) $generated@@79) (= (type $generated@@664) $generated@@68)) (= (type $generated@@665) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@263 $generated@@665) (and ($generated@@166 $generated@@663) (exists (($generated@@666 T@U) ) (!  (and (= (type $generated@@666) $generated@@68) ($generated@@88 $generated@@663 ($generated@@167 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@88 $generated@@663 ($generated@@167 $generated@@664 $generated@@666) $generated@@665))
))))) ($generated@@301 ($generated@@174 $generated@@663) $generated@@664 $generated@@665))
 :pattern ( ($generated@@301 ($generated@@174 $generated@@663) $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@79) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@263 $generated@@669) (and ($generated@@166 $generated@@667) (exists (($generated@@670 T@U) ) (!  (and (= (type $generated@@670) $generated@@68) ($generated@@88 $generated@@667 ($generated@@167 $generated@@670 $generated@@668) $generated@@669))
 :pattern ( ($generated@@88 $generated@@667 ($generated@@167 $generated@@670 $generated@@668) $generated@@669))
))))) ($generated@@301 ($generated@@175 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@301 ($generated@@175 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@672)))
 (=> (and (and (= (type $generated@@671) ($generated@@90 $generated@@674 $generated@@2)) (= (type $generated@@673) $generated@@674)) (not (= $generated@@672 $generated@@673))) (= ($generated ($generated@@95 $generated@@671 $generated@@673)) ($generated ($generated@@95 ($generated@@336 $generated@@671 $generated@@672) $generated@@673)))))
 :pattern ( ($generated@@336 $generated@@671 $generated@@672) ($generated@@95 $generated@@671 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@79) (= (type $generated@@676) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@263 $generated@@676) (and ($generated@@317 $generated@@675) ($generated@@88 $generated@@675 $generated@@78 $generated@@676)))) ($generated@@88 ($generated@@155 $generated@@675) $generated@@78 $generated@@676))
 :pattern ( ($generated@@88 ($generated@@155 $generated@@675) $generated@@78 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@79) (= (type $generated@@678) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@263 $generated@@678) (and ($generated@@317 $generated@@677) ($generated@@88 $generated@@677 $generated@@78 $generated@@678)))) ($generated@@88 ($generated@@160 $generated@@677) $generated@@78 $generated@@678))
 :pattern ( ($generated@@88 ($generated@@160 $generated@@677) $generated@@78 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@176) (= (type $generated@@680) $generated@@176)) (= ($generated@@255 ($generated@@290 $generated@@679) ($generated@@290 $generated@@680)) ($generated@@290 ($generated@@255 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@255 ($generated@@290 $generated@@679) ($generated@@290 $generated@@680)))
)))
(assert (forall (($generated@@681 Int) ) (! (= ($generated@@345 ($generated@@8 ($generated@@288 $generated@@681))) ($generated@@290 ($generated@@345 ($generated@@8 $generated@@681))))
 :pattern ( ($generated@@345 ($generated@@8 ($generated@@288 $generated@@681))))
)))
(assert (forall (($generated@@682 T@U) ) (! (= ($generated@@345 ($generated@@290 $generated@@682)) ($generated@@290 ($generated@@345 $generated@@682)))
 :pattern ( ($generated@@345 ($generated@@290 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@329 (type $generated@@683))))
 (=> (and (= (type $generated@@683) ($generated@@328 $generated@@684)) (= ($generated@@327 $generated@@683) 0)) (= $generated@@683 ($generated@@326 $generated@@684))))
 :pattern ( ($generated@@327 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 (type $generated@@686)))
 (=> (and (and (= (type $generated@@685) ($generated@@90 $generated@@688 $generated@@2)) (= (type $generated@@687) $generated@@2)) (<= 0 ($generated $generated@@687))) (= ($generated@@335 ($generated@@96 $generated@@685 $generated@@686 $generated@@687)) (+ (- ($generated@@335 $generated@@685) ($generated ($generated@@95 $generated@@685 $generated@@686))) ($generated $generated@@687)))))
 :pattern ( ($generated@@335 ($generated@@96 $generated@@685 $generated@@686 $generated@@687)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@690) $generated@@2)) ($generated@@88 $generated@@690 $generated@@46 $generated@@689))
 :pattern ( ($generated@@88 $generated@@690 $generated@@46 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@692) $generated@@3)) ($generated@@88 $generated@@692 $generated@@47 $generated@@691))
 :pattern ( ($generated@@88 $generated@@692 $generated@@47 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@694) $generated@@4)) ($generated@@88 $generated@@694 $generated@@44 $generated@@693))
 :pattern ( ($generated@@88 $generated@@694 $generated@@44 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@696) $generated@@530)) ($generated@@88 $generated@@696 $generated@@45 $generated@@695))
 :pattern ( ($generated@@88 $generated@@696 $generated@@45 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@698) $generated@@176)) ($generated@@88 $generated@@698 $generated@@48 $generated@@697))
 :pattern ( ($generated@@88 $generated@@698 $generated@@48 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@328 $generated@@176)) (= (type $generated@@700) $generated@@68)) (= ($generated@@76 $generated@@699 ($generated@@577 $generated@@700)) (forall (($generated@@701 Int) ) (!  (=> (and (<= 0 $generated@@701) (< $generated@@701 ($generated@@327 $generated@@699))) ($generated@@256 ($generated@@578 $generated@@699 $generated@@701) $generated@@700))
 :pattern ( ($generated@@578 $generated@@699 $generated@@701))
))))
 :pattern ( ($generated@@76 $generated@@699 ($generated@@577 $generated@@700)))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 Int) ) (!  (=> (= (type $generated@@703) ($generated@@328 $generated@@176)) (=> (and (<= 0 $generated@@704) (< $generated@@704 ($generated@@327 $generated@@703))) (< ($generated@@610 ($generated@@406 $generated@@79 ($generated@@578 $generated@@703 $generated@@704))) ($generated@@702 $generated@@703))))
 :pattern ( ($generated@@610 ($generated@@406 $generated@@79 ($generated@@578 $generated@@703 $generated@@704))))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) ($generated@@366 $generated@@176 $generated@@176)) (= (type $generated@@706) $generated@@68)) (= (type $generated@@707) $generated@@68)) ($generated@@76 $generated@@705 ($generated@@489 $generated@@706 $generated@@707))) (and (and ($generated@@76 ($generated@@364 $generated@@705) ($generated@@278 $generated@@706)) ($generated@@76 ($generated@@421 $generated@@705) ($generated@@278 $generated@@707))) ($generated@@76 ($generated@@463 $generated@@705) ($generated@@278 ($generated@@167 $generated@@706 $generated@@707)))))
 :pattern ( ($generated@@76 $generated@@705 ($generated@@489 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (and (= (type $generated@@708) ($generated@@384 $generated@@176 $generated@@176)) (= (type $generated@@709) $generated@@68)) (= (type $generated@@710) $generated@@68)) ($generated@@76 $generated@@708 ($generated@@497 $generated@@709 $generated@@710))) (and (and ($generated@@76 ($generated@@382 $generated@@708) ($generated@@283 $generated@@709)) ($generated@@76 ($generated@@432 $generated@@708) ($generated@@283 $generated@@710))) ($generated@@76 ($generated@@471 $generated@@708) ($generated@@283 ($generated@@167 $generated@@709 $generated@@710)))))
 :pattern ( ($generated@@76 $generated@@708 ($generated@@497 $generated@@709 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@2) ($generated@@76 $generated@@711 $generated@@46))
 :pattern ( ($generated@@76 $generated@@711 $generated@@46))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@3) ($generated@@76 $generated@@712 $generated@@47))
 :pattern ( ($generated@@76 $generated@@712 $generated@@47))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@4) ($generated@@76 $generated@@713 $generated@@44))
 :pattern ( ($generated@@76 $generated@@713 $generated@@44))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@530) ($generated@@76 $generated@@714 $generated@@45))
 :pattern ( ($generated@@76 $generated@@714 $generated@@45))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@176) ($generated@@76 $generated@@715 $generated@@48))
 :pattern ( ($generated@@76 $generated@@715 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () Int)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@716) $generated@@79) (= (type $generated@@718) $generated@@79)) (= (type $generated@@719) $generated@@79)) (= (type $generated@@720) $generated@@79)) (= (type $generated@@721) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@722) $generated@@79)) (= (type $generated@@723) $generated@@79)) (= (type $generated@@724) $generated@@79)) (= (type $generated@@727) ($generated@@189 $generated@@91 $generated@@4))) (= (type $generated@@728) $generated@@91)) (= (type $generated@@729) ($generated@@189 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@731 true))
(let (($generated@@732  (=> (= $generated@@716 ($generated@@77 $generated@@717 $generated@@718 $generated@@719)) (=> (and ($generated@@76 $generated@@718 $generated@@78) ($generated@@76 $generated@@719 $generated@@78)) (=> (and (and (and ($generated@@76 $generated@@720 $generated@@78) ($generated@@88 $generated@@720 $generated@@78 $generated@@721)) (= $generated@@722 $generated@@719)) (and ($generated@@76 $generated@@722 $generated@@78) (= $generated@@720 $generated@@722))) (=> (and (and (and (and ($generated@@76 $generated@@723 $generated@@78) ($generated@@88 $generated@@723 $generated@@78 $generated@@721)) (= $generated@@724 $generated@@718)) (and ($generated@@76 $generated@@724 $generated@@78) (= $generated@@723 $generated@@724))) (and (and (= $generated@@725 $generated@@717) ($generated@@76 ($generated@@8 $generated@@725) $generated@@46)) (and (= $generated@@726 $generated@@725) ($generated@@88 $generated@@723 $generated@@78 $generated@@721)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@610 $generated@@723) ($generated@@610 $generated@@716))) (=> (< ($generated@@610 $generated@@723) ($generated@@610 $generated@@716)) (=> ($generated@@310 $generated@@723) (=> (and ($generated@@88 $generated@@720 $generated@@78 $generated@@721) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@610 $generated@@720) ($generated@@610 $generated@@716))))))))))))
(let (($generated@@733  (=> (not (= $generated@@716 $generated@@181)) (and (=> (= (ControlFlow 0 7) 4) $generated@@732) (=> (= (ControlFlow 0 7) 6) $generated@@731)))))
(let (($generated@@734 true))
(let (($generated@@735  (=> (= $generated@@727 ($generated@@243 $generated@@728 $generated@@721 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@734) (=> (= (ControlFlow 0 8) 7) $generated@@733)))))
(let (($generated@@736 true))
(let (($generated@@737  (=> (= $generated@@729 ($generated@@188 $generated@@728 $generated@@721 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@736) (=> (= (ControlFlow 0 9) 8) $generated@@735)))))
(let (($generated@@738  (=> (and (and (and ($generated@@263 $generated@@721) ($generated@@730 $generated@@721)) ($generated@@76 $generated@@716 $generated@@78)) (and (= 1 $generated@@307) (= (ControlFlow 0 10) 9))) $generated@@737)))
$generated@@738)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@U) Bool)
(declare-fun $generated@@313 (T@U) Int)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@T T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U Int) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@135 $generated@@145)) ($generated@@78 $generated@@136 $generated@@2))
 :pattern ( ($generated@@135 $generated@@145))
))) (= (type $generated@@139) $generated@@66)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@141 $generated@@146 $generated@@147)) ($generated@@78 $generated@@136 $generated@@2))
 :pattern ( ($generated@@141 $generated@@146 $generated@@147))
))) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@142 $generated@@148)) $generated@@144)
 :pattern ( ($generated@@142 $generated@@148))
))) (= (type $generated@@143) $generated@@144)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@136) (or ($generated@@137 $generated@@149) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@149 $generated@@139)))) (and ($generated@@140 $generated@@149) (= ($generated@@135 $generated@@149) ($generated@@141 ($generated@@142 $generated@@143) $generated@@149))))
 :pattern ( ($generated@@135 $generated@@149))
))))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@77 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@77 0)))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@136) (or ($generated@@153 $generated@@154) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@154 $generated@@139)))) true)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert  (and (= ($generated@@1 $generated@@157) 16) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@158 $generated@@159)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@66) (= (type $generated@@161) $generated@@66)) (= (type $generated@@162) $generated@@157)) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161))) ($generated@@155 $generated@@162))
 :pattern ( ($generated@@155 $generated@@162) ($generated@@150 $generated@@162 ($generated@@156 $generated@@160 $generated@@161)))
)))
(assert  (and (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@136)
 :pattern ( ($generated@@164 $generated@@166))
)) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@136)
 :pattern ( ($generated@@165 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@157) (= (type $generated@@169) $generated@@157)) true) (= ($generated@@163 $generated@@168 $generated@@169)  (and (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)) (= ($generated@@165 $generated@@168) ($generated@@165 $generated@@169)))))
 :pattern ( ($generated@@163 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@66)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@174) $generated@@66)) ($generated@@150 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@150 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 17)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@79 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@69 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@79) (= (type $generated@@225) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@226) ($generated@@68 $generated@@4))) (= (type $generated@@228) $generated@@79)) (= (type $generated@@229) ($generated@@68 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@177 $generated@@79 $generated@@4))
 :pattern ( ($generated@@231 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@69 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@79) (= (type $generated@@237) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@238) ($generated@@68 $generated@@4))) (= (type $generated@@240) $generated@@79)) (= (type $generated@@241) ($generated@@68 $generated@@242))) (= ($generated@@0 ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@175 ($generated@@231 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@243 $generated@@244 $generated@@245)) $generated@@157)
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@66) (= (type $generated@@247) $generated@@66)) (= (type $generated@@248) $generated@@136)) (= (type $generated@@249) $generated@@136)) (= ($generated@@150 ($generated@@243 $generated@@248 $generated@@249) ($generated@@156 $generated@@246 $generated@@247))  (and ($generated@@138 $generated@@248 $generated@@246) ($generated@@138 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@150 ($generated@@243 $generated@@248 $generated@@249) ($generated@@156 $generated@@246 $generated@@247)))
)))
(assert  (=> true (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@144) (= (type $generated@@253) $generated@@136)) (or ($generated@@251 $generated@@253) ($generated@@138 $generated@@253 $generated@@139))) true)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@157) (= (type $generated@@255) $generated@@157)) (= ($generated@@163 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@163 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) (or ($generated@@153 ($generated@@256 $generated@@259)) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@259 $generated@@139)))) (and ($generated@@251 ($generated@@256 $generated@@259)) (= ($generated@@152 ($generated@@256 $generated@@259)) ($generated@@250 ($generated@@142 $generated@@143) ($generated@@256 $generated@@259)))))
 :weight 3
 :pattern ( ($generated@@152 ($generated@@256 $generated@@259)))
))))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@66)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@263) $generated@@66)) (= ($generated@@150 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@136) ($generated@@0 ($generated@@83 $generated@@262 $generated@@264))) ($generated@@138 $generated@@264 $generated@@263))
 :pattern ( ($generated@@83 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@150 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@66)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@268) $generated@@66)) (= ($generated@@150 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@136) ($generated@@0 ($generated@@83 $generated@@267 $generated@@269))) ($generated@@138 $generated@@269 $generated@@268))
 :pattern ( ($generated@@83 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@150 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@256 $generated@@270) $generated@@270)
 :pattern ( ($generated@@256 $generated@@270))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) $generated@@66) (= (type $generated@@274) $generated@@66)) (= (type $generated@@275) $generated@@136)) (= (type $generated@@276) $generated@@136)) (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@271 $generated@@277)) (= ($generated@@76 ($generated@@243 $generated@@275 $generated@@276) ($generated@@156 $generated@@273 $generated@@274) $generated@@277)  (and ($generated@@272 $generated@@275 $generated@@273 $generated@@277) ($generated@@272 $generated@@276 $generated@@274 $generated@@277))))
 :pattern ( ($generated@@76 ($generated@@243 $generated@@275 $generated@@276) ($generated@@156 $generated@@273 $generated@@274) $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@70)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@157) (= ($generated@@155 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@155 $generated@@280))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@136) (or ($generated@@137 ($generated@@256 $generated@@281)) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@281 $generated@@139)))) (and ($generated@@140 ($generated@@256 $generated@@281)) (= ($generated@@135 ($generated@@256 $generated@@281)) ($generated@@141 ($generated@@142 $generated@@143) ($generated@@256 $generated@@281)))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@256 $generated@@281)))
))))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@136) (or ($generated@@137 $generated@@282) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@282 $generated@@139)))) ($generated@@150 ($generated@@135 $generated@@282) ($generated@@170 $generated@@46)))
 :pattern ( ($generated@@135 $generated@@282))
))))
(assert  (and (forall (($generated@@288 T@T) ) (! (= (type ($generated@@286 $generated@@288)) ($generated@@78 $generated@@288 $generated@@2))
 :pattern ( ($generated@@286 $generated@@288))
)) (forall (($generated@@289 T@U) ) (! (= (type ($generated@@287 $generated@@289)) $generated@@136)
 :pattern ( ($generated@@287 $generated@@289))
))))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@136) (or ($generated@@284 $generated@@290) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@290 $generated@@139) (and ($generated@@152 $generated@@290) (not ($generated@@285 ($generated@@135 $generated@@290) ($generated@@286 $generated@@136)))))))) (let (($generated@@291 ($generated@@283 $generated@@290)))
 (and (> ($generated ($generated@@83 ($generated@@135 $generated@@290) ($generated@@287 ($generated@@8 $generated@@291)))) 0) (forall (($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@292) $generated@@2) true) (> ($generated ($generated@@83 ($generated@@135 $generated@@290) ($generated@@287 $generated@@292))) 0)) (<= $generated@@291 ($generated $generated@@292)))
 :pattern ( ($generated@@83 ($generated@@135 $generated@@290) ($generated@@287 $generated@@292)))
)))))
 :pattern ( ($generated@@283 $generated@@290))
))))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@157) ($generated@@155 $generated@@293)) (exists (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@294) $generated@@136) (= (type $generated@@295) $generated@@136)) (= $generated@@293 ($generated@@243 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@294)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@155 $generated@@293))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 18)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@T) ) (! (= (type ($generated@@296 $generated@@302)) ($generated@@298 $generated@@302))
 :pattern ( ($generated@@296 $generated@@302))
))))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@303)) 0)
 :pattern ( ($generated@@296 $generated@@303))
)))
(assert  (=> true (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@136) (or ($generated@@305 $generated@@306) (and ($generated@@138 $generated@@306 $generated@@139) (not ($generated@@285 ($generated@@141 ($generated@@142 $generated@@143) $generated@@306) ($generated@@286 $generated@@136)))))) true)
 :pattern ( ($generated@@304 $generated@@306))
))))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@136) (or ($generated@@284 ($generated@@256 $generated@@307)) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@307 $generated@@139) (and ($generated@@152 ($generated@@256 $generated@@307)) (not ($generated@@285 ($generated@@135 ($generated@@256 $generated@@307)) ($generated@@286 $generated@@136)))))))) (and ($generated@@305 ($generated@@256 $generated@@307)) (= ($generated@@283 ($generated@@256 $generated@@307)) ($generated@@304 ($generated@@256 $generated@@307)))))
 :weight 3
 :pattern ( ($generated@@283 ($generated@@256 $generated@@307)))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@66) (= (type $generated@@310) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@272 ($generated@@287 $generated@@308) $generated@@309 $generated@@310) ($generated@@76 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@272 ($generated@@287 $generated@@308) $generated@@309 $generated@@310))
)))
(assert  (=> true (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@311) $generated@@144) (= (type $generated@@312) $generated@@136)) (or ($generated@@140 $generated@@312) ($generated@@138 $generated@@312 $generated@@139))) ($generated@@150 ($generated@@141 $generated@@311 $generated@@312) ($generated@@170 $generated@@46)))
 :pattern ( ($generated@@141 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@81 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@78 $generated@@315 $generated@@2)) (and (= (= ($generated@@313 $generated@@314) 0) (= $generated@@314 ($generated@@286 $generated@@315))) (=> (not (= ($generated@@313 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@83 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@83 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@83 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 20)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@83 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@83 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@81 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@78 $generated@@354 $generated@@2)) (= ($generated@@171 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@83 $generated@@353 $generated@@355))) (<= ($generated ($generated@@83 $generated@@353 $generated@@355)) ($generated@@313 $generated@@353))))
 :pattern ( ($generated@@83 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@171 $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@321 (type $generated@@356))))
(let (($generated@@358 ($generated@@320 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@319 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@318 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@83 ($generated@@317 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@317 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@321 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@78 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@321 (type $generated@@363))))
(let (($generated@@365 ($generated@@320 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@319 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@318 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@83 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@339 (type $generated@@367))))
(let (($generated@@369 ($generated@@338 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@337 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@336 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@335 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@339 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@78 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@339 (type $generated@@374))))
(let (($generated@@376 ($generated@@338 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@337 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@336 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@379) $generated@@66)) (= ($generated@@150 $generated@@378 ($generated@@170 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@136) (< 0 ($generated ($generated@@83 $generated@@378 $generated@@380)))) ($generated@@138 $generated@@380 $generated@@379))
 :pattern ( ($generated@@83 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@150 $generated@@378 ($generated@@170 $generated@@379)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@81 (type $generated@@381))))
 (=> (and (= (type $generated@@381) ($generated@@78 $generated@@383 $generated@@2)) (= (type $generated@@382) ($generated@@78 $generated@@383 $generated@@2))) (= ($generated@@285 $generated@@381 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (= ($generated ($generated@@83 $generated@@381 $generated@@384)) ($generated ($generated@@83 $generated@@382 $generated@@384))))
 :pattern ( ($generated@@83 $generated@@381 $generated@@384))
 :pattern ( ($generated@@83 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@285 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@386) $generated@@66)) (= (type $generated@@387) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@385 ($generated@@260 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@136) ($generated@@0 ($generated@@83 $generated@@385 $generated@@388))) ($generated@@272 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@83 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@76 $generated@@385 ($generated@@260 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@78 $generated@@136 $generated@@4)) (= (type $generated@@390) $generated@@66)) (= (type $generated@@391) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@389 ($generated@@265 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@136) ($generated@@0 ($generated@@83 $generated@@389 $generated@@392))) ($generated@@272 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@83 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@76 $generated@@389 ($generated@@265 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@83 ($generated@@286 $generated@@394) $generated@@393)))
)))
(assert  (and (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@395 $generated@@398)) ($generated@@78 $generated@@136 $generated@@4))
 :pattern ( ($generated@@395 $generated@@398))
)) (forall (($generated@@399 T@T) ($generated@@400 T@U) ) (! (= (type ($generated@@396 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@396 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@321 (type $generated@@401))))
(let (($generated@@403 ($generated@@320 (type $generated@@401))))
(= (type ($generated@@397 $generated@@401)) ($generated@@78 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@397 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@319 $generated@@136 $generated@@136)) (= (type $generated@@405) $generated@@136)) (= ($generated@@0 ($generated@@83 ($generated@@395 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@83 ($generated@@317 $generated@@404) ($generated@@164 ($generated@@396 $generated@@157 $generated@@405)))) (= ($generated@@83 ($generated@@397 $generated@@404) ($generated@@164 ($generated@@396 $generated@@157 $generated@@405))) ($generated@@165 ($generated@@396 $generated@@157 $generated@@405))))))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@136 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@339 (type $generated@@409))))
(let (($generated@@411 ($generated@@338 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@78 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@337 $generated@@136 $generated@@136)) (= (type $generated@@413) $generated@@136)) (= ($generated@@0 ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@83 ($generated@@335 $generated@@412) ($generated@@164 ($generated@@396 $generated@@157 $generated@@413)))) (= ($generated@@83 ($generated@@407 $generated@@412) ($generated@@164 ($generated@@396 $generated@@157 $generated@@413))) ($generated@@165 ($generated@@396 $generated@@157 $generated@@413))))))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@320 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@319 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@83 ($generated@@317 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@83 ($generated@@397 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@83 ($generated@@317 $generated@@414) $generated@@418))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@338 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@337 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@83 ($generated@@335 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@66)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@319 $generated@@136 $generated@@136)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@317 $generated@@427) $generated@@431))) (and ($generated@@272 ($generated@@83 ($generated@@397 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@272 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@427) $generated@@431))
 :pattern ( ($generated@@83 ($generated@@317 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@76 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@337 $generated@@136 $generated@@136)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@435) $generated@@439))) (and ($generated@@272 ($generated@@83 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@272 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@76 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@144)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@144) (= (type $generated@@443) $generated@@136)) (= ($generated@@250 $generated@@442 $generated@@443) ($generated@@250 $generated@@143 $generated@@443)))
 :pattern ( ($generated@@250 ($generated@@440 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@81 (type $generated@@444))))
 (=> (and (and (= (type $generated@@444) ($generated@@78 $generated@@446 $generated@@2)) (= (type $generated@@445) ($generated@@78 $generated@@446 $generated@@2))) ($generated@@285 $generated@@444 $generated@@445)) (= $generated@@444 $generated@@445)))
 :pattern ( ($generated@@285 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@78 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@339 (type $generated@@449))))
(let (($generated@@451 ($generated@@338 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@337 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@336 $generated@@451 $generated@@450)) (= ($generated@@335 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@335 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@339 (type $generated@@452))))
(let (($generated@@454 ($generated@@338 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@337 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@336 $generated@@454 $generated@@453)) (= ($generated@@371 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@371 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@339 (type $generated@@455))))
(let (($generated@@457 ($generated@@338 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@337 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@336 $generated@@457 $generated@@456)) (= ($generated@@406 $generated@@455) ($generated@@447 $generated@@136))))))
 :pattern ( ($generated@@406 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@321 (type $generated@@458))))
(let (($generated@@460 ($generated@@320 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@319 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@318 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@136) (= (type $generated@@462) $generated@@136)) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@458) ($generated@@287 ($generated@@243 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@395 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@136) (= (type $generated@@467) $generated@@136)) ($generated@@0 ($generated@@83 ($generated@@406 $generated@@463) ($generated@@287 ($generated@@243 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@406 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@136) ($generated@@138 $generated@@468 $generated@@46)) (and (= ($generated@@287 ($generated@@396 $generated@@2 $generated@@468)) $generated@@468) ($generated@@150 ($generated@@396 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@138 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@136) ($generated@@138 $generated@@469 $generated@@47)) (and (= ($generated@@287 ($generated@@396 $generated@@3 $generated@@469)) $generated@@469) ($generated@@150 ($generated@@396 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@138 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@136) ($generated@@138 $generated@@470 $generated@@44)) (and (= ($generated@@287 ($generated@@396 $generated@@4 $generated@@470)) $generated@@470) ($generated@@150 ($generated@@396 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@138 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 21))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@136) ($generated@@138 $generated@@472 $generated@@45)) (and (= ($generated@@287 ($generated@@396 $generated@@471 $generated@@472)) $generated@@472) ($generated@@150 ($generated@@396 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@138 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@144) (= (type $generated@@474) $generated@@136)) (= ($generated@@250 ($generated@@142 $generated@@473) $generated@@474) ($generated@@250 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@250 ($generated@@142 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@66) (= ($generated@@138 ($generated@@287 $generated@@475) $generated@@476) ($generated@@150 $generated@@475 $generated@@476)))
 :pattern ( ($generated@@138 ($generated@@287 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@81 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@78 $generated@@478 $generated@@2)) (<= 0 ($generated@@313 $generated@@477))))
 :pattern ( ($generated@@313 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@299 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@298 $generated@@480)) (<= 0 ($generated@@297 $generated@@479))))
 :pattern ( ($generated@@297 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@485 ($generated@@424 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@424 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@66) (= (type $generated@@490) $generated@@66)) (= ($generated@@74 ($generated@@424 $generated@@489 $generated@@490)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@66) (= (type $generated@@498) $generated@@66)) (= ($generated@@495 ($generated@@432 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@432 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@66) (= (type $generated@@500) $generated@@66)) (= ($generated@@74 ($generated@@432 $generated@@499 $generated@@500)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@136) (= (type $generated@@502) $generated@@136)) (= ($generated@@278 ($generated@@243 $generated@@501 $generated@@502)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@156 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@156 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@156 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@156 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@136) (= (type $generated@@512) $generated@@136)) (= ($generated@@164 ($generated@@243 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@243 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@136) (= (type $generated@@514) $generated@@136)) (= ($generated@@165 ($generated@@243 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@243 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@144) (= (type $generated@@516) $generated@@136)) (= ($generated@@141 $generated@@515 $generated@@516) ($generated@@141 $generated@@143 $generated@@516)))
 :pattern ( ($generated@@141 ($generated@@440 $generated@@515) $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@299 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520 $generated@@521)) $generated@@522))
 :pattern ( ($generated@@518 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@298 $generated@@136)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@523 ($generated@@517 $generated@@524) $generated@@525) (forall (($generated@@526 Int) ) (!  (=> (and (<= 0 $generated@@526) (< $generated@@526 ($generated@@297 $generated@@523))) ($generated@@272 ($generated@@518 $generated@@523 $generated@@526) $generated@@524 $generated@@525))
 :pattern ( ($generated@@518 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@76 $generated@@523 ($generated@@517 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@527 ($generated@@77 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@77 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@529 ($generated@@260 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@260 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@74 ($generated@@260 $generated@@532)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@265 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@265 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@265 $generated@@536)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@537 ($generated@@170 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@170 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@74 ($generated@@170 $generated@@540)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@541 ($generated@@517 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@517 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@74 ($generated@@517 $generated@@544)) $generated@@57))
 :pattern ( ($generated@@517 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
(= ($generated@@396 $generated@@546 ($generated@@287 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@287 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@319 $generated@@136 $generated@@136)) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@66)) (= ($generated@@150 $generated@@547 ($generated@@424 $generated@@548 $generated@@549)) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@317 $generated@@547) $generated@@550))) (and ($generated@@138 ($generated@@83 ($generated@@397 $generated@@547) $generated@@550) $generated@@549) ($generated@@138 $generated@@550 $generated@@548)))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@547) $generated@@550))
 :pattern ( ($generated@@83 ($generated@@317 $generated@@547) $generated@@550))
))))
 :pattern ( ($generated@@150 $generated@@547 ($generated@@424 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@337 $generated@@136 $generated@@136)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@66)) (= ($generated@@150 $generated@@551 ($generated@@432 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@136) ($generated@@0 ($generated@@83 ($generated@@335 $generated@@551) $generated@@554))) (and ($generated@@138 ($generated@@83 ($generated@@407 $generated@@551) $generated@@554) $generated@@553) ($generated@@138 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@83 ($generated@@407 $generated@@551) $generated@@554))
 :pattern ( ($generated@@83 ($generated@@335 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@150 $generated@@551 ($generated@@432 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@136) (= (type $generated@@558) $generated@@136)) (< ($generated@@555 $generated@@557) ($generated@@556 ($generated@@243 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@243 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@136)) (< ($generated@@555 $generated@@560) ($generated@@556 ($generated@@243 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@243 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@144) (= (type $generated@@562) $generated@@136)) (= ($generated@@141 ($generated@@142 $generated@@561) $generated@@562) ($generated@@141 $generated@@561 $generated@@562)))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) $generated@@66)) ($generated@@138 $generated@@563 ($generated@@424 $generated@@564 $generated@@565))) (and (= ($generated@@287 ($generated@@396 ($generated@@319 $generated@@136 $generated@@136) $generated@@563)) $generated@@563) ($generated@@150 ($generated@@396 ($generated@@319 $generated@@136 $generated@@136) $generated@@563) ($generated@@424 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@138 $generated@@563 ($generated@@424 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) ($generated@@138 $generated@@566 ($generated@@432 $generated@@567 $generated@@568))) (and (= ($generated@@287 ($generated@@396 ($generated@@337 $generated@@136 $generated@@136) $generated@@566)) $generated@@566) ($generated@@150 ($generated@@396 ($generated@@337 $generated@@136 $generated@@136) $generated@@566) ($generated@@432 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@138 $generated@@566 ($generated@@432 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@66) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) $generated@@136)) ($generated@@138 $generated@@571 ($generated@@156 $generated@@569 $generated@@570))) (and (= ($generated@@287 ($generated@@396 $generated@@157 $generated@@571)) $generated@@571) ($generated@@150 ($generated@@396 $generated@@157 $generated@@571) ($generated@@156 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@138 $generated@@571 ($generated@@156 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
 (not ($generated@@0 ($generated@@83 ($generated@@447 $generated@@573) $generated@@572))))
 :pattern ( (let (($generated@@573 (type $generated@@572)))
($generated@@83 ($generated@@447 $generated@@573) $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@71)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@66) (= (type $generated@@577) $generated@@66)) (and (= ($generated@@74 ($generated@@156 $generated@@576 $generated@@577)) $generated@@62) (= ($generated@@574 ($generated@@156 $generated@@576 $generated@@577)) $generated@@64)))
 :pattern ( ($generated@@156 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@157) (= ($generated@@555 ($generated@@287 $generated@@578)) ($generated@@556 $generated@@578)))
 :pattern ( ($generated@@555 ($generated@@287 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@136) ($generated@@138 $generated@@579 ($generated@@77 0))) (and (= ($generated@@287 ($generated@@396 $generated@@2 $generated@@579)) $generated@@579) ($generated@@150 ($generated@@396 ($generated@@78 $generated@@136 $generated@@4) $generated@@579) ($generated@@77 0))))
 :pattern ( ($generated@@138 $generated@@579 ($generated@@77 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@66)) ($generated@@138 $generated@@580 ($generated@@260 $generated@@581))) (and (= ($generated@@287 ($generated@@396 ($generated@@78 $generated@@136 $generated@@4) $generated@@580)) $generated@@580) ($generated@@150 ($generated@@396 ($generated@@78 $generated@@136 $generated@@4) $generated@@580) ($generated@@260 $generated@@581))))
 :pattern ( ($generated@@138 $generated@@580 ($generated@@260 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@66)) ($generated@@138 $generated@@582 ($generated@@265 $generated@@583))) (and (= ($generated@@287 ($generated@@396 ($generated@@78 $generated@@136 $generated@@4) $generated@@582)) $generated@@582) ($generated@@150 ($generated@@396 ($generated@@78 $generated@@136 $generated@@4) $generated@@582) ($generated@@265 $generated@@583))))
 :pattern ( ($generated@@138 $generated@@582 ($generated@@265 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@66)) ($generated@@138 $generated@@584 ($generated@@170 $generated@@585))) (and (= ($generated@@287 ($generated@@396 ($generated@@78 $generated@@136 $generated@@2) $generated@@584)) $generated@@584) ($generated@@150 ($generated@@396 ($generated@@78 $generated@@136 $generated@@2) $generated@@584) ($generated@@170 $generated@@585))))
 :pattern ( ($generated@@138 $generated@@584 ($generated@@170 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@136) (= (type $generated@@587) $generated@@66)) ($generated@@138 $generated@@586 ($generated@@517 $generated@@587))) (and (= ($generated@@287 ($generated@@396 ($generated@@298 $generated@@136) $generated@@586)) $generated@@586) ($generated@@150 ($generated@@396 ($generated@@298 $generated@@136) $generated@@586) ($generated@@517 $generated@@587))))
 :pattern ( ($generated@@138 $generated@@586 ($generated@@517 $generated@@587)))
)))
(assert (= ($generated@@74 $generated@@139) $generated@@63))
(assert (= ($generated@@574 $generated@@139) $generated@@65))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@78 $generated@@136 $generated@@2)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@588 ($generated@@170 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@136) (< 0 ($generated ($generated@@83 $generated@@588 $generated@@591)))) ($generated@@272 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@83 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@76 $generated@@588 ($generated@@170 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@157) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@271 $generated@@594) (and ($generated@@155 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@66) ($generated@@76 $generated@@592 ($generated@@156 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@156 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@272 ($generated@@164 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@272 ($generated@@164 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@157) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@271 $generated@@598) (and ($generated@@155 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@66) ($generated@@76 $generated@@596 ($generated@@156 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@76 $generated@@596 ($generated@@156 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@272 ($generated@@165 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@272 ($generated@@165 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@136) (= (type $generated@@601) $generated@@136)) (= ($generated@@243 ($generated@@256 $generated@@600) ($generated@@256 $generated@@601)) ($generated@@256 ($generated@@243 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@243 ($generated@@256 $generated@@600) ($generated@@256 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@287 ($generated@@256 $generated@@602)) ($generated@@256 ($generated@@287 $generated@@602)))
 :pattern ( ($generated@@287 ($generated@@256 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@299 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@298 $generated@@604)) (= ($generated@@297 $generated@@603) 0)) (= $generated@@603 ($generated@@296 $generated@@604))))
 :pattern ( ($generated@@297 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@78 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@313 ($generated@@84 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@313 $generated@@605) ($generated ($generated@@83 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@313 ($generated@@84 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert  (=> (<= 2 $generated@@134) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@136) (or ($generated@@153 $generated@@609) (and (not (= 2 $generated@@134)) ($generated@@138 $generated@@609 $generated@@139)))) (and ($generated@@251 $generated@@609) (= ($generated@@152 $generated@@609) ($generated@@250 ($generated@@142 $generated@@143) $generated@@609))))
 :pattern ( ($generated@@152 $generated@@609))
))))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@611) $generated@@2)) ($generated@@76 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@76 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) $generated@@3)) ($generated@@76 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@76 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@4)) ($generated@@76 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) $generated@@471)) ($generated@@76 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@76 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) $generated@@136)) ($generated@@76 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@76 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@298 $generated@@136)) (= (type $generated@@621) $generated@@66)) (= ($generated@@150 $generated@@620 ($generated@@517 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@297 $generated@@620))) ($generated@@138 ($generated@@518 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@518 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@150 $generated@@620 ($generated@@517 $generated@@621)))
)))
(assert  (=> (<= 3 $generated@@134) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@136) (or ($generated@@284 $generated@@623) (and (not (= 3 $generated@@134)) (and ($generated@@138 $generated@@623 $generated@@139) (and ($generated@@152 $generated@@623) (not ($generated@@285 ($generated@@135 $generated@@623) ($generated@@286 $generated@@136)))))))) (and ($generated@@305 $generated@@623) (= ($generated@@283 $generated@@623) ($generated@@304 $generated@@623))))
 :pattern ( ($generated@@283 $generated@@623))
))))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@298 $generated@@136)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@297 $generated@@625))) (< ($generated@@556 ($generated@@396 $generated@@157 ($generated@@518 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@556 ($generated@@396 $generated@@157 ($generated@@518 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@319 $generated@@136 $generated@@136)) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) $generated@@66)) ($generated@@150 $generated@@627 ($generated@@424 $generated@@628 $generated@@629))) (and (and ($generated@@150 ($generated@@317 $generated@@627) ($generated@@260 $generated@@628)) ($generated@@150 ($generated@@360 $generated@@627) ($generated@@260 $generated@@629))) ($generated@@150 ($generated@@395 $generated@@627) ($generated@@260 ($generated@@156 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@150 $generated@@627 ($generated@@424 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@337 $generated@@136 $generated@@136)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@66)) ($generated@@150 $generated@@630 ($generated@@432 $generated@@631 $generated@@632))) (and (and ($generated@@150 ($generated@@335 $generated@@630) ($generated@@265 $generated@@631)) ($generated@@150 ($generated@@371 $generated@@630) ($generated@@265 $generated@@632))) ($generated@@150 ($generated@@406 $generated@@630) ($generated@@265 ($generated@@156 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@150 $generated@@630 ($generated@@432 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@150 $generated@@633 $generated@@46))
 :pattern ( ($generated@@150 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@150 $generated@@634 $generated@@47))
 :pattern ( ($generated@@150 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@150 $generated@@635 $generated@@44))
 :pattern ( ($generated@@150 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@471) ($generated@@150 $generated@@636 $generated@@45))
 :pattern ( ($generated@@150 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@136) ($generated@@150 $generated@@637 $generated@@48))
 :pattern ( ($generated@@150 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(declare-fun $generated@@647 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@638) $generated@@136) (= (type $generated@@643) ($generated@@177 $generated@@79 $generated@@4))) (= (type $generated@@644) $generated@@79)) (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@645) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@647) ($generated@@177 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@648 true))
(let (($generated@@649 true))
(let (($generated@@650  (=> (and (>= 0 ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@639))))) (= (ControlFlow 0 12) 8)) $generated@@649)))
(let (($generated@@651  (=> (and (> ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@639)))) 0) (= (ControlFlow 0 11) 8)) $generated@@649)))
(let (($generated@@652  (=> (and ($generated@@272 $generated@@638 $generated@@139 $generated@@640) ($generated@@137 $generated@@638)) (and (=> (= (ControlFlow 0 13) 11) $generated@@651) (=> (= (ControlFlow 0 13) 12) $generated@@650)))))
(let (($generated@@653  (=> (> ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@641)))) 0) (and (=> (= (ControlFlow 0 14) 13) $generated@@652) (=> (= (ControlFlow 0 14) 10) $generated@@648)))))
(let (($generated@@654  (=> (and (>= 0 ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@641))))) (= (ControlFlow 0 9) 8)) $generated@@649)))
(let (($generated@@655  (=> ($generated@@272 $generated@@638 $generated@@139 $generated@@640) (and (=> (= (ControlFlow 0 15) (- 0 18)) (=> ($generated@@153 $generated@@638) (or ($generated@@152 $generated@@638) ($generated@@250 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638)))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (not ($generated@@285 ($generated@@135 $generated@@638) ($generated@@286 $generated@@136)))) (=> (and ($generated@@152 $generated@@638) (not ($generated@@285 ($generated@@135 $generated@@638) ($generated@@286 $generated@@136)))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= $generated@@638 $generated@@638)) (=> (= $generated@@638 $generated@@638) (=> (or (= $generated@@638 $generated@@638) ($generated@@284 $generated@@638)) (=> (and (= $generated@@642 ($generated@@283 $generated@@638)) ($generated@@284 $generated@@638)) (=> (and (and ($generated@@150 ($generated@@8 $generated@@642) $generated@@46) (= $generated@@641 $generated@@642)) (and ($generated@@272 $generated@@638 $generated@@139 $generated@@640) ($generated@@137 $generated@@638))) (and (=> (= (ControlFlow 0 15) 14) $generated@@653) (=> (= (ControlFlow 0 15) 9) $generated@@654)))))))))))))
(let (($generated@@656  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@657 ($generated@@283 $generated@@638)))
(> ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@657)))) 0))) (=> (let (($generated@@658 ($generated@@283 $generated@@638)))
(> ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@658)))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@659 ($generated@@283 $generated@@638)))
(forall (($generated@@660 Int) ) (!  (=> true (=> (> ($generated ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@660)))) 0) (<= $generated@@659 $generated@@660)))
 :pattern ( ($generated@@83 ($generated@@135 $generated@@638) ($generated@@287 ($generated@@8 $generated@@660))))
))))))))
(let (($generated@@661  (=> (= $generated@@643 ($generated@@231 $generated@@644 $generated@@640 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@250 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638)) (=> ($generated@@250 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@285 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638) ($generated@@286 $generated@@136)))) (=> (not ($generated@@285 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638) ($generated@@286 $generated@@136))) (=> (and (and (and ($generated@@271 $generated@@645) ($generated@@646 $generated@@645)) (and ($generated@@305 $generated@@638) (let (($generated@@662 ($generated@@304 $generated@@638)))
 (and ($generated@@140 $generated@@638) (=> (> ($generated ($generated@@83 ($generated@@141 ($generated@@142 $generated@@143) $generated@@638) ($generated@@287 ($generated@@8 $generated@@662)))) 0) ($generated@@140 $generated@@638)))))) (and (and (let (($generated@@663 ($generated@@304 $generated@@638)))
(> ($generated ($generated@@83 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638) ($generated@@287 ($generated@@8 $generated@@663)))) 0)) (let (($generated@@664 ($generated@@304 $generated@@638)))
(forall (($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@665) $generated@@2) true) (> ($generated ($generated@@83 ($generated@@141 ($generated@@142 $generated@@143) $generated@@638) ($generated@@287 $generated@@665))) 0)) (<= $generated@@664 ($generated $generated@@665)))
 :pattern ( ($generated@@83 ($generated@@141 ($generated@@142 $generated@@143) $generated@@638) ($generated@@287 $generated@@665)))
)))) (and (= $generated@@640 $generated@@645) ($generated@@272 $generated@@638 $generated@@139 $generated@@645)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@285 ($generated@@141 ($generated@@142 ($generated@@142 $generated@@143)) $generated@@638) ($generated@@286 $generated@@136)))) (=> (and (not ($generated@@285 ($generated@@141 ($generated@@142 $generated@@143) $generated@@638) ($generated@@286 $generated@@136))) ($generated@@305 $generated@@638)) (=> (and (and (= ($generated@@283 $generated@@638) ($generated@@304 $generated@@638)) ($generated@@305 $generated@@638)) (and ($generated@@150 ($generated@@8 ($generated@@283 $generated@@638)) $generated@@46) (= (ControlFlow 0 4) 2))) $generated@@656)))))))))))
(let (($generated@@666  (=> (= $generated@@647 ($generated@@176 $generated@@644 $generated@@640 $generated@@60 false)) (=> (and ($generated@@272 $generated@@638 $generated@@139 $generated@@640) ($generated@@153 $generated@@638)) (=> (and (and ($generated@@152 $generated@@638) ($generated@@272 $generated@@638 $generated@@139 $generated@@640)) (and ($generated@@137 $generated@@638) (not ($generated@@285 ($generated@@135 $generated@@638) ($generated@@286 $generated@@136))))) (and (=> (= (ControlFlow 0 19) 15) $generated@@655) (=> (= (ControlFlow 0 19) 4) $generated@@661)))))))
(let (($generated@@667  (=> (and (and (and ($generated@@271 $generated@@640) ($generated@@646 $generated@@640)) ($generated@@138 $generated@@638 $generated@@139)) (and (= 3 $generated@@134) (= (ControlFlow 0 20) 19))) $generated@@666)))
$generated@@667)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (Int) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert  (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@88 $generated@@89)) 12))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@84 ($generated@@83 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@83 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@85 ($generated@@83 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@83 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@85 (type $generated@@94))))
(= (type ($generated@@86 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@86 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@87 $generated@@97 $generated@@98 $generated@@99)) ($generated@@83 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@85 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@86 ($generated@@87 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@86 ($generated@@87 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@86 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@86 $generated@@111 $generated@@113)))
 :weight 0
)))) (forall (($generated@@114 T@U) ) (! (= (type ($generated@@76 $generated@@114)) ($generated@@83 $generated@@77 $generated@@2))
 :pattern ( ($generated@@76 $generated@@114))
))) (= (type $generated@@80) $generated@@67)) (forall (($generated@@115 T@U) ) (! (= (type ($generated@@82 $generated@@115)) ($generated@@83 $generated@@77 $generated@@2))
 :pattern ( ($generated@@82 $generated@@115))
))))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@116 T@U) ) (!  (=> (and (= (type $generated@@116) $generated@@77) (or ($generated@@78 $generated@@116) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@116 $generated@@80)))) (and ($generated@@81 $generated@@116) (= ($generated@@76 $generated@@116) ($generated@@82 $generated@@116))))
 :pattern ( ($generated@@76 $generated@@116))
))))
(assert (forall (($generated@@118 T@U) ) (! (= (type ($generated@@117 $generated@@118)) $generated@@68)
 :pattern ( ($generated@@117 $generated@@118))
)))
(assert (= ($generated@@117 $generated@@44) $generated@@49))
(assert (= ($generated@@117 $generated@@45) $generated@@50))
(assert (= ($generated@@117 $generated@@46) $generated@@51))
(assert (= ($generated@@117 $generated@@47) $generated@@52))
(assert (= ($generated@@117 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@121) 13) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@70 (type $generated@@126))))
(= (type ($generated@@123 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@123 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@122) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@124 $generated@@128 $generated@@129 $generated@@130)) $generated@@122)
 :pattern ( ($generated@@124 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@70 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@123 ($generated@@124 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@123 ($generated@@124 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@123 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@123 ($generated@@124 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@123 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@120 $generated@@143)) $generated@@67)
 :pattern ( ($generated@@120 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@83 $generated@@121 $generated@@122))) ($generated@@119 $generated@@144 ($generated@@120 0) $generated@@145))
 :pattern ( ($generated@@119 $generated@@144 ($generated@@120 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@120 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@120 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@67)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) $generated@@67)) (= (type $generated@@155) $generated@@150)) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@77)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@77)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@167) $generated@@67)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@121 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@70 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@121) (= (type $generated@@218) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@219) ($generated@@69 $generated@@4))) (= (type $generated@@221) $generated@@121)) (= (type $generated@@222) ($generated@@69 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@123 ($generated@@86 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@121 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@70 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@121) (= (type $generated@@230) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@231) ($generated@@69 $generated@@4))) (= (type $generated@@233) $generated@@121)) (= (type $generated@@234) ($generated@@69 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@123 ($generated@@86 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (= (type $generated@@237) $generated@@67))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@236 $generated@@238 $generated@@80 $generated@@239) ($generated@@236 $generated@@238 $generated@@237 $generated@@239)))
 :pattern ( ($generated@@236 $generated@@238 $generated@@80 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@240 $generated@@241 $generated@@242)) $generated@@150)
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@77)) (= (type $generated@@246) $generated@@77)) (= ($generated@@146 ($generated@@240 $generated@@245 $generated@@246) ($generated@@149 $generated@@243 $generated@@244))  (and ($generated@@79 $generated@@245 $generated@@243) ($generated@@79 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@146 ($generated@@240 $generated@@245 $generated@@246) ($generated@@149 $generated@@243 $generated@@244)))
)))
(assert  (=> true (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@77) (or ($generated@@248 $generated@@249) ($generated@@79 $generated@@249 $generated@@237))) true)
 :pattern ( ($generated@@247 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@150) (= (type $generated@@251) $generated@@150)) (= ($generated@@156 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@156 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@146 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@77) ($generated@@0 ($generated@@86 $generated@@254 $generated@@256))) ($generated@@79 $generated@@256 $generated@@255))
 :pattern ( ($generated@@86 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@146 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@67)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@260) $generated@@67)) (= ($generated@@146 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@77) ($generated@@0 ($generated@@86 $generated@@259 $generated@@261))) ($generated@@79 $generated@@261 $generated@@260))
 :pattern ( ($generated@@86 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@146 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (! (let (($generated@@264 (type $generated@@263)))
(= (type ($generated@@262 $generated@@263)) $generated@@264))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@262 $generated@@265) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
)))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@77) (or ($generated@@78 ($generated@@262 $generated@@266)) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@266 $generated@@80)))) (and ($generated@@81 ($generated@@262 $generated@@266)) (= ($generated@@76 ($generated@@262 $generated@@266)) ($generated@@82 ($generated@@262 $generated@@266)))))
 :weight 3
 :pattern ( ($generated@@76 ($generated@@262 $generated@@266)))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@67) (= (type $generated@@269) $generated@@67)) (= (type $generated@@270) $generated@@77)) (= (type $generated@@271) $generated@@77)) (= (type $generated@@272) ($generated@@83 $generated@@121 $generated@@122))) ($generated@@267 $generated@@272)) (= ($generated@@119 ($generated@@240 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@236 $generated@@270 $generated@@268 $generated@@272) ($generated@@236 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@119 ($generated@@240 $generated@@270 $generated@@271) ($generated@@149 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@71)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@150) (= ($generated@@148 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@75) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@77) (or ($generated@@78 $generated@@276) (and (not (= 2 $generated@@75)) ($generated@@79 $generated@@276 $generated@@80)))) ($generated@@146 ($generated@@76 $generated@@276) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@76 $generated@@276))
))))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@280 $generated@@283)) ($generated@@83 $generated@@283 $generated@@2))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@77) (or ($generated@@278 $generated@@284) (and (not (= 3 $generated@@75)) (and ($generated@@79 $generated@@284 $generated@@80) (not ($generated@@279 ($generated@@76 $generated@@284) ($generated@@280 $generated@@77))))))) (and ($generated@@281 $generated@@284) (= ($generated@@277 $generated@@284) ($generated@@282 $generated@@284))))
 :pattern ( ($generated@@277 $generated@@284))
))))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@150) ($generated@@148 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@77) (= (type $generated@@287) $generated@@77)) (= $generated@@285 ($generated@@240 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@148 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 17)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@77)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@67) (= (type $generated@@300) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@236 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@119 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@236 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@84 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@83 $generated@@303 $generated@@2)) (and (= (= ($generated@@301 $generated@@302) 0) (= $generated@@302 ($generated@@280 $generated@@303))) (=> (not (= ($generated@@301 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@86 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert  (=> true (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@77) (or ($generated@@81 $generated@@305) ($generated@@79 $generated@@305 $generated@@237))) ($generated@@146 ($generated@@82 $generated@@305) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@82 $generated@@305))
))))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@83 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@86 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@83 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@86 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (=> true (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@77) (or ($generated@@281 $generated@@342) (and ($generated@@79 $generated@@342 $generated@@237) (and ($generated@@247 $generated@@342) (not ($generated@@279 ($generated@@82 $generated@@342) ($generated@@280 $generated@@77))))))) (let (($generated@@343 ($generated@@282 $generated@@342)))
 (and (> ($generated ($generated@@86 ($generated@@82 $generated@@342) ($generated@@296 ($generated@@8 $generated@@343)))) 0) (forall (($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@2) true) (> ($generated ($generated@@86 ($generated@@82 $generated@@342) ($generated@@296 $generated@@344))) 0)) (<= $generated@@343 ($generated $generated@@344)))
 :pattern ( ($generated@@86 ($generated@@82 $generated@@342) ($generated@@296 $generated@@344)))
)))))
 :pattern ( ($generated@@282 $generated@@342))
))))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@84 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@83 $generated@@346 $generated@@2)) (= ($generated@@164 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@86 $generated@@345 $generated@@347))) (<= ($generated ($generated@@86 $generated@@345 $generated@@347)) ($generated@@301 $generated@@345))))
 :pattern ( ($generated@@86 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@164 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@310 (type $generated@@348))))
(let (($generated@@350 ($generated@@309 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@308 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@307 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@306 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@83 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@310 (type $generated@@355))))
(let (($generated@@357 ($generated@@309 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@308 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@307 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@86 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@328 (type $generated@@359))))
(let (($generated@@361 ($generated@@327 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@326 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@325 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@324 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@328 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@83 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@328 (type $generated@@366))))
(let (($generated@@368 ($generated@@327 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@326 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@325 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@86 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@371) $generated@@67)) (= ($generated@@146 $generated@@370 ($generated@@163 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@77) (< 0 ($generated ($generated@@86 $generated@@370 $generated@@372)))) ($generated@@79 $generated@@372 $generated@@371))
 :pattern ( ($generated@@86 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@146 $generated@@370 ($generated@@163 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@84 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@83 $generated@@375 $generated@@2)) (= (type $generated@@374) ($generated@@83 $generated@@375 $generated@@2))) (= ($generated@@279 $generated@@373 $generated@@374) (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@375) (= ($generated ($generated@@86 $generated@@373 $generated@@376)) ($generated ($generated@@86 $generated@@374 $generated@@376))))
 :pattern ( ($generated@@86 $generated@@373 $generated@@376))
 :pattern ( ($generated@@86 $generated@@374 $generated@@376))
)))))
 :pattern ( ($generated@@279 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@377 ($generated@@252 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@77) ($generated@@0 ($generated@@86 $generated@@377 $generated@@380))) ($generated@@236 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@86 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@119 $generated@@377 ($generated@@252 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@83 $generated@@77 $generated@@4)) (= (type $generated@@382) $generated@@67)) (= (type $generated@@383) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@381 ($generated@@257 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@77) ($generated@@0 ($generated@@86 $generated@@381 $generated@@384))) ($generated@@236 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@86 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@119 $generated@@381 ($generated@@257 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@86 ($generated@@280 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@86 ($generated@@280 $generated@@386) $generated@@385)))
)))
(assert  (and (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@387 $generated@@390)) ($generated@@83 $generated@@77 $generated@@4))
 :pattern ( ($generated@@387 $generated@@390))
)) (forall (($generated@@391 T@T) ($generated@@392 T@U) ) (! (= (type ($generated@@388 $generated@@391 $generated@@392)) $generated@@391)
 :pattern ( ($generated@@388 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@310 (type $generated@@393))))
(let (($generated@@395 ($generated@@309 (type $generated@@393))))
(= (type ($generated@@389 $generated@@393)) ($generated@@83 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@389 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@308 $generated@@77 $generated@@77)) (= (type $generated@@397) $generated@@77)) (= ($generated@@0 ($generated@@86 ($generated@@387 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@396) ($generated@@157 ($generated@@388 $generated@@150 $generated@@397)))) (= ($generated@@86 ($generated@@389 $generated@@396) ($generated@@157 ($generated@@388 $generated@@150 $generated@@397))) ($generated@@158 ($generated@@388 $generated@@150 $generated@@397))))))
 :pattern ( ($generated@@86 ($generated@@387 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@83 $generated@@77 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@328 (type $generated@@401))))
(let (($generated@@403 ($generated@@327 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@83 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@326 $generated@@77 $generated@@77)) (= (type $generated@@405) $generated@@77)) (= ($generated@@0 ($generated@@86 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@404) ($generated@@157 ($generated@@388 $generated@@150 $generated@@405)))) (= ($generated@@86 ($generated@@399 $generated@@404) ($generated@@157 ($generated@@388 $generated@@150 $generated@@405))) ($generated@@158 ($generated@@388 $generated@@150 $generated@@405))))))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@309 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@308 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@86 ($generated@@352 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@86 ($generated@@306 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@86 ($generated@@389 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@406) $generated@@410))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@86 ($generated@@352 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@327 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@326 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@86 ($generated@@363 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@86 ($generated@@324 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@86 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@411) $generated@@415))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@86 ($generated@@363 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@67)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@308 $generated@@77 $generated@@77)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@419) $generated@@423))) (and ($generated@@236 ($generated@@86 ($generated@@389 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@236 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@419) $generated@@423))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@119 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@67)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@326 $generated@@77 $generated@@77)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@427) $generated@@431))) (and ($generated@@236 ($generated@@86 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@236 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@119 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@84 (type $generated@@432))))
 (=> (and (and (= (type $generated@@432) ($generated@@83 $generated@@434 $generated@@2)) (= (type $generated@@433) ($generated@@83 $generated@@434 $generated@@2))) ($generated@@279 $generated@@432 $generated@@433)) (= $generated@@432 $generated@@433)))
 :pattern ( ($generated@@279 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@436 T@T) ) (! (= (type ($generated@@435 $generated@@436)) ($generated@@83 $generated@@436 $generated@@4))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@328 (type $generated@@437))))
(let (($generated@@439 ($generated@@327 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@326 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@325 $generated@@439 $generated@@438)) (= ($generated@@324 $generated@@437) ($generated@@435 $generated@@439))))))
 :pattern ( ($generated@@324 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@328 (type $generated@@440))))
(let (($generated@@442 ($generated@@327 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@326 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@325 $generated@@442 $generated@@441)) (= ($generated@@363 $generated@@440) ($generated@@435 $generated@@441))))))
 :pattern ( ($generated@@363 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@328 (type $generated@@443))))
(let (($generated@@445 ($generated@@327 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@326 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@325 $generated@@445 $generated@@444)) (= ($generated@@398 $generated@@443) ($generated@@435 $generated@@77))))))
 :pattern ( ($generated@@398 $generated@@443))
)))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@77) (or ($generated@@278 ($generated@@262 $generated@@446)) (and (not (= 3 $generated@@75)) (and ($generated@@79 $generated@@446 $generated@@80) (not ($generated@@279 ($generated@@76 ($generated@@262 $generated@@446)) ($generated@@280 $generated@@77))))))) (and ($generated@@281 ($generated@@262 $generated@@446)) (= ($generated@@277 ($generated@@262 $generated@@446)) ($generated@@282 ($generated@@262 $generated@@446)))))
 :weight 3
 :pattern ( ($generated@@277 ($generated@@262 $generated@@446)))
))))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@310 (type $generated@@447))))
(let (($generated@@449 ($generated@@309 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@308 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@307 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@77) (= (type $generated@@451) $generated@@77)) ($generated@@0 ($generated@@86 ($generated@@387 $generated@@447) ($generated@@296 ($generated@@240 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@387 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@328 (type $generated@@452))))
(let (($generated@@454 ($generated@@327 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@326 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@325 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@77) (= (type $generated@@456) $generated@@77)) ($generated@@0 ($generated@@86 ($generated@@398 $generated@@452) ($generated@@296 ($generated@@240 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@398 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@77) ($generated@@79 $generated@@457 $generated@@46)) (and (= ($generated@@296 ($generated@@388 $generated@@2 $generated@@457)) $generated@@457) ($generated@@146 ($generated@@388 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@77) ($generated@@79 $generated@@458 $generated@@47)) (and (= ($generated@@296 ($generated@@388 $generated@@3 $generated@@458)) $generated@@458) ($generated@@146 ($generated@@388 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@77) ($generated@@79 $generated@@459 $generated@@44)) (and (= ($generated@@296 ($generated@@388 $generated@@4 $generated@@459)) $generated@@459) ($generated@@146 ($generated@@388 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@77) ($generated@@79 $generated@@461 $generated@@45)) (and (= ($generated@@296 ($generated@@388 $generated@@460 $generated@@461)) $generated@@461) ($generated@@146 ($generated@@388 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@67) (= ($generated@@79 ($generated@@296 $generated@@462) $generated@@463) ($generated@@146 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@79 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert  (=> (<= 3 $generated@@75) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@77) (or ($generated@@278 $generated@@464) (and (not (= 3 $generated@@75)) (and ($generated@@79 $generated@@464 $generated@@80) (not ($generated@@279 ($generated@@76 $generated@@464) ($generated@@280 $generated@@77))))))) (let (($generated@@465 ($generated@@277 $generated@@464)))
 (and (> ($generated ($generated@@86 ($generated@@76 $generated@@464) ($generated@@296 ($generated@@8 $generated@@465)))) 0) (forall (($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@466) $generated@@2) true) (> ($generated ($generated@@86 ($generated@@76 $generated@@464) ($generated@@296 $generated@@466))) 0)) (<= $generated@@465 ($generated $generated@@466)))
 :pattern ( ($generated@@86 ($generated@@76 $generated@@464) ($generated@@296 $generated@@466)))
)))))
 :pattern ( ($generated@@277 $generated@@464))
))))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@84 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@83 $generated@@468 $generated@@2)) (<= 0 ($generated@@301 $generated@@467))))
 :pattern ( ($generated@@301 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@291 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@290 $generated@@470)) (<= 0 ($generated@@289 $generated@@469))))
 :pattern ( ($generated@@289 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@416 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@416 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@416 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@117 ($generated@@416 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@67) (= (type $generated@@484) $generated@@67)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@485 ($generated@@424 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@424 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@117 ($generated@@424 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@77) (= (type $generated@@492) $generated@@77)) (= ($generated@@273 ($generated@@240 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@67) (= (type $generated@@496) $generated@@67)) (= ($generated@@493 ($generated@@149 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@149 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@67) (= (type $generated@@500) $generated@@67)) (= ($generated@@497 ($generated@@149 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@149 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@77) (= (type $generated@@502) $generated@@77)) (= ($generated@@157 ($generated@@240 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@240 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@77) (= (type $generated@@504) $generated@@77)) (= ($generated@@158 ($generated@@240 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@240 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@291 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@290 $generated@@77)) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@289 $generated@@511))) ($generated@@236 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@119 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@120 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@120 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@517 ($generated@@252 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@252 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@117 ($generated@@252 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@257 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@257 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@117 ($generated@@257 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@67)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@525 ($generated@@163 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@163 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@117 ($generated@@163 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@67)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@529 ($generated@@505 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@505 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@67) (= ($generated@@117 ($generated@@505 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@388 $generated@@534 ($generated@@296 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@296 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@308 $generated@@77 $generated@@77)) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) (= ($generated@@146 $generated@@535 ($generated@@416 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@306 $generated@@535) $generated@@538))) (and ($generated@@79 ($generated@@86 ($generated@@389 $generated@@535) $generated@@538) $generated@@537) ($generated@@79 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@535) $generated@@538))
 :pattern ( ($generated@@86 ($generated@@306 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@146 $generated@@535 ($generated@@416 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@326 $generated@@77 $generated@@77)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@67)) (= ($generated@@146 $generated@@539 ($generated@@424 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@77) ($generated@@0 ($generated@@86 ($generated@@324 $generated@@539) $generated@@542))) (and ($generated@@79 ($generated@@86 ($generated@@399 $generated@@539) $generated@@542) $generated@@541) ($generated@@79 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@539) $generated@@542))
 :pattern ( ($generated@@86 ($generated@@324 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@146 $generated@@539 ($generated@@424 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@77) (= (type $generated@@546) $generated@@77)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@240 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@240 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@77) (= (type $generated@@548) $generated@@77)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@240 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@240 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@77) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) $generated@@67)) ($generated@@79 $generated@@549 ($generated@@416 $generated@@550 $generated@@551))) (and (= ($generated@@296 ($generated@@388 ($generated@@308 $generated@@77 $generated@@77) $generated@@549)) $generated@@549) ($generated@@146 ($generated@@388 ($generated@@308 $generated@@77 $generated@@77) $generated@@549) ($generated@@416 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@79 $generated@@549 ($generated@@416 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@77) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) ($generated@@79 $generated@@552 ($generated@@424 $generated@@553 $generated@@554))) (and (= ($generated@@296 ($generated@@388 ($generated@@326 $generated@@77 $generated@@77) $generated@@552)) $generated@@552) ($generated@@146 ($generated@@388 ($generated@@326 $generated@@77 $generated@@77) $generated@@552) ($generated@@424 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@79 $generated@@552 ($generated@@424 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@67) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) $generated@@77)) ($generated@@79 $generated@@557 ($generated@@149 $generated@@555 $generated@@556))) (and (= ($generated@@296 ($generated@@388 $generated@@150 $generated@@557)) $generated@@557) ($generated@@146 ($generated@@388 $generated@@150 $generated@@557) ($generated@@149 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@79 $generated@@557 ($generated@@149 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@86 ($generated@@435 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@86 ($generated@@435 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@72)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@67) (= (type $generated@@563) $generated@@67)) (and (= ($generated@@117 ($generated@@149 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@149 $generated@@562 $generated@@563)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@150) (= ($generated@@543 ($generated@@296 $generated@@564)) ($generated@@544 $generated@@564)))
 :pattern ( ($generated@@543 ($generated@@296 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@77) ($generated@@79 $generated@@565 ($generated@@120 0))) (and (= ($generated@@296 ($generated@@388 $generated@@2 $generated@@565)) $generated@@565) ($generated@@146 ($generated@@388 ($generated@@83 $generated@@77 $generated@@4) $generated@@565) ($generated@@120 0))))
 :pattern ( ($generated@@79 $generated@@565 ($generated@@120 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@77) (= (type $generated@@567) $generated@@67)) ($generated@@79 $generated@@566 ($generated@@252 $generated@@567))) (and (= ($generated@@296 ($generated@@388 ($generated@@83 $generated@@77 $generated@@4) $generated@@566)) $generated@@566) ($generated@@146 ($generated@@388 ($generated@@83 $generated@@77 $generated@@4) $generated@@566) ($generated@@252 $generated@@567))))
 :pattern ( ($generated@@79 $generated@@566 ($generated@@252 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@77) (= (type $generated@@569) $generated@@67)) ($generated@@79 $generated@@568 ($generated@@257 $generated@@569))) (and (= ($generated@@296 ($generated@@388 ($generated@@83 $generated@@77 $generated@@4) $generated@@568)) $generated@@568) ($generated@@146 ($generated@@388 ($generated@@83 $generated@@77 $generated@@4) $generated@@568) ($generated@@257 $generated@@569))))
 :pattern ( ($generated@@79 $generated@@568 ($generated@@257 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@77) (= (type $generated@@571) $generated@@67)) ($generated@@79 $generated@@570 ($generated@@163 $generated@@571))) (and (= ($generated@@296 ($generated@@388 ($generated@@83 $generated@@77 $generated@@2) $generated@@570)) $generated@@570) ($generated@@146 ($generated@@388 ($generated@@83 $generated@@77 $generated@@2) $generated@@570) ($generated@@163 $generated@@571))))
 :pattern ( ($generated@@79 $generated@@570 ($generated@@163 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@77) (= (type $generated@@573) $generated@@67)) ($generated@@79 $generated@@572 ($generated@@505 $generated@@573))) (and (= ($generated@@296 ($generated@@388 ($generated@@290 $generated@@77) $generated@@572)) $generated@@572) ($generated@@146 ($generated@@388 ($generated@@290 $generated@@77) $generated@@572) ($generated@@505 $generated@@573))))
 :pattern ( ($generated@@79 $generated@@572 ($generated@@505 $generated@@573)))
)))
(assert (= ($generated@@117 $generated@@237) $generated@@63))
(assert (= ($generated@@560 $generated@@237) $generated@@66))
(assert (= ($generated@@117 $generated@@80) $generated@@64))
(assert (= ($generated@@560 $generated@@80) $generated@@66))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@83 $generated@@77 $generated@@2)) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) ($generated@@83 $generated@@121 $generated@@122))) (= ($generated@@119 $generated@@574 ($generated@@163 $generated@@575) $generated@@576) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@77) (< 0 ($generated ($generated@@86 $generated@@574 $generated@@577)))) ($generated@@236 $generated@@577 $generated@@575 $generated@@576))
 :pattern ( ($generated@@86 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@119 $generated@@574 ($generated@@163 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@150) (= (type $generated@@579) $generated@@67)) (= (type $generated@@580) ($generated@@83 $generated@@121 $generated@@122))) (and ($generated@@267 $generated@@580) (and ($generated@@148 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@67) ($generated@@119 $generated@@578 ($generated@@149 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@119 $generated@@578 ($generated@@149 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@236 ($generated@@157 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@236 ($generated@@157 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@150) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@83 $generated@@121 $generated@@122))) (and ($generated@@267 $generated@@584) (and ($generated@@148 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@67) ($generated@@119 $generated@@582 ($generated@@149 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@119 $generated@@582 ($generated@@149 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@236 ($generated@@158 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@236 ($generated@@158 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@77) (= (type $generated@@587) $generated@@77)) (= ($generated@@240 ($generated@@262 $generated@@586) ($generated@@262 $generated@@587)) ($generated@@262 ($generated@@240 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@240 ($generated@@262 $generated@@586) ($generated@@262 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@77) (= ($generated@@79 $generated@@588 $generated@@80)  (and ($generated@@79 $generated@@588 $generated@@237) ($generated@@247 $generated@@588))))
 :pattern ( ($generated@@79 $generated@@588 $generated@@80))
)))
(assert (forall (($generated@@589 T@U) ) (! (= ($generated@@296 ($generated@@262 $generated@@589)) ($generated@@262 ($generated@@296 $generated@@589)))
 :pattern ( ($generated@@296 ($generated@@262 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@291 (type $generated@@590))))
 (=> (and (= (type $generated@@590) ($generated@@290 $generated@@591)) (= ($generated@@289 $generated@@590) 0)) (= $generated@@590 ($generated@@288 $generated@@591))))
 :pattern ( ($generated@@289 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@593)))
 (=> (and (and (= (type $generated@@592) ($generated@@83 $generated@@595 $generated@@2)) (= (type $generated@@594) $generated@@2)) (<= 0 ($generated $generated@@594))) (= ($generated@@301 ($generated@@87 $generated@@592 $generated@@593 $generated@@594)) (+ (- ($generated@@301 $generated@@592) ($generated ($generated@@86 $generated@@592 $generated@@593))) ($generated $generated@@594)))))
 :pattern ( ($generated@@301 ($generated@@87 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@597) $generated@@2)) ($generated@@119 $generated@@597 $generated@@46 $generated@@596))
 :pattern ( ($generated@@119 $generated@@597 $generated@@46 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@599) $generated@@3)) ($generated@@119 $generated@@599 $generated@@47 $generated@@598))
 :pattern ( ($generated@@119 $generated@@599 $generated@@47 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@601) $generated@@4)) ($generated@@119 $generated@@601 $generated@@44 $generated@@600))
 :pattern ( ($generated@@119 $generated@@601 $generated@@44 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@603) $generated@@460)) ($generated@@119 $generated@@603 $generated@@45 $generated@@602))
 :pattern ( ($generated@@119 $generated@@603 $generated@@45 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@83 $generated@@121 $generated@@122)) (= (type $generated@@605) $generated@@77)) ($generated@@119 $generated@@605 $generated@@48 $generated@@604))
 :pattern ( ($generated@@119 $generated@@605 $generated@@48 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@290 $generated@@77)) (= (type $generated@@607) $generated@@67)) (= ($generated@@146 $generated@@606 ($generated@@505 $generated@@607)) (forall (($generated@@608 Int) ) (!  (=> (and (<= 0 $generated@@608) (< $generated@@608 ($generated@@289 $generated@@606))) ($generated@@79 ($generated@@506 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@506 $generated@@606 $generated@@608))
))))
 :pattern ( ($generated@@146 $generated@@606 ($generated@@505 $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (= (type $generated@@610) ($generated@@290 $generated@@77)) (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@289 $generated@@610))) (< ($generated@@544 ($generated@@388 $generated@@150 ($generated@@506 $generated@@610 $generated@@611))) ($generated@@609 $generated@@610))))
 :pattern ( ($generated@@544 ($generated@@388 $generated@@150 ($generated@@506 $generated@@610 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) ($generated@@308 $generated@@77 $generated@@77)) (= (type $generated@@613) $generated@@67)) (= (type $generated@@614) $generated@@67)) ($generated@@146 $generated@@612 ($generated@@416 $generated@@613 $generated@@614))) (and (and ($generated@@146 ($generated@@306 $generated@@612) ($generated@@252 $generated@@613)) ($generated@@146 ($generated@@352 $generated@@612) ($generated@@252 $generated@@614))) ($generated@@146 ($generated@@387 $generated@@612) ($generated@@252 ($generated@@149 $generated@@613 $generated@@614)))))
 :pattern ( ($generated@@146 $generated@@612 ($generated@@416 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@326 $generated@@77 $generated@@77)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@146 $generated@@615 ($generated@@424 $generated@@616 $generated@@617))) (and (and ($generated@@146 ($generated@@324 $generated@@615) ($generated@@257 $generated@@616)) ($generated@@146 ($generated@@363 $generated@@615) ($generated@@257 $generated@@617))) ($generated@@146 ($generated@@398 $generated@@615) ($generated@@257 ($generated@@149 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@146 $generated@@615 ($generated@@424 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@2) ($generated@@146 $generated@@618 $generated@@46))
 :pattern ( ($generated@@146 $generated@@618 $generated@@46))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@3) ($generated@@146 $generated@@619 $generated@@47))
 :pattern ( ($generated@@146 $generated@@619 $generated@@47))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@4) ($generated@@146 $generated@@620 $generated@@44))
 :pattern ( ($generated@@146 $generated@@620 $generated@@44))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@460) ($generated@@146 $generated@@621 $generated@@45))
 :pattern ( ($generated@@146 $generated@@621 $generated@@45))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@77) ($generated@@146 $generated@@622 $generated@@48))
 :pattern ( ($generated@@146 $generated@@622 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@623) $generated@@77) (= (type $generated@@628) ($generated@@170 $generated@@121 $generated@@4))) (= (type $generated@@629) $generated@@121)) (= (type $generated@@625) ($generated@@83 $generated@@121 $generated@@122))) (= (type $generated@@630) ($generated@@170 $generated@@121 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@632 true))
(let (($generated@@633 true))
(let (($generated@@634  (=> (and (>= 0 ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@624))))) (= (ControlFlow 0 11) 7)) $generated@@633)))
(let (($generated@@635  (=> (and (> ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@624)))) 0) (= (ControlFlow 0 10) 7)) $generated@@633)))
(let (($generated@@636  (=> (and ($generated@@236 $generated@@623 $generated@@80 $generated@@625) ($generated@@78 $generated@@623)) (and (=> (= (ControlFlow 0 12) 10) $generated@@635) (=> (= (ControlFlow 0 12) 11) $generated@@634)))))
(let (($generated@@637  (=> (> ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@626)))) 0) (and (=> (= (ControlFlow 0 13) 12) $generated@@636) (=> (= (ControlFlow 0 13) 9) $generated@@632)))))
(let (($generated@@638  (=> (and (>= 0 ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@626))))) (= (ControlFlow 0 8) 7)) $generated@@633)))
(let (($generated@@639  (=> ($generated@@236 $generated@@623 $generated@@80 $generated@@625) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not ($generated@@279 ($generated@@76 $generated@@623) ($generated@@280 $generated@@77)))) (=> (not ($generated@@279 ($generated@@76 $generated@@623) ($generated@@280 $generated@@77))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (= $generated@@623 $generated@@623)) (=> (= $generated@@623 $generated@@623) (=> (or (= $generated@@623 $generated@@623) ($generated@@278 $generated@@623)) (=> (and (= $generated@@627 ($generated@@277 $generated@@623)) ($generated@@278 $generated@@623)) (=> (and (and ($generated@@146 ($generated@@8 $generated@@627) $generated@@46) (= $generated@@626 $generated@@627)) (and ($generated@@236 $generated@@623 $generated@@80 $generated@@625) ($generated@@78 $generated@@623))) (and (=> (= (ControlFlow 0 14) 13) $generated@@637) (=> (= (ControlFlow 0 14) 8) $generated@@638))))))))))))
(let (($generated@@640  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@641 ($generated@@277 $generated@@623)))
(> ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@641)))) 0))) (=> (let (($generated@@642 ($generated@@277 $generated@@623)))
(> ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@642)))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@643 ($generated@@277 $generated@@623)))
(forall (($generated@@644 Int) ) (!  (=> true (=> (> ($generated ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@644)))) 0) (<= $generated@@643 $generated@@644)))
 :pattern ( ($generated@@86 ($generated@@76 $generated@@623) ($generated@@296 ($generated@@8 $generated@@644))))
))))))))
(let (($generated@@645  (=> (and (= $generated@@628 ($generated@@224 $generated@@629 $generated@@625 $generated@@60 false)) ($generated@@236 $generated@@623 $generated@@237 $generated@@625)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@247 $generated@@623)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@279 ($generated@@82 $generated@@623) ($generated@@280 $generated@@77)))) (=> (and (and (and ($generated@@247 $generated@@623) (not ($generated@@279 ($generated@@82 $generated@@623) ($generated@@280 $generated@@77)))) ($generated@@281 $generated@@623)) (and (and (= ($generated@@277 $generated@@623) ($generated@@282 $generated@@623)) ($generated@@281 $generated@@623)) (and ($generated@@146 ($generated@@8 ($generated@@277 $generated@@623)) $generated@@46) (= (ControlFlow 0 4) 2)))) $generated@@640))))))
(let (($generated@@646  (=> (and (and (= $generated@@630 ($generated@@169 $generated@@629 $generated@@625 $generated@@60 false)) ($generated@@236 $generated@@623 $generated@@80 $generated@@625)) (and ($generated@@78 $generated@@623) (not ($generated@@279 ($generated@@76 $generated@@623) ($generated@@280 $generated@@77))))) (and (=> (= (ControlFlow 0 17) 14) $generated@@639) (=> (= (ControlFlow 0 17) 4) $generated@@645)))))
(let (($generated@@647  (=> (and (and (and ($generated@@267 $generated@@625) ($generated@@631 $generated@@625)) ($generated@@79 $generated@@623 $generated@@80)) (and (= 3 $generated@@75) (= (ControlFlow 0 18) 17))) $generated@@646)))
$generated@@647)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (Int) Int)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@310 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@U) Bool)
(declare-fun $generated@@327 (T@T) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@396 (T@T T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 () T@U)
(declare-fun $generated@@484 (T@T) T@U)
(declare-fun $generated@@508 () T@T)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@553 (T@U Int) T@U)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@600 (T@U) Int)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@79) (= (type $generated@@150) $generated@@79)) (= ($generated@@146 ($generated@@77 $generated@@148 $generated@@149 $generated@@150)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) $generated@@79)) (= ($generated@@151 ($generated@@77 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@77 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@79)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@79) (= (type $generated@@159) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@157 $generated@@158 $generated@@159)) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@160 $generated@@161)) $generated@@79)
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@79) (= (type $generated@@164) $generated@@79)) (= ($generated@@160 ($generated@@77 $generated@@162 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@76 $generated@@165 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@165 ($generated@@89 0)))
)))
(assert (= ($generated@@1 $generated@@168) 15))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@168) (= (type $generated@@171) $generated@@79)) (or ($generated@@169 $generated@@171) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@171 $generated@@78)))) true)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@68) (= (type $generated@@177) $generated@@68)) (= (type $generated@@178) $generated@@79)) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@79) (= (type $generated@@186) $generated@@79)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (= (type $generated@@187) $generated@@79))
(assert (= ($generated@@146 $generated@@187) $generated@@63))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@68)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@192) $generated@@68)) ($generated@@76 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@76 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@91 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@71 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@91) (= (type $generated@@243) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@244) ($generated@@70 $generated@@4))) (= (type $generated@@246) $generated@@91)) (= (type $generated@@247) ($generated@@70 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@195 $generated@@91 $generated@@4))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@91) (= (type $generated@@255) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@91)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@193 ($generated@@249 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@193 ($generated@@249 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@261 $generated@@265)) $generated@@168)
 :pattern ( ($generated@@261 $generated@@265))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@168) (= (type $generated@@267) $generated@@79)) (or ($generated@@169 $generated@@267) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@267 $generated@@78)))) (and (=> (not ($generated@@262 $generated@@267)) (let (($generated@@268 ($generated@@160 $generated@@267)))
(let (($generated@@269 ($generated@@155 $generated@@267)))
(let (($generated@@270 ($generated@@151 $generated@@267)))
 (and ($generated@@169 $generated@@269) (=> ($generated@@167 $generated@@266 $generated@@269) (and ($generated@@169 $generated@@268) (=> ($generated@@167 $generated@@266 $generated@@268) (and ($generated@@263 $generated@@269) (=> (or ($generated@@264 $generated@@269 $generated@@187) (<= $generated@@270 ($generated@@151 $generated@@269))) ($generated@@263 $generated@@268))))))))))) (= ($generated@@167 ($generated@@261 $generated@@266) $generated@@267) (ite ($generated@@262 $generated@@267) true (let (($generated@@271 ($generated@@160 $generated@@267)))
(let (($generated@@272 ($generated@@155 $generated@@267)))
(let (($generated@@273 ($generated@@151 $generated@@267)))
 (and (and (and ($generated@@167 $generated@@266 $generated@@272) ($generated@@167 $generated@@266 $generated@@271)) (or ($generated@@264 $generated@@272 $generated@@187) (<= $generated@@273 ($generated@@151 $generated@@272)))) (or ($generated@@264 $generated@@271 $generated@@187) (<= $generated@@273 ($generated@@151 $generated@@271)))))))))))
 :pattern ( ($generated@@167 ($generated@@261 $generated@@266) $generated@@267))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277)) $generated@@79)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@68) (= (type $generated@@279) $generated@@68)) (= (type $generated@@280) $generated@@182)) (= (type $generated@@281) $generated@@182)) (= ($generated@@76 ($generated@@274 $generated@@280 $generated@@281) ($generated@@173 $generated@@278 $generated@@279))  (and ($generated@@275 $generated@@280 $generated@@278) ($generated@@275 $generated@@281 $generated@@279))))
 :pattern ( ($generated@@76 ($generated@@274 $generated@@280 $generated@@281) ($generated@@173 $generated@@278 $generated@@279)))
)))
(assert ($generated@@76 $generated@@187 $generated@@78))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@282 $generated@@283)) ($generated@@88 $generated@@187 $generated@@78 $generated@@283))
 :pattern ( ($generated@@88 $generated@@187 $generated@@78 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@79) (= (type $generated@@285) $generated@@79)) (= ($generated@@179 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@179 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@79) (= (type $generated@@287) $generated@@79)) (= ($generated@@264 $generated@@286 $generated@@287) (= $generated@@286 $generated@@287)))
 :pattern ( ($generated@@264 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@291) $generated@@68)) (= ($generated@@76 $generated@@290 ($generated@@288 $generated@@291)) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@182) ($generated@@0 ($generated@@95 $generated@@290 $generated@@292))) ($generated@@275 $generated@@292 $generated@@291))
 :pattern ( ($generated@@95 $generated@@290 $generated@@292))
))))
 :pattern ( ($generated@@76 $generated@@290 ($generated@@288 $generated@@291)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@68)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@296) $generated@@68)) (= ($generated@@76 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@182) ($generated@@0 ($generated@@95 $generated@@295 $generated@@297))) ($generated@@275 $generated@@297 $generated@@296))
 :pattern ( ($generated@@95 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@76 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 Int) ) (! (= ($generated@@298 $generated@@299) $generated@@299)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
(= (type ($generated@@300 $generated@@301)) $generated@@302))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= ($generated@@300 $generated@@303) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@304) $generated@@79) (= (type $generated@@305) $generated@@79)) (and ($generated@@262 $generated@@304) ($generated@@262 $generated@@305))) (= ($generated@@264 $generated@@304 $generated@@305) true))
 :pattern ( ($generated@@264 $generated@@304 $generated@@305) ($generated@@262 $generated@@304))
 :pattern ( ($generated@@264 $generated@@304 $generated@@305) ($generated@@262 $generated@@305))
)))
(assert (forall (($generated@@306 Int) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (= (type $generated@@307) $generated@@79) (= (type $generated@@308) $generated@@79)) (= (type $generated@@309) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@282 $generated@@309)) (= ($generated@@88 ($generated@@77 $generated@@306 $generated@@307 $generated@@308) $generated@@78 $generated@@309)  (and (and ($generated@@88 ($generated@@8 $generated@@306) $generated@@46 $generated@@309) ($generated@@88 $generated@@307 $generated@@78 $generated@@309)) ($generated@@88 $generated@@308 $generated@@78 $generated@@309))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@306 $generated@@307 $generated@@308) $generated@@78 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@311) $generated@@68) (= (type $generated@@312) $generated@@68)) (= (type $generated@@313) $generated@@182)) (= (type $generated@@314) $generated@@182)) (= (type $generated@@315) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@282 $generated@@315)) (= ($generated@@88 ($generated@@274 $generated@@313 $generated@@314) ($generated@@173 $generated@@311 $generated@@312) $generated@@315)  (and ($generated@@310 $generated@@313 $generated@@311 $generated@@315) ($generated@@310 $generated@@314 $generated@@312 $generated@@315))))
 :pattern ( ($generated@@88 ($generated@@274 $generated@@313 $generated@@314) ($generated@@173 $generated@@311 $generated@@312) $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@79) (= ($generated@@172 $generated@@316) (= ($generated@@146 $generated@@316) $generated@@61)))
 :pattern ( ($generated@@172 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@79) (= ($generated@@262 $generated@@317) (= ($generated@@146 $generated@@317) $generated@@63)))
 :pattern ( ($generated@@262 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@79) (= ($generated@@318 $generated@@319) (= ($generated@@146 $generated@@319) $generated@@65)))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@79) ($generated@@318 $generated@@320)) (exists (($generated@@321 Int) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (and (and (= (type $generated@@322) $generated@@79) (= (type $generated@@323) $generated@@79)) (= $generated@@320 ($generated@@77 $generated@@321 $generated@@322 $generated@@323)))
 :no-pattern (type $generated@@322)
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
)))
 :pattern ( ($generated@@318 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@79) ($generated@@172 $generated@@324)) (exists (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (and (and (= (type $generated@@325) $generated@@182) (= (type $generated@@326) $generated@@182)) (= $generated@@324 ($generated@@274 $generated@@325 $generated@@326)))
 :no-pattern (type $generated@@325)
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
)))
 :pattern ( ($generated@@172 $generated@@324))
)))
(assert  (and (and (forall (($generated@@331 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@331)) 18)) (forall (($generated@@332 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@329 $generated@@332))
))) (forall (($generated@@333 T@T) ) (! (= (type ($generated@@327 $generated@@333)) ($generated@@329 $generated@@333))
 :pattern ( ($generated@@327 $generated@@333))
))))
(assert (forall (($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@334)) 0)
 :pattern ( ($generated@@327 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@79) ($generated@@262 $generated@@335)) (= $generated@@335 $generated@@187))
 :pattern ( ($generated@@262 $generated@@335))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@336) $generated@@168) (= (type $generated@@337) $generated@@79)) (or ($generated@@169 ($generated@@300 $generated@@337)) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@337 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@300 ($generated@@11 ($generated@@262 ($generated@@300 $generated@@337)))))) (let (($generated@@338 ($generated@@300 ($generated@@160 ($generated@@300 $generated@@337)))))
(let (($generated@@339 ($generated@@300 ($generated@@155 ($generated@@300 $generated@@337)))))
(let (($generated@@340 ($generated@@298 ($generated@@151 ($generated@@300 $generated@@337)))))
 (and ($generated@@169 $generated@@339) (=> ($generated@@167 ($generated@@261 $generated@@336) $generated@@339) (and ($generated@@169 $generated@@338) (=> ($generated@@167 ($generated@@261 $generated@@336) $generated@@338) (and ($generated@@263 $generated@@339) (=> (or ($generated@@264 $generated@@339 $generated@@187) (<= $generated@@340 ($generated@@151 $generated@@339))) ($generated@@263 $generated@@338))))))))))) (= ($generated@@167 ($generated@@261 $generated@@336) ($generated@@300 $generated@@337)) (ite ($generated@@262 ($generated@@300 $generated@@337)) true (let (($generated@@341 ($generated@@300 ($generated@@160 ($generated@@300 $generated@@337)))))
(let (($generated@@342 ($generated@@300 ($generated@@155 ($generated@@300 $generated@@337)))))
(let (($generated@@343 ($generated@@298 ($generated@@151 ($generated@@300 $generated@@337)))))
 (and (and (and ($generated@@167 ($generated@@261 $generated@@336) $generated@@342) ($generated@@167 ($generated@@261 $generated@@336) $generated@@341)) (or ($generated@@264 $generated@@342 $generated@@187) (<= $generated@@343 ($generated@@298 ($generated@@151 $generated@@342))))) (or ($generated@@264 $generated@@341 $generated@@187) (<= $generated@@343 ($generated@@298 ($generated@@151 $generated@@341))))))))))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@261 $generated@@336) ($generated@@300 $generated@@337)))
))))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@182)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@68) (= (type $generated@@348) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@310 ($generated@@344 $generated@@346) $generated@@347 $generated@@348) ($generated@@88 $generated@@346 $generated@@347 $generated@@348)))
 :pattern ( ($generated@@310 ($generated@@344 $generated@@346) $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (= (type $generated@@349) $generated@@79) (= (type $generated@@350) $generated@@79)) (and ($generated@@318 $generated@@349) ($generated@@318 $generated@@350))) (= ($generated@@264 $generated@@349 $generated@@350)  (and (and (= ($generated@@151 $generated@@349) ($generated@@151 $generated@@350)) ($generated@@264 ($generated@@155 $generated@@349) ($generated@@155 $generated@@350))) ($generated@@264 ($generated@@160 $generated@@349) ($generated@@160 $generated@@350)))))
 :pattern ( ($generated@@264 $generated@@349 $generated@@350) ($generated@@318 $generated@@349))
 :pattern ( ($generated@@264 $generated@@349 $generated@@350) ($generated@@318 $generated@@350))
)))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@90 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@93 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@90 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@95 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 19)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@90 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@95 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@95 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 20)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@90 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@95 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@95 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@93 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@90 $generated@@394 $generated@@2)) (= ($generated@@189 $generated@@393) (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@394) (and (<= 0 ($generated ($generated@@95 $generated@@393 $generated@@395))) (<= ($generated ($generated@@95 $generated@@393 $generated@@395)) ($generated@@351 $generated@@393))))
 :pattern ( ($generated@@95 $generated@@393 $generated@@395))
)))))
 :pattern ( ($generated@@189 $generated@@393))
)))
(assert (forall (($generated@@397 T@T) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@182) ($generated@@275 $generated@@399 $generated@@78)) (and (= ($generated@@344 ($generated@@396 $generated@@79 $generated@@399)) $generated@@399) ($generated@@76 ($generated@@396 $generated@@79 $generated@@399) $generated@@78)))
 :pattern ( ($generated@@275 $generated@@399 $generated@@78))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@361 (type $generated@@400))))
(let (($generated@@402 ($generated@@360 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@359 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@358 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@95 ($generated@@357 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@357 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@361 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@90 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@361 (type $generated@@407))))
(let (($generated@@409 ($generated@@360 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@359 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@358 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@95 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@379 (type $generated@@411))))
(let (($generated@@413 ($generated@@378 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@377 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@376 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@375 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@379 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@90 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@379 (type $generated@@418))))
(let (($generated@@420 ($generated@@378 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@377 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@376 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@95 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@423) $generated@@68)) (= ($generated@@76 $generated@@422 ($generated@@188 $generated@@423)) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@422 $generated@@424)))) ($generated@@275 $generated@@424 $generated@@423))
 :pattern ( ($generated@@95 $generated@@422 $generated@@424))
))))
 :pattern ( ($generated@@76 $generated@@422 ($generated@@188 $generated@@423)))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@79) ($generated@@263 $generated@@425)) (or ($generated@@262 $generated@@425) ($generated@@318 $generated@@425)))
 :pattern ( ($generated@@263 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@426 ($generated@@288 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@182) ($generated@@0 ($generated@@95 $generated@@426 $generated@@429))) ($generated@@310 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@95 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@88 $generated@@426 ($generated@@288 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@430 ($generated@@293 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@182) ($generated@@0 ($generated@@95 $generated@@430 $generated@@433))) ($generated@@310 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@95 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@88 $generated@@430 ($generated@@293 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@95 ($generated@@352 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@95 ($generated@@352 $generated@@435) $generated@@434)))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@361 (type $generated@@439))))
(let (($generated@@441 ($generated@@360 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@90 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@443) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@95 ($generated@@357 $generated@@442) ($generated@@180 ($generated@@396 $generated@@79 $generated@@443)))) (= ($generated@@95 ($generated@@437 $generated@@442) ($generated@@180 ($generated@@396 $generated@@79 $generated@@443))) ($generated@@181 ($generated@@396 $generated@@79 $generated@@443))))))
 :pattern ( ($generated@@95 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@379 (type $generated@@447))))
(let (($generated@@449 ($generated@@378 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@90 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@451) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@95 ($generated@@375 $generated@@450) ($generated@@180 ($generated@@396 $generated@@79 $generated@@451)))) (= ($generated@@95 ($generated@@445 $generated@@450) ($generated@@180 ($generated@@396 $generated@@79 $generated@@451))) ($generated@@181 ($generated@@396 $generated@@79 $generated@@451))))))
 :pattern ( ($generated@@95 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@360 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@359 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@95 ($generated@@404 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@95 ($generated@@357 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@95 ($generated@@437 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@95 ($generated@@357 $generated@@452) $generated@@456))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@95 ($generated@@404 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@378 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@377 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@95 ($generated@@415 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@95 ($generated@@375 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@95 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@457) $generated@@461))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@95 ($generated@@415 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@357 $generated@@465) $generated@@469))) (and ($generated@@310 ($generated@@95 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@310 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@95 ($generated@@357 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@88 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@474) $generated@@68)) (= (type $generated@@475) $generated@@68)) (= (type $generated@@476) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@473) $generated@@477))) (and ($generated@@310 ($generated@@95 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@310 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@88 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@168)
 :pattern ( ($generated@@478 $generated@@480))
)) (= (type $generated@@479) $generated@@168)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@168) (= (type $generated@@482) $generated@@79)) (= ($generated@@167 $generated@@481 $generated@@482) ($generated@@167 $generated@@479 $generated@@482)))
 :pattern ( ($generated@@167 ($generated@@478 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@79) ($generated@@76 $generated@@483 $generated@@78)) (or ($generated@@262 $generated@@483) ($generated@@318 $generated@@483)))
 :pattern ( ($generated@@318 $generated@@483) ($generated@@76 $generated@@483 $generated@@78))
 :pattern ( ($generated@@262 $generated@@483) ($generated@@76 $generated@@483 $generated@@78))
)))
(assert (forall (($generated@@485 T@T) ) (! (= (type ($generated@@484 $generated@@485)) ($generated@@90 $generated@@485 $generated@@4))
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@379 (type $generated@@486))))
(let (($generated@@488 ($generated@@378 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@377 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@376 $generated@@488 $generated@@487)) (= ($generated@@375 $generated@@486) ($generated@@484 $generated@@488))))))
 :pattern ( ($generated@@375 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@379 (type $generated@@489))))
(let (($generated@@491 ($generated@@378 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@377 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@376 $generated@@491 $generated@@490)) (= ($generated@@415 $generated@@489) ($generated@@484 $generated@@490))))))
 :pattern ( ($generated@@415 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@379 (type $generated@@492))))
(let (($generated@@494 ($generated@@378 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@377 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@376 $generated@@494 $generated@@493)) (= ($generated@@444 $generated@@492) ($generated@@484 $generated@@182))))))
 :pattern ( ($generated@@444 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@361 (type $generated@@495))))
(let (($generated@@497 ($generated@@360 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@359 $generated@@497 $generated@@496)) (or (= $generated@@495 ($generated@@358 $generated@@497 $generated@@496)) (exists (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (and (and (= (type $generated@@498) $generated@@182) (= (type $generated@@499) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@436 $generated@@495) ($generated@@344 ($generated@@274 $generated@@498 $generated@@499)))))
 :no-pattern (type $generated@@498)
 :no-pattern (type $generated@@499)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
))))))
 :pattern ( ($generated@@436 $generated@@495))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@379 (type $generated@@500))))
(let (($generated@@502 ($generated@@378 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@377 $generated@@502 $generated@@501)) (or (= $generated@@500 ($generated@@376 $generated@@502 $generated@@501)) (exists (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (and (and (= (type $generated@@503) $generated@@182) (= (type $generated@@504) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@444 $generated@@500) ($generated@@344 ($generated@@274 $generated@@503 $generated@@504)))))
 :no-pattern (type $generated@@503)
 :no-pattern (type $generated@@504)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
))))))
 :pattern ( ($generated@@444 $generated@@500))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@182) ($generated@@275 $generated@@505 $generated@@46)) (and (= ($generated@@344 ($generated@@396 $generated@@2 $generated@@505)) $generated@@505) ($generated@@76 ($generated@@396 $generated@@2 $generated@@505) $generated@@46)))
 :pattern ( ($generated@@275 $generated@@505 $generated@@46))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@182) ($generated@@275 $generated@@506 $generated@@47)) (and (= ($generated@@344 ($generated@@396 $generated@@3 $generated@@506)) $generated@@506) ($generated@@76 ($generated@@396 $generated@@3 $generated@@506) $generated@@47)))
 :pattern ( ($generated@@275 $generated@@506 $generated@@47))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@182) ($generated@@275 $generated@@507 $generated@@44)) (and (= ($generated@@344 ($generated@@396 $generated@@4 $generated@@507)) $generated@@507) ($generated@@76 ($generated@@396 $generated@@4 $generated@@507) $generated@@44)))
 :pattern ( ($generated@@275 $generated@@507 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@508) 21))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@182) ($generated@@275 $generated@@509 $generated@@45)) (and (= ($generated@@344 ($generated@@396 $generated@@508 $generated@@509)) $generated@@509) ($generated@@76 ($generated@@396 $generated@@508 $generated@@509) $generated@@45)))
 :pattern ( ($generated@@275 $generated@@509 $generated@@45))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@168) (= (type $generated@@511) $generated@@79)) (= ($generated@@167 ($generated@@261 $generated@@510) $generated@@511) ($generated@@167 $generated@@510 $generated@@511)))
 :pattern ( ($generated@@167 ($generated@@261 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@275 ($generated@@344 $generated@@512) $generated@@513) ($generated@@76 $generated@@512 $generated@@513)))
 :pattern ( ($generated@@275 ($generated@@344 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@93 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@90 $generated@@515 $generated@@2)) (<= 0 ($generated@@351 $generated@@514))))
 :pattern ( ($generated@@351 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@330 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@329 $generated@@517)) (<= 0 ($generated@@328 $generated@@516))))
 :pattern ( ($generated@@328 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@518 ($generated@@462 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@462 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@462 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@86 ($generated@@462 $generated@@526 $generated@@527)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@470 $generated@@530 $generated@@531)) $generated@@530))
 :pattern ( ($generated@@470 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@470 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@470 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@86 ($generated@@470 $generated@@536 $generated@@537)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@182) (= (type $generated@@539) $generated@@182)) (= ($generated@@146 ($generated@@274 $generated@@538 $generated@@539)) $generated@@61))
 :pattern ( ($generated@@274 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@68) (= (type $generated@@543) $generated@@68)) (= ($generated@@540 ($generated@@173 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@173 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@544 ($generated@@173 $generated@@546 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@173 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@182) (= (type $generated@@549) $generated@@182)) (= ($generated@@180 ($generated@@274 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@274 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@182) (= (type $generated@@551) $generated@@182)) (= ($generated@@181 ($generated@@274 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@274 $generated@@550 $generated@@551))
)))
(assert  (and (forall (($generated@@554 T@U) ) (! (= (type ($generated@@552 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@554))
)) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@330 (type $generated@@555))))
(= (type ($generated@@553 $generated@@555 $generated@@556)) $generated@@557))
 :pattern ( ($generated@@553 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@329 $generated@@182)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@558 ($generated@@552 $generated@@559) $generated@@560) (forall (($generated@@561 Int) ) (!  (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@328 $generated@@558))) ($generated@@310 ($generated@@553 $generated@@558 $generated@@561) $generated@@559 $generated@@560))
 :pattern ( ($generated@@553 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@88 $generated@@558 ($generated@@552 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 Int) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@79) (= (type $generated@@564) $generated@@79)) (= ($generated@@77 ($generated@@298 $generated@@562) ($generated@@300 $generated@@563) ($generated@@300 $generated@@564)) ($generated@@300 ($generated@@77 $generated@@562 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@77 ($generated@@298 $generated@@562) ($generated@@300 $generated@@563) ($generated@@300 $generated@@564)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@565 ($generated@@89 $generated@@566)) $generated@@566)
 :pattern ( ($generated@@89 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@68)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@567 ($generated@@288 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@288 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@86 ($generated@@288 $generated@@570)) $generated@@54))
 :pattern ( ($generated@@288 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@68)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@571 ($generated@@293 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@293 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@86 ($generated@@293 $generated@@574)) $generated@@55))
 :pattern ( ($generated@@293 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@575 ($generated@@188 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@188 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@68) (= ($generated@@86 ($generated@@188 $generated@@578)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@68) (= ($generated@@579 ($generated@@552 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@552 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@68) (= ($generated@@86 ($generated@@552 $generated@@582)) $generated@@57))
 :pattern ( ($generated@@552 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@396 $generated@@584 ($generated@@344 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@344 $generated@@583))
)))
(assert (forall (($generated@@586 Int) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@79) (= (type $generated@@588) $generated@@79)) (< ($generated@@585 $generated@@587) ($generated@@585 ($generated@@77 $generated@@586 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@77 $generated@@586 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 Int) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@79) (= (type $generated@@591) $generated@@79)) (< ($generated@@585 $generated@@591) ($generated@@585 ($generated@@77 $generated@@589 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@77 $generated@@589 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@68)) (= ($generated@@76 $generated@@592 ($generated@@462 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@357 $generated@@592) $generated@@595))) (and ($generated@@275 ($generated@@95 ($generated@@437 $generated@@592) $generated@@595) $generated@@594) ($generated@@275 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@592) $generated@@595))
 :pattern ( ($generated@@95 ($generated@@357 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@76 $generated@@592 ($generated@@462 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) (= ($generated@@76 $generated@@596 ($generated@@470 $generated@@597 $generated@@598)) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@596) $generated@@599))) (and ($generated@@275 ($generated@@95 ($generated@@445 $generated@@596) $generated@@599) $generated@@598) ($generated@@275 $generated@@599 $generated@@597)))
 :pattern ( ($generated@@95 ($generated@@445 $generated@@596) $generated@@599))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@596) $generated@@599))
))))
 :pattern ( ($generated@@76 $generated@@596 ($generated@@470 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@182) (= (type $generated@@602) $generated@@182)) (< ($generated@@600 $generated@@601) ($generated@@585 ($generated@@274 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@274 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@182) (= (type $generated@@604) $generated@@182)) (< ($generated@@600 $generated@@604) ($generated@@585 ($generated@@274 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@274 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@182) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) $generated@@68)) ($generated@@275 $generated@@605 ($generated@@462 $generated@@606 $generated@@607))) (and (= ($generated@@344 ($generated@@396 ($generated@@359 $generated@@182 $generated@@182) $generated@@605)) $generated@@605) ($generated@@76 ($generated@@396 ($generated@@359 $generated@@182 $generated@@182) $generated@@605) ($generated@@462 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@275 $generated@@605 ($generated@@462 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@182) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) ($generated@@275 $generated@@608 ($generated@@470 $generated@@609 $generated@@610))) (and (= ($generated@@344 ($generated@@396 ($generated@@377 $generated@@182 $generated@@182) $generated@@608)) $generated@@608) ($generated@@76 ($generated@@396 ($generated@@377 $generated@@182 $generated@@182) $generated@@608) ($generated@@470 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@275 $generated@@608 ($generated@@470 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@68) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@182)) ($generated@@275 $generated@@613 ($generated@@173 $generated@@611 $generated@@612))) (and (= ($generated@@344 ($generated@@396 $generated@@79 $generated@@613)) $generated@@613) ($generated@@76 ($generated@@396 $generated@@79 $generated@@613) ($generated@@173 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@275 $generated@@613 ($generated@@173 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@95 ($generated@@484 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@95 ($generated@@484 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@73)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) $generated@@68)) (and (= ($generated@@86 ($generated@@173 $generated@@618 $generated@@619)) $generated@@62) (= ($generated@@616 ($generated@@173 $generated@@618 $generated@@619)) $generated@@66)))
 :pattern ( ($generated@@173 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@79) (= (type $generated@@621) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@621) (and ($generated@@318 $generated@@620) ($generated@@88 $generated@@620 $generated@@78 $generated@@621)))) ($generated@@88 ($generated@@8 ($generated@@151 $generated@@620)) $generated@@46 $generated@@621))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@151 $generated@@620)) $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@79) (= ($generated@@600 ($generated@@344 $generated@@622)) ($generated@@585 $generated@@622)))
 :pattern ( ($generated@@600 ($generated@@344 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@182) ($generated@@275 $generated@@623 ($generated@@89 0))) (and (= ($generated@@344 ($generated@@396 $generated@@2 $generated@@623)) $generated@@623) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@623) ($generated@@89 0))))
 :pattern ( ($generated@@275 $generated@@623 ($generated@@89 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@182) (= (type $generated@@625) $generated@@68)) ($generated@@275 $generated@@624 ($generated@@288 $generated@@625))) (and (= ($generated@@344 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@624)) $generated@@624) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@624) ($generated@@288 $generated@@625))))
 :pattern ( ($generated@@275 $generated@@624 ($generated@@288 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@182) (= (type $generated@@627) $generated@@68)) ($generated@@275 $generated@@626 ($generated@@293 $generated@@627))) (and (= ($generated@@344 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@626)) $generated@@626) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@4) $generated@@626) ($generated@@293 $generated@@627))))
 :pattern ( ($generated@@275 $generated@@626 ($generated@@293 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@182) (= (type $generated@@629) $generated@@68)) ($generated@@275 $generated@@628 ($generated@@188 $generated@@629))) (and (= ($generated@@344 ($generated@@396 ($generated@@90 $generated@@182 $generated@@2) $generated@@628)) $generated@@628) ($generated@@76 ($generated@@396 ($generated@@90 $generated@@182 $generated@@2) $generated@@628) ($generated@@188 $generated@@629))))
 :pattern ( ($generated@@275 $generated@@628 ($generated@@188 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@182) (= (type $generated@@631) $generated@@68)) ($generated@@275 $generated@@630 ($generated@@552 $generated@@631))) (and (= ($generated@@344 ($generated@@396 ($generated@@329 $generated@@182) $generated@@630)) $generated@@630) ($generated@@76 ($generated@@396 ($generated@@329 $generated@@182) $generated@@630) ($generated@@552 $generated@@631))))
 :pattern ( ($generated@@275 $generated@@630 ($generated@@552 $generated@@631)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@616 $generated@@78) $generated@@67))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@632 ($generated@@188 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@632 $generated@@635)))) ($generated@@310 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@95 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@88 $generated@@632 ($generated@@188 $generated@@633) $generated@@634))
)))
(assert (= $generated@@187 ($generated@@300 $generated@@187)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@79) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@638) (and ($generated@@172 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@68) ($generated@@88 $generated@@636 ($generated@@173 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@88 $generated@@636 ($generated@@173 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@310 ($generated@@180 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@310 ($generated@@180 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@79) (= (type $generated@@641) $generated@@68)) (= (type $generated@@642) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@642) (and ($generated@@172 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@68) ($generated@@88 $generated@@640 ($generated@@173 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@88 $generated@@640 ($generated@@173 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@310 ($generated@@181 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@310 ($generated@@181 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@79) (= (type $generated@@645) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@645) (and ($generated@@318 $generated@@644) ($generated@@88 $generated@@644 $generated@@78 $generated@@645)))) ($generated@@88 ($generated@@155 $generated@@644) $generated@@78 $generated@@645))
 :pattern ( ($generated@@88 ($generated@@155 $generated@@644) $generated@@78 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@79) (= (type $generated@@647) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@282 $generated@@647) (and ($generated@@318 $generated@@646) ($generated@@88 $generated@@646 $generated@@78 $generated@@647)))) ($generated@@88 ($generated@@160 $generated@@646) $generated@@78 $generated@@647))
 :pattern ( ($generated@@88 ($generated@@160 $generated@@646) $generated@@78 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@182) (= (type $generated@@649) $generated@@182)) (= ($generated@@274 ($generated@@300 $generated@@648) ($generated@@300 $generated@@649)) ($generated@@300 ($generated@@274 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@274 ($generated@@300 $generated@@648) ($generated@@300 $generated@@649)))
)))
(assert (forall (($generated@@650 Int) ) (! (= ($generated@@344 ($generated@@8 ($generated@@298 $generated@@650))) ($generated@@300 ($generated@@344 ($generated@@8 $generated@@650))))
 :pattern ( ($generated@@344 ($generated@@8 ($generated@@298 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ) (! (= ($generated@@344 ($generated@@300 $generated@@651)) ($generated@@300 ($generated@@344 $generated@@651)))
 :pattern ( ($generated@@344 ($generated@@300 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@330 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@329 $generated@@653)) (= ($generated@@328 $generated@@652) 0)) (= $generated@@652 ($generated@@327 $generated@@653))))
 :pattern ( ($generated@@328 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@655)))
 (=> (and (and (= (type $generated@@654) ($generated@@90 $generated@@657 $generated@@2)) (= (type $generated@@656) $generated@@2)) (<= 0 ($generated $generated@@656))) (= ($generated@@351 ($generated@@96 $generated@@654 $generated@@655 $generated@@656)) (+ (- ($generated@@351 $generated@@654) ($generated ($generated@@95 $generated@@654 $generated@@655))) ($generated $generated@@656)))))
 :pattern ( ($generated@@351 ($generated@@96 $generated@@654 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@659) $generated@@2)) ($generated@@88 $generated@@659 $generated@@46 $generated@@658))
 :pattern ( ($generated@@88 $generated@@659 $generated@@46 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@661) $generated@@3)) ($generated@@88 $generated@@661 $generated@@47 $generated@@660))
 :pattern ( ($generated@@88 $generated@@661 $generated@@47 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@663) $generated@@4)) ($generated@@88 $generated@@663 $generated@@44 $generated@@662))
 :pattern ( ($generated@@88 $generated@@663 $generated@@44 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@665) $generated@@508)) ($generated@@88 $generated@@665 $generated@@45 $generated@@664))
 :pattern ( ($generated@@88 $generated@@665 $generated@@45 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@667) $generated@@182)) ($generated@@88 $generated@@667 $generated@@48 $generated@@666))
 :pattern ( ($generated@@88 $generated@@667 $generated@@48 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@329 $generated@@182)) (= (type $generated@@669) $generated@@68)) (= ($generated@@76 $generated@@668 ($generated@@552 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@328 $generated@@668))) ($generated@@275 ($generated@@553 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@553 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@76 $generated@@668 ($generated@@552 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@329 $generated@@182)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@328 $generated@@672))) (< ($generated@@585 ($generated@@396 $generated@@79 ($generated@@553 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@585 ($generated@@396 $generated@@79 ($generated@@553 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@359 $generated@@182 $generated@@182)) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@76 $generated@@674 ($generated@@462 $generated@@675 $generated@@676))) (and (and ($generated@@76 ($generated@@357 $generated@@674) ($generated@@288 $generated@@675)) ($generated@@76 ($generated@@404 $generated@@674) ($generated@@288 $generated@@676))) ($generated@@76 ($generated@@436 $generated@@674) ($generated@@288 ($generated@@173 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@76 $generated@@674 ($generated@@462 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@68)) ($generated@@76 $generated@@677 ($generated@@470 $generated@@678 $generated@@679))) (and (and ($generated@@76 ($generated@@375 $generated@@677) ($generated@@293 $generated@@678)) ($generated@@76 ($generated@@415 $generated@@677) ($generated@@293 $generated@@679))) ($generated@@76 ($generated@@444 $generated@@677) ($generated@@293 ($generated@@173 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@76 $generated@@677 ($generated@@470 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@76 $generated@@680 $generated@@46))
 :pattern ( ($generated@@76 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@76 $generated@@681 $generated@@47))
 :pattern ( ($generated@@76 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@76 $generated@@682 $generated@@44))
 :pattern ( ($generated@@76 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@508) ($generated@@76 $generated@@683 $generated@@45))
 :pattern ( ($generated@@76 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@182) ($generated@@76 $generated@@684 $generated@@48))
 :pattern ( ($generated@@76 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@686) $generated@@79) (= (type $generated@@685) $generated@@79)) (= (type $generated@@688) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@689) $generated@@79)) (= (type $generated@@691) $generated@@79)) (= (type $generated@@692) $generated@@79)) (= (type $generated@@693) $generated@@79)) (= (type $generated@@694) $generated@@79)) (= (type $generated@@696) ($generated@@195 $generated@@91 $generated@@4))) (= (type $generated@@697) $generated@@91)) (= (type $generated@@698) ($generated@@195 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@700 true))
(let (($generated@@701  (=> (and ($generated@@264 $generated@@685 $generated@@187) (= (ControlFlow 0 8) 4)) $generated@@700)))
(let (($generated@@702  (=> (not ($generated@@264 $generated@@685 $generated@@187)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@318 $generated@@685)) (=> ($generated@@318 $generated@@685) (=> (= (ControlFlow 0 6) 4) $generated@@700))))))
(let (($generated@@703  (=> (and (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685)) (or ($generated@@264 $generated@@686 $generated@@187) (<= $generated@@687 ($generated@@151 $generated@@686)))) (and (=> (= (ControlFlow 0 9) 6) $generated@@702) (=> (= (ControlFlow 0 9) 8) $generated@@701)))))
(let (($generated@@704  (=> (and (not (and (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685)) (or ($generated@@264 $generated@@686 $generated@@187) (<= $generated@@687 ($generated@@151 $generated@@686))))) (= (ControlFlow 0 5) 4)) $generated@@700)))
(let (($generated@@705  (=> ($generated@@264 $generated@@686 $generated@@187) (and (=> (= (ControlFlow 0 13) 9) $generated@@703) (=> (= (ControlFlow 0 13) 5) $generated@@704)))))
(let (($generated@@706  (=> (not ($generated@@264 $generated@@686 $generated@@187)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@318 $generated@@686)) (=> ($generated@@318 $generated@@686) (and (=> (= (ControlFlow 0 11) 9) $generated@@703) (=> (= (ControlFlow 0 11) 5) $generated@@704)))))))
(let (($generated@@707  (=> (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685)) (and (=> (= (ControlFlow 0 14) 11) $generated@@706) (=> (= (ControlFlow 0 14) 13) $generated@@705)))))
(let (($generated@@708  (=> (not (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@167 ($generated@@261 $generated@@479) $generated@@685))) (and (=> (= (ControlFlow 0 10) 9) $generated@@703) (=> (= (ControlFlow 0 10) 5) $generated@@704)))))
(let (($generated@@709  (=> (not ($generated@@167 ($generated@@261 $generated@@479) $generated@@686)) (and (=> (= (ControlFlow 0 17) 14) $generated@@707) (=> (= (ControlFlow 0 17) 10) $generated@@708)))))
(let (($generated@@710  (=> (and ($generated@@167 ($generated@@261 $generated@@479) $generated@@686) ($generated@@88 $generated@@685 $generated@@78 $generated@@688)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (< ($generated@@585 $generated@@685) ($generated@@585 $generated@@689))) (=> (< ($generated@@585 $generated@@685) ($generated@@585 $generated@@689)) (=> ($generated@@169 $generated@@685) (and (=> (= (ControlFlow 0 15) 14) $generated@@707) (=> (= (ControlFlow 0 15) 10) $generated@@708))))))))
(let (($generated@@711  (=> (= $generated@@689 ($generated@@77 $generated@@690 $generated@@691 $generated@@692)) (=> (and ($generated@@76 $generated@@691 $generated@@78) ($generated@@76 $generated@@692 $generated@@78)) (=> (and (and (and ($generated@@76 $generated@@685 $generated@@78) ($generated@@88 $generated@@685 $generated@@78 $generated@@688)) (= $generated@@693 $generated@@692)) (and ($generated@@76 $generated@@693 $generated@@78) (= $generated@@685 $generated@@693))) (=> (and (and (and (and ($generated@@76 $generated@@686 $generated@@78) ($generated@@88 $generated@@686 $generated@@78 $generated@@688)) (= $generated@@694 $generated@@691)) (and ($generated@@76 $generated@@694 $generated@@78) (= $generated@@686 $generated@@694))) (and (and (= $generated@@695 $generated@@690) ($generated@@76 ($generated@@8 $generated@@695) $generated@@46)) (and (= $generated@@687 $generated@@695) ($generated@@88 $generated@@686 $generated@@78 $generated@@688)))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (< ($generated@@585 $generated@@686) ($generated@@585 $generated@@689))) (=> (< ($generated@@585 $generated@@686) ($generated@@585 $generated@@689)) (=> ($generated@@169 $generated@@686) (and (=> (= (ControlFlow 0 18) 15) $generated@@710) (=> (= (ControlFlow 0 18) 17) $generated@@709)))))))))))
(let (($generated@@712 true))
(let (($generated@@713  (=> (not (= $generated@@689 $generated@@187)) (and (=> (= (ControlFlow 0 20) 18) $generated@@711) (=> (= (ControlFlow 0 20) 3) $generated@@712)))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (= $generated@@696 ($generated@@249 $generated@@697 $generated@@688 $generated@@60 false)) (and (=> (= (ControlFlow 0 21) 2) $generated@@714) (=> (= (ControlFlow 0 21) 20) $generated@@713)))))
(let (($generated@@716 true))
(let (($generated@@717  (=> (= $generated@@698 ($generated@@194 $generated@@697 $generated@@688 $generated@@60 false)) (and (=> (= (ControlFlow 0 22) 1) $generated@@716) (=> (= (ControlFlow 0 22) 21) $generated@@715)))))
(let (($generated@@718  (=> (and (and (and ($generated@@282 $generated@@688) ($generated@@699 $generated@@688)) ($generated@@76 $generated@@689 $generated@@78)) (and (= 1 $generated@@166) (= (ControlFlow 0 23) 22))) $generated@@717)))
$generated@@718))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) T@U)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@284 () Bool)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (Int) Int)
(declare-fun $generated@@308 (T@U T@U T@U) Bool)
(declare-fun $generated@@314 (T@U T@U) T@U)
(declare-fun $generated@@315 (T@U) Bool)
(declare-fun $generated@@322 (T@U) Bool)
(declare-fun $generated@@331 (T@T) T@U)
(declare-fun $generated@@332 (T@U) Int)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@341 (T@U T@U) T@U)
(declare-fun $generated@@356 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@T T@T) T@U)
(declare-fun $generated@@395 (T@T T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@417 (T@T T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) Bool)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@506 (T@U T@U) T@U)
(declare-fun $generated@@514 (T@U T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 () T@U)
(declare-fun $generated@@531 (T@T) T@U)
(declare-fun $generated@@555 () T@T)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@579 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@602 (T@U Int) T@U)
(declare-fun $generated@@614 (T@U) Int)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(declare-fun $generated@@649 (T@U) Int)
(declare-fun $generated@@667 (T@U) T@U)
(declare-fun $generated@@726 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= (type ($generated@@146 $generated@@147)) $generated@@72)
 :pattern ( ($generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@79) (= (type $generated@@150) $generated@@79)) (= ($generated@@146 ($generated@@77 $generated@@148 $generated@@149 $generated@@150)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@79) (= (type $generated@@154) $generated@@79)) (= ($generated@@151 ($generated@@77 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@77 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@79)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@79) (= (type $generated@@159) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@157 $generated@@158 $generated@@159)) $generated@@158))
 :pattern ( ($generated@@77 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@160 $generated@@161)) $generated@@79)
 :pattern ( ($generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 Int) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@79) (= (type $generated@@164) $generated@@79)) (= ($generated@@160 ($generated@@77 $generated@@162 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@76 $generated@@165 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@165 ($generated@@89 0)))
)))
(assert (= ($generated@@1 $generated@@168) 15))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@168) (= (type $generated@@171) $generated@@79)) (or ($generated@@169 $generated@@171) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@171 $generated@@78)))) true)
 :pattern ( ($generated@@167 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@174 $generated@@175)) $generated@@68)
 :pattern ( ($generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@68) (= (type $generated@@177) $generated@@68)) (= (type $generated@@178) $generated@@79)) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177))) ($generated@@172 $generated@@178))
 :pattern ( ($generated@@172 $generated@@178) ($generated@@76 $generated@@178 ($generated@@173 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 16) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@79) (= (type $generated@@186) $generated@@79)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (= (type $generated@@187) $generated@@79))
(assert (= ($generated@@146 $generated@@187) $generated@@63))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@68)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@192) $generated@@68)) ($generated@@76 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@76 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 17)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@91 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@71 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@91) (= (type $generated@@243) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@244) ($generated@@70 $generated@@4))) (= (type $generated@@246) $generated@@91)) (= (type $generated@@247) ($generated@@70 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@249 $generated@@253)) $generated@@168)
 :pattern ( ($generated@@249 $generated@@253))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@168) (= (type $generated@@255) $generated@@79)) (or ($generated@@169 $generated@@255) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@255 $generated@@78)))) (and (=> (not ($generated@@250 $generated@@255)) (let (($generated@@256 ($generated@@160 $generated@@255)))
(let (($generated@@257 ($generated@@155 $generated@@255)))
(let (($generated@@258 ($generated@@151 $generated@@255)))
 (and ($generated@@169 $generated@@257) (=> ($generated@@167 $generated@@254 $generated@@257) (and ($generated@@169 $generated@@256) (=> ($generated@@167 $generated@@254 $generated@@256) (and ($generated@@251 $generated@@257) (=> (or ($generated@@252 $generated@@257 $generated@@187) (<= $generated@@258 ($generated@@151 $generated@@257))) ($generated@@251 $generated@@256))))))))))) (= ($generated@@167 ($generated@@249 $generated@@254) $generated@@255) (ite ($generated@@250 $generated@@255) true (let (($generated@@259 ($generated@@160 $generated@@255)))
(let (($generated@@260 ($generated@@155 $generated@@255)))
(let (($generated@@261 ($generated@@151 $generated@@255)))
 (and (and (and ($generated@@167 $generated@@254 $generated@@260) ($generated@@167 $generated@@254 $generated@@259)) (or ($generated@@252 $generated@@260 $generated@@187) (<= $generated@@261 ($generated@@151 $generated@@260)))) (or ($generated@@252 $generated@@259 $generated@@187) (<= $generated@@261 ($generated@@151 $generated@@259)))))))))))
 :pattern ( ($generated@@167 ($generated@@249 $generated@@254) $generated@@255))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@79)
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@182)) (= (type $generated@@269) $generated@@182)) (= ($generated@@76 ($generated@@262 $generated@@268 $generated@@269) ($generated@@173 $generated@@266 $generated@@267))  (and ($generated@@263 $generated@@268 $generated@@266) ($generated@@263 $generated@@269 $generated@@267))))
 :pattern ( ($generated@@76 ($generated@@262 $generated@@268 $generated@@269) ($generated@@173 $generated@@266 $generated@@267)))
)))
(assert ($generated@@76 $generated@@187 $generated@@78))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@270 $generated@@271)) ($generated@@88 $generated@@187 $generated@@78 $generated@@271))
 :pattern ( ($generated@@88 $generated@@187 $generated@@78 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (! (let (($generated@@275 ($generated@@93 (type $generated@@273))))
(= (type ($generated@@272 $generated@@273 $generated@@274)) ($generated@@90 $generated@@275 $generated@@2)))
 :pattern ( ($generated@@272 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
 (=> (and (= (type $generated@@276) ($generated@@90 $generated@@279 $generated@@2)) (= (type $generated@@277) ($generated@@90 $generated@@279 $generated@@2))) (= ($generated ($generated@@95 ($generated@@272 $generated@@276 $generated@@277) $generated@@278)) (+ ($generated ($generated@@95 $generated@@276 $generated@@278)) ($generated ($generated@@95 $generated@@277 $generated@@278))))))
 :pattern ( ($generated@@95 ($generated@@272 $generated@@276 $generated@@277) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@79) (= (type $generated@@281) $generated@@79)) (= ($generated@@179 $generated@@280 $generated@@281) (= $generated@@280 $generated@@281)))
 :pattern ( ($generated@@179 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@79) (= (type $generated@@283) $generated@@79)) (= ($generated@@252 $generated@@282 $generated@@283) (= $generated@@282 $generated@@283)))
 :pattern ( ($generated@@252 $generated@@282 $generated@@283))
)))
(assert  (and (= (type $generated@@285) $generated@@79) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
))))
(assert  (=> (<= 1 $generated@@166) (=> (or $generated@@284 (not (= 1 $generated@@166))) (= $generated@@285 ($generated@@286 $generated@@187)))))
(assert  (=> (<= 1 $generated@@166) (=> (or $generated@@284 (not (= 1 $generated@@166))) (= $generated@@285 ($generated@@286 $generated@@187)))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@76 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@182) ($generated@@0 ($generated@@95 $generated@@291 $generated@@293))) ($generated@@263 $generated@@293 $generated@@292))
 :pattern ( ($generated@@95 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@76 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@76 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@182) ($generated@@0 ($generated@@95 $generated@@296 $generated@@298))) ($generated@@263 $generated@@298 $generated@@297))
 :pattern ( ($generated@@95 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@76 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@300 Int) ) (! (= ($generated@@299 $generated@@300) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (= ($generated@@286 $generated@@301) $generated@@301)
 :pattern ( ($generated@@286 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (= (type $generated@@302) $generated@@79) (= (type $generated@@303) $generated@@79)) (and ($generated@@250 $generated@@302) ($generated@@250 $generated@@303))) (= ($generated@@252 $generated@@302 $generated@@303) true))
 :pattern ( ($generated@@252 $generated@@302 $generated@@303) ($generated@@250 $generated@@302))
 :pattern ( ($generated@@252 $generated@@302 $generated@@303) ($generated@@250 $generated@@303))
)))
(assert (forall (($generated@@304 Int) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@305) $generated@@79) (= (type $generated@@306) $generated@@79)) (= (type $generated@@307) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@270 $generated@@307)) (= ($generated@@88 ($generated@@77 $generated@@304 $generated@@305 $generated@@306) $generated@@78 $generated@@307)  (and (and ($generated@@88 ($generated@@8 $generated@@304) $generated@@46 $generated@@307) ($generated@@88 $generated@@305 $generated@@78 $generated@@307)) ($generated@@88 $generated@@306 $generated@@78 $generated@@307))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@304 $generated@@305 $generated@@306) $generated@@78 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) $generated@@68)) (= (type $generated@@311) $generated@@182)) (= (type $generated@@312) $generated@@182)) (= (type $generated@@313) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@270 $generated@@313)) (= ($generated@@88 ($generated@@262 $generated@@311 $generated@@312) ($generated@@173 $generated@@309 $generated@@310) $generated@@313)  (and ($generated@@308 $generated@@311 $generated@@309 $generated@@313) ($generated@@308 $generated@@312 $generated@@310 $generated@@313))))
 :pattern ( ($generated@@88 ($generated@@262 $generated@@311 $generated@@312) ($generated@@173 $generated@@309 $generated@@310) $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (= (type ($generated@@314 $generated@@316 $generated@@317)) ($generated@@90 $generated@@182 $generated@@2))
 :pattern ( ($generated@@314 $generated@@316 $generated@@317))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@318) $generated@@168) (= (type $generated@@319) $generated@@79)) (or ($generated@@315 $generated@@319) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@319 $generated@@78)))) ($generated@@76 ($generated@@314 $generated@@318 $generated@@319) ($generated@@188 $generated@@46)))
 :pattern ( ($generated@@314 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@79) (= ($generated@@172 $generated@@320) (= ($generated@@146 $generated@@320) $generated@@61)))
 :pattern ( ($generated@@172 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@79) (= ($generated@@250 $generated@@321) (= ($generated@@146 $generated@@321) $generated@@63)))
 :pattern ( ($generated@@250 $generated@@321))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@79) (= ($generated@@322 $generated@@323) (= ($generated@@146 $generated@@323) $generated@@65)))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@79) ($generated@@322 $generated@@324)) (exists (($generated@@325 Int) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@79) (= (type $generated@@327) $generated@@79)) (= $generated@@324 ($generated@@77 $generated@@325 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@322 $generated@@324))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@79) ($generated@@172 $generated@@328)) (exists (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@182) (= (type $generated@@330) $generated@@182)) (= $generated@@328 ($generated@@262 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@172 $generated@@328))
)))
(assert  (and (and (forall (($generated@@335 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@335)) 18)) (forall (($generated@@336 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@333 $generated@@336))
))) (forall (($generated@@337 T@T) ) (! (= (type ($generated@@331 $generated@@337)) ($generated@@333 $generated@@337))
 :pattern ( ($generated@@331 $generated@@337))
))))
(assert (forall (($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@338)) 0)
 :pattern ( ($generated@@331 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@79) ($generated@@250 $generated@@339)) (= $generated@@339 $generated@@187))
 :pattern ( ($generated@@250 $generated@@339))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= (type ($generated@@341 $generated@@342 $generated@@343)) ($generated@@90 $generated@@344 $generated@@2)))
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
 (=> (= (type $generated@@345) ($generated@@90 $generated@@347 $generated@@2)) (= ($generated@@340 ($generated@@341 $generated@@345 $generated@@346)) (+ ($generated@@340 $generated@@345) 1))))
 :pattern ( ($generated@@340 ($generated@@341 $generated@@345 $generated@@346)))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (= (type $generated@@348) $generated@@168) (= (type $generated@@349) $generated@@79)) (or ($generated@@169 ($generated@@286 $generated@@349)) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@349 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@286 ($generated@@11 ($generated@@250 ($generated@@286 $generated@@349)))))) (let (($generated@@350 ($generated@@286 ($generated@@160 ($generated@@286 $generated@@349)))))
(let (($generated@@351 ($generated@@286 ($generated@@155 ($generated@@286 $generated@@349)))))
(let (($generated@@352 ($generated@@299 ($generated@@151 ($generated@@286 $generated@@349)))))
 (and ($generated@@169 $generated@@351) (=> ($generated@@167 ($generated@@249 $generated@@348) $generated@@351) (and ($generated@@169 $generated@@350) (=> ($generated@@167 ($generated@@249 $generated@@348) $generated@@350) (and ($generated@@251 $generated@@351) (=> (or ($generated@@252 $generated@@351 $generated@@187) (<= $generated@@352 ($generated@@151 $generated@@351))) ($generated@@251 $generated@@350))))))))))) (= ($generated@@167 ($generated@@249 $generated@@348) ($generated@@286 $generated@@349)) (ite ($generated@@250 ($generated@@286 $generated@@349)) true (let (($generated@@353 ($generated@@286 ($generated@@160 ($generated@@286 $generated@@349)))))
(let (($generated@@354 ($generated@@286 ($generated@@155 ($generated@@286 $generated@@349)))))
(let (($generated@@355 ($generated@@299 ($generated@@151 ($generated@@286 $generated@@349)))))
 (and (and (and ($generated@@167 ($generated@@249 $generated@@348) $generated@@354) ($generated@@167 ($generated@@249 $generated@@348) $generated@@353)) (or ($generated@@252 $generated@@354 $generated@@187) (<= $generated@@355 ($generated@@299 ($generated@@151 $generated@@354))))) (or ($generated@@252 $generated@@353 $generated@@187) (<= $generated@@355 ($generated@@299 ($generated@@151 $generated@@353))))))))))))
 :weight 3
 :pattern ( ($generated@@167 ($generated@@249 $generated@@348) ($generated@@286 $generated@@349)))
))))
(assert  (and (forall (($generated@@358 T@T) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@90 $generated@@358 $generated@@2))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) $generated@@182)
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@360) $generated@@168) (= (type $generated@@361) $generated@@79)) (or ($generated@@315 ($generated@@286 $generated@@361)) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@361 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@286 ($generated@@11 ($generated@@250 ($generated@@286 $generated@@361)))))) (let (($generated@@362 ($generated@@286 ($generated@@160 ($generated@@286 $generated@@361)))))
(let (($generated@@363 ($generated@@286 ($generated@@155 ($generated@@286 $generated@@361)))))
 (and ($generated@@315 $generated@@363) ($generated@@315 $generated@@362))))) (= ($generated@@314 ($generated@@249 $generated@@360) ($generated@@286 $generated@@361)) (ite ($generated@@250 ($generated@@286 $generated@@361)) ($generated@@356 $generated@@182) (let (($generated@@364 ($generated@@286 ($generated@@160 ($generated@@286 $generated@@361)))))
(let (($generated@@365 ($generated@@286 ($generated@@155 ($generated@@286 $generated@@361)))))
(let (($generated@@366 ($generated@@299 ($generated@@151 ($generated@@286 $generated@@361)))))
($generated@@272 ($generated@@272 ($generated@@341 ($generated@@356 $generated@@182) ($generated@@357 ($generated@@8 $generated@@366))) ($generated@@314 ($generated@@249 $generated@@360) $generated@@365)) ($generated@@314 ($generated@@249 $generated@@360) $generated@@364)))))))))
 :weight 3
 :pattern ( ($generated@@314 ($generated@@249 $generated@@360) ($generated@@286 $generated@@361)))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@68) (= (type $generated@@369) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@308 ($generated@@357 $generated@@367) $generated@@368 $generated@@369) ($generated@@88 $generated@@367 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@308 ($generated@@357 $generated@@367) $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@79) (= (type $generated@@371) $generated@@79)) (and ($generated@@322 $generated@@370) ($generated@@322 $generated@@371))) (= ($generated@@252 $generated@@370 $generated@@371)  (and (and (= ($generated@@151 $generated@@370) ($generated@@151 $generated@@371)) ($generated@@252 ($generated@@155 $generated@@370) ($generated@@155 $generated@@371))) ($generated@@252 ($generated@@160 $generated@@370) ($generated@@160 $generated@@371)))))
 :pattern ( ($generated@@252 $generated@@370 $generated@@371) ($generated@@322 $generated@@370))
 :pattern ( ($generated@@252 $generated@@370 $generated@@371) ($generated@@322 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@93 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@90 $generated@@373 $generated@@2)) (and (= (= ($generated@@340 $generated@@372) 0) (= $generated@@372 ($generated@@356 $generated@@373))) (=> (not (= ($generated@@340 $generated@@372) 0)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (< 0 ($generated ($generated@@95 $generated@@372 $generated@@374))))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@340 $generated@@372))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 19)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@90 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@95 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@95 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert  (and (and (and (and (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (= ($generated@@1 ($generated@@395 $generated@@398 $generated@@399)) 20)) (forall (($generated@@400 T@T) ($generated@@401 T@T) ) (! (= ($generated@@396 ($generated@@395 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@395 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= ($generated@@397 ($generated@@395 $generated@@402 $generated@@403)) $generated@@403)
 :pattern ( ($generated@@395 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@396 (type $generated@@404))))
(= (type ($generated@@393 $generated@@404)) ($generated@@90 $generated@@405 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@404))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= (type ($generated@@394 $generated@@406 $generated@@407)) ($generated@@395 $generated@@406 $generated@@407))
 :pattern ( ($generated@@394 $generated@@406 $generated@@407))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@T) ) (! (let (($generated@@410 (type $generated@@408)))
 (not ($generated@@0 ($generated@@95 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408))))
 :pattern ( (let (($generated@@410 (type $generated@@408)))
($generated@@95 ($generated@@393 ($generated@@394 $generated@@410 $generated@@409)) $generated@@408)))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@93 (type $generated@@411))))
 (=> (and (= (type $generated@@411) ($generated@@90 $generated@@413 $generated@@2)) (= (type $generated@@412) ($generated@@90 $generated@@413 $generated@@2))) (= ($generated@@340 ($generated@@272 $generated@@411 $generated@@412)) (+ ($generated@@340 $generated@@411) ($generated@@340 $generated@@412)))))
 :pattern ( ($generated@@340 ($generated@@272 $generated@@411 $generated@@412)))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@93 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@90 $generated@@415 $generated@@2)) (= ($generated@@189 $generated@@414) (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@415) (and (<= 0 ($generated ($generated@@95 $generated@@414 $generated@@416))) (<= ($generated ($generated@@95 $generated@@414 $generated@@416)) ($generated@@340 $generated@@414))))
 :pattern ( ($generated@@95 $generated@@414 $generated@@416))
)))))
 :pattern ( ($generated@@189 $generated@@414))
)))
(assert (forall (($generated@@418 T@T) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@418)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@182) ($generated@@263 $generated@@420 $generated@@78)) (and (= ($generated@@357 ($generated@@417 $generated@@79 $generated@@420)) $generated@@420) ($generated@@76 ($generated@@417 $generated@@79 $generated@@420) $generated@@78)))
 :pattern ( ($generated@@263 $generated@@420 $generated@@78))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
 (=> (= (type $generated@@421) ($generated@@90 $generated@@423 $generated@@2)) (= ($generated ($generated@@95 ($generated@@341 $generated@@421 $generated@@422) $generated@@422)) (+ ($generated ($generated@@95 $generated@@421 $generated@@422)) 1))))
 :pattern ( ($generated@@341 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@425)))
 (=> (and (and (= (type $generated@@424) ($generated@@90 $generated@@427 $generated@@2)) (= (type $generated@@426) $generated@@427)) (< 0 ($generated ($generated@@95 $generated@@424 $generated@@426)))) (< 0 ($generated ($generated@@95 ($generated@@341 $generated@@424 $generated@@425) $generated@@426)))))
 :pattern ( ($generated@@341 $generated@@424 $generated@@425) ($generated@@95 $generated@@424 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@379 (type $generated@@428))))
(let (($generated@@430 ($generated@@378 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@377 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@376 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@428) $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@375 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@379 (type $generated@@433))))
(= (type ($generated@@432 $generated@@433)) ($generated@@90 $generated@@434 $generated@@4)))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@379 (type $generated@@435))))
(let (($generated@@437 ($generated@@378 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@377 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@376 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@436) ($generated@@0 ($generated@@95 ($generated@@432 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@432 $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@397 (type $generated@@439))))
(let (($generated@@441 ($generated@@396 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@395 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@394 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) ($generated@@0 ($generated@@95 ($generated@@393 $generated@@439) $generated@@442)))
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@393 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@397 (type $generated@@444))))
(= (type ($generated@@443 $generated@@444)) ($generated@@90 $generated@@445 $generated@@4)))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@397 (type $generated@@446))))
(let (($generated@@448 ($generated@@396 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@395 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@394 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@447) ($generated@@0 ($generated@@95 ($generated@@443 $generated@@446) $generated@@449)))
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@443 $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@451)))
 (=> (and (= (type $generated@@450) ($generated@@90 $generated@@453 $generated@@2)) (= (type $generated@@452) $generated@@453)) (= (< 0 ($generated ($generated@@95 ($generated@@341 $generated@@450 $generated@@451) $generated@@452)))  (or (= $generated@@452 $generated@@451) (< 0 ($generated ($generated@@95 $generated@@450 $generated@@452)))))))
 :pattern ( ($generated@@95 ($generated@@341 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@455) $generated@@68)) (= ($generated@@76 $generated@@454 ($generated@@188 $generated@@455)) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@454 $generated@@456)))) ($generated@@263 $generated@@456 $generated@@455))
 :pattern ( ($generated@@95 $generated@@454 $generated@@456))
))))
 :pattern ( ($generated@@76 $generated@@454 ($generated@@188 $generated@@455)))
)))
(assert  (=> (<= 1 $generated@@166) (=> (or $generated@@284 (not (= 1 $generated@@166))) ($generated@@76 $generated@@285 $generated@@78))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@93 (type $generated@@458))))
 (=> (and (= (type $generated@@458) ($generated@@90 $generated@@460 $generated@@2)) (= (type $generated@@459) ($generated@@90 $generated@@460 $generated@@2))) (= ($generated@@457 $generated@@458 $generated@@459) (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@460) (= ($generated ($generated@@95 $generated@@458 $generated@@461)) ($generated ($generated@@95 $generated@@459 $generated@@461))))
 :pattern ( ($generated@@95 $generated@@458 $generated@@461))
 :pattern ( ($generated@@95 $generated@@459 $generated@@461))
)))))
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@79) ($generated@@251 $generated@@462)) (or ($generated@@250 $generated@@462) ($generated@@322 $generated@@462)))
 :pattern ( ($generated@@251 $generated@@462))
)))
(assert  (=> (<= 1 $generated@@166) (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@463) $generated@@168) (= (type $generated@@464) $generated@@79)) (or ($generated@@315 $generated@@464) (and (not (= 1 $generated@@166)) ($generated@@76 $generated@@464 $generated@@78)))) (and (=> (not ($generated@@250 $generated@@464)) (let (($generated@@465 ($generated@@160 $generated@@464)))
(let (($generated@@466 ($generated@@155 $generated@@464)))
 (and ($generated@@315 $generated@@466) ($generated@@315 $generated@@465))))) (= ($generated@@314 ($generated@@249 $generated@@463) $generated@@464) (ite ($generated@@250 $generated@@464) ($generated@@356 $generated@@182) (let (($generated@@467 ($generated@@160 $generated@@464)))
(let (($generated@@468 ($generated@@155 $generated@@464)))
(let (($generated@@469 ($generated@@151 $generated@@464)))
($generated@@272 ($generated@@272 ($generated@@341 ($generated@@356 $generated@@182) ($generated@@357 ($generated@@8 $generated@@469))) ($generated@@314 $generated@@463 $generated@@468)) ($generated@@314 $generated@@463 $generated@@467)))))))))
 :pattern ( ($generated@@314 ($generated@@249 $generated@@463) $generated@@464))
))))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@470) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@470 ($generated@@289 $generated@@471) $generated@@472) (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@182) ($generated@@0 ($generated@@95 $generated@@470 $generated@@473))) ($generated@@308 $generated@@473 $generated@@471 $generated@@472))
 :pattern ( ($generated@@95 $generated@@470 $generated@@473))
))))
 :pattern ( ($generated@@88 $generated@@470 ($generated@@289 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@475) $generated@@68)) (= (type $generated@@476) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@474 ($generated@@294 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@182) ($generated@@0 ($generated@@95 $generated@@474 $generated@@477))) ($generated@@308 $generated@@477 $generated@@475 $generated@@476))
 :pattern ( ($generated@@95 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@88 $generated@@474 ($generated@@294 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 (type $generated@@478)))
(= ($generated ($generated@@95 ($generated@@356 $generated@@479) $generated@@478)) 0))
 :pattern ( (let (($generated@@479 (type $generated@@478)))
($generated@@95 ($generated@@356 $generated@@479) $generated@@478)))
)))
(assert  (and (forall (($generated@@482 T@U) ) (! (= (type ($generated@@480 $generated@@482)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@480 $generated@@482))
)) (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@379 (type $generated@@483))))
(let (($generated@@485 ($generated@@378 (type $generated@@483))))
(= (type ($generated@@481 $generated@@483)) ($generated@@90 $generated@@485 $generated@@484))))
 :pattern ( ($generated@@481 $generated@@483))
))))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@487) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@480 $generated@@486) $generated@@487))  (and ($generated@@0 ($generated@@95 ($generated@@375 $generated@@486) ($generated@@180 ($generated@@417 $generated@@79 $generated@@487)))) (= ($generated@@95 ($generated@@481 $generated@@486) ($generated@@180 ($generated@@417 $generated@@79 $generated@@487))) ($generated@@181 ($generated@@417 $generated@@79 $generated@@487))))))
 :pattern ( ($generated@@95 ($generated@@480 $generated@@486) $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@397 (type $generated@@491))))
(let (($generated@@493 ($generated@@396 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491)) ($generated@@90 $generated@@493 $generated@@492))))
 :pattern ( ($generated@@489 $generated@@491))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) ($generated@@395 $generated@@182 $generated@@182)) (= (type $generated@@495) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@488 $generated@@494) $generated@@495))  (and ($generated@@0 ($generated@@95 ($generated@@393 $generated@@494) ($generated@@180 ($generated@@417 $generated@@79 $generated@@495)))) (= ($generated@@95 ($generated@@489 $generated@@494) ($generated@@180 ($generated@@417 $generated@@79 $generated@@495))) ($generated@@181 ($generated@@417 $generated@@79 $generated@@495))))))
 :pattern ( ($generated@@95 ($generated@@488 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(let (($generated@@499 ($generated@@378 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@377 $generated@@499 $generated@@498)) (= ($generated@@0 ($generated@@95 ($generated@@432 $generated@@496) $generated@@497)) (exists (($generated@@500 T@U) ) (!  (and (= (type $generated@@500) $generated@@499) (and ($generated@@0 ($generated@@95 ($generated@@375 $generated@@496) $generated@@500)) (= $generated@@497 ($generated@@95 ($generated@@481 $generated@@496) $generated@@500))))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@496) $generated@@500))
 :pattern ( ($generated@@95 ($generated@@481 $generated@@496) $generated@@500))
))))))
 :pattern ( ($generated@@95 ($generated@@432 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(let (($generated@@504 ($generated@@396 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@395 $generated@@504 $generated@@503)) (= ($generated@@0 ($generated@@95 ($generated@@443 $generated@@501) $generated@@502)) (exists (($generated@@505 T@U) ) (!  (and (= (type $generated@@505) $generated@@504) (and ($generated@@0 ($generated@@95 ($generated@@393 $generated@@501) $generated@@505)) (= $generated@@502 ($generated@@95 ($generated@@489 $generated@@501) $generated@@505))))
 :pattern ( ($generated@@95 ($generated@@393 $generated@@501) $generated@@505))
 :pattern ( ($generated@@95 ($generated@@489 $generated@@501) $generated@@505))
))))))
 :pattern ( ($generated@@95 ($generated@@443 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@510) $generated@@68)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@509) $generated@@513))) (and ($generated@@308 ($generated@@95 ($generated@@481 $generated@@509) $generated@@513) $generated@@511 $generated@@512) ($generated@@308 $generated@@513 $generated@@510 $generated@@512)))
 :pattern ( ($generated@@95 ($generated@@481 $generated@@509) $generated@@513))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@509) $generated@@513))
))))
 :pattern ( ($generated@@88 $generated@@509 ($generated@@506 $generated@@510 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) ($generated@@395 $generated@@182 $generated@@182)) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@393 $generated@@517) $generated@@521))) (and ($generated@@308 ($generated@@95 ($generated@@489 $generated@@517) $generated@@521) $generated@@519 $generated@@520) ($generated@@308 $generated@@521 $generated@@518 $generated@@520)))
 :pattern ( ($generated@@95 ($generated@@489 $generated@@517) $generated@@521))
 :pattern ( ($generated@@95 ($generated@@393 $generated@@517) $generated@@521))
))))
 :pattern ( ($generated@@88 $generated@@517 ($generated@@514 $generated@@518 $generated@@519) $generated@@520))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@168)
 :pattern ( ($generated@@522 $generated@@524))
)) (= (type $generated@@523) $generated@@168)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@168) (= (type $generated@@526) $generated@@79)) (= ($generated@@167 $generated@@525 $generated@@526) ($generated@@167 $generated@@523 $generated@@526)))
 :pattern ( ($generated@@167 ($generated@@522 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@93 (type $generated@@527))))
 (=> (and (and (= (type $generated@@527) ($generated@@90 $generated@@529 $generated@@2)) (= (type $generated@@528) ($generated@@90 $generated@@529 $generated@@2))) ($generated@@457 $generated@@527 $generated@@528)) (= $generated@@527 $generated@@528)))
 :pattern ( ($generated@@457 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@79) ($generated@@76 $generated@@530 $generated@@78)) (or ($generated@@250 $generated@@530) ($generated@@322 $generated@@530)))
 :pattern ( ($generated@@322 $generated@@530) ($generated@@76 $generated@@530 $generated@@78))
 :pattern ( ($generated@@250 $generated@@530) ($generated@@76 $generated@@530 $generated@@78))
)))
(assert (forall (($generated@@532 T@T) ) (! (= (type ($generated@@531 $generated@@532)) ($generated@@90 $generated@@532 $generated@@4))
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@397 (type $generated@@533))))
(let (($generated@@535 ($generated@@396 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@395 $generated@@535 $generated@@534)) (= (= $generated@@533 ($generated@@394 $generated@@535 $generated@@534)) (= ($generated@@393 $generated@@533) ($generated@@531 $generated@@535))))))
 :pattern ( ($generated@@393 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@397 (type $generated@@536))))
(let (($generated@@538 ($generated@@396 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@395 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@394 $generated@@538 $generated@@537)) (= ($generated@@443 $generated@@536) ($generated@@531 $generated@@537))))))
 :pattern ( ($generated@@443 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@397 (type $generated@@539))))
(let (($generated@@541 ($generated@@396 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@395 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@394 $generated@@541 $generated@@540)) (= ($generated@@488 $generated@@539) ($generated@@531 $generated@@182))))))
 :pattern ( ($generated@@488 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@379 (type $generated@@542))))
(let (($generated@@544 ($generated@@378 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@377 $generated@@544 $generated@@543)) (or (= $generated@@542 ($generated@@376 $generated@@544 $generated@@543)) (exists (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (and (and (= (type $generated@@545) $generated@@182) (= (type $generated@@546) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@480 $generated@@542) ($generated@@357 ($generated@@262 $generated@@545 $generated@@546)))))
 :no-pattern (type $generated@@545)
 :no-pattern (type $generated@@546)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
))))))
 :pattern ( ($generated@@480 $generated@@542))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@397 (type $generated@@547))))
(let (($generated@@549 ($generated@@396 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@395 $generated@@549 $generated@@548)) (or (= $generated@@547 ($generated@@394 $generated@@549 $generated@@548)) (exists (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (and (and (= (type $generated@@550) $generated@@182) (= (type $generated@@551) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@488 $generated@@547) ($generated@@357 ($generated@@262 $generated@@550 $generated@@551)))))
 :no-pattern (type $generated@@550)
 :no-pattern (type $generated@@551)
 :no-pattern ($generated $generated@@550)
 :no-pattern ($generated@@0 $generated@@550)
 :no-pattern ($generated $generated@@551)
 :no-pattern ($generated@@0 $generated@@551)
))))))
 :pattern ( ($generated@@488 $generated@@547))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@182) ($generated@@263 $generated@@552 $generated@@46)) (and (= ($generated@@357 ($generated@@417 $generated@@2 $generated@@552)) $generated@@552) ($generated@@76 ($generated@@417 $generated@@2 $generated@@552) $generated@@46)))
 :pattern ( ($generated@@263 $generated@@552 $generated@@46))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@182) ($generated@@263 $generated@@553 $generated@@47)) (and (= ($generated@@357 ($generated@@417 $generated@@3 $generated@@553)) $generated@@553) ($generated@@76 ($generated@@417 $generated@@3 $generated@@553) $generated@@47)))
 :pattern ( ($generated@@263 $generated@@553 $generated@@47))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@182) ($generated@@263 $generated@@554 $generated@@44)) (and (= ($generated@@357 ($generated@@417 $generated@@4 $generated@@554)) $generated@@554) ($generated@@76 ($generated@@417 $generated@@4 $generated@@554) $generated@@44)))
 :pattern ( ($generated@@263 $generated@@554 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@555) 21))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@182) ($generated@@263 $generated@@556 $generated@@45)) (and (= ($generated@@357 ($generated@@417 $generated@@555 $generated@@556)) $generated@@556) ($generated@@76 ($generated@@417 $generated@@555 $generated@@556) $generated@@45)))
 :pattern ( ($generated@@263 $generated@@556 $generated@@45))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@168) (= (type $generated@@558) $generated@@79)) (= ($generated@@167 ($generated@@249 $generated@@557) $generated@@558) ($generated@@167 $generated@@557 $generated@@558)))
 :pattern ( ($generated@@167 ($generated@@249 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@263 ($generated@@357 $generated@@559) $generated@@560) ($generated@@76 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@263 ($generated@@357 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@93 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@90 $generated@@562 $generated@@2)) (<= 0 ($generated@@340 $generated@@561))))
 :pattern ( ($generated@@340 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@334 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@333 $generated@@564)) (<= 0 ($generated@@332 $generated@@563))))
 :pattern ( ($generated@@332 $generated@@563))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (= ($generated@@565 ($generated@@506 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@506 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@68)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (= ($generated@@569 ($generated@@506 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@506 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@68) (= (type $generated@@574) $generated@@68)) (= ($generated@@86 ($generated@@506 $generated@@573 $generated@@574)) $generated@@58))
 :pattern ( ($generated@@506 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@68)) (= ($generated@@575 ($generated@@514 $generated@@577 $generated@@578)) $generated@@577))
 :pattern ( ($generated@@514 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ) (! (= (type ($generated@@579 $generated@@580)) $generated@@68)
 :pattern ( ($generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (= ($generated@@579 ($generated@@514 $generated@@581 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@514 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@68) (= (type $generated@@584) $generated@@68)) (= ($generated@@86 ($generated@@514 $generated@@583 $generated@@584)) $generated@@59))
 :pattern ( ($generated@@514 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@182) (= (type $generated@@586) $generated@@182)) (= ($generated@@146 ($generated@@262 $generated@@585 $generated@@586)) $generated@@61))
 :pattern ( ($generated@@262 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@68)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@68) (= (type $generated@@590) $generated@@68)) (= ($generated@@587 ($generated@@173 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@173 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@68)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@68)) (= ($generated@@591 ($generated@@173 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@173 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@182) (= (type $generated@@596) $generated@@182)) (= ($generated@@180 ($generated@@262 $generated@@595 $generated@@596)) $generated@@595))
 :pattern ( ($generated@@262 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@182) (= (type $generated@@598) $generated@@182)) (= ($generated@@181 ($generated@@262 $generated@@597 $generated@@598)) $generated@@598))
 :pattern ( ($generated@@262 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@168) (= (type $generated@@600) $generated@@79)) (= ($generated@@314 $generated@@599 $generated@@600) ($generated@@314 $generated@@523 $generated@@600)))
 :pattern ( ($generated@@314 ($generated@@522 $generated@@599) $generated@@600))
)))
(assert  (and (forall (($generated@@603 T@U) ) (! (= (type ($generated@@601 $generated@@603)) $generated@@68)
 :pattern ( ($generated@@601 $generated@@603))
)) (forall (($generated@@604 T@U) ($generated@@605 Int) ) (! (let (($generated@@606 ($generated@@334 (type $generated@@604))))
(= (type ($generated@@602 $generated@@604 $generated@@605)) $generated@@606))
 :pattern ( ($generated@@602 $generated@@604 $generated@@605))
))))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@333 $generated@@182)) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@607 ($generated@@601 $generated@@608) $generated@@609) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@332 $generated@@607))) ($generated@@308 ($generated@@602 $generated@@607 $generated@@610) $generated@@608 $generated@@609))
 :pattern ( ($generated@@602 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@88 $generated@@607 ($generated@@601 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@79) (= (type $generated@@613) $generated@@79)) (= ($generated@@77 ($generated@@299 $generated@@611) ($generated@@286 $generated@@612) ($generated@@286 $generated@@613)) ($generated@@286 ($generated@@77 $generated@@611 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@77 ($generated@@299 $generated@@611) ($generated@@286 $generated@@612) ($generated@@286 $generated@@613)))
)))
(assert (forall (($generated@@615 Int) ) (! (= ($generated@@614 ($generated@@89 $generated@@615)) $generated@@615)
 :pattern ( ($generated@@89 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@68)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@68) (= ($generated@@616 ($generated@@289 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@289 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@68) (= ($generated@@86 ($generated@@289 $generated@@619)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@68)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@68) (= ($generated@@620 ($generated@@294 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@294 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@68) (= ($generated@@86 ($generated@@294 $generated@@623)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@68)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@68) (= ($generated@@624 ($generated@@188 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@188 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@68) (= ($generated@@86 ($generated@@188 $generated@@627)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@68)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@68) (= ($generated@@628 ($generated@@601 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@601 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@68) (= ($generated@@86 ($generated@@601 $generated@@631)) $generated@@57))
 :pattern ( ($generated@@601 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@632)))
(= ($generated@@417 $generated@@633 ($generated@@357 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@357 $generated@@632))
)))
(assert (forall (($generated@@635 Int) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@79) (= (type $generated@@637) $generated@@79)) (< ($generated@@634 $generated@@636) ($generated@@634 ($generated@@77 $generated@@635 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@77 $generated@@635 $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 Int) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@79) (= (type $generated@@640) $generated@@79)) (< ($generated@@634 $generated@@640) ($generated@@634 ($generated@@77 $generated@@638 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@77 $generated@@638 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) $generated@@68)) (= ($generated@@76 $generated@@641 ($generated@@506 $generated@@642 $generated@@643)) (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@375 $generated@@641) $generated@@644))) (and ($generated@@263 ($generated@@95 ($generated@@481 $generated@@641) $generated@@644) $generated@@643) ($generated@@263 $generated@@644 $generated@@642)))
 :pattern ( ($generated@@95 ($generated@@481 $generated@@641) $generated@@644))
 :pattern ( ($generated@@95 ($generated@@375 $generated@@641) $generated@@644))
))))
 :pattern ( ($generated@@76 $generated@@641 ($generated@@506 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@645) ($generated@@395 $generated@@182 $generated@@182)) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) (= ($generated@@76 $generated@@645 ($generated@@514 $generated@@646 $generated@@647)) (forall (($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@393 $generated@@645) $generated@@648))) (and ($generated@@263 ($generated@@95 ($generated@@489 $generated@@645) $generated@@648) $generated@@647) ($generated@@263 $generated@@648 $generated@@646)))
 :pattern ( ($generated@@95 ($generated@@489 $generated@@645) $generated@@648))
 :pattern ( ($generated@@95 ($generated@@393 $generated@@645) $generated@@648))
))))
 :pattern ( ($generated@@76 $generated@@645 ($generated@@514 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@182) (= (type $generated@@651) $generated@@182)) (< ($generated@@649 $generated@@650) ($generated@@634 ($generated@@262 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@262 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@182) (= (type $generated@@653) $generated@@182)) (< ($generated@@649 $generated@@653) ($generated@@634 ($generated@@262 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@262 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@168) (= (type $generated@@655) $generated@@79)) (= ($generated@@314 ($generated@@249 $generated@@654) $generated@@655) ($generated@@314 $generated@@654 $generated@@655)))
 :pattern ( ($generated@@314 ($generated@@249 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@182) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) ($generated@@263 $generated@@656 ($generated@@506 $generated@@657 $generated@@658))) (and (= ($generated@@357 ($generated@@417 ($generated@@377 $generated@@182 $generated@@182) $generated@@656)) $generated@@656) ($generated@@76 ($generated@@417 ($generated@@377 $generated@@182 $generated@@182) $generated@@656) ($generated@@506 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@263 $generated@@656 ($generated@@506 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@182) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@263 $generated@@659 ($generated@@514 $generated@@660 $generated@@661))) (and (= ($generated@@357 ($generated@@417 ($generated@@395 $generated@@182 $generated@@182) $generated@@659)) $generated@@659) ($generated@@76 ($generated@@417 ($generated@@395 $generated@@182 $generated@@182) $generated@@659) ($generated@@514 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@263 $generated@@659 ($generated@@514 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@68) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@182)) ($generated@@263 $generated@@664 ($generated@@173 $generated@@662 $generated@@663))) (and (= ($generated@@357 ($generated@@417 $generated@@79 $generated@@664)) $generated@@664) ($generated@@76 ($generated@@417 $generated@@79 $generated@@664) ($generated@@173 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@263 $generated@@664 ($generated@@173 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 (type $generated@@665)))
 (not ($generated@@0 ($generated@@95 ($generated@@531 $generated@@666) $generated@@665))))
 :pattern ( (let (($generated@@666 (type $generated@@665)))
($generated@@95 ($generated@@531 $generated@@666) $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ) (! (= (type ($generated@@667 $generated@@668)) $generated@@73)
 :pattern ( ($generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@68) (= (type $generated@@670) $generated@@68)) (and (= ($generated@@86 ($generated@@173 $generated@@669 $generated@@670)) $generated@@62) (= ($generated@@667 ($generated@@173 $generated@@669 $generated@@670)) $generated@@66)))
 :pattern ( ($generated@@173 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@79) (= (type $generated@@672) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@672) (and ($generated@@322 $generated@@671) ($generated@@88 $generated@@671 $generated@@78 $generated@@672)))) ($generated@@88 ($generated@@8 ($generated@@151 $generated@@671)) $generated@@46 $generated@@672))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@151 $generated@@671)) $generated@@46 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@79) (= ($generated@@649 ($generated@@357 $generated@@673)) ($generated@@634 $generated@@673)))
 :pattern ( ($generated@@649 ($generated@@357 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@182) ($generated@@263 $generated@@674 ($generated@@89 0))) (and (= ($generated@@357 ($generated@@417 $generated@@2 $generated@@674)) $generated@@674) ($generated@@76 ($generated@@417 ($generated@@90 $generated@@182 $generated@@4) $generated@@674) ($generated@@89 0))))
 :pattern ( ($generated@@263 $generated@@674 ($generated@@89 0)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@182) (= (type $generated@@676) $generated@@68)) ($generated@@263 $generated@@675 ($generated@@289 $generated@@676))) (and (= ($generated@@357 ($generated@@417 ($generated@@90 $generated@@182 $generated@@4) $generated@@675)) $generated@@675) ($generated@@76 ($generated@@417 ($generated@@90 $generated@@182 $generated@@4) $generated@@675) ($generated@@289 $generated@@676))))
 :pattern ( ($generated@@263 $generated@@675 ($generated@@289 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@182) (= (type $generated@@678) $generated@@68)) ($generated@@263 $generated@@677 ($generated@@294 $generated@@678))) (and (= ($generated@@357 ($generated@@417 ($generated@@90 $generated@@182 $generated@@4) $generated@@677)) $generated@@677) ($generated@@76 ($generated@@417 ($generated@@90 $generated@@182 $generated@@4) $generated@@677) ($generated@@294 $generated@@678))))
 :pattern ( ($generated@@263 $generated@@677 ($generated@@294 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@182) (= (type $generated@@680) $generated@@68)) ($generated@@263 $generated@@679 ($generated@@188 $generated@@680))) (and (= ($generated@@357 ($generated@@417 ($generated@@90 $generated@@182 $generated@@2) $generated@@679)) $generated@@679) ($generated@@76 ($generated@@417 ($generated@@90 $generated@@182 $generated@@2) $generated@@679) ($generated@@188 $generated@@680))))
 :pattern ( ($generated@@263 $generated@@679 ($generated@@188 $generated@@680)))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@182) (= (type $generated@@682) $generated@@68)) ($generated@@263 $generated@@681 ($generated@@601 $generated@@682))) (and (= ($generated@@357 ($generated@@417 ($generated@@333 $generated@@182) $generated@@681)) $generated@@681) ($generated@@76 ($generated@@417 ($generated@@333 $generated@@182) $generated@@681) ($generated@@601 $generated@@682))))
 :pattern ( ($generated@@263 $generated@@681 ($generated@@601 $generated@@682)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@667 $generated@@78) $generated@@67))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@683) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@683 ($generated@@188 $generated@@684) $generated@@685) (forall (($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@683 $generated@@686)))) ($generated@@308 $generated@@686 $generated@@684 $generated@@685))
 :pattern ( ($generated@@95 $generated@@683 $generated@@686))
))))
 :pattern ( ($generated@@88 $generated@@683 ($generated@@188 $generated@@684) $generated@@685))
)))
(assert (= $generated@@187 ($generated@@286 $generated@@187)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@79) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@689) (and ($generated@@172 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@68) ($generated@@88 $generated@@687 ($generated@@173 $generated@@688 $generated@@690) $generated@@689))
 :pattern ( ($generated@@88 $generated@@687 ($generated@@173 $generated@@688 $generated@@690) $generated@@689))
))))) ($generated@@308 ($generated@@180 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@308 ($generated@@180 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (and (= (type $generated@@691) $generated@@79) (= (type $generated@@692) $generated@@68)) (= (type $generated@@693) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@693) (and ($generated@@172 $generated@@691) (exists (($generated@@694 T@U) ) (!  (and (= (type $generated@@694) $generated@@68) ($generated@@88 $generated@@691 ($generated@@173 $generated@@694 $generated@@692) $generated@@693))
 :pattern ( ($generated@@88 $generated@@691 ($generated@@173 $generated@@694 $generated@@692) $generated@@693))
))))) ($generated@@308 ($generated@@181 $generated@@691) $generated@@692 $generated@@693))
 :pattern ( ($generated@@308 ($generated@@181 $generated@@691) $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 (type $generated@@696)))
 (=> (and (and (= (type $generated@@695) ($generated@@90 $generated@@698 $generated@@2)) (= (type $generated@@697) $generated@@698)) (not (= $generated@@696 $generated@@697))) (= ($generated ($generated@@95 $generated@@695 $generated@@697)) ($generated ($generated@@95 ($generated@@341 $generated@@695 $generated@@696) $generated@@697)))))
 :pattern ( ($generated@@341 $generated@@695 $generated@@696) ($generated@@95 $generated@@695 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@79) (= (type $generated@@700) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@700) (and ($generated@@322 $generated@@699) ($generated@@88 $generated@@699 $generated@@78 $generated@@700)))) ($generated@@88 ($generated@@155 $generated@@699) $generated@@78 $generated@@700))
 :pattern ( ($generated@@88 ($generated@@155 $generated@@699) $generated@@78 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@79) (= (type $generated@@702) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@270 $generated@@702) (and ($generated@@322 $generated@@701) ($generated@@88 $generated@@701 $generated@@78 $generated@@702)))) ($generated@@88 ($generated@@160 $generated@@701) $generated@@78 $generated@@702))
 :pattern ( ($generated@@88 ($generated@@160 $generated@@701) $generated@@78 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@182) (= (type $generated@@704) $generated@@182)) (= ($generated@@262 ($generated@@286 $generated@@703) ($generated@@286 $generated@@704)) ($generated@@286 ($generated@@262 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@262 ($generated@@286 $generated@@703) ($generated@@286 $generated@@704)))
)))
(assert (forall (($generated@@705 Int) ) (! (= ($generated@@357 ($generated@@8 ($generated@@299 $generated@@705))) ($generated@@286 ($generated@@357 ($generated@@8 $generated@@705))))
 :pattern ( ($generated@@357 ($generated@@8 ($generated@@299 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ) (! (= ($generated@@357 ($generated@@286 $generated@@706)) ($generated@@286 ($generated@@357 $generated@@706)))
 :pattern ( ($generated@@357 ($generated@@286 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (! (let (($generated@@708 ($generated@@334 (type $generated@@707))))
 (=> (and (= (type $generated@@707) ($generated@@333 $generated@@708)) (= ($generated@@332 $generated@@707) 0)) (= $generated@@707 ($generated@@331 $generated@@708))))
 :pattern ( ($generated@@332 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (! (let (($generated@@712 (type $generated@@710)))
 (=> (and (and (= (type $generated@@709) ($generated@@90 $generated@@712 $generated@@2)) (= (type $generated@@711) $generated@@2)) (<= 0 ($generated $generated@@711))) (= ($generated@@340 ($generated@@96 $generated@@709 $generated@@710 $generated@@711)) (+ (- ($generated@@340 $generated@@709) ($generated ($generated@@95 $generated@@709 $generated@@710))) ($generated $generated@@711)))))
 :pattern ( ($generated@@340 ($generated@@96 $generated@@709 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@714) $generated@@2)) ($generated@@88 $generated@@714 $generated@@46 $generated@@713))
 :pattern ( ($generated@@88 $generated@@714 $generated@@46 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@715) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@716) $generated@@3)) ($generated@@88 $generated@@716 $generated@@47 $generated@@715))
 :pattern ( ($generated@@88 $generated@@716 $generated@@47 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@718) $generated@@4)) ($generated@@88 $generated@@718 $generated@@44 $generated@@717))
 :pattern ( ($generated@@88 $generated@@718 $generated@@44 $generated@@717))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@720) $generated@@555)) ($generated@@88 $generated@@720 $generated@@45 $generated@@719))
 :pattern ( ($generated@@88 $generated@@720 $generated@@45 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@722) $generated@@182)) ($generated@@88 $generated@@722 $generated@@48 $generated@@721))
 :pattern ( ($generated@@88 $generated@@722 $generated@@48 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@723) ($generated@@333 $generated@@182)) (= (type $generated@@724) $generated@@68)) (= ($generated@@76 $generated@@723 ($generated@@601 $generated@@724)) (forall (($generated@@725 Int) ) (!  (=> (and (<= 0 $generated@@725) (< $generated@@725 ($generated@@332 $generated@@723))) ($generated@@263 ($generated@@602 $generated@@723 $generated@@725) $generated@@724))
 :pattern ( ($generated@@602 $generated@@723 $generated@@725))
))))
 :pattern ( ($generated@@76 $generated@@723 ($generated@@601 $generated@@724)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 Int) ) (!  (=> (= (type $generated@@727) ($generated@@333 $generated@@182)) (=> (and (<= 0 $generated@@728) (< $generated@@728 ($generated@@332 $generated@@727))) (< ($generated@@634 ($generated@@417 $generated@@79 ($generated@@602 $generated@@727 $generated@@728))) ($generated@@726 $generated@@727))))
 :pattern ( ($generated@@634 ($generated@@417 $generated@@79 ($generated@@602 $generated@@727 $generated@@728))))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (= (type $generated@@729) ($generated@@377 $generated@@182 $generated@@182)) (= (type $generated@@730) $generated@@68)) (= (type $generated@@731) $generated@@68)) ($generated@@76 $generated@@729 ($generated@@506 $generated@@730 $generated@@731))) (and (and ($generated@@76 ($generated@@375 $generated@@729) ($generated@@289 $generated@@730)) ($generated@@76 ($generated@@432 $generated@@729) ($generated@@289 $generated@@731))) ($generated@@76 ($generated@@480 $generated@@729) ($generated@@289 ($generated@@173 $generated@@730 $generated@@731)))))
 :pattern ( ($generated@@76 $generated@@729 ($generated@@506 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) ($generated@@395 $generated@@182 $generated@@182)) (= (type $generated@@733) $generated@@68)) (= (type $generated@@734) $generated@@68)) ($generated@@76 $generated@@732 ($generated@@514 $generated@@733 $generated@@734))) (and (and ($generated@@76 ($generated@@393 $generated@@732) ($generated@@294 $generated@@733)) ($generated@@76 ($generated@@443 $generated@@732) ($generated@@294 $generated@@734))) ($generated@@76 ($generated@@488 $generated@@732) ($generated@@294 ($generated@@173 $generated@@733 $generated@@734)))))
 :pattern ( ($generated@@76 $generated@@732 ($generated@@514 $generated@@733 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@2) ($generated@@76 $generated@@735 $generated@@46))
 :pattern ( ($generated@@76 $generated@@735 $generated@@46))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@3) ($generated@@76 $generated@@736 $generated@@47))
 :pattern ( ($generated@@76 $generated@@736 $generated@@47))
)))
(assert (forall (($generated@@737 T@U) ) (!  (=> (= (type $generated@@737) $generated@@4) ($generated@@76 $generated@@737 $generated@@44))
 :pattern ( ($generated@@76 $generated@@737 $generated@@44))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@555) ($generated@@76 $generated@@738 $generated@@45))
 :pattern ( ($generated@@76 $generated@@738 $generated@@45))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@182) ($generated@@76 $generated@@739 $generated@@48))
 :pattern ( ($generated@@76 $generated@@739 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 (T@U) Bool)
(assert  (and (and (= (type $generated@@740) ($generated@@195 $generated@@91 $generated@@4)) (= (type $generated@@741) $generated@@91)) (= (type $generated@@742) ($generated@@90 $generated@@91 $generated@@92))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@744  (=> (= $generated@@740 ($generated@@194 $generated@@741 $generated@@742 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (let (($generated@@745 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@745) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@745) (=> ($generated@@250 $generated@@745) ($generated@@0 ($generated@@286 ($generated@@11 true)))))))) (=> (let (($generated@@746 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@746) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@746) (=> ($generated@@250 $generated@@746) ($generated@@0 ($generated@@286 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@747 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@747) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@747) (=> (not ($generated@@250 $generated@@747)) (let (($generated@@748 ($generated@@155 $generated@@747)))
($generated@@167 ($generated@@249 ($generated@@249 $generated@@523)) $generated@@748))))))) (=> (let (($generated@@749 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@749) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@749) (=> (not ($generated@@250 $generated@@749)) (let (($generated@@750 ($generated@@155 $generated@@749)))
($generated@@167 ($generated@@249 ($generated@@249 $generated@@523)) $generated@@750)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@751 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@751) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@751) (=> (not ($generated@@250 $generated@@751)) (let (($generated@@752 ($generated@@160 $generated@@751)))
($generated@@167 ($generated@@249 ($generated@@249 $generated@@523)) $generated@@752))))))) (=> (let (($generated@@753 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@753) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@753) (=> (not ($generated@@250 $generated@@753)) (let (($generated@@754 ($generated@@160 $generated@@753)))
($generated@@167 ($generated@@249 ($generated@@249 $generated@@523)) $generated@@754)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@755 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@755) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@755) (=> (not ($generated@@250 $generated@@755)) (let (($generated@@756 ($generated@@155 $generated@@755)))
(let (($generated@@757 ($generated@@151 $generated@@755)))
 (or ($generated@@252 $generated@@756 $generated@@187) (<= $generated@@757 ($generated@@151 $generated@@756)))))))))) (=> (let (($generated@@758 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@758) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@758) (=> (not ($generated@@250 $generated@@758)) (let (($generated@@759 ($generated@@155 $generated@@758)))
(let (($generated@@760 ($generated@@151 $generated@@758)))
 (or ($generated@@252 $generated@@759 $generated@@187) (<= $generated@@760 ($generated@@151 $generated@@759))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@761 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@761) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@761) (=> (not ($generated@@250 $generated@@761)) (let (($generated@@762 ($generated@@160 $generated@@761)))
(let (($generated@@763 ($generated@@151 $generated@@761)))
 (or ($generated@@252 $generated@@762 $generated@@187) (<= $generated@@763 ($generated@@151 $generated@@762)))))))))) (=> (let (($generated@@764 ($generated@@286 $generated@@285)))
 (=> ($generated@@169 $generated@@764) (or ($generated@@167 ($generated@@249 $generated@@523) $generated@@764) (=> (not ($generated@@250 $generated@@764)) (let (($generated@@765 ($generated@@160 $generated@@764)))
(let (($generated@@766 ($generated@@151 $generated@@764)))
 (or ($generated@@252 $generated@@765 $generated@@187) (<= $generated@@766 ($generated@@151 $generated@@765))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@767 ($generated@@286 $generated@@285)))
($generated@@457 ($generated@@314 ($generated@@249 ($generated@@249 $generated@@523)) $generated@@767) ($generated@@356 $generated@@182)))))))))))))))))
(let (($generated@@768  (=> (and (and ($generated@@270 $generated@@742) ($generated@@743 $generated@@742)) (and (= 2 $generated@@166) (= (ControlFlow 0 8) 2))) $generated@@744)))
$generated@@768)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 () Bool)
(declare-fun $generated@@76 () Bool)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 (T@U Int) Bool)
(declare-fun $generated@@79 (Int) Int)
(declare-fun $generated@@80 (T@U Int) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 () Int)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (Int) T@U)
(declare-fun $generated@@105 (T@T T@T) T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@U T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@350 (T@T T@T) T@U)
(declare-fun $generated@@351 (T@T T@T) T@T)
(declare-fun $generated@@352 (T@T) T@T)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@367 (T@U T@U) Bool)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@431 (T@T T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@478 (T@T) T@U)
(declare-fun $generated@@502 () T@T)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@653 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (= ($generated@@1 $generated@@84) 11) (= (type $generated@@77) $generated@@84)) (forall (($generated@@85 T@U) ($generated@@86 Int) ) (! (= (type ($generated@@80 $generated@@85 $generated@@86)) $generated@@84)
 :pattern ( ($generated@@80 $generated@@85 $generated@@86))
))))
(assert  (=> (<= 0 $generated@@74) (=> (or $generated@@75 (not (= 0 $generated@@74))) (and (and $generated@@76 (let (($generated@@87 $generated@@77))
 (and ($generated@@78 $generated@@87 ($generated@@79 4)) (let (($generated@@88 ($generated@@80 $generated@@87 ($generated@@79 4))))
 (and ($generated@@78 $generated@@88 ($generated@@79 3)) (let (($generated@@89 ($generated@@80 $generated@@88 ($generated@@79 3))))
($generated@@81 $generated@@89))))))) (= $generated@@82 (let (($generated@@90 $generated@@77))
(let (($generated@@91 ($generated@@80 $generated@@90 ($generated@@79 4))))
(let (($generated@@92 ($generated@@80 $generated@@91 ($generated@@79 3))))
(let (($generated@@93 ($generated@@83 $generated@@92)))
$generated@@93)))))))))
(assert  (=> (<= 0 $generated@@74) (=> (or $generated@@75 (not (= 0 $generated@@74))) (and (and $generated@@76 (let (($generated@@94 $generated@@77))
 (and ($generated@@78 $generated@@94 ($generated@@79 4)) (let (($generated@@95 ($generated@@80 $generated@@94 ($generated@@79 4))))
 (and ($generated@@78 $generated@@95 ($generated@@79 3)) (let (($generated@@96 ($generated@@80 $generated@@95 ($generated@@79 3))))
($generated@@81 $generated@@96))))))) (= $generated@@82 (let (($generated@@97 $generated@@77))
(let (($generated@@98 ($generated@@80 $generated@@97 ($generated@@79 4))))
(let (($generated@@99 ($generated@@80 $generated@@98 ($generated@@79 3))))
(let (($generated@@100 ($generated@@83 $generated@@99)))
$generated@@100)))))))))
(assert (forall (($generated@@102 T@U) ) (! (= (type ($generated@@101 $generated@@102)) $generated@@67)
 :pattern ( ($generated@@101 $generated@@102))
)))
(assert (= ($generated@@101 $generated@@44) $generated@@49))
(assert (= ($generated@@101 $generated@@45) $generated@@50))
(assert (= ($generated@@101 $generated@@46) $generated@@51))
(assert (= ($generated@@101 $generated@@47) $generated@@52))
(assert (= ($generated@@101 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@105 $generated@@114 $generated@@115)) 12)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@108 ($generated@@105 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@105 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@109 ($generated@@105 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@105 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@109 (type $generated@@120))))
(= (type ($generated@@110 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@110 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@111 $generated@@123 $generated@@124 $generated@@125)) ($generated@@105 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@109 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@110 ($generated@@111 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@110 ($generated@@111 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@110 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@110 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@106) 13)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@69 (type $generated@@141))))
(= (type ($generated@@112 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@112 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@107) 14)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@113 $generated@@143 $generated@@144 $generated@@145)) $generated@@107)
 :pattern ( ($generated@@113 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@69 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@112 ($generated@@113 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@112 ($generated@@113 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@112 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@112 ($generated@@113 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@112 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 Int) ) (! (= (type ($generated@@104 $generated@@158)) $generated@@66)
 :pattern ( ($generated@@104 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
 :pattern ( ($generated@@103 $generated@@159 ($generated@@104 0) $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@104 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@104 0)))
)))
(assert  (and (= ($generated@@1 $generated@@165) 15) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@166 $generated@@167)) $generated@@66)
 :pattern ( ($generated@@164 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (and (= (type $generated@@168) $generated@@66) (= (type $generated@@169) $generated@@66)) (= (type $generated@@170) $generated@@165)) ($generated@@161 $generated@@170 ($generated@@164 $generated@@168 $generated@@169))) ($generated@@163 $generated@@170))
 :pattern ( ($generated@@163 $generated@@170) ($generated@@161 $generated@@170 ($generated@@164 $generated@@168 $generated@@169)))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@84)
 :pattern ( ($generated@@172 $generated@@174))
)) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@84)
 :pattern ( ($generated@@173 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@165) (= (type $generated@@177) $generated@@165)) true) (= ($generated@@171 $generated@@176 $generated@@177)  (and (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)) (= ($generated@@173 $generated@@176) ($generated@@173 $generated@@177)))))
 :pattern ( ($generated@@171 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@66)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@105 $generated@@84 $generated@@2)) (= (type $generated@@182) $generated@@66)) ($generated@@161 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@161 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@106 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@69 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@106) (= (type $generated@@233) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@234) ($generated@@68 $generated@@4))) (= (type $generated@@236) $generated@@106)) (= (type $generated@@237) ($generated@@68 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@185 $generated@@106 $generated@@4))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@69 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@106) (= (type $generated@@245) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@246) ($generated@@68 $generated@@4))) (= (type $generated@@248) $generated@@106)) (= (type $generated@@249) ($generated@@68 $generated@@250))) (= ($generated@@0 ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@112 ($generated@@110 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@183 ($generated@@239 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@165)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@66) (= (type $generated@@256) $generated@@66)) (= (type $generated@@257) $generated@@84)) (= (type $generated@@258) $generated@@84)) (= ($generated@@161 ($generated@@251 $generated@@257 $generated@@258) ($generated@@164 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@161 ($generated@@251 $generated@@257 $generated@@258) ($generated@@164 $generated@@255 $generated@@256)))
)))
(assert (= (type $generated@@261) $generated@@66))
(assert  (=> true (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@84) (or ($generated@@260 $generated@@262) ($generated@@252 $generated@@262 $generated@@261))) true)
 :pattern ( ($generated@@259 $generated@@262))
))))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@108 (type $generated@@264))))
(= (type ($generated@@263 $generated@@264 $generated@@265)) ($generated@@105 $generated@@266 $generated@@2)))
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
 (=> (and (= (type $generated@@267) ($generated@@105 $generated@@270 $generated@@2)) (= (type $generated@@268) ($generated@@105 $generated@@270 $generated@@2))) (= ($generated ($generated@@110 ($generated@@263 $generated@@267 $generated@@268) $generated@@269)) (+ ($generated ($generated@@110 $generated@@267 $generated@@269)) ($generated ($generated@@110 $generated@@268 $generated@@269))))))
 :pattern ( ($generated@@110 ($generated@@263 $generated@@267 $generated@@268) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@165) (= (type $generated@@272) $generated@@165)) (= ($generated@@171 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@171 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@66)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@105 $generated@@84 $generated@@4)) (= (type $generated@@276) $generated@@66)) (= ($generated@@161 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@84) ($generated@@0 ($generated@@110 $generated@@275 $generated@@277))) ($generated@@252 $generated@@277 $generated@@276))
 :pattern ( ($generated@@110 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@161 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@66)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@105 $generated@@84 $generated@@4)) (= (type $generated@@281) $generated@@66)) (= ($generated@@161 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@84) ($generated@@0 ($generated@@110 $generated@@280 $generated@@282))) ($generated@@252 $generated@@282 $generated@@281))
 :pattern ( ($generated@@110 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@161 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@283 Int) ) (! (= ($generated@@79 $generated@@283) $generated@@283)
 :pattern ( ($generated@@79 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@66) (= (type $generated@@291) $generated@@66)) (= (type $generated@@292) $generated@@84)) (= (type $generated@@293) $generated@@84)) (= (type $generated@@294) ($generated@@105 $generated@@106 $generated@@107))) ($generated@@288 $generated@@294)) (= ($generated@@103 ($generated@@251 $generated@@292 $generated@@293) ($generated@@164 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@103 ($generated@@251 $generated@@292 $generated@@293) ($generated@@164 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@70)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@165) (= ($generated@@163 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@163 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@165) ($generated@@163 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@84) (= (type $generated@@300) $generated@@84)) (= $generated@@298 ($generated@@251 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@163 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (! (let (($generated@@313 (type $generated@@312)))
(= (type ($generated@@310 $generated@@311 $generated@@312)) ($generated@@105 $generated@@313 $generated@@2)))
 :pattern ( ($generated@@310 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (let (($generated@@316 (type $generated@@315)))
 (=> (= (type $generated@@314) ($generated@@105 $generated@@316 $generated@@2)) (= ($generated@@309 ($generated@@310 $generated@@314 $generated@@315)) (+ ($generated@@309 $generated@@314) 1))))
 :pattern ( ($generated@@309 ($generated@@310 $generated@@314 $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@84)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@66) (= (type $generated@@321) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@289 ($generated@@317 $generated@@319) $generated@@320 $generated@@321) ($generated@@103 $generated@@319 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@289 ($generated@@317 $generated@@319) $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@105 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@108 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@105 $generated@@325 $generated@@2)) (and (= (= ($generated@@309 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@309 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@110 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@309 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (= (type ($generated@@327 $generated@@329)) ($generated@@105 $generated@@84 $generated@@2))
 :pattern ( ($generated@@327 $generated@@329))
)))
(assert  (=> true (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@84) (or ($generated@@328 $generated@@330) ($generated@@252 $generated@@330 $generated@@261))) ($generated@@161 ($generated@@327 $generated@@330) ($generated@@178 $generated@@46)))
 :pattern ( ($generated@@327 $generated@@330))
))))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 18)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@105 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@110 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@110 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert  (and (and (and (and (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (= ($generated@@1 ($generated@@351 $generated@@354 $generated@@355)) 19)) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@351 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@351 $generated@@358 $generated@@359)) $generated@@359)
 :pattern ( ($generated@@351 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@352 (type $generated@@360))))
(= (type ($generated@@349 $generated@@360)) ($generated@@105 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@360))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= (type ($generated@@350 $generated@@362 $generated@@363)) ($generated@@351 $generated@@362 $generated@@363))
 :pattern ( ($generated@@350 $generated@@362 $generated@@363))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@T) ) (! (let (($generated@@366 (type $generated@@364)))
 (not ($generated@@0 ($generated@@110 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364))))
 :pattern ( (let (($generated@@366 (type $generated@@364)))
($generated@@110 ($generated@@349 ($generated@@350 $generated@@366 $generated@@365)) $generated@@364)))
)))
(assert  (=> true (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@84) (or ($generated@@81 $generated@@368) (and ($generated@@252 $generated@@368 $generated@@261) (and ($generated@@259 $generated@@368) (not ($generated@@367 ($generated@@327 $generated@@368) ($generated@@322 $generated@@84))))))) (let (($generated@@369 ($generated@@83 $generated@@368)))
 (and (> ($generated ($generated@@110 ($generated@@327 $generated@@368) ($generated@@317 ($generated@@8 $generated@@369)))) 0) (forall (($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@2) true) (> ($generated ($generated@@110 ($generated@@327 $generated@@368) ($generated@@317 $generated@@370))) 0)) (<= $generated@@369 ($generated $generated@@370)))
 :pattern ( ($generated@@110 ($generated@@327 $generated@@368) ($generated@@317 $generated@@370)))
)))))
 :pattern ( ($generated@@83 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@108 (type $generated@@371))))
 (=> (and (= (type $generated@@371) ($generated@@105 $generated@@373 $generated@@2)) (= (type $generated@@372) ($generated@@105 $generated@@373 $generated@@2))) (= ($generated@@309 ($generated@@263 $generated@@371 $generated@@372)) (+ ($generated@@309 $generated@@371) ($generated@@309 $generated@@372)))))
 :pattern ( ($generated@@309 ($generated@@263 $generated@@371 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@108 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@105 $generated@@375 $generated@@2)) (= ($generated@@179 $generated@@374) (forall (($generated@@376 T@U) ) (!  (=> (= (type $generated@@376) $generated@@375) (and (<= 0 ($generated ($generated@@110 $generated@@374 $generated@@376))) (<= ($generated ($generated@@110 $generated@@374 $generated@@376)) ($generated@@309 $generated@@374))))
 :pattern ( ($generated@@110 $generated@@374 $generated@@376))
)))))
 :pattern ( ($generated@@179 $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
 (=> (= (type $generated@@377) ($generated@@105 $generated@@379 $generated@@2)) (= ($generated ($generated@@110 ($generated@@310 $generated@@377 $generated@@378) $generated@@378)) (+ ($generated ($generated@@110 $generated@@377 $generated@@378)) 1))))
 :pattern ( ($generated@@310 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@381)))
 (=> (and (and (= (type $generated@@380) ($generated@@105 $generated@@383 $generated@@2)) (= (type $generated@@382) $generated@@383)) (< 0 ($generated ($generated@@110 $generated@@380 $generated@@382)))) (< 0 ($generated ($generated@@110 ($generated@@310 $generated@@380 $generated@@381) $generated@@382)))))
 :pattern ( ($generated@@310 $generated@@380 $generated@@381) ($generated@@110 $generated@@380 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@335 (type $generated@@384))))
(let (($generated@@386 ($generated@@334 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@333 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@332 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@110 ($generated@@331 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@331 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@335 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@105 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@335 (type $generated@@391))))
(let (($generated@@393 ($generated@@334 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@333 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@332 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@110 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@353 (type $generated@@395))))
(let (($generated@@397 ($generated@@352 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@351 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@350 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@110 ($generated@@349 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@349 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@353 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@105 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@353 (type $generated@@402))))
(let (($generated@@404 ($generated@@352 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@351 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@350 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@110 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@407)))
 (=> (and (= (type $generated@@406) ($generated@@105 $generated@@409 $generated@@2)) (= (type $generated@@408) $generated@@409)) (= (< 0 ($generated ($generated@@110 ($generated@@310 $generated@@406 $generated@@407) $generated@@408)))  (or (= $generated@@408 $generated@@407) (< 0 ($generated ($generated@@110 $generated@@406 $generated@@408)))))))
 :pattern ( ($generated@@110 ($generated@@310 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@105 $generated@@84 $generated@@2)) (= (type $generated@@411) $generated@@66)) (= ($generated@@161 $generated@@410 ($generated@@178 $generated@@411)) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@84) (< 0 ($generated ($generated@@110 $generated@@410 $generated@@412)))) ($generated@@252 $generated@@412 $generated@@411))
 :pattern ( ($generated@@110 $generated@@410 $generated@@412))
))))
 :pattern ( ($generated@@161 $generated@@410 ($generated@@178 $generated@@411)))
)))
(assert  (=> true (forall (($generated@@413 T@U) ($generated@@414 Int) ) (!  (=> (and (= (type $generated@@413) $generated@@84) (or ($generated@@78 $generated@@413 $generated@@414) (and ($generated@@252 $generated@@413 $generated@@261) ($generated@@259 $generated@@413)))) (and (let (($generated@@415 ($generated@@80 $generated@@413 $generated@@414)))
 (and ($generated@@259 $generated@@415) ($generated@@367 ($generated@@327 $generated@@415) ($generated@@263 ($generated@@327 $generated@@413) ($generated@@310 ($generated@@322 $generated@@84) ($generated@@317 ($generated@@8 $generated@@414))))))) ($generated@@252 ($generated@@80 $generated@@413 $generated@@414) $generated@@261)))
 :pattern ( ($generated@@80 $generated@@413 $generated@@414))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@108 (type $generated@@416))))
 (=> (and (= (type $generated@@416) ($generated@@105 $generated@@418 $generated@@2)) (= (type $generated@@417) ($generated@@105 $generated@@418 $generated@@2))) (= ($generated@@367 $generated@@416 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (= ($generated ($generated@@110 $generated@@416 $generated@@419)) ($generated ($generated@@110 $generated@@417 $generated@@419))))
 :pattern ( ($generated@@110 $generated@@416 $generated@@419))
 :pattern ( ($generated@@110 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@367 $generated@@416 $generated@@417))
)))
(assert  (=> (<= 0 $generated@@74) (=> (or $generated@@75 (not (= 0 $generated@@74))) (= ($generated@@79 $generated@@82) ($generated@@79 3)))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@105 $generated@@84 $generated@@4)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@420 ($generated@@273 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@84) ($generated@@0 ($generated@@110 $generated@@420 $generated@@423))) ($generated@@289 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@110 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@103 $generated@@420 ($generated@@273 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (= (type $generated@@424) ($generated@@105 $generated@@84 $generated@@4)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@424 ($generated@@278 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@84) ($generated@@0 ($generated@@110 $generated@@424 $generated@@427))) ($generated@@289 $generated@@427 $generated@@425 $generated@@426))
 :pattern ( ($generated@@110 $generated@@424 $generated@@427))
))))
 :pattern ( ($generated@@103 $generated@@424 ($generated@@278 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(= ($generated ($generated@@110 ($generated@@322 $generated@@429) $generated@@428)) 0))
 :pattern ( (let (($generated@@429 (type $generated@@428)))
($generated@@110 ($generated@@322 $generated@@429) $generated@@428)))
)))
(assert  (and (and (forall (($generated@@433 T@U) ) (! (= (type ($generated@@430 $generated@@433)) ($generated@@105 $generated@@84 $generated@@4))
 :pattern ( ($generated@@430 $generated@@433))
)) (forall (($generated@@434 T@T) ($generated@@435 T@U) ) (! (= (type ($generated@@431 $generated@@434 $generated@@435)) $generated@@434)
 :pattern ( ($generated@@431 $generated@@434 $generated@@435))
))) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@335 (type $generated@@436))))
(let (($generated@@438 ($generated@@334 (type $generated@@436))))
(= (type ($generated@@432 $generated@@436)) ($generated@@105 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@432 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@333 $generated@@84 $generated@@84)) (= (type $generated@@440) $generated@@84)) (= ($generated@@0 ($generated@@110 ($generated@@430 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@110 ($generated@@331 $generated@@439) ($generated@@172 ($generated@@431 $generated@@165 $generated@@440)))) (= ($generated@@110 ($generated@@432 $generated@@439) ($generated@@172 ($generated@@431 $generated@@165 $generated@@440))) ($generated@@173 ($generated@@431 $generated@@165 $generated@@440))))))
 :pattern ( ($generated@@110 ($generated@@430 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@105 $generated@@84 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@353 (type $generated@@444))))
(let (($generated@@446 ($generated@@352 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@105 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@351 $generated@@84 $generated@@84)) (= (type $generated@@448) $generated@@84)) (= ($generated@@0 ($generated@@110 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@110 ($generated@@349 $generated@@447) ($generated@@172 ($generated@@431 $generated@@165 $generated@@448)))) (= ($generated@@110 ($generated@@442 $generated@@447) ($generated@@172 ($generated@@431 $generated@@165 $generated@@448))) ($generated@@173 ($generated@@431 $generated@@165 $generated@@448))))))
 :pattern ( ($generated@@110 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@334 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@110 ($generated@@388 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@110 ($generated@@331 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@110 ($generated@@432 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@110 ($generated@@331 $generated@@449) $generated@@453))
 :pattern ( ($generated@@110 ($generated@@432 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@110 ($generated@@388 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@352 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@351 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@110 ($generated@@399 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@110 ($generated@@349 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@110 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@110 ($generated@@349 $generated@@454) $generated@@458))
 :pattern ( ($generated@@110 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@110 ($generated@@399 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@333 $generated@@84 $generated@@84)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) $generated@@66)) (= (type $generated@@465) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@84) ($generated@@0 ($generated@@110 ($generated@@331 $generated@@462) $generated@@466))) (and ($generated@@289 ($generated@@110 ($generated@@432 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@289 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@110 ($generated@@432 $generated@@462) $generated@@466))
 :pattern ( ($generated@@110 ($generated@@331 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@103 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@351 $generated@@84 $generated@@84)) (= (type $generated@@471) $generated@@66)) (= (type $generated@@472) $generated@@66)) (= (type $generated@@473) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@84) ($generated@@0 ($generated@@110 ($generated@@349 $generated@@470) $generated@@474))) (and ($generated@@289 ($generated@@110 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@289 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@110 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@110 ($generated@@349 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@103 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@108 (type $generated@@475))))
 (=> (and (and (= (type $generated@@475) ($generated@@105 $generated@@477 $generated@@2)) (= (type $generated@@476) ($generated@@105 $generated@@477 $generated@@2))) ($generated@@367 $generated@@475 $generated@@476)) (= $generated@@475 $generated@@476)))
 :pattern ( ($generated@@367 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@479 T@T) ) (! (= (type ($generated@@478 $generated@@479)) ($generated@@105 $generated@@479 $generated@@4))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@353 (type $generated@@480))))
(let (($generated@@482 ($generated@@352 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@351 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@350 $generated@@482 $generated@@481)) (= ($generated@@349 $generated@@480) ($generated@@478 $generated@@482))))))
 :pattern ( ($generated@@349 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@353 (type $generated@@483))))
(let (($generated@@485 ($generated@@352 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@351 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@350 $generated@@485 $generated@@484)) (= ($generated@@399 $generated@@483) ($generated@@478 $generated@@484))))))
 :pattern ( ($generated@@399 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@353 (type $generated@@486))))
(let (($generated@@488 ($generated@@352 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@351 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@350 $generated@@488 $generated@@487)) (= ($generated@@441 $generated@@486) ($generated@@478 $generated@@84))))))
 :pattern ( ($generated@@441 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@335 (type $generated@@489))))
(let (($generated@@491 ($generated@@334 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@333 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@332 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@84) (= (type $generated@@493) $generated@@84)) ($generated@@0 ($generated@@110 ($generated@@430 $generated@@489) ($generated@@317 ($generated@@251 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@430 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@353 (type $generated@@494))))
(let (($generated@@496 ($generated@@352 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@351 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@350 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@84) (= (type $generated@@498) $generated@@84)) ($generated@@0 ($generated@@110 ($generated@@441 $generated@@494) ($generated@@317 ($generated@@251 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@441 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@84) ($generated@@252 $generated@@499 $generated@@46)) (and (= ($generated@@317 ($generated@@431 $generated@@2 $generated@@499)) $generated@@499) ($generated@@161 ($generated@@431 $generated@@2 $generated@@499) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@499 $generated@@46))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@84) ($generated@@252 $generated@@500 $generated@@47)) (and (= ($generated@@317 ($generated@@431 $generated@@3 $generated@@500)) $generated@@500) ($generated@@161 ($generated@@431 $generated@@3 $generated@@500) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@500 $generated@@47))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@84) ($generated@@252 $generated@@501 $generated@@44)) (and (= ($generated@@317 ($generated@@431 $generated@@4 $generated@@501)) $generated@@501) ($generated@@161 ($generated@@431 $generated@@4 $generated@@501) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@501 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@502) 20))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@84) ($generated@@252 $generated@@503 $generated@@45)) (and (= ($generated@@317 ($generated@@431 $generated@@502 $generated@@503)) $generated@@503) ($generated@@161 ($generated@@431 $generated@@502 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@252 ($generated@@317 $generated@@504) $generated@@505) ($generated@@161 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@252 ($generated@@317 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@108 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@105 $generated@@507 $generated@@2)) (<= 0 ($generated@@309 $generated@@506))))
 :pattern ( ($generated@@309 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@304 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@303 $generated@@509)) (<= 0 ($generated@@302 $generated@@508))))
 :pattern ( ($generated@@302 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@459 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@459 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@514 ($generated@@459 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@459 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@101 ($generated@@459 $generated@@518 $generated@@519)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@467 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@467 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@467 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@467 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@101 ($generated@@467 $generated@@528 $generated@@529)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@84) (= (type $generated@@531) $generated@@84)) (= ($generated@@295 ($generated@@251 $generated@@530 $generated@@531)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@66) (= (type $generated@@535) $generated@@66)) (= ($generated@@532 ($generated@@164 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@164 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= ($generated@@536 ($generated@@164 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@164 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@84) (= (type $generated@@541) $generated@@84)) (= ($generated@@172 ($generated@@251 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@251 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@84) (= (type $generated@@543) $generated@@84)) (= ($generated@@173 ($generated@@251 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@251 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@304 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@303 $generated@@84)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@302 $generated@@550))) ($generated@@289 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@103 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@104 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@104 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@273 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@273 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@101 ($generated@@273 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@66)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@66) (= ($generated@@560 ($generated@@278 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@278 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@101 ($generated@@278 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@66)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@66) (= ($generated@@564 ($generated@@178 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@178 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@101 ($generated@@178 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@66)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@66) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@101 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
(= ($generated@@431 $generated@@573 ($generated@@317 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@317 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@333 $generated@@84 $generated@@84)) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) $generated@@66)) (= ($generated@@161 $generated@@574 ($generated@@459 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@84) ($generated@@0 ($generated@@110 ($generated@@331 $generated@@574) $generated@@577))) (and ($generated@@252 ($generated@@110 ($generated@@432 $generated@@574) $generated@@577) $generated@@576) ($generated@@252 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@110 ($generated@@432 $generated@@574) $generated@@577))
 :pattern ( ($generated@@110 ($generated@@331 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@161 $generated@@574 ($generated@@459 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@351 $generated@@84 $generated@@84)) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) $generated@@66)) (= ($generated@@161 $generated@@578 ($generated@@467 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@84) ($generated@@0 ($generated@@110 ($generated@@349 $generated@@578) $generated@@581))) (and ($generated@@252 ($generated@@110 ($generated@@442 $generated@@578) $generated@@581) $generated@@580) ($generated@@252 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@110 ($generated@@442 $generated@@578) $generated@@581))
 :pattern ( ($generated@@110 ($generated@@349 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@161 $generated@@578 ($generated@@467 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@84) (= (type $generated@@585) $generated@@84)) (< ($generated@@582 $generated@@584) ($generated@@583 ($generated@@251 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@251 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@84) (= (type $generated@@587) $generated@@84)) (< ($generated@@582 $generated@@587) ($generated@@583 ($generated@@251 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@251 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@84) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@66)) ($generated@@252 $generated@@588 ($generated@@459 $generated@@589 $generated@@590))) (and (= ($generated@@317 ($generated@@431 ($generated@@333 $generated@@84 $generated@@84) $generated@@588)) $generated@@588) ($generated@@161 ($generated@@431 ($generated@@333 $generated@@84 $generated@@84) $generated@@588) ($generated@@459 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@252 $generated@@588 ($generated@@459 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@84) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) $generated@@66)) ($generated@@252 $generated@@591 ($generated@@467 $generated@@592 $generated@@593))) (and (= ($generated@@317 ($generated@@431 ($generated@@351 $generated@@84 $generated@@84) $generated@@591)) $generated@@591) ($generated@@161 ($generated@@431 ($generated@@351 $generated@@84 $generated@@84) $generated@@591) ($generated@@467 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@252 $generated@@591 ($generated@@467 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@66) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@84)) ($generated@@252 $generated@@596 ($generated@@164 $generated@@594 $generated@@595))) (and (= ($generated@@317 ($generated@@431 $generated@@165 $generated@@596)) $generated@@596) ($generated@@161 ($generated@@431 $generated@@165 $generated@@596) ($generated@@164 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@252 $generated@@596 ($generated@@164 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
 (not ($generated@@0 ($generated@@110 ($generated@@478 $generated@@598) $generated@@597))))
 :pattern ( (let (($generated@@598 (type $generated@@597)))
($generated@@110 ($generated@@478 $generated@@598) $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@71)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@66) (= (type $generated@@602) $generated@@66)) (and (= ($generated@@101 ($generated@@164 $generated@@601 $generated@@602)) $generated@@62) (= ($generated@@599 ($generated@@164 $generated@@601 $generated@@602)) $generated@@64)))
 :pattern ( ($generated@@164 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@165) (= ($generated@@582 ($generated@@317 $generated@@603)) ($generated@@583 $generated@@603)))
 :pattern ( ($generated@@582 ($generated@@317 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@84) ($generated@@252 $generated@@604 ($generated@@104 0))) (and (= ($generated@@317 ($generated@@431 $generated@@2 $generated@@604)) $generated@@604) ($generated@@161 ($generated@@431 ($generated@@105 $generated@@84 $generated@@4) $generated@@604) ($generated@@104 0))))
 :pattern ( ($generated@@252 $generated@@604 ($generated@@104 0)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@84) (= (type $generated@@606) $generated@@66)) ($generated@@252 $generated@@605 ($generated@@273 $generated@@606))) (and (= ($generated@@317 ($generated@@431 ($generated@@105 $generated@@84 $generated@@4) $generated@@605)) $generated@@605) ($generated@@161 ($generated@@431 ($generated@@105 $generated@@84 $generated@@4) $generated@@605) ($generated@@273 $generated@@606))))
 :pattern ( ($generated@@252 $generated@@605 ($generated@@273 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@84) (= (type $generated@@608) $generated@@66)) ($generated@@252 $generated@@607 ($generated@@278 $generated@@608))) (and (= ($generated@@317 ($generated@@431 ($generated@@105 $generated@@84 $generated@@4) $generated@@607)) $generated@@607) ($generated@@161 ($generated@@431 ($generated@@105 $generated@@84 $generated@@4) $generated@@607) ($generated@@278 $generated@@608))))
 :pattern ( ($generated@@252 $generated@@607 ($generated@@278 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@84) (= (type $generated@@610) $generated@@66)) ($generated@@252 $generated@@609 ($generated@@178 $generated@@610))) (and (= ($generated@@317 ($generated@@431 ($generated@@105 $generated@@84 $generated@@2) $generated@@609)) $generated@@609) ($generated@@161 ($generated@@431 ($generated@@105 $generated@@84 $generated@@2) $generated@@609) ($generated@@178 $generated@@610))))
 :pattern ( ($generated@@252 $generated@@609 ($generated@@178 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@84) (= (type $generated@@612) $generated@@66)) ($generated@@252 $generated@@611 ($generated@@544 $generated@@612))) (and (= ($generated@@317 ($generated@@431 ($generated@@303 $generated@@84) $generated@@611)) $generated@@611) ($generated@@161 ($generated@@431 ($generated@@303 $generated@@84) $generated@@611) ($generated@@544 $generated@@612))))
 :pattern ( ($generated@@252 $generated@@611 ($generated@@544 $generated@@612)))
)))
(assert  (=> true (=> true (and (let (($generated@@613 $generated@@77))
 (and ($generated@@259 $generated@@613) ($generated@@367 ($generated@@327 $generated@@613) ($generated@@322 $generated@@84)))) ($generated@@252 $generated@@77 $generated@@261)))))
(assert (= ($generated@@101 $generated@@261) $generated@@63))
(assert (= ($generated@@599 $generated@@261) $generated@@65))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@614) ($generated@@105 $generated@@84 $generated@@2)) (= (type $generated@@615) $generated@@66)) (= (type $generated@@616) ($generated@@105 $generated@@106 $generated@@107))) (= ($generated@@103 $generated@@614 ($generated@@178 $generated@@615) $generated@@616) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@84) (< 0 ($generated ($generated@@110 $generated@@614 $generated@@617)))) ($generated@@289 $generated@@617 $generated@@615 $generated@@616))
 :pattern ( ($generated@@110 $generated@@614 $generated@@617))
))))
 :pattern ( ($generated@@103 $generated@@614 ($generated@@178 $generated@@615) $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@165) (= (type $generated@@619) $generated@@66)) (= (type $generated@@620) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@288 $generated@@620) (and ($generated@@163 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@66) ($generated@@103 $generated@@618 ($generated@@164 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@103 $generated@@618 ($generated@@164 $generated@@619 $generated@@621) $generated@@620))
))))) ($generated@@289 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@289 ($generated@@172 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@165) (= (type $generated@@623) $generated@@66)) (= (type $generated@@624) ($generated@@105 $generated@@106 $generated@@107))) (and ($generated@@288 $generated@@624) (and ($generated@@163 $generated@@622) (exists (($generated@@625 T@U) ) (!  (and (= (type $generated@@625) $generated@@66) ($generated@@103 $generated@@622 ($generated@@164 $generated@@625 $generated@@623) $generated@@624))
 :pattern ( ($generated@@103 $generated@@622 ($generated@@164 $generated@@625 $generated@@623) $generated@@624))
))))) ($generated@@289 ($generated@@173 $generated@@622) $generated@@623 $generated@@624))
 :pattern ( ($generated@@289 ($generated@@173 $generated@@622) $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@105 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@629)) (not (= $generated@@627 $generated@@628))) (= ($generated ($generated@@110 $generated@@626 $generated@@628)) ($generated ($generated@@110 ($generated@@310 $generated@@626 $generated@@627) $generated@@628)))))
 :pattern ( ($generated@@310 $generated@@626 $generated@@627) ($generated@@110 $generated@@626 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@84) (= (type $generated@@631) $generated@@84)) (= ($generated@@251 ($generated@@284 $generated@@630) ($generated@@284 $generated@@631)) ($generated@@284 ($generated@@251 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@251 ($generated@@284 $generated@@630) ($generated@@284 $generated@@631)))
)))
(assert (forall (($generated@@632 Int) ) (! (= ($generated@@317 ($generated@@8 ($generated@@79 $generated@@632))) ($generated@@284 ($generated@@317 ($generated@@8 $generated@@632))))
 :pattern ( ($generated@@317 ($generated@@8 ($generated@@79 $generated@@632))))
)))
(assert (forall (($generated@@633 T@U) ) (! (= ($generated@@317 ($generated@@284 $generated@@633)) ($generated@@284 ($generated@@317 $generated@@633)))
 :pattern ( ($generated@@317 ($generated@@284 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@304 (type $generated@@634))))
 (=> (and (= (type $generated@@634) ($generated@@303 $generated@@635)) (= ($generated@@302 $generated@@634) 0)) (= $generated@@634 ($generated@@301 $generated@@635))))
 :pattern ( ($generated@@302 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 (type $generated@@637)))
 (=> (and (and (= (type $generated@@636) ($generated@@105 $generated@@639 $generated@@2)) (= (type $generated@@638) $generated@@2)) (<= 0 ($generated $generated@@638))) (= ($generated@@309 ($generated@@111 $generated@@636 $generated@@637 $generated@@638)) (+ (- ($generated@@309 $generated@@636) ($generated ($generated@@110 $generated@@636 $generated@@637))) ($generated $generated@@638)))))
 :pattern ( ($generated@@309 ($generated@@111 $generated@@636 $generated@@637 $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@641) $generated@@2)) ($generated@@103 $generated@@641 $generated@@46 $generated@@640))
 :pattern ( ($generated@@103 $generated@@641 $generated@@46 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@643) $generated@@3)) ($generated@@103 $generated@@643 $generated@@47 $generated@@642))
 :pattern ( ($generated@@103 $generated@@643 $generated@@47 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@645) $generated@@4)) ($generated@@103 $generated@@645 $generated@@44 $generated@@644))
 :pattern ( ($generated@@103 $generated@@645 $generated@@44 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@647) $generated@@502)) ($generated@@103 $generated@@647 $generated@@45 $generated@@646))
 :pattern ( ($generated@@103 $generated@@647 $generated@@45 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@105 $generated@@106 $generated@@107)) (= (type $generated@@649) $generated@@84)) ($generated@@103 $generated@@649 $generated@@48 $generated@@648))
 :pattern ( ($generated@@103 $generated@@649 $generated@@48 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@303 $generated@@84)) (= (type $generated@@651) $generated@@66)) (= ($generated@@161 $generated@@650 ($generated@@544 $generated@@651)) (forall (($generated@@652 Int) ) (!  (=> (and (<= 0 $generated@@652) (< $generated@@652 ($generated@@302 $generated@@650))) ($generated@@252 ($generated@@545 $generated@@650 $generated@@652) $generated@@651))
 :pattern ( ($generated@@545 $generated@@650 $generated@@652))
))))
 :pattern ( ($generated@@161 $generated@@650 ($generated@@544 $generated@@651)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 Int) ) (!  (=> (= (type $generated@@654) ($generated@@303 $generated@@84)) (=> (and (<= 0 $generated@@655) (< $generated@@655 ($generated@@302 $generated@@654))) (< ($generated@@583 ($generated@@431 $generated@@165 ($generated@@545 $generated@@654 $generated@@655))) ($generated@@653 $generated@@654))))
 :pattern ( ($generated@@583 ($generated@@431 $generated@@165 ($generated@@545 $generated@@654 $generated@@655))))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) ($generated@@333 $generated@@84 $generated@@84)) (= (type $generated@@657) $generated@@66)) (= (type $generated@@658) $generated@@66)) ($generated@@161 $generated@@656 ($generated@@459 $generated@@657 $generated@@658))) (and (and ($generated@@161 ($generated@@331 $generated@@656) ($generated@@273 $generated@@657)) ($generated@@161 ($generated@@388 $generated@@656) ($generated@@273 $generated@@658))) ($generated@@161 ($generated@@430 $generated@@656) ($generated@@273 ($generated@@164 $generated@@657 $generated@@658)))))
 :pattern ( ($generated@@161 $generated@@656 ($generated@@459 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) ($generated@@351 $generated@@84 $generated@@84)) (= (type $generated@@660) $generated@@66)) (= (type $generated@@661) $generated@@66)) ($generated@@161 $generated@@659 ($generated@@467 $generated@@660 $generated@@661))) (and (and ($generated@@161 ($generated@@349 $generated@@659) ($generated@@278 $generated@@660)) ($generated@@161 ($generated@@399 $generated@@659) ($generated@@278 $generated@@661))) ($generated@@161 ($generated@@441 $generated@@659) ($generated@@278 ($generated@@164 $generated@@660 $generated@@661)))))
 :pattern ( ($generated@@161 $generated@@659 ($generated@@467 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@2) ($generated@@161 $generated@@662 $generated@@46))
 :pattern ( ($generated@@161 $generated@@662 $generated@@46))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@3) ($generated@@161 $generated@@663 $generated@@47))
 :pattern ( ($generated@@161 $generated@@663 $generated@@47))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@4) ($generated@@161 $generated@@664 $generated@@44))
 :pattern ( ($generated@@161 $generated@@664 $generated@@44))
)))
(assert (forall (($generated@@665 T@U) ) (!  (=> (= (type $generated@@665) $generated@@502) ($generated@@161 $generated@@665 $generated@@45))
 :pattern ( ($generated@@161 $generated@@665 $generated@@45))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@84) ($generated@@161 $generated@@666 $generated@@48))
 :pattern ( ($generated@@161 $generated@@666 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@667) ($generated@@185 $generated@@106 $generated@@4)) (= (type $generated@@668) $generated@@106)) (= (type $generated@@669) ($generated@@105 $generated@@106 $generated@@107))) (= (type $generated@@670) $generated@@84)) (= (type $generated@@671) $generated@@84)) (= (type $generated@@672) $generated@@84)) (= (type $generated@@674) $generated@@84)) (= (type $generated@@675) $generated@@84)) (= (type $generated@@677) $generated@@84)) (= (type $generated@@680) ($generated@@185 $generated@@106 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@682  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@79 $generated@@82) ($generated@@79 3)))))
(let (($generated@@683  (=> (= $generated@@667 ($generated@@239 $generated@@668 $generated@@669 $generated@@60 false)) (=> (and (and (and (and ($generated@@252 $generated@@670 $generated@@261) ($generated@@289 $generated@@670 $generated@@261 $generated@@669)) $generated@@76) (and (and (= $generated@@671 $generated@@77) $generated@@76) (and ($generated@@252 $generated@@671 $generated@@261) (= $generated@@670 $generated@@671)))) (and (and (and ($generated@@252 $generated@@672 $generated@@261) ($generated@@289 $generated@@672 $generated@@261 $generated@@669)) ($generated@@289 $generated@@670 $generated@@261 $generated@@669)) (and (= $generated@@673 ($generated@@79 4)) ($generated@@103 ($generated@@8 $generated@@673) $generated@@46 $generated@@669)))) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@259 $generated@@670)) (=> (and ($generated@@259 $generated@@670) ($generated@@78 $generated@@670 ($generated@@79 4))) (=> (and (and (= $generated@@674 ($generated@@80 $generated@@670 ($generated@@79 4))) ($generated@@78 $generated@@670 ($generated@@79 4))) (and ($generated@@252 $generated@@674 $generated@@261) (= $generated@@672 $generated@@674))) (=> (and (and (and ($generated@@252 $generated@@675 $generated@@261) ($generated@@289 $generated@@675 $generated@@261 $generated@@669)) ($generated@@289 $generated@@672 $generated@@261 $generated@@669)) (and (= $generated@@676 ($generated@@79 3)) ($generated@@103 ($generated@@8 $generated@@676) $generated@@46 $generated@@669))) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@259 $generated@@672)) (=> ($generated@@259 $generated@@672) (=> (and (and (and ($generated@@78 $generated@@672 ($generated@@79 3)) (= $generated@@677 ($generated@@80 $generated@@672 ($generated@@79 3)))) (and ($generated@@78 $generated@@672 ($generated@@79 3)) ($generated@@252 $generated@@677 $generated@@261))) (and (and (= $generated@@675 $generated@@677) ($generated@@289 $generated@@675 $generated@@261 $generated@@669)) (and ($generated@@328 $generated@@675) ($generated@@328 $generated@@675)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@367 ($generated@@327 $generated@@675) ($generated@@310 ($generated@@310 ($generated@@322 $generated@@84) ($generated@@317 ($generated@@8 ($generated@@79 3)))) ($generated@@317 ($generated@@8 ($generated@@79 4)))))) (=> ($generated@@367 ($generated@@327 $generated@@675) ($generated@@310 ($generated@@310 ($generated@@322 $generated@@84) ($generated@@317 ($generated@@8 ($generated@@79 3)))) ($generated@@317 ($generated@@8 ($generated@@79 4))))) (=> ($generated@@289 $generated@@675 $generated@@261 $generated@@669) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@259 $generated@@675)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@367 ($generated@@327 $generated@@675) ($generated@@322 $generated@@84)))) (=> (and ($generated@@259 $generated@@675) (not ($generated@@367 ($generated@@327 $generated@@675) ($generated@@322 $generated@@84)))) (=> (and (and (and ($generated@@81 $generated@@675) (= $generated@@678 ($generated@@83 $generated@@675))) (and ($generated@@81 $generated@@675) ($generated@@161 ($generated@@8 $generated@@678) $generated@@46))) (and (and (= $generated@@679 $generated@@678) (= $generated@@82 $generated@@679)) (and ($generated@@161 ($generated@@8 $generated@@82) $generated@@46) (= (ControlFlow 0 5) 4)))) $generated@@682))))))))))))))))))
(let (($generated@@684  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@685  (=> (= $generated@@680 ($generated@@184 $generated@@668 $generated@@669 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@684) (=> (= (ControlFlow 0 11) 5) $generated@@683)))))
(let (($generated@@686  (=> (and (and ($generated@@288 $generated@@669) ($generated@@681 $generated@@669)) (and (= 0 $generated@@74) (= (ControlFlow 0 12) 11))) $generated@@685)))
$generated@@686))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@280 (T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (Int) Int)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@323 (T@U T@U T@U) Bool)
(declare-fun $generated@@329 (T@U T@U) T@U)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@337 (T@U) Bool)
(declare-fun $generated@@346 (T@T) T@U)
(declare-fun $generated@@347 (T@U) Int)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@355 (T@U) Int)
(declare-fun $generated@@356 (T@U T@U) T@U)
(declare-fun $generated@@371 (T@T) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@T T@T) T@U)
(declare-fun $generated@@392 (T@T T@T) T@T)
(declare-fun $generated@@393 (T@T) T@T)
(declare-fun $generated@@394 (T@T) T@T)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@T T@T) T@U)
(declare-fun $generated@@410 (T@T T@T) T@T)
(declare-fun $generated@@411 (T@T) T@T)
(declare-fun $generated@@412 (T@T) T@T)
(declare-fun $generated@@432 (T@T T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@517 (T@U T@U) T@U)
(declare-fun $generated@@525 (T@U T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 () T@U)
(declare-fun $generated@@539 (T@T) T@U)
(declare-fun $generated@@563 () T@T)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@610 (T@U Int) T@U)
(declare-fun $generated@@622 (T@U) Int)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@642 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@675 (T@U) T@U)
(declare-fun $generated@@735 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83 $generated@@84)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84))
))) (= (type $generated@@80) $generated@@70)))
(assert (forall (($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@81) (= (type $generated@@87) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80)  (and (and ($generated@@78 ($generated@@8 $generated@@85) $generated@@46) ($generated@@78 $generated@@86 $generated@@80)) ($generated@@78 $generated@@87 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@71)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@73 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@74)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) (= (type $generated@@152) $generated@@81)) (= ($generated@@148 ($generated@@79 $generated@@150 $generated@@151 $generated@@152)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 Int) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@81) (= (type $generated@@156) $generated@@81)) (= ($generated@@153 ($generated@@79 $generated@@154 $generated@@155 $generated@@156)) $generated@@154))
 :pattern ( ($generated@@79 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) (= ($generated@@157 ($generated@@79 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))
 :pattern ( ($generated@@79 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@81) (= (type $generated@@166) $generated@@81)) (= ($generated@@162 ($generated@@79 $generated@@164 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@79 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@78 $generated@@167 ($generated@@91 0)))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@91 0)))
)))
(assert (= ($generated@@1 $generated@@170) 15))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@170) (= (type $generated@@173) $generated@@81)) (or ($generated@@171 $generated@@173) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@173 $generated@@80)))) true)
 :pattern ( ($generated@@169 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@70) (= (type $generated@@179) $generated@@70)) (= (type $generated@@180) $generated@@81)) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 16) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@81) (= (type $generated@@188) $generated@@81)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@81))
(assert (= ($generated@@148 $generated@@189) $generated@@63))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@194) $generated@@70)) ($generated@@78 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@78 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@93 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@73 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@93) (= (type $generated@@245) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@246) ($generated@@72 $generated@@4))) (= (type $generated@@248) $generated@@93)) (= (type $generated@@249) ($generated@@72 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@197 $generated@@93 $generated@@4))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@73 (type $generated@@261))))
 (=> (and (and (and (and (= (type $generated@@256) $generated@@93) (= (type $generated@@257) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@258) ($generated@@72 $generated@@4))) (= (type $generated@@260) $generated@@93)) (= (type $generated@@261) ($generated@@72 $generated@@262))) (= ($generated@@0 ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (not (= $generated@@260 $generated@@256)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@257 $generated@@260) $generated@@258))) $generated@@259))))
 :pattern ( ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (= (type $generated@@263) $generated@@70))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@81) (= (type $generated@@265) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@264 $generated@@263 $generated@@265) ($generated@@90 $generated@@264 $generated@@80 $generated@@265)))
 :pattern ( ($generated@@90 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@266 $generated@@270)) $generated@@170)
 :pattern ( ($generated@@266 $generated@@270))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@170) (= (type $generated@@272) $generated@@81)) (or ($generated@@171 $generated@@272) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@272 $generated@@80)))) (and (=> (not ($generated@@267 $generated@@272)) (let (($generated@@273 ($generated@@162 $generated@@272)))
(let (($generated@@274 ($generated@@157 $generated@@272)))
(let (($generated@@275 ($generated@@153 $generated@@272)))
 (and ($generated@@171 $generated@@274) (=> ($generated@@169 $generated@@271 $generated@@274) (and ($generated@@171 $generated@@273) (=> ($generated@@169 $generated@@271 $generated@@273) (and ($generated@@268 $generated@@274) (=> (or ($generated@@269 $generated@@274 $generated@@189) (<= $generated@@275 ($generated@@153 $generated@@274))) ($generated@@268 $generated@@273))))))))))) (= ($generated@@169 ($generated@@266 $generated@@271) $generated@@272) (ite ($generated@@267 $generated@@272) true (let (($generated@@276 ($generated@@162 $generated@@272)))
(let (($generated@@277 ($generated@@157 $generated@@272)))
(let (($generated@@278 ($generated@@153 $generated@@272)))
 (and (and (and ($generated@@169 $generated@@271 $generated@@277) ($generated@@169 $generated@@271 $generated@@276)) (or ($generated@@269 $generated@@277 $generated@@189) (<= $generated@@278 ($generated@@153 $generated@@277)))) (or ($generated@@269 $generated@@276 $generated@@189) (<= $generated@@278 ($generated@@153 $generated@@276)))))))))))
 :pattern ( ($generated@@169 ($generated@@266 $generated@@271) $generated@@272))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@281 $generated@@282)) $generated@@81)
 :pattern ( ($generated@@279 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) $generated@@70)) (= (type $generated@@285) $generated@@184)) (= (type $generated@@286) $generated@@184)) (= ($generated@@78 ($generated@@279 $generated@@285 $generated@@286) ($generated@@175 $generated@@283 $generated@@284))  (and ($generated@@280 $generated@@285 $generated@@283) ($generated@@280 $generated@@286 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@279 $generated@@285 $generated@@286) ($generated@@175 $generated@@283 $generated@@284)))
)))
(assert ($generated@@78 $generated@@189 $generated@@80))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@287 $generated@@288)) ($generated@@90 $generated@@189 $generated@@80 $generated@@288))
 :pattern ( ($generated@@90 $generated@@189 $generated@@80 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@95 (type $generated@@290))))
(= (type ($generated@@289 $generated@@290 $generated@@291)) ($generated@@92 $generated@@292 $generated@@2)))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
 (=> (and (= (type $generated@@293) ($generated@@92 $generated@@296 $generated@@2)) (= (type $generated@@294) ($generated@@92 $generated@@296 $generated@@2))) (= ($generated ($generated@@97 ($generated@@289 $generated@@293 $generated@@294) $generated@@295)) (+ ($generated ($generated@@97 $generated@@293 $generated@@295)) ($generated ($generated@@97 $generated@@294 $generated@@295))))))
 :pattern ( ($generated@@97 ($generated@@289 $generated@@293 $generated@@294) $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@81) (= (type $generated@@298) $generated@@81)) (= ($generated@@181 $generated@@297 $generated@@298) (= $generated@@297 $generated@@298)))
 :pattern ( ($generated@@181 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) (= (type $generated@@300) $generated@@81)) (= ($generated@@269 $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@269 $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@70)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@304) $generated@@70)) (= ($generated@@78 $generated@@303 ($generated@@301 $generated@@304)) (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@184) ($generated@@0 ($generated@@97 $generated@@303 $generated@@305))) ($generated@@280 $generated@@305 $generated@@304))
 :pattern ( ($generated@@97 $generated@@303 $generated@@305))
))))
 :pattern ( ($generated@@78 $generated@@303 ($generated@@301 $generated@@304)))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@70)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@309) $generated@@70)) (= ($generated@@78 $generated@@308 ($generated@@306 $generated@@309)) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@184) ($generated@@0 ($generated@@97 $generated@@308 $generated@@310))) ($generated@@280 $generated@@310 $generated@@309))
 :pattern ( ($generated@@97 $generated@@308 $generated@@310))
))))
 :pattern ( ($generated@@78 $generated@@308 ($generated@@306 $generated@@309)))
)))
(assert (forall (($generated@@312 Int) ) (! (= ($generated@@311 $generated@@312) $generated@@312)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
(= (type ($generated@@313 $generated@@314)) $generated@@315))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ) (! (= ($generated@@313 $generated@@316) $generated@@316)
 :pattern ( ($generated@@313 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@317) $generated@@81) (= (type $generated@@318) $generated@@81)) (and ($generated@@267 $generated@@317) ($generated@@267 $generated@@318))) (= ($generated@@269 $generated@@317 $generated@@318) true))
 :pattern ( ($generated@@269 $generated@@317 $generated@@318) ($generated@@267 $generated@@317))
 :pattern ( ($generated@@269 $generated@@317 $generated@@318) ($generated@@267 $generated@@318))
)))
(assert (forall (($generated@@319 Int) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (= (type $generated@@320) $generated@@81) (= (type $generated@@321) $generated@@81)) (= (type $generated@@322) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@287 $generated@@322)) (= ($generated@@90 ($generated@@79 $generated@@319 $generated@@320 $generated@@321) $generated@@80 $generated@@322)  (and (and ($generated@@90 ($generated@@8 $generated@@319) $generated@@46 $generated@@322) ($generated@@90 $generated@@320 $generated@@80 $generated@@322)) ($generated@@90 $generated@@321 $generated@@80 $generated@@322))))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@319 $generated@@320 $generated@@321) $generated@@80 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@324) $generated@@70) (= (type $generated@@325) $generated@@70)) (= (type $generated@@326) $generated@@184)) (= (type $generated@@327) $generated@@184)) (= (type $generated@@328) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@287 $generated@@328)) (= ($generated@@90 ($generated@@279 $generated@@326 $generated@@327) ($generated@@175 $generated@@324 $generated@@325) $generated@@328)  (and ($generated@@323 $generated@@326 $generated@@324 $generated@@328) ($generated@@323 $generated@@327 $generated@@325 $generated@@328))))
 :pattern ( ($generated@@90 ($generated@@279 $generated@@326 $generated@@327) ($generated@@175 $generated@@324 $generated@@325) $generated@@328))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (! (= (type ($generated@@329 $generated@@331 $generated@@332)) ($generated@@92 $generated@@184 $generated@@2))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@333) $generated@@170) (= (type $generated@@334) $generated@@81)) (or ($generated@@330 $generated@@334) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@334 $generated@@263)))) ($generated@@78 ($generated@@329 $generated@@333 $generated@@334) ($generated@@190 $generated@@46)))
 :pattern ( ($generated@@329 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@81) (= ($generated@@174 $generated@@335) (= ($generated@@148 $generated@@335) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@81) (= ($generated@@267 $generated@@336) (= ($generated@@148 $generated@@336) $generated@@63)))
 :pattern ( ($generated@@267 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@81) (= ($generated@@337 $generated@@338) (= ($generated@@148 $generated@@338) $generated@@65)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@81) ($generated@@337 $generated@@339)) (exists (($generated@@340 Int) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (and (and (= (type $generated@@341) $generated@@81) (= (type $generated@@342) $generated@@81)) (= $generated@@339 ($generated@@79 $generated@@340 $generated@@341 $generated@@342)))
 :no-pattern (type $generated@@341)
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
)))
 :pattern ( ($generated@@337 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@81) ($generated@@174 $generated@@343)) (exists (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (and (and (= (type $generated@@344) $generated@@184) (= (type $generated@@345) $generated@@184)) (= $generated@@343 ($generated@@279 $generated@@344 $generated@@345)))
 :no-pattern (type $generated@@344)
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
)))
 :pattern ( ($generated@@174 $generated@@343))
)))
(assert  (and (and (forall (($generated@@350 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@350)) 18)) (forall (($generated@@351 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@348 $generated@@351))
))) (forall (($generated@@352 T@T) ) (! (= (type ($generated@@346 $generated@@352)) ($generated@@348 $generated@@352))
 :pattern ( ($generated@@346 $generated@@352))
))))
(assert (forall (($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@353)) 0)
 :pattern ( ($generated@@346 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@81) ($generated@@267 $generated@@354)) (= $generated@@354 $generated@@189))
 :pattern ( ($generated@@267 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= (type ($generated@@356 $generated@@357 $generated@@358)) ($generated@@92 $generated@@359 $generated@@2)))
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@360) ($generated@@92 $generated@@362 $generated@@2)) (= ($generated@@355 ($generated@@356 $generated@@360 $generated@@361)) (+ ($generated@@355 $generated@@360) 1))))
 :pattern ( ($generated@@355 ($generated@@356 $generated@@360 $generated@@361)))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@170) (= (type $generated@@364) $generated@@81)) (or ($generated@@171 ($generated@@313 $generated@@364)) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@364 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@313 ($generated@@11 ($generated@@267 ($generated@@313 $generated@@364)))))) (let (($generated@@365 ($generated@@313 ($generated@@162 ($generated@@313 $generated@@364)))))
(let (($generated@@366 ($generated@@313 ($generated@@157 ($generated@@313 $generated@@364)))))
(let (($generated@@367 ($generated@@311 ($generated@@153 ($generated@@313 $generated@@364)))))
 (and ($generated@@171 $generated@@366) (=> ($generated@@169 ($generated@@266 $generated@@363) $generated@@366) (and ($generated@@171 $generated@@365) (=> ($generated@@169 ($generated@@266 $generated@@363) $generated@@365) (and ($generated@@268 $generated@@366) (=> (or ($generated@@269 $generated@@366 $generated@@189) (<= $generated@@367 ($generated@@153 $generated@@366))) ($generated@@268 $generated@@365))))))))))) (= ($generated@@169 ($generated@@266 $generated@@363) ($generated@@313 $generated@@364)) (ite ($generated@@267 ($generated@@313 $generated@@364)) true (let (($generated@@368 ($generated@@313 ($generated@@162 ($generated@@313 $generated@@364)))))
(let (($generated@@369 ($generated@@313 ($generated@@157 ($generated@@313 $generated@@364)))))
(let (($generated@@370 ($generated@@311 ($generated@@153 ($generated@@313 $generated@@364)))))
 (and (and (and ($generated@@169 ($generated@@266 $generated@@363) $generated@@369) ($generated@@169 ($generated@@266 $generated@@363) $generated@@368)) (or ($generated@@269 $generated@@369 $generated@@189) (<= $generated@@370 ($generated@@311 ($generated@@153 $generated@@369))))) (or ($generated@@269 $generated@@368 $generated@@189) (<= $generated@@370 ($generated@@311 ($generated@@153 $generated@@368))))))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@266 $generated@@363) ($generated@@313 $generated@@364)))
))))
(assert  (and (forall (($generated@@373 T@T) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@92 $generated@@373 $generated@@2))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) $generated@@184)
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@170) (= (type $generated@@376) $generated@@81)) (or ($generated@@330 ($generated@@313 $generated@@376)) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@376 $generated@@263)))) (and (=> (not ($generated@@0 ($generated@@313 ($generated@@11 ($generated@@267 ($generated@@313 $generated@@376)))))) (let (($generated@@377 ($generated@@313 ($generated@@162 ($generated@@313 $generated@@376)))))
(let (($generated@@378 ($generated@@313 ($generated@@157 ($generated@@313 $generated@@376)))))
 (and ($generated@@330 $generated@@378) ($generated@@330 $generated@@377))))) (= ($generated@@329 ($generated@@266 $generated@@375) ($generated@@313 $generated@@376)) (ite ($generated@@267 ($generated@@313 $generated@@376)) ($generated@@371 $generated@@184) (let (($generated@@379 ($generated@@313 ($generated@@162 ($generated@@313 $generated@@376)))))
(let (($generated@@380 ($generated@@313 ($generated@@157 ($generated@@313 $generated@@376)))))
(let (($generated@@381 ($generated@@311 ($generated@@153 ($generated@@313 $generated@@376)))))
($generated@@289 ($generated@@289 ($generated@@356 ($generated@@371 $generated@@184) ($generated@@372 ($generated@@8 $generated@@381))) ($generated@@329 ($generated@@266 $generated@@375) $generated@@380)) ($generated@@329 ($generated@@266 $generated@@375) $generated@@379)))))))))
 :weight 3
 :pattern ( ($generated@@329 ($generated@@266 $generated@@375) ($generated@@313 $generated@@376)))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@70) (= (type $generated@@384) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@323 ($generated@@372 $generated@@382) $generated@@383 $generated@@384) ($generated@@90 $generated@@382 $generated@@383 $generated@@384)))
 :pattern ( ($generated@@323 ($generated@@372 $generated@@382) $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) $generated@@81) (= (type $generated@@386) $generated@@81)) (and ($generated@@337 $generated@@385) ($generated@@337 $generated@@386))) (= ($generated@@269 $generated@@385 $generated@@386)  (and (and (= ($generated@@153 $generated@@385) ($generated@@153 $generated@@386)) ($generated@@269 ($generated@@157 $generated@@385) ($generated@@157 $generated@@386))) ($generated@@269 ($generated@@162 $generated@@385) ($generated@@162 $generated@@386)))))
 :pattern ( ($generated@@269 $generated@@385 $generated@@386) ($generated@@337 $generated@@385))
 :pattern ( ($generated@@269 $generated@@385 $generated@@386) ($generated@@337 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@95 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@92 $generated@@388 $generated@@2)) (and (= (= ($generated@@355 $generated@@387) 0) (= $generated@@387 ($generated@@371 $generated@@388))) (=> (not (= ($generated@@355 $generated@@387) 0)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (< 0 ($generated ($generated@@97 $generated@@387 $generated@@389))))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@355 $generated@@387))
)))
(assert  (and (and (and (and (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (= ($generated@@1 ($generated@@392 $generated@@395 $generated@@396)) 19)) (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (! (= ($generated@@393 ($generated@@392 $generated@@397 $generated@@398)) $generated@@397)
 :pattern ( ($generated@@392 $generated@@397 $generated@@398))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@394 ($generated@@392 $generated@@399 $generated@@400)) $generated@@400)
 :pattern ( ($generated@@392 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@393 (type $generated@@401))))
(= (type ($generated@@390 $generated@@401)) ($generated@@92 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@401))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= (type ($generated@@391 $generated@@403 $generated@@404)) ($generated@@392 $generated@@403 $generated@@404))
 :pattern ( ($generated@@391 $generated@@403 $generated@@404))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@T) ) (! (let (($generated@@407 (type $generated@@405)))
 (not ($generated@@0 ($generated@@97 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405))))
 :pattern ( (let (($generated@@407 (type $generated@@405)))
($generated@@97 ($generated@@390 ($generated@@391 $generated@@407 $generated@@406)) $generated@@405)))
)))
(assert  (and (and (and (and (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (= ($generated@@1 ($generated@@410 $generated@@413 $generated@@414)) 20)) (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (! (= ($generated@@411 ($generated@@410 $generated@@415 $generated@@416)) $generated@@415)
 :pattern ( ($generated@@410 $generated@@415 $generated@@416))
))) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= ($generated@@412 ($generated@@410 $generated@@417 $generated@@418)) $generated@@418)
 :pattern ( ($generated@@410 $generated@@417 $generated@@418))
))) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@411 (type $generated@@419))))
(= (type ($generated@@408 $generated@@419)) ($generated@@92 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@419))
))) (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (! (= (type ($generated@@409 $generated@@421 $generated@@422)) ($generated@@410 $generated@@421 $generated@@422))
 :pattern ( ($generated@@409 $generated@@421 $generated@@422))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@T) ) (! (let (($generated@@425 (type $generated@@423)))
 (not ($generated@@0 ($generated@@97 ($generated@@408 ($generated@@409 $generated@@425 $generated@@424)) $generated@@423))))
 :pattern ( (let (($generated@@425 (type $generated@@423)))
($generated@@97 ($generated@@408 ($generated@@409 $generated@@425 $generated@@424)) $generated@@423)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@95 (type $generated@@426))))
 (=> (and (= (type $generated@@426) ($generated@@92 $generated@@428 $generated@@2)) (= (type $generated@@427) ($generated@@92 $generated@@428 $generated@@2))) (= ($generated@@355 ($generated@@289 $generated@@426 $generated@@427)) (+ ($generated@@355 $generated@@426) ($generated@@355 $generated@@427)))))
 :pattern ( ($generated@@355 ($generated@@289 $generated@@426 $generated@@427)))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@95 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@92 $generated@@430 $generated@@2)) (= ($generated@@191 $generated@@429) (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@430) (and (<= 0 ($generated ($generated@@97 $generated@@429 $generated@@431))) (<= ($generated ($generated@@97 $generated@@429 $generated@@431)) ($generated@@355 $generated@@429))))
 :pattern ( ($generated@@97 $generated@@429 $generated@@431))
)))))
 :pattern ( ($generated@@191 $generated@@429))
)))
(assert (forall (($generated@@433 T@T) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@433)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@184) ($generated@@280 $generated@@435 $generated@@80)) (and (= ($generated@@372 ($generated@@432 $generated@@81 $generated@@435)) $generated@@435) ($generated@@78 ($generated@@432 $generated@@81 $generated@@435) $generated@@80)))
 :pattern ( ($generated@@280 $generated@@435 $generated@@80))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@184) ($generated@@280 $generated@@436 $generated@@263)) (and (= ($generated@@372 ($generated@@432 $generated@@81 $generated@@436)) $generated@@436) ($generated@@78 ($generated@@432 $generated@@81 $generated@@436) $generated@@263)))
 :pattern ( ($generated@@280 $generated@@436 $generated@@263))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
 (=> (= (type $generated@@437) ($generated@@92 $generated@@439 $generated@@2)) (= ($generated ($generated@@97 ($generated@@356 $generated@@437 $generated@@438) $generated@@438)) (+ ($generated ($generated@@97 $generated@@437 $generated@@438)) 1))))
 :pattern ( ($generated@@356 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@441)))
 (=> (and (and (= (type $generated@@440) ($generated@@92 $generated@@443 $generated@@2)) (= (type $generated@@442) $generated@@443)) (< 0 ($generated ($generated@@97 $generated@@440 $generated@@442)))) (< 0 ($generated ($generated@@97 ($generated@@356 $generated@@440 $generated@@441) $generated@@442)))))
 :pattern ( ($generated@@356 $generated@@440 $generated@@441) ($generated@@97 $generated@@440 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@394 (type $generated@@444))))
(let (($generated@@446 ($generated@@393 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@392 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@391 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) ($generated@@0 ($generated@@97 ($generated@@390 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@390 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@394 (type $generated@@449))))
(= (type ($generated@@448 $generated@@449)) ($generated@@92 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@394 (type $generated@@451))))
(let (($generated@@453 ($generated@@393 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@392 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@391 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@452) ($generated@@0 ($generated@@97 ($generated@@448 $generated@@451) $generated@@454)))
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@448 $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@412 (type $generated@@455))))
(let (($generated@@457 ($generated@@411 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@410 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@409 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) ($generated@@0 ($generated@@97 ($generated@@408 $generated@@455) $generated@@458)))
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@408 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@412 (type $generated@@460))))
(= (type ($generated@@459 $generated@@460)) ($generated@@92 $generated@@461 $generated@@4)))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@412 (type $generated@@462))))
(let (($generated@@464 ($generated@@411 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@410 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@409 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@463) ($generated@@0 ($generated@@97 ($generated@@459 $generated@@462) $generated@@465)))
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@459 $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@467)))
 (=> (and (= (type $generated@@466) ($generated@@92 $generated@@469 $generated@@2)) (= (type $generated@@468) $generated@@469)) (= (< 0 ($generated ($generated@@97 ($generated@@356 $generated@@466 $generated@@467) $generated@@468)))  (or (= $generated@@468 $generated@@467) (< 0 ($generated ($generated@@97 $generated@@466 $generated@@468)))))))
 :pattern ( ($generated@@97 ($generated@@356 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@471) $generated@@70)) (= ($generated@@78 $generated@@470 ($generated@@190 $generated@@471)) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@470 $generated@@472)))) ($generated@@280 $generated@@472 $generated@@471))
 :pattern ( ($generated@@97 $generated@@470 $generated@@472))
))))
 :pattern ( ($generated@@78 $generated@@470 ($generated@@190 $generated@@471)))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@81) ($generated@@268 $generated@@473)) (or ($generated@@267 $generated@@473) ($generated@@337 $generated@@473)))
 :pattern ( ($generated@@268 $generated@@473))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@474) $generated@@170) (= (type $generated@@475) $generated@@81)) (or ($generated@@330 $generated@@475) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@475 $generated@@263)))) (and (=> (not ($generated@@267 $generated@@475)) (let (($generated@@476 ($generated@@162 $generated@@475)))
(let (($generated@@477 ($generated@@157 $generated@@475)))
 (and ($generated@@330 $generated@@477) ($generated@@330 $generated@@476))))) (= ($generated@@329 ($generated@@266 $generated@@474) $generated@@475) (ite ($generated@@267 $generated@@475) ($generated@@371 $generated@@184) (let (($generated@@478 ($generated@@162 $generated@@475)))
(let (($generated@@479 ($generated@@157 $generated@@475)))
(let (($generated@@480 ($generated@@153 $generated@@475)))
($generated@@289 ($generated@@289 ($generated@@356 ($generated@@371 $generated@@184) ($generated@@372 ($generated@@8 $generated@@480))) ($generated@@329 $generated@@474 $generated@@479)) ($generated@@329 $generated@@474 $generated@@478)))))))))
 :pattern ( ($generated@@329 ($generated@@266 $generated@@474) $generated@@475))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@482) $generated@@70)) (= (type $generated@@483) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@481 ($generated@@301 $generated@@482) $generated@@483) (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@184) ($generated@@0 ($generated@@97 $generated@@481 $generated@@484))) ($generated@@323 $generated@@484 $generated@@482 $generated@@483))
 :pattern ( ($generated@@97 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@90 $generated@@481 ($generated@@301 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@486) $generated@@70)) (= (type $generated@@487) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@485 ($generated@@306 $generated@@486) $generated@@487) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@184) ($generated@@0 ($generated@@97 $generated@@485 $generated@@488))) ($generated@@323 $generated@@488 $generated@@486 $generated@@487))
 :pattern ( ($generated@@97 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@90 $generated@@485 ($generated@@306 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated ($generated@@97 ($generated@@371 $generated@@490) $generated@@489)) 0))
 :pattern ( (let (($generated@@490 (type $generated@@489)))
($generated@@97 ($generated@@371 $generated@@490) $generated@@489)))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@394 (type $generated@@494))))
(let (($generated@@496 ($generated@@393 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494)) ($generated@@92 $generated@@496 $generated@@495))))
 :pattern ( ($generated@@492 $generated@@494))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) ($generated@@392 $generated@@184 $generated@@184)) (= (type $generated@@498) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@491 $generated@@497) $generated@@498))  (and ($generated@@0 ($generated@@97 ($generated@@390 $generated@@497) ($generated@@182 ($generated@@432 $generated@@81 $generated@@498)))) (= ($generated@@97 ($generated@@492 $generated@@497) ($generated@@182 ($generated@@432 $generated@@81 $generated@@498))) ($generated@@183 ($generated@@432 $generated@@81 $generated@@498))))))
 :pattern ( ($generated@@97 ($generated@@491 $generated@@497) $generated@@498))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@412 (type $generated@@502))))
(let (($generated@@504 ($generated@@411 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502)) ($generated@@92 $generated@@504 $generated@@503))))
 :pattern ( ($generated@@500 $generated@@502))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) ($generated@@410 $generated@@184 $generated@@184)) (= (type $generated@@506) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@499 $generated@@505) $generated@@506))  (and ($generated@@0 ($generated@@97 ($generated@@408 $generated@@505) ($generated@@182 ($generated@@432 $generated@@81 $generated@@506)))) (= ($generated@@97 ($generated@@500 $generated@@505) ($generated@@182 ($generated@@432 $generated@@81 $generated@@506))) ($generated@@183 ($generated@@432 $generated@@81 $generated@@506))))))
 :pattern ( ($generated@@97 ($generated@@499 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(let (($generated@@510 ($generated@@393 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@392 $generated@@510 $generated@@509)) (= ($generated@@0 ($generated@@97 ($generated@@448 $generated@@507) $generated@@508)) (exists (($generated@@511 T@U) ) (!  (and (= (type $generated@@511) $generated@@510) (and ($generated@@0 ($generated@@97 ($generated@@390 $generated@@507) $generated@@511)) (= $generated@@508 ($generated@@97 ($generated@@492 $generated@@507) $generated@@511))))
 :pattern ( ($generated@@97 ($generated@@390 $generated@@507) $generated@@511))
 :pattern ( ($generated@@97 ($generated@@492 $generated@@507) $generated@@511))
))))))
 :pattern ( ($generated@@97 ($generated@@448 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(let (($generated@@515 ($generated@@411 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@410 $generated@@515 $generated@@514)) (= ($generated@@0 ($generated@@97 ($generated@@459 $generated@@512) $generated@@513)) (exists (($generated@@516 T@U) ) (!  (and (= (type $generated@@516) $generated@@515) (and ($generated@@0 ($generated@@97 ($generated@@408 $generated@@512) $generated@@516)) (= $generated@@513 ($generated@@97 ($generated@@500 $generated@@512) $generated@@516))))
 :pattern ( ($generated@@97 ($generated@@408 $generated@@512) $generated@@516))
 :pattern ( ($generated@@97 ($generated@@500 $generated@@512) $generated@@516))
))))))
 :pattern ( ($generated@@97 ($generated@@459 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@517 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) ($generated@@392 $generated@@184 $generated@@184)) (= (type $generated@@521) $generated@@70)) (= (type $generated@@522) $generated@@70)) (= (type $generated@@523) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@520 ($generated@@517 $generated@@521 $generated@@522) $generated@@523) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@390 $generated@@520) $generated@@524))) (and ($generated@@323 ($generated@@97 ($generated@@492 $generated@@520) $generated@@524) $generated@@522 $generated@@523) ($generated@@323 $generated@@524 $generated@@521 $generated@@523)))
 :pattern ( ($generated@@97 ($generated@@492 $generated@@520) $generated@@524))
 :pattern ( ($generated@@97 ($generated@@390 $generated@@520) $generated@@524))
))))
 :pattern ( ($generated@@90 $generated@@520 ($generated@@517 $generated@@521 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) ($generated@@410 $generated@@184 $generated@@184)) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@528 ($generated@@525 $generated@@529 $generated@@530) $generated@@531) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@408 $generated@@528) $generated@@532))) (and ($generated@@323 ($generated@@97 ($generated@@500 $generated@@528) $generated@@532) $generated@@530 $generated@@531) ($generated@@323 $generated@@532 $generated@@529 $generated@@531)))
 :pattern ( ($generated@@97 ($generated@@500 $generated@@528) $generated@@532))
 :pattern ( ($generated@@97 ($generated@@408 $generated@@528) $generated@@532))
))))
 :pattern ( ($generated@@90 $generated@@528 ($generated@@525 $generated@@529 $generated@@530) $generated@@531))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) $generated@@170)
 :pattern ( ($generated@@533 $generated@@535))
)) (= (type $generated@@534) $generated@@170)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@170) (= (type $generated@@537) $generated@@81)) (= ($generated@@169 $generated@@536 $generated@@537) ($generated@@169 $generated@@534 $generated@@537)))
 :pattern ( ($generated@@169 ($generated@@533 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@81) ($generated@@78 $generated@@538 $generated@@80)) (or ($generated@@267 $generated@@538) ($generated@@337 $generated@@538)))
 :pattern ( ($generated@@337 $generated@@538) ($generated@@78 $generated@@538 $generated@@80))
 :pattern ( ($generated@@267 $generated@@538) ($generated@@78 $generated@@538 $generated@@80))
)))
(assert (forall (($generated@@540 T@T) ) (! (= (type ($generated@@539 $generated@@540)) ($generated@@92 $generated@@540 $generated@@4))
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@412 (type $generated@@541))))
(let (($generated@@543 ($generated@@411 (type $generated@@541))))
 (=> (= (type $generated@@541) ($generated@@410 $generated@@543 $generated@@542)) (= (= $generated@@541 ($generated@@409 $generated@@543 $generated@@542)) (= ($generated@@408 $generated@@541) ($generated@@539 $generated@@543))))))
 :pattern ( ($generated@@408 $generated@@541))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@412 (type $generated@@544))))
(let (($generated@@546 ($generated@@411 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@410 $generated@@546 $generated@@545)) (= (= $generated@@544 ($generated@@409 $generated@@546 $generated@@545)) (= ($generated@@459 $generated@@544) ($generated@@539 $generated@@545))))))
 :pattern ( ($generated@@459 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@412 (type $generated@@547))))
(let (($generated@@549 ($generated@@411 (type $generated@@547))))
 (=> (= (type $generated@@547) ($generated@@410 $generated@@549 $generated@@548)) (= (= $generated@@547 ($generated@@409 $generated@@549 $generated@@548)) (= ($generated@@499 $generated@@547) ($generated@@539 $generated@@184))))))
 :pattern ( ($generated@@499 $generated@@547))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@394 (type $generated@@550))))
(let (($generated@@552 ($generated@@393 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@392 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@391 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@184) (= (type $generated@@554) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@491 $generated@@550) ($generated@@372 ($generated@@279 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@491 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@412 (type $generated@@555))))
(let (($generated@@557 ($generated@@411 (type $generated@@555))))
 (=> (= (type $generated@@555) ($generated@@410 $generated@@557 $generated@@556)) (or (= $generated@@555 ($generated@@409 $generated@@557 $generated@@556)) (exists (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (and (and (= (type $generated@@558) $generated@@184) (= (type $generated@@559) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@499 $generated@@555) ($generated@@372 ($generated@@279 $generated@@558 $generated@@559)))))
 :no-pattern (type $generated@@558)
 :no-pattern (type $generated@@559)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
))))))
 :pattern ( ($generated@@499 $generated@@555))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@184) ($generated@@280 $generated@@560 $generated@@46)) (and (= ($generated@@372 ($generated@@432 $generated@@2 $generated@@560)) $generated@@560) ($generated@@78 ($generated@@432 $generated@@2 $generated@@560) $generated@@46)))
 :pattern ( ($generated@@280 $generated@@560 $generated@@46))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@184) ($generated@@280 $generated@@561 $generated@@47)) (and (= ($generated@@372 ($generated@@432 $generated@@3 $generated@@561)) $generated@@561) ($generated@@78 ($generated@@432 $generated@@3 $generated@@561) $generated@@47)))
 :pattern ( ($generated@@280 $generated@@561 $generated@@47))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@184) ($generated@@280 $generated@@562 $generated@@44)) (and (= ($generated@@372 ($generated@@432 $generated@@4 $generated@@562)) $generated@@562) ($generated@@78 ($generated@@432 $generated@@4 $generated@@562) $generated@@44)))
 :pattern ( ($generated@@280 $generated@@562 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@563) 21))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@184) ($generated@@280 $generated@@564 $generated@@45)) (and (= ($generated@@372 ($generated@@432 $generated@@563 $generated@@564)) $generated@@564) ($generated@@78 ($generated@@432 $generated@@563 $generated@@564) $generated@@45)))
 :pattern ( ($generated@@280 $generated@@564 $generated@@45))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@81)) (= ($generated@@169 ($generated@@266 $generated@@565) $generated@@566) ($generated@@169 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@169 ($generated@@266 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@70) (= ($generated@@280 ($generated@@372 $generated@@567) $generated@@568) ($generated@@78 $generated@@567 $generated@@568)))
 :pattern ( ($generated@@280 ($generated@@372 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@95 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@92 $generated@@570 $generated@@2)) (<= 0 ($generated@@355 $generated@@569))))
 :pattern ( ($generated@@355 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@349 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@348 $generated@@572)) (<= 0 ($generated@@347 $generated@@571))))
 :pattern ( ($generated@@347 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@70)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (= ($generated@@573 ($generated@@517 $generated@@575 $generated@@576)) $generated@@575))
 :pattern ( ($generated@@517 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@70)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@70) (= (type $generated@@580) $generated@@70)) (= ($generated@@577 ($generated@@517 $generated@@579 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@517 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@70) (= (type $generated@@582) $generated@@70)) (= ($generated@@88 ($generated@@517 $generated@@581 $generated@@582)) $generated@@58))
 :pattern ( ($generated@@517 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@70)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (= ($generated@@583 ($generated@@525 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@525 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@70)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (= ($generated@@587 ($generated@@525 $generated@@589 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@525 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@70) (= (type $generated@@592) $generated@@70)) (= ($generated@@88 ($generated@@525 $generated@@591 $generated@@592)) $generated@@59))
 :pattern ( ($generated@@525 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@184) (= (type $generated@@594) $generated@@184)) (= ($generated@@148 ($generated@@279 $generated@@593 $generated@@594)) $generated@@61))
 :pattern ( ($generated@@279 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@70)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@70) (= (type $generated@@598) $generated@@70)) (= ($generated@@595 ($generated@@175 $generated@@597 $generated@@598)) $generated@@597))
 :pattern ( ($generated@@175 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@70)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@70) (= (type $generated@@602) $generated@@70)) (= ($generated@@599 ($generated@@175 $generated@@601 $generated@@602)) $generated@@602))
 :pattern ( ($generated@@175 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@184) (= (type $generated@@604) $generated@@184)) (= ($generated@@182 ($generated@@279 $generated@@603 $generated@@604)) $generated@@603))
 :pattern ( ($generated@@279 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@184) (= (type $generated@@606) $generated@@184)) (= ($generated@@183 ($generated@@279 $generated@@605 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@279 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@170) (= (type $generated@@608) $generated@@81)) (= ($generated@@329 $generated@@607 $generated@@608) ($generated@@329 $generated@@534 $generated@@608)))
 :pattern ( ($generated@@329 ($generated@@533 $generated@@607) $generated@@608))
)))
(assert  (and (forall (($generated@@611 T@U) ) (! (= (type ($generated@@609 $generated@@611)) $generated@@70)
 :pattern ( ($generated@@609 $generated@@611))
)) (forall (($generated@@612 T@U) ($generated@@613 Int) ) (! (let (($generated@@614 ($generated@@349 (type $generated@@612))))
(= (type ($generated@@610 $generated@@612 $generated@@613)) $generated@@614))
 :pattern ( ($generated@@610 $generated@@612 $generated@@613))
))))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@348 $generated@@184)) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@615 ($generated@@609 $generated@@616) $generated@@617) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@347 $generated@@615))) ($generated@@323 ($generated@@610 $generated@@615 $generated@@618) $generated@@616 $generated@@617))
 :pattern ( ($generated@@610 $generated@@615 $generated@@618))
))))
 :pattern ( ($generated@@90 $generated@@615 ($generated@@609 $generated@@616) $generated@@617))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@81) (= (type $generated@@621) $generated@@81)) (= ($generated@@79 ($generated@@311 $generated@@619) ($generated@@313 $generated@@620) ($generated@@313 $generated@@621)) ($generated@@313 ($generated@@79 $generated@@619 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@79 ($generated@@311 $generated@@619) ($generated@@313 $generated@@620) ($generated@@313 $generated@@621)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@622 ($generated@@91 $generated@@623)) $generated@@623)
 :pattern ( ($generated@@91 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@70)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@70) (= ($generated@@624 ($generated@@301 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@301 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@70) (= ($generated@@88 ($generated@@301 $generated@@627)) $generated@@54))
 :pattern ( ($generated@@301 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@70)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@70) (= ($generated@@628 ($generated@@306 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@306 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@70) (= ($generated@@88 ($generated@@306 $generated@@631)) $generated@@55))
 :pattern ( ($generated@@306 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@70)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@70) (= ($generated@@632 ($generated@@190 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@190 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@70) (= ($generated@@88 ($generated@@190 $generated@@635)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@70)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@70) (= ($generated@@636 ($generated@@609 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@609 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@70) (= ($generated@@88 ($generated@@609 $generated@@639)) $generated@@57))
 :pattern ( ($generated@@609 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
(= ($generated@@432 $generated@@641 ($generated@@372 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@372 $generated@@640))
)))
(assert (forall (($generated@@643 Int) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@81) (= (type $generated@@645) $generated@@81)) (< ($generated@@642 $generated@@644) ($generated@@642 ($generated@@79 $generated@@643 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@79 $generated@@643 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 Int) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@81) (= (type $generated@@648) $generated@@81)) (< ($generated@@642 $generated@@648) ($generated@@642 ($generated@@79 $generated@@646 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@79 $generated@@646 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@649) ($generated@@392 $generated@@184 $generated@@184)) (= (type $generated@@650) $generated@@70)) (= (type $generated@@651) $generated@@70)) (= ($generated@@78 $generated@@649 ($generated@@517 $generated@@650 $generated@@651)) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@390 $generated@@649) $generated@@652))) (and ($generated@@280 ($generated@@97 ($generated@@492 $generated@@649) $generated@@652) $generated@@651) ($generated@@280 $generated@@652 $generated@@650)))
 :pattern ( ($generated@@97 ($generated@@492 $generated@@649) $generated@@652))
 :pattern ( ($generated@@97 ($generated@@390 $generated@@649) $generated@@652))
))))
 :pattern ( ($generated@@78 $generated@@649 ($generated@@517 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@653) ($generated@@410 $generated@@184 $generated@@184)) (= (type $generated@@654) $generated@@70)) (= (type $generated@@655) $generated@@70)) (= ($generated@@78 $generated@@653 ($generated@@525 $generated@@654 $generated@@655)) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@408 $generated@@653) $generated@@656))) (and ($generated@@280 ($generated@@97 ($generated@@500 $generated@@653) $generated@@656) $generated@@655) ($generated@@280 $generated@@656 $generated@@654)))
 :pattern ( ($generated@@97 ($generated@@500 $generated@@653) $generated@@656))
 :pattern ( ($generated@@97 ($generated@@408 $generated@@653) $generated@@656))
))))
 :pattern ( ($generated@@78 $generated@@653 ($generated@@525 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@184) (= (type $generated@@659) $generated@@184)) (< ($generated@@657 $generated@@658) ($generated@@642 ($generated@@279 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@279 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@184) (= (type $generated@@661) $generated@@184)) (< ($generated@@657 $generated@@661) ($generated@@642 ($generated@@279 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@279 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@170) (= (type $generated@@663) $generated@@81)) (= ($generated@@329 ($generated@@266 $generated@@662) $generated@@663) ($generated@@329 $generated@@662 $generated@@663)))
 :pattern ( ($generated@@329 ($generated@@266 $generated@@662) $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@184) (= (type $generated@@665) $generated@@70)) (= (type $generated@@666) $generated@@70)) ($generated@@280 $generated@@664 ($generated@@517 $generated@@665 $generated@@666))) (and (= ($generated@@372 ($generated@@432 ($generated@@392 $generated@@184 $generated@@184) $generated@@664)) $generated@@664) ($generated@@78 ($generated@@432 ($generated@@392 $generated@@184 $generated@@184) $generated@@664) ($generated@@517 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@280 $generated@@664 ($generated@@517 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@184) (= (type $generated@@668) $generated@@70)) (= (type $generated@@669) $generated@@70)) ($generated@@280 $generated@@667 ($generated@@525 $generated@@668 $generated@@669))) (and (= ($generated@@372 ($generated@@432 ($generated@@410 $generated@@184 $generated@@184) $generated@@667)) $generated@@667) ($generated@@78 ($generated@@432 ($generated@@410 $generated@@184 $generated@@184) $generated@@667) ($generated@@525 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@280 $generated@@667 ($generated@@525 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@70) (= (type $generated@@671) $generated@@70)) (= (type $generated@@672) $generated@@184)) ($generated@@280 $generated@@672 ($generated@@175 $generated@@670 $generated@@671))) (and (= ($generated@@372 ($generated@@432 $generated@@81 $generated@@672)) $generated@@672) ($generated@@78 ($generated@@432 $generated@@81 $generated@@672) ($generated@@175 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@280 $generated@@672 ($generated@@175 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (not ($generated@@0 ($generated@@97 ($generated@@539 $generated@@674) $generated@@673))))
 :pattern ( (let (($generated@@674 (type $generated@@673)))
($generated@@97 ($generated@@539 $generated@@674) $generated@@673)))
)))
(assert (forall (($generated@@676 T@U) ) (! (= (type ($generated@@675 $generated@@676)) $generated@@75)
 :pattern ( ($generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@70) (= (type $generated@@678) $generated@@70)) (and (= ($generated@@88 ($generated@@175 $generated@@677 $generated@@678)) $generated@@62) (= ($generated@@675 ($generated@@175 $generated@@677 $generated@@678)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@81) (= (type $generated@@680) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@680) (and ($generated@@337 $generated@@679) ($generated@@90 $generated@@679 $generated@@80 $generated@@680)))) ($generated@@90 ($generated@@8 ($generated@@153 $generated@@679)) $generated@@46 $generated@@680))
 :pattern ( ($generated@@90 ($generated@@8 ($generated@@153 $generated@@679)) $generated@@46 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (= ($generated@@657 ($generated@@372 $generated@@681)) ($generated@@642 $generated@@681)))
 :pattern ( ($generated@@657 ($generated@@372 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@184) ($generated@@280 $generated@@682 ($generated@@91 0))) (and (= ($generated@@372 ($generated@@432 $generated@@2 $generated@@682)) $generated@@682) ($generated@@78 ($generated@@432 ($generated@@92 $generated@@184 $generated@@4) $generated@@682) ($generated@@91 0))))
 :pattern ( ($generated@@280 $generated@@682 ($generated@@91 0)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@683) $generated@@184) (= (type $generated@@684) $generated@@70)) ($generated@@280 $generated@@683 ($generated@@301 $generated@@684))) (and (= ($generated@@372 ($generated@@432 ($generated@@92 $generated@@184 $generated@@4) $generated@@683)) $generated@@683) ($generated@@78 ($generated@@432 ($generated@@92 $generated@@184 $generated@@4) $generated@@683) ($generated@@301 $generated@@684))))
 :pattern ( ($generated@@280 $generated@@683 ($generated@@301 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@184) (= (type $generated@@686) $generated@@70)) ($generated@@280 $generated@@685 ($generated@@306 $generated@@686))) (and (= ($generated@@372 ($generated@@432 ($generated@@92 $generated@@184 $generated@@4) $generated@@685)) $generated@@685) ($generated@@78 ($generated@@432 ($generated@@92 $generated@@184 $generated@@4) $generated@@685) ($generated@@306 $generated@@686))))
 :pattern ( ($generated@@280 $generated@@685 ($generated@@306 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@184) (= (type $generated@@688) $generated@@70)) ($generated@@280 $generated@@687 ($generated@@190 $generated@@688))) (and (= ($generated@@372 ($generated@@432 ($generated@@92 $generated@@184 $generated@@2) $generated@@687)) $generated@@687) ($generated@@78 ($generated@@432 ($generated@@92 $generated@@184 $generated@@2) $generated@@687) ($generated@@190 $generated@@688))))
 :pattern ( ($generated@@280 $generated@@687 ($generated@@190 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@184) (= (type $generated@@690) $generated@@70)) ($generated@@280 $generated@@689 ($generated@@609 $generated@@690))) (and (= ($generated@@372 ($generated@@432 ($generated@@348 $generated@@184) $generated@@689)) $generated@@689) ($generated@@78 ($generated@@432 ($generated@@348 $generated@@184) $generated@@689) ($generated@@609 $generated@@690))))
 :pattern ( ($generated@@280 $generated@@689 ($generated@@609 $generated@@690)))
)))
(assert (= ($generated@@88 $generated@@80) $generated@@64))
(assert (= ($generated@@675 $generated@@80) $generated@@68))
(assert (= ($generated@@88 $generated@@263) $generated@@66))
(assert (= ($generated@@675 $generated@@263) $generated@@69))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@691) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@692) $generated@@70)) (= (type $generated@@693) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@691 ($generated@@190 $generated@@692) $generated@@693) (forall (($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@694) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@691 $generated@@694)))) ($generated@@323 $generated@@694 $generated@@692 $generated@@693))
 :pattern ( ($generated@@97 $generated@@691 $generated@@694))
))))
 :pattern ( ($generated@@90 $generated@@691 ($generated@@190 $generated@@692) $generated@@693))
)))
(assert (= $generated@@189 ($generated@@313 $generated@@189)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@81) (= (type $generated@@696) $generated@@70)) (= (type $generated@@697) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@697) (and ($generated@@174 $generated@@695) (exists (($generated@@698 T@U) ) (!  (and (= (type $generated@@698) $generated@@70) ($generated@@90 $generated@@695 ($generated@@175 $generated@@696 $generated@@698) $generated@@697))
 :pattern ( ($generated@@90 $generated@@695 ($generated@@175 $generated@@696 $generated@@698) $generated@@697))
))))) ($generated@@323 ($generated@@182 $generated@@695) $generated@@696 $generated@@697))
 :pattern ( ($generated@@323 ($generated@@182 $generated@@695) $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (= (type $generated@@699) $generated@@81) (= (type $generated@@700) $generated@@70)) (= (type $generated@@701) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@701) (and ($generated@@174 $generated@@699) (exists (($generated@@702 T@U) ) (!  (and (= (type $generated@@702) $generated@@70) ($generated@@90 $generated@@699 ($generated@@175 $generated@@702 $generated@@700) $generated@@701))
 :pattern ( ($generated@@90 $generated@@699 ($generated@@175 $generated@@702 $generated@@700) $generated@@701))
))))) ($generated@@323 ($generated@@183 $generated@@699) $generated@@700 $generated@@701))
 :pattern ( ($generated@@323 ($generated@@183 $generated@@699) $generated@@700 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ($generated@@705 T@U) ) (! (let (($generated@@706 (type $generated@@704)))
 (=> (and (and (= (type $generated@@703) ($generated@@92 $generated@@706 $generated@@2)) (= (type $generated@@705) $generated@@706)) (not (= $generated@@704 $generated@@705))) (= ($generated ($generated@@97 $generated@@703 $generated@@705)) ($generated ($generated@@97 ($generated@@356 $generated@@703 $generated@@704) $generated@@705)))))
 :pattern ( ($generated@@356 $generated@@703 $generated@@704) ($generated@@97 $generated@@703 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) $generated@@81) (= (type $generated@@708) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@708) (and ($generated@@337 $generated@@707) ($generated@@90 $generated@@707 $generated@@80 $generated@@708)))) ($generated@@90 ($generated@@157 $generated@@707) $generated@@80 $generated@@708))
 :pattern ( ($generated@@90 ($generated@@157 $generated@@707) $generated@@80 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@81) (= (type $generated@@710) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@710) (and ($generated@@337 $generated@@709) ($generated@@90 $generated@@709 $generated@@80 $generated@@710)))) ($generated@@90 ($generated@@162 $generated@@709) $generated@@80 $generated@@710))
 :pattern ( ($generated@@90 ($generated@@162 $generated@@709) $generated@@80 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@184) (= (type $generated@@712) $generated@@184)) (= ($generated@@279 ($generated@@313 $generated@@711) ($generated@@313 $generated@@712)) ($generated@@313 ($generated@@279 $generated@@711 $generated@@712))))
 :pattern ( ($generated@@279 ($generated@@313 $generated@@711) ($generated@@313 $generated@@712)))
)))
(assert (forall (($generated@@713 Int) ) (! (= ($generated@@372 ($generated@@8 ($generated@@311 $generated@@713))) ($generated@@313 ($generated@@372 ($generated@@8 $generated@@713))))
 :pattern ( ($generated@@372 ($generated@@8 ($generated@@311 $generated@@713))))
)))
(assert (forall (($generated@@714 T@U) ) (! (= ($generated@@372 ($generated@@313 $generated@@714)) ($generated@@313 ($generated@@372 $generated@@714)))
 :pattern ( ($generated@@372 ($generated@@313 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ) (! (let (($generated@@716 ($generated@@349 (type $generated@@715))))
 (=> (and (= (type $generated@@715) ($generated@@348 $generated@@716)) (= ($generated@@347 $generated@@715) 0)) (= $generated@@715 ($generated@@346 $generated@@716))))
 :pattern ( ($generated@@347 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (! (let (($generated@@720 (type $generated@@718)))
 (=> (and (and (= (type $generated@@717) ($generated@@92 $generated@@720 $generated@@2)) (= (type $generated@@719) $generated@@2)) (<= 0 ($generated $generated@@719))) (= ($generated@@355 ($generated@@98 $generated@@717 $generated@@718 $generated@@719)) (+ (- ($generated@@355 $generated@@717) ($generated ($generated@@97 $generated@@717 $generated@@718))) ($generated $generated@@719)))))
 :pattern ( ($generated@@355 ($generated@@98 $generated@@717 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@81) (= ($generated@@78 $generated@@721 $generated@@263)  (and ($generated@@78 $generated@@721 $generated@@80) ($generated@@169 ($generated@@266 $generated@@534) $generated@@721))))
 :pattern ( ($generated@@78 $generated@@721 $generated@@263))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@723) $generated@@2)) ($generated@@90 $generated@@723 $generated@@46 $generated@@722))
 :pattern ( ($generated@@90 $generated@@723 $generated@@46 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@725) $generated@@3)) ($generated@@90 $generated@@725 $generated@@47 $generated@@724))
 :pattern ( ($generated@@90 $generated@@725 $generated@@47 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@727) $generated@@4)) ($generated@@90 $generated@@727 $generated@@44 $generated@@726))
 :pattern ( ($generated@@90 $generated@@727 $generated@@44 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@729) $generated@@563)) ($generated@@90 $generated@@729 $generated@@45 $generated@@728))
 :pattern ( ($generated@@90 $generated@@729 $generated@@45 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@731) $generated@@184)) ($generated@@90 $generated@@731 $generated@@48 $generated@@730))
 :pattern ( ($generated@@90 $generated@@731 $generated@@48 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) ($generated@@348 $generated@@184)) (= (type $generated@@733) $generated@@70)) (= ($generated@@78 $generated@@732 ($generated@@609 $generated@@733)) (forall (($generated@@734 Int) ) (!  (=> (and (<= 0 $generated@@734) (< $generated@@734 ($generated@@347 $generated@@732))) ($generated@@280 ($generated@@610 $generated@@732 $generated@@734) $generated@@733))
 :pattern ( ($generated@@610 $generated@@732 $generated@@734))
))))
 :pattern ( ($generated@@78 $generated@@732 ($generated@@609 $generated@@733)))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 Int) ) (!  (=> (= (type $generated@@736) ($generated@@348 $generated@@184)) (=> (and (<= 0 $generated@@737) (< $generated@@737 ($generated@@347 $generated@@736))) (< ($generated@@642 ($generated@@432 $generated@@81 ($generated@@610 $generated@@736 $generated@@737))) ($generated@@735 $generated@@736))))
 :pattern ( ($generated@@642 ($generated@@432 $generated@@81 ($generated@@610 $generated@@736 $generated@@737))))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (and (and (= (type $generated@@738) ($generated@@392 $generated@@184 $generated@@184)) (= (type $generated@@739) $generated@@70)) (= (type $generated@@740) $generated@@70)) ($generated@@78 $generated@@738 ($generated@@517 $generated@@739 $generated@@740))) (and (and ($generated@@78 ($generated@@390 $generated@@738) ($generated@@301 $generated@@739)) ($generated@@78 ($generated@@448 $generated@@738) ($generated@@301 $generated@@740))) ($generated@@78 ($generated@@491 $generated@@738) ($generated@@301 ($generated@@175 $generated@@739 $generated@@740)))))
 :pattern ( ($generated@@78 $generated@@738 ($generated@@517 $generated@@739 $generated@@740)))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (and (and (= (type $generated@@741) ($generated@@410 $generated@@184 $generated@@184)) (= (type $generated@@742) $generated@@70)) (= (type $generated@@743) $generated@@70)) ($generated@@78 $generated@@741 ($generated@@525 $generated@@742 $generated@@743))) (and (and ($generated@@78 ($generated@@408 $generated@@741) ($generated@@306 $generated@@742)) ($generated@@78 ($generated@@459 $generated@@741) ($generated@@306 $generated@@743))) ($generated@@78 ($generated@@499 $generated@@741) ($generated@@306 ($generated@@175 $generated@@742 $generated@@743)))))
 :pattern ( ($generated@@78 $generated@@741 ($generated@@525 $generated@@742 $generated@@743)))
)))
(assert (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@2) ($generated@@78 $generated@@744 $generated@@46))
 :pattern ( ($generated@@78 $generated@@744 $generated@@46))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@3) ($generated@@78 $generated@@745 $generated@@47))
 :pattern ( ($generated@@78 $generated@@745 $generated@@47))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@4) ($generated@@78 $generated@@746 $generated@@44))
 :pattern ( ($generated@@78 $generated@@746 $generated@@44))
)))
(assert (forall (($generated@@747 T@U) ) (!  (=> (= (type $generated@@747) $generated@@563) ($generated@@78 $generated@@747 $generated@@45))
 :pattern ( ($generated@@78 $generated@@747 $generated@@45))
)))
(assert (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@184) ($generated@@78 $generated@@748 $generated@@48))
 :pattern ( ($generated@@78 $generated@@748 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 () Int)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () T@U)
(declare-fun $generated@@753 () T@U)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () T@U)
(declare-fun $generated@@756 () T@U)
(declare-fun $generated@@757 () T@U)
(declare-fun $generated@@758 () Int)
(declare-fun $generated@@759 () Int)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () T@U)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@749) $generated@@81) (= (type $generated@@751) $generated@@81)) (= (type $generated@@752) $generated@@81)) (= (type $generated@@753) $generated@@81)) (= (type $generated@@754) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@755) $generated@@81)) (= (type $generated@@756) $generated@@81)) (= (type $generated@@757) $generated@@81)) (= (type $generated@@760) ($generated@@197 $generated@@93 $generated@@4))) (= (type $generated@@761) $generated@@93)) (= (type $generated@@762) ($generated@@197 $generated@@93 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@764 true))
(let (($generated@@765  (=> (= $generated@@749 ($generated@@79 $generated@@750 $generated@@751 $generated@@752)) (=> (and ($generated@@78 $generated@@751 $generated@@80) ($generated@@78 $generated@@752 $generated@@80)) (=> (and (and (and (and ($generated@@78 $generated@@753 $generated@@80) ($generated@@90 $generated@@753 $generated@@80 $generated@@754)) (= $generated@@755 $generated@@752)) (and ($generated@@78 $generated@@755 $generated@@80) (= $generated@@753 $generated@@755))) (and (and (and ($generated@@78 $generated@@756 $generated@@80) ($generated@@90 $generated@@756 $generated@@80 $generated@@754)) (and (= $generated@@757 $generated@@751) ($generated@@78 $generated@@757 $generated@@80))) (and (and (= $generated@@756 $generated@@757) (= $generated@@758 $generated@@750)) (and ($generated@@78 ($generated@@8 $generated@@758) $generated@@46) (= $generated@@759 $generated@@758))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@78 $generated@@756 $generated@@263)) (=> ($generated@@78 $generated@@756 $generated@@263) (=> ($generated@@90 $generated@@756 $generated@@263 $generated@@754) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< ($generated@@642 $generated@@756) ($generated@@642 $generated@@749))) (=> (< ($generated@@642 $generated@@756) ($generated@@642 $generated@@749)) (=> ($generated@@330 $generated@@756) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@78 $generated@@753 $generated@@263)) (=> ($generated@@78 $generated@@753 $generated@@263) (=> (and ($generated@@90 $generated@@753 $generated@@263 $generated@@754) (= (ControlFlow 0 4) (- 0 3))) (< ($generated@@642 $generated@@753) ($generated@@642 $generated@@749))))))))))))))))
(let (($generated@@766  (=> (not (= $generated@@749 $generated@@189)) (and (=> (= (ControlFlow 0 9) 4) $generated@@765) (=> (= (ControlFlow 0 9) 8) $generated@@764)))))
(let (($generated@@767 true))
(let (($generated@@768  (=> (= $generated@@760 ($generated@@251 $generated@@761 $generated@@754 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 2) $generated@@767) (=> (= (ControlFlow 0 10) 9) $generated@@766)))))
(let (($generated@@769 true))
(let (($generated@@770  (=> (= $generated@@762 ($generated@@196 $generated@@761 $generated@@754 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@769) (=> (= (ControlFlow 0 11) 10) $generated@@768)))))
(let (($generated@@771  (=> (and (and (and ($generated@@287 $generated@@754) ($generated@@763 $generated@@754)) ($generated@@78 $generated@@749 $generated@@263)) (and (= 3 $generated@@168) (= (ControlFlow 0 12) 11))) $generated@@770)))
$generated@@771)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U Int) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@198 (T@U T@U T@U) T@U)
(declare-fun $generated@@199 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@200 (T@T T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@T) T@T)
(declare-fun $generated@@203 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (Int) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@304 (T@U T@U T@U) Bool)
(declare-fun $generated@@312 (T@U) Bool)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@T) T@U)
(declare-fun $generated@@363 (T@T T@T) T@T)
(declare-fun $generated@@364 (T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@416 (T@U) Bool)
(declare-fun $generated@@418 () Int)
(declare-fun $generated@@419 (T@U Int) Bool)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@459 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Int) ) (! (= (type ($generated@@146 $generated@@150 $generated@@151 $generated@@152)) $generated@@79)
 :pattern ( ($generated@@146 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@147 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@153))
))) (= (type $generated@@149) $generated@@148)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Int) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) $generated@@79)) (= ($generated@@146 $generated@@154 $generated@@155 $generated@@156) ($generated@@146 $generated@@149 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@146 ($generated@@147 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@72)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@79) (= (type $generated@@161) $generated@@79)) (= ($generated@@157 ($generated@@77 $generated@@159 $generated@@160 $generated@@161)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@79) (= (type $generated@@165) $generated@@79)) (= ($generated@@162 ($generated@@77 $generated@@163 $generated@@164 $generated@@165)) $generated@@163))
 :pattern ( ($generated@@77 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@79)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 Int) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@79) (= (type $generated@@170) $generated@@79)) (= ($generated@@166 ($generated@@77 $generated@@168 $generated@@169 $generated@@170)) $generated@@169))
 :pattern ( ($generated@@77 $generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@79)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 Int) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (= (type $generated@@174) $generated@@79) (= (type $generated@@175) $generated@@79)) (= ($generated@@171 ($generated@@77 $generated@@173 $generated@@174 $generated@@175)) $generated@@175))
 :pattern ( ($generated@@77 $generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@76 $generated@@176 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@176 ($generated@@89 0)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@179 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (and (= (type $generated@@181) $generated@@68) (= (type $generated@@182) $generated@@68)) (= (type $generated@@183) $generated@@79)) ($generated@@76 $generated@@183 ($generated@@178 $generated@@181 $generated@@182))) ($generated@@177 $generated@@183))
 :pattern ( ($generated@@177 $generated@@183) ($generated@@76 $generated@@183 ($generated@@178 $generated@@181 $generated@@182)))
)))
(assert  (and (and (= ($generated@@1 $generated@@187) 16) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@185 $generated@@188))
))) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@186 $generated@@189)) $generated@@187)
 :pattern ( ($generated@@186 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@79) (= (type $generated@@191) $generated@@79)) true) (= ($generated@@184 $generated@@190 $generated@@191)  (and (= ($generated@@185 $generated@@190) ($generated@@185 $generated@@191)) (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)))))
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
)))
(assert (= (type $generated@@192) $generated@@79))
(assert (= ($generated@@157 $generated@@192) $generated@@63))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@68)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@90 $generated@@187 $generated@@2)) (= (type $generated@@197) $generated@@68)) ($generated@@76 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@76 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (= ($generated@@1 ($generated@@200 $generated@@204 $generated@@205)) 17)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@201 ($generated@@200 $generated@@206 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@200 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@202 ($generated@@200 $generated@@208 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@200 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@202 (type $generated@@210))))
(= (type ($generated@@198 $generated@@210 $generated@@211 $generated@@212)) $generated@@213))
 :pattern ( ($generated@@198 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 (type $generated@@217)))
(let (($generated@@219 (type $generated@@215)))
(= (type ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@200 $generated@@219 $generated@@218))))
 :pattern ( ($generated@@203 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@202 (type $generated@@220))))
 (=> (= (type $generated@@223) $generated@@224) (= ($generated@@198 ($generated@@203 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@221 $generated@@222) $generated@@223)))
 :weight 0
))) (and (and (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@198 ($generated@@203 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@198 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@198 ($generated@@203 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@198 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or true (= ($generated@@198 ($generated@@203 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@198 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@200 $generated@@91 $generated@@4))
 :pattern ( ($generated@@199 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@71 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@91) (= (type $generated@@248) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@249) ($generated@@70 $generated@@4))) (= (type $generated@@251) $generated@@91)) (= (type $generated@@252) ($generated@@70 $generated@@253))) (= ($generated@@0 ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@198 ($generated@@199 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@254 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@200 $generated@@91 $generated@@4))
 :pattern ( ($generated@@254 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@71 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@91) (= (type $generated@@260) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@261) ($generated@@70 $generated@@4))) (= (type $generated@@263) $generated@@91)) (= (type $generated@@264) ($generated@@70 $generated@@265))) (= ($generated@@0 ($generated@@198 ($generated@@254 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@198 ($generated@@254 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@79)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@187)) (= (type $generated@@273) $generated@@187)) (= ($generated@@76 ($generated@@266 $generated@@272 $generated@@273) ($generated@@178 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@76 ($generated@@266 $generated@@272 $generated@@273) ($generated@@178 $generated@@270 $generated@@271)))
)))
(assert ($generated@@76 $generated@@192 $generated@@78))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@274 $generated@@275)) ($generated@@88 $generated@@192 $generated@@78 $generated@@275))
 :pattern ( ($generated@@88 $generated@@192 $generated@@78 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@79) (= (type $generated@@277) $generated@@79)) (= ($generated@@184 $generated@@276 $generated@@277) (= $generated@@276 $generated@@277)))
 :pattern ( ($generated@@184 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@79) (= (type $generated@@280) $generated@@79)) (= ($generated@@278 $generated@@279 $generated@@280) (= $generated@@279 $generated@@280)))
 :pattern ( ($generated@@278 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@90 $generated@@187 $generated@@4)) (= (type $generated@@284) $generated@@68)) (= ($generated@@76 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@187) ($generated@@0 ($generated@@95 $generated@@283 $generated@@285))) ($generated@@267 $generated@@285 $generated@@284))
 :pattern ( ($generated@@95 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@76 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@68)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@90 $generated@@187 $generated@@4)) (= (type $generated@@289) $generated@@68)) (= ($generated@@76 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@187) ($generated@@0 ($generated@@95 $generated@@288 $generated@@290))) ($generated@@267 $generated@@290 $generated@@289))
 :pattern ( ($generated@@95 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@76 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@291 $generated@@292) $generated@@292)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
(= (type ($generated@@293 $generated@@294)) $generated@@295))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= ($generated@@293 $generated@@296) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@79) (= (type $generated@@299) $generated@@79)) (and ($generated@@297 $generated@@298) ($generated@@297 $generated@@299))) (= ($generated@@278 $generated@@298 $generated@@299) true))
 :pattern ( ($generated@@278 $generated@@298 $generated@@299) ($generated@@297 $generated@@298))
 :pattern ( ($generated@@278 $generated@@298 $generated@@299) ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 Int) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (= (type $generated@@301) $generated@@79) (= (type $generated@@302) $generated@@79)) (= (type $generated@@303) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@274 $generated@@303)) (= ($generated@@88 ($generated@@77 $generated@@300 $generated@@301 $generated@@302) $generated@@78 $generated@@303)  (and (and ($generated@@88 ($generated@@8 $generated@@300) $generated@@46 $generated@@303) ($generated@@88 $generated@@301 $generated@@78 $generated@@303)) ($generated@@88 $generated@@302 $generated@@78 $generated@@303))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@300 $generated@@301 $generated@@302) $generated@@78 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@305) $generated@@68) (= (type $generated@@306) $generated@@68)) (= (type $generated@@307) $generated@@187)) (= (type $generated@@308) $generated@@187)) (= (type $generated@@309) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@274 $generated@@309)) (= ($generated@@88 ($generated@@266 $generated@@307 $generated@@308) ($generated@@178 $generated@@305 $generated@@306) $generated@@309)  (and ($generated@@304 $generated@@307 $generated@@305 $generated@@309) ($generated@@304 $generated@@308 $generated@@306 $generated@@309))))
 :pattern ( ($generated@@88 ($generated@@266 $generated@@307 $generated@@308) ($generated@@178 $generated@@305 $generated@@306) $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@79) (= ($generated@@177 $generated@@310) (= ($generated@@157 $generated@@310) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@79) (= ($generated@@297 $generated@@311) (= ($generated@@157 $generated@@311) $generated@@63)))
 :pattern ( ($generated@@297 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@79) (= ($generated@@312 $generated@@313) (= ($generated@@157 $generated@@313) $generated@@65)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@79) ($generated@@312 $generated@@314)) (exists (($generated@@315 Int) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@79) (= (type $generated@@317) $generated@@79)) (= $generated@@314 ($generated@@77 $generated@@315 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@312 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@79) ($generated@@177 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@187) (= (type $generated@@320) $generated@@187)) (= $generated@@318 ($generated@@266 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@177 $generated@@318))
)))
(assert  (and (and (forall (($generated@@325 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@325)) 18)) (forall (($generated@@326 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@323 $generated@@326))
))) (forall (($generated@@327 T@T) ) (! (= (type ($generated@@321 $generated@@327)) ($generated@@323 $generated@@327))
 :pattern ( ($generated@@321 $generated@@327))
))))
(assert (forall (($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@328)) 0)
 :pattern ( ($generated@@321 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@79) ($generated@@297 $generated@@329)) (= $generated@@329 $generated@@192))
 :pattern ( ($generated@@297 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@187)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@68) (= (type $generated@@334) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@304 ($generated@@330 $generated@@332) $generated@@333 $generated@@334) ($generated@@88 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@304 ($generated@@330 $generated@@332) $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@335) $generated@@79) (= (type $generated@@336) $generated@@79)) (and ($generated@@312 $generated@@335) ($generated@@312 $generated@@336))) (= ($generated@@278 $generated@@335 $generated@@336)  (and (and (= ($generated@@162 $generated@@335) ($generated@@162 $generated@@336)) ($generated@@278 ($generated@@166 $generated@@335) ($generated@@166 $generated@@336))) ($generated@@278 ($generated@@171 $generated@@335) ($generated@@171 $generated@@336)))))
 :pattern ( ($generated@@278 $generated@@335 $generated@@336) ($generated@@312 $generated@@335))
 :pattern ( ($generated@@278 $generated@@335 $generated@@336) ($generated@@312 $generated@@336))
)))
(assert (forall (($generated@@339 T@T) ) (! (= (type ($generated@@338 $generated@@339)) ($generated@@90 $generated@@339 $generated@@2))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@93 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@90 $generated@@341 $generated@@2)) (and (= (= ($generated@@337 $generated@@340) 0) (= $generated@@340 ($generated@@338 $generated@@341))) (=> (not (= ($generated@@337 $generated@@340) 0)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) (< 0 ($generated ($generated@@95 $generated@@340 $generated@@342))))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@90 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@95 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@95 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert  (and (and (and (and (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (= ($generated@@1 ($generated@@363 $generated@@366 $generated@@367)) 20)) (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@365 ($generated@@363 $generated@@370 $generated@@371)) $generated@@371)
 :pattern ( ($generated@@363 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@364 (type $generated@@372))))
(= (type ($generated@@361 $generated@@372)) ($generated@@90 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@372))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= (type ($generated@@362 $generated@@374 $generated@@375)) ($generated@@363 $generated@@374 $generated@@375))
 :pattern ( ($generated@@362 $generated@@374 $generated@@375))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@T) ) (! (let (($generated@@378 (type $generated@@376)))
 (not ($generated@@0 ($generated@@95 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376))))
 :pattern ( (let (($generated@@378 (type $generated@@376)))
($generated@@95 ($generated@@361 ($generated@@362 $generated@@378 $generated@@377)) $generated@@376)))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@93 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@90 $generated@@380 $generated@@2)) (= ($generated@@194 $generated@@379) (forall (($generated@@381 T@U) ) (!  (=> (= (type $generated@@381) $generated@@380) (and (<= 0 ($generated ($generated@@95 $generated@@379 $generated@@381))) (<= ($generated ($generated@@95 $generated@@379 $generated@@381)) ($generated@@337 $generated@@379))))
 :pattern ( ($generated@@95 $generated@@379 $generated@@381))
)))))
 :pattern ( ($generated@@194 $generated@@379))
)))
(assert (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@187) ($generated@@267 $generated@@385 $generated@@78)) (and (= ($generated@@330 ($generated@@382 $generated@@79 $generated@@385)) $generated@@385) ($generated@@76 ($generated@@382 $generated@@79 $generated@@385) $generated@@78)))
 :pattern ( ($generated@@267 $generated@@385 $generated@@78))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@347 (type $generated@@386))))
(let (($generated@@388 ($generated@@346 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@345 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@344 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) ($generated@@0 ($generated@@95 ($generated@@343 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@343 $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@347 (type $generated@@391))))
(= (type ($generated@@390 $generated@@391)) ($generated@@90 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@347 (type $generated@@393))))
(let (($generated@@395 ($generated@@346 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@345 $generated@@395 $generated@@394)) (or (= $generated@@393 ($generated@@344 $generated@@395 $generated@@394)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@394) ($generated@@0 ($generated@@95 ($generated@@390 $generated@@393) $generated@@396)))
 :no-pattern (type $generated@@396)
 :no-pattern ($generated $generated@@396)
 :no-pattern ($generated@@0 $generated@@396)
))))))
 :pattern ( ($generated@@390 $generated@@393))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@365 (type $generated@@397))))
(let (($generated@@399 ($generated@@364 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@363 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@362 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@95 ($generated@@361 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@361 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@365 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@90 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@365 (type $generated@@404))))
(let (($generated@@406 ($generated@@364 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@363 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@362 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@95 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (= (type ($generated@@408 $generated@@409)) $generated@@148)
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 Int) ) (!  (=> (and (= (type $generated@@410) $generated@@148) (= (type $generated@@411) $generated@@79)) (= ($generated@@146 ($generated@@408 $generated@@410) $generated@@411 $generated@@412) ($generated@@146 $generated@@410 $generated@@411 $generated@@412)))
 :pattern ( ($generated@@146 ($generated@@408 $generated@@410) $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@90 $generated@@187 $generated@@2)) (= (type $generated@@414) $generated@@68)) (= ($generated@@76 $generated@@413 ($generated@@193 $generated@@414)) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@187) (< 0 ($generated ($generated@@95 $generated@@413 $generated@@415)))) ($generated@@267 $generated@@415 $generated@@414))
 :pattern ( ($generated@@95 $generated@@413 $generated@@415))
))))
 :pattern ( ($generated@@76 $generated@@413 ($generated@@193 $generated@@414)))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@79) ($generated@@416 $generated@@417)) (or ($generated@@297 $generated@@417) ($generated@@312 $generated@@417)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert  (=> (<= 1 $generated@@418) (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 Int) ) (!  (=> (and (and (= (type $generated@@420) $generated@@148) (= (type $generated@@421) $generated@@79)) (or ($generated@@419 ($generated@@293 $generated@@421) ($generated@@291 $generated@@422)) (and (not (= 1 $generated@@418)) ($generated@@76 $generated@@421 $generated@@78)))) (and (and ($generated@@416 ($generated@@293 $generated@@421)) (=> (not ($generated@@278 $generated@@421 $generated@@192)) (and (=> ($generated@@0 ($generated@@293 ($generated@@11 (< $generated@@422 ($generated@@162 ($generated@@293 $generated@@421)))))) ($generated@@419 ($generated@@293 ($generated@@171 ($generated@@293 $generated@@421))) ($generated@@291 ($generated@@162 ($generated@@293 $generated@@421))))) (=> (not ($generated@@0 ($generated@@293 ($generated@@11 (< $generated@@422 ($generated@@162 ($generated@@293 $generated@@421))))))) ($generated@@419 ($generated@@293 ($generated@@171 ($generated@@293 $generated@@421))) ($generated@@291 $generated@@422)))))) (= ($generated@@146 ($generated@@408 $generated@@420) ($generated@@293 $generated@@421) ($generated@@291 $generated@@422)) (ite ($generated@@278 $generated@@421 $generated@@192) ($generated@@77 ($generated@@291 $generated@@422) ($generated@@293 $generated@@192) ($generated@@293 $generated@@192)) (ite (< $generated@@422 ($generated@@162 ($generated@@293 $generated@@421))) ($generated@@77 ($generated@@291 $generated@@422) ($generated@@293 ($generated@@146 ($generated@@408 $generated@@420) ($generated@@293 ($generated@@171 ($generated@@293 $generated@@421))) ($generated@@291 ($generated@@162 ($generated@@293 $generated@@421))))) ($generated@@293 ($generated@@166 ($generated@@293 $generated@@421)))) ($generated@@77 ($generated@@291 ($generated@@162 ($generated@@293 $generated@@421))) ($generated@@293 ($generated@@146 ($generated@@408 $generated@@420) ($generated@@293 ($generated@@171 ($generated@@293 $generated@@421))) ($generated@@291 $generated@@422))) ($generated@@293 ($generated@@166 ($generated@@293 $generated@@421)))))))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@408 $generated@@420) ($generated@@293 $generated@@421) ($generated@@291 $generated@@422)))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@90 $generated@@187 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@423 ($generated@@281 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@187) ($generated@@0 ($generated@@95 $generated@@423 $generated@@426))) ($generated@@304 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@95 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@88 $generated@@423 ($generated@@281 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@90 $generated@@187 $generated@@4)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@427 ($generated@@286 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@187) ($generated@@0 ($generated@@95 $generated@@427 $generated@@430))) ($generated@@304 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@95 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@88 $generated@@427 ($generated@@286 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@95 ($generated@@338 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@95 ($generated@@338 $generated@@432) $generated@@431)))
)))
(assert  (and (forall (($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@435)) ($generated@@90 $generated@@187 $generated@@4))
 :pattern ( ($generated@@433 $generated@@435))
)) (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@347 (type $generated@@436))))
(let (($generated@@438 ($generated@@346 (type $generated@@436))))
(= (type ($generated@@434 $generated@@436)) ($generated@@90 $generated@@438 $generated@@437))))
 :pattern ( ($generated@@434 $generated@@436))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@345 $generated@@187 $generated@@187)) (= (type $generated@@440) $generated@@187)) (= ($generated@@0 ($generated@@95 ($generated@@433 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@95 ($generated@@343 $generated@@439) ($generated@@185 ($generated@@382 $generated@@79 $generated@@440)))) (= ($generated@@95 ($generated@@434 $generated@@439) ($generated@@185 ($generated@@382 $generated@@79 $generated@@440))) ($generated@@186 ($generated@@382 $generated@@79 $generated@@440))))))
 :pattern ( ($generated@@95 ($generated@@433 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@90 $generated@@187 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@365 (type $generated@@444))))
(let (($generated@@446 ($generated@@364 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@90 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@363 $generated@@187 $generated@@187)) (= (type $generated@@448) $generated@@187)) (= ($generated@@0 ($generated@@95 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@95 ($generated@@361 $generated@@447) ($generated@@185 ($generated@@382 $generated@@79 $generated@@448)))) (= ($generated@@95 ($generated@@442 $generated@@447) ($generated@@185 ($generated@@382 $generated@@79 $generated@@448))) ($generated@@186 ($generated@@382 $generated@@79 $generated@@448))))))
 :pattern ( ($generated@@95 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@346 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@345 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@95 ($generated@@390 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@95 ($generated@@343 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@95 ($generated@@434 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@95 ($generated@@343 $generated@@449) $generated@@453))
 :pattern ( ($generated@@95 ($generated@@434 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@95 ($generated@@390 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@364 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@363 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@95 ($generated@@401 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@95 ($generated@@361 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@95 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@95 ($generated@@361 $generated@@454) $generated@@458))
 :pattern ( ($generated@@95 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@95 ($generated@@401 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (= (type $generated@@462) ($generated@@345 $generated@@187 $generated@@187)) (= (type $generated@@463) $generated@@68)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465) (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@187) ($generated@@0 ($generated@@95 ($generated@@343 $generated@@462) $generated@@466))) (and ($generated@@304 ($generated@@95 ($generated@@434 $generated@@462) $generated@@466) $generated@@464 $generated@@465) ($generated@@304 $generated@@466 $generated@@463 $generated@@465)))
 :pattern ( ($generated@@95 ($generated@@434 $generated@@462) $generated@@466))
 :pattern ( ($generated@@95 ($generated@@343 $generated@@462) $generated@@466))
))))
 :pattern ( ($generated@@88 $generated@@462 ($generated@@459 $generated@@463 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (and (= (type $generated@@470) ($generated@@363 $generated@@187 $generated@@187)) (= (type $generated@@471) $generated@@68)) (= (type $generated@@472) $generated@@68)) (= (type $generated@@473) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@187) ($generated@@0 ($generated@@95 ($generated@@361 $generated@@470) $generated@@474))) (and ($generated@@304 ($generated@@95 ($generated@@442 $generated@@470) $generated@@474) $generated@@472 $generated@@473) ($generated@@304 $generated@@474 $generated@@471 $generated@@473)))
 :pattern ( ($generated@@95 ($generated@@442 $generated@@470) $generated@@474))
 :pattern ( ($generated@@95 ($generated@@361 $generated@@470) $generated@@474))
))))
 :pattern ( ($generated@@88 $generated@@470 ($generated@@467 $generated@@471 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@79) ($generated@@76 $generated@@475 $generated@@78)) (or ($generated@@297 $generated@@475) ($generated@@312 $generated@@475)))
 :pattern ( ($generated@@312 $generated@@475) ($generated@@76 $generated@@475 $generated@@78))
 :pattern ( ($generated@@297 $generated@@475) ($generated@@76 $generated@@475 $generated@@78))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@90 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@365 (type $generated@@478))))
(let (($generated@@480 ($generated@@364 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@363 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@362 $generated@@480 $generated@@479)) (= ($generated@@361 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@361 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@365 (type $generated@@481))))
(let (($generated@@483 ($generated@@364 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@363 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@362 $generated@@483 $generated@@482)) (= ($generated@@401 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@401 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@365 (type $generated@@484))))
(let (($generated@@486 ($generated@@364 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@363 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@362 $generated@@486 $generated@@485)) (= ($generated@@441 $generated@@484) ($generated@@476 $generated@@187))))))
 :pattern ( ($generated@@441 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@347 (type $generated@@487))))
(let (($generated@@489 ($generated@@346 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@345 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@344 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@187) (= (type $generated@@491) $generated@@187)) ($generated@@0 ($generated@@95 ($generated@@433 $generated@@487) ($generated@@330 ($generated@@266 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@433 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@365 (type $generated@@492))))
(let (($generated@@494 ($generated@@364 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@363 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@362 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@187) (= (type $generated@@496) $generated@@187)) ($generated@@0 ($generated@@95 ($generated@@441 $generated@@492) ($generated@@330 ($generated@@266 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@441 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@187) ($generated@@267 $generated@@497 $generated@@46)) (and (= ($generated@@330 ($generated@@382 $generated@@2 $generated@@497)) $generated@@497) ($generated@@76 ($generated@@382 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@187) ($generated@@267 $generated@@498 $generated@@47)) (and (= ($generated@@330 ($generated@@382 $generated@@3 $generated@@498)) $generated@@498) ($generated@@76 ($generated@@382 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@187) ($generated@@267 $generated@@499 $generated@@44)) (and (= ($generated@@330 ($generated@@382 $generated@@4 $generated@@499)) $generated@@499) ($generated@@76 ($generated@@382 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 21))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@187) ($generated@@267 $generated@@501 $generated@@45)) (and (= ($generated@@330 ($generated@@382 $generated@@500 $generated@@501)) $generated@@501) ($generated@@76 ($generated@@382 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@267 ($generated@@330 $generated@@502) $generated@@503) ($generated@@76 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@267 ($generated@@330 $generated@@502) $generated@@503))
)))
(assert  (=> (<= 1 $generated@@418) (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 Int) ) (!  (=> (and (and (= (type $generated@@504) $generated@@148) (= (type $generated@@505) $generated@@79)) (or ($generated@@419 $generated@@505 $generated@@506) (and (not (= 1 $generated@@418)) ($generated@@76 $generated@@505 $generated@@78)))) ($generated@@76 ($generated@@146 $generated@@504 $generated@@505 $generated@@506) $generated@@78))
 :pattern ( ($generated@@146 $generated@@504 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@93 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@90 $generated@@508 $generated@@2)) (<= 0 ($generated@@337 $generated@@507))))
 :pattern ( ($generated@@337 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@324 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@323 $generated@@510)) (<= 0 ($generated@@322 $generated@@509))))
 :pattern ( ($generated@@322 $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@459 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@459 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@459 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@459 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@86 ($generated@@459 $generated@@519 $generated@@520)) $generated@@58))
 :pattern ( ($generated@@459 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@467 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@467 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@467 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@467 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@86 ($generated@@467 $generated@@529 $generated@@530)) $generated@@59))
 :pattern ( ($generated@@467 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@187) (= (type $generated@@532) $generated@@187)) (= ($generated@@157 ($generated@@266 $generated@@531 $generated@@532)) $generated@@61))
 :pattern ( ($generated@@266 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@178 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@178 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@68) (= (type $generated@@540) $generated@@68)) (= ($generated@@537 ($generated@@178 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@178 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@187) (= (type $generated@@542) $generated@@187)) (= ($generated@@185 ($generated@@266 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@266 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@187) (= (type $generated@@544) $generated@@187)) (= ($generated@@186 ($generated@@266 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@266 $generated@@543 $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ($generated@@549 Int) ) (! (let (($generated@@550 ($generated@@324 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548 $generated@@549)) $generated@@550))
 :pattern ( ($generated@@546 $generated@@548 $generated@@549))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@323 $generated@@187)) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@551 ($generated@@545 $generated@@552) $generated@@553) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@322 $generated@@551))) ($generated@@304 ($generated@@546 $generated@@551 $generated@@554) $generated@@552 $generated@@553))
 :pattern ( ($generated@@546 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@88 $generated@@551 ($generated@@545 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 Int) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@79) (= (type $generated@@557) $generated@@79)) (= ($generated@@77 ($generated@@291 $generated@@555) ($generated@@293 $generated@@556) ($generated@@293 $generated@@557)) ($generated@@293 ($generated@@77 $generated@@555 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@77 ($generated@@291 $generated@@555) ($generated@@293 $generated@@556) ($generated@@293 $generated@@557)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@89 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@89 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@281 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@281 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@86 ($generated@@281 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@281 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@286 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@286 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@86 ($generated@@286 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@193 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@193 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@86 ($generated@@193 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@545 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@545 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@86 ($generated@@545 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@545 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@382 $generated@@577 ($generated@@330 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@330 $generated@@576))
)))
(assert (forall (($generated@@579 Int) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@79) (= (type $generated@@581) $generated@@79)) (< ($generated@@578 $generated@@580) ($generated@@578 ($generated@@77 $generated@@579 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@77 $generated@@579 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 Int) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@79) (= (type $generated@@584) $generated@@79)) (< ($generated@@578 $generated@@584) ($generated@@578 ($generated@@77 $generated@@582 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@77 $generated@@582 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@345 $generated@@187 $generated@@187)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) (= ($generated@@76 $generated@@585 ($generated@@459 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@187) ($generated@@0 ($generated@@95 ($generated@@343 $generated@@585) $generated@@588))) (and ($generated@@267 ($generated@@95 ($generated@@434 $generated@@585) $generated@@588) $generated@@587) ($generated@@267 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@95 ($generated@@434 $generated@@585) $generated@@588))
 :pattern ( ($generated@@95 ($generated@@343 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@76 $generated@@585 ($generated@@459 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@363 $generated@@187 $generated@@187)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) (= ($generated@@76 $generated@@589 ($generated@@467 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@187) ($generated@@0 ($generated@@95 ($generated@@361 $generated@@589) $generated@@592))) (and ($generated@@267 ($generated@@95 ($generated@@442 $generated@@589) $generated@@592) $generated@@591) ($generated@@267 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@95 ($generated@@442 $generated@@589) $generated@@592))
 :pattern ( ($generated@@95 ($generated@@361 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@76 $generated@@589 ($generated@@467 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@187) (= (type $generated@@595) $generated@@187)) (< ($generated@@593 $generated@@594) ($generated@@578 ($generated@@266 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@266 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@187) (= (type $generated@@597) $generated@@187)) (< ($generated@@593 $generated@@597) ($generated@@578 ($generated@@266 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@266 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@187) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@267 $generated@@598 ($generated@@459 $generated@@599 $generated@@600))) (and (= ($generated@@330 ($generated@@382 ($generated@@345 $generated@@187 $generated@@187) $generated@@598)) $generated@@598) ($generated@@76 ($generated@@382 ($generated@@345 $generated@@187 $generated@@187) $generated@@598) ($generated@@459 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@267 $generated@@598 ($generated@@459 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@187) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@267 $generated@@601 ($generated@@467 $generated@@602 $generated@@603))) (and (= ($generated@@330 ($generated@@382 ($generated@@363 $generated@@187 $generated@@187) $generated@@601)) $generated@@601) ($generated@@76 ($generated@@382 ($generated@@363 $generated@@187 $generated@@187) $generated@@601) ($generated@@467 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@267 $generated@@601 ($generated@@467 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@187)) ($generated@@267 $generated@@606 ($generated@@178 $generated@@604 $generated@@605))) (and (= ($generated@@330 ($generated@@382 $generated@@79 $generated@@606)) $generated@@606) ($generated@@76 ($generated@@382 $generated@@79 $generated@@606) ($generated@@178 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@267 $generated@@606 ($generated@@178 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (not ($generated@@0 ($generated@@95 ($generated@@476 $generated@@608) $generated@@607))))
 :pattern ( (let (($generated@@608 (type $generated@@607)))
($generated@@95 ($generated@@476 $generated@@608) $generated@@607)))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@73)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@68) (= (type $generated@@612) $generated@@68)) (and (= ($generated@@86 ($generated@@178 $generated@@611 $generated@@612)) $generated@@62) (= ($generated@@609 ($generated@@178 $generated@@611 $generated@@612)) $generated@@66)))
 :pattern ( ($generated@@178 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@79) (= (type $generated@@614) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@274 $generated@@614) (and ($generated@@312 $generated@@613) ($generated@@88 $generated@@613 $generated@@78 $generated@@614)))) ($generated@@88 ($generated@@8 ($generated@@162 $generated@@613)) $generated@@46 $generated@@614))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@162 $generated@@613)) $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@79) (= ($generated@@593 ($generated@@330 $generated@@615)) ($generated@@578 $generated@@615)))
 :pattern ( ($generated@@593 ($generated@@330 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@187) ($generated@@267 $generated@@616 ($generated@@89 0))) (and (= ($generated@@330 ($generated@@382 $generated@@2 $generated@@616)) $generated@@616) ($generated@@76 ($generated@@382 ($generated@@90 $generated@@187 $generated@@4) $generated@@616) ($generated@@89 0))))
 :pattern ( ($generated@@267 $generated@@616 ($generated@@89 0)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@187) (= (type $generated@@618) $generated@@68)) ($generated@@267 $generated@@617 ($generated@@281 $generated@@618))) (and (= ($generated@@330 ($generated@@382 ($generated@@90 $generated@@187 $generated@@4) $generated@@617)) $generated@@617) ($generated@@76 ($generated@@382 ($generated@@90 $generated@@187 $generated@@4) $generated@@617) ($generated@@281 $generated@@618))))
 :pattern ( ($generated@@267 $generated@@617 ($generated@@281 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@187) (= (type $generated@@620) $generated@@68)) ($generated@@267 $generated@@619 ($generated@@286 $generated@@620))) (and (= ($generated@@330 ($generated@@382 ($generated@@90 $generated@@187 $generated@@4) $generated@@619)) $generated@@619) ($generated@@76 ($generated@@382 ($generated@@90 $generated@@187 $generated@@4) $generated@@619) ($generated@@286 $generated@@620))))
 :pattern ( ($generated@@267 $generated@@619 ($generated@@286 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@187) (= (type $generated@@622) $generated@@68)) ($generated@@267 $generated@@621 ($generated@@193 $generated@@622))) (and (= ($generated@@330 ($generated@@382 ($generated@@90 $generated@@187 $generated@@2) $generated@@621)) $generated@@621) ($generated@@76 ($generated@@382 ($generated@@90 $generated@@187 $generated@@2) $generated@@621) ($generated@@193 $generated@@622))))
 :pattern ( ($generated@@267 $generated@@621 ($generated@@193 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@187) (= (type $generated@@624) $generated@@68)) ($generated@@267 $generated@@623 ($generated@@545 $generated@@624))) (and (= ($generated@@330 ($generated@@382 ($generated@@323 $generated@@187) $generated@@623)) $generated@@623) ($generated@@76 ($generated@@382 ($generated@@323 $generated@@187) $generated@@623) ($generated@@545 $generated@@624))))
 :pattern ( ($generated@@267 $generated@@623 ($generated@@545 $generated@@624)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@609 $generated@@78) $generated@@67))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@90 $generated@@187 $generated@@2)) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@625 ($generated@@193 $generated@@626) $generated@@627) (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@187) (< 0 ($generated ($generated@@95 $generated@@625 $generated@@628)))) ($generated@@304 $generated@@628 $generated@@626 $generated@@627))
 :pattern ( ($generated@@95 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@88 $generated@@625 ($generated@@193 $generated@@626) $generated@@627))
)))
(assert (= $generated@@192 ($generated@@293 $generated@@192)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@79) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@274 $generated@@631) (and ($generated@@177 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@88 $generated@@629 ($generated@@178 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@88 $generated@@629 ($generated@@178 $generated@@630 $generated@@632) $generated@@631))
))))) ($generated@@304 ($generated@@185 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@304 ($generated@@185 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@79) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@274 $generated@@635) (and ($generated@@177 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@68) ($generated@@88 $generated@@633 ($generated@@178 $generated@@636 $generated@@634) $generated@@635))
 :pattern ( ($generated@@88 $generated@@633 ($generated@@178 $generated@@636 $generated@@634) $generated@@635))
))))) ($generated@@304 ($generated@@186 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@304 ($generated@@186 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@79) (= (type $generated@@638) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@274 $generated@@638) (and ($generated@@312 $generated@@637) ($generated@@88 $generated@@637 $generated@@78 $generated@@638)))) ($generated@@88 ($generated@@166 $generated@@637) $generated@@78 $generated@@638))
 :pattern ( ($generated@@88 ($generated@@166 $generated@@637) $generated@@78 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@79) (= (type $generated@@640) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@274 $generated@@640) (and ($generated@@312 $generated@@639) ($generated@@88 $generated@@639 $generated@@78 $generated@@640)))) ($generated@@88 ($generated@@171 $generated@@639) $generated@@78 $generated@@640))
 :pattern ( ($generated@@88 ($generated@@171 $generated@@639) $generated@@78 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@187) (= (type $generated@@642) $generated@@187)) (= ($generated@@266 ($generated@@293 $generated@@641) ($generated@@293 $generated@@642)) ($generated@@293 ($generated@@266 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@266 ($generated@@293 $generated@@641) ($generated@@293 $generated@@642)))
)))
(assert (forall (($generated@@643 Int) ) (! (= ($generated@@330 ($generated@@8 ($generated@@291 $generated@@643))) ($generated@@293 ($generated@@330 ($generated@@8 $generated@@643))))
 :pattern ( ($generated@@330 ($generated@@8 ($generated@@291 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ) (! (= ($generated@@330 ($generated@@293 $generated@@644)) ($generated@@293 ($generated@@330 $generated@@644)))
 :pattern ( ($generated@@330 ($generated@@293 $generated@@644)))
)))
(assert  (=> (<= 1 $generated@@418) (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 Int) ) (!  (=> (and (and (= (type $generated@@645) $generated@@148) (= (type $generated@@646) $generated@@79)) (or ($generated@@419 $generated@@646 $generated@@647) (and (not (= 1 $generated@@418)) ($generated@@76 $generated@@646 $generated@@78)))) (and (and ($generated@@416 $generated@@646) (=> (not ($generated@@278 $generated@@646 $generated@@192)) (and (=> (< $generated@@647 ($generated@@162 $generated@@646)) ($generated@@419 ($generated@@171 $generated@@646) ($generated@@162 $generated@@646))) (=> (<= ($generated@@162 $generated@@646) $generated@@647) ($generated@@419 ($generated@@171 $generated@@646) $generated@@647))))) (= ($generated@@146 ($generated@@408 $generated@@645) $generated@@646 $generated@@647) (ite ($generated@@278 $generated@@646 $generated@@192) ($generated@@77 $generated@@647 ($generated@@293 $generated@@192) ($generated@@293 $generated@@192)) (ite (< $generated@@647 ($generated@@162 $generated@@646)) ($generated@@77 $generated@@647 ($generated@@146 $generated@@645 ($generated@@171 $generated@@646) ($generated@@162 $generated@@646)) ($generated@@166 $generated@@646)) ($generated@@77 ($generated@@162 $generated@@646) ($generated@@146 $generated@@645 ($generated@@171 $generated@@646) $generated@@647) ($generated@@166 $generated@@646)))))))
 :pattern ( ($generated@@146 ($generated@@408 $generated@@645) $generated@@646 $generated@@647))
))))
(assert (forall (($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@324 (type $generated@@648))))
 (=> (and (= (type $generated@@648) ($generated@@323 $generated@@649)) (= ($generated@@322 $generated@@648) 0)) (= $generated@@648 ($generated@@321 $generated@@649))))
 :pattern ( ($generated@@322 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@651)))
 (=> (and (and (= (type $generated@@650) ($generated@@90 $generated@@653 $generated@@2)) (= (type $generated@@652) $generated@@2)) (<= 0 ($generated $generated@@652))) (= ($generated@@337 ($generated@@96 $generated@@650 $generated@@651 $generated@@652)) (+ (- ($generated@@337 $generated@@650) ($generated ($generated@@95 $generated@@650 $generated@@651))) ($generated $generated@@652)))))
 :pattern ( ($generated@@337 ($generated@@96 $generated@@650 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@655) $generated@@2)) ($generated@@88 $generated@@655 $generated@@46 $generated@@654))
 :pattern ( ($generated@@88 $generated@@655 $generated@@46 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@657) $generated@@3)) ($generated@@88 $generated@@657 $generated@@47 $generated@@656))
 :pattern ( ($generated@@88 $generated@@657 $generated@@47 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@659) $generated@@4)) ($generated@@88 $generated@@659 $generated@@44 $generated@@658))
 :pattern ( ($generated@@88 $generated@@659 $generated@@44 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@661) $generated@@500)) ($generated@@88 $generated@@661 $generated@@45 $generated@@660))
 :pattern ( ($generated@@88 $generated@@661 $generated@@45 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@663) $generated@@187)) ($generated@@88 $generated@@663 $generated@@48 $generated@@662))
 :pattern ( ($generated@@88 $generated@@663 $generated@@48 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@323 $generated@@187)) (= (type $generated@@665) $generated@@68)) (= ($generated@@76 $generated@@664 ($generated@@545 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@322 $generated@@664))) ($generated@@267 ($generated@@546 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@546 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@76 $generated@@664 ($generated@@545 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@323 $generated@@187)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@322 $generated@@668))) (< ($generated@@578 ($generated@@382 $generated@@79 ($generated@@546 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@578 ($generated@@382 $generated@@79 ($generated@@546 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@345 $generated@@187 $generated@@187)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@76 $generated@@670 ($generated@@459 $generated@@671 $generated@@672))) (and (and ($generated@@76 ($generated@@343 $generated@@670) ($generated@@281 $generated@@671)) ($generated@@76 ($generated@@390 $generated@@670) ($generated@@281 $generated@@672))) ($generated@@76 ($generated@@433 $generated@@670) ($generated@@281 ($generated@@178 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@76 $generated@@670 ($generated@@459 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@363 $generated@@187 $generated@@187)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@76 $generated@@673 ($generated@@467 $generated@@674 $generated@@675))) (and (and ($generated@@76 ($generated@@361 $generated@@673) ($generated@@286 $generated@@674)) ($generated@@76 ($generated@@401 $generated@@673) ($generated@@286 $generated@@675))) ($generated@@76 ($generated@@441 $generated@@673) ($generated@@286 ($generated@@178 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@76 $generated@@673 ($generated@@467 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@76 $generated@@676 $generated@@46))
 :pattern ( ($generated@@76 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@76 $generated@@677 $generated@@47))
 :pattern ( ($generated@@76 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@76 $generated@@678 $generated@@44))
 :pattern ( ($generated@@76 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@500) ($generated@@76 $generated@@679 $generated@@45))
 :pattern ( ($generated@@76 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@187) ($generated@@76 $generated@@680 $generated@@48))
 :pattern ( ($generated@@76 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@681) $generated@@79) (= (type $generated@@685) $generated@@79)) (= (type $generated@@684) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@683) $generated@@79)) (= (type $generated@@687) ($generated@@200 $generated@@91 $generated@@4))) (= (type $generated@@688) $generated@@91)) (= (type $generated@@689) ($generated@@200 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@691  (=> (<= ($generated@@162 $generated@@681) $generated@@682) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@312 $generated@@681)) (=> ($generated@@312 $generated@@681) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@312 $generated@@681)) (=> ($generated@@312 $generated@@681) (=> (= $generated@@683 ($generated@@171 $generated@@681)) (=> (and ($generated@@88 $generated@@683 $generated@@78 $generated@@684) ($generated@@88 ($generated@@8 $generated@@682) $generated@@46 $generated@@684)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (or (<= 0 $generated@@682) (< ($generated@@578 $generated@@683) ($generated@@578 $generated@@681))) (= $generated@@682 $generated@@682))) (=> (or (or (<= 0 $generated@@682) (< ($generated@@578 $generated@@683) ($generated@@578 $generated@@681))) (= $generated@@682 $generated@@682)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (< ($generated@@578 $generated@@683) ($generated@@578 $generated@@681)) (and (= ($generated@@578 $generated@@683) ($generated@@578 $generated@@681)) (< $generated@@682 $generated@@682)))) (=> (or (< ($generated@@578 $generated@@683) ($generated@@578 $generated@@681)) (and (= ($generated@@578 $generated@@683) ($generated@@578 $generated@@681)) (< $generated@@682 $generated@@682))) (=> (and ($generated@@419 ($generated@@171 $generated@@681) $generated@@682) (= (ControlFlow 0 10) (- 0 9))) ($generated@@312 $generated@@681)))))))))))))))
(let (($generated@@692  (=> (< $generated@@682 ($generated@@162 $generated@@681)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@312 $generated@@681)) (=> ($generated@@312 $generated@@681) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@312 $generated@@681)) (=> ($generated@@312 $generated@@681) (=> (and (and (= $generated@@685 ($generated@@171 $generated@@681)) ($generated@@88 $generated@@685 $generated@@78 $generated@@684)) (and (= $generated@@686 ($generated@@162 $generated@@681)) ($generated@@88 ($generated@@8 $generated@@686) $generated@@46 $generated@@684))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@682) (< ($generated@@578 $generated@@685) ($generated@@578 $generated@@681))) (= $generated@@686 $generated@@682))) (=> (or (or (<= 0 $generated@@682) (< ($generated@@578 $generated@@685) ($generated@@578 $generated@@681))) (= $generated@@686 $generated@@682)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< ($generated@@578 $generated@@685) ($generated@@578 $generated@@681)) (and (= ($generated@@578 $generated@@685) ($generated@@578 $generated@@681)) (< $generated@@686 $generated@@682)))) (=> (or (< ($generated@@578 $generated@@685) ($generated@@578 $generated@@681)) (and (= ($generated@@578 $generated@@685) ($generated@@578 $generated@@681)) (< $generated@@686 $generated@@682))) (=> (and ($generated@@419 ($generated@@171 $generated@@681) ($generated@@162 $generated@@681)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@312 $generated@@681))))))))))))))
(let (($generated@@693  (=> (not ($generated@@278 $generated@@681 $generated@@192)) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@312 $generated@@681)) (=> ($generated@@312 $generated@@681) (and (=> (= (ControlFlow 0 15) 4) $generated@@692) (=> (= (ControlFlow 0 15) 10) $generated@@691)))))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (= $generated@@687 ($generated@@254 $generated@@688 $generated@@684 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 2) $generated@@694) (=> (= (ControlFlow 0 17) 15) $generated@@693)))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@689 ($generated@@199 $generated@@688 $generated@@684 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 1) $generated@@696) (=> (= (ControlFlow 0 18) 17) $generated@@695)))))
(let (($generated@@698  (=> (and (and (and ($generated@@274 $generated@@684) ($generated@@690 $generated@@684)) ($generated@@76 $generated@@681 $generated@@78)) (and (= 1 $generated@@418) (= (ControlFlow 0 19) 18))) $generated@@697)))
$generated@@698)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 (T@T) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Bool)
(declare-fun $generated@@116 () Bool)
(declare-fun $generated@@117 (T@U Int) Bool)
(declare-fun $generated@@118 (Int) Int)
(declare-fun $generated@@119 (T@U Int) T@U)
(declare-fun $generated@@120 (T@U) Bool)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (Int) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Bool)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@U T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@471 (T@T) T@U)
(declare-fun $generated@@495 () T@T)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@538 (T@U Int) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@648 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@86 $generated@@87)) 11)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@82 ($generated@@81 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@81 $generated@@88 $generated@@89))
))) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@83 ($generated@@81 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@81 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@83 (type $generated@@92))))
(= (type ($generated@@84 $generated@@92 $generated@@93)) $generated@@94))
 :pattern ( ($generated@@84 $generated@@92 $generated@@93))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 (type $generated@@97)))
(let (($generated@@99 (type $generated@@96)))
(= (type ($generated@@85 $generated@@95 $generated@@96 $generated@@97)) ($generated@@81 $generated@@99 $generated@@98))))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96 $generated@@97))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@83 (type $generated@@100))))
 (=> (= (type $generated@@102) $generated@@103) (= ($generated@@84 ($generated@@85 $generated@@100 $generated@@101 $generated@@102) $generated@@101) $generated@@102)))
 :weight 0
))) (and (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@84 ($generated@@85 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@84 $generated@@105 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@84 $generated@@109 $generated@@111)))
 :weight 0
)))) (= ($generated@@1 $generated@@78) 12)) (forall (($generated@@112 T@U) ) (! (= (type ($generated@@75 $generated@@112)) ($generated@@81 $generated@@78 $generated@@2))
 :pattern ( ($generated@@75 $generated@@112))
))) (= (type $generated@@76) $generated@@78)) (forall (($generated@@113 T@T) ) (! (= (type ($generated@@77 $generated@@113)) ($generated@@81 $generated@@113 $generated@@2))
 :pattern ( ($generated@@77 $generated@@113))
))) (= (type $generated@@80) $generated@@66)))
(assert  (=> true (=> true (and ($generated@@74 ($generated@@75 $generated@@76) ($generated@@77 $generated@@78)) ($generated@@79 $generated@@76 $generated@@80)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 Int) ) (! (= (type ($generated@@119 $generated@@123 $generated@@124)) $generated@@78)
 :pattern ( ($generated@@119 $generated@@123 $generated@@124))
)))
(assert  (=> (<= 0 $generated@@114) (=> (or $generated@@115 (not (= 0 $generated@@114))) (and (and $generated@@116 (let (($generated@@125 $generated@@76))
 (and ($generated@@117 $generated@@125 ($generated@@118 4)) (let (($generated@@126 ($generated@@119 $generated@@125 ($generated@@118 4))))
 (and ($generated@@117 $generated@@126 ($generated@@118 3)) (let (($generated@@127 ($generated@@119 $generated@@126 ($generated@@118 3))))
($generated@@120 $generated@@127))))))) (= $generated@@121 (let (($generated@@128 $generated@@76))
(let (($generated@@129 ($generated@@119 $generated@@128 ($generated@@118 4))))
(let (($generated@@130 ($generated@@119 $generated@@129 ($generated@@118 3))))
(let (($generated@@131 ($generated@@122 $generated@@130)))
$generated@@131)))))))))
(assert  (=> (<= 0 $generated@@114) (=> (or $generated@@115 (not (= 0 $generated@@114))) (and (and $generated@@116 (let (($generated@@132 $generated@@76))
 (and ($generated@@117 $generated@@132 ($generated@@118 4)) (let (($generated@@133 ($generated@@119 $generated@@132 ($generated@@118 4))))
 (and ($generated@@117 $generated@@133 ($generated@@118 3)) (let (($generated@@134 ($generated@@119 $generated@@133 ($generated@@118 3))))
($generated@@120 $generated@@134))))))) (= $generated@@121 (let (($generated@@135 $generated@@76))
(let (($generated@@136 ($generated@@119 $generated@@135 ($generated@@118 4))))
(let (($generated@@137 ($generated@@119 $generated@@136 ($generated@@118 3))))
(let (($generated@@138 ($generated@@122 $generated@@137)))
$generated@@138)))))))))
(assert (forall (($generated@@140 T@U) ) (! (= (type ($generated@@139 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@140))
)))
(assert (= ($generated@@139 $generated@@44) $generated@@49))
(assert (= ($generated@@139 $generated@@45) $generated@@50))
(assert (= ($generated@@139 $generated@@46) $generated@@51))
(assert (= ($generated@@139 $generated@@47) $generated@@52))
(assert (= ($generated@@139 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@143) 13) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@69 (type $generated@@148))))
(= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@144) 14)) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@146 $generated@@150 $generated@@151 $generated@@152)) $generated@@144)
 :pattern ( ($generated@@146 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@69 (type $generated@@154))))
 (=> (= (type $generated@@155) $generated@@156) (= ($generated@@145 ($generated@@146 $generated@@153 $generated@@154 $generated@@155) $generated@@154) $generated@@155)))
 :weight 0
))) (and (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@145 ($generated@@146 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@145 $generated@@158 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or true (= ($generated@@145 ($generated@@146 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@145 $generated@@162 $generated@@164)))
 :weight 0
)))) (forall (($generated@@165 Int) ) (! (= (type ($generated@@142 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@142 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@2) (= (type $generated@@167) ($generated@@81 $generated@@143 $generated@@144))) ($generated@@141 $generated@@166 ($generated@@142 0) $generated@@167))
 :pattern ( ($generated@@141 $generated@@166 ($generated@@142 0) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@168 $generated@@169 ($generated@@142 0)))
 :pattern ( ($generated@@168 $generated@@169 ($generated@@142 0)))
)))
(assert  (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@173 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@171 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and (= (type $generated@@175) $generated@@66) (= (type $generated@@176) $generated@@66)) (= (type $generated@@177) $generated@@172)) ($generated@@168 $generated@@177 ($generated@@171 $generated@@175 $generated@@176))) ($generated@@170 $generated@@177))
 :pattern ( ($generated@@170 $generated@@177) ($generated@@168 $generated@@177 ($generated@@171 $generated@@175 $generated@@176)))
)))
(assert  (and (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@78)
 :pattern ( ($generated@@179 $generated@@181))
)) (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@78)
 :pattern ( ($generated@@180 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@172) (= (type $generated@@184) $generated@@172)) true) (= ($generated@@178 $generated@@183 $generated@@184)  (and (= ($generated@@179 $generated@@183) ($generated@@179 $generated@@184)) (= ($generated@@180 $generated@@183) ($generated@@180 $generated@@184)))))
 :pattern ( ($generated@@178 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@66)
 :pattern ( ($generated@@185 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) ($generated@@81 $generated@@78 $generated@@2)) (= (type $generated@@189) $generated@@66)) ($generated@@168 $generated@@188 ($generated@@185 $generated@@189))) ($generated@@186 $generated@@188))
 :pattern ( ($generated@@168 $generated@@188 ($generated@@185 $generated@@189)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@143 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@69 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@143) (= (type $generated@@240) ($generated@@81 $generated@@143 $generated@@144))) (= (type $generated@@241) ($generated@@68 $generated@@4))) (= (type $generated@@243) $generated@@143)) (= (type $generated@@244) ($generated@@68 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@145 ($generated@@84 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@192 $generated@@143 $generated@@4))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@69 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@143) (= (type $generated@@252) ($generated@@81 $generated@@143 $generated@@144))) (= (type $generated@@253) ($generated@@68 $generated@@4))) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) ($generated@@68 $generated@@257))) (= ($generated@@0 ($generated@@190 ($generated@@246 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@145 ($generated@@84 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@190 ($generated@@246 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@259 $generated@@260)) $generated@@172)
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@78)) (= (type $generated@@264) $generated@@78)) (= ($generated@@168 ($generated@@258 $generated@@263 $generated@@264) ($generated@@171 $generated@@261 $generated@@262))  (and ($generated@@79 $generated@@263 $generated@@261) ($generated@@79 $generated@@264 $generated@@262))))
 :pattern ( ($generated@@168 ($generated@@258 $generated@@263 $generated@@264) ($generated@@171 $generated@@261 $generated@@262)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@82 (type $generated@@266))))
(= (type ($generated@@265 $generated@@266 $generated@@267)) ($generated@@81 $generated@@268 $generated@@2)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
 (=> (and (= (type $generated@@269) ($generated@@81 $generated@@272 $generated@@2)) (= (type $generated@@270) ($generated@@81 $generated@@272 $generated@@2))) (= ($generated ($generated@@84 ($generated@@265 $generated@@269 $generated@@270) $generated@@271)) (+ ($generated ($generated@@84 $generated@@269 $generated@@271)) ($generated ($generated@@84 $generated@@270 $generated@@271))))))
 :pattern ( ($generated@@84 ($generated@@265 $generated@@269 $generated@@270) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@172) (= (type $generated@@274) $generated@@172)) (= ($generated@@178 $generated@@273 $generated@@274) (= $generated@@273 $generated@@274)))
 :pattern ( ($generated@@178 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@66)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@278) $generated@@66)) (= ($generated@@168 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@78) ($generated@@0 ($generated@@84 $generated@@277 $generated@@279))) ($generated@@79 $generated@@279 $generated@@278))
 :pattern ( ($generated@@84 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@168 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@66)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@283) $generated@@66)) (= ($generated@@168 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@78) ($generated@@0 ($generated@@84 $generated@@282 $generated@@284))) ($generated@@79 $generated@@284 $generated@@283))
 :pattern ( ($generated@@84 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@168 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@118 $generated@@285) $generated@@285)
 :pattern ( ($generated@@118 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) $generated@@66)) (= (type $generated@@294) $generated@@78)) (= (type $generated@@295) $generated@@78)) (= (type $generated@@296) ($generated@@81 $generated@@143 $generated@@144))) ($generated@@290 $generated@@296)) (= ($generated@@141 ($generated@@258 $generated@@294 $generated@@295) ($generated@@171 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@141 ($generated@@258 $generated@@294 $generated@@295) ($generated@@171 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@172) (= ($generated@@170 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@170 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@172) ($generated@@170 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@78) (= (type $generated@@302) $generated@@78)) (= $generated@@300 ($generated@@258 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@170 $generated@@300))
)))
(assert  (and (and (forall (($generated@@307 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@307)) 17)) (forall (($generated@@308 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
))) (forall (($generated@@309 T@T) ) (! (= (type ($generated@@303 $generated@@309)) ($generated@@305 $generated@@309))
 :pattern ( ($generated@@303 $generated@@309))
))))
(assert (forall (($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@310)) 0)
 :pattern ( ($generated@@303 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 (type $generated@@314)))
(= (type ($generated@@312 $generated@@313 $generated@@314)) ($generated@@81 $generated@@315 $generated@@2)))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 (type $generated@@317)))
 (=> (= (type $generated@@316) ($generated@@81 $generated@@318 $generated@@2)) (= ($generated@@311 ($generated@@312 $generated@@316 $generated@@317)) (+ ($generated@@311 $generated@@316) 1))))
 :pattern ( ($generated@@311 ($generated@@312 $generated@@316 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@78)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@66) (= (type $generated@@323) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@291 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@141 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@291 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@82 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@81 $generated@@325 $generated@@2)) (and (= (= ($generated@@311 $generated@@324) 0) (= $generated@@324 ($generated@@77 $generated@@325))) (=> (not (= ($generated@@311 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@84 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@311 $generated@@324))
)))
(assert  (=> true (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@78) (or ($generated@@327 $generated@@328) ($generated@@79 $generated@@328 $generated@@80))) ($generated@@168 ($generated@@75 $generated@@328) ($generated@@185 $generated@@46)))
 :pattern ( ($generated@@75 $generated@@328))
))))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@84 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@84 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@81 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@84 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@84 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@82 (type $generated@@365))))
 (=> (and (= (type $generated@@365) ($generated@@81 $generated@@367 $generated@@2)) (= (type $generated@@366) ($generated@@81 $generated@@367 $generated@@2))) (= ($generated@@311 ($generated@@265 $generated@@365 $generated@@366)) (+ ($generated@@311 $generated@@365) ($generated@@311 $generated@@366)))))
 :pattern ( ($generated@@311 ($generated@@265 $generated@@365 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@82 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@81 $generated@@369 $generated@@2)) (= ($generated@@186 $generated@@368) (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@369) (and (<= 0 ($generated ($generated@@84 $generated@@368 $generated@@370))) (<= ($generated ($generated@@84 $generated@@368 $generated@@370)) ($generated@@311 $generated@@368))))
 :pattern ( ($generated@@84 $generated@@368 $generated@@370))
)))))
 :pattern ( ($generated@@186 $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (= (type $generated@@371) ($generated@@81 $generated@@373 $generated@@2)) (= ($generated ($generated@@84 ($generated@@312 $generated@@371 $generated@@372) $generated@@372)) (+ ($generated ($generated@@84 $generated@@371 $generated@@372)) 1))))
 :pattern ( ($generated@@312 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@375)))
 (=> (and (and (= (type $generated@@374) ($generated@@81 $generated@@377 $generated@@2)) (= (type $generated@@376) $generated@@377)) (< 0 ($generated ($generated@@84 $generated@@374 $generated@@376)))) (< 0 ($generated ($generated@@84 ($generated@@312 $generated@@374 $generated@@375) $generated@@376)))))
 :pattern ( ($generated@@312 $generated@@374 $generated@@375) ($generated@@84 $generated@@374 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@333 (type $generated@@378))))
(let (($generated@@380 ($generated@@332 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@331 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@330 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@329 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@81 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@333 (type $generated@@385))))
(let (($generated@@387 ($generated@@332 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@331 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@330 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@351 (type $generated@@389))))
(let (($generated@@391 ($generated@@350 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@349 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@348 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@347 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@81 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@351 (type $generated@@396))))
(let (($generated@@398 ($generated@@350 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@349 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@348 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@84 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@401)))
 (=> (and (= (type $generated@@400) ($generated@@81 $generated@@403 $generated@@2)) (= (type $generated@@402) $generated@@403)) (= (< 0 ($generated ($generated@@84 ($generated@@312 $generated@@400 $generated@@401) $generated@@402)))  (or (= $generated@@402 $generated@@401) (< 0 ($generated ($generated@@84 $generated@@400 $generated@@402)))))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@400 $generated@@401) $generated@@402))
)))
(assert  (=> true (forall (($generated@@404 T@U) ($generated@@405 Int) ) (!  (=> (and (= (type $generated@@404) $generated@@78) (or ($generated@@117 $generated@@404 $generated@@405) ($generated@@79 $generated@@404 $generated@@80))) (and ($generated@@74 ($generated@@75 ($generated@@119 $generated@@404 $generated@@405)) ($generated@@265 ($generated@@75 $generated@@404) ($generated@@312 ($generated@@77 $generated@@78) ($generated@@319 ($generated@@8 $generated@@405))))) ($generated@@79 ($generated@@119 $generated@@404 $generated@@405) $generated@@80)))
 :pattern ( ($generated@@119 $generated@@404 $generated@@405))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@81 $generated@@78 $generated@@2)) (= (type $generated@@407) $generated@@66)) (= ($generated@@168 $generated@@406 ($generated@@185 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@78) (< 0 ($generated ($generated@@84 $generated@@406 $generated@@408)))) ($generated@@79 $generated@@408 $generated@@407))
 :pattern ( ($generated@@84 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@168 $generated@@406 ($generated@@185 $generated@@407)))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@82 (type $generated@@409))))
 (=> (and (= (type $generated@@409) ($generated@@81 $generated@@411 $generated@@2)) (= (type $generated@@410) ($generated@@81 $generated@@411 $generated@@2))) (= ($generated@@74 $generated@@409 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (= ($generated ($generated@@84 $generated@@409 $generated@@412)) ($generated ($generated@@84 $generated@@410 $generated@@412))))
 :pattern ( ($generated@@84 $generated@@409 $generated@@412))
 :pattern ( ($generated@@84 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@74 $generated@@409 $generated@@410))
)))
(assert  (=> (<= 0 $generated@@114) (=> (or $generated@@115 (not (= 0 $generated@@114))) (= ($generated@@118 $generated@@121) ($generated@@118 3)))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@413 ($generated@@275 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@78) ($generated@@0 ($generated@@84 $generated@@413 $generated@@416))) ($generated@@291 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@84 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@141 $generated@@413 ($generated@@275 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@81 $generated@@78 $generated@@4)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@417 ($generated@@280 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@78) ($generated@@0 ($generated@@84 $generated@@417 $generated@@420))) ($generated@@291 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@84 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@141 $generated@@417 ($generated@@280 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@84 ($generated@@77 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@84 ($generated@@77 $generated@@422) $generated@@421)))
)))
(assert  (and (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@423 $generated@@426)) ($generated@@81 $generated@@78 $generated@@4))
 :pattern ( ($generated@@423 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@424 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@424 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@333 (type $generated@@429))))
(let (($generated@@431 ($generated@@332 (type $generated@@429))))
(= (type ($generated@@425 $generated@@429)) ($generated@@81 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@425 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@433) $generated@@78)) (= ($generated@@0 ($generated@@84 ($generated@@423 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@84 ($generated@@329 $generated@@432) ($generated@@179 ($generated@@424 $generated@@172 $generated@@433)))) (= ($generated@@84 ($generated@@425 $generated@@432) ($generated@@179 ($generated@@424 $generated@@172 $generated@@433))) ($generated@@180 ($generated@@424 $generated@@172 $generated@@433))))))
 :pattern ( ($generated@@84 ($generated@@423 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@81 $generated@@78 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@351 (type $generated@@437))))
(let (($generated@@439 ($generated@@350 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@81 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@441) $generated@@78)) (= ($generated@@0 ($generated@@84 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@84 ($generated@@347 $generated@@440) ($generated@@179 ($generated@@424 $generated@@172 $generated@@441)))) (= ($generated@@84 ($generated@@435 $generated@@440) ($generated@@179 ($generated@@424 $generated@@172 $generated@@441))) ($generated@@180 ($generated@@424 $generated@@172 $generated@@441))))))
 :pattern ( ($generated@@84 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@84 ($generated@@329 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@84 ($generated@@425 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@442) $generated@@446))
 :pattern ( ($generated@@84 ($generated@@425 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@350 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@349 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@84 ($generated@@393 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@84 ($generated@@347 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@84 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@447) $generated@@451))
 :pattern ( ($generated@@84 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@84 ($generated@@393 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@456) $generated@@66)) (= (type $generated@@457) $generated@@66)) (= (type $generated@@458) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@455) $generated@@459))) (and ($generated@@291 ($generated@@84 ($generated@@425 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@291 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@84 ($generated@@425 $generated@@455) $generated@@459))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@141 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@464) $generated@@66)) (= (type $generated@@465) $generated@@66)) (= (type $generated@@466) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@463) $generated@@467))) (and ($generated@@291 ($generated@@84 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@291 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@84 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@141 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@82 (type $generated@@468))))
 (=> (and (and (= (type $generated@@468) ($generated@@81 $generated@@470 $generated@@2)) (= (type $generated@@469) ($generated@@81 $generated@@470 $generated@@2))) ($generated@@74 $generated@@468 $generated@@469)) (= $generated@@468 $generated@@469)))
 :pattern ( ($generated@@74 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@472 T@T) ) (! (= (type ($generated@@471 $generated@@472)) ($generated@@81 $generated@@472 $generated@@4))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@351 (type $generated@@473))))
(let (($generated@@475 ($generated@@350 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@349 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@348 $generated@@475 $generated@@474)) (= ($generated@@347 $generated@@473) ($generated@@471 $generated@@475))))))
 :pattern ( ($generated@@347 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@351 (type $generated@@476))))
(let (($generated@@478 ($generated@@350 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@349 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@348 $generated@@478 $generated@@477)) (= ($generated@@393 $generated@@476) ($generated@@471 $generated@@477))))))
 :pattern ( ($generated@@393 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@351 (type $generated@@479))))
(let (($generated@@481 ($generated@@350 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@349 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@348 $generated@@481 $generated@@480)) (= ($generated@@434 $generated@@479) ($generated@@471 $generated@@78))))))
 :pattern ( ($generated@@434 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@333 (type $generated@@482))))
(let (($generated@@484 ($generated@@332 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@331 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@330 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (and (and (= (type $generated@@485) $generated@@78) (= (type $generated@@486) $generated@@78)) ($generated@@0 ($generated@@84 ($generated@@423 $generated@@482) ($generated@@319 ($generated@@258 $generated@@485 $generated@@486)))))
 :no-pattern (type $generated@@485)
 :no-pattern (type $generated@@486)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
))))))
 :pattern ( ($generated@@423 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@351 (type $generated@@487))))
(let (($generated@@489 ($generated@@350 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@349 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@348 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@78) (= (type $generated@@491) $generated@@78)) ($generated@@0 ($generated@@84 ($generated@@434 $generated@@487) ($generated@@319 ($generated@@258 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@434 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@78) ($generated@@79 $generated@@492 $generated@@46)) (and (= ($generated@@319 ($generated@@424 $generated@@2 $generated@@492)) $generated@@492) ($generated@@168 ($generated@@424 $generated@@2 $generated@@492) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@492 $generated@@46))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@78) ($generated@@79 $generated@@493 $generated@@47)) (and (= ($generated@@319 ($generated@@424 $generated@@3 $generated@@493)) $generated@@493) ($generated@@168 ($generated@@424 $generated@@3 $generated@@493) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@47))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@78) ($generated@@79 $generated@@494 $generated@@44)) (and (= ($generated@@319 ($generated@@424 $generated@@4 $generated@@494)) $generated@@494) ($generated@@168 ($generated@@424 $generated@@4 $generated@@494) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@495) 20))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@78) ($generated@@79 $generated@@496 $generated@@45)) (and (= ($generated@@319 ($generated@@424 $generated@@495 $generated@@496)) $generated@@496) ($generated@@168 ($generated@@424 $generated@@495 $generated@@496) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@496 $generated@@45))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@79 ($generated@@319 $generated@@497) $generated@@498) ($generated@@168 $generated@@497 $generated@@498)))
 :pattern ( ($generated@@79 ($generated@@319 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@82 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@81 $generated@@500 $generated@@2)) (<= 0 ($generated@@311 $generated@@499))))
 :pattern ( ($generated@@311 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@306 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@305 $generated@@502)) (<= 0 ($generated@@304 $generated@@501))))
 :pattern ( ($generated@@304 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@452 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@452 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@452 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@452 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@139 ($generated@@452 $generated@@511 $generated@@512)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@460 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@460 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@460 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@460 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@139 ($generated@@460 $generated@@521 $generated@@522)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@78) (= (type $generated@@524) $generated@@78)) (= ($generated@@297 ($generated@@258 $generated@@523 $generated@@524)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= ($generated@@525 ($generated@@171 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@171 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@529 ($generated@@171 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@171 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@78) (= (type $generated@@534) $generated@@78)) (= ($generated@@179 ($generated@@258 $generated@@533 $generated@@534)) $generated@@533))
 :pattern ( ($generated@@258 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@78) (= (type $generated@@536) $generated@@78)) (= ($generated@@180 ($generated@@258 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@258 $generated@@535 $generated@@536))
)))
(assert  (and (forall (($generated@@539 T@U) ) (! (= (type ($generated@@537 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@539))
)) (forall (($generated@@540 T@U) ($generated@@541 Int) ) (! (let (($generated@@542 ($generated@@306 (type $generated@@540))))
(= (type ($generated@@538 $generated@@540 $generated@@541)) $generated@@542))
 :pattern ( ($generated@@538 $generated@@540 $generated@@541))
))))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@305 $generated@@78)) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@543 ($generated@@537 $generated@@544) $generated@@545) (forall (($generated@@546 Int) ) (!  (=> (and (<= 0 $generated@@546) (< $generated@@546 ($generated@@304 $generated@@543))) ($generated@@291 ($generated@@538 $generated@@543 $generated@@546) $generated@@544 $generated@@545))
 :pattern ( ($generated@@538 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@141 $generated@@543 ($generated@@537 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@547 ($generated@@142 $generated@@548)) $generated@@548)
 :pattern ( ($generated@@142 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@66)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@549 ($generated@@275 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@275 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@66) (= ($generated@@139 ($generated@@275 $generated@@552)) $generated@@54))
 :pattern ( ($generated@@275 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@66)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@553 ($generated@@280 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@280 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@139 ($generated@@280 $generated@@556)) $generated@@55))
 :pattern ( ($generated@@280 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@557 ($generated@@185 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@185 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@139 ($generated@@185 $generated@@560)) $generated@@56))
 :pattern ( ($generated@@185 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@537 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@537 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@139 ($generated@@537 $generated@@564)) $generated@@57))
 :pattern ( ($generated@@537 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(= ($generated@@424 $generated@@566 ($generated@@319 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@319 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@66)) (= ($generated@@168 $generated@@567 ($generated@@452 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@329 $generated@@567) $generated@@570))) (and ($generated@@79 ($generated@@84 ($generated@@425 $generated@@567) $generated@@570) $generated@@569) ($generated@@79 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@84 ($generated@@425 $generated@@567) $generated@@570))
 :pattern ( ($generated@@84 ($generated@@329 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@168 $generated@@567 ($generated@@452 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) (= ($generated@@168 $generated@@571 ($generated@@460 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@78) ($generated@@0 ($generated@@84 ($generated@@347 $generated@@571) $generated@@574))) (and ($generated@@79 ($generated@@84 ($generated@@435 $generated@@571) $generated@@574) $generated@@573) ($generated@@79 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@84 ($generated@@435 $generated@@571) $generated@@574))
 :pattern ( ($generated@@84 ($generated@@347 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@168 $generated@@571 ($generated@@460 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@78) (= (type $generated@@578) $generated@@78)) (< ($generated@@575 $generated@@577) ($generated@@576 ($generated@@258 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@258 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@78) (= (type $generated@@580) $generated@@78)) (< ($generated@@575 $generated@@580) ($generated@@576 ($generated@@258 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@258 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@78) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) ($generated@@79 $generated@@581 ($generated@@452 $generated@@582 $generated@@583))) (and (= ($generated@@319 ($generated@@424 ($generated@@331 $generated@@78 $generated@@78) $generated@@581)) $generated@@581) ($generated@@168 ($generated@@424 ($generated@@331 $generated@@78 $generated@@78) $generated@@581) ($generated@@452 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@452 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@78) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) $generated@@66)) ($generated@@79 $generated@@584 ($generated@@460 $generated@@585 $generated@@586))) (and (= ($generated@@319 ($generated@@424 ($generated@@349 $generated@@78 $generated@@78) $generated@@584)) $generated@@584) ($generated@@168 ($generated@@424 ($generated@@349 $generated@@78 $generated@@78) $generated@@584) ($generated@@460 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@460 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@66) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) $generated@@78)) ($generated@@79 $generated@@589 ($generated@@171 $generated@@587 $generated@@588))) (and (= ($generated@@319 ($generated@@424 $generated@@172 $generated@@589)) $generated@@589) ($generated@@168 ($generated@@424 $generated@@172 $generated@@589) ($generated@@171 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@79 $generated@@589 ($generated@@171 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@84 ($generated@@471 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@84 ($generated@@471 $generated@@591) $generated@@590)))
)))
(assert  (=> true (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@78) (or ($generated@@120 $generated@@592) (and ($generated@@79 $generated@@592 $generated@@80) (not ($generated@@74 ($generated@@75 $generated@@592) ($generated@@77 $generated@@78)))))) (let (($generated@@593 ($generated@@122 $generated@@592)))
 (and (> ($generated ($generated@@84 ($generated@@75 $generated@@592) ($generated@@319 ($generated@@8 $generated@@593)))) 0) (forall (($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@2) true) (> ($generated ($generated@@84 ($generated@@75 $generated@@592) ($generated@@319 $generated@@594))) 0)) (<= $generated@@593 ($generated $generated@@594)))
 :pattern ( ($generated@@84 ($generated@@75 $generated@@592) ($generated@@319 $generated@@594)))
)))))
 :pattern ( ($generated@@122 $generated@@592))
))))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@139 ($generated@@171 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@171 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@171 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@172) (= ($generated@@575 ($generated@@319 $generated@@599)) ($generated@@576 $generated@@599)))
 :pattern ( ($generated@@575 ($generated@@319 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@78) ($generated@@79 $generated@@600 ($generated@@142 0))) (and (= ($generated@@319 ($generated@@424 $generated@@2 $generated@@600)) $generated@@600) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@600) ($generated@@142 0))))
 :pattern ( ($generated@@79 $generated@@600 ($generated@@142 0)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@78) (= (type $generated@@602) $generated@@66)) ($generated@@79 $generated@@601 ($generated@@275 $generated@@602))) (and (= ($generated@@319 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@601)) $generated@@601) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@601) ($generated@@275 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@275 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@78) (= (type $generated@@604) $generated@@66)) ($generated@@79 $generated@@603 ($generated@@280 $generated@@604))) (and (= ($generated@@319 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@603)) $generated@@603) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@4) $generated@@603) ($generated@@280 $generated@@604))))
 :pattern ( ($generated@@79 $generated@@603 ($generated@@280 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@78) (= (type $generated@@606) $generated@@66)) ($generated@@79 $generated@@605 ($generated@@185 $generated@@606))) (and (= ($generated@@319 ($generated@@424 ($generated@@81 $generated@@78 $generated@@2) $generated@@605)) $generated@@605) ($generated@@168 ($generated@@424 ($generated@@81 $generated@@78 $generated@@2) $generated@@605) ($generated@@185 $generated@@606))))
 :pattern ( ($generated@@79 $generated@@605 ($generated@@185 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@78) (= (type $generated@@608) $generated@@66)) ($generated@@79 $generated@@607 ($generated@@537 $generated@@608))) (and (= ($generated@@319 ($generated@@424 ($generated@@305 $generated@@78) $generated@@607)) $generated@@607) ($generated@@168 ($generated@@424 ($generated@@305 $generated@@78) $generated@@607) ($generated@@537 $generated@@608))))
 :pattern ( ($generated@@79 $generated@@607 ($generated@@537 $generated@@608)))
)))
(assert (= ($generated@@139 $generated@@80) $generated@@63))
(assert (= ($generated@@595 $generated@@80) $generated@@65))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@81 $generated@@78 $generated@@2)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) ($generated@@81 $generated@@143 $generated@@144))) (= ($generated@@141 $generated@@609 ($generated@@185 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@78) (< 0 ($generated ($generated@@84 $generated@@609 $generated@@612)))) ($generated@@291 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@84 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@141 $generated@@609 ($generated@@185 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@172) (= (type $generated@@614) $generated@@66)) (= (type $generated@@615) ($generated@@81 $generated@@143 $generated@@144))) (and ($generated@@290 $generated@@615) (and ($generated@@170 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@66) ($generated@@141 $generated@@613 ($generated@@171 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@171 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@291 ($generated@@179 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@291 ($generated@@179 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@172) (= (type $generated@@618) $generated@@66)) (= (type $generated@@619) ($generated@@81 $generated@@143 $generated@@144))) (and ($generated@@290 $generated@@619) (and ($generated@@170 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@66) ($generated@@141 $generated@@617 ($generated@@171 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@141 $generated@@617 ($generated@@171 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@291 ($generated@@180 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@291 ($generated@@180 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@81 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@624)) (not (= $generated@@622 $generated@@623))) (= ($generated ($generated@@84 $generated@@621 $generated@@623)) ($generated ($generated@@84 ($generated@@312 $generated@@621 $generated@@622) $generated@@623)))))
 :pattern ( ($generated@@312 $generated@@621 $generated@@622) ($generated@@84 $generated@@621 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@78) (= (type $generated@@626) $generated@@78)) (= ($generated@@258 ($generated@@286 $generated@@625) ($generated@@286 $generated@@626)) ($generated@@286 ($generated@@258 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@258 ($generated@@286 $generated@@625) ($generated@@286 $generated@@626)))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@319 ($generated@@8 ($generated@@118 $generated@@627))) ($generated@@286 ($generated@@319 ($generated@@8 $generated@@627))))
 :pattern ( ($generated@@319 ($generated@@8 ($generated@@118 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ) (! (= ($generated@@319 ($generated@@286 $generated@@628)) ($generated@@286 ($generated@@319 $generated@@628)))
 :pattern ( ($generated@@319 ($generated@@286 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@306 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@305 $generated@@630)) (= ($generated@@304 $generated@@629) 0)) (= $generated@@629 ($generated@@303 $generated@@630))))
 :pattern ( ($generated@@304 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@632)))
 (=> (and (and (= (type $generated@@631) ($generated@@81 $generated@@634 $generated@@2)) (= (type $generated@@633) $generated@@2)) (<= 0 ($generated $generated@@633))) (= ($generated@@311 ($generated@@85 $generated@@631 $generated@@632 $generated@@633)) (+ (- ($generated@@311 $generated@@631) ($generated ($generated@@84 $generated@@631 $generated@@632))) ($generated $generated@@633)))))
 :pattern ( ($generated@@311 ($generated@@85 $generated@@631 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@636) $generated@@2)) ($generated@@141 $generated@@636 $generated@@46 $generated@@635))
 :pattern ( ($generated@@141 $generated@@636 $generated@@46 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@638) $generated@@3)) ($generated@@141 $generated@@638 $generated@@47 $generated@@637))
 :pattern ( ($generated@@141 $generated@@638 $generated@@47 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@640) $generated@@4)) ($generated@@141 $generated@@640 $generated@@44 $generated@@639))
 :pattern ( ($generated@@141 $generated@@640 $generated@@44 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@642) $generated@@495)) ($generated@@141 $generated@@642 $generated@@45 $generated@@641))
 :pattern ( ($generated@@141 $generated@@642 $generated@@45 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@81 $generated@@143 $generated@@144)) (= (type $generated@@644) $generated@@78)) ($generated@@141 $generated@@644 $generated@@48 $generated@@643))
 :pattern ( ($generated@@141 $generated@@644 $generated@@48 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@305 $generated@@78)) (= (type $generated@@646) $generated@@66)) (= ($generated@@168 $generated@@645 ($generated@@537 $generated@@646)) (forall (($generated@@647 Int) ) (!  (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@304 $generated@@645))) ($generated@@79 ($generated@@538 $generated@@645 $generated@@647) $generated@@646))
 :pattern ( ($generated@@538 $generated@@645 $generated@@647))
))))
 :pattern ( ($generated@@168 $generated@@645 ($generated@@537 $generated@@646)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 Int) ) (!  (=> (= (type $generated@@649) ($generated@@305 $generated@@78)) (=> (and (<= 0 $generated@@650) (< $generated@@650 ($generated@@304 $generated@@649))) (< ($generated@@576 ($generated@@424 $generated@@172 ($generated@@538 $generated@@649 $generated@@650))) ($generated@@648 $generated@@649))))
 :pattern ( ($generated@@576 ($generated@@424 $generated@@172 ($generated@@538 $generated@@649 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@331 $generated@@78 $generated@@78)) (= (type $generated@@652) $generated@@66)) (= (type $generated@@653) $generated@@66)) ($generated@@168 $generated@@651 ($generated@@452 $generated@@652 $generated@@653))) (and (and ($generated@@168 ($generated@@329 $generated@@651) ($generated@@275 $generated@@652)) ($generated@@168 ($generated@@382 $generated@@651) ($generated@@275 $generated@@653))) ($generated@@168 ($generated@@423 $generated@@651) ($generated@@275 ($generated@@171 $generated@@652 $generated@@653)))))
 :pattern ( ($generated@@168 $generated@@651 ($generated@@452 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (and (= (type $generated@@654) ($generated@@349 $generated@@78 $generated@@78)) (= (type $generated@@655) $generated@@66)) (= (type $generated@@656) $generated@@66)) ($generated@@168 $generated@@654 ($generated@@460 $generated@@655 $generated@@656))) (and (and ($generated@@168 ($generated@@347 $generated@@654) ($generated@@280 $generated@@655)) ($generated@@168 ($generated@@393 $generated@@654) ($generated@@280 $generated@@656))) ($generated@@168 ($generated@@434 $generated@@654) ($generated@@280 ($generated@@171 $generated@@655 $generated@@656)))))
 :pattern ( ($generated@@168 $generated@@654 ($generated@@460 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@2) ($generated@@168 $generated@@657 $generated@@46))
 :pattern ( ($generated@@168 $generated@@657 $generated@@46))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@3) ($generated@@168 $generated@@658 $generated@@47))
 :pattern ( ($generated@@168 $generated@@658 $generated@@47))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@4) ($generated@@168 $generated@@659 $generated@@44))
 :pattern ( ($generated@@168 $generated@@659 $generated@@44))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@495) ($generated@@168 $generated@@660 $generated@@45))
 :pattern ( ($generated@@168 $generated@@660 $generated@@45))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@78) ($generated@@168 $generated@@661 $generated@@48))
 :pattern ( ($generated@@168 $generated@@661 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@662) ($generated@@192 $generated@@143 $generated@@4)) (= (type $generated@@663) $generated@@143)) (= (type $generated@@664) ($generated@@81 $generated@@143 $generated@@144))) (= (type $generated@@665) $generated@@78)) (= (type $generated@@666) $generated@@78)) (= (type $generated@@667) $generated@@78)) (= (type $generated@@669) $generated@@78)) (= (type $generated@@670) $generated@@78)) (= (type $generated@@672) $generated@@78)) (= (type $generated@@675) ($generated@@192 $generated@@143 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@677  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@118 $generated@@121) ($generated@@118 3)))))
(let (($generated@@678  (=> (= $generated@@662 ($generated@@246 $generated@@663 $generated@@664 $generated@@60 false)) (=> (and (and (and (and (and (and ($generated@@79 $generated@@665 $generated@@80) ($generated@@291 $generated@@665 $generated@@80 $generated@@664)) $generated@@116) (and (= $generated@@666 $generated@@76) $generated@@116)) (and (and ($generated@@79 $generated@@666 $generated@@80) (= $generated@@665 $generated@@666)) (and ($generated@@79 $generated@@667 $generated@@80) ($generated@@291 $generated@@667 $generated@@80 $generated@@664)))) (and (and (and ($generated@@291 $generated@@665 $generated@@80 $generated@@664) (= $generated@@668 ($generated@@118 4))) (and ($generated@@141 ($generated@@8 $generated@@668) $generated@@46 $generated@@664) ($generated@@117 $generated@@665 ($generated@@118 4)))) (and (and (= $generated@@669 ($generated@@119 $generated@@665 ($generated@@118 4))) ($generated@@117 $generated@@665 ($generated@@118 4))) (and ($generated@@79 $generated@@669 $generated@@80) (= $generated@@667 $generated@@669))))) (and (and (and (and ($generated@@79 $generated@@670 $generated@@80) ($generated@@291 $generated@@670 $generated@@80 $generated@@664)) ($generated@@291 $generated@@667 $generated@@80 $generated@@664)) (and (= $generated@@671 ($generated@@118 3)) ($generated@@141 ($generated@@8 $generated@@671) $generated@@46 $generated@@664))) (and (and (and ($generated@@117 $generated@@667 ($generated@@118 3)) (= $generated@@672 ($generated@@119 $generated@@667 ($generated@@118 3)))) (and ($generated@@117 $generated@@667 ($generated@@118 3)) ($generated@@79 $generated@@672 $generated@@80))) (and (and (= $generated@@670 $generated@@672) ($generated@@291 $generated@@670 $generated@@80 $generated@@664)) (and ($generated@@327 $generated@@670) ($generated@@327 $generated@@670)))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@74 ($generated@@75 $generated@@670) ($generated@@312 ($generated@@312 ($generated@@77 $generated@@78) ($generated@@319 ($generated@@8 ($generated@@118 3)))) ($generated@@319 ($generated@@8 ($generated@@118 4)))))) (=> ($generated@@74 ($generated@@75 $generated@@670) ($generated@@312 ($generated@@312 ($generated@@77 $generated@@78) ($generated@@319 ($generated@@8 ($generated@@118 3)))) ($generated@@319 ($generated@@8 ($generated@@118 4))))) (=> ($generated@@291 $generated@@670 $generated@@80 $generated@@664) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@74 ($generated@@75 $generated@@670) ($generated@@77 $generated@@78)))) (=> (not ($generated@@74 ($generated@@75 $generated@@670) ($generated@@77 $generated@@78))) (=> (and (and (and ($generated@@120 $generated@@670) (= $generated@@673 ($generated@@122 $generated@@670))) (and ($generated@@120 $generated@@670) ($generated@@168 ($generated@@8 $generated@@673) $generated@@46))) (and (and (= $generated@@674 $generated@@673) (= $generated@@121 $generated@@674)) (and ($generated@@168 ($generated@@8 $generated@@121) $generated@@46) (= (ControlFlow 0 5) 4)))) $generated@@677))))))))))
(let (($generated@@679  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@680  (=> (= $generated@@675 ($generated@@191 $generated@@663 $generated@@664 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@679) (=> (= (ControlFlow 0 8) 5) $generated@@678)))))
(let (($generated@@681  (=> (and (and ($generated@@290 $generated@@664) ($generated@@676 $generated@@664)) (and (= 0 $generated@@114) (= (ControlFlow 0 9) 8))) $generated@@680)))
$generated@@681))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@280 (T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@301 () Bool)
(declare-fun $generated@@302 () T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (Int) Int)
(declare-fun $generated@@321 (T@U T@U) Bool)
(declare-fun $generated@@322 (T@U T@U) T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@324 (T@T) T@U)
(declare-fun $generated@@332 (T@U T@U T@U) Bool)
(declare-fun $generated@@338 (T@U) Bool)
(declare-fun $generated@@343 (T@U) Bool)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@361 (T@U) Int)
(declare-fun $generated@@362 (T@U T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@T) T@U)
(declare-fun $generated@@396 (T@T T@T) T@T)
(declare-fun $generated@@397 (T@T) T@T)
(declare-fun $generated@@398 (T@T) T@T)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@T) T@U)
(declare-fun $generated@@414 (T@T T@T) T@T)
(declare-fun $generated@@415 (T@T) T@T)
(declare-fun $generated@@416 (T@T) T@T)
(declare-fun $generated@@436 (T@T T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@525 (T@U T@U) T@U)
(declare-fun $generated@@533 (T@U T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@549 (T@T) T@U)
(declare-fun $generated@@573 () T@T)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@620 (T@U Int) T@U)
(declare-fun $generated@@632 (T@U) Int)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@646 (T@U) T@U)
(declare-fun $generated@@652 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(declare-fun $generated@@685 (T@U) T@U)
(declare-fun $generated@@745 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83 $generated@@84)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84))
))) (= (type $generated@@80) $generated@@70)))
(assert (forall (($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@81) (= (type $generated@@87) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80)  (and (and ($generated@@78 ($generated@@8 $generated@@85) $generated@@46) ($generated@@78 $generated@@86 $generated@@80)) ($generated@@78 $generated@@87 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@71)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@73 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@74)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) (= (type $generated@@152) $generated@@81)) (= ($generated@@148 ($generated@@79 $generated@@150 $generated@@151 $generated@@152)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 Int) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@81) (= (type $generated@@156) $generated@@81)) (= ($generated@@153 ($generated@@79 $generated@@154 $generated@@155 $generated@@156)) $generated@@154))
 :pattern ( ($generated@@79 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) (= ($generated@@157 ($generated@@79 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))
 :pattern ( ($generated@@79 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@81) (= (type $generated@@166) $generated@@81)) (= ($generated@@162 ($generated@@79 $generated@@164 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@79 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@78 $generated@@167 ($generated@@91 0)))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@91 0)))
)))
(assert (= ($generated@@1 $generated@@170) 15))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@170) (= (type $generated@@173) $generated@@81)) (or ($generated@@171 $generated@@173) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@173 $generated@@80)))) true)
 :pattern ( ($generated@@169 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@70) (= (type $generated@@179) $generated@@70)) (= (type $generated@@180) $generated@@81)) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 16) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@81) (= (type $generated@@188) $generated@@81)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@81))
(assert (= ($generated@@148 $generated@@189) $generated@@63))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@194) $generated@@70)) ($generated@@78 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@78 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@93 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@73 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@93) (= (type $generated@@245) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@246) ($generated@@72 $generated@@4))) (= (type $generated@@248) $generated@@93)) (= (type $generated@@249) ($generated@@72 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255)) ($generated@@197 $generated@@93 $generated@@4))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Bool) ($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@73 (type $generated@@261))))
 (=> (and (and (and (and (= (type $generated@@256) $generated@@93) (= (type $generated@@257) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@258) ($generated@@72 $generated@@4))) (= (type $generated@@260) $generated@@93)) (= (type $generated@@261) ($generated@@72 $generated@@262))) (= ($generated@@0 ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))  (=> (and (not (= $generated@@260 $generated@@256)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@257 $generated@@260) $generated@@258))) $generated@@259))))
 :pattern ( ($generated@@195 ($generated@@251 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (= (type $generated@@263) $generated@@70))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@81) (= (type $generated@@265) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@264 $generated@@263 $generated@@265) ($generated@@90 $generated@@264 $generated@@80 $generated@@265)))
 :pattern ( ($generated@@90 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@266 $generated@@270)) $generated@@170)
 :pattern ( ($generated@@266 $generated@@270))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@170) (= (type $generated@@272) $generated@@81)) (or ($generated@@171 $generated@@272) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@272 $generated@@80)))) (and (=> (not ($generated@@267 $generated@@272)) (let (($generated@@273 ($generated@@162 $generated@@272)))
(let (($generated@@274 ($generated@@157 $generated@@272)))
(let (($generated@@275 ($generated@@153 $generated@@272)))
 (and ($generated@@171 $generated@@274) (=> ($generated@@169 $generated@@271 $generated@@274) (and ($generated@@171 $generated@@273) (=> ($generated@@169 $generated@@271 $generated@@273) (and ($generated@@268 $generated@@274) (=> (or ($generated@@269 $generated@@274 $generated@@189) (<= $generated@@275 ($generated@@153 $generated@@274))) ($generated@@268 $generated@@273))))))))))) (= ($generated@@169 ($generated@@266 $generated@@271) $generated@@272) (ite ($generated@@267 $generated@@272) true (let (($generated@@276 ($generated@@162 $generated@@272)))
(let (($generated@@277 ($generated@@157 $generated@@272)))
(let (($generated@@278 ($generated@@153 $generated@@272)))
 (and (and (and ($generated@@169 $generated@@271 $generated@@277) ($generated@@169 $generated@@271 $generated@@276)) (or ($generated@@269 $generated@@277 $generated@@189) (<= $generated@@278 ($generated@@153 $generated@@277)))) (or ($generated@@269 $generated@@276 $generated@@189) (<= $generated@@278 ($generated@@153 $generated@@276)))))))))))
 :pattern ( ($generated@@169 ($generated@@266 $generated@@271) $generated@@272))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@279 $generated@@281 $generated@@282)) $generated@@81)
 :pattern ( ($generated@@279 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@283) $generated@@70) (= (type $generated@@284) $generated@@70)) (= (type $generated@@285) $generated@@184)) (= (type $generated@@286) $generated@@184)) (= ($generated@@78 ($generated@@279 $generated@@285 $generated@@286) ($generated@@175 $generated@@283 $generated@@284))  (and ($generated@@280 $generated@@285 $generated@@283) ($generated@@280 $generated@@286 $generated@@284))))
 :pattern ( ($generated@@78 ($generated@@279 $generated@@285 $generated@@286) ($generated@@175 $generated@@283 $generated@@284)))
)))
(assert ($generated@@78 $generated@@189 $generated@@80))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@287 $generated@@288)) ($generated@@90 $generated@@189 $generated@@80 $generated@@288))
 :pattern ( ($generated@@90 $generated@@189 $generated@@80 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@95 (type $generated@@290))))
(= (type ($generated@@289 $generated@@290 $generated@@291)) ($generated@@92 $generated@@292 $generated@@2)))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 (type $generated@@295)))
 (=> (and (= (type $generated@@293) ($generated@@92 $generated@@296 $generated@@2)) (= (type $generated@@294) ($generated@@92 $generated@@296 $generated@@2))) (= ($generated ($generated@@97 ($generated@@289 $generated@@293 $generated@@294) $generated@@295)) (+ ($generated ($generated@@97 $generated@@293 $generated@@295)) ($generated ($generated@@97 $generated@@294 $generated@@295))))))
 :pattern ( ($generated@@97 ($generated@@289 $generated@@293 $generated@@294) $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@81) (= (type $generated@@298) $generated@@81)) (= ($generated@@181 $generated@@297 $generated@@298) (= $generated@@297 $generated@@298)))
 :pattern ( ($generated@@181 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@81) (= (type $generated@@300) $generated@@81)) (= ($generated@@269 $generated@@299 $generated@@300) (= $generated@@299 $generated@@300)))
 :pattern ( ($generated@@269 $generated@@299 $generated@@300))
)))
(assert  (and (= (type $generated@@302) $generated@@81) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
(= (type ($generated@@303 $generated@@304)) $generated@@305))
 :pattern ( ($generated@@303 $generated@@304))
))))
(assert  (=> (<= 4 $generated@@168) (=> (or $generated@@301 (not (= 4 $generated@@168))) (= $generated@@302 ($generated@@303 $generated@@189)))))
(assert  (=> (<= 4 $generated@@168) (=> (or $generated@@301 (not (= 4 $generated@@168))) (= $generated@@302 ($generated@@303 $generated@@189)))))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@70)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@309) $generated@@70)) (= ($generated@@78 $generated@@308 ($generated@@306 $generated@@309)) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@184) ($generated@@0 ($generated@@97 $generated@@308 $generated@@310))) ($generated@@280 $generated@@310 $generated@@309))
 :pattern ( ($generated@@97 $generated@@308 $generated@@310))
))))
 :pattern ( ($generated@@78 $generated@@308 ($generated@@306 $generated@@309)))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@70)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@314) $generated@@70)) (= ($generated@@78 $generated@@313 ($generated@@311 $generated@@314)) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@184) ($generated@@0 ($generated@@97 $generated@@313 $generated@@315))) ($generated@@280 $generated@@315 $generated@@314))
 :pattern ( ($generated@@97 $generated@@313 $generated@@315))
))))
 :pattern ( ($generated@@78 $generated@@313 ($generated@@311 $generated@@314)))
)))
(assert (forall (($generated@@317 Int) ) (! (= ($generated@@316 $generated@@317) $generated@@317)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (= ($generated@@303 $generated@@318) $generated@@318)
 :pattern ( ($generated@@303 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (= (type $generated@@319) $generated@@81) (= (type $generated@@320) $generated@@81)) (and ($generated@@267 $generated@@319) ($generated@@267 $generated@@320))) (= ($generated@@269 $generated@@319 $generated@@320) true))
 :pattern ( ($generated@@269 $generated@@319 $generated@@320) ($generated@@267 $generated@@319))
 :pattern ( ($generated@@269 $generated@@319 $generated@@320) ($generated@@267 $generated@@320))
)))
(assert  (and (and (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (= (type ($generated@@322 $generated@@325 $generated@@326)) ($generated@@92 $generated@@184 $generated@@2))
 :pattern ( ($generated@@322 $generated@@325 $generated@@326))
)) (= (type $generated@@323) $generated@@170)) (forall (($generated@@327 T@T) ) (! (= (type ($generated@@324 $generated@@327)) ($generated@@92 $generated@@327 $generated@@2))
 :pattern ( ($generated@@324 $generated@@327))
))))
(assert  (=> (<= 4 $generated@@168) (=> (or $generated@@301 (not (= 4 $generated@@168))) (and ($generated@@321 ($generated@@322 ($generated@@266 $generated@@323) ($generated@@303 $generated@@302)) ($generated@@324 $generated@@184)) ($generated@@78 $generated@@302 $generated@@263)))))
(assert (forall (($generated@@328 Int) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (= (type $generated@@329) $generated@@81) (= (type $generated@@330) $generated@@81)) (= (type $generated@@331) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@287 $generated@@331)) (= ($generated@@90 ($generated@@79 $generated@@328 $generated@@329 $generated@@330) $generated@@80 $generated@@331)  (and (and ($generated@@90 ($generated@@8 $generated@@328) $generated@@46 $generated@@331) ($generated@@90 $generated@@329 $generated@@80 $generated@@331)) ($generated@@90 $generated@@330 $generated@@80 $generated@@331))))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@328 $generated@@329 $generated@@330) $generated@@80 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@333) $generated@@70) (= (type $generated@@334) $generated@@70)) (= (type $generated@@335) $generated@@184)) (= (type $generated@@336) $generated@@184)) (= (type $generated@@337) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@287 $generated@@337)) (= ($generated@@90 ($generated@@279 $generated@@335 $generated@@336) ($generated@@175 $generated@@333 $generated@@334) $generated@@337)  (and ($generated@@332 $generated@@335 $generated@@333 $generated@@337) ($generated@@332 $generated@@336 $generated@@334 $generated@@337))))
 :pattern ( ($generated@@90 ($generated@@279 $generated@@335 $generated@@336) ($generated@@175 $generated@@333 $generated@@334) $generated@@337))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@339) $generated@@170) (= (type $generated@@340) $generated@@81)) (or ($generated@@338 $generated@@340) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@340 $generated@@263)))) ($generated@@78 ($generated@@322 $generated@@339 $generated@@340) ($generated@@190 $generated@@46)))
 :pattern ( ($generated@@322 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@81) (= ($generated@@174 $generated@@341) (= ($generated@@148 $generated@@341) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@81) (= ($generated@@267 $generated@@342) (= ($generated@@148 $generated@@342) $generated@@63)))
 :pattern ( ($generated@@267 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@81) (= ($generated@@343 $generated@@344) (= ($generated@@148 $generated@@344) $generated@@65)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@81) ($generated@@343 $generated@@345)) (exists (($generated@@346 Int) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (and (and (= (type $generated@@347) $generated@@81) (= (type $generated@@348) $generated@@81)) (= $generated@@345 ($generated@@79 $generated@@346 $generated@@347 $generated@@348)))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))
 :pattern ( ($generated@@343 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@81) ($generated@@174 $generated@@349)) (exists (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (and (and (= (type $generated@@350) $generated@@184) (= (type $generated@@351) $generated@@184)) (= $generated@@349 ($generated@@279 $generated@@350 $generated@@351)))
 :no-pattern (type $generated@@350)
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
)))
 :pattern ( ($generated@@174 $generated@@349))
)))
(assert  (and (and (forall (($generated@@356 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@356)) 18)) (forall (($generated@@357 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@354 $generated@@357))
))) (forall (($generated@@358 T@T) ) (! (= (type ($generated@@352 $generated@@358)) ($generated@@354 $generated@@358))
 :pattern ( ($generated@@352 $generated@@358))
))))
(assert (forall (($generated@@359 T@T) ) (! (= ($generated@@353 ($generated@@352 $generated@@359)) 0)
 :pattern ( ($generated@@352 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@81) ($generated@@267 $generated@@360)) (= $generated@@360 $generated@@189))
 :pattern ( ($generated@@267 $generated@@360))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= (type ($generated@@362 $generated@@363 $generated@@364)) ($generated@@92 $generated@@365 $generated@@2)))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
 (=> (= (type $generated@@366) ($generated@@92 $generated@@368 $generated@@2)) (= ($generated@@361 ($generated@@362 $generated@@366 $generated@@367)) (+ ($generated@@361 $generated@@366) 1))))
 :pattern ( ($generated@@361 ($generated@@362 $generated@@366 $generated@@367)))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@369) $generated@@170) (= (type $generated@@370) $generated@@81)) (or ($generated@@171 ($generated@@303 $generated@@370)) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@370 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@303 ($generated@@11 ($generated@@267 ($generated@@303 $generated@@370)))))) (let (($generated@@371 ($generated@@303 ($generated@@162 ($generated@@303 $generated@@370)))))
(let (($generated@@372 ($generated@@303 ($generated@@157 ($generated@@303 $generated@@370)))))
(let (($generated@@373 ($generated@@316 ($generated@@153 ($generated@@303 $generated@@370)))))
 (and ($generated@@171 $generated@@372) (=> ($generated@@169 ($generated@@266 $generated@@369) $generated@@372) (and ($generated@@171 $generated@@371) (=> ($generated@@169 ($generated@@266 $generated@@369) $generated@@371) (and ($generated@@268 $generated@@372) (=> (or ($generated@@269 $generated@@372 $generated@@189) (<= $generated@@373 ($generated@@153 $generated@@372))) ($generated@@268 $generated@@371))))))))))) (= ($generated@@169 ($generated@@266 $generated@@369) ($generated@@303 $generated@@370)) (ite ($generated@@267 ($generated@@303 $generated@@370)) true (let (($generated@@374 ($generated@@303 ($generated@@162 ($generated@@303 $generated@@370)))))
(let (($generated@@375 ($generated@@303 ($generated@@157 ($generated@@303 $generated@@370)))))
(let (($generated@@376 ($generated@@316 ($generated@@153 ($generated@@303 $generated@@370)))))
 (and (and (and ($generated@@169 ($generated@@266 $generated@@369) $generated@@375) ($generated@@169 ($generated@@266 $generated@@369) $generated@@374)) (or ($generated@@269 $generated@@375 $generated@@189) (<= $generated@@376 ($generated@@316 ($generated@@153 $generated@@375))))) (or ($generated@@269 $generated@@374 $generated@@189) (<= $generated@@376 ($generated@@316 ($generated@@153 $generated@@374))))))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@266 $generated@@369) ($generated@@303 $generated@@370)))
))))
(assert (forall (($generated@@378 T@U) ) (! (= (type ($generated@@377 $generated@@378)) $generated@@184)
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@379) $generated@@170) (= (type $generated@@380) $generated@@81)) (or ($generated@@338 ($generated@@303 $generated@@380)) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@380 $generated@@263)))) (and (=> (not ($generated@@0 ($generated@@303 ($generated@@11 ($generated@@267 ($generated@@303 $generated@@380)))))) (let (($generated@@381 ($generated@@303 ($generated@@162 ($generated@@303 $generated@@380)))))
(let (($generated@@382 ($generated@@303 ($generated@@157 ($generated@@303 $generated@@380)))))
 (and ($generated@@338 $generated@@382) ($generated@@338 $generated@@381))))) (= ($generated@@322 ($generated@@266 $generated@@379) ($generated@@303 $generated@@380)) (ite ($generated@@267 ($generated@@303 $generated@@380)) ($generated@@324 $generated@@184) (let (($generated@@383 ($generated@@303 ($generated@@162 ($generated@@303 $generated@@380)))))
(let (($generated@@384 ($generated@@303 ($generated@@157 ($generated@@303 $generated@@380)))))
(let (($generated@@385 ($generated@@316 ($generated@@153 ($generated@@303 $generated@@380)))))
($generated@@289 ($generated@@289 ($generated@@362 ($generated@@324 $generated@@184) ($generated@@377 ($generated@@8 $generated@@385))) ($generated@@322 ($generated@@266 $generated@@379) $generated@@384)) ($generated@@322 ($generated@@266 $generated@@379) $generated@@383)))))))))
 :weight 3
 :pattern ( ($generated@@322 ($generated@@266 $generated@@379) ($generated@@303 $generated@@380)))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@70) (= (type $generated@@388) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@332 ($generated@@377 $generated@@386) $generated@@387 $generated@@388) ($generated@@90 $generated@@386 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@332 ($generated@@377 $generated@@386) $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@81) (= (type $generated@@390) $generated@@81)) (and ($generated@@343 $generated@@389) ($generated@@343 $generated@@390))) (= ($generated@@269 $generated@@389 $generated@@390)  (and (and (= ($generated@@153 $generated@@389) ($generated@@153 $generated@@390)) ($generated@@269 ($generated@@157 $generated@@389) ($generated@@157 $generated@@390))) ($generated@@269 ($generated@@162 $generated@@389) ($generated@@162 $generated@@390)))))
 :pattern ( ($generated@@269 $generated@@389 $generated@@390) ($generated@@343 $generated@@389))
 :pattern ( ($generated@@269 $generated@@389 $generated@@390) ($generated@@343 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@95 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@92 $generated@@392 $generated@@2)) (and (= (= ($generated@@361 $generated@@391) 0) (= $generated@@391 ($generated@@324 $generated@@392))) (=> (not (= ($generated@@361 $generated@@391) 0)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (< 0 ($generated ($generated@@97 $generated@@391 $generated@@393))))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@361 $generated@@391))
)))
(assert  (and (and (and (and (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (= ($generated@@1 ($generated@@396 $generated@@399 $generated@@400)) 19)) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@397 ($generated@@396 $generated@@401 $generated@@402)) $generated@@401)
 :pattern ( ($generated@@396 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= ($generated@@398 ($generated@@396 $generated@@403 $generated@@404)) $generated@@404)
 :pattern ( ($generated@@396 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@397 (type $generated@@405))))
(= (type ($generated@@394 $generated@@405)) ($generated@@92 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@405))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= (type ($generated@@395 $generated@@407 $generated@@408)) ($generated@@396 $generated@@407 $generated@@408))
 :pattern ( ($generated@@395 $generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@T) ) (! (let (($generated@@411 (type $generated@@409)))
 (not ($generated@@0 ($generated@@97 ($generated@@394 ($generated@@395 $generated@@411 $generated@@410)) $generated@@409))))
 :pattern ( (let (($generated@@411 (type $generated@@409)))
($generated@@97 ($generated@@394 ($generated@@395 $generated@@411 $generated@@410)) $generated@@409)))
)))
(assert  (and (and (and (and (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (= ($generated@@1 ($generated@@414 $generated@@417 $generated@@418)) 20)) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@415 ($generated@@414 $generated@@419 $generated@@420)) $generated@@419)
 :pattern ( ($generated@@414 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@T) ($generated@@422 T@T) ) (! (= ($generated@@416 ($generated@@414 $generated@@421 $generated@@422)) $generated@@422)
 :pattern ( ($generated@@414 $generated@@421 $generated@@422))
))) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@415 (type $generated@@423))))
(= (type ($generated@@412 $generated@@423)) ($generated@@92 $generated@@424 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@423))
))) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= (type ($generated@@413 $generated@@425 $generated@@426)) ($generated@@414 $generated@@425 $generated@@426))
 :pattern ( ($generated@@413 $generated@@425 $generated@@426))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@T) ) (! (let (($generated@@429 (type $generated@@427)))
 (not ($generated@@0 ($generated@@97 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427))))
 :pattern ( (let (($generated@@429 (type $generated@@427)))
($generated@@97 ($generated@@412 ($generated@@413 $generated@@429 $generated@@428)) $generated@@427)))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@95 (type $generated@@430))))
 (=> (and (= (type $generated@@430) ($generated@@92 $generated@@432 $generated@@2)) (= (type $generated@@431) ($generated@@92 $generated@@432 $generated@@2))) (= ($generated@@361 ($generated@@289 $generated@@430 $generated@@431)) (+ ($generated@@361 $generated@@430) ($generated@@361 $generated@@431)))))
 :pattern ( ($generated@@361 ($generated@@289 $generated@@430 $generated@@431)))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@95 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@92 $generated@@434 $generated@@2)) (= ($generated@@191 $generated@@433) (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@434) (and (<= 0 ($generated ($generated@@97 $generated@@433 $generated@@435))) (<= ($generated ($generated@@97 $generated@@433 $generated@@435)) ($generated@@361 $generated@@433))))
 :pattern ( ($generated@@97 $generated@@433 $generated@@435))
)))))
 :pattern ( ($generated@@191 $generated@@433))
)))
(assert (forall (($generated@@437 T@T) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@437)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@184) ($generated@@280 $generated@@439 $generated@@80)) (and (= ($generated@@377 ($generated@@436 $generated@@81 $generated@@439)) $generated@@439) ($generated@@78 ($generated@@436 $generated@@81 $generated@@439) $generated@@80)))
 :pattern ( ($generated@@280 $generated@@439 $generated@@80))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@184) ($generated@@280 $generated@@440 $generated@@263)) (and (= ($generated@@377 ($generated@@436 $generated@@81 $generated@@440)) $generated@@440) ($generated@@78 ($generated@@436 $generated@@81 $generated@@440) $generated@@263)))
 :pattern ( ($generated@@280 $generated@@440 $generated@@263))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
 (=> (= (type $generated@@441) ($generated@@92 $generated@@443 $generated@@2)) (= ($generated ($generated@@97 ($generated@@362 $generated@@441 $generated@@442) $generated@@442)) (+ ($generated ($generated@@97 $generated@@441 $generated@@442)) 1))))
 :pattern ( ($generated@@362 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@445)))
 (=> (and (and (= (type $generated@@444) ($generated@@92 $generated@@447 $generated@@2)) (= (type $generated@@446) $generated@@447)) (< 0 ($generated ($generated@@97 $generated@@444 $generated@@446)))) (< 0 ($generated ($generated@@97 ($generated@@362 $generated@@444 $generated@@445) $generated@@446)))))
 :pattern ( ($generated@@362 $generated@@444 $generated@@445) ($generated@@97 $generated@@444 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@398 (type $generated@@448))))
(let (($generated@@450 ($generated@@397 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@396 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@395 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) ($generated@@0 ($generated@@97 ($generated@@394 $generated@@448) $generated@@451)))
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@394 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@398 (type $generated@@453))))
(= (type ($generated@@452 $generated@@453)) ($generated@@92 $generated@@454 $generated@@4)))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@398 (type $generated@@455))))
(let (($generated@@457 ($generated@@397 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@396 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@395 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@456) ($generated@@0 ($generated@@97 ($generated@@452 $generated@@455) $generated@@458)))
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@452 $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@416 (type $generated@@459))))
(let (($generated@@461 ($generated@@415 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@414 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@413 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) ($generated@@0 ($generated@@97 ($generated@@412 $generated@@459) $generated@@462)))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@412 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@416 (type $generated@@464))))
(= (type ($generated@@463 $generated@@464)) ($generated@@92 $generated@@465 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@416 (type $generated@@466))))
(let (($generated@@468 ($generated@@415 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@414 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@413 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@467) ($generated@@0 ($generated@@97 ($generated@@463 $generated@@466) $generated@@469)))
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@463 $generated@@466))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@471)))
 (=> (and (= (type $generated@@470) ($generated@@92 $generated@@473 $generated@@2)) (= (type $generated@@472) $generated@@473)) (= (< 0 ($generated ($generated@@97 ($generated@@362 $generated@@470 $generated@@471) $generated@@472)))  (or (= $generated@@472 $generated@@471) (< 0 ($generated ($generated@@97 $generated@@470 $generated@@472)))))))
 :pattern ( ($generated@@97 ($generated@@362 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@475) $generated@@70)) (= ($generated@@78 $generated@@474 ($generated@@190 $generated@@475)) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@474 $generated@@476)))) ($generated@@280 $generated@@476 $generated@@475))
 :pattern ( ($generated@@97 $generated@@474 $generated@@476))
))))
 :pattern ( ($generated@@78 $generated@@474 ($generated@@190 $generated@@475)))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@95 (type $generated@@477))))
 (=> (and (= (type $generated@@477) ($generated@@92 $generated@@479 $generated@@2)) (= (type $generated@@478) ($generated@@92 $generated@@479 $generated@@2))) (= ($generated@@321 $generated@@477 $generated@@478) (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@479) (= ($generated ($generated@@97 $generated@@477 $generated@@480)) ($generated ($generated@@97 $generated@@478 $generated@@480))))
 :pattern ( ($generated@@97 $generated@@477 $generated@@480))
 :pattern ( ($generated@@97 $generated@@478 $generated@@480))
)))))
 :pattern ( ($generated@@321 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@81) ($generated@@268 $generated@@481)) (or ($generated@@267 $generated@@481) ($generated@@343 $generated@@481)))
 :pattern ( ($generated@@268 $generated@@481))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@482) $generated@@170) (= (type $generated@@483) $generated@@81)) (or ($generated@@338 $generated@@483) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@483 $generated@@263)))) (and (=> (not ($generated@@267 $generated@@483)) (let (($generated@@484 ($generated@@162 $generated@@483)))
(let (($generated@@485 ($generated@@157 $generated@@483)))
 (and ($generated@@338 $generated@@485) ($generated@@338 $generated@@484))))) (= ($generated@@322 ($generated@@266 $generated@@482) $generated@@483) (ite ($generated@@267 $generated@@483) ($generated@@324 $generated@@184) (let (($generated@@486 ($generated@@162 $generated@@483)))
(let (($generated@@487 ($generated@@157 $generated@@483)))
(let (($generated@@488 ($generated@@153 $generated@@483)))
($generated@@289 ($generated@@289 ($generated@@362 ($generated@@324 $generated@@184) ($generated@@377 ($generated@@8 $generated@@488))) ($generated@@322 $generated@@482 $generated@@487)) ($generated@@322 $generated@@482 $generated@@486)))))))))
 :pattern ( ($generated@@322 ($generated@@266 $generated@@482) $generated@@483))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@490) $generated@@70)) (= (type $generated@@491) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@489 ($generated@@306 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@184) ($generated@@0 ($generated@@97 $generated@@489 $generated@@492))) ($generated@@332 $generated@@492 $generated@@490 $generated@@491))
 :pattern ( ($generated@@97 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@90 $generated@@489 ($generated@@306 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@494) $generated@@70)) (= (type $generated@@495) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@493 ($generated@@311 $generated@@494) $generated@@495) (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@184) ($generated@@0 ($generated@@97 $generated@@493 $generated@@496))) ($generated@@332 $generated@@496 $generated@@494 $generated@@495))
 :pattern ( ($generated@@97 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@90 $generated@@493 ($generated@@311 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated ($generated@@97 ($generated@@324 $generated@@498) $generated@@497)) 0))
 :pattern ( (let (($generated@@498 (type $generated@@497)))
($generated@@97 ($generated@@324 $generated@@498) $generated@@497)))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@398 (type $generated@@502))))
(let (($generated@@504 ($generated@@397 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502)) ($generated@@92 $generated@@504 $generated@@503))))
 :pattern ( ($generated@@500 $generated@@502))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@506) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@499 $generated@@505) $generated@@506))  (and ($generated@@0 ($generated@@97 ($generated@@394 $generated@@505) ($generated@@182 ($generated@@436 $generated@@81 $generated@@506)))) (= ($generated@@97 ($generated@@500 $generated@@505) ($generated@@182 ($generated@@436 $generated@@81 $generated@@506))) ($generated@@183 ($generated@@436 $generated@@81 $generated@@506))))))
 :pattern ( ($generated@@97 ($generated@@499 $generated@@505) $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@416 (type $generated@@510))))
(let (($generated@@512 ($generated@@415 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510)) ($generated@@92 $generated@@512 $generated@@511))))
 :pattern ( ($generated@@508 $generated@@510))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) ($generated@@414 $generated@@184 $generated@@184)) (= (type $generated@@514) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@507 $generated@@513) $generated@@514))  (and ($generated@@0 ($generated@@97 ($generated@@412 $generated@@513) ($generated@@182 ($generated@@436 $generated@@81 $generated@@514)))) (= ($generated@@97 ($generated@@508 $generated@@513) ($generated@@182 ($generated@@436 $generated@@81 $generated@@514))) ($generated@@183 ($generated@@436 $generated@@81 $generated@@514))))))
 :pattern ( ($generated@@97 ($generated@@507 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(let (($generated@@518 ($generated@@397 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@396 $generated@@518 $generated@@517)) (= ($generated@@0 ($generated@@97 ($generated@@452 $generated@@515) $generated@@516)) (exists (($generated@@519 T@U) ) (!  (and (= (type $generated@@519) $generated@@518) (and ($generated@@0 ($generated@@97 ($generated@@394 $generated@@515) $generated@@519)) (= $generated@@516 ($generated@@97 ($generated@@500 $generated@@515) $generated@@519))))
 :pattern ( ($generated@@97 ($generated@@394 $generated@@515) $generated@@519))
 :pattern ( ($generated@@97 ($generated@@500 $generated@@515) $generated@@519))
))))))
 :pattern ( ($generated@@97 ($generated@@452 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(let (($generated@@523 ($generated@@415 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@414 $generated@@523 $generated@@522)) (= ($generated@@0 ($generated@@97 ($generated@@463 $generated@@520) $generated@@521)) (exists (($generated@@524 T@U) ) (!  (and (= (type $generated@@524) $generated@@523) (and ($generated@@0 ($generated@@97 ($generated@@412 $generated@@520) $generated@@524)) (= $generated@@521 ($generated@@97 ($generated@@508 $generated@@520) $generated@@524))))
 :pattern ( ($generated@@97 ($generated@@412 $generated@@520) $generated@@524))
 :pattern ( ($generated@@97 ($generated@@508 $generated@@520) $generated@@524))
))))))
 :pattern ( ($generated@@97 ($generated@@463 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@525 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@529) $generated@@70)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@528 ($generated@@525 $generated@@529 $generated@@530) $generated@@531) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@394 $generated@@528) $generated@@532))) (and ($generated@@332 ($generated@@97 ($generated@@500 $generated@@528) $generated@@532) $generated@@530 $generated@@531) ($generated@@332 $generated@@532 $generated@@529 $generated@@531)))
 :pattern ( ($generated@@97 ($generated@@500 $generated@@528) $generated@@532))
 :pattern ( ($generated@@97 ($generated@@394 $generated@@528) $generated@@532))
))))
 :pattern ( ($generated@@90 $generated@@528 ($generated@@525 $generated@@529 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) ($generated@@414 $generated@@184 $generated@@184)) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@536 ($generated@@533 $generated@@537 $generated@@538) $generated@@539) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@412 $generated@@536) $generated@@540))) (and ($generated@@332 ($generated@@97 ($generated@@508 $generated@@536) $generated@@540) $generated@@538 $generated@@539) ($generated@@332 $generated@@540 $generated@@537 $generated@@539)))
 :pattern ( ($generated@@97 ($generated@@508 $generated@@536) $generated@@540))
 :pattern ( ($generated@@97 ($generated@@412 $generated@@536) $generated@@540))
))))
 :pattern ( ($generated@@90 $generated@@536 ($generated@@533 $generated@@537 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@170)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@170) (= (type $generated@@544) $generated@@81)) (= ($generated@@169 $generated@@543 $generated@@544) ($generated@@169 $generated@@323 $generated@@544)))
 :pattern ( ($generated@@169 ($generated@@541 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@95 (type $generated@@545))))
 (=> (and (and (= (type $generated@@545) ($generated@@92 $generated@@547 $generated@@2)) (= (type $generated@@546) ($generated@@92 $generated@@547 $generated@@2))) ($generated@@321 $generated@@545 $generated@@546)) (= $generated@@545 $generated@@546)))
 :pattern ( ($generated@@321 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@81) ($generated@@78 $generated@@548 $generated@@80)) (or ($generated@@267 $generated@@548) ($generated@@343 $generated@@548)))
 :pattern ( ($generated@@343 $generated@@548) ($generated@@78 $generated@@548 $generated@@80))
 :pattern ( ($generated@@267 $generated@@548) ($generated@@78 $generated@@548 $generated@@80))
)))
(assert (forall (($generated@@550 T@T) ) (! (= (type ($generated@@549 $generated@@550)) ($generated@@92 $generated@@550 $generated@@4))
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@416 (type $generated@@551))))
(let (($generated@@553 ($generated@@415 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@414 $generated@@553 $generated@@552)) (= (= $generated@@551 ($generated@@413 $generated@@553 $generated@@552)) (= ($generated@@412 $generated@@551) ($generated@@549 $generated@@553))))))
 :pattern ( ($generated@@412 $generated@@551))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@416 (type $generated@@554))))
(let (($generated@@556 ($generated@@415 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@414 $generated@@556 $generated@@555)) (= (= $generated@@554 ($generated@@413 $generated@@556 $generated@@555)) (= ($generated@@463 $generated@@554) ($generated@@549 $generated@@555))))))
 :pattern ( ($generated@@463 $generated@@554))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@416 (type $generated@@557))))
(let (($generated@@559 ($generated@@415 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@414 $generated@@559 $generated@@558)) (= (= $generated@@557 ($generated@@413 $generated@@559 $generated@@558)) (= ($generated@@507 $generated@@557) ($generated@@549 $generated@@184))))))
 :pattern ( ($generated@@507 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@398 (type $generated@@560))))
(let (($generated@@562 ($generated@@397 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@396 $generated@@562 $generated@@561)) (or (= $generated@@560 ($generated@@395 $generated@@562 $generated@@561)) (exists (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (and (and (= (type $generated@@563) $generated@@184) (= (type $generated@@564) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@499 $generated@@560) ($generated@@377 ($generated@@279 $generated@@563 $generated@@564)))))
 :no-pattern (type $generated@@563)
 :no-pattern (type $generated@@564)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
 :no-pattern ($generated $generated@@564)
 :no-pattern ($generated@@0 $generated@@564)
))))))
 :pattern ( ($generated@@499 $generated@@560))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@416 (type $generated@@565))))
(let (($generated@@567 ($generated@@415 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@414 $generated@@567 $generated@@566)) (or (= $generated@@565 ($generated@@413 $generated@@567 $generated@@566)) (exists (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (and (and (= (type $generated@@568) $generated@@184) (= (type $generated@@569) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@507 $generated@@565) ($generated@@377 ($generated@@279 $generated@@568 $generated@@569)))))
 :no-pattern (type $generated@@568)
 :no-pattern (type $generated@@569)
 :no-pattern ($generated $generated@@568)
 :no-pattern ($generated@@0 $generated@@568)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
))))))
 :pattern ( ($generated@@507 $generated@@565))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@184) ($generated@@280 $generated@@570 $generated@@46)) (and (= ($generated@@377 ($generated@@436 $generated@@2 $generated@@570)) $generated@@570) ($generated@@78 ($generated@@436 $generated@@2 $generated@@570) $generated@@46)))
 :pattern ( ($generated@@280 $generated@@570 $generated@@46))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@184) ($generated@@280 $generated@@571 $generated@@47)) (and (= ($generated@@377 ($generated@@436 $generated@@3 $generated@@571)) $generated@@571) ($generated@@78 ($generated@@436 $generated@@3 $generated@@571) $generated@@47)))
 :pattern ( ($generated@@280 $generated@@571 $generated@@47))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@184) ($generated@@280 $generated@@572 $generated@@44)) (and (= ($generated@@377 ($generated@@436 $generated@@4 $generated@@572)) $generated@@572) ($generated@@78 ($generated@@436 $generated@@4 $generated@@572) $generated@@44)))
 :pattern ( ($generated@@280 $generated@@572 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@573) 21))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@184) ($generated@@280 $generated@@574 $generated@@45)) (and (= ($generated@@377 ($generated@@436 $generated@@573 $generated@@574)) $generated@@574) ($generated@@78 ($generated@@436 $generated@@573 $generated@@574) $generated@@45)))
 :pattern ( ($generated@@280 $generated@@574 $generated@@45))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@170) (= (type $generated@@576) $generated@@81)) (= ($generated@@169 ($generated@@266 $generated@@575) $generated@@576) ($generated@@169 $generated@@575 $generated@@576)))
 :pattern ( ($generated@@169 ($generated@@266 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@70) (= ($generated@@280 ($generated@@377 $generated@@577) $generated@@578) ($generated@@78 $generated@@577 $generated@@578)))
 :pattern ( ($generated@@280 ($generated@@377 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@95 (type $generated@@579))))
 (=> (= (type $generated@@579) ($generated@@92 $generated@@580 $generated@@2)) (<= 0 ($generated@@361 $generated@@579))))
 :pattern ( ($generated@@361 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@355 (type $generated@@581))))
 (=> (= (type $generated@@581) ($generated@@354 $generated@@582)) (<= 0 ($generated@@353 $generated@@581))))
 :pattern ( ($generated@@353 $generated@@581))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@70)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (= ($generated@@583 ($generated@@525 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@525 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@70)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (= ($generated@@587 ($generated@@525 $generated@@589 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@525 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@70) (= (type $generated@@592) $generated@@70)) (= ($generated@@88 ($generated@@525 $generated@@591 $generated@@592)) $generated@@58))
 :pattern ( ($generated@@525 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@70)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@70) (= (type $generated@@596) $generated@@70)) (= ($generated@@593 ($generated@@533 $generated@@595 $generated@@596)) $generated@@595))
 :pattern ( ($generated@@533 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@70) (= (type $generated@@600) $generated@@70)) (= ($generated@@597 ($generated@@533 $generated@@599 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@533 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@70) (= (type $generated@@602) $generated@@70)) (= ($generated@@88 ($generated@@533 $generated@@601 $generated@@602)) $generated@@59))
 :pattern ( ($generated@@533 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@184) (= (type $generated@@604) $generated@@184)) (= ($generated@@148 ($generated@@279 $generated@@603 $generated@@604)) $generated@@61))
 :pattern ( ($generated@@279 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@70)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@70) (= (type $generated@@608) $generated@@70)) (= ($generated@@605 ($generated@@175 $generated@@607 $generated@@608)) $generated@@607))
 :pattern ( ($generated@@175 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@70)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@70) (= (type $generated@@612) $generated@@70)) (= ($generated@@609 ($generated@@175 $generated@@611 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@175 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@184) (= (type $generated@@614) $generated@@184)) (= ($generated@@182 ($generated@@279 $generated@@613 $generated@@614)) $generated@@613))
 :pattern ( ($generated@@279 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@184) (= (type $generated@@616) $generated@@184)) (= ($generated@@183 ($generated@@279 $generated@@615 $generated@@616)) $generated@@616))
 :pattern ( ($generated@@279 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@170) (= (type $generated@@618) $generated@@81)) (= ($generated@@322 $generated@@617 $generated@@618) ($generated@@322 $generated@@323 $generated@@618)))
 :pattern ( ($generated@@322 ($generated@@541 $generated@@617) $generated@@618))
)))
(assert  (and (forall (($generated@@621 T@U) ) (! (= (type ($generated@@619 $generated@@621)) $generated@@70)
 :pattern ( ($generated@@619 $generated@@621))
)) (forall (($generated@@622 T@U) ($generated@@623 Int) ) (! (let (($generated@@624 ($generated@@355 (type $generated@@622))))
(= (type ($generated@@620 $generated@@622 $generated@@623)) $generated@@624))
 :pattern ( ($generated@@620 $generated@@622 $generated@@623))
))))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@625) ($generated@@354 $generated@@184)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@625 ($generated@@619 $generated@@626) $generated@@627) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@353 $generated@@625))) ($generated@@332 ($generated@@620 $generated@@625 $generated@@628) $generated@@626 $generated@@627))
 :pattern ( ($generated@@620 $generated@@625 $generated@@628))
))))
 :pattern ( ($generated@@90 $generated@@625 ($generated@@619 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@629 Int) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@81) (= (type $generated@@631) $generated@@81)) (= ($generated@@79 ($generated@@316 $generated@@629) ($generated@@303 $generated@@630) ($generated@@303 $generated@@631)) ($generated@@303 ($generated@@79 $generated@@629 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@629) ($generated@@303 $generated@@630) ($generated@@303 $generated@@631)))
)))
(assert (forall (($generated@@633 Int) ) (! (= ($generated@@632 ($generated@@91 $generated@@633)) $generated@@633)
 :pattern ( ($generated@@91 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (= (type ($generated@@634 $generated@@635)) $generated@@70)
 :pattern ( ($generated@@634 $generated@@635))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@70) (= ($generated@@634 ($generated@@306 $generated@@636)) $generated@@636))
 :pattern ( ($generated@@306 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@70) (= ($generated@@88 ($generated@@306 $generated@@637)) $generated@@54))
 :pattern ( ($generated@@306 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ) (! (= (type ($generated@@638 $generated@@639)) $generated@@70)
 :pattern ( ($generated@@638 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@70) (= ($generated@@638 ($generated@@311 $generated@@640)) $generated@@640))
 :pattern ( ($generated@@311 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@70) (= ($generated@@88 ($generated@@311 $generated@@641)) $generated@@55))
 :pattern ( ($generated@@311 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@70)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@70) (= ($generated@@642 ($generated@@190 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@190 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@70) (= ($generated@@88 ($generated@@190 $generated@@645)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ) (! (= (type ($generated@@646 $generated@@647)) $generated@@70)
 :pattern ( ($generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@70) (= ($generated@@646 ($generated@@619 $generated@@648)) $generated@@648))
 :pattern ( ($generated@@619 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@70) (= ($generated@@88 ($generated@@619 $generated@@649)) $generated@@57))
 :pattern ( ($generated@@619 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@650)))
(= ($generated@@436 $generated@@651 ($generated@@377 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@377 $generated@@650))
)))
(assert (forall (($generated@@653 Int) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@81) (= (type $generated@@655) $generated@@81)) (< ($generated@@652 $generated@@654) ($generated@@652 ($generated@@79 $generated@@653 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@79 $generated@@653 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 Int) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@81) (= (type $generated@@658) $generated@@81)) (< ($generated@@652 $generated@@658) ($generated@@652 ($generated@@79 $generated@@656 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@79 $generated@@656 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@659) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@660) $generated@@70)) (= (type $generated@@661) $generated@@70)) (= ($generated@@78 $generated@@659 ($generated@@525 $generated@@660 $generated@@661)) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@394 $generated@@659) $generated@@662))) (and ($generated@@280 ($generated@@97 ($generated@@500 $generated@@659) $generated@@662) $generated@@661) ($generated@@280 $generated@@662 $generated@@660)))
 :pattern ( ($generated@@97 ($generated@@500 $generated@@659) $generated@@662))
 :pattern ( ($generated@@97 ($generated@@394 $generated@@659) $generated@@662))
))))
 :pattern ( ($generated@@78 $generated@@659 ($generated@@525 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@414 $generated@@184 $generated@@184)) (= (type $generated@@664) $generated@@70)) (= (type $generated@@665) $generated@@70)) (= ($generated@@78 $generated@@663 ($generated@@533 $generated@@664 $generated@@665)) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@412 $generated@@663) $generated@@666))) (and ($generated@@280 ($generated@@97 ($generated@@508 $generated@@663) $generated@@666) $generated@@665) ($generated@@280 $generated@@666 $generated@@664)))
 :pattern ( ($generated@@97 ($generated@@508 $generated@@663) $generated@@666))
 :pattern ( ($generated@@97 ($generated@@412 $generated@@663) $generated@@666))
))))
 :pattern ( ($generated@@78 $generated@@663 ($generated@@533 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@184) (= (type $generated@@669) $generated@@184)) (< ($generated@@667 $generated@@668) ($generated@@652 ($generated@@279 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@279 $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@184) (= (type $generated@@671) $generated@@184)) (< ($generated@@667 $generated@@671) ($generated@@652 ($generated@@279 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@279 $generated@@670 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@170) (= (type $generated@@673) $generated@@81)) (= ($generated@@322 ($generated@@266 $generated@@672) $generated@@673) ($generated@@322 $generated@@672 $generated@@673)))
 :pattern ( ($generated@@322 ($generated@@266 $generated@@672) $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) $generated@@184) (= (type $generated@@675) $generated@@70)) (= (type $generated@@676) $generated@@70)) ($generated@@280 $generated@@674 ($generated@@525 $generated@@675 $generated@@676))) (and (= ($generated@@377 ($generated@@436 ($generated@@396 $generated@@184 $generated@@184) $generated@@674)) $generated@@674) ($generated@@78 ($generated@@436 ($generated@@396 $generated@@184 $generated@@184) $generated@@674) ($generated@@525 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@280 $generated@@674 ($generated@@525 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@184) (= (type $generated@@678) $generated@@70)) (= (type $generated@@679) $generated@@70)) ($generated@@280 $generated@@677 ($generated@@533 $generated@@678 $generated@@679))) (and (= ($generated@@377 ($generated@@436 ($generated@@414 $generated@@184 $generated@@184) $generated@@677)) $generated@@677) ($generated@@78 ($generated@@436 ($generated@@414 $generated@@184 $generated@@184) $generated@@677) ($generated@@533 $generated@@678 $generated@@679))))
 :pattern ( ($generated@@280 $generated@@677 ($generated@@533 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@70) (= (type $generated@@681) $generated@@70)) (= (type $generated@@682) $generated@@184)) ($generated@@280 $generated@@682 ($generated@@175 $generated@@680 $generated@@681))) (and (= ($generated@@377 ($generated@@436 $generated@@81 $generated@@682)) $generated@@682) ($generated@@78 ($generated@@436 $generated@@81 $generated@@682) ($generated@@175 $generated@@680 $generated@@681))))
 :pattern ( ($generated@@280 $generated@@682 ($generated@@175 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@683)))
 (not ($generated@@0 ($generated@@97 ($generated@@549 $generated@@684) $generated@@683))))
 :pattern ( (let (($generated@@684 (type $generated@@683)))
($generated@@97 ($generated@@549 $generated@@684) $generated@@683)))
)))
(assert (forall (($generated@@686 T@U) ) (! (= (type ($generated@@685 $generated@@686)) $generated@@75)
 :pattern ( ($generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@70) (= (type $generated@@688) $generated@@70)) (and (= ($generated@@88 ($generated@@175 $generated@@687 $generated@@688)) $generated@@62) (= ($generated@@685 ($generated@@175 $generated@@687 $generated@@688)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@81) (= (type $generated@@690) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@690) (and ($generated@@343 $generated@@689) ($generated@@90 $generated@@689 $generated@@80 $generated@@690)))) ($generated@@90 ($generated@@8 ($generated@@153 $generated@@689)) $generated@@46 $generated@@690))
 :pattern ( ($generated@@90 ($generated@@8 ($generated@@153 $generated@@689)) $generated@@46 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@81) (= ($generated@@667 ($generated@@377 $generated@@691)) ($generated@@652 $generated@@691)))
 :pattern ( ($generated@@667 ($generated@@377 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@184) ($generated@@280 $generated@@692 ($generated@@91 0))) (and (= ($generated@@377 ($generated@@436 $generated@@2 $generated@@692)) $generated@@692) ($generated@@78 ($generated@@436 ($generated@@92 $generated@@184 $generated@@4) $generated@@692) ($generated@@91 0))))
 :pattern ( ($generated@@280 $generated@@692 ($generated@@91 0)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@184) (= (type $generated@@694) $generated@@70)) ($generated@@280 $generated@@693 ($generated@@306 $generated@@694))) (and (= ($generated@@377 ($generated@@436 ($generated@@92 $generated@@184 $generated@@4) $generated@@693)) $generated@@693) ($generated@@78 ($generated@@436 ($generated@@92 $generated@@184 $generated@@4) $generated@@693) ($generated@@306 $generated@@694))))
 :pattern ( ($generated@@280 $generated@@693 ($generated@@306 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@184) (= (type $generated@@696) $generated@@70)) ($generated@@280 $generated@@695 ($generated@@311 $generated@@696))) (and (= ($generated@@377 ($generated@@436 ($generated@@92 $generated@@184 $generated@@4) $generated@@695)) $generated@@695) ($generated@@78 ($generated@@436 ($generated@@92 $generated@@184 $generated@@4) $generated@@695) ($generated@@311 $generated@@696))))
 :pattern ( ($generated@@280 $generated@@695 ($generated@@311 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@184) (= (type $generated@@698) $generated@@70)) ($generated@@280 $generated@@697 ($generated@@190 $generated@@698))) (and (= ($generated@@377 ($generated@@436 ($generated@@92 $generated@@184 $generated@@2) $generated@@697)) $generated@@697) ($generated@@78 ($generated@@436 ($generated@@92 $generated@@184 $generated@@2) $generated@@697) ($generated@@190 $generated@@698))))
 :pattern ( ($generated@@280 $generated@@697 ($generated@@190 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@184) (= (type $generated@@700) $generated@@70)) ($generated@@280 $generated@@699 ($generated@@619 $generated@@700))) (and (= ($generated@@377 ($generated@@436 ($generated@@354 $generated@@184) $generated@@699)) $generated@@699) ($generated@@78 ($generated@@436 ($generated@@354 $generated@@184) $generated@@699) ($generated@@619 $generated@@700))))
 :pattern ( ($generated@@280 $generated@@699 ($generated@@619 $generated@@700)))
)))
(assert (= ($generated@@88 $generated@@80) $generated@@64))
(assert (= ($generated@@685 $generated@@80) $generated@@68))
(assert (= ($generated@@88 $generated@@263) $generated@@66))
(assert (= ($generated@@685 $generated@@263) $generated@@69))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@701) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@702) $generated@@70)) (= (type $generated@@703) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@701 ($generated@@190 $generated@@702) $generated@@703) (forall (($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@704) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@701 $generated@@704)))) ($generated@@332 $generated@@704 $generated@@702 $generated@@703))
 :pattern ( ($generated@@97 $generated@@701 $generated@@704))
))))
 :pattern ( ($generated@@90 $generated@@701 ($generated@@190 $generated@@702) $generated@@703))
)))
(assert (= $generated@@189 ($generated@@303 $generated@@189)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@81) (= (type $generated@@706) $generated@@70)) (= (type $generated@@707) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@707) (and ($generated@@174 $generated@@705) (exists (($generated@@708 T@U) ) (!  (and (= (type $generated@@708) $generated@@70) ($generated@@90 $generated@@705 ($generated@@175 $generated@@706 $generated@@708) $generated@@707))
 :pattern ( ($generated@@90 $generated@@705 ($generated@@175 $generated@@706 $generated@@708) $generated@@707))
))))) ($generated@@332 ($generated@@182 $generated@@705) $generated@@706 $generated@@707))
 :pattern ( ($generated@@332 ($generated@@182 $generated@@705) $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) $generated@@81) (= (type $generated@@710) $generated@@70)) (= (type $generated@@711) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@711) (and ($generated@@174 $generated@@709) (exists (($generated@@712 T@U) ) (!  (and (= (type $generated@@712) $generated@@70) ($generated@@90 $generated@@709 ($generated@@175 $generated@@712 $generated@@710) $generated@@711))
 :pattern ( ($generated@@90 $generated@@709 ($generated@@175 $generated@@712 $generated@@710) $generated@@711))
))))) ($generated@@332 ($generated@@183 $generated@@709) $generated@@710 $generated@@711))
 :pattern ( ($generated@@332 ($generated@@183 $generated@@709) $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (! (let (($generated@@716 (type $generated@@714)))
 (=> (and (and (= (type $generated@@713) ($generated@@92 $generated@@716 $generated@@2)) (= (type $generated@@715) $generated@@716)) (not (= $generated@@714 $generated@@715))) (= ($generated ($generated@@97 $generated@@713 $generated@@715)) ($generated ($generated@@97 ($generated@@362 $generated@@713 $generated@@714) $generated@@715)))))
 :pattern ( ($generated@@362 $generated@@713 $generated@@714) ($generated@@97 $generated@@713 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) $generated@@81) (= (type $generated@@718) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@718) (and ($generated@@343 $generated@@717) ($generated@@90 $generated@@717 $generated@@80 $generated@@718)))) ($generated@@90 ($generated@@157 $generated@@717) $generated@@80 $generated@@718))
 :pattern ( ($generated@@90 ($generated@@157 $generated@@717) $generated@@80 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@81) (= (type $generated@@720) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@287 $generated@@720) (and ($generated@@343 $generated@@719) ($generated@@90 $generated@@719 $generated@@80 $generated@@720)))) ($generated@@90 ($generated@@162 $generated@@719) $generated@@80 $generated@@720))
 :pattern ( ($generated@@90 ($generated@@162 $generated@@719) $generated@@80 $generated@@720))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@184) (= (type $generated@@722) $generated@@184)) (= ($generated@@279 ($generated@@303 $generated@@721) ($generated@@303 $generated@@722)) ($generated@@303 ($generated@@279 $generated@@721 $generated@@722))))
 :pattern ( ($generated@@279 ($generated@@303 $generated@@721) ($generated@@303 $generated@@722)))
)))
(assert (forall (($generated@@723 Int) ) (! (= ($generated@@377 ($generated@@8 ($generated@@316 $generated@@723))) ($generated@@303 ($generated@@377 ($generated@@8 $generated@@723))))
 :pattern ( ($generated@@377 ($generated@@8 ($generated@@316 $generated@@723))))
)))
(assert (forall (($generated@@724 T@U) ) (! (= ($generated@@377 ($generated@@303 $generated@@724)) ($generated@@303 ($generated@@377 $generated@@724)))
 :pattern ( ($generated@@377 ($generated@@303 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@355 (type $generated@@725))))
 (=> (and (= (type $generated@@725) ($generated@@354 $generated@@726)) (= ($generated@@353 $generated@@725) 0)) (= $generated@@725 ($generated@@352 $generated@@726))))
 :pattern ( ($generated@@353 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (! (let (($generated@@730 (type $generated@@728)))
 (=> (and (and (= (type $generated@@727) ($generated@@92 $generated@@730 $generated@@2)) (= (type $generated@@729) $generated@@2)) (<= 0 ($generated $generated@@729))) (= ($generated@@361 ($generated@@98 $generated@@727 $generated@@728 $generated@@729)) (+ (- ($generated@@361 $generated@@727) ($generated ($generated@@97 $generated@@727 $generated@@728))) ($generated $generated@@729)))))
 :pattern ( ($generated@@361 ($generated@@98 $generated@@727 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@731 T@U) ) (!  (=> (= (type $generated@@731) $generated@@81) (= ($generated@@78 $generated@@731 $generated@@263)  (and ($generated@@78 $generated@@731 $generated@@80) ($generated@@169 ($generated@@266 $generated@@323) $generated@@731))))
 :pattern ( ($generated@@78 $generated@@731 $generated@@263))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@733) $generated@@2)) ($generated@@90 $generated@@733 $generated@@46 $generated@@732))
 :pattern ( ($generated@@90 $generated@@733 $generated@@46 $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@735) $generated@@3)) ($generated@@90 $generated@@735 $generated@@47 $generated@@734))
 :pattern ( ($generated@@90 $generated@@735 $generated@@47 $generated@@734))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@737) $generated@@4)) ($generated@@90 $generated@@737 $generated@@44 $generated@@736))
 :pattern ( ($generated@@90 $generated@@737 $generated@@44 $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@739) $generated@@573)) ($generated@@90 $generated@@739 $generated@@45 $generated@@738))
 :pattern ( ($generated@@90 $generated@@739 $generated@@45 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@741) $generated@@184)) ($generated@@90 $generated@@741 $generated@@48 $generated@@740))
 :pattern ( ($generated@@90 $generated@@741 $generated@@48 $generated@@740))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) ($generated@@354 $generated@@184)) (= (type $generated@@743) $generated@@70)) (= ($generated@@78 $generated@@742 ($generated@@619 $generated@@743)) (forall (($generated@@744 Int) ) (!  (=> (and (<= 0 $generated@@744) (< $generated@@744 ($generated@@353 $generated@@742))) ($generated@@280 ($generated@@620 $generated@@742 $generated@@744) $generated@@743))
 :pattern ( ($generated@@620 $generated@@742 $generated@@744))
))))
 :pattern ( ($generated@@78 $generated@@742 ($generated@@619 $generated@@743)))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 Int) ) (!  (=> (= (type $generated@@746) ($generated@@354 $generated@@184)) (=> (and (<= 0 $generated@@747) (< $generated@@747 ($generated@@353 $generated@@746))) (< ($generated@@652 ($generated@@436 $generated@@81 ($generated@@620 $generated@@746 $generated@@747))) ($generated@@745 $generated@@746))))
 :pattern ( ($generated@@652 ($generated@@436 $generated@@81 ($generated@@620 $generated@@746 $generated@@747))))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (and (= (type $generated@@748) ($generated@@396 $generated@@184 $generated@@184)) (= (type $generated@@749) $generated@@70)) (= (type $generated@@750) $generated@@70)) ($generated@@78 $generated@@748 ($generated@@525 $generated@@749 $generated@@750))) (and (and ($generated@@78 ($generated@@394 $generated@@748) ($generated@@306 $generated@@749)) ($generated@@78 ($generated@@452 $generated@@748) ($generated@@306 $generated@@750))) ($generated@@78 ($generated@@499 $generated@@748) ($generated@@306 ($generated@@175 $generated@@749 $generated@@750)))))
 :pattern ( ($generated@@78 $generated@@748 ($generated@@525 $generated@@749 $generated@@750)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (and (= (type $generated@@751) ($generated@@414 $generated@@184 $generated@@184)) (= (type $generated@@752) $generated@@70)) (= (type $generated@@753) $generated@@70)) ($generated@@78 $generated@@751 ($generated@@533 $generated@@752 $generated@@753))) (and (and ($generated@@78 ($generated@@412 $generated@@751) ($generated@@311 $generated@@752)) ($generated@@78 ($generated@@463 $generated@@751) ($generated@@311 $generated@@753))) ($generated@@78 ($generated@@507 $generated@@751) ($generated@@311 ($generated@@175 $generated@@752 $generated@@753)))))
 :pattern ( ($generated@@78 $generated@@751 ($generated@@533 $generated@@752 $generated@@753)))
)))
(assert (forall (($generated@@754 T@U) ) (!  (=> (= (type $generated@@754) $generated@@2) ($generated@@78 $generated@@754 $generated@@46))
 :pattern ( ($generated@@78 $generated@@754 $generated@@46))
)))
(assert (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@3) ($generated@@78 $generated@@755 $generated@@47))
 :pattern ( ($generated@@78 $generated@@755 $generated@@47))
)))
(assert (forall (($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@4) ($generated@@78 $generated@@756 $generated@@44))
 :pattern ( ($generated@@78 $generated@@756 $generated@@44))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@573) ($generated@@78 $generated@@757 $generated@@45))
 :pattern ( ($generated@@78 $generated@@757 $generated@@45))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@184) ($generated@@78 $generated@@758 $generated@@48))
 :pattern ( ($generated@@78 $generated@@758 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@759 () T@U)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () T@U)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@759) ($generated@@197 $generated@@93 $generated@@4)) (= (type $generated@@760) $generated@@93)) (= (type $generated@@761) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@762) ($generated@@197 $generated@@93 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@764  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@321 ($generated@@322 ($generated@@266 ($generated@@266 $generated@@323)) ($generated@@303 $generated@@302)) ($generated@@324 $generated@@184)))))
(let (($generated@@765  (=> (= $generated@@759 ($generated@@251 $generated@@760 $generated@@761 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@78 ($generated@@303 $generated@@189) $generated@@263)) (=> ($generated@@78 ($generated@@303 $generated@@189) $generated@@263) (=> (= $generated@@302 ($generated@@303 $generated@@189)) (=> (and ($generated@@78 $generated@@302 $generated@@263) (= (ControlFlow 0 5) 4)) $generated@@764)))))))
(let (($generated@@766  (=> (and ($generated@@78 $generated@@302 $generated@@263) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@767  (=> (= $generated@@762 ($generated@@196 $generated@@760 $generated@@761 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@766) (=> (= (ControlFlow 0 7) 5) $generated@@765)))))
(let (($generated@@768  (=> (and (and ($generated@@287 $generated@@761) ($generated@@763 $generated@@761)) (and (= 4 $generated@@168) (= (ControlFlow 0 8) 7))) $generated@@767)))
$generated@@768))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U Int) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@203 (T@U T@U T@U) T@U)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (Int) Int)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@316 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U T@U) T@U)
(declare-fun $generated@@323 (T@U) Bool)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@348 (T@U) Int)
(declare-fun $generated@@349 (T@U T@U) T@U)
(declare-fun $generated@@364 (T@T) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@T) T@U)
(declare-fun $generated@@385 (T@T T@T) T@T)
(declare-fun $generated@@386 (T@T) T@T)
(declare-fun $generated@@387 (T@T) T@T)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@T) T@U)
(declare-fun $generated@@403 (T@T T@T) T@T)
(declare-fun $generated@@404 (T@T) T@T)
(declare-fun $generated@@405 (T@T) T@T)
(declare-fun $generated@@425 (T@T T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@468 (T@U T@U) Bool)
(declare-fun $generated@@481 (T@U Int) Bool)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@521 (T@U T@U) T@U)
(declare-fun $generated@@529 (T@U T@U) T@U)
(declare-fun $generated@@543 (T@T) T@U)
(declare-fun $generated@@567 () T@T)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@617 (T@U Int) T@U)
(declare-fun $generated@@629 (T@U) Int)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@649 (T@U) Int)
(declare-fun $generated@@664 (T@U) Int)
(declare-fun $generated@@682 (T@U) T@U)
(declare-fun $generated@@744 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Int) ) (! (= (type ($generated@@146 $generated@@150 $generated@@151 $generated@@152)) $generated@@79)
 :pattern ( ($generated@@146 $generated@@150 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@147 $generated@@153)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@153))
))) (= (type $generated@@149) $generated@@148)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Int) ) (!  (=> (and (= (type $generated@@154) $generated@@148) (= (type $generated@@155) $generated@@79)) (= ($generated@@146 $generated@@154 $generated@@155 $generated@@156) ($generated@@146 $generated@@149 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@146 ($generated@@147 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@72)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@79) (= (type $generated@@161) $generated@@79)) (= ($generated@@157 ($generated@@77 $generated@@159 $generated@@160 $generated@@161)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@164) $generated@@79) (= (type $generated@@165) $generated@@79)) (= ($generated@@162 ($generated@@77 $generated@@163 $generated@@164 $generated@@165)) $generated@@163))
 :pattern ( ($generated@@77 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@79)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 Int) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@79) (= (type $generated@@170) $generated@@79)) (= ($generated@@166 ($generated@@77 $generated@@168 $generated@@169 $generated@@170)) $generated@@169))
 :pattern ( ($generated@@77 $generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@171 $generated@@172)) $generated@@79)
 :pattern ( ($generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 Int) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (= (type $generated@@174) $generated@@79) (= (type $generated@@175) $generated@@79)) (= ($generated@@171 ($generated@@77 $generated@@173 $generated@@174 $generated@@175)) $generated@@175))
 :pattern ( ($generated@@77 $generated@@173 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@76 $generated@@176 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@176 ($generated@@89 0)))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@148) (= (type $generated@@181) $generated@@79)) (or ($generated@@179 $generated@@181) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@181 $generated@@78)))) true)
 :pattern ( ($generated@@178 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@184 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@68) (= (type $generated@@187) $generated@@68)) (= (type $generated@@188) $generated@@79)) ($generated@@76 $generated@@188 ($generated@@183 $generated@@186 $generated@@187))) ($generated@@182 $generated@@188))
 :pattern ( ($generated@@182 $generated@@188) ($generated@@76 $generated@@188 ($generated@@183 $generated@@186 $generated@@187)))
)))
(assert  (and (and (= ($generated@@1 $generated@@192) 16) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@190 $generated@@193))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@79) (= (type $generated@@196) $generated@@79)) true) (= ($generated@@189 $generated@@195 $generated@@196)  (and (= ($generated@@190 $generated@@195) ($generated@@190 $generated@@196)) (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)))))
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
)))
(assert (= (type $generated@@197) $generated@@79))
(assert (= ($generated@@157 $generated@@197) $generated@@63))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@68)
 :pattern ( ($generated@@198 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (= (type $generated@@201) ($generated@@90 $generated@@192 $generated@@2)) (= (type $generated@@202) $generated@@68)) ($generated@@76 $generated@@201 ($generated@@198 $generated@@202))) ($generated@@199 $generated@@201))
 :pattern ( ($generated@@76 $generated@@201 ($generated@@198 $generated@@202)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@205 $generated@@209 $generated@@210)) 17)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@206 ($generated@@205 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@205 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@207 ($generated@@205 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@205 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@203 $generated@@215 $generated@@216 $generated@@217)) $generated@@218))
 :pattern ( ($generated@@203 $generated@@215 $generated@@216 $generated@@217))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 (type $generated@@222)))
(let (($generated@@224 (type $generated@@220)))
(= (type ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@205 $generated@@224 $generated@@223))))
 :pattern ( ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@207 (type $generated@@225))))
 (=> (= (type $generated@@228) $generated@@229) (= ($generated@@203 ($generated@@208 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@226 $generated@@227) $generated@@228)))
 :weight 0
))) (and (and (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@203 ($generated@@208 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@203 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@203 ($generated@@208 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@203 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or true (= ($generated@@203 ($generated@@208 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@203 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
)))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@205 $generated@@91 $generated@@4))
 :pattern ( ($generated@@204 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@71 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@91) (= (type $generated@@253) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@254) ($generated@@70 $generated@@4))) (= (type $generated@@256) $generated@@91)) (= (type $generated@@257) ($generated@@70 $generated@@258))) (= ($generated@@0 ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@203 ($generated@@204 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@259 $generated@@263)) $generated@@148)
 :pattern ( ($generated@@259 $generated@@263))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@148) (= (type $generated@@265) $generated@@79)) (or ($generated@@179 $generated@@265) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@265 $generated@@78)))) (and (=> (not ($generated@@260 $generated@@265)) (let (($generated@@266 ($generated@@171 $generated@@265)))
(let (($generated@@267 ($generated@@166 $generated@@265)))
(let (($generated@@268 ($generated@@162 $generated@@265)))
 (and ($generated@@179 $generated@@267) (=> ($generated@@178 $generated@@264 $generated@@267) (and ($generated@@179 $generated@@266) (=> ($generated@@178 $generated@@264 $generated@@266) (and ($generated@@261 $generated@@267) (=> (or ($generated@@262 $generated@@267 $generated@@197) (<= $generated@@268 ($generated@@162 $generated@@267))) ($generated@@261 $generated@@266))))))))))) (= ($generated@@178 ($generated@@259 $generated@@264) $generated@@265) (ite ($generated@@260 $generated@@265) true (let (($generated@@269 ($generated@@171 $generated@@265)))
(let (($generated@@270 ($generated@@166 $generated@@265)))
(let (($generated@@271 ($generated@@162 $generated@@265)))
 (and (and (and ($generated@@178 $generated@@264 $generated@@270) ($generated@@178 $generated@@264 $generated@@269)) (or ($generated@@262 $generated@@270 $generated@@197) (<= $generated@@271 ($generated@@162 $generated@@270)))) (or ($generated@@262 $generated@@269 $generated@@197) (<= $generated@@271 ($generated@@162 $generated@@269)))))))))))
 :pattern ( ($generated@@178 ($generated@@259 $generated@@264) $generated@@265))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@79)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@192)) (= (type $generated@@279) $generated@@192)) (= ($generated@@76 ($generated@@272 $generated@@278 $generated@@279) ($generated@@183 $generated@@276 $generated@@277))  (and ($generated@@273 $generated@@278 $generated@@276) ($generated@@273 $generated@@279 $generated@@277))))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278 $generated@@279) ($generated@@183 $generated@@276 $generated@@277)))
)))
(assert ($generated@@76 $generated@@197 $generated@@78))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@280 $generated@@281)) ($generated@@88 $generated@@197 $generated@@78 $generated@@281))
 :pattern ( ($generated@@88 $generated@@197 $generated@@78 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@93 (type $generated@@283))))
(= (type ($generated@@282 $generated@@283 $generated@@284)) ($generated@@90 $generated@@285 $generated@@2)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
 (=> (and (= (type $generated@@286) ($generated@@90 $generated@@289 $generated@@2)) (= (type $generated@@287) ($generated@@90 $generated@@289 $generated@@2))) (= ($generated ($generated@@95 ($generated@@282 $generated@@286 $generated@@287) $generated@@288)) (+ ($generated ($generated@@95 $generated@@286 $generated@@288)) ($generated ($generated@@95 $generated@@287 $generated@@288))))))
 :pattern ( ($generated@@95 ($generated@@282 $generated@@286 $generated@@287) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@79) (= (type $generated@@291) $generated@@79)) (= ($generated@@189 $generated@@290 $generated@@291) (= $generated@@290 $generated@@291)))
 :pattern ( ($generated@@189 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@79) (= (type $generated@@293) $generated@@79)) (= ($generated@@262 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@262 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@68)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@90 $generated@@192 $generated@@4)) (= (type $generated@@297) $generated@@68)) (= ($generated@@76 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@192) ($generated@@0 ($generated@@95 $generated@@296 $generated@@298))) ($generated@@273 $generated@@298 $generated@@297))
 :pattern ( ($generated@@95 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@76 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@68)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) ($generated@@90 $generated@@192 $generated@@4)) (= (type $generated@@302) $generated@@68)) (= ($generated@@76 $generated@@301 ($generated@@299 $generated@@302)) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@192) ($generated@@0 ($generated@@95 $generated@@301 $generated@@303))) ($generated@@273 $generated@@303 $generated@@302))
 :pattern ( ($generated@@95 $generated@@301 $generated@@303))
))))
 :pattern ( ($generated@@76 $generated@@301 ($generated@@299 $generated@@302)))
)))
(assert (forall (($generated@@305 Int) ) (! (= ($generated@@304 $generated@@305) $generated@@305)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 (type $generated@@307)))
(= (type ($generated@@306 $generated@@307)) $generated@@308))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= ($generated@@306 $generated@@309) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@79) (= (type $generated@@311) $generated@@79)) (and ($generated@@260 $generated@@310) ($generated@@260 $generated@@311))) (= ($generated@@262 $generated@@310 $generated@@311) true))
 :pattern ( ($generated@@262 $generated@@310 $generated@@311) ($generated@@260 $generated@@310))
 :pattern ( ($generated@@262 $generated@@310 $generated@@311) ($generated@@260 $generated@@311))
)))
(assert (forall (($generated@@312 Int) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@313) $generated@@79) (= (type $generated@@314) $generated@@79)) (= (type $generated@@315) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@280 $generated@@315)) (= ($generated@@88 ($generated@@77 $generated@@312 $generated@@313 $generated@@314) $generated@@78 $generated@@315)  (and (and ($generated@@88 ($generated@@8 $generated@@312) $generated@@46 $generated@@315) ($generated@@88 $generated@@313 $generated@@78 $generated@@315)) ($generated@@88 $generated@@314 $generated@@78 $generated@@315))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@312 $generated@@313 $generated@@314) $generated@@78 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@317) $generated@@68) (= (type $generated@@318) $generated@@68)) (= (type $generated@@319) $generated@@192)) (= (type $generated@@320) $generated@@192)) (= (type $generated@@321) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@280 $generated@@321)) (= ($generated@@88 ($generated@@272 $generated@@319 $generated@@320) ($generated@@183 $generated@@317 $generated@@318) $generated@@321)  (and ($generated@@316 $generated@@319 $generated@@317 $generated@@321) ($generated@@316 $generated@@320 $generated@@318 $generated@@321))))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@319 $generated@@320) ($generated@@183 $generated@@317 $generated@@318) $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (= (type ($generated@@322 $generated@@324 $generated@@325)) ($generated@@90 $generated@@192 $generated@@2))
 :pattern ( ($generated@@322 $generated@@324 $generated@@325))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (and (= (type $generated@@326) $generated@@148) (= (type $generated@@327) $generated@@79)) (or ($generated@@323 $generated@@327) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@327 $generated@@78)))) ($generated@@76 ($generated@@322 $generated@@326 $generated@@327) ($generated@@198 $generated@@46)))
 :pattern ( ($generated@@322 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@79) (= ($generated@@182 $generated@@328) (= ($generated@@157 $generated@@328) $generated@@61)))
 :pattern ( ($generated@@182 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@79) (= ($generated@@260 $generated@@329) (= ($generated@@157 $generated@@329) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@79) (= ($generated@@330 $generated@@331) (= ($generated@@157 $generated@@331) $generated@@65)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@79) ($generated@@330 $generated@@332)) (exists (($generated@@333 Int) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (and (and (= (type $generated@@334) $generated@@79) (= (type $generated@@335) $generated@@79)) (= $generated@@332 ($generated@@77 $generated@@333 $generated@@334 $generated@@335)))
 :no-pattern (type $generated@@334)
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
)))
 :pattern ( ($generated@@330 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@79) ($generated@@182 $generated@@336)) (exists (($generated@@337 T@U) ($generated@@338 T@U) ) (!  (and (and (= (type $generated@@337) $generated@@192) (= (type $generated@@338) $generated@@192)) (= $generated@@336 ($generated@@272 $generated@@337 $generated@@338)))
 :no-pattern (type $generated@@337)
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
)))
 :pattern ( ($generated@@182 $generated@@336))
)))
(assert  (and (and (forall (($generated@@343 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@343)) 18)) (forall (($generated@@344 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@341 $generated@@344))
))) (forall (($generated@@345 T@T) ) (! (= (type ($generated@@339 $generated@@345)) ($generated@@341 $generated@@345))
 :pattern ( ($generated@@339 $generated@@345))
))))
(assert (forall (($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@346)) 0)
 :pattern ( ($generated@@339 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@79) ($generated@@260 $generated@@347)) (= $generated@@347 $generated@@197))
 :pattern ( ($generated@@260 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= (type ($generated@@349 $generated@@350 $generated@@351)) ($generated@@90 $generated@@352 $generated@@2)))
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (= (type $generated@@353) ($generated@@90 $generated@@355 $generated@@2)) (= ($generated@@348 ($generated@@349 $generated@@353 $generated@@354)) (+ ($generated@@348 $generated@@353) 1))))
 :pattern ( ($generated@@348 ($generated@@349 $generated@@353 $generated@@354)))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@356) $generated@@148) (= (type $generated@@357) $generated@@79)) (or ($generated@@179 ($generated@@306 $generated@@357)) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@357 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@306 ($generated@@11 ($generated@@260 ($generated@@306 $generated@@357)))))) (let (($generated@@358 ($generated@@306 ($generated@@171 ($generated@@306 $generated@@357)))))
(let (($generated@@359 ($generated@@306 ($generated@@166 ($generated@@306 $generated@@357)))))
(let (($generated@@360 ($generated@@304 ($generated@@162 ($generated@@306 $generated@@357)))))
 (and ($generated@@179 $generated@@359) (=> ($generated@@178 ($generated@@259 $generated@@356) $generated@@359) (and ($generated@@179 $generated@@358) (=> ($generated@@178 ($generated@@259 $generated@@356) $generated@@358) (and ($generated@@261 $generated@@359) (=> (or ($generated@@262 $generated@@359 $generated@@197) (<= $generated@@360 ($generated@@162 $generated@@359))) ($generated@@261 $generated@@358))))))))))) (= ($generated@@178 ($generated@@259 $generated@@356) ($generated@@306 $generated@@357)) (ite ($generated@@260 ($generated@@306 $generated@@357)) true (let (($generated@@361 ($generated@@306 ($generated@@171 ($generated@@306 $generated@@357)))))
(let (($generated@@362 ($generated@@306 ($generated@@166 ($generated@@306 $generated@@357)))))
(let (($generated@@363 ($generated@@304 ($generated@@162 ($generated@@306 $generated@@357)))))
 (and (and (and ($generated@@178 ($generated@@259 $generated@@356) $generated@@362) ($generated@@178 ($generated@@259 $generated@@356) $generated@@361)) (or ($generated@@262 $generated@@362 $generated@@197) (<= $generated@@363 ($generated@@304 ($generated@@162 $generated@@362))))) (or ($generated@@262 $generated@@361 $generated@@197) (<= $generated@@363 ($generated@@304 ($generated@@162 $generated@@361))))))))))))
 :weight 3
 :pattern ( ($generated@@178 ($generated@@259 $generated@@356) ($generated@@306 $generated@@357)))
))))
(assert  (and (forall (($generated@@366 T@T) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@90 $generated@@366 $generated@@2))
 :pattern ( ($generated@@364 $generated@@366))
)) (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) $generated@@192)
 :pattern ( ($generated@@365 $generated@@367))
))))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@368) $generated@@148) (= (type $generated@@369) $generated@@79)) (or ($generated@@323 ($generated@@306 $generated@@369)) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@369 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@306 ($generated@@11 ($generated@@260 ($generated@@306 $generated@@369)))))) (let (($generated@@370 ($generated@@306 ($generated@@171 ($generated@@306 $generated@@369)))))
(let (($generated@@371 ($generated@@306 ($generated@@166 ($generated@@306 $generated@@369)))))
 (and ($generated@@323 $generated@@371) ($generated@@323 $generated@@370))))) (= ($generated@@322 ($generated@@259 $generated@@368) ($generated@@306 $generated@@369)) (ite ($generated@@260 ($generated@@306 $generated@@369)) ($generated@@364 $generated@@192) (let (($generated@@372 ($generated@@306 ($generated@@171 ($generated@@306 $generated@@369)))))
(let (($generated@@373 ($generated@@306 ($generated@@166 ($generated@@306 $generated@@369)))))
(let (($generated@@374 ($generated@@304 ($generated@@162 ($generated@@306 $generated@@369)))))
($generated@@282 ($generated@@282 ($generated@@349 ($generated@@364 $generated@@192) ($generated@@365 ($generated@@8 $generated@@374))) ($generated@@322 ($generated@@259 $generated@@368) $generated@@373)) ($generated@@322 ($generated@@259 $generated@@368) $generated@@372)))))))))
 :weight 3
 :pattern ( ($generated@@322 ($generated@@259 $generated@@368) ($generated@@306 $generated@@369)))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@68) (= (type $generated@@377) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@316 ($generated@@365 $generated@@375) $generated@@376 $generated@@377) ($generated@@88 $generated@@375 $generated@@376 $generated@@377)))
 :pattern ( ($generated@@316 ($generated@@365 $generated@@375) $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@378) $generated@@79) (= (type $generated@@379) $generated@@79)) (and ($generated@@330 $generated@@378) ($generated@@330 $generated@@379))) (= ($generated@@262 $generated@@378 $generated@@379)  (and (and (= ($generated@@162 $generated@@378) ($generated@@162 $generated@@379)) ($generated@@262 ($generated@@166 $generated@@378) ($generated@@166 $generated@@379))) ($generated@@262 ($generated@@171 $generated@@378) ($generated@@171 $generated@@379)))))
 :pattern ( ($generated@@262 $generated@@378 $generated@@379) ($generated@@330 $generated@@378))
 :pattern ( ($generated@@262 $generated@@378 $generated@@379) ($generated@@330 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@93 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@90 $generated@@381 $generated@@2)) (and (= (= ($generated@@348 $generated@@380) 0) (= $generated@@380 ($generated@@364 $generated@@381))) (=> (not (= ($generated@@348 $generated@@380) 0)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (< 0 ($generated ($generated@@95 $generated@@380 $generated@@382))))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@348 $generated@@380))
)))
(assert  (and (and (and (and (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (= ($generated@@1 ($generated@@385 $generated@@388 $generated@@389)) 19)) (forall (($generated@@390 T@T) ($generated@@391 T@T) ) (! (= ($generated@@386 ($generated@@385 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@385 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= ($generated@@387 ($generated@@385 $generated@@392 $generated@@393)) $generated@@393)
 :pattern ( ($generated@@385 $generated@@392 $generated@@393))
))) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@386 (type $generated@@394))))
(= (type ($generated@@383 $generated@@394)) ($generated@@90 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@394))
))) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= (type ($generated@@384 $generated@@396 $generated@@397)) ($generated@@385 $generated@@396 $generated@@397))
 :pattern ( ($generated@@384 $generated@@396 $generated@@397))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@T) ) (! (let (($generated@@400 (type $generated@@398)))
 (not ($generated@@0 ($generated@@95 ($generated@@383 ($generated@@384 $generated@@400 $generated@@399)) $generated@@398))))
 :pattern ( (let (($generated@@400 (type $generated@@398)))
($generated@@95 ($generated@@383 ($generated@@384 $generated@@400 $generated@@399)) $generated@@398)))
)))
(assert  (and (and (and (and (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (= ($generated@@1 ($generated@@403 $generated@@406 $generated@@407)) 20)) (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (! (= ($generated@@404 ($generated@@403 $generated@@408 $generated@@409)) $generated@@408)
 :pattern ( ($generated@@403 $generated@@408 $generated@@409))
))) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= ($generated@@405 ($generated@@403 $generated@@410 $generated@@411)) $generated@@411)
 :pattern ( ($generated@@403 $generated@@410 $generated@@411))
))) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@404 (type $generated@@412))))
(= (type ($generated@@401 $generated@@412)) ($generated@@90 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@412))
))) (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (! (= (type ($generated@@402 $generated@@414 $generated@@415)) ($generated@@403 $generated@@414 $generated@@415))
 :pattern ( ($generated@@402 $generated@@414 $generated@@415))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@T) ) (! (let (($generated@@418 (type $generated@@416)))
 (not ($generated@@0 ($generated@@95 ($generated@@401 ($generated@@402 $generated@@418 $generated@@417)) $generated@@416))))
 :pattern ( (let (($generated@@418 (type $generated@@416)))
($generated@@95 ($generated@@401 ($generated@@402 $generated@@418 $generated@@417)) $generated@@416)))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@93 (type $generated@@419))))
 (=> (and (= (type $generated@@419) ($generated@@90 $generated@@421 $generated@@2)) (= (type $generated@@420) ($generated@@90 $generated@@421 $generated@@2))) (= ($generated@@348 ($generated@@282 $generated@@419 $generated@@420)) (+ ($generated@@348 $generated@@419) ($generated@@348 $generated@@420)))))
 :pattern ( ($generated@@348 ($generated@@282 $generated@@419 $generated@@420)))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@93 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@90 $generated@@423 $generated@@2)) (= ($generated@@199 $generated@@422) (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@423) (and (<= 0 ($generated ($generated@@95 $generated@@422 $generated@@424))) (<= ($generated ($generated@@95 $generated@@422 $generated@@424)) ($generated@@348 $generated@@422))))
 :pattern ( ($generated@@95 $generated@@422 $generated@@424))
)))))
 :pattern ( ($generated@@199 $generated@@422))
)))
(assert (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@192) ($generated@@273 $generated@@428 $generated@@78)) (and (= ($generated@@365 ($generated@@425 $generated@@79 $generated@@428)) $generated@@428) ($generated@@76 ($generated@@425 $generated@@79 $generated@@428) $generated@@78)))
 :pattern ( ($generated@@273 $generated@@428 $generated@@78))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
 (=> (= (type $generated@@429) ($generated@@90 $generated@@431 $generated@@2)) (= ($generated ($generated@@95 ($generated@@349 $generated@@429 $generated@@430) $generated@@430)) (+ ($generated ($generated@@95 $generated@@429 $generated@@430)) 1))))
 :pattern ( ($generated@@349 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@433)))
 (=> (and (and (= (type $generated@@432) ($generated@@90 $generated@@435 $generated@@2)) (= (type $generated@@434) $generated@@435)) (< 0 ($generated ($generated@@95 $generated@@432 $generated@@434)))) (< 0 ($generated ($generated@@95 ($generated@@349 $generated@@432 $generated@@433) $generated@@434)))))
 :pattern ( ($generated@@349 $generated@@432 $generated@@433) ($generated@@95 $generated@@432 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@387 (type $generated@@436))))
(let (($generated@@438 ($generated@@386 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@385 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@384 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) ($generated@@0 ($generated@@95 ($generated@@383 $generated@@436) $generated@@439)))
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@387 (type $generated@@441))))
(= (type ($generated@@440 $generated@@441)) ($generated@@90 $generated@@442 $generated@@4)))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@387 (type $generated@@443))))
(let (($generated@@445 ($generated@@386 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@385 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@384 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@444) ($generated@@0 ($generated@@95 ($generated@@440 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@440 $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@405 (type $generated@@447))))
(let (($generated@@449 ($generated@@404 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@403 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@402 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@449) ($generated@@0 ($generated@@95 ($generated@@401 $generated@@447) $generated@@450)))
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@401 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@405 (type $generated@@452))))
(= (type ($generated@@451 $generated@@452)) ($generated@@90 $generated@@453 $generated@@4)))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@405 (type $generated@@454))))
(let (($generated@@456 ($generated@@404 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@403 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@402 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ) (!  (and (= (type $generated@@457) $generated@@455) ($generated@@0 ($generated@@95 ($generated@@451 $generated@@454) $generated@@457)))
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@451 $generated@@454))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ) (!  (=> (and (= (type $generated@@458) $generated@@148) (= (type $generated@@459) $generated@@79)) (= ($generated@@146 ($generated@@259 $generated@@458) $generated@@459 $generated@@460) ($generated@@146 $generated@@458 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@146 ($generated@@259 $generated@@458) $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@462)))
 (=> (and (= (type $generated@@461) ($generated@@90 $generated@@464 $generated@@2)) (= (type $generated@@463) $generated@@464)) (= (< 0 ($generated ($generated@@95 ($generated@@349 $generated@@461 $generated@@462) $generated@@463)))  (or (= $generated@@463 $generated@@462) (< 0 ($generated ($generated@@95 $generated@@461 $generated@@463)))))))
 :pattern ( ($generated@@95 ($generated@@349 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@90 $generated@@192 $generated@@2)) (= (type $generated@@466) $generated@@68)) (= ($generated@@76 $generated@@465 ($generated@@198 $generated@@466)) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@192) (< 0 ($generated ($generated@@95 $generated@@465 $generated@@467)))) ($generated@@273 $generated@@467 $generated@@466))
 :pattern ( ($generated@@95 $generated@@465 $generated@@467))
))))
 :pattern ( ($generated@@76 $generated@@465 ($generated@@198 $generated@@466)))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@93 (type $generated@@469))))
 (=> (and (= (type $generated@@469) ($generated@@90 $generated@@471 $generated@@2)) (= (type $generated@@470) ($generated@@90 $generated@@471 $generated@@2))) (= ($generated@@468 $generated@@469 $generated@@470) (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@471) (= ($generated ($generated@@95 $generated@@469 $generated@@472)) ($generated ($generated@@95 $generated@@470 $generated@@472))))
 :pattern ( ($generated@@95 $generated@@469 $generated@@472))
 :pattern ( ($generated@@95 $generated@@470 $generated@@472))
)))))
 :pattern ( ($generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@79) ($generated@@261 $generated@@473)) (or ($generated@@260 $generated@@473) ($generated@@330 $generated@@473)))
 :pattern ( ($generated@@261 $generated@@473))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@474) $generated@@148) (= (type $generated@@475) $generated@@79)) (or ($generated@@323 $generated@@475) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@475 $generated@@78)))) (and (=> (not ($generated@@260 $generated@@475)) (let (($generated@@476 ($generated@@171 $generated@@475)))
(let (($generated@@477 ($generated@@166 $generated@@475)))
 (and ($generated@@323 $generated@@477) ($generated@@323 $generated@@476))))) (= ($generated@@322 ($generated@@259 $generated@@474) $generated@@475) (ite ($generated@@260 $generated@@475) ($generated@@364 $generated@@192) (let (($generated@@478 ($generated@@171 $generated@@475)))
(let (($generated@@479 ($generated@@166 $generated@@475)))
(let (($generated@@480 ($generated@@162 $generated@@475)))
($generated@@282 ($generated@@282 ($generated@@349 ($generated@@364 $generated@@192) ($generated@@365 ($generated@@8 $generated@@480))) ($generated@@322 $generated@@474 $generated@@479)) ($generated@@322 $generated@@474 $generated@@478)))))))))
 :pattern ( ($generated@@322 ($generated@@259 $generated@@474) $generated@@475))
))))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 Int) ) (!  (=> (and (and (= (type $generated@@482) $generated@@148) (= (type $generated@@483) $generated@@79)) (or ($generated@@481 ($generated@@306 $generated@@483) ($generated@@304 $generated@@484)) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@483 $generated@@78)))) (and (and ($generated@@261 ($generated@@306 $generated@@483)) (=> (not ($generated@@262 $generated@@483 $generated@@197)) (and (=> ($generated@@0 ($generated@@306 ($generated@@11 (< $generated@@484 ($generated@@162 ($generated@@306 $generated@@483)))))) ($generated@@481 ($generated@@306 ($generated@@171 ($generated@@306 $generated@@483))) ($generated@@304 ($generated@@162 ($generated@@306 $generated@@483))))) (=> (not ($generated@@0 ($generated@@306 ($generated@@11 (< $generated@@484 ($generated@@162 ($generated@@306 $generated@@483))))))) ($generated@@481 ($generated@@306 ($generated@@171 ($generated@@306 $generated@@483))) ($generated@@304 $generated@@484)))))) (= ($generated@@146 ($generated@@259 $generated@@482) ($generated@@306 $generated@@483) ($generated@@304 $generated@@484)) (ite ($generated@@262 $generated@@483 $generated@@197) ($generated@@77 ($generated@@304 $generated@@484) ($generated@@306 $generated@@197) ($generated@@306 $generated@@197)) (ite (< $generated@@484 ($generated@@162 ($generated@@306 $generated@@483))) ($generated@@77 ($generated@@304 $generated@@484) ($generated@@306 ($generated@@146 ($generated@@259 $generated@@482) ($generated@@306 ($generated@@171 ($generated@@306 $generated@@483))) ($generated@@304 ($generated@@162 ($generated@@306 $generated@@483))))) ($generated@@306 ($generated@@166 ($generated@@306 $generated@@483)))) ($generated@@77 ($generated@@304 ($generated@@162 ($generated@@306 $generated@@483))) ($generated@@306 ($generated@@146 ($generated@@259 $generated@@482) ($generated@@306 ($generated@@171 ($generated@@306 $generated@@483))) ($generated@@304 $generated@@484))) ($generated@@306 ($generated@@166 ($generated@@306 $generated@@483)))))))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@259 $generated@@482) ($generated@@306 $generated@@483) ($generated@@304 $generated@@484)))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@90 $generated@@192 $generated@@4)) (= (type $generated@@486) $generated@@68)) (= (type $generated@@487) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@485 ($generated@@294 $generated@@486) $generated@@487) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@192) ($generated@@0 ($generated@@95 $generated@@485 $generated@@488))) ($generated@@316 $generated@@488 $generated@@486 $generated@@487))
 :pattern ( ($generated@@95 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@88 $generated@@485 ($generated@@294 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@90 $generated@@192 $generated@@4)) (= (type $generated@@490) $generated@@68)) (= (type $generated@@491) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@489 ($generated@@299 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@192) ($generated@@0 ($generated@@95 $generated@@489 $generated@@492))) ($generated@@316 $generated@@492 $generated@@490 $generated@@491))
 :pattern ( ($generated@@95 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@88 $generated@@489 ($generated@@299 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@493)))
(= ($generated ($generated@@95 ($generated@@364 $generated@@494) $generated@@493)) 0))
 :pattern ( (let (($generated@@494 (type $generated@@493)))
($generated@@95 ($generated@@364 $generated@@494) $generated@@493)))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) ($generated@@90 $generated@@192 $generated@@4))
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@387 (type $generated@@498))))
(let (($generated@@500 ($generated@@386 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498)) ($generated@@90 $generated@@500 $generated@@499))))
 :pattern ( ($generated@@496 $generated@@498))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) ($generated@@385 $generated@@192 $generated@@192)) (= (type $generated@@502) $generated@@192)) (= ($generated@@0 ($generated@@95 ($generated@@495 $generated@@501) $generated@@502))  (and ($generated@@0 ($generated@@95 ($generated@@383 $generated@@501) ($generated@@190 ($generated@@425 $generated@@79 $generated@@502)))) (= ($generated@@95 ($generated@@496 $generated@@501) ($generated@@190 ($generated@@425 $generated@@79 $generated@@502))) ($generated@@191 ($generated@@425 $generated@@79 $generated@@502))))))
 :pattern ( ($generated@@95 ($generated@@495 $generated@@501) $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) ($generated@@90 $generated@@192 $generated@@4))
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@405 (type $generated@@506))))
(let (($generated@@508 ($generated@@404 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506)) ($generated@@90 $generated@@508 $generated@@507))))
 :pattern ( ($generated@@504 $generated@@506))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) ($generated@@403 $generated@@192 $generated@@192)) (= (type $generated@@510) $generated@@192)) (= ($generated@@0 ($generated@@95 ($generated@@503 $generated@@509) $generated@@510))  (and ($generated@@0 ($generated@@95 ($generated@@401 $generated@@509) ($generated@@190 ($generated@@425 $generated@@79 $generated@@510)))) (= ($generated@@95 ($generated@@504 $generated@@509) ($generated@@190 ($generated@@425 $generated@@79 $generated@@510))) ($generated@@191 ($generated@@425 $generated@@79 $generated@@510))))))
 :pattern ( ($generated@@95 ($generated@@503 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(let (($generated@@514 ($generated@@386 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@385 $generated@@514 $generated@@513)) (= ($generated@@0 ($generated@@95 ($generated@@440 $generated@@511) $generated@@512)) (exists (($generated@@515 T@U) ) (!  (and (= (type $generated@@515) $generated@@514) (and ($generated@@0 ($generated@@95 ($generated@@383 $generated@@511) $generated@@515)) (= $generated@@512 ($generated@@95 ($generated@@496 $generated@@511) $generated@@515))))
 :pattern ( ($generated@@95 ($generated@@383 $generated@@511) $generated@@515))
 :pattern ( ($generated@@95 ($generated@@496 $generated@@511) $generated@@515))
))))))
 :pattern ( ($generated@@95 ($generated@@440 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(let (($generated@@519 ($generated@@404 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@403 $generated@@519 $generated@@518)) (= ($generated@@0 ($generated@@95 ($generated@@451 $generated@@516) $generated@@517)) (exists (($generated@@520 T@U) ) (!  (and (= (type $generated@@520) $generated@@519) (and ($generated@@0 ($generated@@95 ($generated@@401 $generated@@516) $generated@@520)) (= $generated@@517 ($generated@@95 ($generated@@504 $generated@@516) $generated@@520))))
 :pattern ( ($generated@@95 ($generated@@401 $generated@@516) $generated@@520))
 :pattern ( ($generated@@95 ($generated@@504 $generated@@516) $generated@@520))
))))))
 :pattern ( ($generated@@95 ($generated@@451 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) ($generated@@385 $generated@@192 $generated@@192)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@524 ($generated@@521 $generated@@525 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@192) ($generated@@0 ($generated@@95 ($generated@@383 $generated@@524) $generated@@528))) (and ($generated@@316 ($generated@@95 ($generated@@496 $generated@@524) $generated@@528) $generated@@526 $generated@@527) ($generated@@316 $generated@@528 $generated@@525 $generated@@527)))
 :pattern ( ($generated@@95 ($generated@@496 $generated@@524) $generated@@528))
 :pattern ( ($generated@@95 ($generated@@383 $generated@@524) $generated@@528))
))))
 :pattern ( ($generated@@88 $generated@@524 ($generated@@521 $generated@@525 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (! (= (type ($generated@@529 $generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) ($generated@@403 $generated@@192 $generated@@192)) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@532 ($generated@@529 $generated@@533 $generated@@534) $generated@@535) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@192) ($generated@@0 ($generated@@95 ($generated@@401 $generated@@532) $generated@@536))) (and ($generated@@316 ($generated@@95 ($generated@@504 $generated@@532) $generated@@536) $generated@@534 $generated@@535) ($generated@@316 $generated@@536 $generated@@533 $generated@@535)))
 :pattern ( ($generated@@95 ($generated@@504 $generated@@532) $generated@@536))
 :pattern ( ($generated@@95 ($generated@@401 $generated@@532) $generated@@536))
))))
 :pattern ( ($generated@@88 $generated@@532 ($generated@@529 $generated@@533 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@79)) (= ($generated@@178 $generated@@537 $generated@@538) ($generated@@178 $generated@@149 $generated@@538)))
 :pattern ( ($generated@@178 ($generated@@147 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@93 (type $generated@@539))))
 (=> (and (and (= (type $generated@@539) ($generated@@90 $generated@@541 $generated@@2)) (= (type $generated@@540) ($generated@@90 $generated@@541 $generated@@2))) ($generated@@468 $generated@@539 $generated@@540)) (= $generated@@539 $generated@@540)))
 :pattern ( ($generated@@468 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@79) ($generated@@76 $generated@@542 $generated@@78)) (or ($generated@@260 $generated@@542) ($generated@@330 $generated@@542)))
 :pattern ( ($generated@@330 $generated@@542) ($generated@@76 $generated@@542 $generated@@78))
 :pattern ( ($generated@@260 $generated@@542) ($generated@@76 $generated@@542 $generated@@78))
)))
(assert (forall (($generated@@544 T@T) ) (! (= (type ($generated@@543 $generated@@544)) ($generated@@90 $generated@@544 $generated@@4))
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@405 (type $generated@@545))))
(let (($generated@@547 ($generated@@404 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@403 $generated@@547 $generated@@546)) (= (= $generated@@545 ($generated@@402 $generated@@547 $generated@@546)) (= ($generated@@401 $generated@@545) ($generated@@543 $generated@@547))))))
 :pattern ( ($generated@@401 $generated@@545))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@405 (type $generated@@548))))
(let (($generated@@550 ($generated@@404 (type $generated@@548))))
 (=> (= (type $generated@@548) ($generated@@403 $generated@@550 $generated@@549)) (= (= $generated@@548 ($generated@@402 $generated@@550 $generated@@549)) (= ($generated@@451 $generated@@548) ($generated@@543 $generated@@549))))))
 :pattern ( ($generated@@451 $generated@@548))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@405 (type $generated@@551))))
(let (($generated@@553 ($generated@@404 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@403 $generated@@553 $generated@@552)) (= (= $generated@@551 ($generated@@402 $generated@@553 $generated@@552)) (= ($generated@@503 $generated@@551) ($generated@@543 $generated@@192))))))
 :pattern ( ($generated@@503 $generated@@551))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@387 (type $generated@@554))))
(let (($generated@@556 ($generated@@386 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@385 $generated@@556 $generated@@555)) (or (= $generated@@554 ($generated@@384 $generated@@556 $generated@@555)) (exists (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (and (and (= (type $generated@@557) $generated@@192) (= (type $generated@@558) $generated@@192)) ($generated@@0 ($generated@@95 ($generated@@495 $generated@@554) ($generated@@365 ($generated@@272 $generated@@557 $generated@@558)))))
 :no-pattern (type $generated@@557)
 :no-pattern (type $generated@@558)
 :no-pattern ($generated $generated@@557)
 :no-pattern ($generated@@0 $generated@@557)
 :no-pattern ($generated $generated@@558)
 :no-pattern ($generated@@0 $generated@@558)
))))))
 :pattern ( ($generated@@495 $generated@@554))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@405 (type $generated@@559))))
(let (($generated@@561 ($generated@@404 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@403 $generated@@561 $generated@@560)) (or (= $generated@@559 ($generated@@402 $generated@@561 $generated@@560)) (exists (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (and (and (= (type $generated@@562) $generated@@192) (= (type $generated@@563) $generated@@192)) ($generated@@0 ($generated@@95 ($generated@@503 $generated@@559) ($generated@@365 ($generated@@272 $generated@@562 $generated@@563)))))
 :no-pattern (type $generated@@562)
 :no-pattern (type $generated@@563)
 :no-pattern ($generated $generated@@562)
 :no-pattern ($generated@@0 $generated@@562)
 :no-pattern ($generated $generated@@563)
 :no-pattern ($generated@@0 $generated@@563)
))))))
 :pattern ( ($generated@@503 $generated@@559))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@192) ($generated@@273 $generated@@564 $generated@@46)) (and (= ($generated@@365 ($generated@@425 $generated@@2 $generated@@564)) $generated@@564) ($generated@@76 ($generated@@425 $generated@@2 $generated@@564) $generated@@46)))
 :pattern ( ($generated@@273 $generated@@564 $generated@@46))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@192) ($generated@@273 $generated@@565 $generated@@47)) (and (= ($generated@@365 ($generated@@425 $generated@@3 $generated@@565)) $generated@@565) ($generated@@76 ($generated@@425 $generated@@3 $generated@@565) $generated@@47)))
 :pattern ( ($generated@@273 $generated@@565 $generated@@47))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@192) ($generated@@273 $generated@@566 $generated@@44)) (and (= ($generated@@365 ($generated@@425 $generated@@4 $generated@@566)) $generated@@566) ($generated@@76 ($generated@@425 $generated@@4 $generated@@566) $generated@@44)))
 :pattern ( ($generated@@273 $generated@@566 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@567) 21))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@192) ($generated@@273 $generated@@568 $generated@@45)) (and (= ($generated@@365 ($generated@@425 $generated@@567 $generated@@568)) $generated@@568) ($generated@@76 ($generated@@425 $generated@@567 $generated@@568) $generated@@45)))
 :pattern ( ($generated@@273 $generated@@568 $generated@@45))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@148) (= (type $generated@@570) $generated@@79)) (= ($generated@@178 ($generated@@259 $generated@@569) $generated@@570) ($generated@@178 $generated@@569 $generated@@570)))
 :pattern ( ($generated@@178 ($generated@@259 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@273 ($generated@@365 $generated@@571) $generated@@572) ($generated@@76 $generated@@571 $generated@@572)))
 :pattern ( ($generated@@273 ($generated@@365 $generated@@571) $generated@@572))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (and (and (= (type $generated@@573) $generated@@148) (= (type $generated@@574) $generated@@79)) (or ($generated@@481 $generated@@574 $generated@@575) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@574 $generated@@78)))) ($generated@@76 ($generated@@146 $generated@@573 $generated@@574 $generated@@575) $generated@@78))
 :pattern ( ($generated@@146 $generated@@573 $generated@@574 $generated@@575))
))))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@93 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@90 $generated@@577 $generated@@2)) (<= 0 ($generated@@348 $generated@@576))))
 :pattern ( ($generated@@348 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@342 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@341 $generated@@579)) (<= 0 ($generated@@340 $generated@@578))))
 :pattern ( ($generated@@340 $generated@@578))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@68)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@68) (= (type $generated@@583) $generated@@68)) (= ($generated@@580 ($generated@@521 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@521 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@68)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@68) (= (type $generated@@587) $generated@@68)) (= ($generated@@584 ($generated@@521 $generated@@586 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@521 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@68) (= (type $generated@@589) $generated@@68)) (= ($generated@@86 ($generated@@521 $generated@@588 $generated@@589)) $generated@@58))
 :pattern ( ($generated@@521 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= ($generated@@590 ($generated@@529 $generated@@592 $generated@@593)) $generated@@592))
 :pattern ( ($generated@@529 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@68)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= ($generated@@594 ($generated@@529 $generated@@596 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@529 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@68) (= (type $generated@@599) $generated@@68)) (= ($generated@@86 ($generated@@529 $generated@@598 $generated@@599)) $generated@@59))
 :pattern ( ($generated@@529 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@192) (= (type $generated@@601) $generated@@192)) (= ($generated@@157 ($generated@@272 $generated@@600 $generated@@601)) $generated@@61))
 :pattern ( ($generated@@272 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@68)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@68)) (= ($generated@@602 ($generated@@183 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@183 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@68)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@68) (= (type $generated@@609) $generated@@68)) (= ($generated@@606 ($generated@@183 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@183 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@192) (= (type $generated@@611) $generated@@192)) (= ($generated@@190 ($generated@@272 $generated@@610 $generated@@611)) $generated@@610))
 :pattern ( ($generated@@272 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@192) (= (type $generated@@613) $generated@@192)) (= ($generated@@191 ($generated@@272 $generated@@612 $generated@@613)) $generated@@613))
 :pattern ( ($generated@@272 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@148) (= (type $generated@@615) $generated@@79)) (= ($generated@@322 $generated@@614 $generated@@615) ($generated@@322 $generated@@149 $generated@@615)))
 :pattern ( ($generated@@322 ($generated@@147 $generated@@614) $generated@@615))
)))
(assert  (and (forall (($generated@@618 T@U) ) (! (= (type ($generated@@616 $generated@@618)) $generated@@68)
 :pattern ( ($generated@@616 $generated@@618))
)) (forall (($generated@@619 T@U) ($generated@@620 Int) ) (! (let (($generated@@621 ($generated@@342 (type $generated@@619))))
(= (type ($generated@@617 $generated@@619 $generated@@620)) $generated@@621))
 :pattern ( ($generated@@617 $generated@@619 $generated@@620))
))))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@622) ($generated@@341 $generated@@192)) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@622 ($generated@@616 $generated@@623) $generated@@624) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@340 $generated@@622))) ($generated@@316 ($generated@@617 $generated@@622 $generated@@625) $generated@@623 $generated@@624))
 :pattern ( ($generated@@617 $generated@@622 $generated@@625))
))))
 :pattern ( ($generated@@88 $generated@@622 ($generated@@616 $generated@@623) $generated@@624))
)))
(assert (forall (($generated@@626 Int) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@79) (= (type $generated@@628) $generated@@79)) (= ($generated@@77 ($generated@@304 $generated@@626) ($generated@@306 $generated@@627) ($generated@@306 $generated@@628)) ($generated@@306 ($generated@@77 $generated@@626 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@77 ($generated@@304 $generated@@626) ($generated@@306 $generated@@627) ($generated@@306 $generated@@628)))
)))
(assert (forall (($generated@@630 Int) ) (! (= ($generated@@629 ($generated@@89 $generated@@630)) $generated@@630)
 :pattern ( ($generated@@89 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@68)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@68) (= ($generated@@631 ($generated@@294 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@294 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@68) (= ($generated@@86 ($generated@@294 $generated@@634)) $generated@@54))
 :pattern ( ($generated@@294 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@68)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@68) (= ($generated@@635 ($generated@@299 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@299 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@68) (= ($generated@@86 ($generated@@299 $generated@@638)) $generated@@55))
 :pattern ( ($generated@@299 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@68)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@68) (= ($generated@@639 ($generated@@198 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@198 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@68) (= ($generated@@86 ($generated@@198 $generated@@642)) $generated@@56))
 :pattern ( ($generated@@198 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@68)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@68) (= ($generated@@643 ($generated@@616 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@616 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@68) (= ($generated@@86 ($generated@@616 $generated@@646)) $generated@@57))
 :pattern ( ($generated@@616 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@647)))
(= ($generated@@425 $generated@@648 ($generated@@365 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@365 $generated@@647))
)))
(assert (forall (($generated@@650 Int) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@79) (= (type $generated@@652) $generated@@79)) (< ($generated@@649 $generated@@651) ($generated@@649 ($generated@@77 $generated@@650 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@77 $generated@@650 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 Int) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@79) (= (type $generated@@655) $generated@@79)) (< ($generated@@649 $generated@@655) ($generated@@649 ($generated@@77 $generated@@653 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@77 $generated@@653 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@656) ($generated@@385 $generated@@192 $generated@@192)) (= (type $generated@@657) $generated@@68)) (= (type $generated@@658) $generated@@68)) (= ($generated@@76 $generated@@656 ($generated@@521 $generated@@657 $generated@@658)) (forall (($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@192) ($generated@@0 ($generated@@95 ($generated@@383 $generated@@656) $generated@@659))) (and ($generated@@273 ($generated@@95 ($generated@@496 $generated@@656) $generated@@659) $generated@@658) ($generated@@273 $generated@@659 $generated@@657)))
 :pattern ( ($generated@@95 ($generated@@496 $generated@@656) $generated@@659))
 :pattern ( ($generated@@95 ($generated@@383 $generated@@656) $generated@@659))
))))
 :pattern ( ($generated@@76 $generated@@656 ($generated@@521 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@660) ($generated@@403 $generated@@192 $generated@@192)) (= (type $generated@@661) $generated@@68)) (= (type $generated@@662) $generated@@68)) (= ($generated@@76 $generated@@660 ($generated@@529 $generated@@661 $generated@@662)) (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@192) ($generated@@0 ($generated@@95 ($generated@@401 $generated@@660) $generated@@663))) (and ($generated@@273 ($generated@@95 ($generated@@504 $generated@@660) $generated@@663) $generated@@662) ($generated@@273 $generated@@663 $generated@@661)))
 :pattern ( ($generated@@95 ($generated@@504 $generated@@660) $generated@@663))
 :pattern ( ($generated@@95 ($generated@@401 $generated@@660) $generated@@663))
))))
 :pattern ( ($generated@@76 $generated@@660 ($generated@@529 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@192) (= (type $generated@@666) $generated@@192)) (< ($generated@@664 $generated@@665) ($generated@@649 ($generated@@272 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@272 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@192) (= (type $generated@@668) $generated@@192)) (< ($generated@@664 $generated@@668) ($generated@@649 ($generated@@272 $generated@@667 $generated@@668))))
 :pattern ( ($generated@@272 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@148) (= (type $generated@@670) $generated@@79)) (= ($generated@@322 ($generated@@259 $generated@@669) $generated@@670) ($generated@@322 $generated@@669 $generated@@670)))
 :pattern ( ($generated@@322 ($generated@@259 $generated@@669) $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@192) (= (type $generated@@672) $generated@@68)) (= (type $generated@@673) $generated@@68)) ($generated@@273 $generated@@671 ($generated@@521 $generated@@672 $generated@@673))) (and (= ($generated@@365 ($generated@@425 ($generated@@385 $generated@@192 $generated@@192) $generated@@671)) $generated@@671) ($generated@@76 ($generated@@425 ($generated@@385 $generated@@192 $generated@@192) $generated@@671) ($generated@@521 $generated@@672 $generated@@673))))
 :pattern ( ($generated@@273 $generated@@671 ($generated@@521 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) $generated@@192) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@273 $generated@@674 ($generated@@529 $generated@@675 $generated@@676))) (and (= ($generated@@365 ($generated@@425 ($generated@@403 $generated@@192 $generated@@192) $generated@@674)) $generated@@674) ($generated@@76 ($generated@@425 ($generated@@403 $generated@@192 $generated@@192) $generated@@674) ($generated@@529 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@273 $generated@@674 ($generated@@529 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@68) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@192)) ($generated@@273 $generated@@679 ($generated@@183 $generated@@677 $generated@@678))) (and (= ($generated@@365 ($generated@@425 $generated@@79 $generated@@679)) $generated@@679) ($generated@@76 ($generated@@425 $generated@@79 $generated@@679) ($generated@@183 $generated@@677 $generated@@678))))
 :pattern ( ($generated@@273 $generated@@679 ($generated@@183 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ) (! (let (($generated@@681 (type $generated@@680)))
 (not ($generated@@0 ($generated@@95 ($generated@@543 $generated@@681) $generated@@680))))
 :pattern ( (let (($generated@@681 (type $generated@@680)))
($generated@@95 ($generated@@543 $generated@@681) $generated@@680)))
)))
(assert (forall (($generated@@683 T@U) ) (! (= (type ($generated@@682 $generated@@683)) $generated@@73)
 :pattern ( ($generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@68) (= (type $generated@@685) $generated@@68)) (and (= ($generated@@86 ($generated@@183 $generated@@684 $generated@@685)) $generated@@62) (= ($generated@@682 ($generated@@183 $generated@@684 $generated@@685)) $generated@@66)))
 :pattern ( ($generated@@183 $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@79) (= (type $generated@@687) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@687) (and ($generated@@330 $generated@@686) ($generated@@88 $generated@@686 $generated@@78 $generated@@687)))) ($generated@@88 ($generated@@8 ($generated@@162 $generated@@686)) $generated@@46 $generated@@687))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@162 $generated@@686)) $generated@@46 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@79) (= ($generated@@664 ($generated@@365 $generated@@688)) ($generated@@649 $generated@@688)))
 :pattern ( ($generated@@664 ($generated@@365 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@192) ($generated@@273 $generated@@689 ($generated@@89 0))) (and (= ($generated@@365 ($generated@@425 $generated@@2 $generated@@689)) $generated@@689) ($generated@@76 ($generated@@425 ($generated@@90 $generated@@192 $generated@@4) $generated@@689) ($generated@@89 0))))
 :pattern ( ($generated@@273 $generated@@689 ($generated@@89 0)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@690) $generated@@192) (= (type $generated@@691) $generated@@68)) ($generated@@273 $generated@@690 ($generated@@294 $generated@@691))) (and (= ($generated@@365 ($generated@@425 ($generated@@90 $generated@@192 $generated@@4) $generated@@690)) $generated@@690) ($generated@@76 ($generated@@425 ($generated@@90 $generated@@192 $generated@@4) $generated@@690) ($generated@@294 $generated@@691))))
 :pattern ( ($generated@@273 $generated@@690 ($generated@@294 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@192) (= (type $generated@@693) $generated@@68)) ($generated@@273 $generated@@692 ($generated@@299 $generated@@693))) (and (= ($generated@@365 ($generated@@425 ($generated@@90 $generated@@192 $generated@@4) $generated@@692)) $generated@@692) ($generated@@76 ($generated@@425 ($generated@@90 $generated@@192 $generated@@4) $generated@@692) ($generated@@299 $generated@@693))))
 :pattern ( ($generated@@273 $generated@@692 ($generated@@299 $generated@@693)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@192) (= (type $generated@@695) $generated@@68)) ($generated@@273 $generated@@694 ($generated@@198 $generated@@695))) (and (= ($generated@@365 ($generated@@425 ($generated@@90 $generated@@192 $generated@@2) $generated@@694)) $generated@@694) ($generated@@76 ($generated@@425 ($generated@@90 $generated@@192 $generated@@2) $generated@@694) ($generated@@198 $generated@@695))))
 :pattern ( ($generated@@273 $generated@@694 ($generated@@198 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@192) (= (type $generated@@697) $generated@@68)) ($generated@@273 $generated@@696 ($generated@@616 $generated@@697))) (and (= ($generated@@365 ($generated@@425 ($generated@@341 $generated@@192) $generated@@696)) $generated@@696) ($generated@@76 ($generated@@425 ($generated@@341 $generated@@192) $generated@@696) ($generated@@616 $generated@@697))))
 :pattern ( ($generated@@273 $generated@@696 ($generated@@616 $generated@@697)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@682 $generated@@78) $generated@@67))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@90 $generated@@192 $generated@@2)) (= (type $generated@@699) $generated@@68)) (= (type $generated@@700) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@698 ($generated@@198 $generated@@699) $generated@@700) (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@192) (< 0 ($generated ($generated@@95 $generated@@698 $generated@@701)))) ($generated@@316 $generated@@701 $generated@@699 $generated@@700))
 :pattern ( ($generated@@95 $generated@@698 $generated@@701))
))))
 :pattern ( ($generated@@88 $generated@@698 ($generated@@198 $generated@@699) $generated@@700))
)))
(assert (= $generated@@197 ($generated@@306 $generated@@197)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) $generated@@79) (= (type $generated@@703) $generated@@68)) (= (type $generated@@704) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@704) (and ($generated@@182 $generated@@702) (exists (($generated@@705 T@U) ) (!  (and (= (type $generated@@705) $generated@@68) ($generated@@88 $generated@@702 ($generated@@183 $generated@@703 $generated@@705) $generated@@704))
 :pattern ( ($generated@@88 $generated@@702 ($generated@@183 $generated@@703 $generated@@705) $generated@@704))
))))) ($generated@@316 ($generated@@190 $generated@@702) $generated@@703 $generated@@704))
 :pattern ( ($generated@@316 ($generated@@190 $generated@@702) $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) $generated@@79) (= (type $generated@@707) $generated@@68)) (= (type $generated@@708) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@708) (and ($generated@@182 $generated@@706) (exists (($generated@@709 T@U) ) (!  (and (= (type $generated@@709) $generated@@68) ($generated@@88 $generated@@706 ($generated@@183 $generated@@709 $generated@@707) $generated@@708))
 :pattern ( ($generated@@88 $generated@@706 ($generated@@183 $generated@@709 $generated@@707) $generated@@708))
))))) ($generated@@316 ($generated@@191 $generated@@706) $generated@@707 $generated@@708))
 :pattern ( ($generated@@316 ($generated@@191 $generated@@706) $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (! (let (($generated@@713 (type $generated@@711)))
 (=> (and (and (= (type $generated@@710) ($generated@@90 $generated@@713 $generated@@2)) (= (type $generated@@712) $generated@@713)) (not (= $generated@@711 $generated@@712))) (= ($generated ($generated@@95 $generated@@710 $generated@@712)) ($generated ($generated@@95 ($generated@@349 $generated@@710 $generated@@711) $generated@@712)))))
 :pattern ( ($generated@@349 $generated@@710 $generated@@711) ($generated@@95 $generated@@710 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) $generated@@79) (= (type $generated@@715) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@715) (and ($generated@@330 $generated@@714) ($generated@@88 $generated@@714 $generated@@78 $generated@@715)))) ($generated@@88 ($generated@@166 $generated@@714) $generated@@78 $generated@@715))
 :pattern ( ($generated@@88 ($generated@@166 $generated@@714) $generated@@78 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@716) $generated@@79) (= (type $generated@@717) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@717) (and ($generated@@330 $generated@@716) ($generated@@88 $generated@@716 $generated@@78 $generated@@717)))) ($generated@@88 ($generated@@171 $generated@@716) $generated@@78 $generated@@717))
 :pattern ( ($generated@@88 ($generated@@171 $generated@@716) $generated@@78 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@192) (= (type $generated@@719) $generated@@192)) (= ($generated@@272 ($generated@@306 $generated@@718) ($generated@@306 $generated@@719)) ($generated@@306 ($generated@@272 $generated@@718 $generated@@719))))
 :pattern ( ($generated@@272 ($generated@@306 $generated@@718) ($generated@@306 $generated@@719)))
)))
(assert (forall (($generated@@720 Int) ) (! (= ($generated@@365 ($generated@@8 ($generated@@304 $generated@@720))) ($generated@@306 ($generated@@365 ($generated@@8 $generated@@720))))
 :pattern ( ($generated@@365 ($generated@@8 ($generated@@304 $generated@@720))))
)))
(assert (forall (($generated@@721 T@U) ) (! (= ($generated@@365 ($generated@@306 $generated@@721)) ($generated@@306 ($generated@@365 $generated@@721)))
 :pattern ( ($generated@@365 ($generated@@306 $generated@@721)))
)))
(assert  (=> (<= 1 $generated@@177) (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 Int) ) (!  (=> (and (and (= (type $generated@@722) $generated@@148) (= (type $generated@@723) $generated@@79)) (or ($generated@@481 $generated@@723 $generated@@724) (and (not (= 1 $generated@@177)) ($generated@@76 $generated@@723 $generated@@78)))) (and (and ($generated@@261 $generated@@723) (=> (not ($generated@@262 $generated@@723 $generated@@197)) (and (=> (< $generated@@724 ($generated@@162 $generated@@723)) ($generated@@481 ($generated@@171 $generated@@723) ($generated@@162 $generated@@723))) (=> (<= ($generated@@162 $generated@@723) $generated@@724) ($generated@@481 ($generated@@171 $generated@@723) $generated@@724))))) (= ($generated@@146 ($generated@@259 $generated@@722) $generated@@723 $generated@@724) (ite ($generated@@262 $generated@@723 $generated@@197) ($generated@@77 $generated@@724 ($generated@@306 $generated@@197) ($generated@@306 $generated@@197)) (ite (< $generated@@724 ($generated@@162 $generated@@723)) ($generated@@77 $generated@@724 ($generated@@146 $generated@@722 ($generated@@171 $generated@@723) ($generated@@162 $generated@@723)) ($generated@@166 $generated@@723)) ($generated@@77 ($generated@@162 $generated@@723) ($generated@@146 $generated@@722 ($generated@@171 $generated@@723) $generated@@724) ($generated@@166 $generated@@723)))))))
 :pattern ( ($generated@@146 ($generated@@259 $generated@@722) $generated@@723 $generated@@724))
))))
(assert (forall (($generated@@725 T@U) ) (! (let (($generated@@726 ($generated@@342 (type $generated@@725))))
 (=> (and (= (type $generated@@725) ($generated@@341 $generated@@726)) (= ($generated@@340 $generated@@725) 0)) (= $generated@@725 ($generated@@339 $generated@@726))))
 :pattern ( ($generated@@340 $generated@@725))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ) (! (let (($generated@@730 (type $generated@@728)))
 (=> (and (and (= (type $generated@@727) ($generated@@90 $generated@@730 $generated@@2)) (= (type $generated@@729) $generated@@2)) (<= 0 ($generated $generated@@729))) (= ($generated@@348 ($generated@@96 $generated@@727 $generated@@728 $generated@@729)) (+ (- ($generated@@348 $generated@@727) ($generated ($generated@@95 $generated@@727 $generated@@728))) ($generated $generated@@729)))))
 :pattern ( ($generated@@348 ($generated@@96 $generated@@727 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (= (type $generated@@731) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@732) $generated@@2)) ($generated@@88 $generated@@732 $generated@@46 $generated@@731))
 :pattern ( ($generated@@88 $generated@@732 $generated@@46 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@734) $generated@@3)) ($generated@@88 $generated@@734 $generated@@47 $generated@@733))
 :pattern ( ($generated@@88 $generated@@734 $generated@@47 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@736) $generated@@4)) ($generated@@88 $generated@@736 $generated@@44 $generated@@735))
 :pattern ( ($generated@@88 $generated@@736 $generated@@44 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@738) $generated@@567)) ($generated@@88 $generated@@738 $generated@@45 $generated@@737))
 :pattern ( ($generated@@88 $generated@@738 $generated@@45 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@740) $generated@@192)) ($generated@@88 $generated@@740 $generated@@48 $generated@@739))
 :pattern ( ($generated@@88 $generated@@740 $generated@@48 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) ($generated@@341 $generated@@192)) (= (type $generated@@742) $generated@@68)) (= ($generated@@76 $generated@@741 ($generated@@616 $generated@@742)) (forall (($generated@@743 Int) ) (!  (=> (and (<= 0 $generated@@743) (< $generated@@743 ($generated@@340 $generated@@741))) ($generated@@273 ($generated@@617 $generated@@741 $generated@@743) $generated@@742))
 :pattern ( ($generated@@617 $generated@@741 $generated@@743))
))))
 :pattern ( ($generated@@76 $generated@@741 ($generated@@616 $generated@@742)))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 Int) ) (!  (=> (= (type $generated@@745) ($generated@@341 $generated@@192)) (=> (and (<= 0 $generated@@746) (< $generated@@746 ($generated@@340 $generated@@745))) (< ($generated@@649 ($generated@@425 $generated@@79 ($generated@@617 $generated@@745 $generated@@746))) ($generated@@744 $generated@@745))))
 :pattern ( ($generated@@649 ($generated@@425 $generated@@79 ($generated@@617 $generated@@745 $generated@@746))))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (and (and (= (type $generated@@747) ($generated@@385 $generated@@192 $generated@@192)) (= (type $generated@@748) $generated@@68)) (= (type $generated@@749) $generated@@68)) ($generated@@76 $generated@@747 ($generated@@521 $generated@@748 $generated@@749))) (and (and ($generated@@76 ($generated@@383 $generated@@747) ($generated@@294 $generated@@748)) ($generated@@76 ($generated@@440 $generated@@747) ($generated@@294 $generated@@749))) ($generated@@76 ($generated@@495 $generated@@747) ($generated@@294 ($generated@@183 $generated@@748 $generated@@749)))))
 :pattern ( ($generated@@76 $generated@@747 ($generated@@521 $generated@@748 $generated@@749)))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (and (= (type $generated@@750) ($generated@@403 $generated@@192 $generated@@192)) (= (type $generated@@751) $generated@@68)) (= (type $generated@@752) $generated@@68)) ($generated@@76 $generated@@750 ($generated@@529 $generated@@751 $generated@@752))) (and (and ($generated@@76 ($generated@@401 $generated@@750) ($generated@@299 $generated@@751)) ($generated@@76 ($generated@@451 $generated@@750) ($generated@@299 $generated@@752))) ($generated@@76 ($generated@@503 $generated@@750) ($generated@@299 ($generated@@183 $generated@@751 $generated@@752)))))
 :pattern ( ($generated@@76 $generated@@750 ($generated@@529 $generated@@751 $generated@@752)))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) $generated@@2) ($generated@@76 $generated@@753 $generated@@46))
 :pattern ( ($generated@@76 $generated@@753 $generated@@46))
)))
(assert (forall (($generated@@754 T@U) ) (!  (=> (= (type $generated@@754) $generated@@3) ($generated@@76 $generated@@754 $generated@@47))
 :pattern ( ($generated@@76 $generated@@754 $generated@@47))
)))
(assert (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@4) ($generated@@76 $generated@@755 $generated@@44))
 :pattern ( ($generated@@76 $generated@@755 $generated@@44))
)))
(assert (forall (($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@567) ($generated@@76 $generated@@756 $generated@@45))
 :pattern ( ($generated@@76 $generated@@756 $generated@@45))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@192) ($generated@@76 $generated@@757 $generated@@48))
 :pattern ( ($generated@@76 $generated@@757 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@758 () T@U)
(declare-fun $generated@@759 () T@U)
(declare-fun $generated@@760 () T@U)
(declare-fun $generated@@761 () T@U)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 (T@U) Bool)
(declare-fun $generated@@764 () Int)
(assert  (and (and (and (and (= (type $generated@@758) ($generated@@205 $generated@@91 $generated@@4)) (= (type $generated@@759) $generated@@91)) (= (type $generated@@760) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@761) $generated@@79)) (= (type $generated@@762) ($generated@@90 $generated@@91 $generated@@92))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@765  (=> (and (= $generated@@758 ($generated@@204 $generated@@759 $generated@@760 $generated@@60 false)) ($generated@@261 $generated@@761)) (=> (and (and ($generated@@280 $generated@@762) ($generated@@763 $generated@@762)) (and (= $generated@@760 $generated@@762) (forall (($generated@@766 T@U) ($generated@@767 Int) ) (!  (=> (= (type $generated@@766) $generated@@79) (=> (and (and ($generated@@76 $generated@@766 $generated@@78) ($generated@@178 ($generated@@259 $generated@@149) $generated@@766)) (or (< ($generated@@649 $generated@@766) ($generated@@649 $generated@@761)) (and (= ($generated@@649 $generated@@766) ($generated@@649 $generated@@761)) (and (<= 0 $generated@@767) (< $generated@@767 $generated@@764))))) (let (($generated@@768 ($generated@@146 ($generated@@259 $generated@@149) $generated@@766 $generated@@767)))
 (and ($generated@@178 ($generated@@259 $generated@@149) $generated@@768) ($generated@@468 ($generated@@322 ($generated@@259 $generated@@149) $generated@@768) ($generated@@282 ($generated@@322 ($generated@@259 $generated@@149) $generated@@766) ($generated@@349 ($generated@@364 $generated@@192) ($generated@@365 ($generated@@8 $generated@@767)))))))))
 :no-pattern (type $generated@@766)
 :no-pattern ($generated $generated@@766)
 :no-pattern ($generated@@0 $generated@@766)
)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (let (($generated@@769 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@769) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@769) (=> ($generated@@260 $generated@@769) ($generated@@0 ($generated@@306 ($generated@@11 true)))))))) (=> (let (($generated@@770 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@770) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@770) (=> ($generated@@260 $generated@@770) ($generated@@0 ($generated@@306 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@771 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@771) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@771) (=> (not ($generated@@260 $generated@@771)) (let (($generated@@772 ($generated@@166 $generated@@771)))
($generated@@178 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@772))))))) (=> (let (($generated@@773 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@773) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@773) (=> (not ($generated@@260 $generated@@773)) (let (($generated@@774 ($generated@@166 $generated@@773)))
($generated@@178 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@774)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@775 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@775) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@775) (=> (not ($generated@@260 $generated@@775)) (let (($generated@@776 ($generated@@171 $generated@@775)))
($generated@@178 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@776))))))) (=> (let (($generated@@777 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@777) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@777) (=> (not ($generated@@260 $generated@@777)) (let (($generated@@778 ($generated@@171 $generated@@777)))
($generated@@178 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@778)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@779 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@779) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@779) (=> (not ($generated@@260 $generated@@779)) (let (($generated@@780 ($generated@@166 $generated@@779)))
(let (($generated@@781 ($generated@@162 $generated@@779)))
 (or ($generated@@262 $generated@@780 $generated@@197) (<= $generated@@781 ($generated@@162 $generated@@780)))))))))) (=> (let (($generated@@782 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@782) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@782) (=> (not ($generated@@260 $generated@@782)) (let (($generated@@783 ($generated@@166 $generated@@782)))
(let (($generated@@784 ($generated@@162 $generated@@782)))
 (or ($generated@@262 $generated@@783 $generated@@197) (<= $generated@@784 ($generated@@162 $generated@@783))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@785 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@785) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@785) (=> (not ($generated@@260 $generated@@785)) (let (($generated@@786 ($generated@@171 $generated@@785)))
(let (($generated@@787 ($generated@@162 $generated@@785)))
 (or ($generated@@262 $generated@@786 $generated@@197) (<= $generated@@787 ($generated@@162 $generated@@786)))))))))) (=> (let (($generated@@788 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
 (=> ($generated@@179 $generated@@788) (or ($generated@@178 ($generated@@259 $generated@@149) $generated@@788) (=> (not ($generated@@260 $generated@@788)) (let (($generated@@789 ($generated@@171 $generated@@788)))
(let (($generated@@790 ($generated@@162 $generated@@788)))
 (or ($generated@@262 $generated@@789 $generated@@197) (<= $generated@@790 ($generated@@162 $generated@@789))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@791 ($generated@@146 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761 $generated@@764)))
($generated@@468 ($generated@@322 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@791) ($generated@@282 ($generated@@322 ($generated@@259 ($generated@@259 $generated@@149)) $generated@@761) ($generated@@349 ($generated@@364 $generated@@192) ($generated@@365 ($generated@@8 $generated@@764)))))))))))))))))))))
(let (($generated@@792  (=> (and ($generated@@280 $generated@@760) ($generated@@763 $generated@@760)) (=> (and (and (and (and ($generated@@76 $generated@@761 $generated@@78) ($generated@@88 $generated@@761 $generated@@78 $generated@@760)) ($generated@@261 $generated@@761)) (= 2 $generated@@177)) (and (and ($generated@@179 $generated@@761) (and ($generated@@178 ($generated@@259 $generated@@149) $generated@@761) (ite ($generated@@260 $generated@@761) true (let (($generated@@793 ($generated@@171 $generated@@761)))
(let (($generated@@794 ($generated@@166 $generated@@761)))
(let (($generated@@795 ($generated@@162 $generated@@761)))
 (and (and (and ($generated@@178 ($generated@@259 $generated@@149) $generated@@794) ($generated@@178 ($generated@@259 $generated@@149) $generated@@793)) (or ($generated@@262 $generated@@794 $generated@@197) (<= $generated@@795 ($generated@@162 $generated@@794)))) (or ($generated@@262 $generated@@793 $generated@@197) (<= $generated@@795 ($generated@@162 $generated@@793)))))))))) (= (ControlFlow 0 8) 2))) $generated@@765))))
$generated@@792)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U Int) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@270 () Int)
(declare-fun $generated@@271 () Bool)
(declare-fun $generated@@272 () Bool)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 (T@U Int) Bool)
(declare-fun $generated@@275 (Int) Int)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Bool)
(declare-fun $generated@@307 (T@U T@U T@U) Bool)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@U T@U) T@U)
(declare-fun $generated@@338 (T@U) Bool)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@T) T@U)
(declare-fun $generated@@364 (T@T T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@443 (T@T T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@471 (T@U T@U) T@U)
(declare-fun $generated@@479 (T@U T@U) T@U)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@559 (T@U Int) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@597 (T@U) Int)
(declare-fun $generated@@615 (T@U) T@U)
(declare-fun $generated@@668 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@136) 14) (= ($generated@@1 $generated@@137) 15)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Int) ) (! (= (type ($generated@@134 $generated@@139 $generated@@140 $generated@@141)) $generated@@137)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@135 $generated@@142)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@142))
))) (= (type $generated@@138) $generated@@136)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (and (= (type $generated@@143) $generated@@136) (= (type $generated@@144) $generated@@137)) (= ($generated@@134 $generated@@143 $generated@@144 $generated@@145) ($generated@@134 $generated@@138 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@77 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 16) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@66)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@66) (= (type $generated@@154) $generated@@66)) (= (type $generated@@155) $generated@@150)) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@137)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@137)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (and (and (and (= (type $generated@@239) $generated@@66) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@241 $generated@@245 $generated@@246)) ($generated@@78 $generated@@137 $generated@@2))
 :pattern ( ($generated@@241 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (= (type ($generated@@242 $generated@@247)) $generated@@136)
 :pattern ( ($generated@@242 $generated@@247))
))) (forall (($generated@@248 T@T) ) (! (= (type ($generated@@243 $generated@@248)) ($generated@@78 $generated@@248 $generated@@2))
 :pattern ( ($generated@@243 $generated@@248))
))) (forall (($generated@@249 T@U) ) (! (= (type ($generated@@244 $generated@@249)) $generated@@137)
 :pattern ( ($generated@@244 $generated@@249))
))))
(assert  (=> true (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@137) (or ($generated@@237 $generated@@250) (and ($generated@@238 $generated@@250 $generated@@239) (not ($generated@@240 ($generated@@241 ($generated@@242 $generated@@138) $generated@@250) ($generated@@243 $generated@@137)))))) (let (($generated@@251 ($generated@@236 $generated@@250)))
 (and (> ($generated ($generated@@83 ($generated@@241 ($generated@@242 $generated@@138) $generated@@250) ($generated@@244 ($generated@@8 $generated@@251)))) 0) (forall (($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@2) true) (> ($generated ($generated@@83 ($generated@@241 ($generated@@242 $generated@@138) $generated@@250) ($generated@@244 $generated@@252))) 0)) (<= $generated@@251 ($generated $generated@@252)))
 :pattern ( ($generated@@83 ($generated@@241 ($generated@@242 $generated@@138) $generated@@250) ($generated@@244 $generated@@252)))
)))))
 :pattern ( ($generated@@236 $generated@@250))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@253 $generated@@254 $generated@@255)) $generated@@150)
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@137)) (= (type $generated@@259) $generated@@137)) (= ($generated@@146 ($generated@@253 $generated@@258 $generated@@259) ($generated@@149 $generated@@256 $generated@@257))  (and ($generated@@238 $generated@@258 $generated@@256) ($generated@@238 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@146 ($generated@@253 $generated@@258 $generated@@259) ($generated@@149 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@81 (type $generated@@261))))
(= (type ($generated@@260 $generated@@261 $generated@@262)) ($generated@@78 $generated@@263 $generated@@2)))
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
 (=> (and (= (type $generated@@264) ($generated@@78 $generated@@267 $generated@@2)) (= (type $generated@@265) ($generated@@78 $generated@@267 $generated@@2))) (= ($generated ($generated@@83 ($generated@@260 $generated@@264 $generated@@265) $generated@@266)) (+ ($generated ($generated@@83 $generated@@264 $generated@@266)) ($generated ($generated@@83 $generated@@265 $generated@@266))))))
 :pattern ( ($generated@@83 ($generated@@260 $generated@@264 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@150) (= (type $generated@@269) $generated@@150)) (= ($generated@@156 $generated@@268 $generated@@269) (= $generated@@268 $generated@@269)))
 :pattern ( ($generated@@156 $generated@@268 $generated@@269))
)))
(assert (= (type $generated@@273) $generated@@137))
(assert  (=> (<= 0 $generated@@270) (=> (or $generated@@271 (not (= 0 $generated@@270))) (and (and $generated@@272 (let (($generated@@277 $generated@@273))
 (and ($generated@@274 $generated@@277 ($generated@@275 4)) (let (($generated@@278 ($generated@@134 ($generated@@242 $generated@@138) $generated@@277 ($generated@@275 4))))
 (and ($generated@@274 $generated@@278 ($generated@@275 3)) (let (($generated@@279 ($generated@@134 ($generated@@242 $generated@@138) $generated@@278 ($generated@@275 3))))
($generated@@237 $generated@@279))))))) (= $generated@@276 (let (($generated@@280 $generated@@273))
(let (($generated@@281 ($generated@@134 ($generated@@242 $generated@@138) $generated@@280 ($generated@@275 4))))
(let (($generated@@282 ($generated@@134 ($generated@@242 $generated@@138) $generated@@281 ($generated@@275 3))))
(let (($generated@@283 ($generated@@236 $generated@@282)))
$generated@@283)))))))))
(assert  (=> (<= 0 $generated@@270) (=> (or $generated@@271 (not (= 0 $generated@@270))) (and (and $generated@@272 (let (($generated@@284 $generated@@273))
 (and ($generated@@274 $generated@@284 ($generated@@275 4)) (let (($generated@@285 ($generated@@134 ($generated@@242 $generated@@138) $generated@@284 ($generated@@275 4))))
 (and ($generated@@274 $generated@@285 ($generated@@275 3)) (let (($generated@@286 ($generated@@134 ($generated@@242 $generated@@138) $generated@@285 ($generated@@275 3))))
($generated@@237 $generated@@286))))))) (= $generated@@276 (let (($generated@@287 $generated@@273))
(let (($generated@@288 ($generated@@134 ($generated@@242 $generated@@138) $generated@@287 ($generated@@275 4))))
(let (($generated@@289 ($generated@@134 ($generated@@242 $generated@@138) $generated@@288 ($generated@@275 3))))
(let (($generated@@290 ($generated@@236 $generated@@289)))
$generated@@290)))))))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@66)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@294) $generated@@66)) (= ($generated@@146 $generated@@293 ($generated@@291 $generated@@294)) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@137) ($generated@@0 ($generated@@83 $generated@@293 $generated@@295))) ($generated@@238 $generated@@295 $generated@@294))
 :pattern ( ($generated@@83 $generated@@293 $generated@@295))
))))
 :pattern ( ($generated@@146 $generated@@293 ($generated@@291 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@66)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@299) $generated@@66)) (= ($generated@@146 $generated@@298 ($generated@@296 $generated@@299)) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@137) ($generated@@0 ($generated@@83 $generated@@298 $generated@@300))) ($generated@@238 $generated@@300 $generated@@299))
 :pattern ( ($generated@@83 $generated@@298 $generated@@300))
))))
 :pattern ( ($generated@@146 $generated@@298 ($generated@@296 $generated@@299)))
)))
(assert (forall (($generated@@301 Int) ) (! (= ($generated@@275 $generated@@301) $generated@@301)
 :pattern ( ($generated@@275 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 (type $generated@@303)))
(= (type ($generated@@302 $generated@@303)) $generated@@304))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= ($generated@@302 $generated@@305) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) $generated@@66) (= (type $generated@@309) $generated@@66)) (= (type $generated@@310) $generated@@137)) (= (type $generated@@311) $generated@@137)) (= (type $generated@@312) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@306 $generated@@312)) (= ($generated@@76 ($generated@@253 $generated@@310 $generated@@311) ($generated@@149 $generated@@308 $generated@@309) $generated@@312)  (and ($generated@@307 $generated@@310 $generated@@308 $generated@@312) ($generated@@307 $generated@@311 $generated@@309 $generated@@312))))
 :pattern ( ($generated@@76 ($generated@@253 $generated@@310 $generated@@311) ($generated@@149 $generated@@308 $generated@@309) $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@70)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@150) (= ($generated@@148 $generated@@315) (= ($generated@@313 $generated@@315) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@150) ($generated@@148 $generated@@316)) (exists (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (and (and (= (type $generated@@317) $generated@@137) (= (type $generated@@318) $generated@@137)) (= $generated@@316 ($generated@@253 $generated@@317 $generated@@318)))
 :no-pattern (type $generated@@317)
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
)))
 :pattern ( ($generated@@148 $generated@@316))
)))
(assert  (and (and (forall (($generated@@323 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@323)) 18)) (forall (($generated@@324 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@321 $generated@@324))
))) (forall (($generated@@325 T@T) ) (! (= (type ($generated@@319 $generated@@325)) ($generated@@321 $generated@@325))
 :pattern ( ($generated@@319 $generated@@325))
))))
(assert (forall (($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@326)) 0)
 :pattern ( ($generated@@319 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (let (($generated@@331 (type $generated@@330)))
(= (type ($generated@@328 $generated@@329 $generated@@330)) ($generated@@78 $generated@@331 $generated@@2)))
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
 (=> (= (type $generated@@332) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@327 ($generated@@328 $generated@@332 $generated@@333)) (+ ($generated@@327 $generated@@332) 1))))
 :pattern ( ($generated@@327 ($generated@@328 $generated@@332 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@66) (= (type $generated@@337) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@307 ($generated@@244 $generated@@335) $generated@@336 $generated@@337) ($generated@@76 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@307 ($generated@@244 $generated@@335) $generated@@336 $generated@@337))
)))
(assert  (=> true (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@339) $generated@@136) (= (type $generated@@340) $generated@@137)) (or ($generated@@338 $generated@@340) ($generated@@238 $generated@@340 $generated@@239))) ($generated@@146 ($generated@@241 $generated@@339 $generated@@340) ($generated@@163 $generated@@46)))
 :pattern ( ($generated@@241 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@81 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@78 $generated@@342 $generated@@2)) (and (= (= ($generated@@327 $generated@@341) 0) (= $generated@@341 ($generated@@243 $generated@@342))) (=> (not (= ($generated@@327 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@83 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@327 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@78 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@83 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@83 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert  (and (and (and (and (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (= ($generated@@1 ($generated@@364 $generated@@367 $generated@@368)) 20)) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@365 ($generated@@364 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@364 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@364 $generated@@371 $generated@@372)) $generated@@372)
 :pattern ( ($generated@@364 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@365 (type $generated@@373))))
(= (type ($generated@@362 $generated@@373)) ($generated@@78 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@373))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@363 $generated@@375 $generated@@376)) ($generated@@364 $generated@@375 $generated@@376))
 :pattern ( ($generated@@363 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@83 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@83 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@81 (type $generated@@380))))
 (=> (and (= (type $generated@@380) ($generated@@78 $generated@@382 $generated@@2)) (= (type $generated@@381) ($generated@@78 $generated@@382 $generated@@2))) (= ($generated@@327 ($generated@@260 $generated@@380 $generated@@381)) (+ ($generated@@327 $generated@@380) ($generated@@327 $generated@@381)))))
 :pattern ( ($generated@@327 ($generated@@260 $generated@@380 $generated@@381)))
)))
(assert  (=> true (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 Int) ) (!  (=> (and (and (= (type $generated@@383) $generated@@136) (= (type $generated@@384) $generated@@137)) (or ($generated@@274 $generated@@384 $generated@@385) ($generated@@238 $generated@@384 $generated@@239))) (and ($generated@@240 ($generated@@241 ($generated@@242 $generated@@138) ($generated@@134 $generated@@383 $generated@@384 $generated@@385)) ($generated@@260 ($generated@@241 ($generated@@242 $generated@@138) $generated@@384) ($generated@@328 ($generated@@243 $generated@@137) ($generated@@244 ($generated@@8 $generated@@385))))) ($generated@@238 ($generated@@134 $generated@@383 $generated@@384 $generated@@385) $generated@@239)))
 :pattern ( ($generated@@134 $generated@@383 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@81 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@78 $generated@@387 $generated@@2)) (= ($generated@@164 $generated@@386) (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@387) (and (<= 0 ($generated ($generated@@83 $generated@@386 $generated@@388))) (<= ($generated ($generated@@83 $generated@@386 $generated@@388)) ($generated@@327 $generated@@386))))
 :pattern ( ($generated@@83 $generated@@386 $generated@@388))
)))))
 :pattern ( ($generated@@164 $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
 (=> (= (type $generated@@389) ($generated@@78 $generated@@391 $generated@@2)) (= ($generated ($generated@@83 ($generated@@328 $generated@@389 $generated@@390) $generated@@390)) (+ ($generated ($generated@@83 $generated@@389 $generated@@390)) 1))))
 :pattern ( ($generated@@328 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@393)))
 (=> (and (and (= (type $generated@@392) ($generated@@78 $generated@@395 $generated@@2)) (= (type $generated@@394) $generated@@395)) (< 0 ($generated ($generated@@83 $generated@@392 $generated@@394)))) (< 0 ($generated ($generated@@83 ($generated@@328 $generated@@392 $generated@@393) $generated@@394)))))
 :pattern ( ($generated@@328 $generated@@392 $generated@@393) ($generated@@83 $generated@@392 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@348 (type $generated@@396))))
(let (($generated@@398 ($generated@@347 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@346 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@345 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@344 $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@348 (type $generated@@401))))
(= (type ($generated@@400 $generated@@401)) ($generated@@78 $generated@@402 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@348 (type $generated@@403))))
(let (($generated@@405 ($generated@@347 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@346 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@345 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@404) ($generated@@0 ($generated@@83 ($generated@@400 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@400 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@366 (type $generated@@407))))
(let (($generated@@409 ($generated@@365 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@364 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@363 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@362 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@366 (type $generated@@412))))
(= (type ($generated@@411 $generated@@412)) ($generated@@78 $generated@@413 $generated@@4)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@366 (type $generated@@414))))
(let (($generated@@416 ($generated@@365 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@364 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@363 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@415) ($generated@@0 ($generated@@83 ($generated@@411 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 Int) ) (!  (=> (and (= (type $generated@@418) $generated@@136) (= (type $generated@@419) $generated@@137)) (= ($generated@@134 ($generated@@242 $generated@@418) $generated@@419 $generated@@420) ($generated@@134 $generated@@418 $generated@@419 $generated@@420)))
 :pattern ( ($generated@@134 ($generated@@242 $generated@@418) $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@422)))
 (=> (and (= (type $generated@@421) ($generated@@78 $generated@@424 $generated@@2)) (= (type $generated@@423) $generated@@424)) (= (< 0 ($generated ($generated@@83 ($generated@@328 $generated@@421 $generated@@422) $generated@@423)))  (or (= $generated@@423 $generated@@422) (< 0 ($generated ($generated@@83 $generated@@421 $generated@@423)))))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@426) $generated@@66)) (= ($generated@@146 $generated@@425 ($generated@@163 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@425 $generated@@427)))) ($generated@@238 $generated@@427 $generated@@426))
 :pattern ( ($generated@@83 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@146 $generated@@425 ($generated@@163 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@81 (type $generated@@428))))
 (=> (and (= (type $generated@@428) ($generated@@78 $generated@@430 $generated@@2)) (= (type $generated@@429) ($generated@@78 $generated@@430 $generated@@2))) (= ($generated@@240 $generated@@428 $generated@@429) (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@430) (= ($generated ($generated@@83 $generated@@428 $generated@@431)) ($generated ($generated@@83 $generated@@429 $generated@@431))))
 :pattern ( ($generated@@83 $generated@@428 $generated@@431))
 :pattern ( ($generated@@83 $generated@@429 $generated@@431))
)))))
 :pattern ( ($generated@@240 $generated@@428 $generated@@429))
)))
(assert  (=> (<= 0 $generated@@270) (=> (or $generated@@271 (not (= 0 $generated@@270))) (= ($generated@@275 $generated@@276) ($generated@@275 3)))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@433) $generated@@66)) (= (type $generated@@434) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@432 ($generated@@291 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@137) ($generated@@0 ($generated@@83 $generated@@432 $generated@@435))) ($generated@@307 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@83 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@76 $generated@@432 ($generated@@291 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (= (type $generated@@436) ($generated@@78 $generated@@137 $generated@@4)) (= (type $generated@@437) $generated@@66)) (= (type $generated@@438) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@436 ($generated@@296 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@137) ($generated@@0 ($generated@@83 $generated@@436 $generated@@439))) ($generated@@307 $generated@@439 $generated@@437 $generated@@438))
 :pattern ( ($generated@@83 $generated@@436 $generated@@439))
))))
 :pattern ( ($generated@@76 $generated@@436 ($generated@@296 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 (type $generated@@440)))
(= ($generated ($generated@@83 ($generated@@243 $generated@@441) $generated@@440)) 0))
 :pattern ( (let (($generated@@441 (type $generated@@440)))
($generated@@83 ($generated@@243 $generated@@441) $generated@@440)))
)))
(assert  (and (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@442 $generated@@445)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@442 $generated@@445))
)) (forall (($generated@@446 T@T) ($generated@@447 T@U) ) (! (= (type ($generated@@443 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@443 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@348 (type $generated@@448))))
(let (($generated@@450 ($generated@@347 (type $generated@@448))))
(= (type ($generated@@444 $generated@@448)) ($generated@@78 $generated@@450 $generated@@449))))
 :pattern ( ($generated@@444 $generated@@448))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) ($generated@@346 $generated@@137 $generated@@137)) (= (type $generated@@452) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@442 $generated@@451) $generated@@452))  (and ($generated@@0 ($generated@@83 ($generated@@344 $generated@@451) ($generated@@157 ($generated@@443 $generated@@150 $generated@@452)))) (= ($generated@@83 ($generated@@444 $generated@@451) ($generated@@157 ($generated@@443 $generated@@150 $generated@@452))) ($generated@@158 ($generated@@443 $generated@@150 $generated@@452))))))
 :pattern ( ($generated@@83 ($generated@@442 $generated@@451) $generated@@452))
)))
(assert  (and (forall (($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@455)) ($generated@@78 $generated@@137 $generated@@4))
 :pattern ( ($generated@@453 $generated@@455))
)) (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@366 (type $generated@@456))))
(let (($generated@@458 ($generated@@365 (type $generated@@456))))
(= (type ($generated@@454 $generated@@456)) ($generated@@78 $generated@@458 $generated@@457))))
 :pattern ( ($generated@@454 $generated@@456))
))))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@364 $generated@@137 $generated@@137)) (= (type $generated@@460) $generated@@137)) (= ($generated@@0 ($generated@@83 ($generated@@453 $generated@@459) $generated@@460))  (and ($generated@@0 ($generated@@83 ($generated@@362 $generated@@459) ($generated@@157 ($generated@@443 $generated@@150 $generated@@460)))) (= ($generated@@83 ($generated@@454 $generated@@459) ($generated@@157 ($generated@@443 $generated@@150 $generated@@460))) ($generated@@158 ($generated@@443 $generated@@150 $generated@@460))))))
 :pattern ( ($generated@@83 ($generated@@453 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@462)))
(let (($generated@@464 ($generated@@347 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@346 $generated@@464 $generated@@463)) (= ($generated@@0 ($generated@@83 ($generated@@400 $generated@@461) $generated@@462)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@464) (and ($generated@@0 ($generated@@83 ($generated@@344 $generated@@461) $generated@@465)) (= $generated@@462 ($generated@@83 ($generated@@444 $generated@@461) $generated@@465))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@461) $generated@@465))
 :pattern ( ($generated@@83 ($generated@@444 $generated@@461) $generated@@465))
))))))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@467)))
(let (($generated@@469 ($generated@@365 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@364 $generated@@469 $generated@@468)) (= ($generated@@0 ($generated@@83 ($generated@@411 $generated@@466) $generated@@467)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) (and ($generated@@0 ($generated@@83 ($generated@@362 $generated@@466) $generated@@470)) (= $generated@@467 ($generated@@83 ($generated@@454 $generated@@466) $generated@@470))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@466) $generated@@470))
 :pattern ( ($generated@@83 ($generated@@454 $generated@@466) $generated@@470))
))))))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (= (type $generated@@474) ($generated@@346 $generated@@137 $generated@@137)) (= (type $generated@@475) $generated@@66)) (= (type $generated@@476) $generated@@66)) (= (type $generated@@477) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@474) $generated@@478))) (and ($generated@@307 ($generated@@83 ($generated@@444 $generated@@474) $generated@@478) $generated@@476 $generated@@477) ($generated@@307 $generated@@478 $generated@@475 $generated@@477)))
 :pattern ( ($generated@@83 ($generated@@444 $generated@@474) $generated@@478))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@474) $generated@@478))
))))
 :pattern ( ($generated@@76 $generated@@474 ($generated@@471 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (and (= (type $generated@@482) ($generated@@364 $generated@@137 $generated@@137)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) $generated@@66)) (= (type $generated@@485) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@482) $generated@@486))) (and ($generated@@307 ($generated@@83 ($generated@@454 $generated@@482) $generated@@486) $generated@@484 $generated@@485) ($generated@@307 $generated@@486 $generated@@483 $generated@@485)))
 :pattern ( ($generated@@83 ($generated@@454 $generated@@482) $generated@@486))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@482) $generated@@486))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@479 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@81 (type $generated@@487))))
 (=> (and (and (= (type $generated@@487) ($generated@@78 $generated@@489 $generated@@2)) (= (type $generated@@488) ($generated@@78 $generated@@489 $generated@@2))) ($generated@@240 $generated@@487 $generated@@488)) (= $generated@@487 $generated@@488)))
 :pattern ( ($generated@@240 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@78 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@366 (type $generated@@492))))
(let (($generated@@494 ($generated@@365 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@364 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@363 $generated@@494 $generated@@493)) (= ($generated@@362 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@362 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@366 (type $generated@@495))))
(let (($generated@@497 ($generated@@365 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@364 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@363 $generated@@497 $generated@@496)) (= ($generated@@411 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@411 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@366 (type $generated@@498))))
(let (($generated@@500 ($generated@@365 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@364 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@363 $generated@@500 $generated@@499)) (= ($generated@@453 $generated@@498) ($generated@@490 $generated@@137))))))
 :pattern ( ($generated@@453 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@348 (type $generated@@501))))
(let (($generated@@503 ($generated@@347 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@346 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@345 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@137) (= (type $generated@@505) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@442 $generated@@501) ($generated@@244 ($generated@@253 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@442 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@366 (type $generated@@506))))
(let (($generated@@508 ($generated@@365 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@364 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@363 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@137) (= (type $generated@@510) $generated@@137)) ($generated@@0 ($generated@@83 ($generated@@453 $generated@@506) ($generated@@244 ($generated@@253 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@453 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@137) ($generated@@238 $generated@@511 $generated@@46)) (and (= ($generated@@244 ($generated@@443 $generated@@2 $generated@@511)) $generated@@511) ($generated@@146 ($generated@@443 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@137) ($generated@@238 $generated@@512 $generated@@47)) (and (= ($generated@@244 ($generated@@443 $generated@@3 $generated@@512)) $generated@@512) ($generated@@146 ($generated@@443 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@137) ($generated@@238 $generated@@513 $generated@@44)) (and (= ($generated@@244 ($generated@@443 $generated@@4 $generated@@513)) $generated@@513) ($generated@@146 ($generated@@443 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 21))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@137) ($generated@@238 $generated@@515 $generated@@45)) (and (= ($generated@@244 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515) ($generated@@146 ($generated@@443 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@238 ($generated@@244 $generated@@516) $generated@@517) ($generated@@146 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@238 ($generated@@244 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@81 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@78 $generated@@519 $generated@@2)) (<= 0 ($generated@@327 $generated@@518))))
 :pattern ( ($generated@@327 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@322 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@321 $generated@@521)) (<= 0 ($generated@@320 $generated@@520))))
 :pattern ( ($generated@@320 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@66)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@66) (= (type $generated@@525) $generated@@66)) (= ($generated@@522 ($generated@@471 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@471 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@66)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@526 ($generated@@471 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@471 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@66) (= (type $generated@@531) $generated@@66)) (= ($generated@@74 ($generated@@471 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@471 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@66) (= (type $generated@@535) $generated@@66)) (= ($generated@@532 ($generated@@479 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@479 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= ($generated@@536 ($generated@@479 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@479 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= ($generated@@74 ($generated@@479 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@479 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@137) (= (type $generated@@543) $generated@@137)) (= ($generated@@313 ($generated@@253 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (= ($generated@@544 ($generated@@149 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@149 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (= ($generated@@548 ($generated@@149 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@137) (= (type $generated@@553) $generated@@137)) (= ($generated@@157 ($generated@@253 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@253 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@137) (= (type $generated@@555) $generated@@137)) (= ($generated@@158 ($generated@@253 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@253 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@137)) (= ($generated@@241 $generated@@556 $generated@@557) ($generated@@241 $generated@@138 $generated@@557)))
 :pattern ( ($generated@@241 ($generated@@135 $generated@@556) $generated@@557))
)))
(assert  (and (forall (($generated@@560 T@U) ) (! (= (type ($generated@@558 $generated@@560)) $generated@@66)
 :pattern ( ($generated@@558 $generated@@560))
)) (forall (($generated@@561 T@U) ($generated@@562 Int) ) (! (let (($generated@@563 ($generated@@322 (type $generated@@561))))
(= (type ($generated@@559 $generated@@561 $generated@@562)) $generated@@563))
 :pattern ( ($generated@@559 $generated@@561 $generated@@562))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@321 $generated@@137)) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@564 ($generated@@558 $generated@@565) $generated@@566) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@320 $generated@@564))) ($generated@@307 ($generated@@559 $generated@@564 $generated@@567) $generated@@565 $generated@@566))
 :pattern ( ($generated@@559 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@558 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@568 ($generated@@77 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@77 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@66)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@570 ($generated@@291 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@291 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@66) (= ($generated@@74 ($generated@@291 $generated@@573)) $generated@@54))
 :pattern ( ($generated@@291 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@66)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@574 ($generated@@296 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@296 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@66) (= ($generated@@74 ($generated@@296 $generated@@577)) $generated@@55))
 :pattern ( ($generated@@296 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@66)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@66) (= ($generated@@578 ($generated@@163 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@163 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@581)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@66)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@66) (= ($generated@@582 ($generated@@558 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@558 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@66) (= ($generated@@74 ($generated@@558 $generated@@585)) $generated@@57))
 :pattern ( ($generated@@558 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
(= ($generated@@443 $generated@@587 ($generated@@244 $generated@@586)) $generated@@586))
 :pattern ( ($generated@@244 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@346 $generated@@137 $generated@@137)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@66)) (= ($generated@@146 $generated@@588 ($generated@@471 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@588) $generated@@591))) (and ($generated@@238 ($generated@@83 ($generated@@444 $generated@@588) $generated@@591) $generated@@590) ($generated@@238 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@83 ($generated@@444 $generated@@588) $generated@@591))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@146 $generated@@588 ($generated@@471 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@364 $generated@@137 $generated@@137)) (= (type $generated@@593) $generated@@66)) (= (type $generated@@594) $generated@@66)) (= ($generated@@146 $generated@@592 ($generated@@479 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@137) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@592) $generated@@595))) (and ($generated@@238 ($generated@@83 ($generated@@454 $generated@@592) $generated@@595) $generated@@594) ($generated@@238 $generated@@595 $generated@@593)))
 :pattern ( ($generated@@83 ($generated@@454 $generated@@592) $generated@@595))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@592) $generated@@595))
))))
 :pattern ( ($generated@@146 $generated@@592 ($generated@@479 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@137) (= (type $generated@@599) $generated@@137)) (< ($generated@@596 $generated@@598) ($generated@@597 ($generated@@253 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@253 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@137) (= (type $generated@@601) $generated@@137)) (< ($generated@@596 $generated@@601) ($generated@@597 ($generated@@253 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@253 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@136) (= (type $generated@@603) $generated@@137)) (= ($generated@@241 ($generated@@242 $generated@@602) $generated@@603) ($generated@@241 $generated@@602 $generated@@603)))
 :pattern ( ($generated@@241 ($generated@@242 $generated@@602) $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@137) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@238 $generated@@604 ($generated@@471 $generated@@605 $generated@@606))) (and (= ($generated@@244 ($generated@@443 ($generated@@346 $generated@@137 $generated@@137) $generated@@604)) $generated@@604) ($generated@@146 ($generated@@443 ($generated@@346 $generated@@137 $generated@@137) $generated@@604) ($generated@@471 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@238 $generated@@604 ($generated@@471 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@137) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@238 $generated@@607 ($generated@@479 $generated@@608 $generated@@609))) (and (= ($generated@@244 ($generated@@443 ($generated@@364 $generated@@137 $generated@@137) $generated@@607)) $generated@@607) ($generated@@146 ($generated@@443 ($generated@@364 $generated@@137 $generated@@137) $generated@@607) ($generated@@479 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@238 $generated@@607 ($generated@@479 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@66) (= (type $generated@@611) $generated@@66)) (= (type $generated@@612) $generated@@137)) ($generated@@238 $generated@@612 ($generated@@149 $generated@@610 $generated@@611))) (and (= ($generated@@244 ($generated@@443 $generated@@150 $generated@@612)) $generated@@612) ($generated@@146 ($generated@@443 $generated@@150 $generated@@612) ($generated@@149 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@238 $generated@@612 ($generated@@149 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@613)))
 (not ($generated@@0 ($generated@@83 ($generated@@490 $generated@@614) $generated@@613))))
 :pattern ( (let (($generated@@614 (type $generated@@613)))
($generated@@83 ($generated@@490 $generated@@614) $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ) (! (= (type ($generated@@615 $generated@@616)) $generated@@71)
 :pattern ( ($generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@66) (= (type $generated@@618) $generated@@66)) (and (= ($generated@@74 ($generated@@149 $generated@@617 $generated@@618)) $generated@@62) (= ($generated@@615 ($generated@@149 $generated@@617 $generated@@618)) $generated@@64)))
 :pattern ( ($generated@@149 $generated@@617 $generated@@618))
)))
(assert  (=> true (=> true (and ($generated@@240 ($generated@@241 ($generated@@242 $generated@@138) $generated@@273) ($generated@@243 $generated@@137)) ($generated@@238 $generated@@273 $generated@@239)))))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@150) (= ($generated@@596 ($generated@@244 $generated@@619)) ($generated@@597 $generated@@619)))
 :pattern ( ($generated@@596 ($generated@@244 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@137) ($generated@@238 $generated@@620 ($generated@@77 0))) (and (= ($generated@@244 ($generated@@443 $generated@@2 $generated@@620)) $generated@@620) ($generated@@146 ($generated@@443 ($generated@@78 $generated@@137 $generated@@4) $generated@@620) ($generated@@77 0))))
 :pattern ( ($generated@@238 $generated@@620 ($generated@@77 0)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@137) (= (type $generated@@622) $generated@@66)) ($generated@@238 $generated@@621 ($generated@@291 $generated@@622))) (and (= ($generated@@244 ($generated@@443 ($generated@@78 $generated@@137 $generated@@4) $generated@@621)) $generated@@621) ($generated@@146 ($generated@@443 ($generated@@78 $generated@@137 $generated@@4) $generated@@621) ($generated@@291 $generated@@622))))
 :pattern ( ($generated@@238 $generated@@621 ($generated@@291 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@137) (= (type $generated@@624) $generated@@66)) ($generated@@238 $generated@@623 ($generated@@296 $generated@@624))) (and (= ($generated@@244 ($generated@@443 ($generated@@78 $generated@@137 $generated@@4) $generated@@623)) $generated@@623) ($generated@@146 ($generated@@443 ($generated@@78 $generated@@137 $generated@@4) $generated@@623) ($generated@@296 $generated@@624))))
 :pattern ( ($generated@@238 $generated@@623 ($generated@@296 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@137) (= (type $generated@@626) $generated@@66)) ($generated@@238 $generated@@625 ($generated@@163 $generated@@626))) (and (= ($generated@@244 ($generated@@443 ($generated@@78 $generated@@137 $generated@@2) $generated@@625)) $generated@@625) ($generated@@146 ($generated@@443 ($generated@@78 $generated@@137 $generated@@2) $generated@@625) ($generated@@163 $generated@@626))))
 :pattern ( ($generated@@238 $generated@@625 ($generated@@163 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@137) (= (type $generated@@628) $generated@@66)) ($generated@@238 $generated@@627 ($generated@@558 $generated@@628))) (and (= ($generated@@244 ($generated@@443 ($generated@@321 $generated@@137) $generated@@627)) $generated@@627) ($generated@@146 ($generated@@443 ($generated@@321 $generated@@137) $generated@@627) ($generated@@558 $generated@@628))))
 :pattern ( ($generated@@238 $generated@@627 ($generated@@558 $generated@@628)))
)))
(assert (= ($generated@@74 $generated@@239) $generated@@63))
(assert (= ($generated@@615 $generated@@239) $generated@@65))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@137 $generated@@2)) (= (type $generated@@630) $generated@@66)) (= (type $generated@@631) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@629 ($generated@@163 $generated@@630) $generated@@631) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@137) (< 0 ($generated ($generated@@83 $generated@@629 $generated@@632)))) ($generated@@307 $generated@@632 $generated@@630 $generated@@631))
 :pattern ( ($generated@@83 $generated@@629 $generated@@632))
))))
 :pattern ( ($generated@@76 $generated@@629 ($generated@@163 $generated@@630) $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@150) (= (type $generated@@634) $generated@@66)) (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@306 $generated@@635) (and ($generated@@148 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@66) ($generated@@76 $generated@@633 ($generated@@149 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@76 $generated@@633 ($generated@@149 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@307 ($generated@@157 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@307 ($generated@@157 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@150) (= (type $generated@@638) $generated@@66)) (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@306 $generated@@639) (and ($generated@@148 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@66) ($generated@@76 $generated@@637 ($generated@@149 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@76 $generated@@637 ($generated@@149 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@307 ($generated@@158 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@307 ($generated@@158 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@78 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@644)) (not (= $generated@@642 $generated@@643))) (= ($generated ($generated@@83 $generated@@641 $generated@@643)) ($generated ($generated@@83 ($generated@@328 $generated@@641 $generated@@642) $generated@@643)))))
 :pattern ( ($generated@@328 $generated@@641 $generated@@642) ($generated@@83 $generated@@641 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@137) (= (type $generated@@646) $generated@@137)) (= ($generated@@253 ($generated@@302 $generated@@645) ($generated@@302 $generated@@646)) ($generated@@302 ($generated@@253 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@253 ($generated@@302 $generated@@645) ($generated@@302 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@244 ($generated@@8 ($generated@@275 $generated@@647))) ($generated@@302 ($generated@@244 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@244 ($generated@@8 ($generated@@275 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ) (! (= ($generated@@244 ($generated@@302 $generated@@648)) ($generated@@302 ($generated@@244 $generated@@648)))
 :pattern ( ($generated@@244 ($generated@@302 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@322 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@321 $generated@@650)) (= ($generated@@320 $generated@@649) 0)) (= $generated@@649 ($generated@@319 $generated@@650))))
 :pattern ( ($generated@@320 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@652)))
 (=> (and (and (= (type $generated@@651) ($generated@@78 $generated@@654 $generated@@2)) (= (type $generated@@653) $generated@@2)) (<= 0 ($generated $generated@@653))) (= ($generated@@327 ($generated@@84 $generated@@651 $generated@@652 $generated@@653)) (+ (- ($generated@@327 $generated@@651) ($generated ($generated@@83 $generated@@651 $generated@@652))) ($generated $generated@@653)))))
 :pattern ( ($generated@@327 ($generated@@84 $generated@@651 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@656) $generated@@2)) ($generated@@76 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@76 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@658) $generated@@3)) ($generated@@76 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@76 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@660) $generated@@4)) ($generated@@76 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@76 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@662) $generated@@514)) ($generated@@76 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@76 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@664) $generated@@137)) ($generated@@76 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@76 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@321 $generated@@137)) (= (type $generated@@666) $generated@@66)) (= ($generated@@146 $generated@@665 ($generated@@558 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@320 $generated@@665))) ($generated@@238 ($generated@@559 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@559 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@146 $generated@@665 ($generated@@558 $generated@@666)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (= (type $generated@@669) ($generated@@321 $generated@@137)) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@320 $generated@@669))) (< ($generated@@597 ($generated@@443 $generated@@150 ($generated@@559 $generated@@669 $generated@@670))) ($generated@@668 $generated@@669))))
 :pattern ( ($generated@@597 ($generated@@443 $generated@@150 ($generated@@559 $generated@@669 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@346 $generated@@137 $generated@@137)) (= (type $generated@@672) $generated@@66)) (= (type $generated@@673) $generated@@66)) ($generated@@146 $generated@@671 ($generated@@471 $generated@@672 $generated@@673))) (and (and ($generated@@146 ($generated@@344 $generated@@671) ($generated@@291 $generated@@672)) ($generated@@146 ($generated@@400 $generated@@671) ($generated@@291 $generated@@673))) ($generated@@146 ($generated@@442 $generated@@671) ($generated@@291 ($generated@@149 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@146 $generated@@671 ($generated@@471 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@364 $generated@@137 $generated@@137)) (= (type $generated@@675) $generated@@66)) (= (type $generated@@676) $generated@@66)) ($generated@@146 $generated@@674 ($generated@@479 $generated@@675 $generated@@676))) (and (and ($generated@@146 ($generated@@362 $generated@@674) ($generated@@296 $generated@@675)) ($generated@@146 ($generated@@411 $generated@@674) ($generated@@296 $generated@@676))) ($generated@@146 ($generated@@453 $generated@@674) ($generated@@296 ($generated@@149 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@146 $generated@@674 ($generated@@479 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@2) ($generated@@146 $generated@@677 $generated@@46))
 :pattern ( ($generated@@146 $generated@@677 $generated@@46))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@3) ($generated@@146 $generated@@678 $generated@@47))
 :pattern ( ($generated@@146 $generated@@678 $generated@@47))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@4) ($generated@@146 $generated@@679 $generated@@44))
 :pattern ( ($generated@@146 $generated@@679 $generated@@44))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@514) ($generated@@146 $generated@@680 $generated@@45))
 :pattern ( ($generated@@146 $generated@@680 $generated@@45))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@137) ($generated@@146 $generated@@681 $generated@@48))
 :pattern ( ($generated@@146 $generated@@681 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@682) ($generated@@170 $generated@@79 $generated@@4)) (= (type $generated@@683) $generated@@79)) (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@685) $generated@@137)) (= (type $generated@@686) $generated@@137)) (= (type $generated@@687) $generated@@137)) (= (type $generated@@689) $generated@@137)) (= (type $generated@@690) $generated@@137)) (= (type $generated@@692) $generated@@137)) (= (type $generated@@695) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@697  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@275 $generated@@276) ($generated@@275 3)))))
(let (($generated@@698  (=> (= $generated@@682 ($generated@@224 $generated@@683 $generated@@684 $generated@@60 false)) (=> (and (and (and (and (and (and ($generated@@238 $generated@@685 $generated@@239) ($generated@@307 $generated@@685 $generated@@239 $generated@@684)) $generated@@272) (and (= $generated@@686 $generated@@273) $generated@@272)) (and (and ($generated@@238 $generated@@686 $generated@@239) (= $generated@@685 $generated@@686)) (and ($generated@@238 $generated@@687 $generated@@239) ($generated@@307 $generated@@687 $generated@@239 $generated@@684)))) (and (and (and ($generated@@307 $generated@@685 $generated@@239 $generated@@684) (= $generated@@688 ($generated@@275 4))) (and ($generated@@76 ($generated@@8 $generated@@688) $generated@@46 $generated@@684) ($generated@@274 $generated@@685 ($generated@@275 4)))) (and (and (= $generated@@689 ($generated@@134 ($generated@@242 $generated@@138) $generated@@685 ($generated@@275 4))) ($generated@@274 $generated@@685 ($generated@@275 4))) (and ($generated@@238 $generated@@689 $generated@@239) (= $generated@@687 $generated@@689))))) (and (and (and (and ($generated@@238 $generated@@690 $generated@@239) ($generated@@307 $generated@@690 $generated@@239 $generated@@684)) ($generated@@307 $generated@@687 $generated@@239 $generated@@684)) (and (= $generated@@691 ($generated@@275 3)) ($generated@@76 ($generated@@8 $generated@@691) $generated@@46 $generated@@684))) (and (and (and ($generated@@274 $generated@@687 ($generated@@275 3)) (= $generated@@692 ($generated@@134 ($generated@@242 $generated@@138) $generated@@687 ($generated@@275 3)))) (and ($generated@@274 $generated@@687 ($generated@@275 3)) ($generated@@238 $generated@@692 $generated@@239))) (and (and (= $generated@@690 $generated@@692) ($generated@@307 $generated@@690 $generated@@239 $generated@@684)) (and ($generated@@338 $generated@@690) ($generated@@338 $generated@@690)))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@240 ($generated@@241 ($generated@@242 ($generated@@242 $generated@@138)) $generated@@690) ($generated@@328 ($generated@@328 ($generated@@243 $generated@@137) ($generated@@244 ($generated@@8 ($generated@@275 3)))) ($generated@@244 ($generated@@8 ($generated@@275 4)))))) (=> (and ($generated@@240 ($generated@@241 ($generated@@242 $generated@@138) $generated@@690) ($generated@@328 ($generated@@328 ($generated@@243 $generated@@137) ($generated@@244 ($generated@@8 ($generated@@275 3)))) ($generated@@244 ($generated@@8 ($generated@@275 4))))) ($generated@@307 $generated@@690 $generated@@239 $generated@@684)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not ($generated@@240 ($generated@@241 ($generated@@242 ($generated@@242 $generated@@138)) $generated@@690) ($generated@@243 $generated@@137)))) (=> (not ($generated@@240 ($generated@@241 ($generated@@242 $generated@@138) $generated@@690) ($generated@@243 $generated@@137))) (=> (and (and (and ($generated@@237 $generated@@690) (= $generated@@693 ($generated@@236 $generated@@690))) (and ($generated@@237 $generated@@690) ($generated@@146 ($generated@@8 $generated@@693) $generated@@46))) (and (and (= $generated@@694 $generated@@693) (= $generated@@276 $generated@@694)) (and ($generated@@146 ($generated@@8 $generated@@276) $generated@@46) (= (ControlFlow 0 5) 4)))) $generated@@697)))))))))
(let (($generated@@699  (=> (= (ControlFlow 0 2) (- 0 1)) true)))
(let (($generated@@700  (=> (= $generated@@695 ($generated@@169 $generated@@683 $generated@@684 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@699) (=> (= (ControlFlow 0 8) 5) $generated@@698)))))
(let (($generated@@701  (=> (and (and ($generated@@306 $generated@@684) ($generated@@696 $generated@@684)) (and (= 0 $generated@@270) (= (ControlFlow 0 9) 8))) $generated@@700)))
$generated@@701))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U Int) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) Bool)
(declare-fun $generated@@299 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (Int) Int)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@333 (T@U T@U T@U) Bool)
(declare-fun $generated@@339 (T@U T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@347 (T@U) Bool)
(declare-fun $generated@@356 (T@T) T@U)
(declare-fun $generated@@357 (T@U) Int)
(declare-fun $generated@@358 (T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@364 (T@U Int) Bool)
(declare-fun $generated@@365 (T@U T@U) Bool)
(declare-fun $generated@@366 (T@U T@U) T@U)
(declare-fun $generated@@367 (T@T) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@378 (T@U) Int)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@T T@T) T@U)
(declare-fun $generated@@407 (T@T T@T) T@T)
(declare-fun $generated@@408 (T@T) T@T)
(declare-fun $generated@@409 (T@T) T@T)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@T) T@U)
(declare-fun $generated@@425 (T@T T@T) T@T)
(declare-fun $generated@@426 (T@T) T@T)
(declare-fun $generated@@427 (T@T) T@T)
(declare-fun $generated@@447 (T@T T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@542 (T@U T@U) T@U)
(declare-fun $generated@@550 (T@U T@U) T@U)
(declare-fun $generated@@564 (T@T) T@U)
(declare-fun $generated@@588 () T@T)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@634 (T@U) T@U)
(declare-fun $generated@@635 (T@U Int) T@U)
(declare-fun $generated@@647 (T@U) Int)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@653 (T@U) T@U)
(declare-fun $generated@@657 (T@U) T@U)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@667 (T@U) Int)
(declare-fun $generated@@682 (T@U) Int)
(declare-fun $generated@@700 (T@U) T@U)
(declare-fun $generated@@763 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83 $generated@@84)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84))
))) (= (type $generated@@80) $generated@@70)))
(assert (forall (($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@81) (= (type $generated@@87) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80)  (and (and ($generated@@78 ($generated@@8 $generated@@85) $generated@@46) ($generated@@78 $generated@@86 $generated@@80)) ($generated@@78 $generated@@87 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@71)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@73 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert  (and (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Int) ) (! (= (type ($generated@@148 $generated@@152 $generated@@153 $generated@@154)) $generated@@81)
 :pattern ( ($generated@@148 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@149 $generated@@155)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@155))
))) (= (type $generated@@151) $generated@@150)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (and (= (type $generated@@156) $generated@@150) (= (type $generated@@157) $generated@@81)) (= ($generated@@148 $generated@@156 $generated@@157 $generated@@158) ($generated@@148 $generated@@151 $generated@@157 $generated@@158)))
 :pattern ( ($generated@@148 ($generated@@149 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@159 $generated@@160)) $generated@@74)
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 Int) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@81) (= (type $generated@@163) $generated@@81)) (= ($generated@@159 ($generated@@79 $generated@@161 $generated@@162 $generated@@163)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 Int) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (= (type $generated@@166) $generated@@81) (= (type $generated@@167) $generated@@81)) (= ($generated@@164 ($generated@@79 $generated@@165 $generated@@166 $generated@@167)) $generated@@165))
 :pattern ( ($generated@@79 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@81) (= (type $generated@@172) $generated@@81)) (= ($generated@@168 ($generated@@79 $generated@@170 $generated@@171 $generated@@172)) $generated@@171))
 :pattern ( ($generated@@79 $generated@@170 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@173 $generated@@174)) $generated@@81)
 :pattern ( ($generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@81) (= (type $generated@@177) $generated@@81)) (= ($generated@@173 ($generated@@79 $generated@@175 $generated@@176 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@79 $generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@2) ($generated@@78 $generated@@178 ($generated@@91 0)))
 :pattern ( ($generated@@78 $generated@@178 ($generated@@91 0)))
)))
(assert  (=> (<= 1 $generated@@179) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@150) (= (type $generated@@183) $generated@@81)) (or ($generated@@181 $generated@@183) (and (not (= 1 $generated@@179)) ($generated@@78 $generated@@183 $generated@@80)))) true)
 :pattern ( ($generated@@180 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@70)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@70) (= (type $generated@@189) $generated@@70)) (= (type $generated@@190) $generated@@81)) ($generated@@78 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@78 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (and (= ($generated@@1 $generated@@194) 16) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@192 $generated@@195))
))) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@193 $generated@@196)) $generated@@194)
 :pattern ( ($generated@@193 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@81) (= (type $generated@@198) $generated@@81)) true) (= ($generated@@191 $generated@@197 $generated@@198)  (and (= ($generated@@192 $generated@@197) ($generated@@192 $generated@@198)) (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)))))
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
)))
(assert (= (type $generated@@199) $generated@@81))
(assert (= ($generated@@159 $generated@@199) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@70)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@92 $generated@@194 $generated@@2)) (= (type $generated@@204) $generated@@70)) ($generated@@78 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@78 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@93 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@73 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@93) (= (type $generated@@255) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@256) ($generated@@72 $generated@@4))) (= (type $generated@@258) $generated@@93)) (= (type $generated@@259) ($generated@@72 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265)) ($generated@@207 $generated@@93 $generated@@4))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@73 (type $generated@@271))))
 (=> (and (and (and (and (= (type $generated@@266) $generated@@93) (= (type $generated@@267) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@268) ($generated@@72 $generated@@4))) (= (type $generated@@270) $generated@@93)) (= (type $generated@@271) ($generated@@72 $generated@@272))) (= ($generated@@0 ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (not (= $generated@@270 $generated@@266)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@267 $generated@@270) $generated@@268))) $generated@@269))))
 :pattern ( ($generated@@205 ($generated@@261 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (= (type $generated@@273) $generated@@70))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) (= (type $generated@@275) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@274 $generated@@273 $generated@@275) ($generated@@90 $generated@@274 $generated@@80 $generated@@275)))
 :pattern ( ($generated@@90 $generated@@274 $generated@@273 $generated@@275))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@276 $generated@@280)) $generated@@150)
 :pattern ( ($generated@@276 $generated@@280))
)))
(assert  (=> (<= 1 $generated@@179) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@150) (= (type $generated@@282) $generated@@81)) (or ($generated@@181 $generated@@282) (and (not (= 1 $generated@@179)) ($generated@@78 $generated@@282 $generated@@80)))) (and (=> (not ($generated@@277 $generated@@282)) (let (($generated@@283 ($generated@@173 $generated@@282)))
(let (($generated@@284 ($generated@@168 $generated@@282)))
(let (($generated@@285 ($generated@@164 $generated@@282)))
 (and ($generated@@181 $generated@@284) (=> ($generated@@180 $generated@@281 $generated@@284) (and ($generated@@181 $generated@@283) (=> ($generated@@180 $generated@@281 $generated@@283) (and ($generated@@278 $generated@@284) (=> (or ($generated@@279 $generated@@284 $generated@@199) (<= $generated@@285 ($generated@@164 $generated@@284))) ($generated@@278 $generated@@283))))))))))) (= ($generated@@180 ($generated@@276 $generated@@281) $generated@@282) (ite ($generated@@277 $generated@@282) true (let (($generated@@286 ($generated@@173 $generated@@282)))
(let (($generated@@287 ($generated@@168 $generated@@282)))
(let (($generated@@288 ($generated@@164 $generated@@282)))
 (and (and (and ($generated@@180 $generated@@281 $generated@@287) ($generated@@180 $generated@@281 $generated@@286)) (or ($generated@@279 $generated@@287 $generated@@199) (<= $generated@@288 ($generated@@164 $generated@@287)))) (or ($generated@@279 $generated@@286 $generated@@199) (<= $generated@@288 ($generated@@164 $generated@@286)))))))))))
 :pattern ( ($generated@@180 ($generated@@276 $generated@@281) $generated@@282))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@81)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (= (type $generated@@293) $generated@@70) (= (type $generated@@294) $generated@@70)) (= (type $generated@@295) $generated@@194)) (= (type $generated@@296) $generated@@194)) (= ($generated@@78 ($generated@@289 $generated@@295 $generated@@296) ($generated@@185 $generated@@293 $generated@@294))  (and ($generated@@290 $generated@@295 $generated@@293) ($generated@@290 $generated@@296 $generated@@294))))
 :pattern ( ($generated@@78 ($generated@@289 $generated@@295 $generated@@296) ($generated@@185 $generated@@293 $generated@@294)))
)))
(assert ($generated@@78 $generated@@199 $generated@@80))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@297 $generated@@298)) ($generated@@90 $generated@@199 $generated@@80 $generated@@298))
 :pattern ( ($generated@@90 $generated@@199 $generated@@80 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@95 (type $generated@@300))))
(= (type ($generated@@299 $generated@@300 $generated@@301)) ($generated@@92 $generated@@302 $generated@@2)))
 :pattern ( ($generated@@299 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 (type $generated@@305)))
 (=> (and (= (type $generated@@303) ($generated@@92 $generated@@306 $generated@@2)) (= (type $generated@@304) ($generated@@92 $generated@@306 $generated@@2))) (= ($generated ($generated@@97 ($generated@@299 $generated@@303 $generated@@304) $generated@@305)) (+ ($generated ($generated@@97 $generated@@303 $generated@@305)) ($generated ($generated@@97 $generated@@304 $generated@@305))))))
 :pattern ( ($generated@@97 ($generated@@299 $generated@@303 $generated@@304) $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@81) (= (type $generated@@308) $generated@@81)) (= ($generated@@191 $generated@@307 $generated@@308) (= $generated@@307 $generated@@308)))
 :pattern ( ($generated@@191 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@81) (= (type $generated@@310) $generated@@81)) (= ($generated@@279 $generated@@309 $generated@@310) (= $generated@@309 $generated@@310)))
 :pattern ( ($generated@@279 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@70)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) ($generated@@92 $generated@@194 $generated@@4)) (= (type $generated@@314) $generated@@70)) (= ($generated@@78 $generated@@313 ($generated@@311 $generated@@314)) (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@194) ($generated@@0 ($generated@@97 $generated@@313 $generated@@315))) ($generated@@290 $generated@@315 $generated@@314))
 :pattern ( ($generated@@97 $generated@@313 $generated@@315))
))))
 :pattern ( ($generated@@78 $generated@@313 ($generated@@311 $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@70)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@92 $generated@@194 $generated@@4)) (= (type $generated@@319) $generated@@70)) (= ($generated@@78 $generated@@318 ($generated@@316 $generated@@319)) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@194) ($generated@@0 ($generated@@97 $generated@@318 $generated@@320))) ($generated@@290 $generated@@320 $generated@@319))
 :pattern ( ($generated@@97 $generated@@318 $generated@@320))
))))
 :pattern ( ($generated@@78 $generated@@318 ($generated@@316 $generated@@319)))
)))
(assert (forall (($generated@@322 Int) ) (! (= ($generated@@321 $generated@@322) $generated@@322)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 (type $generated@@324)))
(= (type ($generated@@323 $generated@@324)) $generated@@325))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (= ($generated@@323 $generated@@326) $generated@@326)
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@327) $generated@@81) (= (type $generated@@328) $generated@@81)) (and ($generated@@277 $generated@@327) ($generated@@277 $generated@@328))) (= ($generated@@279 $generated@@327 $generated@@328) true))
 :pattern ( ($generated@@279 $generated@@327 $generated@@328) ($generated@@277 $generated@@327))
 :pattern ( ($generated@@279 $generated@@327 $generated@@328) ($generated@@277 $generated@@328))
)))
(assert (forall (($generated@@329 Int) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (= (type $generated@@330) $generated@@81) (= (type $generated@@331) $generated@@81)) (= (type $generated@@332) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@297 $generated@@332)) (= ($generated@@90 ($generated@@79 $generated@@329 $generated@@330 $generated@@331) $generated@@80 $generated@@332)  (and (and ($generated@@90 ($generated@@8 $generated@@329) $generated@@46 $generated@@332) ($generated@@90 $generated@@330 $generated@@80 $generated@@332)) ($generated@@90 $generated@@331 $generated@@80 $generated@@332))))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@329 $generated@@330 $generated@@331) $generated@@80 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@334) $generated@@70) (= (type $generated@@335) $generated@@70)) (= (type $generated@@336) $generated@@194)) (= (type $generated@@337) $generated@@194)) (= (type $generated@@338) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@297 $generated@@338)) (= ($generated@@90 ($generated@@289 $generated@@336 $generated@@337) ($generated@@185 $generated@@334 $generated@@335) $generated@@338)  (and ($generated@@333 $generated@@336 $generated@@334 $generated@@338) ($generated@@333 $generated@@337 $generated@@335 $generated@@338))))
 :pattern ( ($generated@@90 ($generated@@289 $generated@@336 $generated@@337) ($generated@@185 $generated@@334 $generated@@335) $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (! (= (type ($generated@@339 $generated@@341 $generated@@342)) ($generated@@92 $generated@@194 $generated@@2))
 :pattern ( ($generated@@339 $generated@@341 $generated@@342))
)))
(assert  (=> (<= 3 $generated@@179) (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@343) $generated@@150) (= (type $generated@@344) $generated@@81)) (or ($generated@@340 $generated@@344) (and (not (= 3 $generated@@179)) ($generated@@78 $generated@@344 $generated@@273)))) ($generated@@78 ($generated@@339 $generated@@343 $generated@@344) ($generated@@200 $generated@@46)))
 :pattern ( ($generated@@339 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@81) (= ($generated@@184 $generated@@345) (= ($generated@@159 $generated@@345) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@81) (= ($generated@@277 $generated@@346) (= ($generated@@159 $generated@@346) $generated@@63)))
 :pattern ( ($generated@@277 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@81) (= ($generated@@347 $generated@@348) (= ($generated@@159 $generated@@348) $generated@@65)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@81) ($generated@@347 $generated@@349)) (exists (($generated@@350 Int) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@81) (= (type $generated@@352) $generated@@81)) (= $generated@@349 ($generated@@79 $generated@@350 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@347 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@81) ($generated@@184 $generated@@353)) (exists (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (and (and (= (type $generated@@354) $generated@@194) (= (type $generated@@355) $generated@@194)) (= $generated@@353 ($generated@@289 $generated@@354 $generated@@355)))
 :no-pattern (type $generated@@354)
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
)))
 :pattern ( ($generated@@184 $generated@@353))
)))
(assert  (and (and (forall (($generated@@360 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@360)) 18)) (forall (($generated@@361 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@358 $generated@@361))
))) (forall (($generated@@362 T@T) ) (! (= (type ($generated@@356 $generated@@362)) ($generated@@358 $generated@@362))
 :pattern ( ($generated@@356 $generated@@362))
))))
(assert (forall (($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@356 $generated@@363)) 0)
 :pattern ( ($generated@@356 $generated@@363))
)))
(assert  (and (and (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= (type ($generated@@366 $generated@@369 $generated@@370)) ($generated@@92 $generated@@371 $generated@@2)))
 :pattern ( ($generated@@366 $generated@@369 $generated@@370))
)) (forall (($generated@@372 T@T) ) (! (= (type ($generated@@367 $generated@@372)) ($generated@@92 $generated@@372 $generated@@2))
 :pattern ( ($generated@@367 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (= (type ($generated@@368 $generated@@373)) $generated@@194)
 :pattern ( ($generated@@368 $generated@@373))
))))
(assert  (=> (<= 4 $generated@@179) (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 Int) ) (!  (=> (and (and (= (type $generated@@374) $generated@@150) (= (type $generated@@375) $generated@@81)) (or ($generated@@364 $generated@@375 $generated@@376) (and (not (= 4 $generated@@179)) ($generated@@78 $generated@@375 $generated@@273)))) (and ($generated@@365 ($generated@@339 ($generated@@276 $generated@@151) ($generated@@148 $generated@@374 $generated@@375 $generated@@376)) ($generated@@299 ($generated@@339 ($generated@@276 $generated@@151) $generated@@375) ($generated@@366 ($generated@@367 $generated@@194) ($generated@@368 ($generated@@8 $generated@@376))))) ($generated@@78 ($generated@@148 $generated@@374 $generated@@375 $generated@@376) $generated@@273)))
 :pattern ( ($generated@@148 $generated@@374 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@81) ($generated@@277 $generated@@377)) (= $generated@@377 $generated@@199))
 :pattern ( ($generated@@277 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
 (=> (= (type $generated@@379) ($generated@@92 $generated@@381 $generated@@2)) (= ($generated@@378 ($generated@@366 $generated@@379 $generated@@380)) (+ ($generated@@378 $generated@@379) 1))))
 :pattern ( ($generated@@378 ($generated@@366 $generated@@379 $generated@@380)))
)))
(assert  (=> (<= 1 $generated@@179) (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@150) (= (type $generated@@383) $generated@@81)) (or ($generated@@181 ($generated@@323 $generated@@383)) (and (not (= 1 $generated@@179)) ($generated@@78 $generated@@383 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@323 ($generated@@11 ($generated@@277 ($generated@@323 $generated@@383)))))) (let (($generated@@384 ($generated@@323 ($generated@@173 ($generated@@323 $generated@@383)))))
(let (($generated@@385 ($generated@@323 ($generated@@168 ($generated@@323 $generated@@383)))))
(let (($generated@@386 ($generated@@321 ($generated@@164 ($generated@@323 $generated@@383)))))
 (and ($generated@@181 $generated@@385) (=> ($generated@@180 ($generated@@276 $generated@@382) $generated@@385) (and ($generated@@181 $generated@@384) (=> ($generated@@180 ($generated@@276 $generated@@382) $generated@@384) (and ($generated@@278 $generated@@385) (=> (or ($generated@@279 $generated@@385 $generated@@199) (<= $generated@@386 ($generated@@164 $generated@@385))) ($generated@@278 $generated@@384))))))))))) (= ($generated@@180 ($generated@@276 $generated@@382) ($generated@@323 $generated@@383)) (ite ($generated@@277 ($generated@@323 $generated@@383)) true (let (($generated@@387 ($generated@@323 ($generated@@173 ($generated@@323 $generated@@383)))))
(let (($generated@@388 ($generated@@323 ($generated@@168 ($generated@@323 $generated@@383)))))
(let (($generated@@389 ($generated@@321 ($generated@@164 ($generated@@323 $generated@@383)))))
 (and (and (and ($generated@@180 ($generated@@276 $generated@@382) $generated@@388) ($generated@@180 ($generated@@276 $generated@@382) $generated@@387)) (or ($generated@@279 $generated@@388 $generated@@199) (<= $generated@@389 ($generated@@321 ($generated@@164 $generated@@388))))) (or ($generated@@279 $generated@@387 $generated@@199) (<= $generated@@389 ($generated@@321 ($generated@@164 $generated@@387))))))))))))
 :weight 3
 :pattern ( ($generated@@180 ($generated@@276 $generated@@382) ($generated@@323 $generated@@383)))
))))
(assert  (=> (<= 3 $generated@@179) (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@390) $generated@@150) (= (type $generated@@391) $generated@@81)) (or ($generated@@340 ($generated@@323 $generated@@391)) (and (not (= 3 $generated@@179)) ($generated@@78 $generated@@391 $generated@@273)))) (and (=> (not ($generated@@0 ($generated@@323 ($generated@@11 ($generated@@277 ($generated@@323 $generated@@391)))))) (let (($generated@@392 ($generated@@323 ($generated@@173 ($generated@@323 $generated@@391)))))
(let (($generated@@393 ($generated@@323 ($generated@@168 ($generated@@323 $generated@@391)))))
 (and ($generated@@340 $generated@@393) ($generated@@340 $generated@@392))))) (= ($generated@@339 ($generated@@276 $generated@@390) ($generated@@323 $generated@@391)) (ite ($generated@@277 ($generated@@323 $generated@@391)) ($generated@@367 $generated@@194) (let (($generated@@394 ($generated@@323 ($generated@@173 ($generated@@323 $generated@@391)))))
(let (($generated@@395 ($generated@@323 ($generated@@168 ($generated@@323 $generated@@391)))))
(let (($generated@@396 ($generated@@321 ($generated@@164 ($generated@@323 $generated@@391)))))
($generated@@299 ($generated@@299 ($generated@@366 ($generated@@367 $generated@@194) ($generated@@368 ($generated@@8 $generated@@396))) ($generated@@339 ($generated@@276 $generated@@390) $generated@@395)) ($generated@@339 ($generated@@276 $generated@@390) $generated@@394)))))))))
 :weight 3
 :pattern ( ($generated@@339 ($generated@@276 $generated@@390) ($generated@@323 $generated@@391)))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@70) (= (type $generated@@399) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@333 ($generated@@368 $generated@@397) $generated@@398 $generated@@399) ($generated@@90 $generated@@397 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@333 ($generated@@368 $generated@@397) $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@400) $generated@@81) (= (type $generated@@401) $generated@@81)) (and ($generated@@347 $generated@@400) ($generated@@347 $generated@@401))) (= ($generated@@279 $generated@@400 $generated@@401)  (and (and (= ($generated@@164 $generated@@400) ($generated@@164 $generated@@401)) ($generated@@279 ($generated@@168 $generated@@400) ($generated@@168 $generated@@401))) ($generated@@279 ($generated@@173 $generated@@400) ($generated@@173 $generated@@401)))))
 :pattern ( ($generated@@279 $generated@@400 $generated@@401) ($generated@@347 $generated@@400))
 :pattern ( ($generated@@279 $generated@@400 $generated@@401) ($generated@@347 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@95 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@92 $generated@@403 $generated@@2)) (and (= (= ($generated@@378 $generated@@402) 0) (= $generated@@402 ($generated@@367 $generated@@403))) (=> (not (= ($generated@@378 $generated@@402) 0)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (< 0 ($generated ($generated@@97 $generated@@402 $generated@@404))))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@378 $generated@@402))
)))
(assert  (and (and (and (and (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (= ($generated@@1 ($generated@@407 $generated@@410 $generated@@411)) 19)) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= ($generated@@408 ($generated@@407 $generated@@412 $generated@@413)) $generated@@412)
 :pattern ( ($generated@@407 $generated@@412 $generated@@413))
))) (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (! (= ($generated@@409 ($generated@@407 $generated@@414 $generated@@415)) $generated@@415)
 :pattern ( ($generated@@407 $generated@@414 $generated@@415))
))) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@408 (type $generated@@416))))
(= (type ($generated@@405 $generated@@416)) ($generated@@92 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@416))
))) (forall (($generated@@418 T@T) ($generated@@419 T@T) ) (! (= (type ($generated@@406 $generated@@418 $generated@@419)) ($generated@@407 $generated@@418 $generated@@419))
 :pattern ( ($generated@@406 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@T) ) (! (let (($generated@@422 (type $generated@@420)))
 (not ($generated@@0 ($generated@@97 ($generated@@405 ($generated@@406 $generated@@422 $generated@@421)) $generated@@420))))
 :pattern ( (let (($generated@@422 (type $generated@@420)))
($generated@@97 ($generated@@405 ($generated@@406 $generated@@422 $generated@@421)) $generated@@420)))
)))
(assert  (and (and (and (and (forall (($generated@@428 T@T) ($generated@@429 T@T) ) (= ($generated@@1 ($generated@@425 $generated@@428 $generated@@429)) 20)) (forall (($generated@@430 T@T) ($generated@@431 T@T) ) (! (= ($generated@@426 ($generated@@425 $generated@@430 $generated@@431)) $generated@@430)
 :pattern ( ($generated@@425 $generated@@430 $generated@@431))
))) (forall (($generated@@432 T@T) ($generated@@433 T@T) ) (! (= ($generated@@427 ($generated@@425 $generated@@432 $generated@@433)) $generated@@433)
 :pattern ( ($generated@@425 $generated@@432 $generated@@433))
))) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@426 (type $generated@@434))))
(= (type ($generated@@423 $generated@@434)) ($generated@@92 $generated@@435 $generated@@4)))
 :pattern ( ($generated@@423 $generated@@434))
))) (forall (($generated@@436 T@T) ($generated@@437 T@T) ) (! (= (type ($generated@@424 $generated@@436 $generated@@437)) ($generated@@425 $generated@@436 $generated@@437))
 :pattern ( ($generated@@424 $generated@@436 $generated@@437))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@T) ) (! (let (($generated@@440 (type $generated@@438)))
 (not ($generated@@0 ($generated@@97 ($generated@@423 ($generated@@424 $generated@@440 $generated@@439)) $generated@@438))))
 :pattern ( (let (($generated@@440 (type $generated@@438)))
($generated@@97 ($generated@@423 ($generated@@424 $generated@@440 $generated@@439)) $generated@@438)))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@95 (type $generated@@441))))
 (=> (and (= (type $generated@@441) ($generated@@92 $generated@@443 $generated@@2)) (= (type $generated@@442) ($generated@@92 $generated@@443 $generated@@2))) (= ($generated@@378 ($generated@@299 $generated@@441 $generated@@442)) (+ ($generated@@378 $generated@@441) ($generated@@378 $generated@@442)))))
 :pattern ( ($generated@@378 ($generated@@299 $generated@@441 $generated@@442)))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@95 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@92 $generated@@445 $generated@@2)) (= ($generated@@201 $generated@@444) (forall (($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@445) (and (<= 0 ($generated ($generated@@97 $generated@@444 $generated@@446))) (<= ($generated ($generated@@97 $generated@@444 $generated@@446)) ($generated@@378 $generated@@444))))
 :pattern ( ($generated@@97 $generated@@444 $generated@@446))
)))))
 :pattern ( ($generated@@201 $generated@@444))
)))
(assert (forall (($generated@@448 T@T) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@448)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@194) ($generated@@290 $generated@@450 $generated@@80)) (and (= ($generated@@368 ($generated@@447 $generated@@81 $generated@@450)) $generated@@450) ($generated@@78 ($generated@@447 $generated@@81 $generated@@450) $generated@@80)))
 :pattern ( ($generated@@290 $generated@@450 $generated@@80))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@194) ($generated@@290 $generated@@451 $generated@@273)) (and (= ($generated@@368 ($generated@@447 $generated@@81 $generated@@451)) $generated@@451) ($generated@@78 ($generated@@447 $generated@@81 $generated@@451) $generated@@273)))
 :pattern ( ($generated@@290 $generated@@451 $generated@@273))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
 (=> (= (type $generated@@452) ($generated@@92 $generated@@454 $generated@@2)) (= ($generated ($generated@@97 ($generated@@366 $generated@@452 $generated@@453) $generated@@453)) (+ ($generated ($generated@@97 $generated@@452 $generated@@453)) 1))))
 :pattern ( ($generated@@366 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@456)))
 (=> (and (and (= (type $generated@@455) ($generated@@92 $generated@@458 $generated@@2)) (= (type $generated@@457) $generated@@458)) (< 0 ($generated ($generated@@97 $generated@@455 $generated@@457)))) (< 0 ($generated ($generated@@97 ($generated@@366 $generated@@455 $generated@@456) $generated@@457)))))
 :pattern ( ($generated@@366 $generated@@455 $generated@@456) ($generated@@97 $generated@@455 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@409 (type $generated@@459))))
(let (($generated@@461 ($generated@@408 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@407 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@406 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ) (!  (and (= (type $generated@@462) $generated@@461) ($generated@@0 ($generated@@97 ($generated@@405 $generated@@459) $generated@@462)))
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@405 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@409 (type $generated@@464))))
(= (type ($generated@@463 $generated@@464)) ($generated@@92 $generated@@465 $generated@@4)))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@409 (type $generated@@466))))
(let (($generated@@468 ($generated@@408 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@407 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@406 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@467) ($generated@@0 ($generated@@97 ($generated@@463 $generated@@466) $generated@@469)))
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@463 $generated@@466))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@427 (type $generated@@470))))
(let (($generated@@472 ($generated@@426 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@425 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@424 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@472) ($generated@@0 ($generated@@97 ($generated@@423 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@423 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@427 (type $generated@@475))))
(= (type ($generated@@474 $generated@@475)) ($generated@@92 $generated@@476 $generated@@4)))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@427 (type $generated@@477))))
(let (($generated@@479 ($generated@@426 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@425 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@424 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ) (!  (and (= (type $generated@@480) $generated@@478) ($generated@@0 ($generated@@97 ($generated@@474 $generated@@477) $generated@@480)))
 :no-pattern (type $generated@@480)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
))))))
 :pattern ( ($generated@@474 $generated@@477))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 Int) ) (!  (=> (and (= (type $generated@@481) $generated@@150) (= (type $generated@@482) $generated@@81)) (= ($generated@@148 ($generated@@276 $generated@@481) $generated@@482 $generated@@483) ($generated@@148 $generated@@481 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@148 ($generated@@276 $generated@@481) $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@485)))
 (=> (and (= (type $generated@@484) ($generated@@92 $generated@@487 $generated@@2)) (= (type $generated@@486) $generated@@487)) (= (< 0 ($generated ($generated@@97 ($generated@@366 $generated@@484 $generated@@485) $generated@@486)))  (or (= $generated@@486 $generated@@485) (< 0 ($generated ($generated@@97 $generated@@484 $generated@@486)))))))
 :pattern ( ($generated@@97 ($generated@@366 $generated@@484 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) ($generated@@92 $generated@@194 $generated@@2)) (= (type $generated@@489) $generated@@70)) (= ($generated@@78 $generated@@488 ($generated@@200 $generated@@489)) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@194) (< 0 ($generated ($generated@@97 $generated@@488 $generated@@490)))) ($generated@@290 $generated@@490 $generated@@489))
 :pattern ( ($generated@@97 $generated@@488 $generated@@490))
))))
 :pattern ( ($generated@@78 $generated@@488 ($generated@@200 $generated@@489)))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@95 (type $generated@@491))))
 (=> (and (= (type $generated@@491) ($generated@@92 $generated@@493 $generated@@2)) (= (type $generated@@492) ($generated@@92 $generated@@493 $generated@@2))) (= ($generated@@365 $generated@@491 $generated@@492) (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@493) (= ($generated ($generated@@97 $generated@@491 $generated@@494)) ($generated ($generated@@97 $generated@@492 $generated@@494))))
 :pattern ( ($generated@@97 $generated@@491 $generated@@494))
 :pattern ( ($generated@@97 $generated@@492 $generated@@494))
)))))
 :pattern ( ($generated@@365 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@81) ($generated@@278 $generated@@495)) (or ($generated@@277 $generated@@495) ($generated@@347 $generated@@495)))
 :pattern ( ($generated@@278 $generated@@495))
)))
(assert  (=> (<= 3 $generated@@179) (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@496) $generated@@150) (= (type $generated@@497) $generated@@81)) (or ($generated@@340 $generated@@497) (and (not (= 3 $generated@@179)) ($generated@@78 $generated@@497 $generated@@273)))) (and (=> (not ($generated@@277 $generated@@497)) (let (($generated@@498 ($generated@@173 $generated@@497)))
(let (($generated@@499 ($generated@@168 $generated@@497)))
 (and ($generated@@340 $generated@@499) ($generated@@340 $generated@@498))))) (= ($generated@@339 ($generated@@276 $generated@@496) $generated@@497) (ite ($generated@@277 $generated@@497) ($generated@@367 $generated@@194) (let (($generated@@500 ($generated@@173 $generated@@497)))
(let (($generated@@501 ($generated@@168 $generated@@497)))
(let (($generated@@502 ($generated@@164 $generated@@497)))
($generated@@299 ($generated@@299 ($generated@@366 ($generated@@367 $generated@@194) ($generated@@368 ($generated@@8 $generated@@502))) ($generated@@339 $generated@@496 $generated@@501)) ($generated@@339 $generated@@496 $generated@@500)))))))))
 :pattern ( ($generated@@339 ($generated@@276 $generated@@496) $generated@@497))
))))
(assert  (=> (<= 4 $generated@@179) (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 Int) ) (!  (=> (and (and (= (type $generated@@503) $generated@@150) (= (type $generated@@504) $generated@@81)) (or ($generated@@364 ($generated@@323 $generated@@504) ($generated@@321 $generated@@505)) (and (not (= 4 $generated@@179)) ($generated@@78 $generated@@504 $generated@@273)))) (and (and ($generated@@278 ($generated@@323 $generated@@504)) (=> (not ($generated@@279 $generated@@504 $generated@@199)) (and (=> ($generated@@0 ($generated@@323 ($generated@@11 (< $generated@@505 ($generated@@164 ($generated@@323 $generated@@504)))))) ($generated@@364 ($generated@@323 ($generated@@173 ($generated@@323 $generated@@504))) ($generated@@321 ($generated@@164 ($generated@@323 $generated@@504))))) (=> (not ($generated@@0 ($generated@@323 ($generated@@11 (< $generated@@505 ($generated@@164 ($generated@@323 $generated@@504))))))) ($generated@@364 ($generated@@323 ($generated@@173 ($generated@@323 $generated@@504))) ($generated@@321 $generated@@505)))))) (= ($generated@@148 ($generated@@276 $generated@@503) ($generated@@323 $generated@@504) ($generated@@321 $generated@@505)) (ite ($generated@@279 $generated@@504 $generated@@199) ($generated@@79 ($generated@@321 $generated@@505) ($generated@@323 $generated@@199) ($generated@@323 $generated@@199)) (ite (< $generated@@505 ($generated@@164 ($generated@@323 $generated@@504))) ($generated@@79 ($generated@@321 $generated@@505) ($generated@@323 ($generated@@148 ($generated@@276 $generated@@503) ($generated@@323 ($generated@@173 ($generated@@323 $generated@@504))) ($generated@@321 ($generated@@164 ($generated@@323 $generated@@504))))) ($generated@@323 ($generated@@168 ($generated@@323 $generated@@504)))) ($generated@@79 ($generated@@321 ($generated@@164 ($generated@@323 $generated@@504))) ($generated@@323 ($generated@@148 ($generated@@276 $generated@@503) ($generated@@323 ($generated@@173 ($generated@@323 $generated@@504))) ($generated@@321 $generated@@505))) ($generated@@323 ($generated@@168 ($generated@@323 $generated@@504)))))))))
 :weight 3
 :pattern ( ($generated@@148 ($generated@@276 $generated@@503) ($generated@@323 $generated@@504) ($generated@@321 $generated@@505)))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@92 $generated@@194 $generated@@4)) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@506 ($generated@@311 $generated@@507) $generated@@508) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@194) ($generated@@0 ($generated@@97 $generated@@506 $generated@@509))) ($generated@@333 $generated@@509 $generated@@507 $generated@@508))
 :pattern ( ($generated@@97 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@90 $generated@@506 ($generated@@311 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@92 $generated@@194 $generated@@4)) (= (type $generated@@511) $generated@@70)) (= (type $generated@@512) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@510 ($generated@@316 $generated@@511) $generated@@512) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@194) ($generated@@0 ($generated@@97 $generated@@510 $generated@@513))) ($generated@@333 $generated@@513 $generated@@511 $generated@@512))
 :pattern ( ($generated@@97 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@90 $generated@@510 ($generated@@316 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated ($generated@@97 ($generated@@367 $generated@@515) $generated@@514)) 0))
 :pattern ( (let (($generated@@515 (type $generated@@514)))
($generated@@97 ($generated@@367 $generated@@515) $generated@@514)))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) ($generated@@92 $generated@@194 $generated@@4))
 :pattern ( ($generated@@516 $generated@@518))
)) (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@409 (type $generated@@519))))
(let (($generated@@521 ($generated@@408 (type $generated@@519))))
(= (type ($generated@@517 $generated@@519)) ($generated@@92 $generated@@521 $generated@@520))))
 :pattern ( ($generated@@517 $generated@@519))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) ($generated@@407 $generated@@194 $generated@@194)) (= (type $generated@@523) $generated@@194)) (= ($generated@@0 ($generated@@97 ($generated@@516 $generated@@522) $generated@@523))  (and ($generated@@0 ($generated@@97 ($generated@@405 $generated@@522) ($generated@@192 ($generated@@447 $generated@@81 $generated@@523)))) (= ($generated@@97 ($generated@@517 $generated@@522) ($generated@@192 ($generated@@447 $generated@@81 $generated@@523))) ($generated@@193 ($generated@@447 $generated@@81 $generated@@523))))))
 :pattern ( ($generated@@97 ($generated@@516 $generated@@522) $generated@@523))
)))
(assert  (and (forall (($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@526)) ($generated@@92 $generated@@194 $generated@@4))
 :pattern ( ($generated@@524 $generated@@526))
)) (forall (($generated@@527 T@U) ) (! (let (($generated@@528 ($generated@@427 (type $generated@@527))))
(let (($generated@@529 ($generated@@426 (type $generated@@527))))
(= (type ($generated@@525 $generated@@527)) ($generated@@92 $generated@@529 $generated@@528))))
 :pattern ( ($generated@@525 $generated@@527))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) ($generated@@425 $generated@@194 $generated@@194)) (= (type $generated@@531) $generated@@194)) (= ($generated@@0 ($generated@@97 ($generated@@524 $generated@@530) $generated@@531))  (and ($generated@@0 ($generated@@97 ($generated@@423 $generated@@530) ($generated@@192 ($generated@@447 $generated@@81 $generated@@531)))) (= ($generated@@97 ($generated@@525 $generated@@530) ($generated@@192 ($generated@@447 $generated@@81 $generated@@531))) ($generated@@193 ($generated@@447 $generated@@81 $generated@@531))))))
 :pattern ( ($generated@@97 ($generated@@524 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(let (($generated@@535 ($generated@@408 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@407 $generated@@535 $generated@@534)) (= ($generated@@0 ($generated@@97 ($generated@@463 $generated@@532) $generated@@533)) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@535) (and ($generated@@0 ($generated@@97 ($generated@@405 $generated@@532) $generated@@536)) (= $generated@@533 ($generated@@97 ($generated@@517 $generated@@532) $generated@@536))))
 :pattern ( ($generated@@97 ($generated@@405 $generated@@532) $generated@@536))
 :pattern ( ($generated@@97 ($generated@@517 $generated@@532) $generated@@536))
))))))
 :pattern ( ($generated@@97 ($generated@@463 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(let (($generated@@540 ($generated@@426 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@425 $generated@@540 $generated@@539)) (= ($generated@@0 ($generated@@97 ($generated@@474 $generated@@537) $generated@@538)) (exists (($generated@@541 T@U) ) (!  (and (= (type $generated@@541) $generated@@540) (and ($generated@@0 ($generated@@97 ($generated@@423 $generated@@537) $generated@@541)) (= $generated@@538 ($generated@@97 ($generated@@525 $generated@@537) $generated@@541))))
 :pattern ( ($generated@@97 ($generated@@423 $generated@@537) $generated@@541))
 :pattern ( ($generated@@97 ($generated@@525 $generated@@537) $generated@@541))
))))))
 :pattern ( ($generated@@97 ($generated@@474 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@542 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) ($generated@@407 $generated@@194 $generated@@194)) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@545 ($generated@@542 $generated@@546 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@194) ($generated@@0 ($generated@@97 ($generated@@405 $generated@@545) $generated@@549))) (and ($generated@@333 ($generated@@97 ($generated@@517 $generated@@545) $generated@@549) $generated@@547 $generated@@548) ($generated@@333 $generated@@549 $generated@@546 $generated@@548)))
 :pattern ( ($generated@@97 ($generated@@517 $generated@@545) $generated@@549))
 :pattern ( ($generated@@97 ($generated@@405 $generated@@545) $generated@@549))
))))
 :pattern ( ($generated@@90 $generated@@545 ($generated@@542 $generated@@546 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (! (= (type ($generated@@550 $generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@550 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) ($generated@@425 $generated@@194 $generated@@194)) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@553 ($generated@@550 $generated@@554 $generated@@555) $generated@@556) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@194) ($generated@@0 ($generated@@97 ($generated@@423 $generated@@553) $generated@@557))) (and ($generated@@333 ($generated@@97 ($generated@@525 $generated@@553) $generated@@557) $generated@@555 $generated@@556) ($generated@@333 $generated@@557 $generated@@554 $generated@@556)))
 :pattern ( ($generated@@97 ($generated@@525 $generated@@553) $generated@@557))
 :pattern ( ($generated@@97 ($generated@@423 $generated@@553) $generated@@557))
))))
 :pattern ( ($generated@@90 $generated@@553 ($generated@@550 $generated@@554 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@81)) (= ($generated@@180 $generated@@558 $generated@@559) ($generated@@180 $generated@@151 $generated@@559)))
 :pattern ( ($generated@@180 ($generated@@149 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@95 (type $generated@@560))))
 (=> (and (and (= (type $generated@@560) ($generated@@92 $generated@@562 $generated@@2)) (= (type $generated@@561) ($generated@@92 $generated@@562 $generated@@2))) ($generated@@365 $generated@@560 $generated@@561)) (= $generated@@560 $generated@@561)))
 :pattern ( ($generated@@365 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@81) ($generated@@78 $generated@@563 $generated@@80)) (or ($generated@@277 $generated@@563) ($generated@@347 $generated@@563)))
 :pattern ( ($generated@@347 $generated@@563) ($generated@@78 $generated@@563 $generated@@80))
 :pattern ( ($generated@@277 $generated@@563) ($generated@@78 $generated@@563 $generated@@80))
)))
(assert (forall (($generated@@565 T@T) ) (! (= (type ($generated@@564 $generated@@565)) ($generated@@92 $generated@@565 $generated@@4))
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@427 (type $generated@@566))))
(let (($generated@@568 ($generated@@426 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@425 $generated@@568 $generated@@567)) (= (= $generated@@566 ($generated@@424 $generated@@568 $generated@@567)) (= ($generated@@423 $generated@@566) ($generated@@564 $generated@@568))))))
 :pattern ( ($generated@@423 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@427 (type $generated@@569))))
(let (($generated@@571 ($generated@@426 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@425 $generated@@571 $generated@@570)) (= (= $generated@@569 ($generated@@424 $generated@@571 $generated@@570)) (= ($generated@@474 $generated@@569) ($generated@@564 $generated@@570))))))
 :pattern ( ($generated@@474 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@427 (type $generated@@572))))
(let (($generated@@574 ($generated@@426 (type $generated@@572))))
 (=> (= (type $generated@@572) ($generated@@425 $generated@@574 $generated@@573)) (= (= $generated@@572 ($generated@@424 $generated@@574 $generated@@573)) (= ($generated@@524 $generated@@572) ($generated@@564 $generated@@194))))))
 :pattern ( ($generated@@524 $generated@@572))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@409 (type $generated@@575))))
(let (($generated@@577 ($generated@@408 (type $generated@@575))))
 (=> (= (type $generated@@575) ($generated@@407 $generated@@577 $generated@@576)) (or (= $generated@@575 ($generated@@406 $generated@@577 $generated@@576)) (exists (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (and (and (= (type $generated@@578) $generated@@194) (= (type $generated@@579) $generated@@194)) ($generated@@0 ($generated@@97 ($generated@@516 $generated@@575) ($generated@@368 ($generated@@289 $generated@@578 $generated@@579)))))
 :no-pattern (type $generated@@578)
 :no-pattern (type $generated@@579)
 :no-pattern ($generated $generated@@578)
 :no-pattern ($generated@@0 $generated@@578)
 :no-pattern ($generated $generated@@579)
 :no-pattern ($generated@@0 $generated@@579)
))))))
 :pattern ( ($generated@@516 $generated@@575))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@427 (type $generated@@580))))
(let (($generated@@582 ($generated@@426 (type $generated@@580))))
 (=> (= (type $generated@@580) ($generated@@425 $generated@@582 $generated@@581)) (or (= $generated@@580 ($generated@@424 $generated@@582 $generated@@581)) (exists (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (and (and (= (type $generated@@583) $generated@@194) (= (type $generated@@584) $generated@@194)) ($generated@@0 ($generated@@97 ($generated@@524 $generated@@580) ($generated@@368 ($generated@@289 $generated@@583 $generated@@584)))))
 :no-pattern (type $generated@@583)
 :no-pattern (type $generated@@584)
 :no-pattern ($generated $generated@@583)
 :no-pattern ($generated@@0 $generated@@583)
 :no-pattern ($generated $generated@@584)
 :no-pattern ($generated@@0 $generated@@584)
))))))
 :pattern ( ($generated@@524 $generated@@580))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@194) ($generated@@290 $generated@@585 $generated@@46)) (and (= ($generated@@368 ($generated@@447 $generated@@2 $generated@@585)) $generated@@585) ($generated@@78 ($generated@@447 $generated@@2 $generated@@585) $generated@@46)))
 :pattern ( ($generated@@290 $generated@@585 $generated@@46))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@194) ($generated@@290 $generated@@586 $generated@@47)) (and (= ($generated@@368 ($generated@@447 $generated@@3 $generated@@586)) $generated@@586) ($generated@@78 ($generated@@447 $generated@@3 $generated@@586) $generated@@47)))
 :pattern ( ($generated@@290 $generated@@586 $generated@@47))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@194) ($generated@@290 $generated@@587 $generated@@44)) (and (= ($generated@@368 ($generated@@447 $generated@@4 $generated@@587)) $generated@@587) ($generated@@78 ($generated@@447 $generated@@4 $generated@@587) $generated@@44)))
 :pattern ( ($generated@@290 $generated@@587 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@588) 21))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@194) ($generated@@290 $generated@@589 $generated@@45)) (and (= ($generated@@368 ($generated@@447 $generated@@588 $generated@@589)) $generated@@589) ($generated@@78 ($generated@@447 $generated@@588 $generated@@589) $generated@@45)))
 :pattern ( ($generated@@290 $generated@@589 $generated@@45))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) (= (type $generated@@591) $generated@@81)) (= ($generated@@180 ($generated@@276 $generated@@590) $generated@@591) ($generated@@180 $generated@@590 $generated@@591)))
 :pattern ( ($generated@@180 ($generated@@276 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@70) (= ($generated@@290 ($generated@@368 $generated@@592) $generated@@593) ($generated@@78 $generated@@592 $generated@@593)))
 :pattern ( ($generated@@290 ($generated@@368 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@95 (type $generated@@594))))
 (=> (= (type $generated@@594) ($generated@@92 $generated@@595 $generated@@2)) (<= 0 ($generated@@378 $generated@@594))))
 :pattern ( ($generated@@378 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@359 (type $generated@@596))))
 (=> (= (type $generated@@596) ($generated@@358 $generated@@597)) (<= 0 ($generated@@357 $generated@@596))))
 :pattern ( ($generated@@357 $generated@@596))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@70)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@70) (= (type $generated@@601) $generated@@70)) (= ($generated@@598 ($generated@@542 $generated@@600 $generated@@601)) $generated@@600))
 :pattern ( ($generated@@542 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@70)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@70) (= (type $generated@@605) $generated@@70)) (= ($generated@@602 ($generated@@542 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@542 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= ($generated@@88 ($generated@@542 $generated@@606 $generated@@607)) $generated@@58))
 :pattern ( ($generated@@542 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ) (! (= (type ($generated@@608 $generated@@609)) $generated@@70)
 :pattern ( ($generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@70) (= (type $generated@@611) $generated@@70)) (= ($generated@@608 ($generated@@550 $generated@@610 $generated@@611)) $generated@@610))
 :pattern ( ($generated@@550 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@70)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@70) (= (type $generated@@615) $generated@@70)) (= ($generated@@612 ($generated@@550 $generated@@614 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@550 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@70) (= (type $generated@@617) $generated@@70)) (= ($generated@@88 ($generated@@550 $generated@@616 $generated@@617)) $generated@@59))
 :pattern ( ($generated@@550 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@194) (= (type $generated@@619) $generated@@194)) (= ($generated@@159 ($generated@@289 $generated@@618 $generated@@619)) $generated@@61))
 :pattern ( ($generated@@289 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@70)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@70) (= (type $generated@@623) $generated@@70)) (= ($generated@@620 ($generated@@185 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@185 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@70)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@70) (= (type $generated@@627) $generated@@70)) (= ($generated@@624 ($generated@@185 $generated@@626 $generated@@627)) $generated@@627))
 :pattern ( ($generated@@185 $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@194) (= (type $generated@@629) $generated@@194)) (= ($generated@@192 ($generated@@289 $generated@@628 $generated@@629)) $generated@@628))
 :pattern ( ($generated@@289 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@194) (= (type $generated@@631) $generated@@194)) (= ($generated@@193 ($generated@@289 $generated@@630 $generated@@631)) $generated@@631))
 :pattern ( ($generated@@289 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@150) (= (type $generated@@633) $generated@@81)) (= ($generated@@339 $generated@@632 $generated@@633) ($generated@@339 $generated@@151 $generated@@633)))
 :pattern ( ($generated@@339 ($generated@@149 $generated@@632) $generated@@633))
)))
(assert  (and (forall (($generated@@636 T@U) ) (! (= (type ($generated@@634 $generated@@636)) $generated@@70)
 :pattern ( ($generated@@634 $generated@@636))
)) (forall (($generated@@637 T@U) ($generated@@638 Int) ) (! (let (($generated@@639 ($generated@@359 (type $generated@@637))))
(= (type ($generated@@635 $generated@@637 $generated@@638)) $generated@@639))
 :pattern ( ($generated@@635 $generated@@637 $generated@@638))
))))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@358 $generated@@194)) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@640 ($generated@@634 $generated@@641) $generated@@642) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@357 $generated@@640))) ($generated@@333 ($generated@@635 $generated@@640 $generated@@643) $generated@@641 $generated@@642))
 :pattern ( ($generated@@635 $generated@@640 $generated@@643))
))))
 :pattern ( ($generated@@90 $generated@@640 ($generated@@634 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@644 Int) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@81) (= (type $generated@@646) $generated@@81)) (= ($generated@@79 ($generated@@321 $generated@@644) ($generated@@323 $generated@@645) ($generated@@323 $generated@@646)) ($generated@@323 ($generated@@79 $generated@@644 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@79 ($generated@@321 $generated@@644) ($generated@@323 $generated@@645) ($generated@@323 $generated@@646)))
)))
(assert (forall (($generated@@648 Int) ) (! (= ($generated@@647 ($generated@@91 $generated@@648)) $generated@@648)
 :pattern ( ($generated@@91 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@70)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@70) (= ($generated@@649 ($generated@@311 $generated@@651)) $generated@@651))
 :pattern ( ($generated@@311 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@70) (= ($generated@@88 ($generated@@311 $generated@@652)) $generated@@54))
 :pattern ( ($generated@@311 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ) (! (= (type ($generated@@653 $generated@@654)) $generated@@70)
 :pattern ( ($generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@70) (= ($generated@@653 ($generated@@316 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@316 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@70) (= ($generated@@88 ($generated@@316 $generated@@656)) $generated@@55))
 :pattern ( ($generated@@316 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ) (! (= (type ($generated@@657 $generated@@658)) $generated@@70)
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@70) (= ($generated@@657 ($generated@@200 $generated@@659)) $generated@@659))
 :pattern ( ($generated@@200 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@70) (= ($generated@@88 ($generated@@200 $generated@@660)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ) (! (= (type ($generated@@661 $generated@@662)) $generated@@70)
 :pattern ( ($generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@70) (= ($generated@@661 ($generated@@634 $generated@@663)) $generated@@663))
 :pattern ( ($generated@@634 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@70) (= ($generated@@88 ($generated@@634 $generated@@664)) $generated@@57))
 :pattern ( ($generated@@634 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ) (! (let (($generated@@666 (type $generated@@665)))
(= ($generated@@447 $generated@@666 ($generated@@368 $generated@@665)) $generated@@665))
 :pattern ( ($generated@@368 $generated@@665))
)))
(assert (forall (($generated@@668 Int) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@81) (= (type $generated@@670) $generated@@81)) (< ($generated@@667 $generated@@669) ($generated@@667 ($generated@@79 $generated@@668 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@79 $generated@@668 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 Int) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@81) (= (type $generated@@673) $generated@@81)) (< ($generated@@667 $generated@@673) ($generated@@667 ($generated@@79 $generated@@671 $generated@@672 $generated@@673))))
 :pattern ( ($generated@@79 $generated@@671 $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@674) ($generated@@407 $generated@@194 $generated@@194)) (= (type $generated@@675) $generated@@70)) (= (type $generated@@676) $generated@@70)) (= ($generated@@78 $generated@@674 ($generated@@542 $generated@@675 $generated@@676)) (forall (($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@194) ($generated@@0 ($generated@@97 ($generated@@405 $generated@@674) $generated@@677))) (and ($generated@@290 ($generated@@97 ($generated@@517 $generated@@674) $generated@@677) $generated@@676) ($generated@@290 $generated@@677 $generated@@675)))
 :pattern ( ($generated@@97 ($generated@@517 $generated@@674) $generated@@677))
 :pattern ( ($generated@@97 ($generated@@405 $generated@@674) $generated@@677))
))))
 :pattern ( ($generated@@78 $generated@@674 ($generated@@542 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@678) ($generated@@425 $generated@@194 $generated@@194)) (= (type $generated@@679) $generated@@70)) (= (type $generated@@680) $generated@@70)) (= ($generated@@78 $generated@@678 ($generated@@550 $generated@@679 $generated@@680)) (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@194) ($generated@@0 ($generated@@97 ($generated@@423 $generated@@678) $generated@@681))) (and ($generated@@290 ($generated@@97 ($generated@@525 $generated@@678) $generated@@681) $generated@@680) ($generated@@290 $generated@@681 $generated@@679)))
 :pattern ( ($generated@@97 ($generated@@525 $generated@@678) $generated@@681))
 :pattern ( ($generated@@97 ($generated@@423 $generated@@678) $generated@@681))
))))
 :pattern ( ($generated@@78 $generated@@678 ($generated@@550 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@194) (= (type $generated@@684) $generated@@194)) (< ($generated@@682 $generated@@683) ($generated@@667 ($generated@@289 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@289 $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@194) (= (type $generated@@686) $generated@@194)) (< ($generated@@682 $generated@@686) ($generated@@667 ($generated@@289 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@289 $generated@@685 $generated@@686))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@150) (= (type $generated@@688) $generated@@81)) (= ($generated@@339 ($generated@@276 $generated@@687) $generated@@688) ($generated@@339 $generated@@687 $generated@@688)))
 :pattern ( ($generated@@339 ($generated@@276 $generated@@687) $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (and (= (type $generated@@689) $generated@@194) (= (type $generated@@690) $generated@@70)) (= (type $generated@@691) $generated@@70)) ($generated@@290 $generated@@689 ($generated@@542 $generated@@690 $generated@@691))) (and (= ($generated@@368 ($generated@@447 ($generated@@407 $generated@@194 $generated@@194) $generated@@689)) $generated@@689) ($generated@@78 ($generated@@447 ($generated@@407 $generated@@194 $generated@@194) $generated@@689) ($generated@@542 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@290 $generated@@689 ($generated@@542 $generated@@690 $generated@@691)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@194) (= (type $generated@@693) $generated@@70)) (= (type $generated@@694) $generated@@70)) ($generated@@290 $generated@@692 ($generated@@550 $generated@@693 $generated@@694))) (and (= ($generated@@368 ($generated@@447 ($generated@@425 $generated@@194 $generated@@194) $generated@@692)) $generated@@692) ($generated@@78 ($generated@@447 ($generated@@425 $generated@@194 $generated@@194) $generated@@692) ($generated@@550 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@290 $generated@@692 ($generated@@550 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@70) (= (type $generated@@696) $generated@@70)) (= (type $generated@@697) $generated@@194)) ($generated@@290 $generated@@697 ($generated@@185 $generated@@695 $generated@@696))) (and (= ($generated@@368 ($generated@@447 $generated@@81 $generated@@697)) $generated@@697) ($generated@@78 ($generated@@447 $generated@@81 $generated@@697) ($generated@@185 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@290 $generated@@697 ($generated@@185 $generated@@695 $generated@@696)))
)))
(assert (forall (($generated@@698 T@U) ) (! (let (($generated@@699 (type $generated@@698)))
 (not ($generated@@0 ($generated@@97 ($generated@@564 $generated@@699) $generated@@698))))
 :pattern ( (let (($generated@@699 (type $generated@@698)))
($generated@@97 ($generated@@564 $generated@@699) $generated@@698)))
)))
(assert (forall (($generated@@701 T@U) ) (! (= (type ($generated@@700 $generated@@701)) $generated@@75)
 :pattern ( ($generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@70) (= (type $generated@@703) $generated@@70)) (and (= ($generated@@88 ($generated@@185 $generated@@702 $generated@@703)) $generated@@62) (= ($generated@@700 ($generated@@185 $generated@@702 $generated@@703)) $generated@@67)))
 :pattern ( ($generated@@185 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (= (type $generated@@704) $generated@@81) (= (type $generated@@705) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@297 $generated@@705) (and ($generated@@347 $generated@@704) ($generated@@90 $generated@@704 $generated@@80 $generated@@705)))) ($generated@@90 ($generated@@8 ($generated@@164 $generated@@704)) $generated@@46 $generated@@705))
 :pattern ( ($generated@@90 ($generated@@8 ($generated@@164 $generated@@704)) $generated@@46 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@81) (= ($generated@@682 ($generated@@368 $generated@@706)) ($generated@@667 $generated@@706)))
 :pattern ( ($generated@@682 ($generated@@368 $generated@@706)))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@707) $generated@@194) ($generated@@290 $generated@@707 ($generated@@91 0))) (and (= ($generated@@368 ($generated@@447 $generated@@2 $generated@@707)) $generated@@707) ($generated@@78 ($generated@@447 ($generated@@92 $generated@@194 $generated@@4) $generated@@707) ($generated@@91 0))))
 :pattern ( ($generated@@290 $generated@@707 ($generated@@91 0)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (= (type $generated@@708) $generated@@194) (= (type $generated@@709) $generated@@70)) ($generated@@290 $generated@@708 ($generated@@311 $generated@@709))) (and (= ($generated@@368 ($generated@@447 ($generated@@92 $generated@@194 $generated@@4) $generated@@708)) $generated@@708) ($generated@@78 ($generated@@447 ($generated@@92 $generated@@194 $generated@@4) $generated@@708) ($generated@@311 $generated@@709))))
 :pattern ( ($generated@@290 $generated@@708 ($generated@@311 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@194) (= (type $generated@@711) $generated@@70)) ($generated@@290 $generated@@710 ($generated@@316 $generated@@711))) (and (= ($generated@@368 ($generated@@447 ($generated@@92 $generated@@194 $generated@@4) $generated@@710)) $generated@@710) ($generated@@78 ($generated@@447 ($generated@@92 $generated@@194 $generated@@4) $generated@@710) ($generated@@316 $generated@@711))))
 :pattern ( ($generated@@290 $generated@@710 ($generated@@316 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@194) (= (type $generated@@713) $generated@@70)) ($generated@@290 $generated@@712 ($generated@@200 $generated@@713))) (and (= ($generated@@368 ($generated@@447 ($generated@@92 $generated@@194 $generated@@2) $generated@@712)) $generated@@712) ($generated@@78 ($generated@@447 ($generated@@92 $generated@@194 $generated@@2) $generated@@712) ($generated@@200 $generated@@713))))
 :pattern ( ($generated@@290 $generated@@712 ($generated@@200 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) $generated@@194) (= (type $generated@@715) $generated@@70)) ($generated@@290 $generated@@714 ($generated@@634 $generated@@715))) (and (= ($generated@@368 ($generated@@447 ($generated@@358 $generated@@194) $generated@@714)) $generated@@714) ($generated@@78 ($generated@@447 ($generated@@358 $generated@@194) $generated@@714) ($generated@@634 $generated@@715))))
 :pattern ( ($generated@@290 $generated@@714 ($generated@@634 $generated@@715)))
)))
(assert (= ($generated@@88 $generated@@80) $generated@@64))
(assert (= ($generated@@700 $generated@@80) $generated@@68))
(assert (= ($generated@@88 $generated@@273) $generated@@66))
(assert (= ($generated@@700 $generated@@273) $generated@@69))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@716) ($generated@@92 $generated@@194 $generated@@2)) (= (type $generated@@717) $generated@@70)) (= (type $generated@@718) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@716 ($generated@@200 $generated@@717) $generated@@718) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@194) (< 0 ($generated ($generated@@97 $generated@@716 $generated@@719)))) ($generated@@333 $generated@@719 $generated@@717 $generated@@718))
 :pattern ( ($generated@@97 $generated@@716 $generated@@719))
))))
 :pattern ( ($generated@@90 $generated@@716 ($generated@@200 $generated@@717) $generated@@718))
)))
(assert (= $generated@@199 ($generated@@323 $generated@@199)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) $generated@@81) (= (type $generated@@721) $generated@@70)) (= (type $generated@@722) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@297 $generated@@722) (and ($generated@@184 $generated@@720) (exists (($generated@@723 T@U) ) (!  (and (= (type $generated@@723) $generated@@70) ($generated@@90 $generated@@720 ($generated@@185 $generated@@721 $generated@@723) $generated@@722))
 :pattern ( ($generated@@90 $generated@@720 ($generated@@185 $generated@@721 $generated@@723) $generated@@722))
))))) ($generated@@333 ($generated@@192 $generated@@720) $generated@@721 $generated@@722))
 :pattern ( ($generated@@333 ($generated@@192 $generated@@720) $generated@@721 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (and (= (type $generated@@724) $generated@@81) (= (type $generated@@725) $generated@@70)) (= (type $generated@@726) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@297 $generated@@726) (and ($generated@@184 $generated@@724) (exists (($generated@@727 T@U) ) (!  (and (= (type $generated@@727) $generated@@70) ($generated@@90 $generated@@724 ($generated@@185 $generated@@727 $generated@@725) $generated@@726))
 :pattern ( ($generated@@90 $generated@@724 ($generated@@185 $generated@@727 $generated@@725) $generated@@726))
))))) ($generated@@333 ($generated@@193 $generated@@724) $generated@@725 $generated@@726))
 :pattern ( ($generated@@333 ($generated@@193 $generated@@724) $generated@@725 $generated@@726))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ) (! (let (($generated@@731 (type $generated@@729)))
 (=> (and (and (= (type $generated@@728) ($generated@@92 $generated@@731 $generated@@2)) (= (type $generated@@730) $generated@@731)) (not (= $generated@@729 $generated@@730))) (= ($generated ($generated@@97 $generated@@728 $generated@@730)) ($generated ($generated@@97 ($generated@@366 $generated@@728 $generated@@729) $generated@@730)))))
 :pattern ( ($generated@@366 $generated@@728 $generated@@729) ($generated@@97 $generated@@728 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@732) $generated@@81) (= (type $generated@@733) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@297 $generated@@733) (and ($generated@@347 $generated@@732) ($generated@@90 $generated@@732 $generated@@80 $generated@@733)))) ($generated@@90 ($generated@@168 $generated@@732) $generated@@80 $generated@@733))
 :pattern ( ($generated@@90 ($generated@@168 $generated@@732) $generated@@80 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@734) $generated@@81) (= (type $generated@@735) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@297 $generated@@735) (and ($generated@@347 $generated@@734) ($generated@@90 $generated@@734 $generated@@80 $generated@@735)))) ($generated@@90 ($generated@@173 $generated@@734) $generated@@80 $generated@@735))
 :pattern ( ($generated@@90 ($generated@@173 $generated@@734) $generated@@80 $generated@@735))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@194) (= (type $generated@@737) $generated@@194)) (= ($generated@@289 ($generated@@323 $generated@@736) ($generated@@323 $generated@@737)) ($generated@@323 ($generated@@289 $generated@@736 $generated@@737))))
 :pattern ( ($generated@@289 ($generated@@323 $generated@@736) ($generated@@323 $generated@@737)))
)))
(assert (forall (($generated@@738 Int) ) (! (= ($generated@@368 ($generated@@8 ($generated@@321 $generated@@738))) ($generated@@323 ($generated@@368 ($generated@@8 $generated@@738))))
 :pattern ( ($generated@@368 ($generated@@8 ($generated@@321 $generated@@738))))
)))
(assert (forall (($generated@@739 T@U) ) (! (= ($generated@@368 ($generated@@323 $generated@@739)) ($generated@@323 ($generated@@368 $generated@@739)))
 :pattern ( ($generated@@368 ($generated@@323 $generated@@739)))
)))
(assert  (=> (<= 4 $generated@@179) (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 Int) ) (!  (=> (and (and (= (type $generated@@740) $generated@@150) (= (type $generated@@741) $generated@@81)) (or ($generated@@364 $generated@@741 $generated@@742) (and (not (= 4 $generated@@179)) ($generated@@78 $generated@@741 $generated@@273)))) (and (and ($generated@@278 $generated@@741) (=> (not ($generated@@279 $generated@@741 $generated@@199)) (and (=> (< $generated@@742 ($generated@@164 $generated@@741)) ($generated@@364 ($generated@@173 $generated@@741) ($generated@@164 $generated@@741))) (=> (<= ($generated@@164 $generated@@741) $generated@@742) ($generated@@364 ($generated@@173 $generated@@741) $generated@@742))))) (= ($generated@@148 ($generated@@276 $generated@@740) $generated@@741 $generated@@742) (ite ($generated@@279 $generated@@741 $generated@@199) ($generated@@79 $generated@@742 ($generated@@323 $generated@@199) ($generated@@323 $generated@@199)) (ite (< $generated@@742 ($generated@@164 $generated@@741)) ($generated@@79 $generated@@742 ($generated@@148 $generated@@740 ($generated@@173 $generated@@741) ($generated@@164 $generated@@741)) ($generated@@168 $generated@@741)) ($generated@@79 ($generated@@164 $generated@@741) ($generated@@148 $generated@@740 ($generated@@173 $generated@@741) $generated@@742) ($generated@@168 $generated@@741)))))))
 :pattern ( ($generated@@148 ($generated@@276 $generated@@740) $generated@@741 $generated@@742))
))))
(assert (forall (($generated@@743 T@U) ) (! (let (($generated@@744 ($generated@@359 (type $generated@@743))))
 (=> (and (= (type $generated@@743) ($generated@@358 $generated@@744)) (= ($generated@@357 $generated@@743) 0)) (= $generated@@743 ($generated@@356 $generated@@744))))
 :pattern ( ($generated@@357 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (! (let (($generated@@748 (type $generated@@746)))
 (=> (and (and (= (type $generated@@745) ($generated@@92 $generated@@748 $generated@@2)) (= (type $generated@@747) $generated@@2)) (<= 0 ($generated $generated@@747))) (= ($generated@@378 ($generated@@98 $generated@@745 $generated@@746 $generated@@747)) (+ (- ($generated@@378 $generated@@745) ($generated ($generated@@97 $generated@@745 $generated@@746))) ($generated $generated@@747)))))
 :pattern ( ($generated@@378 ($generated@@98 $generated@@745 $generated@@746 $generated@@747)))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@81) (= ($generated@@78 $generated@@749 $generated@@273)  (and ($generated@@78 $generated@@749 $generated@@80) ($generated@@180 ($generated@@276 $generated@@151) $generated@@749))))
 :pattern ( ($generated@@78 $generated@@749 $generated@@273))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@751) $generated@@2)) ($generated@@90 $generated@@751 $generated@@46 $generated@@750))
 :pattern ( ($generated@@90 $generated@@751 $generated@@46 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@753) $generated@@3)) ($generated@@90 $generated@@753 $generated@@47 $generated@@752))
 :pattern ( ($generated@@90 $generated@@753 $generated@@47 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (= (type $generated@@754) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@755) $generated@@4)) ($generated@@90 $generated@@755 $generated@@44 $generated@@754))
 :pattern ( ($generated@@90 $generated@@755 $generated@@44 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (= (type $generated@@756) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@757) $generated@@588)) ($generated@@90 $generated@@757 $generated@@45 $generated@@756))
 :pattern ( ($generated@@90 $generated@@757 $generated@@45 $generated@@756))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@758) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@759) $generated@@194)) ($generated@@90 $generated@@759 $generated@@48 $generated@@758))
 :pattern ( ($generated@@90 $generated@@759 $generated@@48 $generated@@758))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (= (type $generated@@760) ($generated@@358 $generated@@194)) (= (type $generated@@761) $generated@@70)) (= ($generated@@78 $generated@@760 ($generated@@634 $generated@@761)) (forall (($generated@@762 Int) ) (!  (=> (and (<= 0 $generated@@762) (< $generated@@762 ($generated@@357 $generated@@760))) ($generated@@290 ($generated@@635 $generated@@760 $generated@@762) $generated@@761))
 :pattern ( ($generated@@635 $generated@@760 $generated@@762))
))))
 :pattern ( ($generated@@78 $generated@@760 ($generated@@634 $generated@@761)))
)))
(assert (forall (($generated@@764 T@U) ($generated@@765 Int) ) (!  (=> (= (type $generated@@764) ($generated@@358 $generated@@194)) (=> (and (<= 0 $generated@@765) (< $generated@@765 ($generated@@357 $generated@@764))) (< ($generated@@667 ($generated@@447 $generated@@81 ($generated@@635 $generated@@764 $generated@@765))) ($generated@@763 $generated@@764))))
 :pattern ( ($generated@@667 ($generated@@447 $generated@@81 ($generated@@635 $generated@@764 $generated@@765))))
)))
(assert (forall (($generated@@766 T@U) ($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (and (= (type $generated@@766) ($generated@@407 $generated@@194 $generated@@194)) (= (type $generated@@767) $generated@@70)) (= (type $generated@@768) $generated@@70)) ($generated@@78 $generated@@766 ($generated@@542 $generated@@767 $generated@@768))) (and (and ($generated@@78 ($generated@@405 $generated@@766) ($generated@@311 $generated@@767)) ($generated@@78 ($generated@@463 $generated@@766) ($generated@@311 $generated@@768))) ($generated@@78 ($generated@@516 $generated@@766) ($generated@@311 ($generated@@185 $generated@@767 $generated@@768)))))
 :pattern ( ($generated@@78 $generated@@766 ($generated@@542 $generated@@767 $generated@@768)))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (and (and (= (type $generated@@769) ($generated@@425 $generated@@194 $generated@@194)) (= (type $generated@@770) $generated@@70)) (= (type $generated@@771) $generated@@70)) ($generated@@78 $generated@@769 ($generated@@550 $generated@@770 $generated@@771))) (and (and ($generated@@78 ($generated@@423 $generated@@769) ($generated@@316 $generated@@770)) ($generated@@78 ($generated@@474 $generated@@769) ($generated@@316 $generated@@771))) ($generated@@78 ($generated@@524 $generated@@769) ($generated@@316 ($generated@@185 $generated@@770 $generated@@771)))))
 :pattern ( ($generated@@78 $generated@@769 ($generated@@550 $generated@@770 $generated@@771)))
)))
(assert (forall (($generated@@772 T@U) ) (!  (=> (= (type $generated@@772) $generated@@2) ($generated@@78 $generated@@772 $generated@@46))
 :pattern ( ($generated@@78 $generated@@772 $generated@@46))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (= (type $generated@@773) $generated@@3) ($generated@@78 $generated@@773 $generated@@47))
 :pattern ( ($generated@@78 $generated@@773 $generated@@47))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@4) ($generated@@78 $generated@@774 $generated@@44))
 :pattern ( ($generated@@78 $generated@@774 $generated@@44))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@588) ($generated@@78 $generated@@775 $generated@@45))
 :pattern ( ($generated@@78 $generated@@775 $generated@@45))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@194) ($generated@@78 $generated@@776 $generated@@48))
 :pattern ( ($generated@@78 $generated@@776 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@777 () T@U)
(declare-fun $generated@@778 () Int)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () T@U)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 () Int)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@777) $generated@@81) (= (type $generated@@780) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@781) $generated@@81)) (= (type $generated@@779) $generated@@81)) (= (type $generated@@783) ($generated@@207 $generated@@93 $generated@@4))) (= (type $generated@@784) $generated@@93)) (= (type $generated@@785) ($generated@@207 $generated@@93 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@787  (=> (= (ControlFlow 0 5) (- 0 4)) ($generated@@365 ($generated@@339 ($generated@@276 ($generated@@276 $generated@@151)) ($generated@@148 ($generated@@276 ($generated@@276 $generated@@151)) $generated@@777 $generated@@778)) ($generated@@299 ($generated@@339 ($generated@@276 ($generated@@276 $generated@@151)) $generated@@777) ($generated@@366 ($generated@@367 $generated@@194) ($generated@@368 ($generated@@8 $generated@@778))))))))
(let (($generated@@788  (=> (<= ($generated@@164 $generated@@777) $generated@@778) (and (=> (= (ControlFlow 0 16) (- 0 23)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 16) (- 0 22)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 16) (- 0 21)) ($generated@@78 ($generated@@173 $generated@@777) $generated@@273)) (=> ($generated@@78 ($generated@@173 $generated@@777) $generated@@273) (=> (= $generated@@779 ($generated@@173 $generated@@777)) (=> (and ($generated@@90 $generated@@779 $generated@@273 $generated@@780) ($generated@@90 ($generated@@8 $generated@@778) $generated@@46 $generated@@780)) (and (=> (= (ControlFlow 0 16) (- 0 20)) (or (or (<= 0 $generated@@778) (< ($generated@@667 $generated@@779) ($generated@@667 $generated@@777))) (= $generated@@778 $generated@@778))) (=> (or (or (<= 0 $generated@@778) (< ($generated@@667 $generated@@779) ($generated@@667 $generated@@777))) (= $generated@@778 $generated@@778)) (and (=> (= (ControlFlow 0 16) (- 0 19)) (or (< ($generated@@667 $generated@@779) ($generated@@667 $generated@@777)) (and (= ($generated@@667 $generated@@779) ($generated@@667 $generated@@777)) (< $generated@@778 $generated@@778)))) (=> (or (< ($generated@@667 $generated@@779) ($generated@@667 $generated@@777)) (and (= ($generated@@667 $generated@@779) ($generated@@667 $generated@@777)) (< $generated@@778 $generated@@778))) (=> ($generated@@364 ($generated@@173 $generated@@777) $generated@@778) (and (=> (= (ControlFlow 0 16) (- 0 18)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@78 ($generated@@79 ($generated@@164 $generated@@777) ($generated@@148 ($generated@@276 $generated@@151) ($generated@@173 $generated@@777) $generated@@778) ($generated@@168 $generated@@777)) $generated@@273)) (=> ($generated@@78 ($generated@@79 ($generated@@164 $generated@@777) ($generated@@148 ($generated@@276 $generated@@151) ($generated@@173 $generated@@777) $generated@@778) ($generated@@168 $generated@@777)) $generated@@273) (=> (and (and (= ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) ($generated@@79 ($generated@@164 $generated@@777) ($generated@@148 ($generated@@276 $generated@@151) ($generated@@173 $generated@@777) $generated@@778) ($generated@@168 $generated@@777))) ($generated@@364 ($generated@@173 $generated@@777) $generated@@778)) (and ($generated@@78 ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) $generated@@273) (= (ControlFlow 0 16) 5))) $generated@@787)))))))))))))))))))))
(let (($generated@@789  (=> (< $generated@@778 ($generated@@164 $generated@@777)) (and (=> (= (ControlFlow 0 8) (- 0 15)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 8) (- 0 14)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 8) (- 0 13)) ($generated@@78 ($generated@@173 $generated@@777) $generated@@273)) (=> ($generated@@78 ($generated@@173 $generated@@777) $generated@@273) (=> (and (and (= $generated@@781 ($generated@@173 $generated@@777)) ($generated@@90 $generated@@781 $generated@@273 $generated@@780)) (and (= $generated@@782 ($generated@@164 $generated@@777)) ($generated@@90 ($generated@@8 $generated@@782) $generated@@46 $generated@@780))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (or (or (<= 0 $generated@@778) (< ($generated@@667 $generated@@781) ($generated@@667 $generated@@777))) (= $generated@@782 $generated@@778))) (=> (or (or (<= 0 $generated@@778) (< ($generated@@667 $generated@@781) ($generated@@667 $generated@@777))) (= $generated@@782 $generated@@778)) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (< ($generated@@667 $generated@@781) ($generated@@667 $generated@@777)) (and (= ($generated@@667 $generated@@781) ($generated@@667 $generated@@777)) (< $generated@@782 $generated@@778)))) (=> (or (< ($generated@@667 $generated@@781) ($generated@@667 $generated@@777)) (and (= ($generated@@667 $generated@@781) ($generated@@667 $generated@@777)) (< $generated@@782 $generated@@778))) (=> ($generated@@364 ($generated@@173 $generated@@777) ($generated@@164 $generated@@777)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@78 ($generated@@79 $generated@@778 ($generated@@148 ($generated@@276 $generated@@151) ($generated@@173 $generated@@777) ($generated@@164 $generated@@777)) ($generated@@168 $generated@@777)) $generated@@273)) (=> ($generated@@78 ($generated@@79 $generated@@778 ($generated@@148 ($generated@@276 $generated@@151) ($generated@@173 $generated@@777) ($generated@@164 $generated@@777)) ($generated@@168 $generated@@777)) $generated@@273) (=> (and (and (= ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) ($generated@@79 $generated@@778 ($generated@@148 ($generated@@276 $generated@@151) ($generated@@173 $generated@@777) ($generated@@164 $generated@@777)) ($generated@@168 $generated@@777))) ($generated@@364 ($generated@@173 $generated@@777) ($generated@@164 $generated@@777))) (and ($generated@@78 ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) $generated@@273) (= (ControlFlow 0 8) 5))) $generated@@787))))))))))))))))))))
(let (($generated@@790  (=> (not ($generated@@279 $generated@@777 $generated@@199)) (and (=> (= (ControlFlow 0 24) (- 0 25)) ($generated@@347 $generated@@777)) (=> ($generated@@347 $generated@@777) (and (=> (= (ControlFlow 0 24) 8) $generated@@789) (=> (= (ControlFlow 0 24) 16) $generated@@788)))))))
(let (($generated@@791  (=> ($generated@@279 $generated@@777 $generated@@199) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@78 ($generated@@79 $generated@@778 ($generated@@323 $generated@@199) ($generated@@323 $generated@@199)) $generated@@273)) (=> ($generated@@78 ($generated@@79 $generated@@778 ($generated@@323 $generated@@199) ($generated@@323 $generated@@199)) $generated@@273) (=> (= ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) ($generated@@79 $generated@@778 ($generated@@323 $generated@@199) ($generated@@323 $generated@@199))) (=> (and ($generated@@78 ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) $generated@@273) (= (ControlFlow 0 6) 5)) $generated@@787)))))))
(let (($generated@@792  (=> (= $generated@@783 ($generated@@261 $generated@@784 $generated@@780 $generated@@60 false)) (and (=> (= (ControlFlow 0 26) 6) $generated@@791) (=> (= (ControlFlow 0 26) 24) $generated@@790)))))
(let (($generated@@793  (=> ($generated@@78 ($generated@@148 ($generated@@276 $generated@@151) $generated@@777 $generated@@778) $generated@@273) (=> (and ($generated@@90 $generated@@777 $generated@@273 $generated@@780) ($generated@@90 ($generated@@8 $generated@@778) $generated@@46 $generated@@780)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@778) (< ($generated@@667 $generated@@777) ($generated@@667 $generated@@777))) (= $generated@@778 $generated@@778))) (=> (or (or (<= 0 $generated@@778) (< ($generated@@667 $generated@@777) ($generated@@667 $generated@@777))) (= $generated@@778 $generated@@778)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@777 $generated@@777) (= $generated@@778 $generated@@778)) (or (< ($generated@@667 $generated@@777) ($generated@@667 $generated@@777)) (and (= ($generated@@667 $generated@@777) ($generated@@667 $generated@@777)) (< $generated@@778 $generated@@778)))))))))))
(let (($generated@@794  (=> (= $generated@@785 ($generated@@206 $generated@@784 $generated@@780 $generated@@60 false)) (and (=> (= (ControlFlow 0 27) 2) $generated@@793) (=> (= (ControlFlow 0 27) 26) $generated@@792)))))
(let (($generated@@795  (=> (and (and (and ($generated@@297 $generated@@780) ($generated@@786 $generated@@780)) ($generated@@78 $generated@@777 $generated@@273)) (and (= 4 $generated@@179) (= (ControlFlow 0 28) 27))) $generated@@794)))
$generated@@795))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@269 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (Int) Int)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Bool)
(declare-fun $generated@@316 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@U) Bool)
(declare-fun $generated@@327 (T@U) Bool)
(declare-fun $generated@@336 (T@T) T@U)
(declare-fun $generated@@337 (T@U) Int)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@345 (T@U) Int)
(declare-fun $generated@@346 (T@U T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@T) T@U)
(declare-fun $generated@@373 (T@T T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@T T@T) T@U)
(declare-fun $generated@@391 (T@T T@T) T@T)
(declare-fun $generated@@392 (T@T) T@T)
(declare-fun $generated@@393 (T@T) T@T)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@500 (T@U T@U) T@U)
(declare-fun $generated@@508 (T@U T@U) T@U)
(declare-fun $generated@@520 (T@T) T@U)
(declare-fun $generated@@544 () T@T)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@591 (T@U Int) T@U)
(declare-fun $generated@@603 (T@U) Int)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(declare-fun $generated@@638 (T@U) Int)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@715 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@90 $generated@@154 $generated@@2))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (= ($generated@@1 $generated@@156) 16)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@151 $generated@@159)) $generated@@156)
 :pattern ( ($generated@@151 $generated@@159))
))) (= (type $generated@@152) $generated@@156)) (forall (($generated@@160 T@T) ) (! (= (type ($generated@@153 $generated@@160)) ($generated@@90 $generated@@160 $generated@@2))
 :pattern ( ($generated@@153 $generated@@160))
))))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@79) (or ($generated@@148 $generated@@161) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@161 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@161) ($generated@@153 $generated@@154))))))) (= ($generated@@147 $generated@@161) ($generated@@155 $generated@@161)))
 :pattern ( ($generated@@147 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@79) (= (type $generated@@166) $generated@@79)) (= ($generated@@162 ($generated@@77 $generated@@164 $generated@@165 $generated@@166)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@79) (= (type $generated@@169) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@167 $generated@@168 $generated@@169)) $generated@@167))
 :pattern ( ($generated@@77 $generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@79)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@79) (= (type $generated@@174) $generated@@79)) (= ($generated@@170 ($generated@@77 $generated@@172 $generated@@173 $generated@@174)) $generated@@173))
 :pattern ( ($generated@@77 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@79)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@79) (= (type $generated@@179) $generated@@79)) (= ($generated@@175 ($generated@@77 $generated@@177 $generated@@178 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@77 $generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@76 $generated@@180 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@180 ($generated@@89 0)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@183 $generated@@184)) $generated@@68)
 :pattern ( ($generated@@182 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (and (= (type $generated@@185) $generated@@68) (= (type $generated@@186) $generated@@68)) (= (type $generated@@187) $generated@@79)) ($generated@@76 $generated@@187 ($generated@@182 $generated@@185 $generated@@186))) ($generated@@181 $generated@@187))
 :pattern ( ($generated@@181 $generated@@187) ($generated@@76 $generated@@187 ($generated@@182 $generated@@185 $generated@@186)))
)))
(assert  (and (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@154)
 :pattern ( ($generated@@189 $generated@@191))
)) (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@154)
 :pattern ( ($generated@@190 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) $generated@@79) (= (type $generated@@194) $generated@@79)) true) (= ($generated@@188 $generated@@193 $generated@@194)  (and (= ($generated@@189 $generated@@193) ($generated@@189 $generated@@194)) (= ($generated@@190 $generated@@193) ($generated@@190 $generated@@194)))))
 :pattern ( ($generated@@188 $generated@@193 $generated@@194))
)))
(assert (= (type $generated@@195) $generated@@79))
(assert (= ($generated@@162 $generated@@195) $generated@@63))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@68)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@200) $generated@@68)) ($generated@@76 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@76 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 17)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@91 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@71 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@91) (= (type $generated@@251) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@252) ($generated@@70 $generated@@4))) (= (type $generated@@254) $generated@@91)) (= (type $generated@@255) ($generated@@70 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@203 $generated@@91 $generated@@4))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@71 (type $generated@@267))))
 (=> (and (and (and (and (= (type $generated@@262) $generated@@91) (= (type $generated@@263) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@264) ($generated@@70 $generated@@4))) (= (type $generated@@266) $generated@@91)) (= (type $generated@@267) ($generated@@70 $generated@@268))) (= ($generated@@0 ($generated@@201 ($generated@@257 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))  (=> (and (not (= $generated@@266 $generated@@262)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@263 $generated@@266) $generated@@264))) $generated@@265))))
 :pattern ( ($generated@@201 ($generated@@257 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@269 $generated@@271 $generated@@272)) $generated@@79)
 :pattern ( ($generated@@269 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) $generated@@68) (= (type $generated@@274) $generated@@68)) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@154)) (= ($generated@@76 ($generated@@269 $generated@@275 $generated@@276) ($generated@@182 $generated@@273 $generated@@274))  (and ($generated@@270 $generated@@275 $generated@@273) ($generated@@270 $generated@@276 $generated@@274))))
 :pattern ( ($generated@@76 ($generated@@269 $generated@@275 $generated@@276) ($generated@@182 $generated@@273 $generated@@274)))
)))
(assert ($generated@@76 $generated@@195 $generated@@78))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@277 $generated@@278)) ($generated@@88 $generated@@195 $generated@@78 $generated@@278))
 :pattern ( ($generated@@88 $generated@@195 $generated@@78 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@93 (type $generated@@280))))
(= (type ($generated@@279 $generated@@280 $generated@@281)) ($generated@@90 $generated@@282 $generated@@2)))
 :pattern ( ($generated@@279 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
 (=> (and (= (type $generated@@283) ($generated@@90 $generated@@286 $generated@@2)) (= (type $generated@@284) ($generated@@90 $generated@@286 $generated@@2))) (= ($generated ($generated@@95 ($generated@@279 $generated@@283 $generated@@284) $generated@@285)) (+ ($generated ($generated@@95 $generated@@283 $generated@@285)) ($generated ($generated@@95 $generated@@284 $generated@@285))))))
 :pattern ( ($generated@@95 ($generated@@279 $generated@@283 $generated@@284) $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@79) (= (type $generated@@288) $generated@@79)) (= ($generated@@188 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@188 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@79) (= (type $generated@@291) $generated@@79)) (= ($generated@@289 $generated@@290 $generated@@291) (= $generated@@290 $generated@@291)))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@79) (or ($generated@@148 $generated@@292) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@292 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@292) ($generated@@153 $generated@@154))))))) true)
 :pattern ( ($generated@@147 $generated@@292))
))))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@68)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@296) $generated@@68)) (= ($generated@@76 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@154) ($generated@@0 ($generated@@95 $generated@@295 $generated@@297))) ($generated@@270 $generated@@297 $generated@@296))
 :pattern ( ($generated@@95 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@76 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@68)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@301) $generated@@68)) (= ($generated@@76 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@154) ($generated@@0 ($generated@@95 $generated@@300 $generated@@302))) ($generated@@270 $generated@@302 $generated@@301))
 :pattern ( ($generated@@95 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@76 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 Int) ) (! (= ($generated@@303 $generated@@304) $generated@@304)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 (type $generated@@306)))
(= (type ($generated@@305 $generated@@306)) $generated@@307))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= ($generated@@305 $generated@@308) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@310) $generated@@79) (= (type $generated@@311) $generated@@79)) (and ($generated@@309 $generated@@310) ($generated@@309 $generated@@311))) (= ($generated@@289 $generated@@310 $generated@@311) true))
 :pattern ( ($generated@@289 $generated@@310 $generated@@311) ($generated@@309 $generated@@310))
 :pattern ( ($generated@@289 $generated@@310 $generated@@311) ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@312 Int) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@313) $generated@@79) (= (type $generated@@314) $generated@@79)) (= (type $generated@@315) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@277 $generated@@315)) (= ($generated@@88 ($generated@@77 $generated@@312 $generated@@313 $generated@@314) $generated@@78 $generated@@315)  (and (and ($generated@@88 ($generated@@8 $generated@@312) $generated@@46 $generated@@315) ($generated@@88 $generated@@313 $generated@@78 $generated@@315)) ($generated@@88 $generated@@314 $generated@@78 $generated@@315))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@312 $generated@@313 $generated@@314) $generated@@78 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@317) $generated@@68) (= (type $generated@@318) $generated@@68)) (= (type $generated@@319) $generated@@154)) (= (type $generated@@320) $generated@@154)) (= (type $generated@@321) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@277 $generated@@321)) (= ($generated@@88 ($generated@@269 $generated@@319 $generated@@320) ($generated@@182 $generated@@317 $generated@@318) $generated@@321)  (and ($generated@@316 $generated@@319 $generated@@317 $generated@@321) ($generated@@316 $generated@@320 $generated@@318 $generated@@321))))
 :pattern ( ($generated@@88 ($generated@@269 $generated@@319 $generated@@320) ($generated@@182 $generated@@317 $generated@@318) $generated@@321))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@156) (= (type $generated@@324) $generated@@79)) (or ($generated@@322 $generated@@324) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@324 $generated@@78)))) ($generated@@76 ($generated@@150 $generated@@323 $generated@@324) ($generated@@196 $generated@@46)))
 :pattern ( ($generated@@150 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@79) (= ($generated@@181 $generated@@325) (= ($generated@@162 $generated@@325) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@79) (= ($generated@@309 $generated@@326) (= ($generated@@162 $generated@@326) $generated@@63)))
 :pattern ( ($generated@@309 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@79) (= ($generated@@327 $generated@@328) (= ($generated@@162 $generated@@328) $generated@@65)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@79) ($generated@@327 $generated@@329)) (exists (($generated@@330 Int) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (and (and (= (type $generated@@331) $generated@@79) (= (type $generated@@332) $generated@@79)) (= $generated@@329 ($generated@@77 $generated@@330 $generated@@331 $generated@@332)))
 :no-pattern (type $generated@@331)
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
)))
 :pattern ( ($generated@@327 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@79) ($generated@@181 $generated@@333)) (exists (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (and (and (= (type $generated@@334) $generated@@154) (= (type $generated@@335) $generated@@154)) (= $generated@@333 ($generated@@269 $generated@@334 $generated@@335)))
 :no-pattern (type $generated@@334)
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
)))
 :pattern ( ($generated@@181 $generated@@333))
)))
(assert  (and (and (forall (($generated@@340 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@340)) 18)) (forall (($generated@@341 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@338 $generated@@341))
))) (forall (($generated@@342 T@T) ) (! (= (type ($generated@@336 $generated@@342)) ($generated@@338 $generated@@342))
 :pattern ( ($generated@@336 $generated@@342))
))))
(assert (forall (($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@343)) 0)
 :pattern ( ($generated@@336 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@79) ($generated@@309 $generated@@344)) (= $generated@@344 $generated@@195))
 :pattern ( ($generated@@309 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
(= (type ($generated@@346 $generated@@347 $generated@@348)) ($generated@@90 $generated@@349 $generated@@2)))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
 (=> (= (type $generated@@350) ($generated@@90 $generated@@352 $generated@@2)) (= ($generated@@345 ($generated@@346 $generated@@350 $generated@@351)) (+ ($generated@@345 $generated@@350) 1))))
 :pattern ( ($generated@@345 ($generated@@346 $generated@@350 $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (= (type ($generated@@353 $generated@@354)) $generated@@154)
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) $generated@@156) (= (type $generated@@356) $generated@@79)) (or ($generated@@322 ($generated@@305 $generated@@356)) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@356 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@305 ($generated@@11 ($generated@@309 ($generated@@305 $generated@@356)))))) (let (($generated@@357 ($generated@@305 ($generated@@175 ($generated@@305 $generated@@356)))))
(let (($generated@@358 ($generated@@305 ($generated@@170 ($generated@@305 $generated@@356)))))
 (and ($generated@@322 $generated@@358) ($generated@@322 $generated@@357))))) (= ($generated@@150 ($generated@@151 $generated@@355) ($generated@@305 $generated@@356)) (ite ($generated@@309 ($generated@@305 $generated@@356)) ($generated@@153 $generated@@154) (let (($generated@@359 ($generated@@305 ($generated@@175 ($generated@@305 $generated@@356)))))
(let (($generated@@360 ($generated@@305 ($generated@@170 ($generated@@305 $generated@@356)))))
(let (($generated@@361 ($generated@@303 ($generated@@155 ($generated@@305 $generated@@356)))))
($generated@@279 ($generated@@279 ($generated@@346 ($generated@@153 $generated@@154) ($generated@@353 ($generated@@8 $generated@@361))) ($generated@@150 ($generated@@151 $generated@@355) $generated@@360)) ($generated@@150 ($generated@@151 $generated@@355) $generated@@359)))))))))
 :weight 3
 :pattern ( ($generated@@150 ($generated@@151 $generated@@355) ($generated@@305 $generated@@356)))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@68) (= (type $generated@@364) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@316 ($generated@@353 $generated@@362) $generated@@363 $generated@@364) ($generated@@88 $generated@@362 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@316 ($generated@@353 $generated@@362) $generated@@363 $generated@@364))
)))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@79) (or ($generated@@148 ($generated@@305 $generated@@365)) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@365 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) ($generated@@305 $generated@@365)) ($generated@@153 $generated@@154))))))) (= ($generated@@147 ($generated@@305 $generated@@365)) ($generated@@303 ($generated@@155 ($generated@@305 $generated@@365)))))
 :weight 3
 :pattern ( ($generated@@147 ($generated@@305 $generated@@365)))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@366) $generated@@79) (= (type $generated@@367) $generated@@79)) (and ($generated@@327 $generated@@366) ($generated@@327 $generated@@367))) (= ($generated@@289 $generated@@366 $generated@@367)  (and (and (= ($generated@@155 $generated@@366) ($generated@@155 $generated@@367)) ($generated@@289 ($generated@@170 $generated@@366) ($generated@@170 $generated@@367))) ($generated@@289 ($generated@@175 $generated@@366) ($generated@@175 $generated@@367)))))
 :pattern ( ($generated@@289 $generated@@366 $generated@@367) ($generated@@327 $generated@@366))
 :pattern ( ($generated@@289 $generated@@366 $generated@@367) ($generated@@327 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@93 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@90 $generated@@369 $generated@@2)) (and (= (= ($generated@@345 $generated@@368) 0) (= $generated@@368 ($generated@@153 $generated@@369))) (=> (not (= ($generated@@345 $generated@@368) 0)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (< 0 ($generated ($generated@@95 $generated@@368 $generated@@370))))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@345 $generated@@368))
)))
(assert  (and (and (and (and (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (= ($generated@@1 ($generated@@373 $generated@@376 $generated@@377)) 19)) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@374 ($generated@@373 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@373 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@375 ($generated@@373 $generated@@380 $generated@@381)) $generated@@381)
 :pattern ( ($generated@@373 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@374 (type $generated@@382))))
(= (type ($generated@@371 $generated@@382)) ($generated@@90 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@382))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= (type ($generated@@372 $generated@@384 $generated@@385)) ($generated@@373 $generated@@384 $generated@@385))
 :pattern ( ($generated@@372 $generated@@384 $generated@@385))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@T) ) (! (let (($generated@@388 (type $generated@@386)))
 (not ($generated@@0 ($generated@@95 ($generated@@371 ($generated@@372 $generated@@388 $generated@@387)) $generated@@386))))
 :pattern ( (let (($generated@@388 (type $generated@@386)))
($generated@@95 ($generated@@371 ($generated@@372 $generated@@388 $generated@@387)) $generated@@386)))
)))
(assert  (and (and (and (and (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (= ($generated@@1 ($generated@@391 $generated@@394 $generated@@395)) 20)) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@392 ($generated@@391 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@391 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@393 ($generated@@391 $generated@@398 $generated@@399)) $generated@@399)
 :pattern ( ($generated@@391 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@392 (type $generated@@400))))
(= (type ($generated@@389 $generated@@400)) ($generated@@90 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@400))
))) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= (type ($generated@@390 $generated@@402 $generated@@403)) ($generated@@391 $generated@@402 $generated@@403))
 :pattern ( ($generated@@390 $generated@@402 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@T) ) (! (let (($generated@@406 (type $generated@@404)))
 (not ($generated@@0 ($generated@@95 ($generated@@389 ($generated@@390 $generated@@406 $generated@@405)) $generated@@404))))
 :pattern ( (let (($generated@@406 (type $generated@@404)))
($generated@@95 ($generated@@389 ($generated@@390 $generated@@406 $generated@@405)) $generated@@404)))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@93 (type $generated@@407))))
 (=> (and (= (type $generated@@407) ($generated@@90 $generated@@409 $generated@@2)) (= (type $generated@@408) ($generated@@90 $generated@@409 $generated@@2))) (= ($generated@@345 ($generated@@279 $generated@@407 $generated@@408)) (+ ($generated@@345 $generated@@407) ($generated@@345 $generated@@408)))))
 :pattern ( ($generated@@345 ($generated@@279 $generated@@407 $generated@@408)))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@93 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@90 $generated@@411 $generated@@2)) (= ($generated@@197 $generated@@410) (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@411) (and (<= 0 ($generated ($generated@@95 $generated@@410 $generated@@412))) (<= ($generated ($generated@@95 $generated@@410 $generated@@412)) ($generated@@345 $generated@@410))))
 :pattern ( ($generated@@95 $generated@@410 $generated@@412))
)))))
 :pattern ( ($generated@@197 $generated@@410))
)))
(assert (forall (($generated@@414 T@T) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@414)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@154) ($generated@@270 $generated@@416 $generated@@78)) (and (= ($generated@@353 ($generated@@413 $generated@@79 $generated@@416)) $generated@@416) ($generated@@76 ($generated@@413 $generated@@79 $generated@@416) $generated@@78)))
 :pattern ( ($generated@@270 $generated@@416 $generated@@78))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
 (=> (= (type $generated@@417) ($generated@@90 $generated@@419 $generated@@2)) (= ($generated ($generated@@95 ($generated@@346 $generated@@417 $generated@@418) $generated@@418)) (+ ($generated ($generated@@95 $generated@@417 $generated@@418)) 1))))
 :pattern ( ($generated@@346 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@421)))
 (=> (and (and (= (type $generated@@420) ($generated@@90 $generated@@423 $generated@@2)) (= (type $generated@@422) $generated@@423)) (< 0 ($generated ($generated@@95 $generated@@420 $generated@@422)))) (< 0 ($generated ($generated@@95 ($generated@@346 $generated@@420 $generated@@421) $generated@@422)))))
 :pattern ( ($generated@@346 $generated@@420 $generated@@421) ($generated@@95 $generated@@420 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@375 (type $generated@@424))))
(let (($generated@@426 ($generated@@374 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@373 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@372 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) ($generated@@0 ($generated@@95 ($generated@@371 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@375 (type $generated@@429))))
(= (type ($generated@@428 $generated@@429)) ($generated@@90 $generated@@430 $generated@@4)))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@375 (type $generated@@431))))
(let (($generated@@433 ($generated@@374 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@373 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@372 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@432) ($generated@@0 ($generated@@95 ($generated@@428 $generated@@431) $generated@@434)))
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@428 $generated@@431))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@393 (type $generated@@435))))
(let (($generated@@437 ($generated@@392 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@391 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@390 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@437) ($generated@@0 ($generated@@95 ($generated@@389 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@389 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@393 (type $generated@@440))))
(= (type ($generated@@439 $generated@@440)) ($generated@@90 $generated@@441 $generated@@4)))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@393 (type $generated@@442))))
(let (($generated@@444 ($generated@@392 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@391 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@390 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@443) ($generated@@0 ($generated@@95 ($generated@@439 $generated@@442) $generated@@445)))
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@439 $generated@@442))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@447)))
 (=> (and (= (type $generated@@446) ($generated@@90 $generated@@449 $generated@@2)) (= (type $generated@@448) $generated@@449)) (= (< 0 ($generated ($generated@@95 ($generated@@346 $generated@@446 $generated@@447) $generated@@448)))  (or (= $generated@@448 $generated@@447) (< 0 ($generated ($generated@@95 $generated@@446 $generated@@448)))))))
 :pattern ( ($generated@@95 ($generated@@346 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@451) $generated@@68)) (= ($generated@@76 $generated@@450 ($generated@@196 $generated@@451)) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@154) (< 0 ($generated ($generated@@95 $generated@@450 $generated@@452)))) ($generated@@270 $generated@@452 $generated@@451))
 :pattern ( ($generated@@95 $generated@@450 $generated@@452))
))))
 :pattern ( ($generated@@76 $generated@@450 ($generated@@196 $generated@@451)))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@93 (type $generated@@453))))
 (=> (and (= (type $generated@@453) ($generated@@90 $generated@@455 $generated@@2)) (= (type $generated@@454) ($generated@@90 $generated@@455 $generated@@2))) (= ($generated@@149 $generated@@453 $generated@@454) (forall (($generated@@456 T@U) ) (!  (=> (= (type $generated@@456) $generated@@455) (= ($generated ($generated@@95 $generated@@453 $generated@@456)) ($generated ($generated@@95 $generated@@454 $generated@@456))))
 :pattern ( ($generated@@95 $generated@@453 $generated@@456))
 :pattern ( ($generated@@95 $generated@@454 $generated@@456))
)))))
 :pattern ( ($generated@@149 $generated@@453 $generated@@454))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@457) $generated@@156) (= (type $generated@@458) $generated@@79)) (or ($generated@@322 $generated@@458) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@458 $generated@@78)))) (and (=> (not ($generated@@309 $generated@@458)) (let (($generated@@459 ($generated@@175 $generated@@458)))
(let (($generated@@460 ($generated@@170 $generated@@458)))
 (and ($generated@@322 $generated@@460) ($generated@@322 $generated@@459))))) (= ($generated@@150 ($generated@@151 $generated@@457) $generated@@458) (ite ($generated@@309 $generated@@458) ($generated@@153 $generated@@154) (let (($generated@@461 ($generated@@175 $generated@@458)))
(let (($generated@@462 ($generated@@170 $generated@@458)))
(let (($generated@@463 ($generated@@155 $generated@@458)))
($generated@@279 ($generated@@279 ($generated@@346 ($generated@@153 $generated@@154) ($generated@@353 ($generated@@8 $generated@@463))) ($generated@@150 $generated@@457 $generated@@462)) ($generated@@150 $generated@@457 $generated@@461)))))))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@457) $generated@@458))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@465) $generated@@68)) (= (type $generated@@466) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@464 ($generated@@293 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@154) ($generated@@0 ($generated@@95 $generated@@464 $generated@@467))) ($generated@@316 $generated@@467 $generated@@465 $generated@@466))
 :pattern ( ($generated@@95 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@88 $generated@@464 ($generated@@293 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (= (type $generated@@468) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@469) $generated@@68)) (= (type $generated@@470) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@468 ($generated@@298 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@154) ($generated@@0 ($generated@@95 $generated@@468 $generated@@471))) ($generated@@316 $generated@@471 $generated@@469 $generated@@470))
 :pattern ( ($generated@@95 $generated@@468 $generated@@471))
))))
 :pattern ( ($generated@@88 $generated@@468 ($generated@@298 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 (type $generated@@472)))
(= ($generated ($generated@@95 ($generated@@153 $generated@@473) $generated@@472)) 0))
 :pattern ( (let (($generated@@473 (type $generated@@472)))
($generated@@95 ($generated@@153 $generated@@473) $generated@@472)))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) ($generated@@90 $generated@@154 $generated@@4))
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@375 (type $generated@@477))))
(let (($generated@@479 ($generated@@374 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477)) ($generated@@90 $generated@@479 $generated@@478))))
 :pattern ( ($generated@@475 $generated@@477))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) ($generated@@373 $generated@@154 $generated@@154)) (= (type $generated@@481) $generated@@154)) (= ($generated@@0 ($generated@@95 ($generated@@474 $generated@@480) $generated@@481))  (and ($generated@@0 ($generated@@95 ($generated@@371 $generated@@480) ($generated@@189 ($generated@@413 $generated@@79 $generated@@481)))) (= ($generated@@95 ($generated@@475 $generated@@480) ($generated@@189 ($generated@@413 $generated@@79 $generated@@481))) ($generated@@190 ($generated@@413 $generated@@79 $generated@@481))))))
 :pattern ( ($generated@@95 ($generated@@474 $generated@@480) $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) ($generated@@90 $generated@@154 $generated@@4))
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@393 (type $generated@@485))))
(let (($generated@@487 ($generated@@392 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485)) ($generated@@90 $generated@@487 $generated@@486))))
 :pattern ( ($generated@@483 $generated@@485))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) ($generated@@391 $generated@@154 $generated@@154)) (= (type $generated@@489) $generated@@154)) (= ($generated@@0 ($generated@@95 ($generated@@482 $generated@@488) $generated@@489))  (and ($generated@@0 ($generated@@95 ($generated@@389 $generated@@488) ($generated@@189 ($generated@@413 $generated@@79 $generated@@489)))) (= ($generated@@95 ($generated@@483 $generated@@488) ($generated@@189 ($generated@@413 $generated@@79 $generated@@489))) ($generated@@190 ($generated@@413 $generated@@79 $generated@@489))))))
 :pattern ( ($generated@@95 ($generated@@482 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (let (($generated@@492 (type $generated@@491)))
(let (($generated@@493 ($generated@@374 (type $generated@@490))))
 (=> (= (type $generated@@490) ($generated@@373 $generated@@493 $generated@@492)) (= ($generated@@0 ($generated@@95 ($generated@@428 $generated@@490) $generated@@491)) (exists (($generated@@494 T@U) ) (!  (and (= (type $generated@@494) $generated@@493) (and ($generated@@0 ($generated@@95 ($generated@@371 $generated@@490) $generated@@494)) (= $generated@@491 ($generated@@95 ($generated@@475 $generated@@490) $generated@@494))))
 :pattern ( ($generated@@95 ($generated@@371 $generated@@490) $generated@@494))
 :pattern ( ($generated@@95 ($generated@@475 $generated@@490) $generated@@494))
))))))
 :pattern ( ($generated@@95 ($generated@@428 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(let (($generated@@498 ($generated@@392 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@391 $generated@@498 $generated@@497)) (= ($generated@@0 ($generated@@95 ($generated@@439 $generated@@495) $generated@@496)) (exists (($generated@@499 T@U) ) (!  (and (= (type $generated@@499) $generated@@498) (and ($generated@@0 ($generated@@95 ($generated@@389 $generated@@495) $generated@@499)) (= $generated@@496 ($generated@@95 ($generated@@483 $generated@@495) $generated@@499))))
 :pattern ( ($generated@@95 ($generated@@389 $generated@@495) $generated@@499))
 :pattern ( ($generated@@95 ($generated@@483 $generated@@495) $generated@@499))
))))))
 :pattern ( ($generated@@95 ($generated@@439 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) ($generated@@373 $generated@@154 $generated@@154)) (= (type $generated@@504) $generated@@68)) (= (type $generated@@505) $generated@@68)) (= (type $generated@@506) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@503 ($generated@@500 $generated@@504 $generated@@505) $generated@@506) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@371 $generated@@503) $generated@@507))) (and ($generated@@316 ($generated@@95 ($generated@@475 $generated@@503) $generated@@507) $generated@@505 $generated@@506) ($generated@@316 $generated@@507 $generated@@504 $generated@@506)))
 :pattern ( ($generated@@95 ($generated@@475 $generated@@503) $generated@@507))
 :pattern ( ($generated@@95 ($generated@@371 $generated@@503) $generated@@507))
))))
 :pattern ( ($generated@@88 $generated@@503 ($generated@@500 $generated@@504 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@511) ($generated@@391 $generated@@154 $generated@@154)) (= (type $generated@@512) $generated@@68)) (= (type $generated@@513) $generated@@68)) (= (type $generated@@514) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@511 ($generated@@508 $generated@@512 $generated@@513) $generated@@514) (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@389 $generated@@511) $generated@@515))) (and ($generated@@316 ($generated@@95 ($generated@@483 $generated@@511) $generated@@515) $generated@@513 $generated@@514) ($generated@@316 $generated@@515 $generated@@512 $generated@@514)))
 :pattern ( ($generated@@95 ($generated@@483 $generated@@511) $generated@@515))
 :pattern ( ($generated@@95 ($generated@@389 $generated@@511) $generated@@515))
))))
 :pattern ( ($generated@@88 $generated@@511 ($generated@@508 $generated@@512 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@93 (type $generated@@516))))
 (=> (and (and (= (type $generated@@516) ($generated@@90 $generated@@518 $generated@@2)) (= (type $generated@@517) ($generated@@90 $generated@@518 $generated@@2))) ($generated@@149 $generated@@516 $generated@@517)) (= $generated@@516 $generated@@517)))
 :pattern ( ($generated@@149 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@79) ($generated@@76 $generated@@519 $generated@@78)) (or ($generated@@309 $generated@@519) ($generated@@327 $generated@@519)))
 :pattern ( ($generated@@327 $generated@@519) ($generated@@76 $generated@@519 $generated@@78))
 :pattern ( ($generated@@309 $generated@@519) ($generated@@76 $generated@@519 $generated@@78))
)))
(assert (forall (($generated@@521 T@T) ) (! (= (type ($generated@@520 $generated@@521)) ($generated@@90 $generated@@521 $generated@@4))
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@393 (type $generated@@522))))
(let (($generated@@524 ($generated@@392 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@391 $generated@@524 $generated@@523)) (= (= $generated@@522 ($generated@@390 $generated@@524 $generated@@523)) (= ($generated@@389 $generated@@522) ($generated@@520 $generated@@524))))))
 :pattern ( ($generated@@389 $generated@@522))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@393 (type $generated@@525))))
(let (($generated@@527 ($generated@@392 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@391 $generated@@527 $generated@@526)) (= (= $generated@@525 ($generated@@390 $generated@@527 $generated@@526)) (= ($generated@@439 $generated@@525) ($generated@@520 $generated@@526))))))
 :pattern ( ($generated@@439 $generated@@525))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@393 (type $generated@@528))))
(let (($generated@@530 ($generated@@392 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@391 $generated@@530 $generated@@529)) (= (= $generated@@528 ($generated@@390 $generated@@530 $generated@@529)) (= ($generated@@482 $generated@@528) ($generated@@520 $generated@@154))))))
 :pattern ( ($generated@@482 $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@375 (type $generated@@531))))
(let (($generated@@533 ($generated@@374 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@373 $generated@@533 $generated@@532)) (or (= $generated@@531 ($generated@@372 $generated@@533 $generated@@532)) (exists (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (and (and (= (type $generated@@534) $generated@@154) (= (type $generated@@535) $generated@@154)) ($generated@@0 ($generated@@95 ($generated@@474 $generated@@531) ($generated@@353 ($generated@@269 $generated@@534 $generated@@535)))))
 :no-pattern (type $generated@@534)
 :no-pattern (type $generated@@535)
 :no-pattern ($generated $generated@@534)
 :no-pattern ($generated@@0 $generated@@534)
 :no-pattern ($generated $generated@@535)
 :no-pattern ($generated@@0 $generated@@535)
))))))
 :pattern ( ($generated@@474 $generated@@531))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@393 (type $generated@@536))))
(let (($generated@@538 ($generated@@392 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@391 $generated@@538 $generated@@537)) (or (= $generated@@536 ($generated@@390 $generated@@538 $generated@@537)) (exists (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@154)) ($generated@@0 ($generated@@95 ($generated@@482 $generated@@536) ($generated@@353 ($generated@@269 $generated@@539 $generated@@540)))))
 :no-pattern (type $generated@@539)
 :no-pattern (type $generated@@540)
 :no-pattern ($generated $generated@@539)
 :no-pattern ($generated@@0 $generated@@539)
 :no-pattern ($generated $generated@@540)
 :no-pattern ($generated@@0 $generated@@540)
))))))
 :pattern ( ($generated@@482 $generated@@536))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@154) ($generated@@270 $generated@@541 $generated@@46)) (and (= ($generated@@353 ($generated@@413 $generated@@2 $generated@@541)) $generated@@541) ($generated@@76 ($generated@@413 $generated@@2 $generated@@541) $generated@@46)))
 :pattern ( ($generated@@270 $generated@@541 $generated@@46))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@154) ($generated@@270 $generated@@542 $generated@@47)) (and (= ($generated@@353 ($generated@@413 $generated@@3 $generated@@542)) $generated@@542) ($generated@@76 ($generated@@413 $generated@@3 $generated@@542) $generated@@47)))
 :pattern ( ($generated@@270 $generated@@542 $generated@@47))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@154) ($generated@@270 $generated@@543 $generated@@44)) (and (= ($generated@@353 ($generated@@413 $generated@@4 $generated@@543)) $generated@@543) ($generated@@76 ($generated@@413 $generated@@4 $generated@@543) $generated@@44)))
 :pattern ( ($generated@@270 $generated@@543 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@544) 21))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@270 $generated@@545 $generated@@45)) (and (= ($generated@@353 ($generated@@413 $generated@@544 $generated@@545)) $generated@@545) ($generated@@76 ($generated@@413 $generated@@544 $generated@@545) $generated@@45)))
 :pattern ( ($generated@@270 $generated@@545 $generated@@45))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@270 ($generated@@353 $generated@@546) $generated@@547) ($generated@@76 $generated@@546 $generated@@547)))
 :pattern ( ($generated@@270 ($generated@@353 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@93 (type $generated@@548))))
 (=> (= (type $generated@@548) ($generated@@90 $generated@@549 $generated@@2)) (<= 0 ($generated@@345 $generated@@548))))
 :pattern ( ($generated@@345 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@339 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@338 $generated@@551)) (<= 0 ($generated@@337 $generated@@550))))
 :pattern ( ($generated@@337 $generated@@550))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@68) (= (type $generated@@555) $generated@@68)) (= ($generated@@552 ($generated@@500 $generated@@554 $generated@@555)) $generated@@554))
 :pattern ( ($generated@@500 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@68) (= (type $generated@@559) $generated@@68)) (= ($generated@@556 ($generated@@500 $generated@@558 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@500 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@68) (= (type $generated@@561) $generated@@68)) (= ($generated@@86 ($generated@@500 $generated@@560 $generated@@561)) $generated@@58))
 :pattern ( ($generated@@500 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= ($generated@@562 ($generated@@508 $generated@@564 $generated@@565)) $generated@@564))
 :pattern ( ($generated@@508 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@68)) (= ($generated@@566 ($generated@@508 $generated@@568 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@508 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (= ($generated@@86 ($generated@@508 $generated@@570 $generated@@571)) $generated@@59))
 :pattern ( ($generated@@508 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@154) (= (type $generated@@573) $generated@@154)) (= ($generated@@162 ($generated@@269 $generated@@572 $generated@@573)) $generated@@61))
 :pattern ( ($generated@@269 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= ($generated@@574 ($generated@@182 $generated@@576 $generated@@577)) $generated@@576))
 :pattern ( ($generated@@182 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= ($generated@@578 ($generated@@182 $generated@@580 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@182 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@154) (= (type $generated@@583) $generated@@154)) (= ($generated@@189 ($generated@@269 $generated@@582 $generated@@583)) $generated@@582))
 :pattern ( ($generated@@269 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (= (type $generated@@585) $generated@@154)) (= ($generated@@190 ($generated@@269 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@269 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@156)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@156) (= (type $generated@@589) $generated@@79)) (= ($generated@@150 $generated@@588 $generated@@589) ($generated@@150 $generated@@152 $generated@@589)))
 :pattern ( ($generated@@150 ($generated@@586 $generated@@588) $generated@@589))
)))
(assert  (and (forall (($generated@@592 T@U) ) (! (= (type ($generated@@590 $generated@@592)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@592))
)) (forall (($generated@@593 T@U) ($generated@@594 Int) ) (! (let (($generated@@595 ($generated@@339 (type $generated@@593))))
(= (type ($generated@@591 $generated@@593 $generated@@594)) $generated@@595))
 :pattern ( ($generated@@591 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@338 $generated@@154)) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@596 ($generated@@590 $generated@@597) $generated@@598) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@337 $generated@@596))) ($generated@@316 ($generated@@591 $generated@@596 $generated@@599) $generated@@597 $generated@@598))
 :pattern ( ($generated@@591 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@88 $generated@@596 ($generated@@590 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 Int) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@79) (= (type $generated@@602) $generated@@79)) (= ($generated@@77 ($generated@@303 $generated@@600) ($generated@@305 $generated@@601) ($generated@@305 $generated@@602)) ($generated@@305 ($generated@@77 $generated@@600 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@77 ($generated@@303 $generated@@600) ($generated@@305 $generated@@601) ($generated@@305 $generated@@602)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@603 ($generated@@89 $generated@@604)) $generated@@604)
 :pattern ( ($generated@@89 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@68)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@68) (= ($generated@@605 ($generated@@293 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@293 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@68) (= ($generated@@86 ($generated@@293 $generated@@608)) $generated@@54))
 :pattern ( ($generated@@293 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@68)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@68) (= ($generated@@609 ($generated@@298 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@298 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@68) (= ($generated@@86 ($generated@@298 $generated@@612)) $generated@@55))
 :pattern ( ($generated@@298 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@68)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@68) (= ($generated@@613 ($generated@@196 $generated@@615)) $generated@@615))
 :pattern ( ($generated@@196 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@68) (= ($generated@@86 ($generated@@196 $generated@@616)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ) (! (= (type ($generated@@617 $generated@@618)) $generated@@68)
 :pattern ( ($generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@68) (= ($generated@@617 ($generated@@590 $generated@@619)) $generated@@619))
 :pattern ( ($generated@@590 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@68) (= ($generated@@86 ($generated@@590 $generated@@620)) $generated@@57))
 :pattern ( ($generated@@590 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
(= ($generated@@413 $generated@@622 ($generated@@353 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@353 $generated@@621))
)))
(assert (forall (($generated@@624 Int) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@79) (= (type $generated@@626) $generated@@79)) (< ($generated@@623 $generated@@625) ($generated@@623 ($generated@@77 $generated@@624 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@77 $generated@@624 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 Int) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) $generated@@79)) (< ($generated@@623 $generated@@629) ($generated@@623 ($generated@@77 $generated@@627 $generated@@628 $generated@@629))))
 :pattern ( ($generated@@77 $generated@@627 $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@373 $generated@@154 $generated@@154)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) $generated@@68)) (= ($generated@@76 $generated@@630 ($generated@@500 $generated@@631 $generated@@632)) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@371 $generated@@630) $generated@@633))) (and ($generated@@270 ($generated@@95 ($generated@@475 $generated@@630) $generated@@633) $generated@@632) ($generated@@270 $generated@@633 $generated@@631)))
 :pattern ( ($generated@@95 ($generated@@475 $generated@@630) $generated@@633))
 :pattern ( ($generated@@95 ($generated@@371 $generated@@630) $generated@@633))
))))
 :pattern ( ($generated@@76 $generated@@630 ($generated@@500 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@634) ($generated@@391 $generated@@154 $generated@@154)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@68)) (= ($generated@@76 $generated@@634 ($generated@@508 $generated@@635 $generated@@636)) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@389 $generated@@634) $generated@@637))) (and ($generated@@270 ($generated@@95 ($generated@@483 $generated@@634) $generated@@637) $generated@@636) ($generated@@270 $generated@@637 $generated@@635)))
 :pattern ( ($generated@@95 ($generated@@483 $generated@@634) $generated@@637))
 :pattern ( ($generated@@95 ($generated@@389 $generated@@634) $generated@@637))
))))
 :pattern ( ($generated@@76 $generated@@634 ($generated@@508 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@154) (= (type $generated@@640) $generated@@154)) (< ($generated@@638 $generated@@639) ($generated@@623 ($generated@@269 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@269 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@154) (= (type $generated@@642) $generated@@154)) (< ($generated@@638 $generated@@642) ($generated@@623 ($generated@@269 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@269 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@156) (= (type $generated@@644) $generated@@79)) (= ($generated@@150 ($generated@@151 $generated@@643) $generated@@644) ($generated@@150 $generated@@643 $generated@@644)))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@643) $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@154) (= (type $generated@@646) $generated@@68)) (= (type $generated@@647) $generated@@68)) ($generated@@270 $generated@@645 ($generated@@500 $generated@@646 $generated@@647))) (and (= ($generated@@353 ($generated@@413 ($generated@@373 $generated@@154 $generated@@154) $generated@@645)) $generated@@645) ($generated@@76 ($generated@@413 ($generated@@373 $generated@@154 $generated@@154) $generated@@645) ($generated@@500 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@270 $generated@@645 ($generated@@500 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@154) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) ($generated@@270 $generated@@648 ($generated@@508 $generated@@649 $generated@@650))) (and (= ($generated@@353 ($generated@@413 ($generated@@391 $generated@@154 $generated@@154) $generated@@648)) $generated@@648) ($generated@@76 ($generated@@413 ($generated@@391 $generated@@154 $generated@@154) $generated@@648) ($generated@@508 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@270 $generated@@648 ($generated@@508 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) $generated@@68) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) $generated@@154)) ($generated@@270 $generated@@653 ($generated@@182 $generated@@651 $generated@@652))) (and (= ($generated@@353 ($generated@@413 $generated@@79 $generated@@653)) $generated@@653) ($generated@@76 ($generated@@413 $generated@@79 $generated@@653) ($generated@@182 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@270 $generated@@653 ($generated@@182 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@654)))
 (not ($generated@@0 ($generated@@95 ($generated@@520 $generated@@655) $generated@@654))))
 :pattern ( (let (($generated@@655 (type $generated@@654)))
($generated@@95 ($generated@@520 $generated@@655) $generated@@654)))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@73)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@68) (= (type $generated@@659) $generated@@68)) (and (= ($generated@@86 ($generated@@182 $generated@@658 $generated@@659)) $generated@@62) (= ($generated@@656 ($generated@@182 $generated@@658 $generated@@659)) $generated@@66)))
 :pattern ( ($generated@@182 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (= (type $generated@@660) $generated@@79) (= (type $generated@@661) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@277 $generated@@661) (and ($generated@@327 $generated@@660) ($generated@@88 $generated@@660 $generated@@78 $generated@@661)))) ($generated@@88 ($generated@@8 ($generated@@155 $generated@@660)) $generated@@46 $generated@@661))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@155 $generated@@660)) $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@79) (= ($generated@@638 ($generated@@353 $generated@@662)) ($generated@@623 $generated@@662)))
 :pattern ( ($generated@@638 ($generated@@353 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@154) ($generated@@270 $generated@@663 ($generated@@89 0))) (and (= ($generated@@353 ($generated@@413 $generated@@2 $generated@@663)) $generated@@663) ($generated@@76 ($generated@@413 ($generated@@90 $generated@@154 $generated@@4) $generated@@663) ($generated@@89 0))))
 :pattern ( ($generated@@270 $generated@@663 ($generated@@89 0)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@154) (= (type $generated@@665) $generated@@68)) ($generated@@270 $generated@@664 ($generated@@293 $generated@@665))) (and (= ($generated@@353 ($generated@@413 ($generated@@90 $generated@@154 $generated@@4) $generated@@664)) $generated@@664) ($generated@@76 ($generated@@413 ($generated@@90 $generated@@154 $generated@@4) $generated@@664) ($generated@@293 $generated@@665))))
 :pattern ( ($generated@@270 $generated@@664 ($generated@@293 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@666) $generated@@154) (= (type $generated@@667) $generated@@68)) ($generated@@270 $generated@@666 ($generated@@298 $generated@@667))) (and (= ($generated@@353 ($generated@@413 ($generated@@90 $generated@@154 $generated@@4) $generated@@666)) $generated@@666) ($generated@@76 ($generated@@413 ($generated@@90 $generated@@154 $generated@@4) $generated@@666) ($generated@@298 $generated@@667))))
 :pattern ( ($generated@@270 $generated@@666 ($generated@@298 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@154) (= (type $generated@@669) $generated@@68)) ($generated@@270 $generated@@668 ($generated@@196 $generated@@669))) (and (= ($generated@@353 ($generated@@413 ($generated@@90 $generated@@154 $generated@@2) $generated@@668)) $generated@@668) ($generated@@76 ($generated@@413 ($generated@@90 $generated@@154 $generated@@2) $generated@@668) ($generated@@196 $generated@@669))))
 :pattern ( ($generated@@270 $generated@@668 ($generated@@196 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) $generated@@154) (= (type $generated@@671) $generated@@68)) ($generated@@270 $generated@@670 ($generated@@590 $generated@@671))) (and (= ($generated@@353 ($generated@@413 ($generated@@338 $generated@@154) $generated@@670)) $generated@@670) ($generated@@76 ($generated@@413 ($generated@@338 $generated@@154) $generated@@670) ($generated@@590 $generated@@671))))
 :pattern ( ($generated@@270 $generated@@670 ($generated@@590 $generated@@671)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@656 $generated@@78) $generated@@67))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@672) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@672 ($generated@@196 $generated@@673) $generated@@674) (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@154) (< 0 ($generated ($generated@@95 $generated@@672 $generated@@675)))) ($generated@@316 $generated@@675 $generated@@673 $generated@@674))
 :pattern ( ($generated@@95 $generated@@672 $generated@@675))
))))
 :pattern ( ($generated@@88 $generated@@672 ($generated@@196 $generated@@673) $generated@@674))
)))
(assert (= $generated@@195 ($generated@@305 $generated@@195)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@79) (= (type $generated@@677) $generated@@68)) (= (type $generated@@678) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@277 $generated@@678) (and ($generated@@181 $generated@@676) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@68) ($generated@@88 $generated@@676 ($generated@@182 $generated@@677 $generated@@679) $generated@@678))
 :pattern ( ($generated@@88 $generated@@676 ($generated@@182 $generated@@677 $generated@@679) $generated@@678))
))))) ($generated@@316 ($generated@@189 $generated@@676) $generated@@677 $generated@@678))
 :pattern ( ($generated@@316 ($generated@@189 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@79) (= (type $generated@@681) $generated@@68)) (= (type $generated@@682) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@277 $generated@@682) (and ($generated@@181 $generated@@680) (exists (($generated@@683 T@U) ) (!  (and (= (type $generated@@683) $generated@@68) ($generated@@88 $generated@@680 ($generated@@182 $generated@@683 $generated@@681) $generated@@682))
 :pattern ( ($generated@@88 $generated@@680 ($generated@@182 $generated@@683 $generated@@681) $generated@@682))
))))) ($generated@@316 ($generated@@190 $generated@@680) $generated@@681 $generated@@682))
 :pattern ( ($generated@@316 ($generated@@190 $generated@@680) $generated@@681 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (! (let (($generated@@687 (type $generated@@685)))
 (=> (and (and (= (type $generated@@684) ($generated@@90 $generated@@687 $generated@@2)) (= (type $generated@@686) $generated@@687)) (not (= $generated@@685 $generated@@686))) (= ($generated ($generated@@95 $generated@@684 $generated@@686)) ($generated ($generated@@95 ($generated@@346 $generated@@684 $generated@@685) $generated@@686)))))
 :pattern ( ($generated@@346 $generated@@684 $generated@@685) ($generated@@95 $generated@@684 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@688) $generated@@79) (= (type $generated@@689) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@277 $generated@@689) (and ($generated@@327 $generated@@688) ($generated@@88 $generated@@688 $generated@@78 $generated@@689)))) ($generated@@88 ($generated@@170 $generated@@688) $generated@@78 $generated@@689))
 :pattern ( ($generated@@88 ($generated@@170 $generated@@688) $generated@@78 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (and (= (type $generated@@690) $generated@@79) (= (type $generated@@691) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@277 $generated@@691) (and ($generated@@327 $generated@@690) ($generated@@88 $generated@@690 $generated@@78 $generated@@691)))) ($generated@@88 ($generated@@175 $generated@@690) $generated@@78 $generated@@691))
 :pattern ( ($generated@@88 ($generated@@175 $generated@@690) $generated@@78 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@154) (= (type $generated@@693) $generated@@154)) (= ($generated@@269 ($generated@@305 $generated@@692) ($generated@@305 $generated@@693)) ($generated@@305 ($generated@@269 $generated@@692 $generated@@693))))
 :pattern ( ($generated@@269 ($generated@@305 $generated@@692) ($generated@@305 $generated@@693)))
)))
(assert (forall (($generated@@694 Int) ) (! (= ($generated@@353 ($generated@@8 ($generated@@303 $generated@@694))) ($generated@@305 ($generated@@353 ($generated@@8 $generated@@694))))
 :pattern ( ($generated@@353 ($generated@@8 ($generated@@303 $generated@@694))))
)))
(assert (forall (($generated@@695 T@U) ) (! (= ($generated@@353 ($generated@@305 $generated@@695)) ($generated@@305 ($generated@@353 $generated@@695)))
 :pattern ( ($generated@@353 ($generated@@305 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (! (let (($generated@@697 ($generated@@339 (type $generated@@696))))
 (=> (and (= (type $generated@@696) ($generated@@338 $generated@@697)) (= ($generated@@337 $generated@@696) 0)) (= $generated@@696 ($generated@@336 $generated@@697))))
 :pattern ( ($generated@@337 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 (type $generated@@699)))
 (=> (and (and (= (type $generated@@698) ($generated@@90 $generated@@701 $generated@@2)) (= (type $generated@@700) $generated@@2)) (<= 0 ($generated $generated@@700))) (= ($generated@@345 ($generated@@96 $generated@@698 $generated@@699 $generated@@700)) (+ (- ($generated@@345 $generated@@698) ($generated ($generated@@95 $generated@@698 $generated@@699))) ($generated $generated@@700)))))
 :pattern ( ($generated@@345 ($generated@@96 $generated@@698 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@703) $generated@@2)) ($generated@@88 $generated@@703 $generated@@46 $generated@@702))
 :pattern ( ($generated@@88 $generated@@703 $generated@@46 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (= (type $generated@@704) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@705) $generated@@3)) ($generated@@88 $generated@@705 $generated@@47 $generated@@704))
 :pattern ( ($generated@@88 $generated@@705 $generated@@47 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@707) $generated@@4)) ($generated@@88 $generated@@707 $generated@@44 $generated@@706))
 :pattern ( ($generated@@88 $generated@@707 $generated@@44 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@709) $generated@@544)) ($generated@@88 $generated@@709 $generated@@45 $generated@@708))
 :pattern ( ($generated@@88 $generated@@709 $generated@@45 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@711) $generated@@154)) ($generated@@88 $generated@@711 $generated@@48 $generated@@710))
 :pattern ( ($generated@@88 $generated@@711 $generated@@48 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@338 $generated@@154)) (= (type $generated@@713) $generated@@68)) (= ($generated@@76 $generated@@712 ($generated@@590 $generated@@713)) (forall (($generated@@714 Int) ) (!  (=> (and (<= 0 $generated@@714) (< $generated@@714 ($generated@@337 $generated@@712))) ($generated@@270 ($generated@@591 $generated@@712 $generated@@714) $generated@@713))
 :pattern ( ($generated@@591 $generated@@712 $generated@@714))
))))
 :pattern ( ($generated@@76 $generated@@712 ($generated@@590 $generated@@713)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 Int) ) (!  (=> (= (type $generated@@716) ($generated@@338 $generated@@154)) (=> (and (<= 0 $generated@@717) (< $generated@@717 ($generated@@337 $generated@@716))) (< ($generated@@623 ($generated@@413 $generated@@79 ($generated@@591 $generated@@716 $generated@@717))) ($generated@@715 $generated@@716))))
 :pattern ( ($generated@@623 ($generated@@413 $generated@@79 ($generated@@591 $generated@@716 $generated@@717))))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) ($generated@@373 $generated@@154 $generated@@154)) (= (type $generated@@719) $generated@@68)) (= (type $generated@@720) $generated@@68)) ($generated@@76 $generated@@718 ($generated@@500 $generated@@719 $generated@@720))) (and (and ($generated@@76 ($generated@@371 $generated@@718) ($generated@@293 $generated@@719)) ($generated@@76 ($generated@@428 $generated@@718) ($generated@@293 $generated@@720))) ($generated@@76 ($generated@@474 $generated@@718) ($generated@@293 ($generated@@182 $generated@@719 $generated@@720)))))
 :pattern ( ($generated@@76 $generated@@718 ($generated@@500 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (and (= (type $generated@@721) ($generated@@391 $generated@@154 $generated@@154)) (= (type $generated@@722) $generated@@68)) (= (type $generated@@723) $generated@@68)) ($generated@@76 $generated@@721 ($generated@@508 $generated@@722 $generated@@723))) (and (and ($generated@@76 ($generated@@389 $generated@@721) ($generated@@298 $generated@@722)) ($generated@@76 ($generated@@439 $generated@@721) ($generated@@298 $generated@@723))) ($generated@@76 ($generated@@482 $generated@@721) ($generated@@298 ($generated@@182 $generated@@722 $generated@@723)))))
 :pattern ( ($generated@@76 $generated@@721 ($generated@@508 $generated@@722 $generated@@723)))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@2) ($generated@@76 $generated@@724 $generated@@46))
 :pattern ( ($generated@@76 $generated@@724 $generated@@46))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@3) ($generated@@76 $generated@@725 $generated@@47))
 :pattern ( ($generated@@76 $generated@@725 $generated@@47))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@4) ($generated@@76 $generated@@726 $generated@@44))
 :pattern ( ($generated@@76 $generated@@726 $generated@@44))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@544) ($generated@@76 $generated@@727 $generated@@45))
 :pattern ( ($generated@@76 $generated@@727 $generated@@45))
)))
(assert (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@154) ($generated@@76 $generated@@728 $generated@@48))
 :pattern ( ($generated@@76 $generated@@728 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@729) ($generated@@203 $generated@@91 $generated@@4)) (= (type $generated@@730) $generated@@91)) (= (type $generated@@731) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@732) $generated@@79)) (= (type $generated@@733) ($generated@@203 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@735  (=> (and (= $generated@@729 ($generated@@257 $generated@@730 $generated@@731 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@327 $generated@@732))))
(let (($generated@@736 true))
(let (($generated@@737  (=> (and (and (= $generated@@733 ($generated@@202 $generated@@730 $generated@@731 $generated@@60 false)) ($generated@@88 $generated@@732 $generated@@78 $generated@@731)) (and ($generated@@322 $generated@@732) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@732) ($generated@@153 $generated@@154))))) (and (=> (= (ControlFlow 0 4) 1) $generated@@736) (=> (= (ControlFlow 0 4) 3) $generated@@735)))))
(let (($generated@@738  (=> (and (and (and ($generated@@277 $generated@@731) ($generated@@734 $generated@@731)) ($generated@@76 $generated@@732 $generated@@78)) (and (= 2 $generated@@146) (= (ControlFlow 0 5) 4))) $generated@@737)))
$generated@@738)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@T) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U) T@U)
(declare-fun $generated@@200 (T@U T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@213 (T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@215 (T@T T@T) T@T)
(declare-fun $generated@@216 (T@T) T@T)
(declare-fun $generated@@217 (T@T) T@T)
(declare-fun $generated@@218 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@294 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U T@U) Bool)
(declare-fun $generated@@302 (T@U) Bool)
(declare-fun $generated@@304 (T@U T@U) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@326 (Int) Int)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@338 (T@U T@U T@U) Bool)
(declare-fun $generated@@344 (T@U) Bool)
(declare-fun $generated@@349 (T@U) Bool)
(declare-fun $generated@@358 (T@T) T@U)
(declare-fun $generated@@359 (T@U) Int)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@367 (T@U) Int)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@T T@T) T@U)
(declare-fun $generated@@401 (T@T T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@403 (T@T) T@T)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@T T@T) T@U)
(declare-fun $generated@@419 (T@T T@T) T@T)
(declare-fun $generated@@420 (T@T) T@T)
(declare-fun $generated@@421 (T@T) T@T)
(declare-fun $generated@@441 (T@T T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@530 (T@U T@U) T@U)
(declare-fun $generated@@538 (T@U T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@T) T@U)
(declare-fun $generated@@578 () T@T)
(declare-fun $generated@@588 (T@U) T@U)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@625 (T@U Int) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@672 (T@U) Int)
(declare-fun $generated@@690 (T@U) T@U)
(declare-fun $generated@@750 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83 $generated@@84)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84))
))) (= (type $generated@@80) $generated@@70)))
(assert (forall (($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@81) (= (type $generated@@87) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80)  (and (and ($generated@@78 ($generated@@8 $generated@@85) $generated@@46) ($generated@@78 $generated@@86 $generated@@80)) ($generated@@78 $generated@@87 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@71)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@73 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (= (type $generated@@151) $generated@@70) (= ($generated@@1 $generated@@157) 15)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@153 $generated@@160 $generated@@161)) ($generated@@92 $generated@@157 $generated@@2))
 :pattern ( ($generated@@153 $generated@@160 $generated@@161))
))) (= ($generated@@1 $generated@@159) 16)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@154 $generated@@162)) $generated@@159)
 :pattern ( ($generated@@154 $generated@@162))
))) (= (type $generated@@155) $generated@@159)) (forall (($generated@@163 T@T) ) (! (= (type ($generated@@156 $generated@@163)) ($generated@@92 $generated@@163 $generated@@2))
 :pattern ( ($generated@@156 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@158 $generated@@164)) $generated@@157)
 :pattern ( ($generated@@158 $generated@@164))
))))
(assert  (=> (<= 5 $generated@@148) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@81) (or ($generated@@150 $generated@@165) (and (not (= 5 $generated@@148)) (and ($generated@@78 $generated@@165 $generated@@151) (not ($generated@@152 ($generated@@153 ($generated@@154 $generated@@155) $generated@@165) ($generated@@156 $generated@@157))))))) (let (($generated@@166 ($generated@@149 $generated@@165)))
 (and (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@165) ($generated@@158 ($generated@@8 $generated@@166)))) 0) (forall (($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@2) true) (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@165) ($generated@@158 $generated@@167))) 0)) (<= $generated@@166 ($generated $generated@@167)))
 :pattern ( ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@165) ($generated@@158 $generated@@167)))
)))))
 :pattern ( ($generated@@149 $generated@@165))
))))
(assert  (=> (<= 5 $generated@@148) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@81) (or ($generated@@150 $generated@@169) (and (not (= 5 $generated@@148)) (and ($generated@@78 $generated@@169 $generated@@151) (not ($generated@@152 ($generated@@153 ($generated@@154 $generated@@155) $generated@@169) ($generated@@156 $generated@@157))))))) (= ($generated@@149 $generated@@169) ($generated@@168 $generated@@169)))
 :pattern ( ($generated@@149 $generated@@169))
))))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@74)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@81) (= (type $generated@@174) $generated@@81)) (= ($generated@@170 ($generated@@79 $generated@@172 $generated@@173 $generated@@174)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 Int) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@81) (= (type $generated@@177) $generated@@81)) (= ($generated@@168 ($generated@@79 $generated@@175 $generated@@176 $generated@@177)) $generated@@175))
 :pattern ( ($generated@@79 $generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@81)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 Int) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@81) (= (type $generated@@182) $generated@@81)) (= ($generated@@178 ($generated@@79 $generated@@180 $generated@@181 $generated@@182)) $generated@@181))
 :pattern ( ($generated@@79 $generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@81)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 Int) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@81) (= (type $generated@@187) $generated@@81)) (= ($generated@@183 ($generated@@79 $generated@@185 $generated@@186 $generated@@187)) $generated@@187))
 :pattern ( ($generated@@79 $generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (!  (=> (= (type $generated@@188) $generated@@2) ($generated@@78 $generated@@188 ($generated@@91 0)))
 :pattern ( ($generated@@78 $generated@@188 ($generated@@91 0)))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) $generated@@159) (= (type $generated@@192) $generated@@81)) (or ($generated@@190 $generated@@192) (and (not (= 1 $generated@@148)) ($generated@@78 $generated@@192 $generated@@80)))) true)
 :pattern ( ($generated@@189 $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@195 $generated@@196)) $generated@@70)
 :pattern ( ($generated@@194 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (and (= (type $generated@@197) $generated@@70) (= (type $generated@@198) $generated@@70)) (= (type $generated@@199) $generated@@81)) ($generated@@78 $generated@@199 ($generated@@194 $generated@@197 $generated@@198))) ($generated@@193 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199) ($generated@@78 $generated@@199 ($generated@@194 $generated@@197 $generated@@198)))
)))
(assert  (and (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@157)
 :pattern ( ($generated@@201 $generated@@203))
)) (forall (($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@204)) $generated@@157)
 :pattern ( ($generated@@202 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@205) $generated@@81) (= (type $generated@@206) $generated@@81)) true) (= ($generated@@200 $generated@@205 $generated@@206)  (and (= ($generated@@201 $generated@@205) ($generated@@201 $generated@@206)) (= ($generated@@202 $generated@@205) ($generated@@202 $generated@@206)))))
 :pattern ( ($generated@@200 $generated@@205 $generated@@206))
)))
(assert (= (type $generated@@207) $generated@@81))
(assert (= ($generated@@170 $generated@@207) $generated@@63))
(assert (forall (($generated@@210 T@U) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@70)
 :pattern ( ($generated@@208 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and (= (type $generated@@211) ($generated@@92 $generated@@157 $generated@@2)) (= (type $generated@@212) $generated@@70)) ($generated@@78 $generated@@211 ($generated@@208 $generated@@212))) ($generated@@209 $generated@@211))
 :pattern ( ($generated@@78 $generated@@211 ($generated@@208 $generated@@212)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@1 ($generated@@215 $generated@@219 $generated@@220)) 17)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@216 ($generated@@215 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@215 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@217 ($generated@@215 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@215 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@217 (type $generated@@225))))
(= (type ($generated@@213 $generated@@225 $generated@@226 $generated@@227)) $generated@@228))
 :pattern ( ($generated@@213 $generated@@225 $generated@@226 $generated@@227))
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(let (($generated@@234 (type $generated@@230)))
(= (type ($generated@@218 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@215 $generated@@234 $generated@@233))))
 :pattern ( ($generated@@218 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@217 (type $generated@@235))))
 (=> (= (type $generated@@238) $generated@@239) (= ($generated@@213 ($generated@@218 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@236 $generated@@237) $generated@@238)))
 :weight 0
))) (and (and (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@213 ($generated@@218 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@213 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@249 $generated@@251) (= ($generated@@213 ($generated@@218 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@213 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or true (= ($generated@@213 ($generated@@218 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@213 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
)))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ) (! (= (type ($generated@@214 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@215 $generated@@93 $generated@@4))
 :pattern ( ($generated@@214 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@73 (type $generated@@267))))
 (=> (and (and (and (and (= (type $generated@@262) $generated@@93) (= (type $generated@@263) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@264) ($generated@@72 $generated@@4))) (= (type $generated@@266) $generated@@93)) (= (type $generated@@267) ($generated@@72 $generated@@268))) (= ($generated@@0 ($generated@@213 ($generated@@214 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))  (=> (and (not (= $generated@@266 $generated@@262)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@263 $generated@@266) $generated@@264))) $generated@@265))))
 :pattern ( ($generated@@213 ($generated@@214 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ) (! (= (type ($generated@@269 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@215 $generated@@93 $generated@@4))
 :pattern ( ($generated@@269 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Bool) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@73 (type $generated@@279))))
 (=> (and (and (and (and (= (type $generated@@274) $generated@@93) (= (type $generated@@275) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@276) ($generated@@72 $generated@@4))) (= (type $generated@@278) $generated@@93)) (= (type $generated@@279) ($generated@@72 $generated@@280))) (= ($generated@@0 ($generated@@213 ($generated@@269 $generated@@274 $generated@@275 $generated@@276 $generated@@277) $generated@@278 $generated@@279))  (=> (and (not (= $generated@@278 $generated@@274)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@275 $generated@@278) $generated@@276))) $generated@@277))))
 :pattern ( ($generated@@213 ($generated@@269 $generated@@274 $generated@@275 $generated@@276 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@81) (= (type $generated@@282) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@281 $generated@@151 $generated@@282) ($generated@@90 $generated@@281 $generated@@80 $generated@@282)))
 :pattern ( ($generated@@90 $generated@@281 $generated@@151 $generated@@282))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@159) (= (type $generated@@287) $generated@@81)) (or ($generated@@190 $generated@@287) (and (not (= 1 $generated@@148)) ($generated@@78 $generated@@287 $generated@@80)))) (and (=> (not ($generated@@283 $generated@@287)) (let (($generated@@288 ($generated@@183 $generated@@287)))
(let (($generated@@289 ($generated@@178 $generated@@287)))
(let (($generated@@290 ($generated@@168 $generated@@287)))
 (and ($generated@@190 $generated@@289) (=> ($generated@@189 $generated@@286 $generated@@289) (and ($generated@@190 $generated@@288) (=> ($generated@@189 $generated@@286 $generated@@288) (and ($generated@@284 $generated@@289) (=> (or ($generated@@285 $generated@@289 $generated@@207) (<= $generated@@290 ($generated@@168 $generated@@289))) ($generated@@284 $generated@@288))))))))))) (= ($generated@@189 ($generated@@154 $generated@@286) $generated@@287) (ite ($generated@@283 $generated@@287) true (let (($generated@@291 ($generated@@183 $generated@@287)))
(let (($generated@@292 ($generated@@178 $generated@@287)))
(let (($generated@@293 ($generated@@168 $generated@@287)))
 (and (and (and ($generated@@189 $generated@@286 $generated@@292) ($generated@@189 $generated@@286 $generated@@291)) (or ($generated@@285 $generated@@292 $generated@@207) (<= $generated@@293 ($generated@@168 $generated@@292)))) (or ($generated@@285 $generated@@291 $generated@@207) (<= $generated@@293 ($generated@@168 $generated@@291)))))))))))
 :pattern ( ($generated@@189 ($generated@@154 $generated@@286) $generated@@287))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@294 $generated@@296 $generated@@297)) $generated@@81)
 :pattern ( ($generated@@294 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) $generated@@70) (= (type $generated@@299) $generated@@70)) (= (type $generated@@300) $generated@@157)) (= (type $generated@@301) $generated@@157)) (= ($generated@@78 ($generated@@294 $generated@@300 $generated@@301) ($generated@@194 $generated@@298 $generated@@299))  (and ($generated@@295 $generated@@300 $generated@@298) ($generated@@295 $generated@@301 $generated@@299))))
 :pattern ( ($generated@@78 ($generated@@294 $generated@@300 $generated@@301) ($generated@@194 $generated@@298 $generated@@299)))
)))
(assert ($generated@@78 $generated@@207 $generated@@80))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@302 $generated@@303)) ($generated@@90 $generated@@207 $generated@@80 $generated@@303))
 :pattern ( ($generated@@90 $generated@@207 $generated@@80 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@95 (type $generated@@305))))
(= (type ($generated@@304 $generated@@305 $generated@@306)) ($generated@@92 $generated@@307 $generated@@2)))
 :pattern ( ($generated@@304 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 (type $generated@@310)))
 (=> (and (= (type $generated@@308) ($generated@@92 $generated@@311 $generated@@2)) (= (type $generated@@309) ($generated@@92 $generated@@311 $generated@@2))) (= ($generated ($generated@@97 ($generated@@304 $generated@@308 $generated@@309) $generated@@310)) (+ ($generated ($generated@@97 $generated@@308 $generated@@310)) ($generated ($generated@@97 $generated@@309 $generated@@310))))))
 :pattern ( ($generated@@97 ($generated@@304 $generated@@308 $generated@@309) $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@81) (= (type $generated@@313) $generated@@81)) (= ($generated@@200 $generated@@312 $generated@@313) (= $generated@@312 $generated@@313)))
 :pattern ( ($generated@@200 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@81) (= (type $generated@@315) $generated@@81)) (= ($generated@@285 $generated@@314 $generated@@315) (= $generated@@314 $generated@@315)))
 :pattern ( ($generated@@285 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@70)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) ($generated@@92 $generated@@157 $generated@@4)) (= (type $generated@@319) $generated@@70)) (= ($generated@@78 $generated@@318 ($generated@@316 $generated@@319)) (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@157) ($generated@@0 ($generated@@97 $generated@@318 $generated@@320))) ($generated@@295 $generated@@320 $generated@@319))
 :pattern ( ($generated@@97 $generated@@318 $generated@@320))
))))
 :pattern ( ($generated@@78 $generated@@318 ($generated@@316 $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@70)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@92 $generated@@157 $generated@@4)) (= (type $generated@@324) $generated@@70)) (= ($generated@@78 $generated@@323 ($generated@@321 $generated@@324)) (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@157) ($generated@@0 ($generated@@97 $generated@@323 $generated@@325))) ($generated@@295 $generated@@325 $generated@@324))
 :pattern ( ($generated@@97 $generated@@323 $generated@@325))
))))
 :pattern ( ($generated@@78 $generated@@323 ($generated@@321 $generated@@324)))
)))
(assert (forall (($generated@@327 Int) ) (! (= ($generated@@326 $generated@@327) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 (type $generated@@329)))
(= (type ($generated@@328 $generated@@329)) $generated@@330))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= ($generated@@328 $generated@@331) $generated@@331)
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@81) (= (type $generated@@333) $generated@@81)) (and ($generated@@283 $generated@@332) ($generated@@283 $generated@@333))) (= ($generated@@285 $generated@@332 $generated@@333) true))
 :pattern ( ($generated@@285 $generated@@332 $generated@@333) ($generated@@283 $generated@@332))
 :pattern ( ($generated@@285 $generated@@332 $generated@@333) ($generated@@283 $generated@@333))
)))
(assert (forall (($generated@@334 Int) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (= (type $generated@@335) $generated@@81) (= (type $generated@@336) $generated@@81)) (= (type $generated@@337) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@302 $generated@@337)) (= ($generated@@90 ($generated@@79 $generated@@334 $generated@@335 $generated@@336) $generated@@80 $generated@@337)  (and (and ($generated@@90 ($generated@@8 $generated@@334) $generated@@46 $generated@@337) ($generated@@90 $generated@@335 $generated@@80 $generated@@337)) ($generated@@90 $generated@@336 $generated@@80 $generated@@337))))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@334 $generated@@335 $generated@@336) $generated@@80 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@339) $generated@@70) (= (type $generated@@340) $generated@@70)) (= (type $generated@@341) $generated@@157)) (= (type $generated@@342) $generated@@157)) (= (type $generated@@343) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@302 $generated@@343)) (= ($generated@@90 ($generated@@294 $generated@@341 $generated@@342) ($generated@@194 $generated@@339 $generated@@340) $generated@@343)  (and ($generated@@338 $generated@@341 $generated@@339 $generated@@343) ($generated@@338 $generated@@342 $generated@@340 $generated@@343))))
 :pattern ( ($generated@@90 ($generated@@294 $generated@@341 $generated@@342) ($generated@@194 $generated@@339 $generated@@340) $generated@@343))
)))
(assert  (=> (<= 3 $generated@@148) (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (= (type $generated@@345) $generated@@159) (= (type $generated@@346) $generated@@81)) (or ($generated@@344 $generated@@346) (and (not (= 3 $generated@@148)) ($generated@@78 $generated@@346 $generated@@151)))) ($generated@@78 ($generated@@153 $generated@@345 $generated@@346) ($generated@@208 $generated@@46)))
 :pattern ( ($generated@@153 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@81) (= ($generated@@193 $generated@@347) (= ($generated@@170 $generated@@347) $generated@@61)))
 :pattern ( ($generated@@193 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@81) (= ($generated@@283 $generated@@348) (= ($generated@@170 $generated@@348) $generated@@63)))
 :pattern ( ($generated@@283 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@81) (= ($generated@@349 $generated@@350) (= ($generated@@170 $generated@@350) $generated@@65)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@81) ($generated@@349 $generated@@351)) (exists (($generated@@352 Int) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (and (and (= (type $generated@@353) $generated@@81) (= (type $generated@@354) $generated@@81)) (= $generated@@351 ($generated@@79 $generated@@352 $generated@@353 $generated@@354)))
 :no-pattern (type $generated@@353)
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
)))
 :pattern ( ($generated@@349 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@81) ($generated@@193 $generated@@355)) (exists (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (and (and (= (type $generated@@356) $generated@@157) (= (type $generated@@357) $generated@@157)) (= $generated@@355 ($generated@@294 $generated@@356 $generated@@357)))
 :no-pattern (type $generated@@356)
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
)))
 :pattern ( ($generated@@193 $generated@@355))
)))
(assert  (and (and (forall (($generated@@362 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@362)) 18)) (forall (($generated@@363 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363))
))) (forall (($generated@@364 T@T) ) (! (= (type ($generated@@358 $generated@@364)) ($generated@@360 $generated@@364))
 :pattern ( ($generated@@358 $generated@@364))
))))
(assert (forall (($generated@@365 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@365)) 0)
 :pattern ( ($generated@@358 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@81) ($generated@@283 $generated@@366)) (= $generated@@366 $generated@@207))
 :pattern ( ($generated@@283 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= (type ($generated@@368 $generated@@369 $generated@@370)) ($generated@@92 $generated@@371 $generated@@2)))
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
 (=> (= (type $generated@@372) ($generated@@92 $generated@@374 $generated@@2)) (= ($generated@@367 ($generated@@368 $generated@@372 $generated@@373)) (+ ($generated@@367 $generated@@372) 1))))
 :pattern ( ($generated@@367 ($generated@@368 $generated@@372 $generated@@373)))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@159) (= (type $generated@@376) $generated@@81)) (or ($generated@@190 ($generated@@328 $generated@@376)) (and (not (= 1 $generated@@148)) ($generated@@78 $generated@@376 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@328 ($generated@@11 ($generated@@283 ($generated@@328 $generated@@376)))))) (let (($generated@@377 ($generated@@328 ($generated@@183 ($generated@@328 $generated@@376)))))
(let (($generated@@378 ($generated@@328 ($generated@@178 ($generated@@328 $generated@@376)))))
(let (($generated@@379 ($generated@@326 ($generated@@168 ($generated@@328 $generated@@376)))))
 (and ($generated@@190 $generated@@378) (=> ($generated@@189 ($generated@@154 $generated@@375) $generated@@378) (and ($generated@@190 $generated@@377) (=> ($generated@@189 ($generated@@154 $generated@@375) $generated@@377) (and ($generated@@284 $generated@@378) (=> (or ($generated@@285 $generated@@378 $generated@@207) (<= $generated@@379 ($generated@@168 $generated@@378))) ($generated@@284 $generated@@377))))))))))) (= ($generated@@189 ($generated@@154 $generated@@375) ($generated@@328 $generated@@376)) (ite ($generated@@283 ($generated@@328 $generated@@376)) true (let (($generated@@380 ($generated@@328 ($generated@@183 ($generated@@328 $generated@@376)))))
(let (($generated@@381 ($generated@@328 ($generated@@178 ($generated@@328 $generated@@376)))))
(let (($generated@@382 ($generated@@326 ($generated@@168 ($generated@@328 $generated@@376)))))
 (and (and (and ($generated@@189 ($generated@@154 $generated@@375) $generated@@381) ($generated@@189 ($generated@@154 $generated@@375) $generated@@380)) (or ($generated@@285 $generated@@381 $generated@@207) (<= $generated@@382 ($generated@@326 ($generated@@168 $generated@@381))))) (or ($generated@@285 $generated@@380 $generated@@207) (<= $generated@@382 ($generated@@326 ($generated@@168 $generated@@380))))))))))))
 :weight 3
 :pattern ( ($generated@@189 ($generated@@154 $generated@@375) ($generated@@328 $generated@@376)))
))))
(assert  (=> (<= 3 $generated@@148) (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@159) (= (type $generated@@384) $generated@@81)) (or ($generated@@344 ($generated@@328 $generated@@384)) (and (not (= 3 $generated@@148)) ($generated@@78 $generated@@384 $generated@@151)))) (and (=> (not ($generated@@0 ($generated@@328 ($generated@@11 ($generated@@283 ($generated@@328 $generated@@384)))))) (let (($generated@@385 ($generated@@328 ($generated@@183 ($generated@@328 $generated@@384)))))
(let (($generated@@386 ($generated@@328 ($generated@@178 ($generated@@328 $generated@@384)))))
 (and ($generated@@344 $generated@@386) ($generated@@344 $generated@@385))))) (= ($generated@@153 ($generated@@154 $generated@@383) ($generated@@328 $generated@@384)) (ite ($generated@@283 ($generated@@328 $generated@@384)) ($generated@@156 $generated@@157) (let (($generated@@387 ($generated@@328 ($generated@@183 ($generated@@328 $generated@@384)))))
(let (($generated@@388 ($generated@@328 ($generated@@178 ($generated@@328 $generated@@384)))))
(let (($generated@@389 ($generated@@326 ($generated@@168 ($generated@@328 $generated@@384)))))
($generated@@304 ($generated@@304 ($generated@@368 ($generated@@156 $generated@@157) ($generated@@158 ($generated@@8 $generated@@389))) ($generated@@153 ($generated@@154 $generated@@383) $generated@@388)) ($generated@@153 ($generated@@154 $generated@@383) $generated@@387)))))))))
 :weight 3
 :pattern ( ($generated@@153 ($generated@@154 $generated@@383) ($generated@@328 $generated@@384)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@70) (= (type $generated@@392) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@338 ($generated@@158 $generated@@390) $generated@@391 $generated@@392) ($generated@@90 $generated@@390 $generated@@391 $generated@@392)))
 :pattern ( ($generated@@338 ($generated@@158 $generated@@390) $generated@@391 $generated@@392))
)))
(assert  (=> (<= 5 $generated@@148) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@81) (or ($generated@@150 ($generated@@328 $generated@@393)) (and (not (= 5 $generated@@148)) (and ($generated@@78 $generated@@393 $generated@@151) (not ($generated@@152 ($generated@@153 ($generated@@154 $generated@@155) ($generated@@328 $generated@@393)) ($generated@@156 $generated@@157))))))) (= ($generated@@149 ($generated@@328 $generated@@393)) ($generated@@326 ($generated@@168 ($generated@@328 $generated@@393)))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@328 $generated@@393)))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@81) (= (type $generated@@395) $generated@@81)) (and ($generated@@349 $generated@@394) ($generated@@349 $generated@@395))) (= ($generated@@285 $generated@@394 $generated@@395)  (and (and (= ($generated@@168 $generated@@394) ($generated@@168 $generated@@395)) ($generated@@285 ($generated@@178 $generated@@394) ($generated@@178 $generated@@395))) ($generated@@285 ($generated@@183 $generated@@394) ($generated@@183 $generated@@395)))))
 :pattern ( ($generated@@285 $generated@@394 $generated@@395) ($generated@@349 $generated@@394))
 :pattern ( ($generated@@285 $generated@@394 $generated@@395) ($generated@@349 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@95 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@92 $generated@@397 $generated@@2)) (and (= (= ($generated@@367 $generated@@396) 0) (= $generated@@396 ($generated@@156 $generated@@397))) (=> (not (= ($generated@@367 $generated@@396) 0)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (< 0 ($generated ($generated@@97 $generated@@396 $generated@@398))))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@367 $generated@@396))
)))
(assert  (and (and (and (and (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (= ($generated@@1 ($generated@@401 $generated@@404 $generated@@405)) 19)) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@402 ($generated@@401 $generated@@406 $generated@@407)) $generated@@406)
 :pattern ( ($generated@@401 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@T) ($generated@@409 T@T) ) (! (= ($generated@@403 ($generated@@401 $generated@@408 $generated@@409)) $generated@@409)
 :pattern ( ($generated@@401 $generated@@408 $generated@@409))
))) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@402 (type $generated@@410))))
(= (type ($generated@@399 $generated@@410)) ($generated@@92 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@410))
))) (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (! (= (type ($generated@@400 $generated@@412 $generated@@413)) ($generated@@401 $generated@@412 $generated@@413))
 :pattern ( ($generated@@400 $generated@@412 $generated@@413))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@T) ) (! (let (($generated@@416 (type $generated@@414)))
 (not ($generated@@0 ($generated@@97 ($generated@@399 ($generated@@400 $generated@@416 $generated@@415)) $generated@@414))))
 :pattern ( (let (($generated@@416 (type $generated@@414)))
($generated@@97 ($generated@@399 ($generated@@400 $generated@@416 $generated@@415)) $generated@@414)))
)))
(assert  (and (and (and (and (forall (($generated@@422 T@T) ($generated@@423 T@T) ) (= ($generated@@1 ($generated@@419 $generated@@422 $generated@@423)) 20)) (forall (($generated@@424 T@T) ($generated@@425 T@T) ) (! (= ($generated@@420 ($generated@@419 $generated@@424 $generated@@425)) $generated@@424)
 :pattern ( ($generated@@419 $generated@@424 $generated@@425))
))) (forall (($generated@@426 T@T) ($generated@@427 T@T) ) (! (= ($generated@@421 ($generated@@419 $generated@@426 $generated@@427)) $generated@@427)
 :pattern ( ($generated@@419 $generated@@426 $generated@@427))
))) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@420 (type $generated@@428))))
(= (type ($generated@@417 $generated@@428)) ($generated@@92 $generated@@429 $generated@@4)))
 :pattern ( ($generated@@417 $generated@@428))
))) (forall (($generated@@430 T@T) ($generated@@431 T@T) ) (! (= (type ($generated@@418 $generated@@430 $generated@@431)) ($generated@@419 $generated@@430 $generated@@431))
 :pattern ( ($generated@@418 $generated@@430 $generated@@431))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@T) ) (! (let (($generated@@434 (type $generated@@432)))
 (not ($generated@@0 ($generated@@97 ($generated@@417 ($generated@@418 $generated@@434 $generated@@433)) $generated@@432))))
 :pattern ( (let (($generated@@434 (type $generated@@432)))
($generated@@97 ($generated@@417 ($generated@@418 $generated@@434 $generated@@433)) $generated@@432)))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@95 (type $generated@@435))))
 (=> (and (= (type $generated@@435) ($generated@@92 $generated@@437 $generated@@2)) (= (type $generated@@436) ($generated@@92 $generated@@437 $generated@@2))) (= ($generated@@367 ($generated@@304 $generated@@435 $generated@@436)) (+ ($generated@@367 $generated@@435) ($generated@@367 $generated@@436)))))
 :pattern ( ($generated@@367 ($generated@@304 $generated@@435 $generated@@436)))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@95 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@92 $generated@@439 $generated@@2)) (= ($generated@@209 $generated@@438) (forall (($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@439) (and (<= 0 ($generated ($generated@@97 $generated@@438 $generated@@440))) (<= ($generated ($generated@@97 $generated@@438 $generated@@440)) ($generated@@367 $generated@@438))))
 :pattern ( ($generated@@97 $generated@@438 $generated@@440))
)))))
 :pattern ( ($generated@@209 $generated@@438))
)))
(assert (forall (($generated@@442 T@T) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@442)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@157) ($generated@@295 $generated@@444 $generated@@80)) (and (= ($generated@@158 ($generated@@441 $generated@@81 $generated@@444)) $generated@@444) ($generated@@78 ($generated@@441 $generated@@81 $generated@@444) $generated@@80)))
 :pattern ( ($generated@@295 $generated@@444 $generated@@80))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@157) ($generated@@295 $generated@@445 $generated@@151)) (and (= ($generated@@158 ($generated@@441 $generated@@81 $generated@@445)) $generated@@445) ($generated@@78 ($generated@@441 $generated@@81 $generated@@445) $generated@@151)))
 :pattern ( ($generated@@295 $generated@@445 $generated@@151))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
 (=> (= (type $generated@@446) ($generated@@92 $generated@@448 $generated@@2)) (= ($generated ($generated@@97 ($generated@@368 $generated@@446 $generated@@447) $generated@@447)) (+ ($generated ($generated@@97 $generated@@446 $generated@@447)) 1))))
 :pattern ( ($generated@@368 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@450)))
 (=> (and (and (= (type $generated@@449) ($generated@@92 $generated@@452 $generated@@2)) (= (type $generated@@451) $generated@@452)) (< 0 ($generated ($generated@@97 $generated@@449 $generated@@451)))) (< 0 ($generated ($generated@@97 ($generated@@368 $generated@@449 $generated@@450) $generated@@451)))))
 :pattern ( ($generated@@368 $generated@@449 $generated@@450) ($generated@@97 $generated@@449 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@403 (type $generated@@453))))
(let (($generated@@455 ($generated@@402 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@401 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@400 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) ($generated@@0 ($generated@@97 ($generated@@399 $generated@@453) $generated@@456)))
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@399 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@403 (type $generated@@458))))
(= (type ($generated@@457 $generated@@458)) ($generated@@92 $generated@@459 $generated@@4)))
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@403 (type $generated@@460))))
(let (($generated@@462 ($generated@@402 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@401 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@400 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@461) ($generated@@0 ($generated@@97 ($generated@@457 $generated@@460) $generated@@463)))
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@457 $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@421 (type $generated@@464))))
(let (($generated@@466 ($generated@@420 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@419 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@418 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) ($generated@@0 ($generated@@97 ($generated@@417 $generated@@464) $generated@@467)))
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@417 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@421 (type $generated@@469))))
(= (type ($generated@@468 $generated@@469)) ($generated@@92 $generated@@470 $generated@@4)))
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@421 (type $generated@@471))))
(let (($generated@@473 ($generated@@420 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@419 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@418 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ) (!  (and (= (type $generated@@474) $generated@@472) ($generated@@0 ($generated@@97 ($generated@@468 $generated@@471) $generated@@474)))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@468 $generated@@471))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@476)))
 (=> (and (= (type $generated@@475) ($generated@@92 $generated@@478 $generated@@2)) (= (type $generated@@477) $generated@@478)) (= (< 0 ($generated ($generated@@97 ($generated@@368 $generated@@475 $generated@@476) $generated@@477)))  (or (= $generated@@477 $generated@@476) (< 0 ($generated ($generated@@97 $generated@@475 $generated@@477)))))))
 :pattern ( ($generated@@97 ($generated@@368 $generated@@475 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@92 $generated@@157 $generated@@2)) (= (type $generated@@480) $generated@@70)) (= ($generated@@78 $generated@@479 ($generated@@208 $generated@@480)) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@157) (< 0 ($generated ($generated@@97 $generated@@479 $generated@@481)))) ($generated@@295 $generated@@481 $generated@@480))
 :pattern ( ($generated@@97 $generated@@479 $generated@@481))
))))
 :pattern ( ($generated@@78 $generated@@479 ($generated@@208 $generated@@480)))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@95 (type $generated@@482))))
 (=> (and (= (type $generated@@482) ($generated@@92 $generated@@484 $generated@@2)) (= (type $generated@@483) ($generated@@92 $generated@@484 $generated@@2))) (= ($generated@@152 $generated@@482 $generated@@483) (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@484) (= ($generated ($generated@@97 $generated@@482 $generated@@485)) ($generated ($generated@@97 $generated@@483 $generated@@485))))
 :pattern ( ($generated@@97 $generated@@482 $generated@@485))
 :pattern ( ($generated@@97 $generated@@483 $generated@@485))
)))))
 :pattern ( ($generated@@152 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@284 $generated@@486)) (or ($generated@@283 $generated@@486) ($generated@@349 $generated@@486)))
 :pattern ( ($generated@@284 $generated@@486))
)))
(assert  (=> (<= 3 $generated@@148) (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@487) $generated@@159) (= (type $generated@@488) $generated@@81)) (or ($generated@@344 $generated@@488) (and (not (= 3 $generated@@148)) ($generated@@78 $generated@@488 $generated@@151)))) (and (=> (not ($generated@@283 $generated@@488)) (let (($generated@@489 ($generated@@183 $generated@@488)))
(let (($generated@@490 ($generated@@178 $generated@@488)))
 (and ($generated@@344 $generated@@490) ($generated@@344 $generated@@489))))) (= ($generated@@153 ($generated@@154 $generated@@487) $generated@@488) (ite ($generated@@283 $generated@@488) ($generated@@156 $generated@@157) (let (($generated@@491 ($generated@@183 $generated@@488)))
(let (($generated@@492 ($generated@@178 $generated@@488)))
(let (($generated@@493 ($generated@@168 $generated@@488)))
($generated@@304 ($generated@@304 ($generated@@368 ($generated@@156 $generated@@157) ($generated@@158 ($generated@@8 $generated@@493))) ($generated@@153 $generated@@487 $generated@@492)) ($generated@@153 $generated@@487 $generated@@491)))))))))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@487) $generated@@488))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@92 $generated@@157 $generated@@4)) (= (type $generated@@495) $generated@@70)) (= (type $generated@@496) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@494 ($generated@@316 $generated@@495) $generated@@496) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@157) ($generated@@0 ($generated@@97 $generated@@494 $generated@@497))) ($generated@@338 $generated@@497 $generated@@495 $generated@@496))
 :pattern ( ($generated@@97 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@90 $generated@@494 ($generated@@316 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@92 $generated@@157 $generated@@4)) (= (type $generated@@499) $generated@@70)) (= (type $generated@@500) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@498 ($generated@@321 $generated@@499) $generated@@500) (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@157) ($generated@@0 ($generated@@97 $generated@@498 $generated@@501))) ($generated@@338 $generated@@501 $generated@@499 $generated@@500))
 :pattern ( ($generated@@97 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@90 $generated@@498 ($generated@@321 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated ($generated@@97 ($generated@@156 $generated@@503) $generated@@502)) 0))
 :pattern ( (let (($generated@@503 (type $generated@@502)))
($generated@@97 ($generated@@156 $generated@@503) $generated@@502)))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) ($generated@@92 $generated@@157 $generated@@4))
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@403 (type $generated@@507))))
(let (($generated@@509 ($generated@@402 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507)) ($generated@@92 $generated@@509 $generated@@508))))
 :pattern ( ($generated@@505 $generated@@507))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) ($generated@@401 $generated@@157 $generated@@157)) (= (type $generated@@511) $generated@@157)) (= ($generated@@0 ($generated@@97 ($generated@@504 $generated@@510) $generated@@511))  (and ($generated@@0 ($generated@@97 ($generated@@399 $generated@@510) ($generated@@201 ($generated@@441 $generated@@81 $generated@@511)))) (= ($generated@@97 ($generated@@505 $generated@@510) ($generated@@201 ($generated@@441 $generated@@81 $generated@@511))) ($generated@@202 ($generated@@441 $generated@@81 $generated@@511))))))
 :pattern ( ($generated@@97 ($generated@@504 $generated@@510) $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) ($generated@@92 $generated@@157 $generated@@4))
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@421 (type $generated@@515))))
(let (($generated@@517 ($generated@@420 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515)) ($generated@@92 $generated@@517 $generated@@516))))
 :pattern ( ($generated@@513 $generated@@515))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) ($generated@@419 $generated@@157 $generated@@157)) (= (type $generated@@519) $generated@@157)) (= ($generated@@0 ($generated@@97 ($generated@@512 $generated@@518) $generated@@519))  (and ($generated@@0 ($generated@@97 ($generated@@417 $generated@@518) ($generated@@201 ($generated@@441 $generated@@81 $generated@@519)))) (= ($generated@@97 ($generated@@513 $generated@@518) ($generated@@201 ($generated@@441 $generated@@81 $generated@@519))) ($generated@@202 ($generated@@441 $generated@@81 $generated@@519))))))
 :pattern ( ($generated@@97 ($generated@@512 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(let (($generated@@523 ($generated@@402 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@401 $generated@@523 $generated@@522)) (= ($generated@@0 ($generated@@97 ($generated@@457 $generated@@520) $generated@@521)) (exists (($generated@@524 T@U) ) (!  (and (= (type $generated@@524) $generated@@523) (and ($generated@@0 ($generated@@97 ($generated@@399 $generated@@520) $generated@@524)) (= $generated@@521 ($generated@@97 ($generated@@505 $generated@@520) $generated@@524))))
 :pattern ( ($generated@@97 ($generated@@399 $generated@@520) $generated@@524))
 :pattern ( ($generated@@97 ($generated@@505 $generated@@520) $generated@@524))
))))))
 :pattern ( ($generated@@97 ($generated@@457 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
(let (($generated@@528 ($generated@@420 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@419 $generated@@528 $generated@@527)) (= ($generated@@0 ($generated@@97 ($generated@@468 $generated@@525) $generated@@526)) (exists (($generated@@529 T@U) ) (!  (and (= (type $generated@@529) $generated@@528) (and ($generated@@0 ($generated@@97 ($generated@@417 $generated@@525) $generated@@529)) (= $generated@@526 ($generated@@97 ($generated@@513 $generated@@525) $generated@@529))))
 :pattern ( ($generated@@97 ($generated@@417 $generated@@525) $generated@@529))
 :pattern ( ($generated@@97 ($generated@@513 $generated@@525) $generated@@529))
))))))
 :pattern ( ($generated@@97 ($generated@@468 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) ($generated@@401 $generated@@157 $generated@@157)) (= (type $generated@@534) $generated@@70)) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@533 ($generated@@530 $generated@@534 $generated@@535) $generated@@536) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@157) ($generated@@0 ($generated@@97 ($generated@@399 $generated@@533) $generated@@537))) (and ($generated@@338 ($generated@@97 ($generated@@505 $generated@@533) $generated@@537) $generated@@535 $generated@@536) ($generated@@338 $generated@@537 $generated@@534 $generated@@536)))
 :pattern ( ($generated@@97 ($generated@@505 $generated@@533) $generated@@537))
 :pattern ( ($generated@@97 ($generated@@399 $generated@@533) $generated@@537))
))))
 :pattern ( ($generated@@90 $generated@@533 ($generated@@530 $generated@@534 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) ($generated@@419 $generated@@157 $generated@@157)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) (= (type $generated@@544) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@541 ($generated@@538 $generated@@542 $generated@@543) $generated@@544) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@0 ($generated@@97 ($generated@@417 $generated@@541) $generated@@545))) (and ($generated@@338 ($generated@@97 ($generated@@513 $generated@@541) $generated@@545) $generated@@543 $generated@@544) ($generated@@338 $generated@@545 $generated@@542 $generated@@544)))
 :pattern ( ($generated@@97 ($generated@@513 $generated@@541) $generated@@545))
 :pattern ( ($generated@@97 ($generated@@417 $generated@@541) $generated@@545))
))))
 :pattern ( ($generated@@90 $generated@@541 ($generated@@538 $generated@@542 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@159)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@159) (= (type $generated@@549) $generated@@81)) (= ($generated@@189 $generated@@548 $generated@@549) ($generated@@189 $generated@@155 $generated@@549)))
 :pattern ( ($generated@@189 ($generated@@546 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@95 (type $generated@@550))))
 (=> (and (and (= (type $generated@@550) ($generated@@92 $generated@@552 $generated@@2)) (= (type $generated@@551) ($generated@@92 $generated@@552 $generated@@2))) ($generated@@152 $generated@@550 $generated@@551)) (= $generated@@550 $generated@@551)))
 :pattern ( ($generated@@152 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@81) ($generated@@78 $generated@@553 $generated@@80)) (or ($generated@@283 $generated@@553) ($generated@@349 $generated@@553)))
 :pattern ( ($generated@@349 $generated@@553) ($generated@@78 $generated@@553 $generated@@80))
 :pattern ( ($generated@@283 $generated@@553) ($generated@@78 $generated@@553 $generated@@80))
)))
(assert (forall (($generated@@555 T@T) ) (! (= (type ($generated@@554 $generated@@555)) ($generated@@92 $generated@@555 $generated@@4))
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@421 (type $generated@@556))))
(let (($generated@@558 ($generated@@420 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@419 $generated@@558 $generated@@557)) (= (= $generated@@556 ($generated@@418 $generated@@558 $generated@@557)) (= ($generated@@417 $generated@@556) ($generated@@554 $generated@@558))))))
 :pattern ( ($generated@@417 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@421 (type $generated@@559))))
(let (($generated@@561 ($generated@@420 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@419 $generated@@561 $generated@@560)) (= (= $generated@@559 ($generated@@418 $generated@@561 $generated@@560)) (= ($generated@@468 $generated@@559) ($generated@@554 $generated@@560))))))
 :pattern ( ($generated@@468 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@421 (type $generated@@562))))
(let (($generated@@564 ($generated@@420 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@419 $generated@@564 $generated@@563)) (= (= $generated@@562 ($generated@@418 $generated@@564 $generated@@563)) (= ($generated@@512 $generated@@562) ($generated@@554 $generated@@157))))))
 :pattern ( ($generated@@512 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@403 (type $generated@@565))))
(let (($generated@@567 ($generated@@402 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@401 $generated@@567 $generated@@566)) (or (= $generated@@565 ($generated@@400 $generated@@567 $generated@@566)) (exists (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (and (and (= (type $generated@@568) $generated@@157) (= (type $generated@@569) $generated@@157)) ($generated@@0 ($generated@@97 ($generated@@504 $generated@@565) ($generated@@158 ($generated@@294 $generated@@568 $generated@@569)))))
 :no-pattern (type $generated@@568)
 :no-pattern (type $generated@@569)
 :no-pattern ($generated $generated@@568)
 :no-pattern ($generated@@0 $generated@@568)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
))))))
 :pattern ( ($generated@@504 $generated@@565))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@421 (type $generated@@570))))
(let (($generated@@572 ($generated@@420 (type $generated@@570))))
 (=> (= (type $generated@@570) ($generated@@419 $generated@@572 $generated@@571)) (or (= $generated@@570 ($generated@@418 $generated@@572 $generated@@571)) (exists (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (and (and (= (type $generated@@573) $generated@@157) (= (type $generated@@574) $generated@@157)) ($generated@@0 ($generated@@97 ($generated@@512 $generated@@570) ($generated@@158 ($generated@@294 $generated@@573 $generated@@574)))))
 :no-pattern (type $generated@@573)
 :no-pattern (type $generated@@574)
 :no-pattern ($generated $generated@@573)
 :no-pattern ($generated@@0 $generated@@573)
 :no-pattern ($generated $generated@@574)
 :no-pattern ($generated@@0 $generated@@574)
))))))
 :pattern ( ($generated@@512 $generated@@570))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) ($generated@@295 $generated@@575 $generated@@46)) (and (= ($generated@@158 ($generated@@441 $generated@@2 $generated@@575)) $generated@@575) ($generated@@78 ($generated@@441 $generated@@2 $generated@@575) $generated@@46)))
 :pattern ( ($generated@@295 $generated@@575 $generated@@46))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@157) ($generated@@295 $generated@@576 $generated@@47)) (and (= ($generated@@158 ($generated@@441 $generated@@3 $generated@@576)) $generated@@576) ($generated@@78 ($generated@@441 $generated@@3 $generated@@576) $generated@@47)))
 :pattern ( ($generated@@295 $generated@@576 $generated@@47))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@157) ($generated@@295 $generated@@577 $generated@@44)) (and (= ($generated@@158 ($generated@@441 $generated@@4 $generated@@577)) $generated@@577) ($generated@@78 ($generated@@441 $generated@@4 $generated@@577) $generated@@44)))
 :pattern ( ($generated@@295 $generated@@577 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@578) 21))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@157) ($generated@@295 $generated@@579 $generated@@45)) (and (= ($generated@@158 ($generated@@441 $generated@@578 $generated@@579)) $generated@@579) ($generated@@78 ($generated@@441 $generated@@578 $generated@@579) $generated@@45)))
 :pattern ( ($generated@@295 $generated@@579 $generated@@45))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@159) (= (type $generated@@581) $generated@@81)) (= ($generated@@189 ($generated@@154 $generated@@580) $generated@@581) ($generated@@189 $generated@@580 $generated@@581)))
 :pattern ( ($generated@@189 ($generated@@154 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@70) (= ($generated@@295 ($generated@@158 $generated@@582) $generated@@583) ($generated@@78 $generated@@582 $generated@@583)))
 :pattern ( ($generated@@295 ($generated@@158 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@95 (type $generated@@584))))
 (=> (= (type $generated@@584) ($generated@@92 $generated@@585 $generated@@2)) (<= 0 ($generated@@367 $generated@@584))))
 :pattern ( ($generated@@367 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@361 (type $generated@@586))))
 (=> (= (type $generated@@586) ($generated@@360 $generated@@587)) (<= 0 ($generated@@359 $generated@@586))))
 :pattern ( ($generated@@359 $generated@@586))
)))
(assert (forall (($generated@@589 T@U) ) (! (= (type ($generated@@588 $generated@@589)) $generated@@70)
 :pattern ( ($generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@70) (= (type $generated@@591) $generated@@70)) (= ($generated@@588 ($generated@@530 $generated@@590 $generated@@591)) $generated@@590))
 :pattern ( ($generated@@530 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@70)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@70) (= (type $generated@@595) $generated@@70)) (= ($generated@@592 ($generated@@530 $generated@@594 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@530 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@70) (= (type $generated@@597) $generated@@70)) (= ($generated@@88 ($generated@@530 $generated@@596 $generated@@597)) $generated@@58))
 :pattern ( ($generated@@530 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@70)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@70) (= (type $generated@@601) $generated@@70)) (= ($generated@@598 ($generated@@538 $generated@@600 $generated@@601)) $generated@@600))
 :pattern ( ($generated@@538 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@70)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@70) (= (type $generated@@605) $generated@@70)) (= ($generated@@602 ($generated@@538 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@538 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@70) (= (type $generated@@607) $generated@@70)) (= ($generated@@88 ($generated@@538 $generated@@606 $generated@@607)) $generated@@59))
 :pattern ( ($generated@@538 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@157) (= (type $generated@@609) $generated@@157)) (= ($generated@@170 ($generated@@294 $generated@@608 $generated@@609)) $generated@@61))
 :pattern ( ($generated@@294 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@70)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@70) (= (type $generated@@613) $generated@@70)) (= ($generated@@610 ($generated@@194 $generated@@612 $generated@@613)) $generated@@612))
 :pattern ( ($generated@@194 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@70)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@70) (= (type $generated@@617) $generated@@70)) (= ($generated@@614 ($generated@@194 $generated@@616 $generated@@617)) $generated@@617))
 :pattern ( ($generated@@194 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@157) (= (type $generated@@619) $generated@@157)) (= ($generated@@201 ($generated@@294 $generated@@618 $generated@@619)) $generated@@618))
 :pattern ( ($generated@@294 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@157) (= (type $generated@@621) $generated@@157)) (= ($generated@@202 ($generated@@294 $generated@@620 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@294 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@159) (= (type $generated@@623) $generated@@81)) (= ($generated@@153 $generated@@622 $generated@@623) ($generated@@153 $generated@@155 $generated@@623)))
 :pattern ( ($generated@@153 ($generated@@546 $generated@@622) $generated@@623))
)))
(assert  (and (forall (($generated@@626 T@U) ) (! (= (type ($generated@@624 $generated@@626)) $generated@@70)
 :pattern ( ($generated@@624 $generated@@626))
)) (forall (($generated@@627 T@U) ($generated@@628 Int) ) (! (let (($generated@@629 ($generated@@361 (type $generated@@627))))
(= (type ($generated@@625 $generated@@627 $generated@@628)) $generated@@629))
 :pattern ( ($generated@@625 $generated@@627 $generated@@628))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@360 $generated@@157)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@630 ($generated@@624 $generated@@631) $generated@@632) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@359 $generated@@630))) ($generated@@338 ($generated@@625 $generated@@630 $generated@@633) $generated@@631 $generated@@632))
 :pattern ( ($generated@@625 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@90 $generated@@630 ($generated@@624 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@634 Int) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@81) (= (type $generated@@636) $generated@@81)) (= ($generated@@79 ($generated@@326 $generated@@634) ($generated@@328 $generated@@635) ($generated@@328 $generated@@636)) ($generated@@328 ($generated@@79 $generated@@634 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@79 ($generated@@326 $generated@@634) ($generated@@328 $generated@@635) ($generated@@328 $generated@@636)))
)))
(assert (forall (($generated@@638 Int) ) (! (= ($generated@@637 ($generated@@91 $generated@@638)) $generated@@638)
 :pattern ( ($generated@@91 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@70)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@70) (= ($generated@@639 ($generated@@316 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@316 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@70) (= ($generated@@88 ($generated@@316 $generated@@642)) $generated@@54))
 :pattern ( ($generated@@316 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@70)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@70) (= ($generated@@643 ($generated@@321 $generated@@645)) $generated@@645))
 :pattern ( ($generated@@321 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@70) (= ($generated@@88 ($generated@@321 $generated@@646)) $generated@@55))
 :pattern ( ($generated@@321 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@70)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@70) (= ($generated@@647 ($generated@@208 $generated@@649)) $generated@@649))
 :pattern ( ($generated@@208 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@70) (= ($generated@@88 ($generated@@208 $generated@@650)) $generated@@56))
 :pattern ( ($generated@@208 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@70)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@70) (= ($generated@@651 ($generated@@624 $generated@@653)) $generated@@653))
 :pattern ( ($generated@@624 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@70) (= ($generated@@88 ($generated@@624 $generated@@654)) $generated@@57))
 :pattern ( ($generated@@624 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@655)))
(= ($generated@@441 $generated@@656 ($generated@@158 $generated@@655)) $generated@@655))
 :pattern ( ($generated@@158 $generated@@655))
)))
(assert (forall (($generated@@658 Int) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@81) (= (type $generated@@660) $generated@@81)) (< ($generated@@657 $generated@@659) ($generated@@657 ($generated@@79 $generated@@658 $generated@@659 $generated@@660))))
 :pattern ( ($generated@@79 $generated@@658 $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 Int) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@81) (= (type $generated@@663) $generated@@81)) (< ($generated@@657 $generated@@663) ($generated@@657 ($generated@@79 $generated@@661 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@79 $generated@@661 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@664) ($generated@@401 $generated@@157 $generated@@157)) (= (type $generated@@665) $generated@@70)) (= (type $generated@@666) $generated@@70)) (= ($generated@@78 $generated@@664 ($generated@@530 $generated@@665 $generated@@666)) (forall (($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@157) ($generated@@0 ($generated@@97 ($generated@@399 $generated@@664) $generated@@667))) (and ($generated@@295 ($generated@@97 ($generated@@505 $generated@@664) $generated@@667) $generated@@666) ($generated@@295 $generated@@667 $generated@@665)))
 :pattern ( ($generated@@97 ($generated@@505 $generated@@664) $generated@@667))
 :pattern ( ($generated@@97 ($generated@@399 $generated@@664) $generated@@667))
))))
 :pattern ( ($generated@@78 $generated@@664 ($generated@@530 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (= (type $generated@@668) ($generated@@419 $generated@@157 $generated@@157)) (= (type $generated@@669) $generated@@70)) (= (type $generated@@670) $generated@@70)) (= ($generated@@78 $generated@@668 ($generated@@538 $generated@@669 $generated@@670)) (forall (($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@671) $generated@@157) ($generated@@0 ($generated@@97 ($generated@@417 $generated@@668) $generated@@671))) (and ($generated@@295 ($generated@@97 ($generated@@513 $generated@@668) $generated@@671) $generated@@670) ($generated@@295 $generated@@671 $generated@@669)))
 :pattern ( ($generated@@97 ($generated@@513 $generated@@668) $generated@@671))
 :pattern ( ($generated@@97 ($generated@@417 $generated@@668) $generated@@671))
))))
 :pattern ( ($generated@@78 $generated@@668 ($generated@@538 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@157) (= (type $generated@@674) $generated@@157)) (< ($generated@@672 $generated@@673) ($generated@@657 ($generated@@294 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@294 $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@157) (= (type $generated@@676) $generated@@157)) (< ($generated@@672 $generated@@676) ($generated@@657 ($generated@@294 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@294 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@159) (= (type $generated@@678) $generated@@81)) (= ($generated@@153 ($generated@@154 $generated@@677) $generated@@678) ($generated@@153 $generated@@677 $generated@@678)))
 :pattern ( ($generated@@153 ($generated@@154 $generated@@677) $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (and (= (type $generated@@679) $generated@@157) (= (type $generated@@680) $generated@@70)) (= (type $generated@@681) $generated@@70)) ($generated@@295 $generated@@679 ($generated@@530 $generated@@680 $generated@@681))) (and (= ($generated@@158 ($generated@@441 ($generated@@401 $generated@@157 $generated@@157) $generated@@679)) $generated@@679) ($generated@@78 ($generated@@441 ($generated@@401 $generated@@157 $generated@@157) $generated@@679) ($generated@@530 $generated@@680 $generated@@681))))
 :pattern ( ($generated@@295 $generated@@679 ($generated@@530 $generated@@680 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@157) (= (type $generated@@683) $generated@@70)) (= (type $generated@@684) $generated@@70)) ($generated@@295 $generated@@682 ($generated@@538 $generated@@683 $generated@@684))) (and (= ($generated@@158 ($generated@@441 ($generated@@419 $generated@@157 $generated@@157) $generated@@682)) $generated@@682) ($generated@@78 ($generated@@441 ($generated@@419 $generated@@157 $generated@@157) $generated@@682) ($generated@@538 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@295 $generated@@682 ($generated@@538 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (= (type $generated@@685) $generated@@70) (= (type $generated@@686) $generated@@70)) (= (type $generated@@687) $generated@@157)) ($generated@@295 $generated@@687 ($generated@@194 $generated@@685 $generated@@686))) (and (= ($generated@@158 ($generated@@441 $generated@@81 $generated@@687)) $generated@@687) ($generated@@78 ($generated@@441 $generated@@81 $generated@@687) ($generated@@194 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@295 $generated@@687 ($generated@@194 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@688 T@U) ) (! (let (($generated@@689 (type $generated@@688)))
 (not ($generated@@0 ($generated@@97 ($generated@@554 $generated@@689) $generated@@688))))
 :pattern ( (let (($generated@@689 (type $generated@@688)))
($generated@@97 ($generated@@554 $generated@@689) $generated@@688)))
)))
(assert (forall (($generated@@691 T@U) ) (! (= (type ($generated@@690 $generated@@691)) $generated@@75)
 :pattern ( ($generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@70) (= (type $generated@@693) $generated@@70)) (and (= ($generated@@88 ($generated@@194 $generated@@692 $generated@@693)) $generated@@62) (= ($generated@@690 ($generated@@194 $generated@@692 $generated@@693)) $generated@@67)))
 :pattern ( ($generated@@194 $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) $generated@@81) (= (type $generated@@695) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@302 $generated@@695) (and ($generated@@349 $generated@@694) ($generated@@90 $generated@@694 $generated@@80 $generated@@695)))) ($generated@@90 ($generated@@8 ($generated@@168 $generated@@694)) $generated@@46 $generated@@695))
 :pattern ( ($generated@@90 ($generated@@8 ($generated@@168 $generated@@694)) $generated@@46 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@81) (= ($generated@@672 ($generated@@158 $generated@@696)) ($generated@@657 $generated@@696)))
 :pattern ( ($generated@@672 ($generated@@158 $generated@@696)))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@157) ($generated@@295 $generated@@697 ($generated@@91 0))) (and (= ($generated@@158 ($generated@@441 $generated@@2 $generated@@697)) $generated@@697) ($generated@@78 ($generated@@441 ($generated@@92 $generated@@157 $generated@@4) $generated@@697) ($generated@@91 0))))
 :pattern ( ($generated@@295 $generated@@697 ($generated@@91 0)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) $generated@@157) (= (type $generated@@699) $generated@@70)) ($generated@@295 $generated@@698 ($generated@@316 $generated@@699))) (and (= ($generated@@158 ($generated@@441 ($generated@@92 $generated@@157 $generated@@4) $generated@@698)) $generated@@698) ($generated@@78 ($generated@@441 ($generated@@92 $generated@@157 $generated@@4) $generated@@698) ($generated@@316 $generated@@699))))
 :pattern ( ($generated@@295 $generated@@698 ($generated@@316 $generated@@699)))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@700) $generated@@157) (= (type $generated@@701) $generated@@70)) ($generated@@295 $generated@@700 ($generated@@321 $generated@@701))) (and (= ($generated@@158 ($generated@@441 ($generated@@92 $generated@@157 $generated@@4) $generated@@700)) $generated@@700) ($generated@@78 ($generated@@441 ($generated@@92 $generated@@157 $generated@@4) $generated@@700) ($generated@@321 $generated@@701))))
 :pattern ( ($generated@@295 $generated@@700 ($generated@@321 $generated@@701)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@702) $generated@@157) (= (type $generated@@703) $generated@@70)) ($generated@@295 $generated@@702 ($generated@@208 $generated@@703))) (and (= ($generated@@158 ($generated@@441 ($generated@@92 $generated@@157 $generated@@2) $generated@@702)) $generated@@702) ($generated@@78 ($generated@@441 ($generated@@92 $generated@@157 $generated@@2) $generated@@702) ($generated@@208 $generated@@703))))
 :pattern ( ($generated@@295 $generated@@702 ($generated@@208 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (= (type $generated@@704) $generated@@157) (= (type $generated@@705) $generated@@70)) ($generated@@295 $generated@@704 ($generated@@624 $generated@@705))) (and (= ($generated@@158 ($generated@@441 ($generated@@360 $generated@@157) $generated@@704)) $generated@@704) ($generated@@78 ($generated@@441 ($generated@@360 $generated@@157) $generated@@704) ($generated@@624 $generated@@705))))
 :pattern ( ($generated@@295 $generated@@704 ($generated@@624 $generated@@705)))
)))
(assert (= ($generated@@88 $generated@@80) $generated@@64))
(assert (= ($generated@@690 $generated@@80) $generated@@68))
(assert (= ($generated@@88 $generated@@151) $generated@@66))
(assert (= ($generated@@690 $generated@@151) $generated@@69))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@706) ($generated@@92 $generated@@157 $generated@@2)) (= (type $generated@@707) $generated@@70)) (= (type $generated@@708) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@706 ($generated@@208 $generated@@707) $generated@@708) (forall (($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@157) (< 0 ($generated ($generated@@97 $generated@@706 $generated@@709)))) ($generated@@338 $generated@@709 $generated@@707 $generated@@708))
 :pattern ( ($generated@@97 $generated@@706 $generated@@709))
))))
 :pattern ( ($generated@@90 $generated@@706 ($generated@@208 $generated@@707) $generated@@708))
)))
(assert (= $generated@@207 ($generated@@328 $generated@@207)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (= (type $generated@@710) $generated@@81) (= (type $generated@@711) $generated@@70)) (= (type $generated@@712) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@302 $generated@@712) (and ($generated@@193 $generated@@710) (exists (($generated@@713 T@U) ) (!  (and (= (type $generated@@713) $generated@@70) ($generated@@90 $generated@@710 ($generated@@194 $generated@@711 $generated@@713) $generated@@712))
 :pattern ( ($generated@@90 $generated@@710 ($generated@@194 $generated@@711 $generated@@713) $generated@@712))
))))) ($generated@@338 ($generated@@201 $generated@@710) $generated@@711 $generated@@712))
 :pattern ( ($generated@@338 ($generated@@201 $generated@@710) $generated@@711 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (and (= (type $generated@@714) $generated@@81) (= (type $generated@@715) $generated@@70)) (= (type $generated@@716) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@302 $generated@@716) (and ($generated@@193 $generated@@714) (exists (($generated@@717 T@U) ) (!  (and (= (type $generated@@717) $generated@@70) ($generated@@90 $generated@@714 ($generated@@194 $generated@@717 $generated@@715) $generated@@716))
 :pattern ( ($generated@@90 $generated@@714 ($generated@@194 $generated@@717 $generated@@715) $generated@@716))
))))) ($generated@@338 ($generated@@202 $generated@@714) $generated@@715 $generated@@716))
 :pattern ( ($generated@@338 ($generated@@202 $generated@@714) $generated@@715 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (! (let (($generated@@721 (type $generated@@719)))
 (=> (and (and (= (type $generated@@718) ($generated@@92 $generated@@721 $generated@@2)) (= (type $generated@@720) $generated@@721)) (not (= $generated@@719 $generated@@720))) (= ($generated ($generated@@97 $generated@@718 $generated@@720)) ($generated ($generated@@97 ($generated@@368 $generated@@718 $generated@@719) $generated@@720)))))
 :pattern ( ($generated@@368 $generated@@718 $generated@@719) ($generated@@97 $generated@@718 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@81) (= (type $generated@@723) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@302 $generated@@723) (and ($generated@@349 $generated@@722) ($generated@@90 $generated@@722 $generated@@80 $generated@@723)))) ($generated@@90 ($generated@@178 $generated@@722) $generated@@80 $generated@@723))
 :pattern ( ($generated@@90 ($generated@@178 $generated@@722) $generated@@80 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@81) (= (type $generated@@725) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@302 $generated@@725) (and ($generated@@349 $generated@@724) ($generated@@90 $generated@@724 $generated@@80 $generated@@725)))) ($generated@@90 ($generated@@183 $generated@@724) $generated@@80 $generated@@725))
 :pattern ( ($generated@@90 ($generated@@183 $generated@@724) $generated@@80 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@157) (= (type $generated@@727) $generated@@157)) (= ($generated@@294 ($generated@@328 $generated@@726) ($generated@@328 $generated@@727)) ($generated@@328 ($generated@@294 $generated@@726 $generated@@727))))
 :pattern ( ($generated@@294 ($generated@@328 $generated@@726) ($generated@@328 $generated@@727)))
)))
(assert (forall (($generated@@728 Int) ) (! (= ($generated@@158 ($generated@@8 ($generated@@326 $generated@@728))) ($generated@@328 ($generated@@158 ($generated@@8 $generated@@728))))
 :pattern ( ($generated@@158 ($generated@@8 ($generated@@326 $generated@@728))))
)))
(assert (forall (($generated@@729 T@U) ) (! (= ($generated@@158 ($generated@@328 $generated@@729)) ($generated@@328 ($generated@@158 $generated@@729)))
 :pattern ( ($generated@@158 ($generated@@328 $generated@@729)))
)))
(assert (forall (($generated@@730 T@U) ) (! (let (($generated@@731 ($generated@@361 (type $generated@@730))))
 (=> (and (= (type $generated@@730) ($generated@@360 $generated@@731)) (= ($generated@@359 $generated@@730) 0)) (= $generated@@730 ($generated@@358 $generated@@731))))
 :pattern ( ($generated@@359 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 (type $generated@@733)))
 (=> (and (and (= (type $generated@@732) ($generated@@92 $generated@@735 $generated@@2)) (= (type $generated@@734) $generated@@2)) (<= 0 ($generated $generated@@734))) (= ($generated@@367 ($generated@@98 $generated@@732 $generated@@733 $generated@@734)) (+ (- ($generated@@367 $generated@@732) ($generated ($generated@@97 $generated@@732 $generated@@733))) ($generated $generated@@734)))))
 :pattern ( ($generated@@367 ($generated@@98 $generated@@732 $generated@@733 $generated@@734)))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@81) (= ($generated@@78 $generated@@736 $generated@@151)  (and ($generated@@78 $generated@@736 $generated@@80) ($generated@@189 ($generated@@154 $generated@@155) $generated@@736))))
 :pattern ( ($generated@@78 $generated@@736 $generated@@151))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@738) $generated@@2)) ($generated@@90 $generated@@738 $generated@@46 $generated@@737))
 :pattern ( ($generated@@90 $generated@@738 $generated@@46 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@740) $generated@@3)) ($generated@@90 $generated@@740 $generated@@47 $generated@@739))
 :pattern ( ($generated@@90 $generated@@740 $generated@@47 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@742) $generated@@4)) ($generated@@90 $generated@@742 $generated@@44 $generated@@741))
 :pattern ( ($generated@@90 $generated@@742 $generated@@44 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (= (type $generated@@743) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@744) $generated@@578)) ($generated@@90 $generated@@744 $generated@@45 $generated@@743))
 :pattern ( ($generated@@90 $generated@@744 $generated@@45 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@746) $generated@@157)) ($generated@@90 $generated@@746 $generated@@48 $generated@@745))
 :pattern ( ($generated@@90 $generated@@746 $generated@@48 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) ($generated@@360 $generated@@157)) (= (type $generated@@748) $generated@@70)) (= ($generated@@78 $generated@@747 ($generated@@624 $generated@@748)) (forall (($generated@@749 Int) ) (!  (=> (and (<= 0 $generated@@749) (< $generated@@749 ($generated@@359 $generated@@747))) ($generated@@295 ($generated@@625 $generated@@747 $generated@@749) $generated@@748))
 :pattern ( ($generated@@625 $generated@@747 $generated@@749))
))))
 :pattern ( ($generated@@78 $generated@@747 ($generated@@624 $generated@@748)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 Int) ) (!  (=> (= (type $generated@@751) ($generated@@360 $generated@@157)) (=> (and (<= 0 $generated@@752) (< $generated@@752 ($generated@@359 $generated@@751))) (< ($generated@@657 ($generated@@441 $generated@@81 ($generated@@625 $generated@@751 $generated@@752))) ($generated@@750 $generated@@751))))
 :pattern ( ($generated@@657 ($generated@@441 $generated@@81 ($generated@@625 $generated@@751 $generated@@752))))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (and (= (type $generated@@753) ($generated@@401 $generated@@157 $generated@@157)) (= (type $generated@@754) $generated@@70)) (= (type $generated@@755) $generated@@70)) ($generated@@78 $generated@@753 ($generated@@530 $generated@@754 $generated@@755))) (and (and ($generated@@78 ($generated@@399 $generated@@753) ($generated@@316 $generated@@754)) ($generated@@78 ($generated@@457 $generated@@753) ($generated@@316 $generated@@755))) ($generated@@78 ($generated@@504 $generated@@753) ($generated@@316 ($generated@@194 $generated@@754 $generated@@755)))))
 :pattern ( ($generated@@78 $generated@@753 ($generated@@530 $generated@@754 $generated@@755)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) ($generated@@419 $generated@@157 $generated@@157)) (= (type $generated@@757) $generated@@70)) (= (type $generated@@758) $generated@@70)) ($generated@@78 $generated@@756 ($generated@@538 $generated@@757 $generated@@758))) (and (and ($generated@@78 ($generated@@417 $generated@@756) ($generated@@321 $generated@@757)) ($generated@@78 ($generated@@468 $generated@@756) ($generated@@321 $generated@@758))) ($generated@@78 ($generated@@512 $generated@@756) ($generated@@321 ($generated@@194 $generated@@757 $generated@@758)))))
 :pattern ( ($generated@@78 $generated@@756 ($generated@@538 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@2) ($generated@@78 $generated@@759 $generated@@46))
 :pattern ( ($generated@@78 $generated@@759 $generated@@46))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@3) ($generated@@78 $generated@@760 $generated@@47))
 :pattern ( ($generated@@78 $generated@@760 $generated@@47))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@4) ($generated@@78 $generated@@761 $generated@@44))
 :pattern ( ($generated@@78 $generated@@761 $generated@@44))
)))
(assert (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) $generated@@578) ($generated@@78 $generated@@762 $generated@@45))
 :pattern ( ($generated@@78 $generated@@762 $generated@@45))
)))
(assert (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@157) ($generated@@78 $generated@@763 $generated@@48))
 :pattern ( ($generated@@78 $generated@@763 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@764 () T@U)
(declare-fun $generated@@765 () Int)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () Int)
(declare-fun $generated@@768 () Int)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () T@U)
(declare-fun $generated@@772 (T@U) Bool)
(declare-fun $generated@@773 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@764) $generated@@81) (= (type $generated@@769) ($generated@@215 $generated@@93 $generated@@4))) (= (type $generated@@770) $generated@@93)) (= (type $generated@@766) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@771) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@773) ($generated@@215 $generated@@93 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@774 true))
(let (($generated@@775 true))
(let (($generated@@776  (=> (and (>= 0 ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 ($generated@@8 $generated@@765))))) (= (ControlFlow 0 11) 7)) $generated@@775)))
(let (($generated@@777  (=> (and (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 ($generated@@8 $generated@@765)))) 0) (= (ControlFlow 0 10) 7)) $generated@@775)))
(let (($generated@@778  (=> (and ($generated@@90 $generated@@764 $generated@@151 $generated@@766) ($generated@@344 $generated@@764)) (and (=> (= (ControlFlow 0 12) 10) $generated@@777) (=> (= (ControlFlow 0 12) 11) $generated@@776)))))
(let (($generated@@779  (=> (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 ($generated@@8 $generated@@767)))) 0) (and (=> (= (ControlFlow 0 13) 12) $generated@@778) (=> (= (ControlFlow 0 13) 9) $generated@@774)))))
(let (($generated@@780  (=> (and (>= 0 ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 ($generated@@8 $generated@@767))))) (= (ControlFlow 0 8) 7)) $generated@@775)))
(let (($generated@@781  (=> ($generated@@90 $generated@@764 $generated@@151 $generated@@766) (and (=> (= (ControlFlow 0 14) (- 0 16)) (not ($generated@@152 ($generated@@153 ($generated@@154 ($generated@@154 $generated@@155)) $generated@@764) ($generated@@156 $generated@@157)))) (=> (not ($generated@@152 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@156 $generated@@157))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (or (= $generated@@764 $generated@@764) (< ($generated@@657 $generated@@764) ($generated@@657 $generated@@764)))) (=> (or (= $generated@@764 $generated@@764) (< ($generated@@657 $generated@@764) ($generated@@657 $generated@@764))) (=> (or (= $generated@@764 $generated@@764) ($generated@@150 $generated@@764)) (=> (and (= $generated@@768 ($generated@@149 $generated@@764)) ($generated@@150 $generated@@764)) (=> (and (and ($generated@@78 ($generated@@8 $generated@@768) $generated@@46) (= $generated@@767 $generated@@768)) (and ($generated@@90 $generated@@764 $generated@@151 $generated@@766) ($generated@@344 $generated@@764))) (and (=> (= (ControlFlow 0 14) 13) $generated@@779) (=> (= (ControlFlow 0 14) 8) $generated@@780))))))))))))
(let (($generated@@782  (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@783 ($generated@@149 $generated@@764)))
(> ($generated ($generated@@97 ($generated@@153 ($generated@@154 ($generated@@154 $generated@@155)) $generated@@764) ($generated@@158 ($generated@@8 $generated@@783)))) 0))) (=> (let (($generated@@784 ($generated@@149 $generated@@764)))
(> ($generated ($generated@@97 ($generated@@153 ($generated@@154 ($generated@@154 $generated@@155)) $generated@@764) ($generated@@158 ($generated@@8 $generated@@784)))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@785 ($generated@@149 $generated@@764)))
(forall (($generated@@786 Int) ) (!  (=> true (=> (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 ($generated@@154 $generated@@155)) $generated@@764) ($generated@@158 ($generated@@8 $generated@@786)))) 0) (<= $generated@@785 $generated@@786)))
 :pattern ( ($generated@@97 ($generated@@153 ($generated@@154 ($generated@@154 $generated@@155)) $generated@@764) ($generated@@158 ($generated@@8 $generated@@786))))
))))))))
(let (($generated@@787  (=> (= $generated@@769 ($generated@@269 $generated@@770 $generated@@766 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (not ($generated@@285 $generated@@764 $generated@@207))) (=> (not ($generated@@285 $generated@@764 $generated@@207)) (=> (and ($generated@@302 $generated@@771) ($generated@@772 $generated@@771)) (=> (and (and (and ($generated@@344 $generated@@764) (=> (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 ($generated@@8 ($generated@@168 $generated@@764))))) 0) ($generated@@344 $generated@@764))) (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 ($generated@@154 $generated@@155)) $generated@@764) ($generated@@158 ($generated@@8 ($generated@@168 $generated@@764))))) 0)) (and (forall (($generated@@788 T@U) ) (!  (=> (and (and (= (type $generated@@788) $generated@@2) true) (> ($generated ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 $generated@@788))) 0)) (<= ($generated@@168 $generated@@764) ($generated $generated@@788)))
 :pattern ( ($generated@@97 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@158 $generated@@788)))
)) (= $generated@@766 $generated@@771))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@349 $generated@@764)) (=> ($generated@@349 $generated@@764) (=> (= ($generated@@149 $generated@@764) ($generated@@168 $generated@@764)) (=> (and ($generated@@78 ($generated@@8 ($generated@@149 $generated@@764)) $generated@@46) (= (ControlFlow 0 4) 2)) $generated@@782)))))))))))
(let (($generated@@789  (=> (and (and (= $generated@@773 ($generated@@214 $generated@@770 $generated@@766 $generated@@60 false)) ($generated@@90 $generated@@764 $generated@@151 $generated@@766)) (and ($generated@@344 $generated@@764) (not ($generated@@152 ($generated@@153 ($generated@@154 $generated@@155) $generated@@764) ($generated@@156 $generated@@157))))) (and (=> (= (ControlFlow 0 17) 14) $generated@@781) (=> (= (ControlFlow 0 17) 4) $generated@@787)))))
(let (($generated@@790  (=> (and (and (and ($generated@@302 $generated@@766) ($generated@@772 $generated@@766)) ($generated@@78 $generated@@764 $generated@@151)) (and (= 5 $generated@@148) (= (ControlFlow 0 18) 17))) $generated@@789)))
$generated@@790)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@317 (T@U T@U T@U) Bool)
(declare-fun $generated@@323 (T@U) Bool)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@U T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@422 (T@T T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@510 (T@U T@U) T@U)
(declare-fun $generated@@518 (T@U T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@T) T@U)
(declare-fun $generated@@558 () T@T)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@605 (T@U Int) T@U)
(declare-fun $generated@@617 (T@U) Int)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@652 (T@U) Int)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@729 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@90 $generated@@154 $generated@@2))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (= ($generated@@1 $generated@@156) 16)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@151 $generated@@159)) $generated@@156)
 :pattern ( ($generated@@151 $generated@@159))
))) (= (type $generated@@152) $generated@@156)) (forall (($generated@@160 T@T) ) (! (= (type ($generated@@153 $generated@@160)) ($generated@@90 $generated@@160 $generated@@2))
 :pattern ( ($generated@@153 $generated@@160))
))))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@79) (or ($generated@@148 $generated@@161) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@161 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@161) ($generated@@153 $generated@@154))))))) (= ($generated@@147 $generated@@161) ($generated@@155 $generated@@161)))
 :pattern ( ($generated@@147 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@79) (= (type $generated@@166) $generated@@79)) (= ($generated@@162 ($generated@@77 $generated@@164 $generated@@165 $generated@@166)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@79) (= (type $generated@@169) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@167 $generated@@168 $generated@@169)) $generated@@167))
 :pattern ( ($generated@@77 $generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@79)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@79) (= (type $generated@@174) $generated@@79)) (= ($generated@@170 ($generated@@77 $generated@@172 $generated@@173 $generated@@174)) $generated@@173))
 :pattern ( ($generated@@77 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@79)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@79) (= (type $generated@@179) $generated@@79)) (= ($generated@@175 ($generated@@77 $generated@@177 $generated@@178 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@77 $generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@76 $generated@@180 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@180 ($generated@@89 0)))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@156) (= (type $generated@@184) $generated@@79)) (or ($generated@@182 $generated@@184) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@184 $generated@@78)))) true)
 :pattern ( ($generated@@181 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188)) $generated@@68)
 :pattern ( ($generated@@186 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@68) (= (type $generated@@190) $generated@@68)) (= (type $generated@@191) $generated@@79)) ($generated@@76 $generated@@191 ($generated@@186 $generated@@189 $generated@@190))) ($generated@@185 $generated@@191))
 :pattern ( ($generated@@185 $generated@@191) ($generated@@76 $generated@@191 ($generated@@186 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@154)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@154)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@79) (= (type $generated@@198) $generated@@79)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert (= (type $generated@@199) $generated@@79))
(assert (= ($generated@@162 $generated@@199) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@68)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@204) $generated@@68)) ($generated@@76 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@76 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@91 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@91) (= (type $generated@@255) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@91)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@156) (= (type $generated@@265) $generated@@79)) (or ($generated@@182 $generated@@265) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@265 $generated@@78)))) (and (=> (not ($generated@@261 $generated@@265)) (let (($generated@@266 ($generated@@175 $generated@@265)))
(let (($generated@@267 ($generated@@170 $generated@@265)))
(let (($generated@@268 ($generated@@155 $generated@@265)))
 (and ($generated@@182 $generated@@267) (=> ($generated@@181 $generated@@264 $generated@@267) (and ($generated@@182 $generated@@266) (=> ($generated@@181 $generated@@264 $generated@@266) (and ($generated@@262 $generated@@267) (=> (or ($generated@@263 $generated@@267 $generated@@199) (<= $generated@@268 ($generated@@155 $generated@@267))) ($generated@@262 $generated@@266))))))))))) (= ($generated@@181 ($generated@@151 $generated@@264) $generated@@265) (ite ($generated@@261 $generated@@265) true (let (($generated@@269 ($generated@@175 $generated@@265)))
(let (($generated@@270 ($generated@@170 $generated@@265)))
(let (($generated@@271 ($generated@@155 $generated@@265)))
 (and (and (and ($generated@@181 $generated@@264 $generated@@270) ($generated@@181 $generated@@264 $generated@@269)) (or ($generated@@263 $generated@@270 $generated@@199) (<= $generated@@271 ($generated@@155 $generated@@270)))) (or ($generated@@263 $generated@@269 $generated@@199) (<= $generated@@271 ($generated@@155 $generated@@269)))))))))))
 :pattern ( ($generated@@181 ($generated@@151 $generated@@264) $generated@@265))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@79)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) $generated@@154)) (= ($generated@@76 ($generated@@272 $generated@@278 $generated@@279) ($generated@@186 $generated@@276 $generated@@277))  (and ($generated@@273 $generated@@278 $generated@@276) ($generated@@273 $generated@@279 $generated@@277))))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278 $generated@@279) ($generated@@186 $generated@@276 $generated@@277)))
)))
(assert ($generated@@76 $generated@@199 $generated@@78))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@280 $generated@@281)) ($generated@@88 $generated@@199 $generated@@78 $generated@@281))
 :pattern ( ($generated@@88 $generated@@199 $generated@@78 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@93 (type $generated@@283))))
(= (type ($generated@@282 $generated@@283 $generated@@284)) ($generated@@90 $generated@@285 $generated@@2)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
 (=> (and (= (type $generated@@286) ($generated@@90 $generated@@289 $generated@@2)) (= (type $generated@@287) ($generated@@90 $generated@@289 $generated@@2))) (= ($generated ($generated@@95 ($generated@@282 $generated@@286 $generated@@287) $generated@@288)) (+ ($generated ($generated@@95 $generated@@286 $generated@@288)) ($generated ($generated@@95 $generated@@287 $generated@@288))))))
 :pattern ( ($generated@@95 ($generated@@282 $generated@@286 $generated@@287) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@79) (= (type $generated@@291) $generated@@79)) (= ($generated@@192 $generated@@290 $generated@@291) (= $generated@@290 $generated@@291)))
 :pattern ( ($generated@@192 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@79) (= (type $generated@@293) $generated@@79)) (= ($generated@@263 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@263 $generated@@292 $generated@@293))
)))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@79) (or ($generated@@148 $generated@@294) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@294 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@294) ($generated@@153 $generated@@154))))))) true)
 :pattern ( ($generated@@147 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@298) $generated@@68)) (= ($generated@@76 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@154) ($generated@@0 ($generated@@95 $generated@@297 $generated@@299))) ($generated@@273 $generated@@299 $generated@@298))
 :pattern ( ($generated@@95 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@76 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@68)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@303) $generated@@68)) (= ($generated@@76 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@154) ($generated@@0 ($generated@@95 $generated@@302 $generated@@304))) ($generated@@273 $generated@@304 $generated@@303))
 :pattern ( ($generated@@95 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@76 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
(= (type ($generated@@307 $generated@@308)) $generated@@309))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= ($generated@@307 $generated@@310) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@311) $generated@@79) (= (type $generated@@312) $generated@@79)) (and ($generated@@261 $generated@@311) ($generated@@261 $generated@@312))) (= ($generated@@263 $generated@@311 $generated@@312) true))
 :pattern ( ($generated@@263 $generated@@311 $generated@@312) ($generated@@261 $generated@@311))
 :pattern ( ($generated@@263 $generated@@311 $generated@@312) ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@313 Int) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@79) (= (type $generated@@315) $generated@@79)) (= (type $generated@@316) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@280 $generated@@316)) (= ($generated@@88 ($generated@@77 $generated@@313 $generated@@314 $generated@@315) $generated@@78 $generated@@316)  (and (and ($generated@@88 ($generated@@8 $generated@@313) $generated@@46 $generated@@316) ($generated@@88 $generated@@314 $generated@@78 $generated@@316)) ($generated@@88 $generated@@315 $generated@@78 $generated@@316))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@313 $generated@@314 $generated@@315) $generated@@78 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@318) $generated@@68) (= (type $generated@@319) $generated@@68)) (= (type $generated@@320) $generated@@154)) (= (type $generated@@321) $generated@@154)) (= (type $generated@@322) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@280 $generated@@322)) (= ($generated@@88 ($generated@@272 $generated@@320 $generated@@321) ($generated@@186 $generated@@318 $generated@@319) $generated@@322)  (and ($generated@@317 $generated@@320 $generated@@318 $generated@@322) ($generated@@317 $generated@@321 $generated@@319 $generated@@322))))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@320 $generated@@321) ($generated@@186 $generated@@318 $generated@@319) $generated@@322))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) $generated@@156) (= (type $generated@@325) $generated@@79)) (or ($generated@@323 $generated@@325) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@325 $generated@@78)))) ($generated@@76 ($generated@@150 $generated@@324 $generated@@325) ($generated@@200 $generated@@46)))
 :pattern ( ($generated@@150 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@79) (= ($generated@@185 $generated@@326) (= ($generated@@162 $generated@@326) $generated@@61)))
 :pattern ( ($generated@@185 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@79) (= ($generated@@261 $generated@@327) (= ($generated@@162 $generated@@327) $generated@@63)))
 :pattern ( ($generated@@261 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@79) (= ($generated@@328 $generated@@329) (= ($generated@@162 $generated@@329) $generated@@65)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@79) ($generated@@328 $generated@@330)) (exists (($generated@@331 Int) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@79) (= (type $generated@@333) $generated@@79)) (= $generated@@330 ($generated@@77 $generated@@331 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@328 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@79) ($generated@@185 $generated@@334)) (exists (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (and (and (= (type $generated@@335) $generated@@154) (= (type $generated@@336) $generated@@154)) (= $generated@@334 ($generated@@272 $generated@@335 $generated@@336)))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))
 :pattern ( ($generated@@185 $generated@@334))
)))
(assert  (and (and (forall (($generated@@341 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@341)) 18)) (forall (($generated@@342 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@339 $generated@@342))
))) (forall (($generated@@343 T@T) ) (! (= (type ($generated@@337 $generated@@343)) ($generated@@339 $generated@@343))
 :pattern ( ($generated@@337 $generated@@343))
))))
(assert (forall (($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@344)) 0)
 :pattern ( ($generated@@337 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@79) ($generated@@261 $generated@@345)) (= $generated@@345 $generated@@199))
 :pattern ( ($generated@@261 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= (type ($generated@@347 $generated@@348 $generated@@349)) ($generated@@90 $generated@@350 $generated@@2)))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
 (=> (= (type $generated@@351) ($generated@@90 $generated@@353 $generated@@2)) (= ($generated@@346 ($generated@@347 $generated@@351 $generated@@352)) (+ ($generated@@346 $generated@@351) 1))))
 :pattern ( ($generated@@346 ($generated@@347 $generated@@351 $generated@@352)))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) $generated@@156) (= (type $generated@@355) $generated@@79)) (or ($generated@@182 ($generated@@307 $generated@@355)) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@355 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@307 ($generated@@11 ($generated@@261 ($generated@@307 $generated@@355)))))) (let (($generated@@356 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@355)))))
(let (($generated@@357 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@355)))))
(let (($generated@@358 ($generated@@305 ($generated@@155 ($generated@@307 $generated@@355)))))
 (and ($generated@@182 $generated@@357) (=> ($generated@@181 ($generated@@151 $generated@@354) $generated@@357) (and ($generated@@182 $generated@@356) (=> ($generated@@181 ($generated@@151 $generated@@354) $generated@@356) (and ($generated@@262 $generated@@357) (=> (or ($generated@@263 $generated@@357 $generated@@199) (<= $generated@@358 ($generated@@155 $generated@@357))) ($generated@@262 $generated@@356))))))))))) (= ($generated@@181 ($generated@@151 $generated@@354) ($generated@@307 $generated@@355)) (ite ($generated@@261 ($generated@@307 $generated@@355)) true (let (($generated@@359 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@355)))))
(let (($generated@@360 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@355)))))
(let (($generated@@361 ($generated@@305 ($generated@@155 ($generated@@307 $generated@@355)))))
 (and (and (and ($generated@@181 ($generated@@151 $generated@@354) $generated@@360) ($generated@@181 ($generated@@151 $generated@@354) $generated@@359)) (or ($generated@@263 $generated@@360 $generated@@199) (<= $generated@@361 ($generated@@305 ($generated@@155 $generated@@360))))) (or ($generated@@263 $generated@@359 $generated@@199) (<= $generated@@361 ($generated@@305 ($generated@@155 $generated@@359))))))))))))
 :weight 3
 :pattern ( ($generated@@181 ($generated@@151 $generated@@354) ($generated@@307 $generated@@355)))
))))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@154)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@156) (= (type $generated@@365) $generated@@79)) (or ($generated@@323 ($generated@@307 $generated@@365)) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@365 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@307 ($generated@@11 ($generated@@261 ($generated@@307 $generated@@365)))))) (let (($generated@@366 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@365)))))
(let (($generated@@367 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@365)))))
 (and ($generated@@323 $generated@@367) ($generated@@323 $generated@@366))))) (= ($generated@@150 ($generated@@151 $generated@@364) ($generated@@307 $generated@@365)) (ite ($generated@@261 ($generated@@307 $generated@@365)) ($generated@@153 $generated@@154) (let (($generated@@368 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@365)))))
(let (($generated@@369 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@365)))))
(let (($generated@@370 ($generated@@305 ($generated@@155 ($generated@@307 $generated@@365)))))
($generated@@282 ($generated@@282 ($generated@@347 ($generated@@153 $generated@@154) ($generated@@362 ($generated@@8 $generated@@370))) ($generated@@150 ($generated@@151 $generated@@364) $generated@@369)) ($generated@@150 ($generated@@151 $generated@@364) $generated@@368)))))))))
 :weight 3
 :pattern ( ($generated@@150 ($generated@@151 $generated@@364) ($generated@@307 $generated@@365)))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@68) (= (type $generated@@373) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@317 ($generated@@362 $generated@@371) $generated@@372 $generated@@373) ($generated@@88 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@317 ($generated@@362 $generated@@371) $generated@@372 $generated@@373))
)))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (or ($generated@@148 ($generated@@307 $generated@@374)) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@374 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) ($generated@@307 $generated@@374)) ($generated@@153 $generated@@154))))))) (= ($generated@@147 ($generated@@307 $generated@@374)) ($generated@@305 ($generated@@155 ($generated@@307 $generated@@374)))))
 :weight 3
 :pattern ( ($generated@@147 ($generated@@307 $generated@@374)))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@79) (= (type $generated@@376) $generated@@79)) (and ($generated@@328 $generated@@375) ($generated@@328 $generated@@376))) (= ($generated@@263 $generated@@375 $generated@@376)  (and (and (= ($generated@@155 $generated@@375) ($generated@@155 $generated@@376)) ($generated@@263 ($generated@@170 $generated@@375) ($generated@@170 $generated@@376))) ($generated@@263 ($generated@@175 $generated@@375) ($generated@@175 $generated@@376)))))
 :pattern ( ($generated@@263 $generated@@375 $generated@@376) ($generated@@328 $generated@@375))
 :pattern ( ($generated@@263 $generated@@375 $generated@@376) ($generated@@328 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@93 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@90 $generated@@378 $generated@@2)) (and (= (= ($generated@@346 $generated@@377) 0) (= $generated@@377 ($generated@@153 $generated@@378))) (=> (not (= ($generated@@346 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@95 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@346 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 19)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@90 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@95 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@95 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 20)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@90 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@95 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@95 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@93 (type $generated@@416))))
 (=> (and (= (type $generated@@416) ($generated@@90 $generated@@418 $generated@@2)) (= (type $generated@@417) ($generated@@90 $generated@@418 $generated@@2))) (= ($generated@@346 ($generated@@282 $generated@@416 $generated@@417)) (+ ($generated@@346 $generated@@416) ($generated@@346 $generated@@417)))))
 :pattern ( ($generated@@346 ($generated@@282 $generated@@416 $generated@@417)))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@93 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@90 $generated@@420 $generated@@2)) (= ($generated@@201 $generated@@419) (forall (($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@420) (and (<= 0 ($generated ($generated@@95 $generated@@419 $generated@@421))) (<= ($generated ($generated@@95 $generated@@419 $generated@@421)) ($generated@@346 $generated@@419))))
 :pattern ( ($generated@@95 $generated@@419 $generated@@421))
)))))
 :pattern ( ($generated@@201 $generated@@419))
)))
(assert (forall (($generated@@423 T@T) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@423)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@154) ($generated@@273 $generated@@425 $generated@@78)) (and (= ($generated@@362 ($generated@@422 $generated@@79 $generated@@425)) $generated@@425) ($generated@@76 ($generated@@422 $generated@@79 $generated@@425) $generated@@78)))
 :pattern ( ($generated@@273 $generated@@425 $generated@@78))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
 (=> (= (type $generated@@426) ($generated@@90 $generated@@428 $generated@@2)) (= ($generated ($generated@@95 ($generated@@347 $generated@@426 $generated@@427) $generated@@427)) (+ ($generated ($generated@@95 $generated@@426 $generated@@427)) 1))))
 :pattern ( ($generated@@347 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@430)))
 (=> (and (and (= (type $generated@@429) ($generated@@90 $generated@@432 $generated@@2)) (= (type $generated@@431) $generated@@432)) (< 0 ($generated ($generated@@95 $generated@@429 $generated@@431)))) (< 0 ($generated ($generated@@95 ($generated@@347 $generated@@429 $generated@@430) $generated@@431)))))
 :pattern ( ($generated@@347 $generated@@429 $generated@@430) ($generated@@95 $generated@@429 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@384 (type $generated@@433))))
(let (($generated@@435 ($generated@@383 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@382 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@381 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) ($generated@@0 ($generated@@95 ($generated@@380 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@384 (type $generated@@438))))
(= (type ($generated@@437 $generated@@438)) ($generated@@90 $generated@@439 $generated@@4)))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@384 (type $generated@@440))))
(let (($generated@@442 ($generated@@383 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@382 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@381 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@441) ($generated@@0 ($generated@@95 ($generated@@437 $generated@@440) $generated@@443)))
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@437 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@402 (type $generated@@444))))
(let (($generated@@446 ($generated@@401 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@400 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@399 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) ($generated@@0 ($generated@@95 ($generated@@398 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@398 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@402 (type $generated@@449))))
(= (type ($generated@@448 $generated@@449)) ($generated@@90 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@402 (type $generated@@451))))
(let (($generated@@453 ($generated@@401 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@400 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@399 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@452) ($generated@@0 ($generated@@95 ($generated@@448 $generated@@451) $generated@@454)))
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@448 $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@456)))
 (=> (and (= (type $generated@@455) ($generated@@90 $generated@@458 $generated@@2)) (= (type $generated@@457) $generated@@458)) (= (< 0 ($generated ($generated@@95 ($generated@@347 $generated@@455 $generated@@456) $generated@@457)))  (or (= $generated@@457 $generated@@456) (< 0 ($generated ($generated@@95 $generated@@455 $generated@@457)))))))
 :pattern ( ($generated@@95 ($generated@@347 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@460) $generated@@68)) (= ($generated@@76 $generated@@459 ($generated@@200 $generated@@460)) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) (< 0 ($generated ($generated@@95 $generated@@459 $generated@@461)))) ($generated@@273 $generated@@461 $generated@@460))
 :pattern ( ($generated@@95 $generated@@459 $generated@@461))
))))
 :pattern ( ($generated@@76 $generated@@459 ($generated@@200 $generated@@460)))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@93 (type $generated@@462))))
 (=> (and (= (type $generated@@462) ($generated@@90 $generated@@464 $generated@@2)) (= (type $generated@@463) ($generated@@90 $generated@@464 $generated@@2))) (= ($generated@@149 $generated@@462 $generated@@463) (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@464) (= ($generated ($generated@@95 $generated@@462 $generated@@465)) ($generated ($generated@@95 $generated@@463 $generated@@465))))
 :pattern ( ($generated@@95 $generated@@462 $generated@@465))
 :pattern ( ($generated@@95 $generated@@463 $generated@@465))
)))))
 :pattern ( ($generated@@149 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@79) ($generated@@262 $generated@@466)) (or ($generated@@261 $generated@@466) ($generated@@328 $generated@@466)))
 :pattern ( ($generated@@262 $generated@@466))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@467) $generated@@156) (= (type $generated@@468) $generated@@79)) (or ($generated@@323 $generated@@468) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@468 $generated@@78)))) (and (=> (not ($generated@@261 $generated@@468)) (let (($generated@@469 ($generated@@175 $generated@@468)))
(let (($generated@@470 ($generated@@170 $generated@@468)))
 (and ($generated@@323 $generated@@470) ($generated@@323 $generated@@469))))) (= ($generated@@150 ($generated@@151 $generated@@467) $generated@@468) (ite ($generated@@261 $generated@@468) ($generated@@153 $generated@@154) (let (($generated@@471 ($generated@@175 $generated@@468)))
(let (($generated@@472 ($generated@@170 $generated@@468)))
(let (($generated@@473 ($generated@@155 $generated@@468)))
($generated@@282 ($generated@@282 ($generated@@347 ($generated@@153 $generated@@154) ($generated@@362 ($generated@@8 $generated@@473))) ($generated@@150 $generated@@467 $generated@@472)) ($generated@@150 $generated@@467 $generated@@471)))))))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@467) $generated@@468))
))))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@475) $generated@@68)) (= (type $generated@@476) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@474 ($generated@@295 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@154) ($generated@@0 ($generated@@95 $generated@@474 $generated@@477))) ($generated@@317 $generated@@477 $generated@@475 $generated@@476))
 :pattern ( ($generated@@95 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@88 $generated@@474 ($generated@@295 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@478 ($generated@@300 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) ($generated@@0 ($generated@@95 $generated@@478 $generated@@481))) ($generated@@317 $generated@@481 $generated@@479 $generated@@480))
 :pattern ( ($generated@@95 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@88 $generated@@478 ($generated@@300 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated ($generated@@95 ($generated@@153 $generated@@483) $generated@@482)) 0))
 :pattern ( (let (($generated@@483 (type $generated@@482)))
($generated@@95 ($generated@@153 $generated@@483) $generated@@482)))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) ($generated@@90 $generated@@154 $generated@@4))
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@384 (type $generated@@487))))
(let (($generated@@489 ($generated@@383 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487)) ($generated@@90 $generated@@489 $generated@@488))))
 :pattern ( ($generated@@485 $generated@@487))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@491) $generated@@154)) (= ($generated@@0 ($generated@@95 ($generated@@484 $generated@@490) $generated@@491))  (and ($generated@@0 ($generated@@95 ($generated@@380 $generated@@490) ($generated@@193 ($generated@@422 $generated@@79 $generated@@491)))) (= ($generated@@95 ($generated@@485 $generated@@490) ($generated@@193 ($generated@@422 $generated@@79 $generated@@491))) ($generated@@194 ($generated@@422 $generated@@79 $generated@@491))))))
 :pattern ( ($generated@@95 ($generated@@484 $generated@@490) $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) ($generated@@90 $generated@@154 $generated@@4))
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@402 (type $generated@@495))))
(let (($generated@@497 ($generated@@401 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495)) ($generated@@90 $generated@@497 $generated@@496))))
 :pattern ( ($generated@@493 $generated@@495))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@499) $generated@@154)) (= ($generated@@0 ($generated@@95 ($generated@@492 $generated@@498) $generated@@499))  (and ($generated@@0 ($generated@@95 ($generated@@398 $generated@@498) ($generated@@193 ($generated@@422 $generated@@79 $generated@@499)))) (= ($generated@@95 ($generated@@493 $generated@@498) ($generated@@193 ($generated@@422 $generated@@79 $generated@@499))) ($generated@@194 ($generated@@422 $generated@@79 $generated@@499))))))
 :pattern ( ($generated@@95 ($generated@@492 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(let (($generated@@503 ($generated@@383 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@382 $generated@@503 $generated@@502)) (= ($generated@@0 ($generated@@95 ($generated@@437 $generated@@500) $generated@@501)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) (and ($generated@@0 ($generated@@95 ($generated@@380 $generated@@500) $generated@@504)) (= $generated@@501 ($generated@@95 ($generated@@485 $generated@@500) $generated@@504))))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@500) $generated@@504))
 :pattern ( ($generated@@95 ($generated@@485 $generated@@500) $generated@@504))
))))))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 ($generated@@401 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@400 $generated@@508 $generated@@507)) (= ($generated@@0 ($generated@@95 ($generated@@448 $generated@@505) $generated@@506)) (exists (($generated@@509 T@U) ) (!  (and (= (type $generated@@509) $generated@@508) (and ($generated@@0 ($generated@@95 ($generated@@398 $generated@@505) $generated@@509)) (= $generated@@506 ($generated@@95 ($generated@@493 $generated@@505) $generated@@509))))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@505) $generated@@509))
 :pattern ( ($generated@@95 ($generated@@493 $generated@@505) $generated@@509))
))))))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@514) $generated@@68)) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@380 $generated@@513) $generated@@517))) (and ($generated@@317 ($generated@@95 ($generated@@485 $generated@@513) $generated@@517) $generated@@515 $generated@@516) ($generated@@317 $generated@@517 $generated@@514 $generated@@516)))
 :pattern ( ($generated@@95 ($generated@@485 $generated@@513) $generated@@517))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@513) $generated@@517))
))))
 :pattern ( ($generated@@88 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@398 $generated@@521) $generated@@525))) (and ($generated@@317 ($generated@@95 ($generated@@493 $generated@@521) $generated@@525) $generated@@523 $generated@@524) ($generated@@317 $generated@@525 $generated@@522 $generated@@524)))
 :pattern ( ($generated@@95 ($generated@@493 $generated@@521) $generated@@525))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@521) $generated@@525))
))))
 :pattern ( ($generated@@88 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@156)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@156) (= (type $generated@@529) $generated@@79)) (= ($generated@@181 $generated@@528 $generated@@529) ($generated@@181 $generated@@152 $generated@@529)))
 :pattern ( ($generated@@181 ($generated@@526 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@93 (type $generated@@530))))
 (=> (and (and (= (type $generated@@530) ($generated@@90 $generated@@532 $generated@@2)) (= (type $generated@@531) ($generated@@90 $generated@@532 $generated@@2))) ($generated@@149 $generated@@530 $generated@@531)) (= $generated@@530 $generated@@531)))
 :pattern ( ($generated@@149 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@79) ($generated@@76 $generated@@533 $generated@@78)) (or ($generated@@261 $generated@@533) ($generated@@328 $generated@@533)))
 :pattern ( ($generated@@328 $generated@@533) ($generated@@76 $generated@@533 $generated@@78))
 :pattern ( ($generated@@261 $generated@@533) ($generated@@76 $generated@@533 $generated@@78))
)))
(assert (forall (($generated@@535 T@T) ) (! (= (type ($generated@@534 $generated@@535)) ($generated@@90 $generated@@535 $generated@@4))
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@402 (type $generated@@536))))
(let (($generated@@538 ($generated@@401 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@400 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@399 $generated@@538 $generated@@537)) (= ($generated@@398 $generated@@536) ($generated@@534 $generated@@538))))))
 :pattern ( ($generated@@398 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@402 (type $generated@@539))))
(let (($generated@@541 ($generated@@401 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@400 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@399 $generated@@541 $generated@@540)) (= ($generated@@448 $generated@@539) ($generated@@534 $generated@@540))))))
 :pattern ( ($generated@@448 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@402 (type $generated@@542))))
(let (($generated@@544 ($generated@@401 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@400 $generated@@544 $generated@@543)) (= (= $generated@@542 ($generated@@399 $generated@@544 $generated@@543)) (= ($generated@@492 $generated@@542) ($generated@@534 $generated@@154))))))
 :pattern ( ($generated@@492 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@384 (type $generated@@545))))
(let (($generated@@547 ($generated@@383 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@382 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@381 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@154)) ($generated@@0 ($generated@@95 ($generated@@484 $generated@@545) ($generated@@362 ($generated@@272 $generated@@548 $generated@@549)))))
 :no-pattern (type $generated@@548)
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))))))
 :pattern ( ($generated@@484 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@402 (type $generated@@550))))
(let (($generated@@552 ($generated@@401 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@400 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@399 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@154) (= (type $generated@@554) $generated@@154)) ($generated@@0 ($generated@@95 ($generated@@492 $generated@@550) ($generated@@362 ($generated@@272 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@492 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@154) ($generated@@273 $generated@@555 $generated@@46)) (and (= ($generated@@362 ($generated@@422 $generated@@2 $generated@@555)) $generated@@555) ($generated@@76 ($generated@@422 $generated@@2 $generated@@555) $generated@@46)))
 :pattern ( ($generated@@273 $generated@@555 $generated@@46))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) ($generated@@273 $generated@@556 $generated@@47)) (and (= ($generated@@362 ($generated@@422 $generated@@3 $generated@@556)) $generated@@556) ($generated@@76 ($generated@@422 $generated@@3 $generated@@556) $generated@@47)))
 :pattern ( ($generated@@273 $generated@@556 $generated@@47))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) ($generated@@273 $generated@@557 $generated@@44)) (and (= ($generated@@362 ($generated@@422 $generated@@4 $generated@@557)) $generated@@557) ($generated@@76 ($generated@@422 $generated@@4 $generated@@557) $generated@@44)))
 :pattern ( ($generated@@273 $generated@@557 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@558) 21))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) ($generated@@273 $generated@@559 $generated@@45)) (and (= ($generated@@362 ($generated@@422 $generated@@558 $generated@@559)) $generated@@559) ($generated@@76 ($generated@@422 $generated@@558 $generated@@559) $generated@@45)))
 :pattern ( ($generated@@273 $generated@@559 $generated@@45))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (= (type $generated@@561) $generated@@79)) (= ($generated@@181 ($generated@@151 $generated@@560) $generated@@561) ($generated@@181 $generated@@560 $generated@@561)))
 :pattern ( ($generated@@181 ($generated@@151 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@273 ($generated@@362 $generated@@562) $generated@@563) ($generated@@76 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@273 ($generated@@362 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@93 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@90 $generated@@565 $generated@@2)) (<= 0 ($generated@@346 $generated@@564))))
 :pattern ( ($generated@@346 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@340 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@339 $generated@@567)) (<= 0 ($generated@@338 $generated@@566))))
 :pattern ( ($generated@@338 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (= ($generated@@568 ($generated@@510 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@510 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (= ($generated@@572 ($generated@@510 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@510 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= ($generated@@86 ($generated@@510 $generated@@576 $generated@@577)) $generated@@58))
 :pattern ( ($generated@@510 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= ($generated@@578 ($generated@@518 $generated@@580 $generated@@581)) $generated@@580))
 :pattern ( ($generated@@518 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@68) (= (type $generated@@585) $generated@@68)) (= ($generated@@582 ($generated@@518 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@518 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@68) (= (type $generated@@587) $generated@@68)) (= ($generated@@86 ($generated@@518 $generated@@586 $generated@@587)) $generated@@59))
 :pattern ( ($generated@@518 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@154)) (= ($generated@@162 ($generated@@272 $generated@@588 $generated@@589)) $generated@@61))
 :pattern ( ($generated@@272 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= ($generated@@590 ($generated@@186 $generated@@592 $generated@@593)) $generated@@592))
 :pattern ( ($generated@@186 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@68)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= ($generated@@594 ($generated@@186 $generated@@596 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@186 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@154) (= (type $generated@@599) $generated@@154)) (= ($generated@@193 ($generated@@272 $generated@@598 $generated@@599)) $generated@@598))
 :pattern ( ($generated@@272 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@154) (= (type $generated@@601) $generated@@154)) (= ($generated@@194 ($generated@@272 $generated@@600 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@272 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@156) (= (type $generated@@603) $generated@@79)) (= ($generated@@150 $generated@@602 $generated@@603) ($generated@@150 $generated@@152 $generated@@603)))
 :pattern ( ($generated@@150 ($generated@@526 $generated@@602) $generated@@603))
)))
(assert  (and (forall (($generated@@606 T@U) ) (! (= (type ($generated@@604 $generated@@606)) $generated@@68)
 :pattern ( ($generated@@604 $generated@@606))
)) (forall (($generated@@607 T@U) ($generated@@608 Int) ) (! (let (($generated@@609 ($generated@@340 (type $generated@@607))))
(= (type ($generated@@605 $generated@@607 $generated@@608)) $generated@@609))
 :pattern ( ($generated@@605 $generated@@607 $generated@@608))
))))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@339 $generated@@154)) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@610 ($generated@@604 $generated@@611) $generated@@612) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@338 $generated@@610))) ($generated@@317 ($generated@@605 $generated@@610 $generated@@613) $generated@@611 $generated@@612))
 :pattern ( ($generated@@605 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@88 $generated@@610 ($generated@@604 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@79)) (= ($generated@@77 ($generated@@305 $generated@@614) ($generated@@307 $generated@@615) ($generated@@307 $generated@@616)) ($generated@@307 ($generated@@77 $generated@@614 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@77 ($generated@@305 $generated@@614) ($generated@@307 $generated@@615) ($generated@@307 $generated@@616)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@617 ($generated@@89 $generated@@618)) $generated@@618)
 :pattern ( ($generated@@89 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@68)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@68) (= ($generated@@619 ($generated@@295 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@295 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@68) (= ($generated@@86 ($generated@@295 $generated@@622)) $generated@@54))
 :pattern ( ($generated@@295 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@68)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@68) (= ($generated@@623 ($generated@@300 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@300 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@68) (= ($generated@@86 ($generated@@300 $generated@@626)) $generated@@55))
 :pattern ( ($generated@@300 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@68)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@68) (= ($generated@@627 ($generated@@200 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@200 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@68) (= ($generated@@86 ($generated@@200 $generated@@630)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@68)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@68) (= ($generated@@631 ($generated@@604 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@604 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@68) (= ($generated@@86 ($generated@@604 $generated@@634)) $generated@@57))
 :pattern ( ($generated@@604 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@635)))
(= ($generated@@422 $generated@@636 ($generated@@362 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@362 $generated@@635))
)))
(assert (forall (($generated@@638 Int) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@79) (= (type $generated@@640) $generated@@79)) (< ($generated@@637 $generated@@639) ($generated@@637 ($generated@@77 $generated@@638 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@77 $generated@@638 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 Int) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@79) (= (type $generated@@643) $generated@@79)) (< ($generated@@637 $generated@@643) ($generated@@637 ($generated@@77 $generated@@641 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@77 $generated@@641 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) (= ($generated@@76 $generated@@644 ($generated@@510 $generated@@645 $generated@@646)) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@380 $generated@@644) $generated@@647))) (and ($generated@@273 ($generated@@95 ($generated@@485 $generated@@644) $generated@@647) $generated@@646) ($generated@@273 $generated@@647 $generated@@645)))
 :pattern ( ($generated@@95 ($generated@@485 $generated@@644) $generated@@647))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@644) $generated@@647))
))))
 :pattern ( ($generated@@76 $generated@@644 ($generated@@510 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) (= ($generated@@76 $generated@@648 ($generated@@518 $generated@@649 $generated@@650)) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@398 $generated@@648) $generated@@651))) (and ($generated@@273 ($generated@@95 ($generated@@493 $generated@@648) $generated@@651) $generated@@650) ($generated@@273 $generated@@651 $generated@@649)))
 :pattern ( ($generated@@95 ($generated@@493 $generated@@648) $generated@@651))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@648) $generated@@651))
))))
 :pattern ( ($generated@@76 $generated@@648 ($generated@@518 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@154) (= (type $generated@@654) $generated@@154)) (< ($generated@@652 $generated@@653) ($generated@@637 ($generated@@272 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@272 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@154) (= (type $generated@@656) $generated@@154)) (< ($generated@@652 $generated@@656) ($generated@@637 ($generated@@272 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@272 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@156) (= (type $generated@@658) $generated@@79)) (= ($generated@@150 ($generated@@151 $generated@@657) $generated@@658) ($generated@@150 $generated@@657 $generated@@658)))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@154) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@273 $generated@@659 ($generated@@510 $generated@@660 $generated@@661))) (and (= ($generated@@362 ($generated@@422 ($generated@@382 $generated@@154 $generated@@154) $generated@@659)) $generated@@659) ($generated@@76 ($generated@@422 ($generated@@382 $generated@@154 $generated@@154) $generated@@659) ($generated@@510 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@273 $generated@@659 ($generated@@510 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@154) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@68)) ($generated@@273 $generated@@662 ($generated@@518 $generated@@663 $generated@@664))) (and (= ($generated@@362 ($generated@@422 ($generated@@400 $generated@@154 $generated@@154) $generated@@662)) $generated@@662) ($generated@@76 ($generated@@422 ($generated@@400 $generated@@154 $generated@@154) $generated@@662) ($generated@@518 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@273 $generated@@662 ($generated@@518 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@68) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@154)) ($generated@@273 $generated@@667 ($generated@@186 $generated@@665 $generated@@666))) (and (= ($generated@@362 ($generated@@422 $generated@@79 $generated@@667)) $generated@@667) ($generated@@76 ($generated@@422 $generated@@79 $generated@@667) ($generated@@186 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@273 $generated@@667 ($generated@@186 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (not ($generated@@0 ($generated@@95 ($generated@@534 $generated@@669) $generated@@668))))
 :pattern ( (let (($generated@@669 (type $generated@@668)))
($generated@@95 ($generated@@534 $generated@@669) $generated@@668)))
)))
(assert (forall (($generated@@671 T@U) ) (! (= (type ($generated@@670 $generated@@671)) $generated@@73)
 :pattern ( ($generated@@670 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@68) (= (type $generated@@673) $generated@@68)) (and (= ($generated@@86 ($generated@@186 $generated@@672 $generated@@673)) $generated@@62) (= ($generated@@670 ($generated@@186 $generated@@672 $generated@@673)) $generated@@66)))
 :pattern ( ($generated@@186 $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@79) (= (type $generated@@675) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@675) (and ($generated@@328 $generated@@674) ($generated@@88 $generated@@674 $generated@@78 $generated@@675)))) ($generated@@88 ($generated@@8 ($generated@@155 $generated@@674)) $generated@@46 $generated@@675))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@155 $generated@@674)) $generated@@46 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@79) (= ($generated@@652 ($generated@@362 $generated@@676)) ($generated@@637 $generated@@676)))
 :pattern ( ($generated@@652 ($generated@@362 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@154) ($generated@@273 $generated@@677 ($generated@@89 0))) (and (= ($generated@@362 ($generated@@422 $generated@@2 $generated@@677)) $generated@@677) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@677) ($generated@@89 0))))
 :pattern ( ($generated@@273 $generated@@677 ($generated@@89 0)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@154) (= (type $generated@@679) $generated@@68)) ($generated@@273 $generated@@678 ($generated@@295 $generated@@679))) (and (= ($generated@@362 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@678)) $generated@@678) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@678) ($generated@@295 $generated@@679))))
 :pattern ( ($generated@@273 $generated@@678 ($generated@@295 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@154) (= (type $generated@@681) $generated@@68)) ($generated@@273 $generated@@680 ($generated@@300 $generated@@681))) (and (= ($generated@@362 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@680)) $generated@@680) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@680) ($generated@@300 $generated@@681))))
 :pattern ( ($generated@@273 $generated@@680 ($generated@@300 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@682) $generated@@154) (= (type $generated@@683) $generated@@68)) ($generated@@273 $generated@@682 ($generated@@200 $generated@@683))) (and (= ($generated@@362 ($generated@@422 ($generated@@90 $generated@@154 $generated@@2) $generated@@682)) $generated@@682) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@2) $generated@@682) ($generated@@200 $generated@@683))))
 :pattern ( ($generated@@273 $generated@@682 ($generated@@200 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@154) (= (type $generated@@685) $generated@@68)) ($generated@@273 $generated@@684 ($generated@@604 $generated@@685))) (and (= ($generated@@362 ($generated@@422 ($generated@@339 $generated@@154) $generated@@684)) $generated@@684) ($generated@@76 ($generated@@422 ($generated@@339 $generated@@154) $generated@@684) ($generated@@604 $generated@@685))))
 :pattern ( ($generated@@273 $generated@@684 ($generated@@604 $generated@@685)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@670 $generated@@78) $generated@@67))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@686) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@687) $generated@@68)) (= (type $generated@@688) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@686 ($generated@@200 $generated@@687) $generated@@688) (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@154) (< 0 ($generated ($generated@@95 $generated@@686 $generated@@689)))) ($generated@@317 $generated@@689 $generated@@687 $generated@@688))
 :pattern ( ($generated@@95 $generated@@686 $generated@@689))
))))
 :pattern ( ($generated@@88 $generated@@686 ($generated@@200 $generated@@687) $generated@@688))
)))
(assert (= $generated@@199 ($generated@@307 $generated@@199)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@79) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@692) (and ($generated@@185 $generated@@690) (exists (($generated@@693 T@U) ) (!  (and (= (type $generated@@693) $generated@@68) ($generated@@88 $generated@@690 ($generated@@186 $generated@@691 $generated@@693) $generated@@692))
 :pattern ( ($generated@@88 $generated@@690 ($generated@@186 $generated@@691 $generated@@693) $generated@@692))
))))) ($generated@@317 ($generated@@193 $generated@@690) $generated@@691 $generated@@692))
 :pattern ( ($generated@@317 ($generated@@193 $generated@@690) $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (and (= (type $generated@@694) $generated@@79) (= (type $generated@@695) $generated@@68)) (= (type $generated@@696) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@696) (and ($generated@@185 $generated@@694) (exists (($generated@@697 T@U) ) (!  (and (= (type $generated@@697) $generated@@68) ($generated@@88 $generated@@694 ($generated@@186 $generated@@697 $generated@@695) $generated@@696))
 :pattern ( ($generated@@88 $generated@@694 ($generated@@186 $generated@@697 $generated@@695) $generated@@696))
))))) ($generated@@317 ($generated@@194 $generated@@694) $generated@@695 $generated@@696))
 :pattern ( ($generated@@317 ($generated@@194 $generated@@694) $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 (type $generated@@699)))
 (=> (and (and (= (type $generated@@698) ($generated@@90 $generated@@701 $generated@@2)) (= (type $generated@@700) $generated@@701)) (not (= $generated@@699 $generated@@700))) (= ($generated ($generated@@95 $generated@@698 $generated@@700)) ($generated ($generated@@95 ($generated@@347 $generated@@698 $generated@@699) $generated@@700)))))
 :pattern ( ($generated@@347 $generated@@698 $generated@@699) ($generated@@95 $generated@@698 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@702) $generated@@79) (= (type $generated@@703) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@703) (and ($generated@@328 $generated@@702) ($generated@@88 $generated@@702 $generated@@78 $generated@@703)))) ($generated@@88 ($generated@@170 $generated@@702) $generated@@78 $generated@@703))
 :pattern ( ($generated@@88 ($generated@@170 $generated@@702) $generated@@78 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (= (type $generated@@704) $generated@@79) (= (type $generated@@705) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@705) (and ($generated@@328 $generated@@704) ($generated@@88 $generated@@704 $generated@@78 $generated@@705)))) ($generated@@88 ($generated@@175 $generated@@704) $generated@@78 $generated@@705))
 :pattern ( ($generated@@88 ($generated@@175 $generated@@704) $generated@@78 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@154) (= (type $generated@@707) $generated@@154)) (= ($generated@@272 ($generated@@307 $generated@@706) ($generated@@307 $generated@@707)) ($generated@@307 ($generated@@272 $generated@@706 $generated@@707))))
 :pattern ( ($generated@@272 ($generated@@307 $generated@@706) ($generated@@307 $generated@@707)))
)))
(assert (forall (($generated@@708 Int) ) (! (= ($generated@@362 ($generated@@8 ($generated@@305 $generated@@708))) ($generated@@307 ($generated@@362 ($generated@@8 $generated@@708))))
 :pattern ( ($generated@@362 ($generated@@8 ($generated@@305 $generated@@708))))
)))
(assert (forall (($generated@@709 T@U) ) (! (= ($generated@@362 ($generated@@307 $generated@@709)) ($generated@@307 ($generated@@362 $generated@@709)))
 :pattern ( ($generated@@362 ($generated@@307 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@340 (type $generated@@710))))
 (=> (and (= (type $generated@@710) ($generated@@339 $generated@@711)) (= ($generated@@338 $generated@@710) 0)) (= $generated@@710 ($generated@@337 $generated@@711))))
 :pattern ( ($generated@@338 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (! (let (($generated@@715 (type $generated@@713)))
 (=> (and (and (= (type $generated@@712) ($generated@@90 $generated@@715 $generated@@2)) (= (type $generated@@714) $generated@@2)) (<= 0 ($generated $generated@@714))) (= ($generated@@346 ($generated@@96 $generated@@712 $generated@@713 $generated@@714)) (+ (- ($generated@@346 $generated@@712) ($generated ($generated@@95 $generated@@712 $generated@@713))) ($generated $generated@@714)))))
 :pattern ( ($generated@@346 ($generated@@96 $generated@@712 $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@717) $generated@@2)) ($generated@@88 $generated@@717 $generated@@46 $generated@@716))
 :pattern ( ($generated@@88 $generated@@717 $generated@@46 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@719) $generated@@3)) ($generated@@88 $generated@@719 $generated@@47 $generated@@718))
 :pattern ( ($generated@@88 $generated@@719 $generated@@47 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@721) $generated@@4)) ($generated@@88 $generated@@721 $generated@@44 $generated@@720))
 :pattern ( ($generated@@88 $generated@@721 $generated@@44 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@723) $generated@@558)) ($generated@@88 $generated@@723 $generated@@45 $generated@@722))
 :pattern ( ($generated@@88 $generated@@723 $generated@@45 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@725) $generated@@154)) ($generated@@88 $generated@@725 $generated@@48 $generated@@724))
 :pattern ( ($generated@@88 $generated@@725 $generated@@48 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) ($generated@@339 $generated@@154)) (= (type $generated@@727) $generated@@68)) (= ($generated@@76 $generated@@726 ($generated@@604 $generated@@727)) (forall (($generated@@728 Int) ) (!  (=> (and (<= 0 $generated@@728) (< $generated@@728 ($generated@@338 $generated@@726))) ($generated@@273 ($generated@@605 $generated@@726 $generated@@728) $generated@@727))
 :pattern ( ($generated@@605 $generated@@726 $generated@@728))
))))
 :pattern ( ($generated@@76 $generated@@726 ($generated@@604 $generated@@727)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 Int) ) (!  (=> (= (type $generated@@730) ($generated@@339 $generated@@154)) (=> (and (<= 0 $generated@@731) (< $generated@@731 ($generated@@338 $generated@@730))) (< ($generated@@637 ($generated@@422 $generated@@79 ($generated@@605 $generated@@730 $generated@@731))) ($generated@@729 $generated@@730))))
 :pattern ( ($generated@@637 ($generated@@422 $generated@@79 ($generated@@605 $generated@@730 $generated@@731))))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@733) $generated@@68)) (= (type $generated@@734) $generated@@68)) ($generated@@76 $generated@@732 ($generated@@510 $generated@@733 $generated@@734))) (and (and ($generated@@76 ($generated@@380 $generated@@732) ($generated@@295 $generated@@733)) ($generated@@76 ($generated@@437 $generated@@732) ($generated@@295 $generated@@734))) ($generated@@76 ($generated@@484 $generated@@732) ($generated@@295 ($generated@@186 $generated@@733 $generated@@734)))))
 :pattern ( ($generated@@76 $generated@@732 ($generated@@510 $generated@@733 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (and (= (type $generated@@735) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@736) $generated@@68)) (= (type $generated@@737) $generated@@68)) ($generated@@76 $generated@@735 ($generated@@518 $generated@@736 $generated@@737))) (and (and ($generated@@76 ($generated@@398 $generated@@735) ($generated@@300 $generated@@736)) ($generated@@76 ($generated@@448 $generated@@735) ($generated@@300 $generated@@737))) ($generated@@76 ($generated@@492 $generated@@735) ($generated@@300 ($generated@@186 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@76 $generated@@735 ($generated@@518 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@2) ($generated@@76 $generated@@738 $generated@@46))
 :pattern ( ($generated@@76 $generated@@738 $generated@@46))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@3) ($generated@@76 $generated@@739 $generated@@47))
 :pattern ( ($generated@@76 $generated@@739 $generated@@47))
)))
(assert (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@4) ($generated@@76 $generated@@740 $generated@@44))
 :pattern ( ($generated@@76 $generated@@740 $generated@@44))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@558) ($generated@@76 $generated@@741 $generated@@45))
 :pattern ( ($generated@@76 $generated@@741 $generated@@45))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@154) ($generated@@76 $generated@@742 $generated@@48))
 :pattern ( ($generated@@76 $generated@@742 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () Int)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () Int)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () T@U)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 (T@U) Bool)
(declare-fun $generated@@751 () Int)
(assert  (and (and (and (and (= (type $generated@@743) $generated@@79) (= (type $generated@@745) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@747) ($generated@@207 $generated@@91 $generated@@4))) (= (type $generated@@748) $generated@@91)) (= (type $generated@@749) ($generated@@90 $generated@@91 $generated@@92))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@752 true))
(let (($generated@@753 true))
(let (($generated@@754  (=> (and (>= 0 ($generated ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@743) ($generated@@362 ($generated@@8 $generated@@744))))) (= (ControlFlow 0 5) 1)) $generated@@753)))
(let (($generated@@755  (=> (and (> ($generated ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@743) ($generated@@362 ($generated@@8 $generated@@744)))) 0) (= (ControlFlow 0 4) 1)) $generated@@753)))
(let (($generated@@756  (=> (and ($generated@@88 $generated@@743 $generated@@78 $generated@@745) ($generated@@323 $generated@@743)) (and (=> (= (ControlFlow 0 6) 4) $generated@@755) (=> (= (ControlFlow 0 6) 5) $generated@@754)))))
(let (($generated@@757  (=> (> ($generated ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@743) ($generated@@362 ($generated@@8 $generated@@746)))) 0) (and (=> (= (ControlFlow 0 7) 6) $generated@@756) (=> (= (ControlFlow 0 7) 3) $generated@@752)))))
(let (($generated@@758  (=> (and (>= 0 ($generated ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@743) ($generated@@362 ($generated@@8 $generated@@746))))) (= (ControlFlow 0 2) 1)) $generated@@753)))
(let (($generated@@759  (=> (= $generated@@747 ($generated@@206 $generated@@748 $generated@@749 $generated@@60 false)) (=> (and ($generated@@88 $generated@@743 $generated@@78 $generated@@749) ($generated@@182 $generated@@743)) (=> (and (and (and ($generated@@181 ($generated@@151 $generated@@152) $generated@@743) ($generated@@88 $generated@@743 $generated@@78 $generated@@749)) (and ($generated@@323 $generated@@743) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@743) ($generated@@153 $generated@@154))))) (and (and ($generated@@280 $generated@@745) ($generated@@750 $generated@@745)) (and (= $generated@@749 $generated@@745) ($generated@@88 $generated@@743 $generated@@78 $generated@@745)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (not ($generated@@149 ($generated@@150 ($generated@@151 ($generated@@151 $generated@@152)) $generated@@743) ($generated@@153 $generated@@154)))) (=> (and (and (and (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@743) ($generated@@153 $generated@@154))) ($generated@@148 $generated@@743)) (and (= $generated@@751 ($generated@@147 $generated@@743)) ($generated@@148 $generated@@743))) (and (and ($generated@@76 ($generated@@8 $generated@@751) $generated@@46) (= $generated@@746 $generated@@751)) (and ($generated@@88 $generated@@743 $generated@@78 $generated@@745) ($generated@@323 $generated@@743)))) (and (=> (= (ControlFlow 0 8) 7) $generated@@757) (=> (= (ControlFlow 0 8) 2) $generated@@758)))))))))
(let (($generated@@760  (=> (and ($generated@@280 $generated@@749) ($generated@@750 $generated@@749)) (=> (and (and (and ($generated@@76 $generated@@743 $generated@@78) ($generated@@88 $generated@@743 $generated@@78 $generated@@749)) ($generated@@262 $generated@@743)) (and (= 3 $generated@@146) (= (ControlFlow 0 10) 8))) $generated@@759))))
$generated@@760))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (Int) Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@311 (T@U T@U T@U) Bool)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@318 (T@U) Bool)
(declare-fun $generated@@325 (T@U) Bool)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@U T@U) T@U)
(declare-fun $generated@@359 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@T) T@U)
(declare-fun $generated@@380 (T@T T@T) T@T)
(declare-fun $generated@@381 (T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@T) T@U)
(declare-fun $generated@@398 (T@T T@T) T@T)
(declare-fun $generated@@399 (T@T) T@T)
(declare-fun $generated@@400 (T@T) T@T)
(declare-fun $generated@@420 (T@T T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@505 (T@U T@U) T@U)
(declare-fun $generated@@513 (T@U T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@522 () T@U)
(declare-fun $generated@@527 (T@T) T@U)
(declare-fun $generated@@551 () T@T)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@598 (T@U Int) T@U)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@645 (T@U) Int)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@723 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83 $generated@@84)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84))
))) (= (type $generated@@80) $generated@@70)))
(assert (forall (($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@81) (= (type $generated@@87) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80)  (and (and ($generated@@78 ($generated@@8 $generated@@85) $generated@@46) ($generated@@78 $generated@@86 $generated@@80)) ($generated@@78 $generated@@87 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@71)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@73 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@74)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) (= (type $generated@@152) $generated@@81)) (= ($generated@@148 ($generated@@79 $generated@@150 $generated@@151 $generated@@152)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 Int) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@81) (= (type $generated@@156) $generated@@81)) (= ($generated@@153 ($generated@@79 $generated@@154 $generated@@155 $generated@@156)) $generated@@154))
 :pattern ( ($generated@@79 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) (= ($generated@@157 ($generated@@79 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))
 :pattern ( ($generated@@79 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@81) (= (type $generated@@166) $generated@@81)) (= ($generated@@162 ($generated@@79 $generated@@164 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@79 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@78 $generated@@167 ($generated@@91 0)))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@91 0)))
)))
(assert (= ($generated@@1 $generated@@170) 15))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@170) (= (type $generated@@173) $generated@@81)) (or ($generated@@171 $generated@@173) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@173 $generated@@80)))) true)
 :pattern ( ($generated@@169 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@70) (= (type $generated@@179) $generated@@70)) (= (type $generated@@180) $generated@@81)) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 16) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@81) (= (type $generated@@188) $generated@@81)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@81))
(assert (= ($generated@@148 $generated@@189) $generated@@63))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@194) $generated@@70)) ($generated@@78 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@78 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@93 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@73 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@93) (= (type $generated@@245) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@246) ($generated@@72 $generated@@4))) (= (type $generated@@248) $generated@@93)) (= (type $generated@@249) ($generated@@72 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (= (type $generated@@251) $generated@@70))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@81) (= (type $generated@@253) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@252 $generated@@251 $generated@@253) ($generated@@90 $generated@@252 $generated@@80 $generated@@253)))
 :pattern ( ($generated@@90 $generated@@252 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@254 $generated@@258)) $generated@@170)
 :pattern ( ($generated@@254 $generated@@258))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@170) (= (type $generated@@260) $generated@@81)) (or ($generated@@171 $generated@@260) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@260 $generated@@80)))) (and (=> (not ($generated@@255 $generated@@260)) (let (($generated@@261 ($generated@@162 $generated@@260)))
(let (($generated@@262 ($generated@@157 $generated@@260)))
(let (($generated@@263 ($generated@@153 $generated@@260)))
 (and ($generated@@171 $generated@@262) (=> ($generated@@169 $generated@@259 $generated@@262) (and ($generated@@171 $generated@@261) (=> ($generated@@169 $generated@@259 $generated@@261) (and ($generated@@256 $generated@@262) (=> (or ($generated@@257 $generated@@262 $generated@@189) (<= $generated@@263 ($generated@@153 $generated@@262))) ($generated@@256 $generated@@261))))))))))) (= ($generated@@169 ($generated@@254 $generated@@259) $generated@@260) (ite ($generated@@255 $generated@@260) true (let (($generated@@264 ($generated@@162 $generated@@260)))
(let (($generated@@265 ($generated@@157 $generated@@260)))
(let (($generated@@266 ($generated@@153 $generated@@260)))
 (and (and (and ($generated@@169 $generated@@259 $generated@@265) ($generated@@169 $generated@@259 $generated@@264)) (or ($generated@@257 $generated@@265 $generated@@189) (<= $generated@@266 ($generated@@153 $generated@@265)))) (or ($generated@@257 $generated@@264 $generated@@189) (<= $generated@@266 ($generated@@153 $generated@@264)))))))))))
 :pattern ( ($generated@@169 ($generated@@254 $generated@@259) $generated@@260))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@81)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@70)) (= (type $generated@@273) $generated@@184)) (= (type $generated@@274) $generated@@184)) (= ($generated@@78 ($generated@@267 $generated@@273 $generated@@274) ($generated@@175 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@267 $generated@@273 $generated@@274) ($generated@@175 $generated@@271 $generated@@272)))
)))
(assert ($generated@@78 $generated@@189 $generated@@80))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@275 $generated@@276)) ($generated@@90 $generated@@189 $generated@@80 $generated@@276))
 :pattern ( ($generated@@90 $generated@@189 $generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@95 (type $generated@@278))))
(= (type ($generated@@277 $generated@@278 $generated@@279)) ($generated@@92 $generated@@280 $generated@@2)))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
 (=> (and (= (type $generated@@281) ($generated@@92 $generated@@284 $generated@@2)) (= (type $generated@@282) ($generated@@92 $generated@@284 $generated@@2))) (= ($generated ($generated@@97 ($generated@@277 $generated@@281 $generated@@282) $generated@@283)) (+ ($generated ($generated@@97 $generated@@281 $generated@@283)) ($generated ($generated@@97 $generated@@282 $generated@@283))))))
 :pattern ( ($generated@@97 ($generated@@277 $generated@@281 $generated@@282) $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) (= (type $generated@@286) $generated@@81)) (= ($generated@@181 $generated@@285 $generated@@286) (= $generated@@285 $generated@@286)))
 :pattern ( ($generated@@181 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@81) (= (type $generated@@288) $generated@@81)) (= ($generated@@257 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@257 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@292) $generated@@70)) (= ($generated@@78 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@184) ($generated@@0 ($generated@@97 $generated@@291 $generated@@293))) ($generated@@268 $generated@@293 $generated@@292))
 :pattern ( ($generated@@97 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@78 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@70)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@297) $generated@@70)) (= ($generated@@78 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@184) ($generated@@0 ($generated@@97 $generated@@296 $generated@@298))) ($generated@@268 $generated@@298 $generated@@297))
 :pattern ( ($generated@@97 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@78 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@300 Int) ) (! (= ($generated@@299 $generated@@300) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 (type $generated@@302)))
(= (type ($generated@@301 $generated@@302)) $generated@@303))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= ($generated@@301 $generated@@304) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@305) $generated@@81) (= (type $generated@@306) $generated@@81)) (and ($generated@@255 $generated@@305) ($generated@@255 $generated@@306))) (= ($generated@@257 $generated@@305 $generated@@306) true))
 :pattern ( ($generated@@257 $generated@@305 $generated@@306) ($generated@@255 $generated@@305))
 :pattern ( ($generated@@257 $generated@@305 $generated@@306) ($generated@@255 $generated@@306))
)))
(assert (forall (($generated@@307 Int) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) $generated@@81) (= (type $generated@@309) $generated@@81)) (= (type $generated@@310) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@275 $generated@@310)) (= ($generated@@90 ($generated@@79 $generated@@307 $generated@@308 $generated@@309) $generated@@80 $generated@@310)  (and (and ($generated@@90 ($generated@@8 $generated@@307) $generated@@46 $generated@@310) ($generated@@90 $generated@@308 $generated@@80 $generated@@310)) ($generated@@90 $generated@@309 $generated@@80 $generated@@310))))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@307 $generated@@308 $generated@@309) $generated@@80 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) $generated@@70) (= (type $generated@@313) $generated@@70)) (= (type $generated@@314) $generated@@184)) (= (type $generated@@315) $generated@@184)) (= (type $generated@@316) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@275 $generated@@316)) (= ($generated@@90 ($generated@@267 $generated@@314 $generated@@315) ($generated@@175 $generated@@312 $generated@@313) $generated@@316)  (and ($generated@@311 $generated@@314 $generated@@312 $generated@@316) ($generated@@311 $generated@@315 $generated@@313 $generated@@316))))
 :pattern ( ($generated@@90 ($generated@@267 $generated@@314 $generated@@315) ($generated@@175 $generated@@312 $generated@@313) $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@317 $generated@@319 $generated@@320)) ($generated@@92 $generated@@184 $generated@@2))
 :pattern ( ($generated@@317 $generated@@319 $generated@@320))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@170) (= (type $generated@@322) $generated@@81)) (or ($generated@@318 $generated@@322) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@322 $generated@@251)))) ($generated@@78 ($generated@@317 $generated@@321 $generated@@322) ($generated@@190 $generated@@46)))
 :pattern ( ($generated@@317 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@81) (= ($generated@@174 $generated@@323) (= ($generated@@148 $generated@@323) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@81) (= ($generated@@255 $generated@@324) (= ($generated@@148 $generated@@324) $generated@@63)))
 :pattern ( ($generated@@255 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@81) (= ($generated@@325 $generated@@326) (= ($generated@@148 $generated@@326) $generated@@65)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@81) ($generated@@325 $generated@@327)) (exists (($generated@@328 Int) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@81) (= (type $generated@@330) $generated@@81)) (= $generated@@327 ($generated@@79 $generated@@328 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@325 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@81) ($generated@@174 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@184) (= (type $generated@@333) $generated@@184)) (= $generated@@331 ($generated@@267 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@174 $generated@@331))
)))
(assert  (and (and (forall (($generated@@338 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@338)) 18)) (forall (($generated@@339 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
))) (forall (($generated@@340 T@T) ) (! (= (type ($generated@@334 $generated@@340)) ($generated@@336 $generated@@340))
 :pattern ( ($generated@@334 $generated@@340))
))))
(assert (forall (($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@341)) 0)
 :pattern ( ($generated@@334 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@81) ($generated@@255 $generated@@342)) (= $generated@@342 $generated@@189))
 :pattern ( ($generated@@255 $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= (type ($generated@@344 $generated@@345 $generated@@346)) ($generated@@92 $generated@@347 $generated@@2)))
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
 (=> (= (type $generated@@348) ($generated@@92 $generated@@350 $generated@@2)) (= ($generated@@343 ($generated@@344 $generated@@348 $generated@@349)) (+ ($generated@@343 $generated@@348) 1))))
 :pattern ( ($generated@@343 ($generated@@344 $generated@@348 $generated@@349)))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@170) (= (type $generated@@352) $generated@@81)) (or ($generated@@171 ($generated@@301 $generated@@352)) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@352 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@301 ($generated@@11 ($generated@@255 ($generated@@301 $generated@@352)))))) (let (($generated@@353 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@352)))))
(let (($generated@@354 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@352)))))
(let (($generated@@355 ($generated@@299 ($generated@@153 ($generated@@301 $generated@@352)))))
 (and ($generated@@171 $generated@@354) (=> ($generated@@169 ($generated@@254 $generated@@351) $generated@@354) (and ($generated@@171 $generated@@353) (=> ($generated@@169 ($generated@@254 $generated@@351) $generated@@353) (and ($generated@@256 $generated@@354) (=> (or ($generated@@257 $generated@@354 $generated@@189) (<= $generated@@355 ($generated@@153 $generated@@354))) ($generated@@256 $generated@@353))))))))))) (= ($generated@@169 ($generated@@254 $generated@@351) ($generated@@301 $generated@@352)) (ite ($generated@@255 ($generated@@301 $generated@@352)) true (let (($generated@@356 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@352)))))
(let (($generated@@357 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@352)))))
(let (($generated@@358 ($generated@@299 ($generated@@153 ($generated@@301 $generated@@352)))))
 (and (and (and ($generated@@169 ($generated@@254 $generated@@351) $generated@@357) ($generated@@169 ($generated@@254 $generated@@351) $generated@@356)) (or ($generated@@257 $generated@@357 $generated@@189) (<= $generated@@358 ($generated@@299 ($generated@@153 $generated@@357))))) (or ($generated@@257 $generated@@356 $generated@@189) (<= $generated@@358 ($generated@@299 ($generated@@153 $generated@@356))))))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@254 $generated@@351) ($generated@@301 $generated@@352)))
))))
(assert  (and (forall (($generated@@361 T@T) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@92 $generated@@361 $generated@@2))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) $generated@@184)
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@170) (= (type $generated@@364) $generated@@81)) (or ($generated@@318 ($generated@@301 $generated@@364)) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@364 $generated@@251)))) (and (=> (not ($generated@@0 ($generated@@301 ($generated@@11 ($generated@@255 ($generated@@301 $generated@@364)))))) (let (($generated@@365 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@364)))))
(let (($generated@@366 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@364)))))
 (and ($generated@@318 $generated@@366) ($generated@@318 $generated@@365))))) (= ($generated@@317 ($generated@@254 $generated@@363) ($generated@@301 $generated@@364)) (ite ($generated@@255 ($generated@@301 $generated@@364)) ($generated@@359 $generated@@184) (let (($generated@@367 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@364)))))
(let (($generated@@368 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@364)))))
(let (($generated@@369 ($generated@@299 ($generated@@153 ($generated@@301 $generated@@364)))))
($generated@@277 ($generated@@277 ($generated@@344 ($generated@@359 $generated@@184) ($generated@@360 ($generated@@8 $generated@@369))) ($generated@@317 ($generated@@254 $generated@@363) $generated@@368)) ($generated@@317 ($generated@@254 $generated@@363) $generated@@367)))))))))
 :weight 3
 :pattern ( ($generated@@317 ($generated@@254 $generated@@363) ($generated@@301 $generated@@364)))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@70) (= (type $generated@@372) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@311 ($generated@@360 $generated@@370) $generated@@371 $generated@@372) ($generated@@90 $generated@@370 $generated@@371 $generated@@372)))
 :pattern ( ($generated@@311 ($generated@@360 $generated@@370) $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@81) (= (type $generated@@374) $generated@@81)) (and ($generated@@325 $generated@@373) ($generated@@325 $generated@@374))) (= ($generated@@257 $generated@@373 $generated@@374)  (and (and (= ($generated@@153 $generated@@373) ($generated@@153 $generated@@374)) ($generated@@257 ($generated@@157 $generated@@373) ($generated@@157 $generated@@374))) ($generated@@257 ($generated@@162 $generated@@373) ($generated@@162 $generated@@374)))))
 :pattern ( ($generated@@257 $generated@@373 $generated@@374) ($generated@@325 $generated@@373))
 :pattern ( ($generated@@257 $generated@@373 $generated@@374) ($generated@@325 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@95 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@92 $generated@@376 $generated@@2)) (and (= (= ($generated@@343 $generated@@375) 0) (= $generated@@375 ($generated@@359 $generated@@376))) (=> (not (= ($generated@@343 $generated@@375) 0)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (< 0 ($generated ($generated@@97 $generated@@375 $generated@@377))))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@343 $generated@@375))
)))
(assert  (and (and (and (and (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (= ($generated@@1 ($generated@@380 $generated@@383 $generated@@384)) 19)) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= ($generated@@381 ($generated@@380 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@380 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@382 ($generated@@380 $generated@@387 $generated@@388)) $generated@@388)
 :pattern ( ($generated@@380 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@381 (type $generated@@389))))
(= (type ($generated@@378 $generated@@389)) ($generated@@92 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@389))
))) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= (type ($generated@@379 $generated@@391 $generated@@392)) ($generated@@380 $generated@@391 $generated@@392))
 :pattern ( ($generated@@379 $generated@@391 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@T) ) (! (let (($generated@@395 (type $generated@@393)))
 (not ($generated@@0 ($generated@@97 ($generated@@378 ($generated@@379 $generated@@395 $generated@@394)) $generated@@393))))
 :pattern ( (let (($generated@@395 (type $generated@@393)))
($generated@@97 ($generated@@378 ($generated@@379 $generated@@395 $generated@@394)) $generated@@393)))
)))
(assert  (and (and (and (and (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (= ($generated@@1 ($generated@@398 $generated@@401 $generated@@402)) 20)) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= ($generated@@399 ($generated@@398 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@398 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@400 ($generated@@398 $generated@@405 $generated@@406)) $generated@@406)
 :pattern ( ($generated@@398 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@399 (type $generated@@407))))
(= (type ($generated@@396 $generated@@407)) ($generated@@92 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@407))
))) (forall (($generated@@409 T@T) ($generated@@410 T@T) ) (! (= (type ($generated@@397 $generated@@409 $generated@@410)) ($generated@@398 $generated@@409 $generated@@410))
 :pattern ( ($generated@@397 $generated@@409 $generated@@410))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@T) ) (! (let (($generated@@413 (type $generated@@411)))
 (not ($generated@@0 ($generated@@97 ($generated@@396 ($generated@@397 $generated@@413 $generated@@412)) $generated@@411))))
 :pattern ( (let (($generated@@413 (type $generated@@411)))
($generated@@97 ($generated@@396 ($generated@@397 $generated@@413 $generated@@412)) $generated@@411)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@95 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@92 $generated@@416 $generated@@2)) (= (type $generated@@415) ($generated@@92 $generated@@416 $generated@@2))) (= ($generated@@343 ($generated@@277 $generated@@414 $generated@@415)) (+ ($generated@@343 $generated@@414) ($generated@@343 $generated@@415)))))
 :pattern ( ($generated@@343 ($generated@@277 $generated@@414 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@95 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@92 $generated@@418 $generated@@2)) (= ($generated@@191 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (and (<= 0 ($generated ($generated@@97 $generated@@417 $generated@@419))) (<= ($generated ($generated@@97 $generated@@417 $generated@@419)) ($generated@@343 $generated@@417))))
 :pattern ( ($generated@@97 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@191 $generated@@417))
)))
(assert (forall (($generated@@421 T@T) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@421)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@184) ($generated@@268 $generated@@423 $generated@@80)) (and (= ($generated@@360 ($generated@@420 $generated@@81 $generated@@423)) $generated@@423) ($generated@@78 ($generated@@420 $generated@@81 $generated@@423) $generated@@80)))
 :pattern ( ($generated@@268 $generated@@423 $generated@@80))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@184) ($generated@@268 $generated@@424 $generated@@251)) (and (= ($generated@@360 ($generated@@420 $generated@@81 $generated@@424)) $generated@@424) ($generated@@78 ($generated@@420 $generated@@81 $generated@@424) $generated@@251)))
 :pattern ( ($generated@@268 $generated@@424 $generated@@251))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (= (type $generated@@425) ($generated@@92 $generated@@427 $generated@@2)) (= ($generated ($generated@@97 ($generated@@344 $generated@@425 $generated@@426) $generated@@426)) (+ ($generated ($generated@@97 $generated@@425 $generated@@426)) 1))))
 :pattern ( ($generated@@344 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@429)))
 (=> (and (and (= (type $generated@@428) ($generated@@92 $generated@@431 $generated@@2)) (= (type $generated@@430) $generated@@431)) (< 0 ($generated ($generated@@97 $generated@@428 $generated@@430)))) (< 0 ($generated ($generated@@97 ($generated@@344 $generated@@428 $generated@@429) $generated@@430)))))
 :pattern ( ($generated@@344 $generated@@428 $generated@@429) ($generated@@97 $generated@@428 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@382 (type $generated@@432))))
(let (($generated@@434 ($generated@@381 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@380 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@379 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) ($generated@@0 ($generated@@97 ($generated@@378 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@382 (type $generated@@437))))
(= (type ($generated@@436 $generated@@437)) ($generated@@92 $generated@@438 $generated@@4)))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@382 (type $generated@@439))))
(let (($generated@@441 ($generated@@381 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@380 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@379 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@440) ($generated@@0 ($generated@@97 ($generated@@436 $generated@@439) $generated@@442)))
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@436 $generated@@439))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@400 (type $generated@@443))))
(let (($generated@@445 ($generated@@399 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@398 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@397 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) ($generated@@0 ($generated@@97 ($generated@@396 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@396 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@400 (type $generated@@448))))
(= (type ($generated@@447 $generated@@448)) ($generated@@92 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@400 (type $generated@@450))))
(let (($generated@@452 ($generated@@399 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@398 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@397 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@451) ($generated@@0 ($generated@@97 ($generated@@447 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@447 $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@455)))
 (=> (and (= (type $generated@@454) ($generated@@92 $generated@@457 $generated@@2)) (= (type $generated@@456) $generated@@457)) (= (< 0 ($generated ($generated@@97 ($generated@@344 $generated@@454 $generated@@455) $generated@@456)))  (or (= $generated@@456 $generated@@455) (< 0 ($generated ($generated@@97 $generated@@454 $generated@@456)))))))
 :pattern ( ($generated@@97 ($generated@@344 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@459) $generated@@70)) (= ($generated@@78 $generated@@458 ($generated@@190 $generated@@459)) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@458 $generated@@460)))) ($generated@@268 $generated@@460 $generated@@459))
 :pattern ( ($generated@@97 $generated@@458 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@190 $generated@@459)))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@81) ($generated@@256 $generated@@461)) (or ($generated@@255 $generated@@461) ($generated@@325 $generated@@461)))
 :pattern ( ($generated@@256 $generated@@461))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@462) $generated@@170) (= (type $generated@@463) $generated@@81)) (or ($generated@@318 $generated@@463) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@463 $generated@@251)))) (and (=> (not ($generated@@255 $generated@@463)) (let (($generated@@464 ($generated@@162 $generated@@463)))
(let (($generated@@465 ($generated@@157 $generated@@463)))
 (and ($generated@@318 $generated@@465) ($generated@@318 $generated@@464))))) (= ($generated@@317 ($generated@@254 $generated@@462) $generated@@463) (ite ($generated@@255 $generated@@463) ($generated@@359 $generated@@184) (let (($generated@@466 ($generated@@162 $generated@@463)))
(let (($generated@@467 ($generated@@157 $generated@@463)))
(let (($generated@@468 ($generated@@153 $generated@@463)))
($generated@@277 ($generated@@277 ($generated@@344 ($generated@@359 $generated@@184) ($generated@@360 ($generated@@8 $generated@@468))) ($generated@@317 $generated@@462 $generated@@467)) ($generated@@317 $generated@@462 $generated@@466)))))))))
 :pattern ( ($generated@@317 ($generated@@254 $generated@@462) $generated@@463))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@470) $generated@@70)) (= (type $generated@@471) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@469 ($generated@@289 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@184) ($generated@@0 ($generated@@97 $generated@@469 $generated@@472))) ($generated@@311 $generated@@472 $generated@@470 $generated@@471))
 :pattern ( ($generated@@97 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@90 $generated@@469 ($generated@@289 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@474) $generated@@70)) (= (type $generated@@475) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@473 ($generated@@294 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@184) ($generated@@0 ($generated@@97 $generated@@473 $generated@@476))) ($generated@@311 $generated@@476 $generated@@474 $generated@@475))
 :pattern ( ($generated@@97 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@90 $generated@@473 ($generated@@294 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
(= ($generated ($generated@@97 ($generated@@359 $generated@@478) $generated@@477)) 0))
 :pattern ( (let (($generated@@478 (type $generated@@477)))
($generated@@97 ($generated@@359 $generated@@478) $generated@@477)))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@382 (type $generated@@482))))
(let (($generated@@484 ($generated@@381 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482)) ($generated@@92 $generated@@484 $generated@@483))))
 :pattern ( ($generated@@480 $generated@@482))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@486) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@479 $generated@@485) $generated@@486))  (and ($generated@@0 ($generated@@97 ($generated@@378 $generated@@485) ($generated@@182 ($generated@@420 $generated@@81 $generated@@486)))) (= ($generated@@97 ($generated@@480 $generated@@485) ($generated@@182 ($generated@@420 $generated@@81 $generated@@486))) ($generated@@183 ($generated@@420 $generated@@81 $generated@@486))))))
 :pattern ( ($generated@@97 ($generated@@479 $generated@@485) $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@400 (type $generated@@490))))
(let (($generated@@492 ($generated@@399 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490)) ($generated@@92 $generated@@492 $generated@@491))))
 :pattern ( ($generated@@488 $generated@@490))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@494) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@487 $generated@@493) $generated@@494))  (and ($generated@@0 ($generated@@97 ($generated@@396 $generated@@493) ($generated@@182 ($generated@@420 $generated@@81 $generated@@494)))) (= ($generated@@97 ($generated@@488 $generated@@493) ($generated@@182 ($generated@@420 $generated@@81 $generated@@494))) ($generated@@183 ($generated@@420 $generated@@81 $generated@@494))))))
 :pattern ( ($generated@@97 ($generated@@487 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(let (($generated@@498 ($generated@@381 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@380 $generated@@498 $generated@@497)) (= ($generated@@0 ($generated@@97 ($generated@@436 $generated@@495) $generated@@496)) (exists (($generated@@499 T@U) ) (!  (and (= (type $generated@@499) $generated@@498) (and ($generated@@0 ($generated@@97 ($generated@@378 $generated@@495) $generated@@499)) (= $generated@@496 ($generated@@97 ($generated@@480 $generated@@495) $generated@@499))))
 :pattern ( ($generated@@97 ($generated@@378 $generated@@495) $generated@@499))
 :pattern ( ($generated@@97 ($generated@@480 $generated@@495) $generated@@499))
))))))
 :pattern ( ($generated@@97 ($generated@@436 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(let (($generated@@503 ($generated@@399 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@398 $generated@@503 $generated@@502)) (= ($generated@@0 ($generated@@97 ($generated@@447 $generated@@500) $generated@@501)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) (and ($generated@@0 ($generated@@97 ($generated@@396 $generated@@500) $generated@@504)) (= $generated@@501 ($generated@@97 ($generated@@488 $generated@@500) $generated@@504))))
 :pattern ( ($generated@@97 ($generated@@396 $generated@@500) $generated@@504))
 :pattern ( ($generated@@97 ($generated@@488 $generated@@500) $generated@@504))
))))))
 :pattern ( ($generated@@97 ($generated@@447 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@70)) (= (type $generated@@511) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@508 ($generated@@505 $generated@@509 $generated@@510) $generated@@511) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@378 $generated@@508) $generated@@512))) (and ($generated@@311 ($generated@@97 ($generated@@480 $generated@@508) $generated@@512) $generated@@510 $generated@@511) ($generated@@311 $generated@@512 $generated@@509 $generated@@511)))
 :pattern ( ($generated@@97 ($generated@@480 $generated@@508) $generated@@512))
 :pattern ( ($generated@@97 ($generated@@378 $generated@@508) $generated@@512))
))))
 :pattern ( ($generated@@90 $generated@@508 ($generated@@505 $generated@@509 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@517) $generated@@70)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@516 ($generated@@513 $generated@@517 $generated@@518) $generated@@519) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@396 $generated@@516) $generated@@520))) (and ($generated@@311 ($generated@@97 ($generated@@488 $generated@@516) $generated@@520) $generated@@518 $generated@@519) ($generated@@311 $generated@@520 $generated@@517 $generated@@519)))
 :pattern ( ($generated@@97 ($generated@@488 $generated@@516) $generated@@520))
 :pattern ( ($generated@@97 ($generated@@396 $generated@@516) $generated@@520))
))))
 :pattern ( ($generated@@90 $generated@@516 ($generated@@513 $generated@@517 $generated@@518) $generated@@519))
)))
(assert  (and (forall (($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@523)) $generated@@170)
 :pattern ( ($generated@@521 $generated@@523))
)) (= (type $generated@@522) $generated@@170)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@170) (= (type $generated@@525) $generated@@81)) (= ($generated@@169 $generated@@524 $generated@@525) ($generated@@169 $generated@@522 $generated@@525)))
 :pattern ( ($generated@@169 ($generated@@521 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@81) ($generated@@78 $generated@@526 $generated@@80)) (or ($generated@@255 $generated@@526) ($generated@@325 $generated@@526)))
 :pattern ( ($generated@@325 $generated@@526) ($generated@@78 $generated@@526 $generated@@80))
 :pattern ( ($generated@@255 $generated@@526) ($generated@@78 $generated@@526 $generated@@80))
)))
(assert (forall (($generated@@528 T@T) ) (! (= (type ($generated@@527 $generated@@528)) ($generated@@92 $generated@@528 $generated@@4))
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@400 (type $generated@@529))))
(let (($generated@@531 ($generated@@399 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@398 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@397 $generated@@531 $generated@@530)) (= ($generated@@396 $generated@@529) ($generated@@527 $generated@@531))))))
 :pattern ( ($generated@@396 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@400 (type $generated@@532))))
(let (($generated@@534 ($generated@@399 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@398 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@397 $generated@@534 $generated@@533)) (= ($generated@@447 $generated@@532) ($generated@@527 $generated@@533))))))
 :pattern ( ($generated@@447 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@400 (type $generated@@535))))
(let (($generated@@537 ($generated@@399 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@398 $generated@@537 $generated@@536)) (= (= $generated@@535 ($generated@@397 $generated@@537 $generated@@536)) (= ($generated@@487 $generated@@535) ($generated@@527 $generated@@184))))))
 :pattern ( ($generated@@487 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@382 (type $generated@@538))))
(let (($generated@@540 ($generated@@381 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@380 $generated@@540 $generated@@539)) (or (= $generated@@538 ($generated@@379 $generated@@540 $generated@@539)) (exists (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (and (and (= (type $generated@@541) $generated@@184) (= (type $generated@@542) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@479 $generated@@538) ($generated@@360 ($generated@@267 $generated@@541 $generated@@542)))))
 :no-pattern (type $generated@@541)
 :no-pattern (type $generated@@542)
 :no-pattern ($generated $generated@@541)
 :no-pattern ($generated@@0 $generated@@541)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
))))))
 :pattern ( ($generated@@479 $generated@@538))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@400 (type $generated@@543))))
(let (($generated@@545 ($generated@@399 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@398 $generated@@545 $generated@@544)) (or (= $generated@@543 ($generated@@397 $generated@@545 $generated@@544)) (exists (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (and (and (= (type $generated@@546) $generated@@184) (= (type $generated@@547) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@487 $generated@@543) ($generated@@360 ($generated@@267 $generated@@546 $generated@@547)))))
 :no-pattern (type $generated@@546)
 :no-pattern (type $generated@@547)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
))))))
 :pattern ( ($generated@@487 $generated@@543))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@184) ($generated@@268 $generated@@548 $generated@@46)) (and (= ($generated@@360 ($generated@@420 $generated@@2 $generated@@548)) $generated@@548) ($generated@@78 ($generated@@420 $generated@@2 $generated@@548) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@548 $generated@@46))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@184) ($generated@@268 $generated@@549 $generated@@47)) (and (= ($generated@@360 ($generated@@420 $generated@@3 $generated@@549)) $generated@@549) ($generated@@78 ($generated@@420 $generated@@3 $generated@@549) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@549 $generated@@47))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@184) ($generated@@268 $generated@@550 $generated@@44)) (and (= ($generated@@360 ($generated@@420 $generated@@4 $generated@@550)) $generated@@550) ($generated@@78 ($generated@@420 $generated@@4 $generated@@550) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@550 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@551) 21))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@184) ($generated@@268 $generated@@552 $generated@@45)) (and (= ($generated@@360 ($generated@@420 $generated@@551 $generated@@552)) $generated@@552) ($generated@@78 ($generated@@420 $generated@@551 $generated@@552) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@552 $generated@@45))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@170) (= (type $generated@@554) $generated@@81)) (= ($generated@@169 ($generated@@254 $generated@@553) $generated@@554) ($generated@@169 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@169 ($generated@@254 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@268 ($generated@@360 $generated@@555) $generated@@556) ($generated@@78 $generated@@555 $generated@@556)))
 :pattern ( ($generated@@268 ($generated@@360 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@95 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@92 $generated@@558 $generated@@2)) (<= 0 ($generated@@343 $generated@@557))))
 :pattern ( ($generated@@343 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@337 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@336 $generated@@560)) (<= 0 ($generated@@335 $generated@@559))))
 :pattern ( ($generated@@335 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@70)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= ($generated@@561 ($generated@@505 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@505 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= ($generated@@565 ($generated@@505 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@505 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (= ($generated@@88 ($generated@@505 $generated@@569 $generated@@570)) $generated@@58))
 :pattern ( ($generated@@505 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@70)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@70) (= (type $generated@@574) $generated@@70)) (= ($generated@@571 ($generated@@513 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@513 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@70)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@70) (= (type $generated@@578) $generated@@70)) (= ($generated@@575 ($generated@@513 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@513 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@70) (= (type $generated@@580) $generated@@70)) (= ($generated@@88 ($generated@@513 $generated@@579 $generated@@580)) $generated@@59))
 :pattern ( ($generated@@513 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@184) (= (type $generated@@582) $generated@@184)) (= ($generated@@148 ($generated@@267 $generated@@581 $generated@@582)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@70)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (= ($generated@@583 ($generated@@175 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@175 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@70)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (= ($generated@@587 ($generated@@175 $generated@@589 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@175 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@184) (= (type $generated@@592) $generated@@184)) (= ($generated@@182 ($generated@@267 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@267 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@184) (= (type $generated@@594) $generated@@184)) (= ($generated@@183 ($generated@@267 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@267 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@81)) (= ($generated@@317 $generated@@595 $generated@@596) ($generated@@317 $generated@@522 $generated@@596)))
 :pattern ( ($generated@@317 ($generated@@521 $generated@@595) $generated@@596))
)))
(assert  (and (forall (($generated@@599 T@U) ) (! (= (type ($generated@@597 $generated@@599)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@599))
)) (forall (($generated@@600 T@U) ($generated@@601 Int) ) (! (let (($generated@@602 ($generated@@337 (type $generated@@600))))
(= (type ($generated@@598 $generated@@600 $generated@@601)) $generated@@602))
 :pattern ( ($generated@@598 $generated@@600 $generated@@601))
))))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@336 $generated@@184)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@603 ($generated@@597 $generated@@604) $generated@@605) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@335 $generated@@603))) ($generated@@311 ($generated@@598 $generated@@603 $generated@@606) $generated@@604 $generated@@605))
 :pattern ( ($generated@@598 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@90 $generated@@603 ($generated@@597 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 Int) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@81) (= (type $generated@@609) $generated@@81)) (= ($generated@@79 ($generated@@299 $generated@@607) ($generated@@301 $generated@@608) ($generated@@301 $generated@@609)) ($generated@@301 ($generated@@79 $generated@@607 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@79 ($generated@@299 $generated@@607) ($generated@@301 $generated@@608) ($generated@@301 $generated@@609)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@610 ($generated@@91 $generated@@611)) $generated@@611)
 :pattern ( ($generated@@91 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@70)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@70) (= ($generated@@612 ($generated@@289 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@289 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@70) (= ($generated@@88 ($generated@@289 $generated@@615)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@70)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@70) (= ($generated@@616 ($generated@@294 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@294 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@70) (= ($generated@@88 ($generated@@294 $generated@@619)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@70)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@70) (= ($generated@@620 ($generated@@190 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@190 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@70) (= ($generated@@88 ($generated@@190 $generated@@623)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@70)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@70) (= ($generated@@624 ($generated@@597 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@597 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@70) (= ($generated@@88 ($generated@@597 $generated@@627)) $generated@@57))
 :pattern ( ($generated@@597 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
(= ($generated@@420 $generated@@629 ($generated@@360 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@360 $generated@@628))
)))
(assert (forall (($generated@@631 Int) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@81) (= (type $generated@@633) $generated@@81)) (< ($generated@@630 $generated@@632) ($generated@@630 ($generated@@79 $generated@@631 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@79 $generated@@631 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 Int) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@81) (= (type $generated@@636) $generated@@81)) (< ($generated@@630 $generated@@636) ($generated@@630 ($generated@@79 $generated@@634 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@79 $generated@@634 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) (= ($generated@@78 $generated@@637 ($generated@@505 $generated@@638 $generated@@639)) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@378 $generated@@637) $generated@@640))) (and ($generated@@268 ($generated@@97 ($generated@@480 $generated@@637) $generated@@640) $generated@@639) ($generated@@268 $generated@@640 $generated@@638)))
 :pattern ( ($generated@@97 ($generated@@480 $generated@@637) $generated@@640))
 :pattern ( ($generated@@97 ($generated@@378 $generated@@637) $generated@@640))
))))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@505 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) (= ($generated@@78 $generated@@641 ($generated@@513 $generated@@642 $generated@@643)) (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@396 $generated@@641) $generated@@644))) (and ($generated@@268 ($generated@@97 ($generated@@488 $generated@@641) $generated@@644) $generated@@643) ($generated@@268 $generated@@644 $generated@@642)))
 :pattern ( ($generated@@97 ($generated@@488 $generated@@641) $generated@@644))
 :pattern ( ($generated@@97 ($generated@@396 $generated@@641) $generated@@644))
))))
 :pattern ( ($generated@@78 $generated@@641 ($generated@@513 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@184) (= (type $generated@@647) $generated@@184)) (< ($generated@@645 $generated@@646) ($generated@@630 ($generated@@267 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@267 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@184) (= (type $generated@@649) $generated@@184)) (< ($generated@@645 $generated@@649) ($generated@@630 ($generated@@267 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@267 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@170) (= (type $generated@@651) $generated@@81)) (= ($generated@@317 ($generated@@254 $generated@@650) $generated@@651) ($generated@@317 $generated@@650 $generated@@651)))
 :pattern ( ($generated@@317 ($generated@@254 $generated@@650) $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@184) (= (type $generated@@653) $generated@@70)) (= (type $generated@@654) $generated@@70)) ($generated@@268 $generated@@652 ($generated@@505 $generated@@653 $generated@@654))) (and (= ($generated@@360 ($generated@@420 ($generated@@380 $generated@@184 $generated@@184) $generated@@652)) $generated@@652) ($generated@@78 ($generated@@420 ($generated@@380 $generated@@184 $generated@@184) $generated@@652) ($generated@@505 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@268 $generated@@652 ($generated@@505 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@184) (= (type $generated@@656) $generated@@70)) (= (type $generated@@657) $generated@@70)) ($generated@@268 $generated@@655 ($generated@@513 $generated@@656 $generated@@657))) (and (= ($generated@@360 ($generated@@420 ($generated@@398 $generated@@184 $generated@@184) $generated@@655)) $generated@@655) ($generated@@78 ($generated@@420 ($generated@@398 $generated@@184 $generated@@184) $generated@@655) ($generated@@513 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@268 $generated@@655 ($generated@@513 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@70) (= (type $generated@@659) $generated@@70)) (= (type $generated@@660) $generated@@184)) ($generated@@268 $generated@@660 ($generated@@175 $generated@@658 $generated@@659))) (and (= ($generated@@360 ($generated@@420 $generated@@81 $generated@@660)) $generated@@660) ($generated@@78 ($generated@@420 $generated@@81 $generated@@660) ($generated@@175 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@268 $generated@@660 ($generated@@175 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@661)))
 (not ($generated@@0 ($generated@@97 ($generated@@527 $generated@@662) $generated@@661))))
 :pattern ( (let (($generated@@662 (type $generated@@661)))
($generated@@97 ($generated@@527 $generated@@662) $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@75)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@70) (= (type $generated@@666) $generated@@70)) (and (= ($generated@@88 ($generated@@175 $generated@@665 $generated@@666)) $generated@@62) (= ($generated@@663 ($generated@@175 $generated@@665 $generated@@666)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@81) (= (type $generated@@668) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@668) (and ($generated@@325 $generated@@667) ($generated@@90 $generated@@667 $generated@@80 $generated@@668)))) ($generated@@90 ($generated@@8 ($generated@@153 $generated@@667)) $generated@@46 $generated@@668))
 :pattern ( ($generated@@90 ($generated@@8 ($generated@@153 $generated@@667)) $generated@@46 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@81) (= ($generated@@645 ($generated@@360 $generated@@669)) ($generated@@630 $generated@@669)))
 :pattern ( ($generated@@645 ($generated@@360 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@184) ($generated@@268 $generated@@670 ($generated@@91 0))) (and (= ($generated@@360 ($generated@@420 $generated@@2 $generated@@670)) $generated@@670) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@670) ($generated@@91 0))))
 :pattern ( ($generated@@268 $generated@@670 ($generated@@91 0)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@184) (= (type $generated@@672) $generated@@70)) ($generated@@268 $generated@@671 ($generated@@289 $generated@@672))) (and (= ($generated@@360 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@671)) $generated@@671) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@671) ($generated@@289 $generated@@672))))
 :pattern ( ($generated@@268 $generated@@671 ($generated@@289 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@184) (= (type $generated@@674) $generated@@70)) ($generated@@268 $generated@@673 ($generated@@294 $generated@@674))) (and (= ($generated@@360 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@673)) $generated@@673) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@673) ($generated@@294 $generated@@674))))
 :pattern ( ($generated@@268 $generated@@673 ($generated@@294 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@184) (= (type $generated@@676) $generated@@70)) ($generated@@268 $generated@@675 ($generated@@190 $generated@@676))) (and (= ($generated@@360 ($generated@@420 ($generated@@92 $generated@@184 $generated@@2) $generated@@675)) $generated@@675) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@2) $generated@@675) ($generated@@190 $generated@@676))))
 :pattern ( ($generated@@268 $generated@@675 ($generated@@190 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@184) (= (type $generated@@678) $generated@@70)) ($generated@@268 $generated@@677 ($generated@@597 $generated@@678))) (and (= ($generated@@360 ($generated@@420 ($generated@@336 $generated@@184) $generated@@677)) $generated@@677) ($generated@@78 ($generated@@420 ($generated@@336 $generated@@184) $generated@@677) ($generated@@597 $generated@@678))))
 :pattern ( ($generated@@268 $generated@@677 ($generated@@597 $generated@@678)))
)))
(assert (= ($generated@@88 $generated@@80) $generated@@64))
(assert (= ($generated@@663 $generated@@80) $generated@@68))
(assert (= ($generated@@88 $generated@@251) $generated@@66))
(assert (= ($generated@@663 $generated@@251) $generated@@69))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@679) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@680) $generated@@70)) (= (type $generated@@681) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@679 ($generated@@190 $generated@@680) $generated@@681) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@679 $generated@@682)))) ($generated@@311 $generated@@682 $generated@@680 $generated@@681))
 :pattern ( ($generated@@97 $generated@@679 $generated@@682))
))))
 :pattern ( ($generated@@90 $generated@@679 ($generated@@190 $generated@@680) $generated@@681))
)))
(assert (= $generated@@189 ($generated@@301 $generated@@189)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@81) (= (type $generated@@684) $generated@@70)) (= (type $generated@@685) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@685) (and ($generated@@174 $generated@@683) (exists (($generated@@686 T@U) ) (!  (and (= (type $generated@@686) $generated@@70) ($generated@@90 $generated@@683 ($generated@@175 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@90 $generated@@683 ($generated@@175 $generated@@684 $generated@@686) $generated@@685))
))))) ($generated@@311 ($generated@@182 $generated@@683) $generated@@684 $generated@@685))
 :pattern ( ($generated@@311 ($generated@@182 $generated@@683) $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@81) (= (type $generated@@688) $generated@@70)) (= (type $generated@@689) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@689) (and ($generated@@174 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@70) ($generated@@90 $generated@@687 ($generated@@175 $generated@@690 $generated@@688) $generated@@689))
 :pattern ( ($generated@@90 $generated@@687 ($generated@@175 $generated@@690 $generated@@688) $generated@@689))
))))) ($generated@@311 ($generated@@183 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@311 ($generated@@183 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@692)))
 (=> (and (and (= (type $generated@@691) ($generated@@92 $generated@@694 $generated@@2)) (= (type $generated@@693) $generated@@694)) (not (= $generated@@692 $generated@@693))) (= ($generated ($generated@@97 $generated@@691 $generated@@693)) ($generated ($generated@@97 ($generated@@344 $generated@@691 $generated@@692) $generated@@693)))))
 :pattern ( ($generated@@344 $generated@@691 $generated@@692) ($generated@@97 $generated@@691 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@81) (= (type $generated@@696) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@696) (and ($generated@@325 $generated@@695) ($generated@@90 $generated@@695 $generated@@80 $generated@@696)))) ($generated@@90 ($generated@@157 $generated@@695) $generated@@80 $generated@@696))
 :pattern ( ($generated@@90 ($generated@@157 $generated@@695) $generated@@80 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@81) (= (type $generated@@698) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@698) (and ($generated@@325 $generated@@697) ($generated@@90 $generated@@697 $generated@@80 $generated@@698)))) ($generated@@90 ($generated@@162 $generated@@697) $generated@@80 $generated@@698))
 :pattern ( ($generated@@90 ($generated@@162 $generated@@697) $generated@@80 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@184) (= (type $generated@@700) $generated@@184)) (= ($generated@@267 ($generated@@301 $generated@@699) ($generated@@301 $generated@@700)) ($generated@@301 ($generated@@267 $generated@@699 $generated@@700))))
 :pattern ( ($generated@@267 ($generated@@301 $generated@@699) ($generated@@301 $generated@@700)))
)))
(assert (forall (($generated@@701 Int) ) (! (= ($generated@@360 ($generated@@8 ($generated@@299 $generated@@701))) ($generated@@301 ($generated@@360 ($generated@@8 $generated@@701))))
 :pattern ( ($generated@@360 ($generated@@8 ($generated@@299 $generated@@701))))
)))
(assert (forall (($generated@@702 T@U) ) (! (= ($generated@@360 ($generated@@301 $generated@@702)) ($generated@@301 ($generated@@360 $generated@@702)))
 :pattern ( ($generated@@360 ($generated@@301 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ) (! (let (($generated@@704 ($generated@@337 (type $generated@@703))))
 (=> (and (= (type $generated@@703) ($generated@@336 $generated@@704)) (= ($generated@@335 $generated@@703) 0)) (= $generated@@703 ($generated@@334 $generated@@704))))
 :pattern ( ($generated@@335 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@706)))
 (=> (and (and (= (type $generated@@705) ($generated@@92 $generated@@708 $generated@@2)) (= (type $generated@@707) $generated@@2)) (<= 0 ($generated $generated@@707))) (= ($generated@@343 ($generated@@98 $generated@@705 $generated@@706 $generated@@707)) (+ (- ($generated@@343 $generated@@705) ($generated ($generated@@97 $generated@@705 $generated@@706))) ($generated $generated@@707)))))
 :pattern ( ($generated@@343 ($generated@@98 $generated@@705 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@81) (= ($generated@@78 $generated@@709 $generated@@251)  (and ($generated@@78 $generated@@709 $generated@@80) ($generated@@169 ($generated@@254 $generated@@522) $generated@@709))))
 :pattern ( ($generated@@78 $generated@@709 $generated@@251))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@711) $generated@@2)) ($generated@@90 $generated@@711 $generated@@46 $generated@@710))
 :pattern ( ($generated@@90 $generated@@711 $generated@@46 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@713) $generated@@3)) ($generated@@90 $generated@@713 $generated@@47 $generated@@712))
 :pattern ( ($generated@@90 $generated@@713 $generated@@47 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@715) $generated@@4)) ($generated@@90 $generated@@715 $generated@@44 $generated@@714))
 :pattern ( ($generated@@90 $generated@@715 $generated@@44 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@717) $generated@@551)) ($generated@@90 $generated@@717 $generated@@45 $generated@@716))
 :pattern ( ($generated@@90 $generated@@717 $generated@@45 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@719) $generated@@184)) ($generated@@90 $generated@@719 $generated@@48 $generated@@718))
 :pattern ( ($generated@@90 $generated@@719 $generated@@48 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) ($generated@@336 $generated@@184)) (= (type $generated@@721) $generated@@70)) (= ($generated@@78 $generated@@720 ($generated@@597 $generated@@721)) (forall (($generated@@722 Int) ) (!  (=> (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@335 $generated@@720))) ($generated@@268 ($generated@@598 $generated@@720 $generated@@722) $generated@@721))
 :pattern ( ($generated@@598 $generated@@720 $generated@@722))
))))
 :pattern ( ($generated@@78 $generated@@720 ($generated@@597 $generated@@721)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 Int) ) (!  (=> (= (type $generated@@724) ($generated@@336 $generated@@184)) (=> (and (<= 0 $generated@@725) (< $generated@@725 ($generated@@335 $generated@@724))) (< ($generated@@630 ($generated@@420 $generated@@81 ($generated@@598 $generated@@724 $generated@@725))) ($generated@@723 $generated@@724))))
 :pattern ( ($generated@@630 ($generated@@420 $generated@@81 ($generated@@598 $generated@@724 $generated@@725))))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (and (= (type $generated@@726) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@727) $generated@@70)) (= (type $generated@@728) $generated@@70)) ($generated@@78 $generated@@726 ($generated@@505 $generated@@727 $generated@@728))) (and (and ($generated@@78 ($generated@@378 $generated@@726) ($generated@@289 $generated@@727)) ($generated@@78 ($generated@@436 $generated@@726) ($generated@@289 $generated@@728))) ($generated@@78 ($generated@@479 $generated@@726) ($generated@@289 ($generated@@175 $generated@@727 $generated@@728)))))
 :pattern ( ($generated@@78 $generated@@726 ($generated@@505 $generated@@727 $generated@@728)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (= (type $generated@@729) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@730) $generated@@70)) (= (type $generated@@731) $generated@@70)) ($generated@@78 $generated@@729 ($generated@@513 $generated@@730 $generated@@731))) (and (and ($generated@@78 ($generated@@396 $generated@@729) ($generated@@294 $generated@@730)) ($generated@@78 ($generated@@447 $generated@@729) ($generated@@294 $generated@@731))) ($generated@@78 ($generated@@487 $generated@@729) ($generated@@294 ($generated@@175 $generated@@730 $generated@@731)))))
 :pattern ( ($generated@@78 $generated@@729 ($generated@@513 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@2) ($generated@@78 $generated@@732 $generated@@46))
 :pattern ( ($generated@@78 $generated@@732 $generated@@46))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@3) ($generated@@78 $generated@@733 $generated@@47))
 :pattern ( ($generated@@78 $generated@@733 $generated@@47))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@4) ($generated@@78 $generated@@734 $generated@@44))
 :pattern ( ($generated@@78 $generated@@734 $generated@@44))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@551) ($generated@@78 $generated@@735 $generated@@45))
 :pattern ( ($generated@@78 $generated@@735 $generated@@45))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@184) ($generated@@78 $generated@@736 $generated@@48))
 :pattern ( ($generated@@78 $generated@@736 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 () Int)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@737) $generated@@81) (= (type $generated@@739) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@740) ($generated@@197 $generated@@93 $generated@@4))) (= (type $generated@@741) $generated@@93)) (= (type $generated@@742) ($generated@@92 $generated@@93 $generated@@94))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@744 true))
(let (($generated@@745  (=> (and (=> (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 $generated@@522) $generated@@737) ($generated@@360 ($generated@@8 $generated@@738)))) 0) (<= ($generated@@153 $generated@@737) $generated@@738)) (= (ControlFlow 0 4) 1)) $generated@@744)))
(let (($generated@@746  (=> ($generated@@90 $generated@@737 $generated@@251 $generated@@739) (=> (and ($generated@@318 $generated@@737) (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 $generated@@522) $generated@@737) ($generated@@360 ($generated@@8 $generated@@738)))) 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@325 $generated@@737)) (=> ($generated@@325 $generated@@737) (=> (and (<= ($generated@@153 $generated@@737) $generated@@738) (= (ControlFlow 0 2) 1)) $generated@@744)))))))
(let (($generated@@747  (=> (and (= $generated@@740 ($generated@@196 $generated@@741 $generated@@742 $generated@@60 false)) (not ($generated@@257 $generated@@737 $generated@@189))) (=> (and (and ($generated@@275 $generated@@739) ($generated@@743 $generated@@739)) (= $generated@@742 $generated@@739)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@325 $generated@@737)) (=> ($generated@@325 $generated@@737) (=> ($generated@@90 $generated@@737 $generated@@251 $generated@@739) (=> (and ($generated@@318 $generated@@737) (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 $generated@@522) $generated@@737) ($generated@@360 ($generated@@8 ($generated@@153 $generated@@737))))) 0)) (and (=> (= (ControlFlow 0 5) 2) $generated@@746) (=> (= (ControlFlow 0 5) 4) $generated@@745))))))))))
(let (($generated@@748  (=> (and ($generated@@275 $generated@@742) ($generated@@743 $generated@@742)) (=> (and (and (and ($generated@@78 $generated@@737 $generated@@251) ($generated@@90 $generated@@737 $generated@@251 $generated@@742)) ($generated@@256 $generated@@737)) (and (= 4 $generated@@168) (= (ControlFlow 0 7) 5))) $generated@@747))))
$generated@@748))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (Int T@U T@U) T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@T) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@317 (T@U T@U T@U) Bool)
(declare-fun $generated@@323 (T@U) Bool)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@346 (T@U) Int)
(declare-fun $generated@@347 (T@U T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@T) T@U)
(declare-fun $generated@@400 (T@T T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@402 (T@T) T@T)
(declare-fun $generated@@422 (T@T T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@510 (T@U T@U) T@U)
(declare-fun $generated@@518 (T@U T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@T) T@U)
(declare-fun $generated@@558 () T@T)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@590 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@605 (T@U Int) T@U)
(declare-fun $generated@@617 (T@U) Int)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(declare-fun $generated@@652 (T@U) Int)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@729 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (forall (($generated@@80 Int) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= (type ($generated@@77 $generated@@80 $generated@@81 $generated@@82)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@81 $generated@@82))
))) (= (type $generated@@78) $generated@@68)))
(assert (forall (($generated@@83 Int) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (= (type $generated@@84) $generated@@79) (= (type $generated@@85) $generated@@79)) (= ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78)  (and (and ($generated@@76 ($generated@@8 $generated@@83) $generated@@46) ($generated@@76 $generated@@84 $generated@@78)) ($generated@@76 $generated@@85 $generated@@78))))
 :pattern ( ($generated@@76 ($generated@@77 $generated@@83 $generated@@84 $generated@@85) $generated@@78))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@90 $generated@@154 $generated@@2))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (= ($generated@@1 $generated@@156) 16)) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@151 $generated@@159)) $generated@@156)
 :pattern ( ($generated@@151 $generated@@159))
))) (= (type $generated@@152) $generated@@156)) (forall (($generated@@160 T@T) ) (! (= (type ($generated@@153 $generated@@160)) ($generated@@90 $generated@@160 $generated@@2))
 :pattern ( ($generated@@153 $generated@@160))
))))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@79) (or ($generated@@148 $generated@@161) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@161 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@161) ($generated@@153 $generated@@154))))))) (= ($generated@@147 $generated@@161) ($generated@@155 $generated@@161)))
 :pattern ( ($generated@@147 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@79) (= (type $generated@@166) $generated@@79)) (= ($generated@@162 ($generated@@77 $generated@@164 $generated@@165 $generated@@166)) $generated@@65))
 :pattern ( ($generated@@77 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 Int) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@79) (= (type $generated@@169) $generated@@79)) (= ($generated@@155 ($generated@@77 $generated@@167 $generated@@168 $generated@@169)) $generated@@167))
 :pattern ( ($generated@@77 $generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@79)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@79) (= (type $generated@@174) $generated@@79)) (= ($generated@@170 ($generated@@77 $generated@@172 $generated@@173 $generated@@174)) $generated@@173))
 :pattern ( ($generated@@77 $generated@@172 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@79)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 Int) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@79) (= (type $generated@@179) $generated@@79)) (= ($generated@@175 ($generated@@77 $generated@@177 $generated@@178 $generated@@179)) $generated@@179))
 :pattern ( ($generated@@77 $generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@76 $generated@@180 ($generated@@89 0)))
 :pattern ( ($generated@@76 $generated@@180 ($generated@@89 0)))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (= (type $generated@@183) $generated@@156) (= (type $generated@@184) $generated@@79)) (or ($generated@@182 $generated@@184) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@184 $generated@@78)))) true)
 :pattern ( ($generated@@181 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@187 $generated@@188)) $generated@@68)
 :pattern ( ($generated@@186 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@68) (= (type $generated@@190) $generated@@68)) (= (type $generated@@191) $generated@@79)) ($generated@@76 $generated@@191 ($generated@@186 $generated@@189 $generated@@190))) ($generated@@185 $generated@@191))
 :pattern ( ($generated@@185 $generated@@191) ($generated@@76 $generated@@191 ($generated@@186 $generated@@189 $generated@@190)))
)))
(assert  (and (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@154)
 :pattern ( ($generated@@193 $generated@@195))
)) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@154)
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@79) (= (type $generated@@198) $generated@@79)) true) (= ($generated@@192 $generated@@197 $generated@@198)  (and (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)) (= ($generated@@194 $generated@@197) ($generated@@194 $generated@@198)))))
 :pattern ( ($generated@@192 $generated@@197 $generated@@198))
)))
(assert (= (type $generated@@199) $generated@@79))
(assert (= ($generated@@162 $generated@@199) $generated@@63))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@68)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@204) $generated@@68)) ($generated@@76 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@76 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@91 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@71 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@91) (= (type $generated@@255) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@256) ($generated@@70 $generated@@4))) (= (type $generated@@258) $generated@@91)) (= (type $generated@@259) ($generated@@70 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@156) (= (type $generated@@265) $generated@@79)) (or ($generated@@182 $generated@@265) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@265 $generated@@78)))) (and (=> (not ($generated@@261 $generated@@265)) (let (($generated@@266 ($generated@@175 $generated@@265)))
(let (($generated@@267 ($generated@@170 $generated@@265)))
(let (($generated@@268 ($generated@@155 $generated@@265)))
 (and ($generated@@182 $generated@@267) (=> ($generated@@181 $generated@@264 $generated@@267) (and ($generated@@182 $generated@@266) (=> ($generated@@181 $generated@@264 $generated@@266) (and ($generated@@262 $generated@@267) (=> (or ($generated@@263 $generated@@267 $generated@@199) (<= $generated@@268 ($generated@@155 $generated@@267))) ($generated@@262 $generated@@266))))))))))) (= ($generated@@181 ($generated@@151 $generated@@264) $generated@@265) (ite ($generated@@261 $generated@@265) true (let (($generated@@269 ($generated@@175 $generated@@265)))
(let (($generated@@270 ($generated@@170 $generated@@265)))
(let (($generated@@271 ($generated@@155 $generated@@265)))
 (and (and (and ($generated@@181 $generated@@264 $generated@@270) ($generated@@181 $generated@@264 $generated@@269)) (or ($generated@@263 $generated@@270 $generated@@199) (<= $generated@@271 ($generated@@155 $generated@@270)))) (or ($generated@@263 $generated@@269 $generated@@199) (<= $generated@@271 ($generated@@155 $generated@@269)))))))))))
 :pattern ( ($generated@@181 ($generated@@151 $generated@@264) $generated@@265))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@79)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@154)) (= (type $generated@@279) $generated@@154)) (= ($generated@@76 ($generated@@272 $generated@@278 $generated@@279) ($generated@@186 $generated@@276 $generated@@277))  (and ($generated@@273 $generated@@278 $generated@@276) ($generated@@273 $generated@@279 $generated@@277))))
 :pattern ( ($generated@@76 ($generated@@272 $generated@@278 $generated@@279) ($generated@@186 $generated@@276 $generated@@277)))
)))
(assert ($generated@@76 $generated@@199 $generated@@78))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@280 $generated@@281)) ($generated@@88 $generated@@199 $generated@@78 $generated@@281))
 :pattern ( ($generated@@88 $generated@@199 $generated@@78 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@93 (type $generated@@283))))
(= (type ($generated@@282 $generated@@283 $generated@@284)) ($generated@@90 $generated@@285 $generated@@2)))
 :pattern ( ($generated@@282 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
 (=> (and (= (type $generated@@286) ($generated@@90 $generated@@289 $generated@@2)) (= (type $generated@@287) ($generated@@90 $generated@@289 $generated@@2))) (= ($generated ($generated@@95 ($generated@@282 $generated@@286 $generated@@287) $generated@@288)) (+ ($generated ($generated@@95 $generated@@286 $generated@@288)) ($generated ($generated@@95 $generated@@287 $generated@@288))))))
 :pattern ( ($generated@@95 ($generated@@282 $generated@@286 $generated@@287) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@79) (= (type $generated@@291) $generated@@79)) (= ($generated@@192 $generated@@290 $generated@@291) (= $generated@@290 $generated@@291)))
 :pattern ( ($generated@@192 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@79) (= (type $generated@@293) $generated@@79)) (= ($generated@@263 $generated@@292 $generated@@293) (= $generated@@292 $generated@@293)))
 :pattern ( ($generated@@263 $generated@@292 $generated@@293))
)))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@79) (or ($generated@@148 $generated@@294) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@294 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@294) ($generated@@153 $generated@@154))))))) true)
 :pattern ( ($generated@@147 $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@298) $generated@@68)) (= ($generated@@76 $generated@@297 ($generated@@295 $generated@@298)) (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@154) ($generated@@0 ($generated@@95 $generated@@297 $generated@@299))) ($generated@@273 $generated@@299 $generated@@298))
 :pattern ( ($generated@@95 $generated@@297 $generated@@299))
))))
 :pattern ( ($generated@@76 $generated@@297 ($generated@@295 $generated@@298)))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@68)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@303) $generated@@68)) (= ($generated@@76 $generated@@302 ($generated@@300 $generated@@303)) (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@154) ($generated@@0 ($generated@@95 $generated@@302 $generated@@304))) ($generated@@273 $generated@@304 $generated@@303))
 :pattern ( ($generated@@95 $generated@@302 $generated@@304))
))))
 :pattern ( ($generated@@76 $generated@@302 ($generated@@300 $generated@@303)))
)))
(assert (forall (($generated@@306 Int) ) (! (= ($generated@@305 $generated@@306) $generated@@306)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 (type $generated@@308)))
(= (type ($generated@@307 $generated@@308)) $generated@@309))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= ($generated@@307 $generated@@310) $generated@@310)
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@311) $generated@@79) (= (type $generated@@312) $generated@@79)) (and ($generated@@261 $generated@@311) ($generated@@261 $generated@@312))) (= ($generated@@263 $generated@@311 $generated@@312) true))
 :pattern ( ($generated@@263 $generated@@311 $generated@@312) ($generated@@261 $generated@@311))
 :pattern ( ($generated@@263 $generated@@311 $generated@@312) ($generated@@261 $generated@@312))
)))
(assert (forall (($generated@@313 Int) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@79) (= (type $generated@@315) $generated@@79)) (= (type $generated@@316) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@280 $generated@@316)) (= ($generated@@88 ($generated@@77 $generated@@313 $generated@@314 $generated@@315) $generated@@78 $generated@@316)  (and (and ($generated@@88 ($generated@@8 $generated@@313) $generated@@46 $generated@@316) ($generated@@88 $generated@@314 $generated@@78 $generated@@316)) ($generated@@88 $generated@@315 $generated@@78 $generated@@316))))
 :pattern ( ($generated@@88 ($generated@@77 $generated@@313 $generated@@314 $generated@@315) $generated@@78 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@318) $generated@@68) (= (type $generated@@319) $generated@@68)) (= (type $generated@@320) $generated@@154)) (= (type $generated@@321) $generated@@154)) (= (type $generated@@322) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@280 $generated@@322)) (= ($generated@@88 ($generated@@272 $generated@@320 $generated@@321) ($generated@@186 $generated@@318 $generated@@319) $generated@@322)  (and ($generated@@317 $generated@@320 $generated@@318 $generated@@322) ($generated@@317 $generated@@321 $generated@@319 $generated@@322))))
 :pattern ( ($generated@@88 ($generated@@272 $generated@@320 $generated@@321) ($generated@@186 $generated@@318 $generated@@319) $generated@@322))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (= (type $generated@@324) $generated@@156) (= (type $generated@@325) $generated@@79)) (or ($generated@@323 $generated@@325) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@325 $generated@@78)))) ($generated@@76 ($generated@@150 $generated@@324 $generated@@325) ($generated@@200 $generated@@46)))
 :pattern ( ($generated@@150 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@79) (= ($generated@@185 $generated@@326) (= ($generated@@162 $generated@@326) $generated@@61)))
 :pattern ( ($generated@@185 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@79) (= ($generated@@261 $generated@@327) (= ($generated@@162 $generated@@327) $generated@@63)))
 :pattern ( ($generated@@261 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@79) (= ($generated@@328 $generated@@329) (= ($generated@@162 $generated@@329) $generated@@65)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@79) ($generated@@328 $generated@@330)) (exists (($generated@@331 Int) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@79) (= (type $generated@@333) $generated@@79)) (= $generated@@330 ($generated@@77 $generated@@331 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@328 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@79) ($generated@@185 $generated@@334)) (exists (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (and (and (= (type $generated@@335) $generated@@154) (= (type $generated@@336) $generated@@154)) (= $generated@@334 ($generated@@272 $generated@@335 $generated@@336)))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
)))
 :pattern ( ($generated@@185 $generated@@334))
)))
(assert  (and (and (forall (($generated@@341 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@341)) 18)) (forall (($generated@@342 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@339 $generated@@342))
))) (forall (($generated@@343 T@T) ) (! (= (type ($generated@@337 $generated@@343)) ($generated@@339 $generated@@343))
 :pattern ( ($generated@@337 $generated@@343))
))))
(assert (forall (($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@344)) 0)
 :pattern ( ($generated@@337 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@79) ($generated@@261 $generated@@345)) (= $generated@@345 $generated@@199))
 :pattern ( ($generated@@261 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= (type ($generated@@347 $generated@@348 $generated@@349)) ($generated@@90 $generated@@350 $generated@@2)))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 (type $generated@@352)))
 (=> (= (type $generated@@351) ($generated@@90 $generated@@353 $generated@@2)) (= ($generated@@346 ($generated@@347 $generated@@351 $generated@@352)) (+ ($generated@@346 $generated@@351) 1))))
 :pattern ( ($generated@@346 ($generated@@347 $generated@@351 $generated@@352)))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) $generated@@156) (= (type $generated@@355) $generated@@79)) (or ($generated@@182 ($generated@@307 $generated@@355)) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@355 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@307 ($generated@@11 ($generated@@261 ($generated@@307 $generated@@355)))))) (let (($generated@@356 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@355)))))
(let (($generated@@357 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@355)))))
(let (($generated@@358 ($generated@@305 ($generated@@155 ($generated@@307 $generated@@355)))))
 (and ($generated@@182 $generated@@357) (=> ($generated@@181 ($generated@@151 $generated@@354) $generated@@357) (and ($generated@@182 $generated@@356) (=> ($generated@@181 ($generated@@151 $generated@@354) $generated@@356) (and ($generated@@262 $generated@@357) (=> (or ($generated@@263 $generated@@357 $generated@@199) (<= $generated@@358 ($generated@@155 $generated@@357))) ($generated@@262 $generated@@356))))))))))) (= ($generated@@181 ($generated@@151 $generated@@354) ($generated@@307 $generated@@355)) (ite ($generated@@261 ($generated@@307 $generated@@355)) true (let (($generated@@359 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@355)))))
(let (($generated@@360 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@355)))))
(let (($generated@@361 ($generated@@305 ($generated@@155 ($generated@@307 $generated@@355)))))
 (and (and (and ($generated@@181 ($generated@@151 $generated@@354) $generated@@360) ($generated@@181 ($generated@@151 $generated@@354) $generated@@359)) (or ($generated@@263 $generated@@360 $generated@@199) (<= $generated@@361 ($generated@@305 ($generated@@155 $generated@@360))))) (or ($generated@@263 $generated@@359 $generated@@199) (<= $generated@@361 ($generated@@305 ($generated@@155 $generated@@359))))))))))))
 :weight 3
 :pattern ( ($generated@@181 ($generated@@151 $generated@@354) ($generated@@307 $generated@@355)))
))))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@154)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@156) (= (type $generated@@365) $generated@@79)) (or ($generated@@323 ($generated@@307 $generated@@365)) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@365 $generated@@78)))) (and (=> (not ($generated@@0 ($generated@@307 ($generated@@11 ($generated@@261 ($generated@@307 $generated@@365)))))) (let (($generated@@366 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@365)))))
(let (($generated@@367 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@365)))))
 (and ($generated@@323 $generated@@367) ($generated@@323 $generated@@366))))) (= ($generated@@150 ($generated@@151 $generated@@364) ($generated@@307 $generated@@365)) (ite ($generated@@261 ($generated@@307 $generated@@365)) ($generated@@153 $generated@@154) (let (($generated@@368 ($generated@@307 ($generated@@175 ($generated@@307 $generated@@365)))))
(let (($generated@@369 ($generated@@307 ($generated@@170 ($generated@@307 $generated@@365)))))
(let (($generated@@370 ($generated@@305 ($generated@@155 ($generated@@307 $generated@@365)))))
($generated@@282 ($generated@@282 ($generated@@347 ($generated@@153 $generated@@154) ($generated@@362 ($generated@@8 $generated@@370))) ($generated@@150 ($generated@@151 $generated@@364) $generated@@369)) ($generated@@150 ($generated@@151 $generated@@364) $generated@@368)))))))))
 :weight 3
 :pattern ( ($generated@@150 ($generated@@151 $generated@@364) ($generated@@307 $generated@@365)))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@68) (= (type $generated@@373) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@317 ($generated@@362 $generated@@371) $generated@@372 $generated@@373) ($generated@@88 $generated@@371 $generated@@372 $generated@@373)))
 :pattern ( ($generated@@317 ($generated@@362 $generated@@371) $generated@@372 $generated@@373))
)))
(assert  (=> (<= 2 $generated@@146) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@79) (or ($generated@@148 ($generated@@307 $generated@@374)) (and (not (= 2 $generated@@146)) (and ($generated@@76 $generated@@374 $generated@@78) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) ($generated@@307 $generated@@374)) ($generated@@153 $generated@@154))))))) (= ($generated@@147 ($generated@@307 $generated@@374)) ($generated@@305 ($generated@@155 ($generated@@307 $generated@@374)))))
 :weight 3
 :pattern ( ($generated@@147 ($generated@@307 $generated@@374)))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@79) (= (type $generated@@376) $generated@@79)) (and ($generated@@328 $generated@@375) ($generated@@328 $generated@@376))) (= ($generated@@263 $generated@@375 $generated@@376)  (and (and (= ($generated@@155 $generated@@375) ($generated@@155 $generated@@376)) ($generated@@263 ($generated@@170 $generated@@375) ($generated@@170 $generated@@376))) ($generated@@263 ($generated@@175 $generated@@375) ($generated@@175 $generated@@376)))))
 :pattern ( ($generated@@263 $generated@@375 $generated@@376) ($generated@@328 $generated@@375))
 :pattern ( ($generated@@263 $generated@@375 $generated@@376) ($generated@@328 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@93 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@90 $generated@@378 $generated@@2)) (and (= (= ($generated@@346 $generated@@377) 0) (= $generated@@377 ($generated@@153 $generated@@378))) (=> (not (= ($generated@@346 $generated@@377) 0)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (< 0 ($generated ($generated@@95 $generated@@377 $generated@@379))))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@346 $generated@@377))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 19)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@90 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@95 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@95 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert  (and (and (and (and (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (= ($generated@@1 ($generated@@400 $generated@@403 $generated@@404)) 20)) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@401 ($generated@@400 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@400 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@T) ($generated@@408 T@T) ) (! (= ($generated@@402 ($generated@@400 $generated@@407 $generated@@408)) $generated@@408)
 :pattern ( ($generated@@400 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@401 (type $generated@@409))))
(= (type ($generated@@398 $generated@@409)) ($generated@@90 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@398 $generated@@409))
))) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= (type ($generated@@399 $generated@@411 $generated@@412)) ($generated@@400 $generated@@411 $generated@@412))
 :pattern ( ($generated@@399 $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@T) ) (! (let (($generated@@415 (type $generated@@413)))
 (not ($generated@@0 ($generated@@95 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413))))
 :pattern ( (let (($generated@@415 (type $generated@@413)))
($generated@@95 ($generated@@398 ($generated@@399 $generated@@415 $generated@@414)) $generated@@413)))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@93 (type $generated@@416))))
 (=> (and (= (type $generated@@416) ($generated@@90 $generated@@418 $generated@@2)) (= (type $generated@@417) ($generated@@90 $generated@@418 $generated@@2))) (= ($generated@@346 ($generated@@282 $generated@@416 $generated@@417)) (+ ($generated@@346 $generated@@416) ($generated@@346 $generated@@417)))))
 :pattern ( ($generated@@346 ($generated@@282 $generated@@416 $generated@@417)))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@93 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@90 $generated@@420 $generated@@2)) (= ($generated@@201 $generated@@419) (forall (($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@420) (and (<= 0 ($generated ($generated@@95 $generated@@419 $generated@@421))) (<= ($generated ($generated@@95 $generated@@419 $generated@@421)) ($generated@@346 $generated@@419))))
 :pattern ( ($generated@@95 $generated@@419 $generated@@421))
)))))
 :pattern ( ($generated@@201 $generated@@419))
)))
(assert (forall (($generated@@423 T@T) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@423)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@154) ($generated@@273 $generated@@425 $generated@@78)) (and (= ($generated@@362 ($generated@@422 $generated@@79 $generated@@425)) $generated@@425) ($generated@@76 ($generated@@422 $generated@@79 $generated@@425) $generated@@78)))
 :pattern ( ($generated@@273 $generated@@425 $generated@@78))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
 (=> (= (type $generated@@426) ($generated@@90 $generated@@428 $generated@@2)) (= ($generated ($generated@@95 ($generated@@347 $generated@@426 $generated@@427) $generated@@427)) (+ ($generated ($generated@@95 $generated@@426 $generated@@427)) 1))))
 :pattern ( ($generated@@347 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@430)))
 (=> (and (and (= (type $generated@@429) ($generated@@90 $generated@@432 $generated@@2)) (= (type $generated@@431) $generated@@432)) (< 0 ($generated ($generated@@95 $generated@@429 $generated@@431)))) (< 0 ($generated ($generated@@95 ($generated@@347 $generated@@429 $generated@@430) $generated@@431)))))
 :pattern ( ($generated@@347 $generated@@429 $generated@@430) ($generated@@95 $generated@@429 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@384 (type $generated@@433))))
(let (($generated@@435 ($generated@@383 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@382 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@381 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) ($generated@@0 ($generated@@95 ($generated@@380 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@384 (type $generated@@438))))
(= (type ($generated@@437 $generated@@438)) ($generated@@90 $generated@@439 $generated@@4)))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@384 (type $generated@@440))))
(let (($generated@@442 ($generated@@383 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@382 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@381 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@441) ($generated@@0 ($generated@@95 ($generated@@437 $generated@@440) $generated@@443)))
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@437 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@402 (type $generated@@444))))
(let (($generated@@446 ($generated@@401 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@400 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@399 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) ($generated@@0 ($generated@@95 ($generated@@398 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@398 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@402 (type $generated@@449))))
(= (type ($generated@@448 $generated@@449)) ($generated@@90 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@402 (type $generated@@451))))
(let (($generated@@453 ($generated@@401 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@400 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@399 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@452) ($generated@@0 ($generated@@95 ($generated@@448 $generated@@451) $generated@@454)))
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@448 $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@456)))
 (=> (and (= (type $generated@@455) ($generated@@90 $generated@@458 $generated@@2)) (= (type $generated@@457) $generated@@458)) (= (< 0 ($generated ($generated@@95 ($generated@@347 $generated@@455 $generated@@456) $generated@@457)))  (or (= $generated@@457 $generated@@456) (< 0 ($generated ($generated@@95 $generated@@455 $generated@@457)))))))
 :pattern ( ($generated@@95 ($generated@@347 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@460) $generated@@68)) (= ($generated@@76 $generated@@459 ($generated@@200 $generated@@460)) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) (< 0 ($generated ($generated@@95 $generated@@459 $generated@@461)))) ($generated@@273 $generated@@461 $generated@@460))
 :pattern ( ($generated@@95 $generated@@459 $generated@@461))
))))
 :pattern ( ($generated@@76 $generated@@459 ($generated@@200 $generated@@460)))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@93 (type $generated@@462))))
 (=> (and (= (type $generated@@462) ($generated@@90 $generated@@464 $generated@@2)) (= (type $generated@@463) ($generated@@90 $generated@@464 $generated@@2))) (= ($generated@@149 $generated@@462 $generated@@463) (forall (($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@464) (= ($generated ($generated@@95 $generated@@462 $generated@@465)) ($generated ($generated@@95 $generated@@463 $generated@@465))))
 :pattern ( ($generated@@95 $generated@@462 $generated@@465))
 :pattern ( ($generated@@95 $generated@@463 $generated@@465))
)))))
 :pattern ( ($generated@@149 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@79) ($generated@@262 $generated@@466)) (or ($generated@@261 $generated@@466) ($generated@@328 $generated@@466)))
 :pattern ( ($generated@@262 $generated@@466))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@467) $generated@@156) (= (type $generated@@468) $generated@@79)) (or ($generated@@323 $generated@@468) (and (not (= 1 $generated@@146)) ($generated@@76 $generated@@468 $generated@@78)))) (and (=> (not ($generated@@261 $generated@@468)) (let (($generated@@469 ($generated@@175 $generated@@468)))
(let (($generated@@470 ($generated@@170 $generated@@468)))
 (and ($generated@@323 $generated@@470) ($generated@@323 $generated@@469))))) (= ($generated@@150 ($generated@@151 $generated@@467) $generated@@468) (ite ($generated@@261 $generated@@468) ($generated@@153 $generated@@154) (let (($generated@@471 ($generated@@175 $generated@@468)))
(let (($generated@@472 ($generated@@170 $generated@@468)))
(let (($generated@@473 ($generated@@155 $generated@@468)))
($generated@@282 ($generated@@282 ($generated@@347 ($generated@@153 $generated@@154) ($generated@@362 ($generated@@8 $generated@@473))) ($generated@@150 $generated@@467 $generated@@472)) ($generated@@150 $generated@@467 $generated@@471)))))))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@467) $generated@@468))
))))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@475) $generated@@68)) (= (type $generated@@476) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@474 ($generated@@295 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@154) ($generated@@0 ($generated@@95 $generated@@474 $generated@@477))) ($generated@@317 $generated@@477 $generated@@475 $generated@@476))
 :pattern ( ($generated@@95 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@88 $generated@@474 ($generated@@295 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@90 $generated@@154 $generated@@4)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@478 ($generated@@300 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) ($generated@@0 ($generated@@95 $generated@@478 $generated@@481))) ($generated@@317 $generated@@481 $generated@@479 $generated@@480))
 :pattern ( ($generated@@95 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@88 $generated@@478 ($generated@@300 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated ($generated@@95 ($generated@@153 $generated@@483) $generated@@482)) 0))
 :pattern ( (let (($generated@@483 (type $generated@@482)))
($generated@@95 ($generated@@153 $generated@@483) $generated@@482)))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) ($generated@@90 $generated@@154 $generated@@4))
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@384 (type $generated@@487))))
(let (($generated@@489 ($generated@@383 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487)) ($generated@@90 $generated@@489 $generated@@488))))
 :pattern ( ($generated@@485 $generated@@487))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@491) $generated@@154)) (= ($generated@@0 ($generated@@95 ($generated@@484 $generated@@490) $generated@@491))  (and ($generated@@0 ($generated@@95 ($generated@@380 $generated@@490) ($generated@@193 ($generated@@422 $generated@@79 $generated@@491)))) (= ($generated@@95 ($generated@@485 $generated@@490) ($generated@@193 ($generated@@422 $generated@@79 $generated@@491))) ($generated@@194 ($generated@@422 $generated@@79 $generated@@491))))))
 :pattern ( ($generated@@95 ($generated@@484 $generated@@490) $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) ($generated@@90 $generated@@154 $generated@@4))
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@402 (type $generated@@495))))
(let (($generated@@497 ($generated@@401 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495)) ($generated@@90 $generated@@497 $generated@@496))))
 :pattern ( ($generated@@493 $generated@@495))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@499) $generated@@154)) (= ($generated@@0 ($generated@@95 ($generated@@492 $generated@@498) $generated@@499))  (and ($generated@@0 ($generated@@95 ($generated@@398 $generated@@498) ($generated@@193 ($generated@@422 $generated@@79 $generated@@499)))) (= ($generated@@95 ($generated@@493 $generated@@498) ($generated@@193 ($generated@@422 $generated@@79 $generated@@499))) ($generated@@194 ($generated@@422 $generated@@79 $generated@@499))))))
 :pattern ( ($generated@@95 ($generated@@492 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(let (($generated@@503 ($generated@@383 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@382 $generated@@503 $generated@@502)) (= ($generated@@0 ($generated@@95 ($generated@@437 $generated@@500) $generated@@501)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) (and ($generated@@0 ($generated@@95 ($generated@@380 $generated@@500) $generated@@504)) (= $generated@@501 ($generated@@95 ($generated@@485 $generated@@500) $generated@@504))))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@500) $generated@@504))
 :pattern ( ($generated@@95 ($generated@@485 $generated@@500) $generated@@504))
))))))
 :pattern ( ($generated@@95 ($generated@@437 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 ($generated@@401 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@400 $generated@@508 $generated@@507)) (= ($generated@@0 ($generated@@95 ($generated@@448 $generated@@505) $generated@@506)) (exists (($generated@@509 T@U) ) (!  (and (= (type $generated@@509) $generated@@508) (and ($generated@@0 ($generated@@95 ($generated@@398 $generated@@505) $generated@@509)) (= $generated@@506 ($generated@@95 ($generated@@493 $generated@@505) $generated@@509))))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@505) $generated@@509))
 :pattern ( ($generated@@95 ($generated@@493 $generated@@505) $generated@@509))
))))))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@514) $generated@@68)) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@380 $generated@@513) $generated@@517))) (and ($generated@@317 ($generated@@95 ($generated@@485 $generated@@513) $generated@@517) $generated@@515 $generated@@516) ($generated@@317 $generated@@517 $generated@@514 $generated@@516)))
 :pattern ( ($generated@@95 ($generated@@485 $generated@@513) $generated@@517))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@513) $generated@@517))
))))
 :pattern ( ($generated@@88 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@398 $generated@@521) $generated@@525))) (and ($generated@@317 ($generated@@95 ($generated@@493 $generated@@521) $generated@@525) $generated@@523 $generated@@524) ($generated@@317 $generated@@525 $generated@@522 $generated@@524)))
 :pattern ( ($generated@@95 ($generated@@493 $generated@@521) $generated@@525))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@521) $generated@@525))
))))
 :pattern ( ($generated@@88 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@156)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@156) (= (type $generated@@529) $generated@@79)) (= ($generated@@181 $generated@@528 $generated@@529) ($generated@@181 $generated@@152 $generated@@529)))
 :pattern ( ($generated@@181 ($generated@@526 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@93 (type $generated@@530))))
 (=> (and (and (= (type $generated@@530) ($generated@@90 $generated@@532 $generated@@2)) (= (type $generated@@531) ($generated@@90 $generated@@532 $generated@@2))) ($generated@@149 $generated@@530 $generated@@531)) (= $generated@@530 $generated@@531)))
 :pattern ( ($generated@@149 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@79) ($generated@@76 $generated@@533 $generated@@78)) (or ($generated@@261 $generated@@533) ($generated@@328 $generated@@533)))
 :pattern ( ($generated@@328 $generated@@533) ($generated@@76 $generated@@533 $generated@@78))
 :pattern ( ($generated@@261 $generated@@533) ($generated@@76 $generated@@533 $generated@@78))
)))
(assert (forall (($generated@@535 T@T) ) (! (= (type ($generated@@534 $generated@@535)) ($generated@@90 $generated@@535 $generated@@4))
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@402 (type $generated@@536))))
(let (($generated@@538 ($generated@@401 (type $generated@@536))))
 (=> (= (type $generated@@536) ($generated@@400 $generated@@538 $generated@@537)) (= (= $generated@@536 ($generated@@399 $generated@@538 $generated@@537)) (= ($generated@@398 $generated@@536) ($generated@@534 $generated@@538))))))
 :pattern ( ($generated@@398 $generated@@536))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@402 (type $generated@@539))))
(let (($generated@@541 ($generated@@401 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@400 $generated@@541 $generated@@540)) (= (= $generated@@539 ($generated@@399 $generated@@541 $generated@@540)) (= ($generated@@448 $generated@@539) ($generated@@534 $generated@@540))))))
 :pattern ( ($generated@@448 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@402 (type $generated@@542))))
(let (($generated@@544 ($generated@@401 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@400 $generated@@544 $generated@@543)) (= (= $generated@@542 ($generated@@399 $generated@@544 $generated@@543)) (= ($generated@@492 $generated@@542) ($generated@@534 $generated@@154))))))
 :pattern ( ($generated@@492 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@384 (type $generated@@545))))
(let (($generated@@547 ($generated@@383 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@382 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@381 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@154)) ($generated@@0 ($generated@@95 ($generated@@484 $generated@@545) ($generated@@362 ($generated@@272 $generated@@548 $generated@@549)))))
 :no-pattern (type $generated@@548)
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))))))
 :pattern ( ($generated@@484 $generated@@545))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@402 (type $generated@@550))))
(let (($generated@@552 ($generated@@401 (type $generated@@550))))
 (=> (= (type $generated@@550) ($generated@@400 $generated@@552 $generated@@551)) (or (= $generated@@550 ($generated@@399 $generated@@552 $generated@@551)) (exists (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (and (and (= (type $generated@@553) $generated@@154) (= (type $generated@@554) $generated@@154)) ($generated@@0 ($generated@@95 ($generated@@492 $generated@@550) ($generated@@362 ($generated@@272 $generated@@553 $generated@@554)))))
 :no-pattern (type $generated@@553)
 :no-pattern (type $generated@@554)
 :no-pattern ($generated $generated@@553)
 :no-pattern ($generated@@0 $generated@@553)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
))))))
 :pattern ( ($generated@@492 $generated@@550))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@154) ($generated@@273 $generated@@555 $generated@@46)) (and (= ($generated@@362 ($generated@@422 $generated@@2 $generated@@555)) $generated@@555) ($generated@@76 ($generated@@422 $generated@@2 $generated@@555) $generated@@46)))
 :pattern ( ($generated@@273 $generated@@555 $generated@@46))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@154) ($generated@@273 $generated@@556 $generated@@47)) (and (= ($generated@@362 ($generated@@422 $generated@@3 $generated@@556)) $generated@@556) ($generated@@76 ($generated@@422 $generated@@3 $generated@@556) $generated@@47)))
 :pattern ( ($generated@@273 $generated@@556 $generated@@47))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) ($generated@@273 $generated@@557 $generated@@44)) (and (= ($generated@@362 ($generated@@422 $generated@@4 $generated@@557)) $generated@@557) ($generated@@76 ($generated@@422 $generated@@4 $generated@@557) $generated@@44)))
 :pattern ( ($generated@@273 $generated@@557 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@558) 21))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) ($generated@@273 $generated@@559 $generated@@45)) (and (= ($generated@@362 ($generated@@422 $generated@@558 $generated@@559)) $generated@@559) ($generated@@76 ($generated@@422 $generated@@558 $generated@@559) $generated@@45)))
 :pattern ( ($generated@@273 $generated@@559 $generated@@45))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (= (type $generated@@561) $generated@@79)) (= ($generated@@181 ($generated@@151 $generated@@560) $generated@@561) ($generated@@181 $generated@@560 $generated@@561)))
 :pattern ( ($generated@@181 ($generated@@151 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@273 ($generated@@362 $generated@@562) $generated@@563) ($generated@@76 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@273 ($generated@@362 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@93 (type $generated@@564))))
 (=> (= (type $generated@@564) ($generated@@90 $generated@@565 $generated@@2)) (<= 0 ($generated@@346 $generated@@564))))
 :pattern ( ($generated@@346 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@340 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@339 $generated@@567)) (<= 0 ($generated@@338 $generated@@566))))
 :pattern ( ($generated@@338 $generated@@566))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (= ($generated@@568 ($generated@@510 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@510 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (= ($generated@@572 ($generated@@510 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@510 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@68) (= (type $generated@@577) $generated@@68)) (= ($generated@@86 ($generated@@510 $generated@@576 $generated@@577)) $generated@@58))
 :pattern ( ($generated@@510 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= ($generated@@578 ($generated@@518 $generated@@580 $generated@@581)) $generated@@580))
 :pattern ( ($generated@@518 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@68)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@68) (= (type $generated@@585) $generated@@68)) (= ($generated@@582 ($generated@@518 $generated@@584 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@518 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@68) (= (type $generated@@587) $generated@@68)) (= ($generated@@86 ($generated@@518 $generated@@586 $generated@@587)) $generated@@59))
 :pattern ( ($generated@@518 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@154) (= (type $generated@@589) $generated@@154)) (= ($generated@@162 ($generated@@272 $generated@@588 $generated@@589)) $generated@@61))
 :pattern ( ($generated@@272 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ) (! (= (type ($generated@@590 $generated@@591)) $generated@@68)
 :pattern ( ($generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= ($generated@@590 ($generated@@186 $generated@@592 $generated@@593)) $generated@@592))
 :pattern ( ($generated@@186 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@68)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@68) (= (type $generated@@597) $generated@@68)) (= ($generated@@594 ($generated@@186 $generated@@596 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@186 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@154) (= (type $generated@@599) $generated@@154)) (= ($generated@@193 ($generated@@272 $generated@@598 $generated@@599)) $generated@@598))
 :pattern ( ($generated@@272 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@154) (= (type $generated@@601) $generated@@154)) (= ($generated@@194 ($generated@@272 $generated@@600 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@272 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@156) (= (type $generated@@603) $generated@@79)) (= ($generated@@150 $generated@@602 $generated@@603) ($generated@@150 $generated@@152 $generated@@603)))
 :pattern ( ($generated@@150 ($generated@@526 $generated@@602) $generated@@603))
)))
(assert  (and (forall (($generated@@606 T@U) ) (! (= (type ($generated@@604 $generated@@606)) $generated@@68)
 :pattern ( ($generated@@604 $generated@@606))
)) (forall (($generated@@607 T@U) ($generated@@608 Int) ) (! (let (($generated@@609 ($generated@@340 (type $generated@@607))))
(= (type ($generated@@605 $generated@@607 $generated@@608)) $generated@@609))
 :pattern ( ($generated@@605 $generated@@607 $generated@@608))
))))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@339 $generated@@154)) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@610 ($generated@@604 $generated@@611) $generated@@612) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@338 $generated@@610))) ($generated@@317 ($generated@@605 $generated@@610 $generated@@613) $generated@@611 $generated@@612))
 :pattern ( ($generated@@605 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@88 $generated@@610 ($generated@@604 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@79)) (= ($generated@@77 ($generated@@305 $generated@@614) ($generated@@307 $generated@@615) ($generated@@307 $generated@@616)) ($generated@@307 ($generated@@77 $generated@@614 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@77 ($generated@@305 $generated@@614) ($generated@@307 $generated@@615) ($generated@@307 $generated@@616)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@617 ($generated@@89 $generated@@618)) $generated@@618)
 :pattern ( ($generated@@89 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@68)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@68) (= ($generated@@619 ($generated@@295 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@295 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@68) (= ($generated@@86 ($generated@@295 $generated@@622)) $generated@@54))
 :pattern ( ($generated@@295 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@68)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@68) (= ($generated@@623 ($generated@@300 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@300 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@68) (= ($generated@@86 ($generated@@300 $generated@@626)) $generated@@55))
 :pattern ( ($generated@@300 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@68)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@68) (= ($generated@@627 ($generated@@200 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@200 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@68) (= ($generated@@86 ($generated@@200 $generated@@630)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@68)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@68) (= ($generated@@631 ($generated@@604 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@604 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@68) (= ($generated@@86 ($generated@@604 $generated@@634)) $generated@@57))
 :pattern ( ($generated@@604 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 (type $generated@@635)))
(= ($generated@@422 $generated@@636 ($generated@@362 $generated@@635)) $generated@@635))
 :pattern ( ($generated@@362 $generated@@635))
)))
(assert (forall (($generated@@638 Int) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@79) (= (type $generated@@640) $generated@@79)) (< ($generated@@637 $generated@@639) ($generated@@637 ($generated@@77 $generated@@638 $generated@@639 $generated@@640))))
 :pattern ( ($generated@@77 $generated@@638 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 Int) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@79) (= (type $generated@@643) $generated@@79)) (< ($generated@@637 $generated@@643) ($generated@@637 ($generated@@77 $generated@@641 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@77 $generated@@641 $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) (= ($generated@@76 $generated@@644 ($generated@@510 $generated@@645 $generated@@646)) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@380 $generated@@644) $generated@@647))) (and ($generated@@273 ($generated@@95 ($generated@@485 $generated@@644) $generated@@647) $generated@@646) ($generated@@273 $generated@@647 $generated@@645)))
 :pattern ( ($generated@@95 ($generated@@485 $generated@@644) $generated@@647))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@644) $generated@@647))
))))
 :pattern ( ($generated@@76 $generated@@644 ($generated@@510 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) $generated@@68)) (= ($generated@@76 $generated@@648 ($generated@@518 $generated@@649 $generated@@650)) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@154) ($generated@@0 ($generated@@95 ($generated@@398 $generated@@648) $generated@@651))) (and ($generated@@273 ($generated@@95 ($generated@@493 $generated@@648) $generated@@651) $generated@@650) ($generated@@273 $generated@@651 $generated@@649)))
 :pattern ( ($generated@@95 ($generated@@493 $generated@@648) $generated@@651))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@648) $generated@@651))
))))
 :pattern ( ($generated@@76 $generated@@648 ($generated@@518 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@154) (= (type $generated@@654) $generated@@154)) (< ($generated@@652 $generated@@653) ($generated@@637 ($generated@@272 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@272 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@154) (= (type $generated@@656) $generated@@154)) (< ($generated@@652 $generated@@656) ($generated@@637 ($generated@@272 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@272 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@156) (= (type $generated@@658) $generated@@79)) (= ($generated@@150 ($generated@@151 $generated@@657) $generated@@658) ($generated@@150 $generated@@657 $generated@@658)))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@154) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) $generated@@68)) ($generated@@273 $generated@@659 ($generated@@510 $generated@@660 $generated@@661))) (and (= ($generated@@362 ($generated@@422 ($generated@@382 $generated@@154 $generated@@154) $generated@@659)) $generated@@659) ($generated@@76 ($generated@@422 ($generated@@382 $generated@@154 $generated@@154) $generated@@659) ($generated@@510 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@273 $generated@@659 ($generated@@510 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@154) (= (type $generated@@663) $generated@@68)) (= (type $generated@@664) $generated@@68)) ($generated@@273 $generated@@662 ($generated@@518 $generated@@663 $generated@@664))) (and (= ($generated@@362 ($generated@@422 ($generated@@400 $generated@@154 $generated@@154) $generated@@662)) $generated@@662) ($generated@@76 ($generated@@422 ($generated@@400 $generated@@154 $generated@@154) $generated@@662) ($generated@@518 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@273 $generated@@662 ($generated@@518 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@68) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) $generated@@154)) ($generated@@273 $generated@@667 ($generated@@186 $generated@@665 $generated@@666))) (and (= ($generated@@362 ($generated@@422 $generated@@79 $generated@@667)) $generated@@667) ($generated@@76 ($generated@@422 $generated@@79 $generated@@667) ($generated@@186 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@273 $generated@@667 ($generated@@186 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@668)))
 (not ($generated@@0 ($generated@@95 ($generated@@534 $generated@@669) $generated@@668))))
 :pattern ( (let (($generated@@669 (type $generated@@668)))
($generated@@95 ($generated@@534 $generated@@669) $generated@@668)))
)))
(assert (forall (($generated@@671 T@U) ) (! (= (type ($generated@@670 $generated@@671)) $generated@@73)
 :pattern ( ($generated@@670 $generated@@671))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) $generated@@68) (= (type $generated@@673) $generated@@68)) (and (= ($generated@@86 ($generated@@186 $generated@@672 $generated@@673)) $generated@@62) (= ($generated@@670 ($generated@@186 $generated@@672 $generated@@673)) $generated@@66)))
 :pattern ( ($generated@@186 $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (= (type $generated@@674) $generated@@79) (= (type $generated@@675) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@675) (and ($generated@@328 $generated@@674) ($generated@@88 $generated@@674 $generated@@78 $generated@@675)))) ($generated@@88 ($generated@@8 ($generated@@155 $generated@@674)) $generated@@46 $generated@@675))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@155 $generated@@674)) $generated@@46 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@79) (= ($generated@@652 ($generated@@362 $generated@@676)) ($generated@@637 $generated@@676)))
 :pattern ( ($generated@@652 ($generated@@362 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@154) ($generated@@273 $generated@@677 ($generated@@89 0))) (and (= ($generated@@362 ($generated@@422 $generated@@2 $generated@@677)) $generated@@677) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@677) ($generated@@89 0))))
 :pattern ( ($generated@@273 $generated@@677 ($generated@@89 0)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@154) (= (type $generated@@679) $generated@@68)) ($generated@@273 $generated@@678 ($generated@@295 $generated@@679))) (and (= ($generated@@362 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@678)) $generated@@678) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@678) ($generated@@295 $generated@@679))))
 :pattern ( ($generated@@273 $generated@@678 ($generated@@295 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@154) (= (type $generated@@681) $generated@@68)) ($generated@@273 $generated@@680 ($generated@@300 $generated@@681))) (and (= ($generated@@362 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@680)) $generated@@680) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@4) $generated@@680) ($generated@@300 $generated@@681))))
 :pattern ( ($generated@@273 $generated@@680 ($generated@@300 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@682) $generated@@154) (= (type $generated@@683) $generated@@68)) ($generated@@273 $generated@@682 ($generated@@200 $generated@@683))) (and (= ($generated@@362 ($generated@@422 ($generated@@90 $generated@@154 $generated@@2) $generated@@682)) $generated@@682) ($generated@@76 ($generated@@422 ($generated@@90 $generated@@154 $generated@@2) $generated@@682) ($generated@@200 $generated@@683))))
 :pattern ( ($generated@@273 $generated@@682 ($generated@@200 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@154) (= (type $generated@@685) $generated@@68)) ($generated@@273 $generated@@684 ($generated@@604 $generated@@685))) (and (= ($generated@@362 ($generated@@422 ($generated@@339 $generated@@154) $generated@@684)) $generated@@684) ($generated@@76 ($generated@@422 ($generated@@339 $generated@@154) $generated@@684) ($generated@@604 $generated@@685))))
 :pattern ( ($generated@@273 $generated@@684 ($generated@@604 $generated@@685)))
)))
(assert (= ($generated@@86 $generated@@78) $generated@@64))
(assert (= ($generated@@670 $generated@@78) $generated@@67))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@686) ($generated@@90 $generated@@154 $generated@@2)) (= (type $generated@@687) $generated@@68)) (= (type $generated@@688) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@686 ($generated@@200 $generated@@687) $generated@@688) (forall (($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@154) (< 0 ($generated ($generated@@95 $generated@@686 $generated@@689)))) ($generated@@317 $generated@@689 $generated@@687 $generated@@688))
 :pattern ( ($generated@@95 $generated@@686 $generated@@689))
))))
 :pattern ( ($generated@@88 $generated@@686 ($generated@@200 $generated@@687) $generated@@688))
)))
(assert (= $generated@@199 ($generated@@307 $generated@@199)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) $generated@@79) (= (type $generated@@691) $generated@@68)) (= (type $generated@@692) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@692) (and ($generated@@185 $generated@@690) (exists (($generated@@693 T@U) ) (!  (and (= (type $generated@@693) $generated@@68) ($generated@@88 $generated@@690 ($generated@@186 $generated@@691 $generated@@693) $generated@@692))
 :pattern ( ($generated@@88 $generated@@690 ($generated@@186 $generated@@691 $generated@@693) $generated@@692))
))))) ($generated@@317 ($generated@@193 $generated@@690) $generated@@691 $generated@@692))
 :pattern ( ($generated@@317 ($generated@@193 $generated@@690) $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (and (= (type $generated@@694) $generated@@79) (= (type $generated@@695) $generated@@68)) (= (type $generated@@696) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@696) (and ($generated@@185 $generated@@694) (exists (($generated@@697 T@U) ) (!  (and (= (type $generated@@697) $generated@@68) ($generated@@88 $generated@@694 ($generated@@186 $generated@@697 $generated@@695) $generated@@696))
 :pattern ( ($generated@@88 $generated@@694 ($generated@@186 $generated@@697 $generated@@695) $generated@@696))
))))) ($generated@@317 ($generated@@194 $generated@@694) $generated@@695 $generated@@696))
 :pattern ( ($generated@@317 ($generated@@194 $generated@@694) $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (! (let (($generated@@701 (type $generated@@699)))
 (=> (and (and (= (type $generated@@698) ($generated@@90 $generated@@701 $generated@@2)) (= (type $generated@@700) $generated@@701)) (not (= $generated@@699 $generated@@700))) (= ($generated ($generated@@95 $generated@@698 $generated@@700)) ($generated ($generated@@95 ($generated@@347 $generated@@698 $generated@@699) $generated@@700)))))
 :pattern ( ($generated@@347 $generated@@698 $generated@@699) ($generated@@95 $generated@@698 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@702) $generated@@79) (= (type $generated@@703) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@703) (and ($generated@@328 $generated@@702) ($generated@@88 $generated@@702 $generated@@78 $generated@@703)))) ($generated@@88 ($generated@@170 $generated@@702) $generated@@78 $generated@@703))
 :pattern ( ($generated@@88 ($generated@@170 $generated@@702) $generated@@78 $generated@@703))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (and (and (= (type $generated@@704) $generated@@79) (= (type $generated@@705) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@280 $generated@@705) (and ($generated@@328 $generated@@704) ($generated@@88 $generated@@704 $generated@@78 $generated@@705)))) ($generated@@88 ($generated@@175 $generated@@704) $generated@@78 $generated@@705))
 :pattern ( ($generated@@88 ($generated@@175 $generated@@704) $generated@@78 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@154) (= (type $generated@@707) $generated@@154)) (= ($generated@@272 ($generated@@307 $generated@@706) ($generated@@307 $generated@@707)) ($generated@@307 ($generated@@272 $generated@@706 $generated@@707))))
 :pattern ( ($generated@@272 ($generated@@307 $generated@@706) ($generated@@307 $generated@@707)))
)))
(assert (forall (($generated@@708 Int) ) (! (= ($generated@@362 ($generated@@8 ($generated@@305 $generated@@708))) ($generated@@307 ($generated@@362 ($generated@@8 $generated@@708))))
 :pattern ( ($generated@@362 ($generated@@8 ($generated@@305 $generated@@708))))
)))
(assert (forall (($generated@@709 T@U) ) (! (= ($generated@@362 ($generated@@307 $generated@@709)) ($generated@@307 ($generated@@362 $generated@@709)))
 :pattern ( ($generated@@362 ($generated@@307 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ) (! (let (($generated@@711 ($generated@@340 (type $generated@@710))))
 (=> (and (= (type $generated@@710) ($generated@@339 $generated@@711)) (= ($generated@@338 $generated@@710) 0)) (= $generated@@710 ($generated@@337 $generated@@711))))
 :pattern ( ($generated@@338 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ($generated@@714 T@U) ) (! (let (($generated@@715 (type $generated@@713)))
 (=> (and (and (= (type $generated@@712) ($generated@@90 $generated@@715 $generated@@2)) (= (type $generated@@714) $generated@@2)) (<= 0 ($generated $generated@@714))) (= ($generated@@346 ($generated@@96 $generated@@712 $generated@@713 $generated@@714)) (+ (- ($generated@@346 $generated@@712) ($generated ($generated@@95 $generated@@712 $generated@@713))) ($generated $generated@@714)))))
 :pattern ( ($generated@@346 ($generated@@96 $generated@@712 $generated@@713 $generated@@714)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@717) $generated@@2)) ($generated@@88 $generated@@717 $generated@@46 $generated@@716))
 :pattern ( ($generated@@88 $generated@@717 $generated@@46 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@719) $generated@@3)) ($generated@@88 $generated@@719 $generated@@47 $generated@@718))
 :pattern ( ($generated@@88 $generated@@719 $generated@@47 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@721) $generated@@4)) ($generated@@88 $generated@@721 $generated@@44 $generated@@720))
 :pattern ( ($generated@@88 $generated@@721 $generated@@44 $generated@@720))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@723) $generated@@558)) ($generated@@88 $generated@@723 $generated@@45 $generated@@722))
 :pattern ( ($generated@@88 $generated@@723 $generated@@45 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@725) $generated@@154)) ($generated@@88 $generated@@725 $generated@@48 $generated@@724))
 :pattern ( ($generated@@88 $generated@@725 $generated@@48 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) ($generated@@339 $generated@@154)) (= (type $generated@@727) $generated@@68)) (= ($generated@@76 $generated@@726 ($generated@@604 $generated@@727)) (forall (($generated@@728 Int) ) (!  (=> (and (<= 0 $generated@@728) (< $generated@@728 ($generated@@338 $generated@@726))) ($generated@@273 ($generated@@605 $generated@@726 $generated@@728) $generated@@727))
 :pattern ( ($generated@@605 $generated@@726 $generated@@728))
))))
 :pattern ( ($generated@@76 $generated@@726 ($generated@@604 $generated@@727)))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 Int) ) (!  (=> (= (type $generated@@730) ($generated@@339 $generated@@154)) (=> (and (<= 0 $generated@@731) (< $generated@@731 ($generated@@338 $generated@@730))) (< ($generated@@637 ($generated@@422 $generated@@79 ($generated@@605 $generated@@730 $generated@@731))) ($generated@@729 $generated@@730))))
 :pattern ( ($generated@@637 ($generated@@422 $generated@@79 ($generated@@605 $generated@@730 $generated@@731))))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (and (= (type $generated@@732) ($generated@@382 $generated@@154 $generated@@154)) (= (type $generated@@733) $generated@@68)) (= (type $generated@@734) $generated@@68)) ($generated@@76 $generated@@732 ($generated@@510 $generated@@733 $generated@@734))) (and (and ($generated@@76 ($generated@@380 $generated@@732) ($generated@@295 $generated@@733)) ($generated@@76 ($generated@@437 $generated@@732) ($generated@@295 $generated@@734))) ($generated@@76 ($generated@@484 $generated@@732) ($generated@@295 ($generated@@186 $generated@@733 $generated@@734)))))
 :pattern ( ($generated@@76 $generated@@732 ($generated@@510 $generated@@733 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (and (and (= (type $generated@@735) ($generated@@400 $generated@@154 $generated@@154)) (= (type $generated@@736) $generated@@68)) (= (type $generated@@737) $generated@@68)) ($generated@@76 $generated@@735 ($generated@@518 $generated@@736 $generated@@737))) (and (and ($generated@@76 ($generated@@398 $generated@@735) ($generated@@300 $generated@@736)) ($generated@@76 ($generated@@448 $generated@@735) ($generated@@300 $generated@@737))) ($generated@@76 ($generated@@492 $generated@@735) ($generated@@300 ($generated@@186 $generated@@736 $generated@@737)))))
 :pattern ( ($generated@@76 $generated@@735 ($generated@@518 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ) (!  (=> (= (type $generated@@738) $generated@@2) ($generated@@76 $generated@@738 $generated@@46))
 :pattern ( ($generated@@76 $generated@@738 $generated@@46))
)))
(assert (forall (($generated@@739 T@U) ) (!  (=> (= (type $generated@@739) $generated@@3) ($generated@@76 $generated@@739 $generated@@47))
 :pattern ( ($generated@@76 $generated@@739 $generated@@47))
)))
(assert (forall (($generated@@740 T@U) ) (!  (=> (= (type $generated@@740) $generated@@4) ($generated@@76 $generated@@740 $generated@@44))
 :pattern ( ($generated@@76 $generated@@740 $generated@@44))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@558) ($generated@@76 $generated@@741 $generated@@45))
 :pattern ( ($generated@@76 $generated@@741 $generated@@45))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@154) ($generated@@76 $generated@@742 $generated@@48))
 :pattern ( ($generated@@76 $generated@@742 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@743) ($generated@@207 $generated@@91 $generated@@4)) (= (type $generated@@744) $generated@@91)) (= (type $generated@@745) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@746) $generated@@79)) (= (type $generated@@747) ($generated@@90 $generated@@91 $generated@@92))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@749  (=> (and (= $generated@@743 ($generated@@206 $generated@@744 $generated@@745 $generated@@60 false)) ($generated@@262 $generated@@746)) (=> (and (and ($generated@@280 $generated@@747) ($generated@@748 $generated@@747)) (and (= $generated@@745 $generated@@747) (forall (($generated@@750 T@U) ) (!  (=> (= (type $generated@@750) $generated@@79) (=> (and (and ($generated@@76 $generated@@750 $generated@@78) (and ($generated@@181 ($generated@@151 $generated@@152) $generated@@750) (not ($generated@@149 ($generated@@150 ($generated@@151 $generated@@152) $generated@@750) ($generated@@153 $generated@@154))))) (< ($generated@@637 $generated@@750) ($generated@@637 $generated@@746))) (let (($generated@@751 ($generated@@147 $generated@@750)))
 (and (> ($generated ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@750) ($generated@@362 ($generated@@8 $generated@@751)))) 0) (forall (($generated@@752 T@U) ) (!  (=> (and (and (= (type $generated@@752) $generated@@2) true) (> ($generated ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@750) ($generated@@362 $generated@@752))) 0)) (<= $generated@@751 ($generated $generated@@752)))
 :pattern ( ($generated@@95 ($generated@@150 ($generated@@151 $generated@@152) $generated@@750) ($generated@@362 $generated@@752)))
))))))
 :no-pattern (type $generated@@750)
 :no-pattern ($generated $generated@@750)
 :no-pattern ($generated@@0 $generated@@750)
)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@753 ($generated@@147 $generated@@746)))
(> ($generated ($generated@@95 ($generated@@150 ($generated@@151 ($generated@@151 $generated@@152)) $generated@@746) ($generated@@362 ($generated@@8 $generated@@753)))) 0))) (=> (let (($generated@@754 ($generated@@147 $generated@@746)))
(> ($generated ($generated@@95 ($generated@@150 ($generated@@151 ($generated@@151 $generated@@152)) $generated@@746) ($generated@@362 ($generated@@8 $generated@@754)))) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@755 ($generated@@147 $generated@@746)))
(forall (($generated@@756 Int) ) (!  (=> true (=> (> ($generated ($generated@@95 ($generated@@150 ($generated@@151 ($generated@@151 $generated@@152)) $generated@@746) ($generated@@362 ($generated@@8 $generated@@756)))) 0) (<= $generated@@755 $generated@@756)))
 :pattern ( ($generated@@95 ($generated@@150 ($generated@@151 ($generated@@151 $generated@@152)) $generated@@746) ($generated@@362 ($generated@@8 $generated@@756))))
))))))))))
(let (($generated@@757  (=> (and ($generated@@280 $generated@@745) ($generated@@748 $generated@@745)) (=> (and (and (and (and ($generated@@76 $generated@@746 $generated@@78) ($generated@@88 $generated@@746 $generated@@78 $generated@@745)) ($generated@@262 $generated@@746)) (= 3 $generated@@146)) (and (and ($generated@@182 $generated@@746) (and ($generated@@181 ($generated@@151 $generated@@152) $generated@@746) (ite ($generated@@261 $generated@@746) true (let (($generated@@758 ($generated@@175 $generated@@746)))
(let (($generated@@759 ($generated@@170 $generated@@746)))
(let (($generated@@760 ($generated@@155 $generated@@746)))
 (and (and (and ($generated@@181 ($generated@@151 $generated@@152) $generated@@759) ($generated@@181 ($generated@@151 $generated@@152) $generated@@758)) (or ($generated@@263 $generated@@759 $generated@@199) (<= $generated@@760 ($generated@@155 $generated@@759)))) (or ($generated@@263 $generated@@758 $generated@@199) (<= $generated@@760 ($generated@@155 $generated@@758)))))))))) (and (not ($generated@@149 ($generated@@150 ($generated@@151 ($generated@@151 $generated@@152)) $generated@@746) ($generated@@153 $generated@@154))) (= (ControlFlow 0 4) 2)))) $generated@@749))))
$generated@@757)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (Int) T@U)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (Int) Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@311 (T@U T@U T@U) Bool)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@318 (T@U) Bool)
(declare-fun $generated@@325 (T@U) Bool)
(declare-fun $generated@@334 (T@T) T@U)
(declare-fun $generated@@335 (T@U) Int)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@U T@U) T@U)
(declare-fun $generated@@359 (T@T) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@T T@T) T@U)
(declare-fun $generated@@380 (T@T T@T) T@T)
(declare-fun $generated@@381 (T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@T) T@U)
(declare-fun $generated@@398 (T@T T@T) T@T)
(declare-fun $generated@@399 (T@T) T@T)
(declare-fun $generated@@400 (T@T) T@T)
(declare-fun $generated@@420 (T@T T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@505 (T@U T@U) T@U)
(declare-fun $generated@@513 (T@U T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@522 () T@U)
(declare-fun $generated@@527 (T@T) T@U)
(declare-fun $generated@@551 () T@T)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@598 (T@U Int) T@U)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@630 (T@U) Int)
(declare-fun $generated@@645 (T@U) Int)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@723 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert  (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@82 Int) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@79 $generated@@82 $generated@@83 $generated@@84)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84))
))) (= (type $generated@@80) $generated@@70)))
(assert (forall (($generated@@85 Int) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (= (type $generated@@86) $generated@@81) (= (type $generated@@87) $generated@@81)) (= ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80)  (and (and ($generated@@78 ($generated@@8 $generated@@85) $generated@@46) ($generated@@78 $generated@@86 $generated@@80)) ($generated@@78 $generated@@87 $generated@@80))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@85 $generated@@86 $generated@@87) $generated@@80))
)))
(assert (forall (($generated@@89 T@U) ) (! (= (type ($generated@@88 $generated@@89)) $generated@@71)
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (= ($generated@@88 $generated@@44) $generated@@49))
(assert (= ($generated@@88 $generated@@45) $generated@@50))
(assert (= ($generated@@88 $generated@@46) $generated@@51))
(assert (= ($generated@@88 $generated@@47) $generated@@52))
(assert (= ($generated@@88 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (= ($generated@@1 ($generated@@92 $generated@@101 $generated@@102)) 12)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@92 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@105 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@92 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@96 (type $generated@@107))))
(= (type ($generated@@97 $generated@@107 $generated@@108)) $generated@@109))
 :pattern ( ($generated@@97 $generated@@107 $generated@@108))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 (type $generated@@112)))
(let (($generated@@114 (type $generated@@111)))
(= (type ($generated@@98 $generated@@110 $generated@@111 $generated@@112)) ($generated@@92 $generated@@114 $generated@@113))))
 :pattern ( ($generated@@98 $generated@@110 $generated@@111 $generated@@112))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@96 (type $generated@@115))))
 (=> (= (type $generated@@117) $generated@@118) (= ($generated@@97 ($generated@@98 $generated@@115 $generated@@116 $generated@@117) $generated@@116) $generated@@117)))
 :weight 0
))) (and (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@97 ($generated@@98 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@97 $generated@@120 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@97 $generated@@124 $generated@@126)))
 :weight 0
)))) (= ($generated@@1 $generated@@93) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@128))))
(= (type ($generated@@99 $generated@@127 $generated@@128)) $generated@@129))
 :pattern ( ($generated@@99 $generated@@127 $generated@@128))
))) (= ($generated@@1 $generated@@94) 14)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= (type ($generated@@100 $generated@@130 $generated@@131 $generated@@132)) $generated@@94)
 :pattern ( ($generated@@100 $generated@@130 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@73 (type $generated@@134))))
 (=> (= (type $generated@@135) $generated@@136) (= ($generated@@99 ($generated@@100 $generated@@133 $generated@@134 $generated@@135) $generated@@134) $generated@@135)))
 :weight 0
))) (and (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 ($generated@@100 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@138 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@99 $generated@@142 $generated@@144)))
 :weight 0
)))) (forall (($generated@@145 Int) ) (! (= (type ($generated@@91 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@91 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@2) (= (type $generated@@147) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
 :pattern ( ($generated@@90 $generated@@146 ($generated@@91 0) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@74)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@81) (= (type $generated@@152) $generated@@81)) (= ($generated@@148 ($generated@@79 $generated@@150 $generated@@151 $generated@@152)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 Int) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@81) (= (type $generated@@156) $generated@@81)) (= ($generated@@153 ($generated@@79 $generated@@154 $generated@@155 $generated@@156)) $generated@@154))
 :pattern ( ($generated@@79 $generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@81)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) (= ($generated@@157 ($generated@@79 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))
 :pattern ( ($generated@@79 $generated@@159 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@81)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 Int) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@81) (= (type $generated@@166) $generated@@81)) (= ($generated@@162 ($generated@@79 $generated@@164 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@79 $generated@@164 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@78 $generated@@167 ($generated@@91 0)))
 :pattern ( ($generated@@78 $generated@@167 ($generated@@91 0)))
)))
(assert (= ($generated@@1 $generated@@170) 15))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@170) (= (type $generated@@173) $generated@@81)) (or ($generated@@171 $generated@@173) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@173 $generated@@80)))) true)
 :pattern ( ($generated@@169 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@70) (= (type $generated@@179) $generated@@70)) (= (type $generated@@180) $generated@@81)) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@78 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (and (= ($generated@@1 $generated@@184) 16) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@182 $generated@@185))
))) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@183 $generated@@186)) $generated@@184)
 :pattern ( ($generated@@183 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@81) (= (type $generated@@188) $generated@@81)) true) (= ($generated@@181 $generated@@187 $generated@@188)  (and (= ($generated@@182 $generated@@187) ($generated@@182 $generated@@188)) (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)))))
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
)))
(assert (= (type $generated@@189) $generated@@81))
(assert (= ($generated@@148 $generated@@189) $generated@@63))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@70)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@194) $generated@@70)) ($generated@@78 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@78 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@93 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@73 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@93) (= (type $generated@@245) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@246) ($generated@@72 $generated@@4))) (= (type $generated@@248) $generated@@93)) (= (type $generated@@249) ($generated@@72 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@99 ($generated@@97 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (= (type $generated@@251) $generated@@70))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@81) (= (type $generated@@253) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@252 $generated@@251 $generated@@253) ($generated@@90 $generated@@252 $generated@@80 $generated@@253)))
 :pattern ( ($generated@@90 $generated@@252 $generated@@251 $generated@@253))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@254 $generated@@258)) $generated@@170)
 :pattern ( ($generated@@254 $generated@@258))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@170) (= (type $generated@@260) $generated@@81)) (or ($generated@@171 $generated@@260) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@260 $generated@@80)))) (and (=> (not ($generated@@255 $generated@@260)) (let (($generated@@261 ($generated@@162 $generated@@260)))
(let (($generated@@262 ($generated@@157 $generated@@260)))
(let (($generated@@263 ($generated@@153 $generated@@260)))
 (and ($generated@@171 $generated@@262) (=> ($generated@@169 $generated@@259 $generated@@262) (and ($generated@@171 $generated@@261) (=> ($generated@@169 $generated@@259 $generated@@261) (and ($generated@@256 $generated@@262) (=> (or ($generated@@257 $generated@@262 $generated@@189) (<= $generated@@263 ($generated@@153 $generated@@262))) ($generated@@256 $generated@@261))))))))))) (= ($generated@@169 ($generated@@254 $generated@@259) $generated@@260) (ite ($generated@@255 $generated@@260) true (let (($generated@@264 ($generated@@162 $generated@@260)))
(let (($generated@@265 ($generated@@157 $generated@@260)))
(let (($generated@@266 ($generated@@153 $generated@@260)))
 (and (and (and ($generated@@169 $generated@@259 $generated@@265) ($generated@@169 $generated@@259 $generated@@264)) (or ($generated@@257 $generated@@265 $generated@@189) (<= $generated@@266 ($generated@@153 $generated@@265)))) (or ($generated@@257 $generated@@264 $generated@@189) (<= $generated@@266 ($generated@@153 $generated@@264)))))))))))
 :pattern ( ($generated@@169 ($generated@@254 $generated@@259) $generated@@260))
))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@81)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@70) (= (type $generated@@272) $generated@@70)) (= (type $generated@@273) $generated@@184)) (= (type $generated@@274) $generated@@184)) (= ($generated@@78 ($generated@@267 $generated@@273 $generated@@274) ($generated@@175 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@267 $generated@@273 $generated@@274) ($generated@@175 $generated@@271 $generated@@272)))
)))
(assert ($generated@@78 $generated@@189 $generated@@80))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@92 $generated@@93 $generated@@94)) ($generated@@275 $generated@@276)) ($generated@@90 $generated@@189 $generated@@80 $generated@@276))
 :pattern ( ($generated@@90 $generated@@189 $generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@95 (type $generated@@278))))
(= (type ($generated@@277 $generated@@278 $generated@@279)) ($generated@@92 $generated@@280 $generated@@2)))
 :pattern ( ($generated@@277 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
 (=> (and (= (type $generated@@281) ($generated@@92 $generated@@284 $generated@@2)) (= (type $generated@@282) ($generated@@92 $generated@@284 $generated@@2))) (= ($generated ($generated@@97 ($generated@@277 $generated@@281 $generated@@282) $generated@@283)) (+ ($generated ($generated@@97 $generated@@281 $generated@@283)) ($generated ($generated@@97 $generated@@282 $generated@@283))))))
 :pattern ( ($generated@@97 ($generated@@277 $generated@@281 $generated@@282) $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@81) (= (type $generated@@286) $generated@@81)) (= ($generated@@181 $generated@@285 $generated@@286) (= $generated@@285 $generated@@286)))
 :pattern ( ($generated@@181 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@81) (= (type $generated@@288) $generated@@81)) (= ($generated@@257 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@257 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@292) $generated@@70)) (= ($generated@@78 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@184) ($generated@@0 ($generated@@97 $generated@@291 $generated@@293))) ($generated@@268 $generated@@293 $generated@@292))
 :pattern ( ($generated@@97 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@78 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@70)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@297) $generated@@70)) (= ($generated@@78 $generated@@296 ($generated@@294 $generated@@297)) (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@184) ($generated@@0 ($generated@@97 $generated@@296 $generated@@298))) ($generated@@268 $generated@@298 $generated@@297))
 :pattern ( ($generated@@97 $generated@@296 $generated@@298))
))))
 :pattern ( ($generated@@78 $generated@@296 ($generated@@294 $generated@@297)))
)))
(assert (forall (($generated@@300 Int) ) (! (= ($generated@@299 $generated@@300) $generated@@300)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 (type $generated@@302)))
(= (type ($generated@@301 $generated@@302)) $generated@@303))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@304 T@U) ) (! (= ($generated@@301 $generated@@304) $generated@@304)
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (= (type $generated@@305) $generated@@81) (= (type $generated@@306) $generated@@81)) (and ($generated@@255 $generated@@305) ($generated@@255 $generated@@306))) (= ($generated@@257 $generated@@305 $generated@@306) true))
 :pattern ( ($generated@@257 $generated@@305 $generated@@306) ($generated@@255 $generated@@305))
 :pattern ( ($generated@@257 $generated@@305 $generated@@306) ($generated@@255 $generated@@306))
)))
(assert (forall (($generated@@307 Int) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (= (type $generated@@308) $generated@@81) (= (type $generated@@309) $generated@@81)) (= (type $generated@@310) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@275 $generated@@310)) (= ($generated@@90 ($generated@@79 $generated@@307 $generated@@308 $generated@@309) $generated@@80 $generated@@310)  (and (and ($generated@@90 ($generated@@8 $generated@@307) $generated@@46 $generated@@310) ($generated@@90 $generated@@308 $generated@@80 $generated@@310)) ($generated@@90 $generated@@309 $generated@@80 $generated@@310))))
 :pattern ( ($generated@@90 ($generated@@79 $generated@@307 $generated@@308 $generated@@309) $generated@@80 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) $generated@@70) (= (type $generated@@313) $generated@@70)) (= (type $generated@@314) $generated@@184)) (= (type $generated@@315) $generated@@184)) (= (type $generated@@316) ($generated@@92 $generated@@93 $generated@@94))) ($generated@@275 $generated@@316)) (= ($generated@@90 ($generated@@267 $generated@@314 $generated@@315) ($generated@@175 $generated@@312 $generated@@313) $generated@@316)  (and ($generated@@311 $generated@@314 $generated@@312 $generated@@316) ($generated@@311 $generated@@315 $generated@@313 $generated@@316))))
 :pattern ( ($generated@@90 ($generated@@267 $generated@@314 $generated@@315) ($generated@@175 $generated@@312 $generated@@313) $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@317 $generated@@319 $generated@@320)) ($generated@@92 $generated@@184 $generated@@2))
 :pattern ( ($generated@@317 $generated@@319 $generated@@320))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@321) $generated@@170) (= (type $generated@@322) $generated@@81)) (or ($generated@@318 $generated@@322) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@322 $generated@@251)))) ($generated@@78 ($generated@@317 $generated@@321 $generated@@322) ($generated@@190 $generated@@46)))
 :pattern ( ($generated@@317 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@81) (= ($generated@@174 $generated@@323) (= ($generated@@148 $generated@@323) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@81) (= ($generated@@255 $generated@@324) (= ($generated@@148 $generated@@324) $generated@@63)))
 :pattern ( ($generated@@255 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@81) (= ($generated@@325 $generated@@326) (= ($generated@@148 $generated@@326) $generated@@65)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@81) ($generated@@325 $generated@@327)) (exists (($generated@@328 Int) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (and (and (= (type $generated@@329) $generated@@81) (= (type $generated@@330) $generated@@81)) (= $generated@@327 ($generated@@79 $generated@@328 $generated@@329 $generated@@330)))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))
 :pattern ( ($generated@@325 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@81) ($generated@@174 $generated@@331)) (exists (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (and (and (= (type $generated@@332) $generated@@184) (= (type $generated@@333) $generated@@184)) (= $generated@@331 ($generated@@267 $generated@@332 $generated@@333)))
 :no-pattern (type $generated@@332)
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
)))
 :pattern ( ($generated@@174 $generated@@331))
)))
(assert  (and (and (forall (($generated@@338 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@338)) 18)) (forall (($generated@@339 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@336 $generated@@339))
))) (forall (($generated@@340 T@T) ) (! (= (type ($generated@@334 $generated@@340)) ($generated@@336 $generated@@340))
 :pattern ( ($generated@@334 $generated@@340))
))))
(assert (forall (($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@341)) 0)
 :pattern ( ($generated@@334 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@81) ($generated@@255 $generated@@342)) (= $generated@@342 $generated@@189))
 :pattern ( ($generated@@255 $generated@@342))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= (type ($generated@@344 $generated@@345 $generated@@346)) ($generated@@92 $generated@@347 $generated@@2)))
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
 (=> (= (type $generated@@348) ($generated@@92 $generated@@350 $generated@@2)) (= ($generated@@343 ($generated@@344 $generated@@348 $generated@@349)) (+ ($generated@@343 $generated@@348) 1))))
 :pattern ( ($generated@@343 ($generated@@344 $generated@@348 $generated@@349)))
)))
(assert  (=> (<= 1 $generated@@168) (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@170) (= (type $generated@@352) $generated@@81)) (or ($generated@@171 ($generated@@301 $generated@@352)) (and (not (= 1 $generated@@168)) ($generated@@78 $generated@@352 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@301 ($generated@@11 ($generated@@255 ($generated@@301 $generated@@352)))))) (let (($generated@@353 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@352)))))
(let (($generated@@354 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@352)))))
(let (($generated@@355 ($generated@@299 ($generated@@153 ($generated@@301 $generated@@352)))))
 (and ($generated@@171 $generated@@354) (=> ($generated@@169 ($generated@@254 $generated@@351) $generated@@354) (and ($generated@@171 $generated@@353) (=> ($generated@@169 ($generated@@254 $generated@@351) $generated@@353) (and ($generated@@256 $generated@@354) (=> (or ($generated@@257 $generated@@354 $generated@@189) (<= $generated@@355 ($generated@@153 $generated@@354))) ($generated@@256 $generated@@353))))))))))) (= ($generated@@169 ($generated@@254 $generated@@351) ($generated@@301 $generated@@352)) (ite ($generated@@255 ($generated@@301 $generated@@352)) true (let (($generated@@356 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@352)))))
(let (($generated@@357 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@352)))))
(let (($generated@@358 ($generated@@299 ($generated@@153 ($generated@@301 $generated@@352)))))
 (and (and (and ($generated@@169 ($generated@@254 $generated@@351) $generated@@357) ($generated@@169 ($generated@@254 $generated@@351) $generated@@356)) (or ($generated@@257 $generated@@357 $generated@@189) (<= $generated@@358 ($generated@@299 ($generated@@153 $generated@@357))))) (or ($generated@@257 $generated@@356 $generated@@189) (<= $generated@@358 ($generated@@299 ($generated@@153 $generated@@356))))))))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@254 $generated@@351) ($generated@@301 $generated@@352)))
))))
(assert  (and (forall (($generated@@361 T@T) ) (! (= (type ($generated@@359 $generated@@361)) ($generated@@92 $generated@@361 $generated@@2))
 :pattern ( ($generated@@359 $generated@@361))
)) (forall (($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@362)) $generated@@184)
 :pattern ( ($generated@@360 $generated@@362))
))))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@170) (= (type $generated@@364) $generated@@81)) (or ($generated@@318 ($generated@@301 $generated@@364)) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@364 $generated@@251)))) (and (=> (not ($generated@@0 ($generated@@301 ($generated@@11 ($generated@@255 ($generated@@301 $generated@@364)))))) (let (($generated@@365 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@364)))))
(let (($generated@@366 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@364)))))
 (and ($generated@@318 $generated@@366) ($generated@@318 $generated@@365))))) (= ($generated@@317 ($generated@@254 $generated@@363) ($generated@@301 $generated@@364)) (ite ($generated@@255 ($generated@@301 $generated@@364)) ($generated@@359 $generated@@184) (let (($generated@@367 ($generated@@301 ($generated@@162 ($generated@@301 $generated@@364)))))
(let (($generated@@368 ($generated@@301 ($generated@@157 ($generated@@301 $generated@@364)))))
(let (($generated@@369 ($generated@@299 ($generated@@153 ($generated@@301 $generated@@364)))))
($generated@@277 ($generated@@277 ($generated@@344 ($generated@@359 $generated@@184) ($generated@@360 ($generated@@8 $generated@@369))) ($generated@@317 ($generated@@254 $generated@@363) $generated@@368)) ($generated@@317 ($generated@@254 $generated@@363) $generated@@367)))))))))
 :weight 3
 :pattern ( ($generated@@317 ($generated@@254 $generated@@363) ($generated@@301 $generated@@364)))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@70) (= (type $generated@@372) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@311 ($generated@@360 $generated@@370) $generated@@371 $generated@@372) ($generated@@90 $generated@@370 $generated@@371 $generated@@372)))
 :pattern ( ($generated@@311 ($generated@@360 $generated@@370) $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@81) (= (type $generated@@374) $generated@@81)) (and ($generated@@325 $generated@@373) ($generated@@325 $generated@@374))) (= ($generated@@257 $generated@@373 $generated@@374)  (and (and (= ($generated@@153 $generated@@373) ($generated@@153 $generated@@374)) ($generated@@257 ($generated@@157 $generated@@373) ($generated@@157 $generated@@374))) ($generated@@257 ($generated@@162 $generated@@373) ($generated@@162 $generated@@374)))))
 :pattern ( ($generated@@257 $generated@@373 $generated@@374) ($generated@@325 $generated@@373))
 :pattern ( ($generated@@257 $generated@@373 $generated@@374) ($generated@@325 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@95 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@92 $generated@@376 $generated@@2)) (and (= (= ($generated@@343 $generated@@375) 0) (= $generated@@375 ($generated@@359 $generated@@376))) (=> (not (= ($generated@@343 $generated@@375) 0)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) (< 0 ($generated ($generated@@97 $generated@@375 $generated@@377))))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@343 $generated@@375))
)))
(assert  (and (and (and (and (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (= ($generated@@1 ($generated@@380 $generated@@383 $generated@@384)) 19)) (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (! (= ($generated@@381 ($generated@@380 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@380 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@382 ($generated@@380 $generated@@387 $generated@@388)) $generated@@388)
 :pattern ( ($generated@@380 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@381 (type $generated@@389))))
(= (type ($generated@@378 $generated@@389)) ($generated@@92 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@389))
))) (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (! (= (type ($generated@@379 $generated@@391 $generated@@392)) ($generated@@380 $generated@@391 $generated@@392))
 :pattern ( ($generated@@379 $generated@@391 $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@T) ) (! (let (($generated@@395 (type $generated@@393)))
 (not ($generated@@0 ($generated@@97 ($generated@@378 ($generated@@379 $generated@@395 $generated@@394)) $generated@@393))))
 :pattern ( (let (($generated@@395 (type $generated@@393)))
($generated@@97 ($generated@@378 ($generated@@379 $generated@@395 $generated@@394)) $generated@@393)))
)))
(assert  (and (and (and (and (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (= ($generated@@1 ($generated@@398 $generated@@401 $generated@@402)) 20)) (forall (($generated@@403 T@T) ($generated@@404 T@T) ) (! (= ($generated@@399 ($generated@@398 $generated@@403 $generated@@404)) $generated@@403)
 :pattern ( ($generated@@398 $generated@@403 $generated@@404))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= ($generated@@400 ($generated@@398 $generated@@405 $generated@@406)) $generated@@406)
 :pattern ( ($generated@@398 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@399 (type $generated@@407))))
(= (type ($generated@@396 $generated@@407)) ($generated@@92 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@407))
))) (forall (($generated@@409 T@T) ($generated@@410 T@T) ) (! (= (type ($generated@@397 $generated@@409 $generated@@410)) ($generated@@398 $generated@@409 $generated@@410))
 :pattern ( ($generated@@397 $generated@@409 $generated@@410))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@T) ) (! (let (($generated@@413 (type $generated@@411)))
 (not ($generated@@0 ($generated@@97 ($generated@@396 ($generated@@397 $generated@@413 $generated@@412)) $generated@@411))))
 :pattern ( (let (($generated@@413 (type $generated@@411)))
($generated@@97 ($generated@@396 ($generated@@397 $generated@@413 $generated@@412)) $generated@@411)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@95 (type $generated@@414))))
 (=> (and (= (type $generated@@414) ($generated@@92 $generated@@416 $generated@@2)) (= (type $generated@@415) ($generated@@92 $generated@@416 $generated@@2))) (= ($generated@@343 ($generated@@277 $generated@@414 $generated@@415)) (+ ($generated@@343 $generated@@414) ($generated@@343 $generated@@415)))))
 :pattern ( ($generated@@343 ($generated@@277 $generated@@414 $generated@@415)))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@95 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@92 $generated@@418 $generated@@2)) (= ($generated@@191 $generated@@417) (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@418) (and (<= 0 ($generated ($generated@@97 $generated@@417 $generated@@419))) (<= ($generated ($generated@@97 $generated@@417 $generated@@419)) ($generated@@343 $generated@@417))))
 :pattern ( ($generated@@97 $generated@@417 $generated@@419))
)))))
 :pattern ( ($generated@@191 $generated@@417))
)))
(assert (forall (($generated@@421 T@T) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@421)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@184) ($generated@@268 $generated@@423 $generated@@80)) (and (= ($generated@@360 ($generated@@420 $generated@@81 $generated@@423)) $generated@@423) ($generated@@78 ($generated@@420 $generated@@81 $generated@@423) $generated@@80)))
 :pattern ( ($generated@@268 $generated@@423 $generated@@80))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@184) ($generated@@268 $generated@@424 $generated@@251)) (and (= ($generated@@360 ($generated@@420 $generated@@81 $generated@@424)) $generated@@424) ($generated@@78 ($generated@@420 $generated@@81 $generated@@424) $generated@@251)))
 :pattern ( ($generated@@268 $generated@@424 $generated@@251))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (= (type $generated@@425) ($generated@@92 $generated@@427 $generated@@2)) (= ($generated ($generated@@97 ($generated@@344 $generated@@425 $generated@@426) $generated@@426)) (+ ($generated ($generated@@97 $generated@@425 $generated@@426)) 1))))
 :pattern ( ($generated@@344 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@429)))
 (=> (and (and (= (type $generated@@428) ($generated@@92 $generated@@431 $generated@@2)) (= (type $generated@@430) $generated@@431)) (< 0 ($generated ($generated@@97 $generated@@428 $generated@@430)))) (< 0 ($generated ($generated@@97 ($generated@@344 $generated@@428 $generated@@429) $generated@@430)))))
 :pattern ( ($generated@@344 $generated@@428 $generated@@429) ($generated@@97 $generated@@428 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@382 (type $generated@@432))))
(let (($generated@@434 ($generated@@381 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@380 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@379 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) ($generated@@0 ($generated@@97 ($generated@@378 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@382 (type $generated@@437))))
(= (type ($generated@@436 $generated@@437)) ($generated@@92 $generated@@438 $generated@@4)))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@382 (type $generated@@439))))
(let (($generated@@441 ($generated@@381 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@380 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@379 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@440) ($generated@@0 ($generated@@97 ($generated@@436 $generated@@439) $generated@@442)))
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@436 $generated@@439))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@400 (type $generated@@443))))
(let (($generated@@445 ($generated@@399 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@398 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@397 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) ($generated@@0 ($generated@@97 ($generated@@396 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@396 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@400 (type $generated@@448))))
(= (type ($generated@@447 $generated@@448)) ($generated@@92 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@400 (type $generated@@450))))
(let (($generated@@452 ($generated@@399 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@398 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@397 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@451) ($generated@@0 ($generated@@97 ($generated@@447 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@447 $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@455)))
 (=> (and (= (type $generated@@454) ($generated@@92 $generated@@457 $generated@@2)) (= (type $generated@@456) $generated@@457)) (= (< 0 ($generated ($generated@@97 ($generated@@344 $generated@@454 $generated@@455) $generated@@456)))  (or (= $generated@@456 $generated@@455) (< 0 ($generated ($generated@@97 $generated@@454 $generated@@456)))))))
 :pattern ( ($generated@@97 ($generated@@344 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@459) $generated@@70)) (= ($generated@@78 $generated@@458 ($generated@@190 $generated@@459)) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@458 $generated@@460)))) ($generated@@268 $generated@@460 $generated@@459))
 :pattern ( ($generated@@97 $generated@@458 $generated@@460))
))))
 :pattern ( ($generated@@78 $generated@@458 ($generated@@190 $generated@@459)))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@81) ($generated@@256 $generated@@461)) (or ($generated@@255 $generated@@461) ($generated@@325 $generated@@461)))
 :pattern ( ($generated@@256 $generated@@461))
)))
(assert  (=> (<= 3 $generated@@168) (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (= (type $generated@@462) $generated@@170) (= (type $generated@@463) $generated@@81)) (or ($generated@@318 $generated@@463) (and (not (= 3 $generated@@168)) ($generated@@78 $generated@@463 $generated@@251)))) (and (=> (not ($generated@@255 $generated@@463)) (let (($generated@@464 ($generated@@162 $generated@@463)))
(let (($generated@@465 ($generated@@157 $generated@@463)))
 (and ($generated@@318 $generated@@465) ($generated@@318 $generated@@464))))) (= ($generated@@317 ($generated@@254 $generated@@462) $generated@@463) (ite ($generated@@255 $generated@@463) ($generated@@359 $generated@@184) (let (($generated@@466 ($generated@@162 $generated@@463)))
(let (($generated@@467 ($generated@@157 $generated@@463)))
(let (($generated@@468 ($generated@@153 $generated@@463)))
($generated@@277 ($generated@@277 ($generated@@344 ($generated@@359 $generated@@184) ($generated@@360 ($generated@@8 $generated@@468))) ($generated@@317 $generated@@462 $generated@@467)) ($generated@@317 $generated@@462 $generated@@466)))))))))
 :pattern ( ($generated@@317 ($generated@@254 $generated@@462) $generated@@463))
))))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@469) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@470) $generated@@70)) (= (type $generated@@471) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@469 ($generated@@289 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@184) ($generated@@0 ($generated@@97 $generated@@469 $generated@@472))) ($generated@@311 $generated@@472 $generated@@470 $generated@@471))
 :pattern ( ($generated@@97 $generated@@469 $generated@@472))
))))
 :pattern ( ($generated@@90 $generated@@469 ($generated@@289 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (= (type $generated@@473) ($generated@@92 $generated@@184 $generated@@4)) (= (type $generated@@474) $generated@@70)) (= (type $generated@@475) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@473 ($generated@@294 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@184) ($generated@@0 ($generated@@97 $generated@@473 $generated@@476))) ($generated@@311 $generated@@476 $generated@@474 $generated@@475))
 :pattern ( ($generated@@97 $generated@@473 $generated@@476))
))))
 :pattern ( ($generated@@90 $generated@@473 ($generated@@294 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
(= ($generated ($generated@@97 ($generated@@359 $generated@@478) $generated@@477)) 0))
 :pattern ( (let (($generated@@478 (type $generated@@477)))
($generated@@97 ($generated@@359 $generated@@478) $generated@@477)))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@382 (type $generated@@482))))
(let (($generated@@484 ($generated@@381 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482)) ($generated@@92 $generated@@484 $generated@@483))))
 :pattern ( ($generated@@480 $generated@@482))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@486) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@479 $generated@@485) $generated@@486))  (and ($generated@@0 ($generated@@97 ($generated@@378 $generated@@485) ($generated@@182 ($generated@@420 $generated@@81 $generated@@486)))) (= ($generated@@97 ($generated@@480 $generated@@485) ($generated@@182 ($generated@@420 $generated@@81 $generated@@486))) ($generated@@183 ($generated@@420 $generated@@81 $generated@@486))))))
 :pattern ( ($generated@@97 ($generated@@479 $generated@@485) $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) ($generated@@92 $generated@@184 $generated@@4))
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ) (! (let (($generated@@491 ($generated@@400 (type $generated@@490))))
(let (($generated@@492 ($generated@@399 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490)) ($generated@@92 $generated@@492 $generated@@491))))
 :pattern ( ($generated@@488 $generated@@490))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@494) $generated@@184)) (= ($generated@@0 ($generated@@97 ($generated@@487 $generated@@493) $generated@@494))  (and ($generated@@0 ($generated@@97 ($generated@@396 $generated@@493) ($generated@@182 ($generated@@420 $generated@@81 $generated@@494)))) (= ($generated@@97 ($generated@@488 $generated@@493) ($generated@@182 ($generated@@420 $generated@@81 $generated@@494))) ($generated@@183 ($generated@@420 $generated@@81 $generated@@494))))))
 :pattern ( ($generated@@97 ($generated@@487 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (! (let (($generated@@497 (type $generated@@496)))
(let (($generated@@498 ($generated@@381 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@380 $generated@@498 $generated@@497)) (= ($generated@@0 ($generated@@97 ($generated@@436 $generated@@495) $generated@@496)) (exists (($generated@@499 T@U) ) (!  (and (= (type $generated@@499) $generated@@498) (and ($generated@@0 ($generated@@97 ($generated@@378 $generated@@495) $generated@@499)) (= $generated@@496 ($generated@@97 ($generated@@480 $generated@@495) $generated@@499))))
 :pattern ( ($generated@@97 ($generated@@378 $generated@@495) $generated@@499))
 :pattern ( ($generated@@97 ($generated@@480 $generated@@495) $generated@@499))
))))))
 :pattern ( ($generated@@97 ($generated@@436 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(let (($generated@@503 ($generated@@399 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@398 $generated@@503 $generated@@502)) (= ($generated@@0 ($generated@@97 ($generated@@447 $generated@@500) $generated@@501)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) (and ($generated@@0 ($generated@@97 ($generated@@396 $generated@@500) $generated@@504)) (= $generated@@501 ($generated@@97 ($generated@@488 $generated@@500) $generated@@504))))
 :pattern ( ($generated@@97 ($generated@@396 $generated@@500) $generated@@504))
 :pattern ( ($generated@@97 ($generated@@488 $generated@@500) $generated@@504))
))))))
 :pattern ( ($generated@@97 ($generated@@447 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@506 $generated@@507)) $generated@@70)
 :pattern ( ($generated@@505 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@509) $generated@@70)) (= (type $generated@@510) $generated@@70)) (= (type $generated@@511) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@508 ($generated@@505 $generated@@509 $generated@@510) $generated@@511) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@378 $generated@@508) $generated@@512))) (and ($generated@@311 ($generated@@97 ($generated@@480 $generated@@508) $generated@@512) $generated@@510 $generated@@511) ($generated@@311 $generated@@512 $generated@@509 $generated@@511)))
 :pattern ( ($generated@@97 ($generated@@480 $generated@@508) $generated@@512))
 :pattern ( ($generated@@97 ($generated@@378 $generated@@508) $generated@@512))
))))
 :pattern ( ($generated@@90 $generated@@508 ($generated@@505 $generated@@509 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (! (= (type ($generated@@513 $generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@513 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@517) $generated@@70)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@516 ($generated@@513 $generated@@517 $generated@@518) $generated@@519) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@396 $generated@@516) $generated@@520))) (and ($generated@@311 ($generated@@97 ($generated@@488 $generated@@516) $generated@@520) $generated@@518 $generated@@519) ($generated@@311 $generated@@520 $generated@@517 $generated@@519)))
 :pattern ( ($generated@@97 ($generated@@488 $generated@@516) $generated@@520))
 :pattern ( ($generated@@97 ($generated@@396 $generated@@516) $generated@@520))
))))
 :pattern ( ($generated@@90 $generated@@516 ($generated@@513 $generated@@517 $generated@@518) $generated@@519))
)))
(assert  (and (forall (($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@523)) $generated@@170)
 :pattern ( ($generated@@521 $generated@@523))
)) (= (type $generated@@522) $generated@@170)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@170) (= (type $generated@@525) $generated@@81)) (= ($generated@@169 $generated@@524 $generated@@525) ($generated@@169 $generated@@522 $generated@@525)))
 :pattern ( ($generated@@169 ($generated@@521 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@81) ($generated@@78 $generated@@526 $generated@@80)) (or ($generated@@255 $generated@@526) ($generated@@325 $generated@@526)))
 :pattern ( ($generated@@325 $generated@@526) ($generated@@78 $generated@@526 $generated@@80))
 :pattern ( ($generated@@255 $generated@@526) ($generated@@78 $generated@@526 $generated@@80))
)))
(assert (forall (($generated@@528 T@T) ) (! (= (type ($generated@@527 $generated@@528)) ($generated@@92 $generated@@528 $generated@@4))
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 ($generated@@400 (type $generated@@529))))
(let (($generated@@531 ($generated@@399 (type $generated@@529))))
 (=> (= (type $generated@@529) ($generated@@398 $generated@@531 $generated@@530)) (= (= $generated@@529 ($generated@@397 $generated@@531 $generated@@530)) (= ($generated@@396 $generated@@529) ($generated@@527 $generated@@531))))))
 :pattern ( ($generated@@396 $generated@@529))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 ($generated@@400 (type $generated@@532))))
(let (($generated@@534 ($generated@@399 (type $generated@@532))))
 (=> (= (type $generated@@532) ($generated@@398 $generated@@534 $generated@@533)) (= (= $generated@@532 ($generated@@397 $generated@@534 $generated@@533)) (= ($generated@@447 $generated@@532) ($generated@@527 $generated@@533))))))
 :pattern ( ($generated@@447 $generated@@532))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@400 (type $generated@@535))))
(let (($generated@@537 ($generated@@399 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@398 $generated@@537 $generated@@536)) (= (= $generated@@535 ($generated@@397 $generated@@537 $generated@@536)) (= ($generated@@487 $generated@@535) ($generated@@527 $generated@@184))))))
 :pattern ( ($generated@@487 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@382 (type $generated@@538))))
(let (($generated@@540 ($generated@@381 (type $generated@@538))))
 (=> (= (type $generated@@538) ($generated@@380 $generated@@540 $generated@@539)) (or (= $generated@@538 ($generated@@379 $generated@@540 $generated@@539)) (exists (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (and (and (= (type $generated@@541) $generated@@184) (= (type $generated@@542) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@479 $generated@@538) ($generated@@360 ($generated@@267 $generated@@541 $generated@@542)))))
 :no-pattern (type $generated@@541)
 :no-pattern (type $generated@@542)
 :no-pattern ($generated $generated@@541)
 :no-pattern ($generated@@0 $generated@@541)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
))))))
 :pattern ( ($generated@@479 $generated@@538))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 ($generated@@400 (type $generated@@543))))
(let (($generated@@545 ($generated@@399 (type $generated@@543))))
 (=> (= (type $generated@@543) ($generated@@398 $generated@@545 $generated@@544)) (or (= $generated@@543 ($generated@@397 $generated@@545 $generated@@544)) (exists (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (and (and (= (type $generated@@546) $generated@@184) (= (type $generated@@547) $generated@@184)) ($generated@@0 ($generated@@97 ($generated@@487 $generated@@543) ($generated@@360 ($generated@@267 $generated@@546 $generated@@547)))))
 :no-pattern (type $generated@@546)
 :no-pattern (type $generated@@547)
 :no-pattern ($generated $generated@@546)
 :no-pattern ($generated@@0 $generated@@546)
 :no-pattern ($generated $generated@@547)
 :no-pattern ($generated@@0 $generated@@547)
))))))
 :pattern ( ($generated@@487 $generated@@543))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@184) ($generated@@268 $generated@@548 $generated@@46)) (and (= ($generated@@360 ($generated@@420 $generated@@2 $generated@@548)) $generated@@548) ($generated@@78 ($generated@@420 $generated@@2 $generated@@548) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@548 $generated@@46))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@184) ($generated@@268 $generated@@549 $generated@@47)) (and (= ($generated@@360 ($generated@@420 $generated@@3 $generated@@549)) $generated@@549) ($generated@@78 ($generated@@420 $generated@@3 $generated@@549) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@549 $generated@@47))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@184) ($generated@@268 $generated@@550 $generated@@44)) (and (= ($generated@@360 ($generated@@420 $generated@@4 $generated@@550)) $generated@@550) ($generated@@78 ($generated@@420 $generated@@4 $generated@@550) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@550 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@551) 21))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@184) ($generated@@268 $generated@@552 $generated@@45)) (and (= ($generated@@360 ($generated@@420 $generated@@551 $generated@@552)) $generated@@552) ($generated@@78 ($generated@@420 $generated@@551 $generated@@552) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@552 $generated@@45))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@170) (= (type $generated@@554) $generated@@81)) (= ($generated@@169 ($generated@@254 $generated@@553) $generated@@554) ($generated@@169 $generated@@553 $generated@@554)))
 :pattern ( ($generated@@169 ($generated@@254 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@268 ($generated@@360 $generated@@555) $generated@@556) ($generated@@78 $generated@@555 $generated@@556)))
 :pattern ( ($generated@@268 ($generated@@360 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@95 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@92 $generated@@558 $generated@@2)) (<= 0 ($generated@@343 $generated@@557))))
 :pattern ( ($generated@@343 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@337 (type $generated@@559))))
 (=> (= (type $generated@@559) ($generated@@336 $generated@@560)) (<= 0 ($generated@@335 $generated@@559))))
 :pattern ( ($generated@@335 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@70)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= ($generated@@561 ($generated@@505 $generated@@563 $generated@@564)) $generated@@563))
 :pattern ( ($generated@@505 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) $generated@@70)) (= ($generated@@565 ($generated@@505 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@505 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@70) (= (type $generated@@570) $generated@@70)) (= ($generated@@88 ($generated@@505 $generated@@569 $generated@@570)) $generated@@58))
 :pattern ( ($generated@@505 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@70)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@70) (= (type $generated@@574) $generated@@70)) (= ($generated@@571 ($generated@@513 $generated@@573 $generated@@574)) $generated@@573))
 :pattern ( ($generated@@513 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@70)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@70) (= (type $generated@@578) $generated@@70)) (= ($generated@@575 ($generated@@513 $generated@@577 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@513 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@70) (= (type $generated@@580) $generated@@70)) (= ($generated@@88 ($generated@@513 $generated@@579 $generated@@580)) $generated@@59))
 :pattern ( ($generated@@513 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@184) (= (type $generated@@582) $generated@@184)) (= ($generated@@148 ($generated@@267 $generated@@581 $generated@@582)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@70)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@70) (= (type $generated@@586) $generated@@70)) (= ($generated@@583 ($generated@@175 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@175 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@70)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@70) (= (type $generated@@590) $generated@@70)) (= ($generated@@587 ($generated@@175 $generated@@589 $generated@@590)) $generated@@590))
 :pattern ( ($generated@@175 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@184) (= (type $generated@@592) $generated@@184)) (= ($generated@@182 ($generated@@267 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@267 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@184) (= (type $generated@@594) $generated@@184)) (= ($generated@@183 ($generated@@267 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@267 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@81)) (= ($generated@@317 $generated@@595 $generated@@596) ($generated@@317 $generated@@522 $generated@@596)))
 :pattern ( ($generated@@317 ($generated@@521 $generated@@595) $generated@@596))
)))
(assert  (and (forall (($generated@@599 T@U) ) (! (= (type ($generated@@597 $generated@@599)) $generated@@70)
 :pattern ( ($generated@@597 $generated@@599))
)) (forall (($generated@@600 T@U) ($generated@@601 Int) ) (! (let (($generated@@602 ($generated@@337 (type $generated@@600))))
(= (type ($generated@@598 $generated@@600 $generated@@601)) $generated@@602))
 :pattern ( ($generated@@598 $generated@@600 $generated@@601))
))))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@336 $generated@@184)) (= (type $generated@@604) $generated@@70)) (= (type $generated@@605) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@603 ($generated@@597 $generated@@604) $generated@@605) (forall (($generated@@606 Int) ) (!  (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@335 $generated@@603))) ($generated@@311 ($generated@@598 $generated@@603 $generated@@606) $generated@@604 $generated@@605))
 :pattern ( ($generated@@598 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@90 $generated@@603 ($generated@@597 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 Int) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@81) (= (type $generated@@609) $generated@@81)) (= ($generated@@79 ($generated@@299 $generated@@607) ($generated@@301 $generated@@608) ($generated@@301 $generated@@609)) ($generated@@301 ($generated@@79 $generated@@607 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@79 ($generated@@299 $generated@@607) ($generated@@301 $generated@@608) ($generated@@301 $generated@@609)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@610 ($generated@@91 $generated@@611)) $generated@@611)
 :pattern ( ($generated@@91 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ) (! (= (type ($generated@@612 $generated@@613)) $generated@@70)
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@70) (= ($generated@@612 ($generated@@289 $generated@@614)) $generated@@614))
 :pattern ( ($generated@@289 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@70) (= ($generated@@88 ($generated@@289 $generated@@615)) $generated@@54))
 :pattern ( ($generated@@289 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@70)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@70) (= ($generated@@616 ($generated@@294 $generated@@618)) $generated@@618))
 :pattern ( ($generated@@294 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@70) (= ($generated@@88 ($generated@@294 $generated@@619)) $generated@@55))
 :pattern ( ($generated@@294 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@70)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@70) (= ($generated@@620 ($generated@@190 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@190 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@70) (= ($generated@@88 ($generated@@190 $generated@@623)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@70)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@70) (= ($generated@@624 ($generated@@597 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@597 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@70) (= ($generated@@88 ($generated@@597 $generated@@627)) $generated@@57))
 :pattern ( ($generated@@597 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
(= ($generated@@420 $generated@@629 ($generated@@360 $generated@@628)) $generated@@628))
 :pattern ( ($generated@@360 $generated@@628))
)))
(assert (forall (($generated@@631 Int) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@81) (= (type $generated@@633) $generated@@81)) (< ($generated@@630 $generated@@632) ($generated@@630 ($generated@@79 $generated@@631 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@79 $generated@@631 $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 Int) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@81) (= (type $generated@@636) $generated@@81)) (< ($generated@@630 $generated@@636) ($generated@@630 ($generated@@79 $generated@@634 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@79 $generated@@634 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@637) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) (= ($generated@@78 $generated@@637 ($generated@@505 $generated@@638 $generated@@639)) (forall (($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@378 $generated@@637) $generated@@640))) (and ($generated@@268 ($generated@@97 ($generated@@480 $generated@@637) $generated@@640) $generated@@639) ($generated@@268 $generated@@640 $generated@@638)))
 :pattern ( ($generated@@97 ($generated@@480 $generated@@637) $generated@@640))
 :pattern ( ($generated@@97 ($generated@@378 $generated@@637) $generated@@640))
))))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@505 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@642) $generated@@70)) (= (type $generated@@643) $generated@@70)) (= ($generated@@78 $generated@@641 ($generated@@513 $generated@@642 $generated@@643)) (forall (($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@184) ($generated@@0 ($generated@@97 ($generated@@396 $generated@@641) $generated@@644))) (and ($generated@@268 ($generated@@97 ($generated@@488 $generated@@641) $generated@@644) $generated@@643) ($generated@@268 $generated@@644 $generated@@642)))
 :pattern ( ($generated@@97 ($generated@@488 $generated@@641) $generated@@644))
 :pattern ( ($generated@@97 ($generated@@396 $generated@@641) $generated@@644))
))))
 :pattern ( ($generated@@78 $generated@@641 ($generated@@513 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@184) (= (type $generated@@647) $generated@@184)) (< ($generated@@645 $generated@@646) ($generated@@630 ($generated@@267 $generated@@646 $generated@@647))))
 :pattern ( ($generated@@267 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@184) (= (type $generated@@649) $generated@@184)) (< ($generated@@645 $generated@@649) ($generated@@630 ($generated@@267 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@267 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@170) (= (type $generated@@651) $generated@@81)) (= ($generated@@317 ($generated@@254 $generated@@650) $generated@@651) ($generated@@317 $generated@@650 $generated@@651)))
 :pattern ( ($generated@@317 ($generated@@254 $generated@@650) $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@184) (= (type $generated@@653) $generated@@70)) (= (type $generated@@654) $generated@@70)) ($generated@@268 $generated@@652 ($generated@@505 $generated@@653 $generated@@654))) (and (= ($generated@@360 ($generated@@420 ($generated@@380 $generated@@184 $generated@@184) $generated@@652)) $generated@@652) ($generated@@78 ($generated@@420 ($generated@@380 $generated@@184 $generated@@184) $generated@@652) ($generated@@505 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@268 $generated@@652 ($generated@@505 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@184) (= (type $generated@@656) $generated@@70)) (= (type $generated@@657) $generated@@70)) ($generated@@268 $generated@@655 ($generated@@513 $generated@@656 $generated@@657))) (and (= ($generated@@360 ($generated@@420 ($generated@@398 $generated@@184 $generated@@184) $generated@@655)) $generated@@655) ($generated@@78 ($generated@@420 ($generated@@398 $generated@@184 $generated@@184) $generated@@655) ($generated@@513 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@268 $generated@@655 ($generated@@513 $generated@@656 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@70) (= (type $generated@@659) $generated@@70)) (= (type $generated@@660) $generated@@184)) ($generated@@268 $generated@@660 ($generated@@175 $generated@@658 $generated@@659))) (and (= ($generated@@360 ($generated@@420 $generated@@81 $generated@@660)) $generated@@660) ($generated@@78 ($generated@@420 $generated@@81 $generated@@660) ($generated@@175 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@268 $generated@@660 ($generated@@175 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 (type $generated@@661)))
 (not ($generated@@0 ($generated@@97 ($generated@@527 $generated@@662) $generated@@661))))
 :pattern ( (let (($generated@@662 (type $generated@@661)))
($generated@@97 ($generated@@527 $generated@@662) $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@75)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@70) (= (type $generated@@666) $generated@@70)) (and (= ($generated@@88 ($generated@@175 $generated@@665 $generated@@666)) $generated@@62) (= ($generated@@663 ($generated@@175 $generated@@665 $generated@@666)) $generated@@67)))
 :pattern ( ($generated@@175 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (= (type $generated@@667) $generated@@81) (= (type $generated@@668) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@668) (and ($generated@@325 $generated@@667) ($generated@@90 $generated@@667 $generated@@80 $generated@@668)))) ($generated@@90 ($generated@@8 ($generated@@153 $generated@@667)) $generated@@46 $generated@@668))
 :pattern ( ($generated@@90 ($generated@@8 ($generated@@153 $generated@@667)) $generated@@46 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@81) (= ($generated@@645 ($generated@@360 $generated@@669)) ($generated@@630 $generated@@669)))
 :pattern ( ($generated@@645 ($generated@@360 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@184) ($generated@@268 $generated@@670 ($generated@@91 0))) (and (= ($generated@@360 ($generated@@420 $generated@@2 $generated@@670)) $generated@@670) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@670) ($generated@@91 0))))
 :pattern ( ($generated@@268 $generated@@670 ($generated@@91 0)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@184) (= (type $generated@@672) $generated@@70)) ($generated@@268 $generated@@671 ($generated@@289 $generated@@672))) (and (= ($generated@@360 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@671)) $generated@@671) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@671) ($generated@@289 $generated@@672))))
 :pattern ( ($generated@@268 $generated@@671 ($generated@@289 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@184) (= (type $generated@@674) $generated@@70)) ($generated@@268 $generated@@673 ($generated@@294 $generated@@674))) (and (= ($generated@@360 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@673)) $generated@@673) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@4) $generated@@673) ($generated@@294 $generated@@674))))
 :pattern ( ($generated@@268 $generated@@673 ($generated@@294 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) $generated@@184) (= (type $generated@@676) $generated@@70)) ($generated@@268 $generated@@675 ($generated@@190 $generated@@676))) (and (= ($generated@@360 ($generated@@420 ($generated@@92 $generated@@184 $generated@@2) $generated@@675)) $generated@@675) ($generated@@78 ($generated@@420 ($generated@@92 $generated@@184 $generated@@2) $generated@@675) ($generated@@190 $generated@@676))))
 :pattern ( ($generated@@268 $generated@@675 ($generated@@190 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@184) (= (type $generated@@678) $generated@@70)) ($generated@@268 $generated@@677 ($generated@@597 $generated@@678))) (and (= ($generated@@360 ($generated@@420 ($generated@@336 $generated@@184) $generated@@677)) $generated@@677) ($generated@@78 ($generated@@420 ($generated@@336 $generated@@184) $generated@@677) ($generated@@597 $generated@@678))))
 :pattern ( ($generated@@268 $generated@@677 ($generated@@597 $generated@@678)))
)))
(assert (= ($generated@@88 $generated@@80) $generated@@64))
(assert (= ($generated@@663 $generated@@80) $generated@@68))
(assert (= ($generated@@88 $generated@@251) $generated@@66))
(assert (= ($generated@@663 $generated@@251) $generated@@69))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@679) ($generated@@92 $generated@@184 $generated@@2)) (= (type $generated@@680) $generated@@70)) (= (type $generated@@681) ($generated@@92 $generated@@93 $generated@@94))) (= ($generated@@90 $generated@@679 ($generated@@190 $generated@@680) $generated@@681) (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@184) (< 0 ($generated ($generated@@97 $generated@@679 $generated@@682)))) ($generated@@311 $generated@@682 $generated@@680 $generated@@681))
 :pattern ( ($generated@@97 $generated@@679 $generated@@682))
))))
 :pattern ( ($generated@@90 $generated@@679 ($generated@@190 $generated@@680) $generated@@681))
)))
(assert (= $generated@@189 ($generated@@301 $generated@@189)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@81) (= (type $generated@@684) $generated@@70)) (= (type $generated@@685) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@685) (and ($generated@@174 $generated@@683) (exists (($generated@@686 T@U) ) (!  (and (= (type $generated@@686) $generated@@70) ($generated@@90 $generated@@683 ($generated@@175 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@90 $generated@@683 ($generated@@175 $generated@@684 $generated@@686) $generated@@685))
))))) ($generated@@311 ($generated@@182 $generated@@683) $generated@@684 $generated@@685))
 :pattern ( ($generated@@311 ($generated@@182 $generated@@683) $generated@@684 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) $generated@@81) (= (type $generated@@688) $generated@@70)) (= (type $generated@@689) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@689) (and ($generated@@174 $generated@@687) (exists (($generated@@690 T@U) ) (!  (and (= (type $generated@@690) $generated@@70) ($generated@@90 $generated@@687 ($generated@@175 $generated@@690 $generated@@688) $generated@@689))
 :pattern ( ($generated@@90 $generated@@687 ($generated@@175 $generated@@690 $generated@@688) $generated@@689))
))))) ($generated@@311 ($generated@@183 $generated@@687) $generated@@688 $generated@@689))
 :pattern ( ($generated@@311 ($generated@@183 $generated@@687) $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@692)))
 (=> (and (and (= (type $generated@@691) ($generated@@92 $generated@@694 $generated@@2)) (= (type $generated@@693) $generated@@694)) (not (= $generated@@692 $generated@@693))) (= ($generated ($generated@@97 $generated@@691 $generated@@693)) ($generated ($generated@@97 ($generated@@344 $generated@@691 $generated@@692) $generated@@693)))))
 :pattern ( ($generated@@344 $generated@@691 $generated@@692) ($generated@@97 $generated@@691 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@81) (= (type $generated@@696) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@696) (and ($generated@@325 $generated@@695) ($generated@@90 $generated@@695 $generated@@80 $generated@@696)))) ($generated@@90 ($generated@@157 $generated@@695) $generated@@80 $generated@@696))
 :pattern ( ($generated@@90 ($generated@@157 $generated@@695) $generated@@80 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (= (type $generated@@697) $generated@@81) (= (type $generated@@698) ($generated@@92 $generated@@93 $generated@@94))) (and ($generated@@275 $generated@@698) (and ($generated@@325 $generated@@697) ($generated@@90 $generated@@697 $generated@@80 $generated@@698)))) ($generated@@90 ($generated@@162 $generated@@697) $generated@@80 $generated@@698))
 :pattern ( ($generated@@90 ($generated@@162 $generated@@697) $generated@@80 $generated@@698))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@184) (= (type $generated@@700) $generated@@184)) (= ($generated@@267 ($generated@@301 $generated@@699) ($generated@@301 $generated@@700)) ($generated@@301 ($generated@@267 $generated@@699 $generated@@700))))
 :pattern ( ($generated@@267 ($generated@@301 $generated@@699) ($generated@@301 $generated@@700)))
)))
(assert (forall (($generated@@701 Int) ) (! (= ($generated@@360 ($generated@@8 ($generated@@299 $generated@@701))) ($generated@@301 ($generated@@360 ($generated@@8 $generated@@701))))
 :pattern ( ($generated@@360 ($generated@@8 ($generated@@299 $generated@@701))))
)))
(assert (forall (($generated@@702 T@U) ) (! (= ($generated@@360 ($generated@@301 $generated@@702)) ($generated@@301 ($generated@@360 $generated@@702)))
 :pattern ( ($generated@@360 ($generated@@301 $generated@@702)))
)))
(assert (forall (($generated@@703 T@U) ) (! (let (($generated@@704 ($generated@@337 (type $generated@@703))))
 (=> (and (= (type $generated@@703) ($generated@@336 $generated@@704)) (= ($generated@@335 $generated@@703) 0)) (= $generated@@703 ($generated@@334 $generated@@704))))
 :pattern ( ($generated@@335 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@706)))
 (=> (and (and (= (type $generated@@705) ($generated@@92 $generated@@708 $generated@@2)) (= (type $generated@@707) $generated@@2)) (<= 0 ($generated $generated@@707))) (= ($generated@@343 ($generated@@98 $generated@@705 $generated@@706 $generated@@707)) (+ (- ($generated@@343 $generated@@705) ($generated ($generated@@97 $generated@@705 $generated@@706))) ($generated $generated@@707)))))
 :pattern ( ($generated@@343 ($generated@@98 $generated@@705 $generated@@706 $generated@@707)))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (= (type $generated@@709) $generated@@81) (= ($generated@@78 $generated@@709 $generated@@251)  (and ($generated@@78 $generated@@709 $generated@@80) ($generated@@169 ($generated@@254 $generated@@522) $generated@@709))))
 :pattern ( ($generated@@78 $generated@@709 $generated@@251))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@711) $generated@@2)) ($generated@@90 $generated@@711 $generated@@46 $generated@@710))
 :pattern ( ($generated@@90 $generated@@711 $generated@@46 $generated@@710))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@713) $generated@@3)) ($generated@@90 $generated@@713 $generated@@47 $generated@@712))
 :pattern ( ($generated@@90 $generated@@713 $generated@@47 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@715) $generated@@4)) ($generated@@90 $generated@@715 $generated@@44 $generated@@714))
 :pattern ( ($generated@@90 $generated@@715 $generated@@44 $generated@@714))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@717) $generated@@551)) ($generated@@90 $generated@@717 $generated@@45 $generated@@716))
 :pattern ( ($generated@@90 $generated@@717 $generated@@45 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) ($generated@@92 $generated@@93 $generated@@94)) (= (type $generated@@719) $generated@@184)) ($generated@@90 $generated@@719 $generated@@48 $generated@@718))
 :pattern ( ($generated@@90 $generated@@719 $generated@@48 $generated@@718))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) ($generated@@336 $generated@@184)) (= (type $generated@@721) $generated@@70)) (= ($generated@@78 $generated@@720 ($generated@@597 $generated@@721)) (forall (($generated@@722 Int) ) (!  (=> (and (<= 0 $generated@@722) (< $generated@@722 ($generated@@335 $generated@@720))) ($generated@@268 ($generated@@598 $generated@@720 $generated@@722) $generated@@721))
 :pattern ( ($generated@@598 $generated@@720 $generated@@722))
))))
 :pattern ( ($generated@@78 $generated@@720 ($generated@@597 $generated@@721)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 Int) ) (!  (=> (= (type $generated@@724) ($generated@@336 $generated@@184)) (=> (and (<= 0 $generated@@725) (< $generated@@725 ($generated@@335 $generated@@724))) (< ($generated@@630 ($generated@@420 $generated@@81 ($generated@@598 $generated@@724 $generated@@725))) ($generated@@723 $generated@@724))))
 :pattern ( ($generated@@630 ($generated@@420 $generated@@81 ($generated@@598 $generated@@724 $generated@@725))))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (and (= (type $generated@@726) ($generated@@380 $generated@@184 $generated@@184)) (= (type $generated@@727) $generated@@70)) (= (type $generated@@728) $generated@@70)) ($generated@@78 $generated@@726 ($generated@@505 $generated@@727 $generated@@728))) (and (and ($generated@@78 ($generated@@378 $generated@@726) ($generated@@289 $generated@@727)) ($generated@@78 ($generated@@436 $generated@@726) ($generated@@289 $generated@@728))) ($generated@@78 ($generated@@479 $generated@@726) ($generated@@289 ($generated@@175 $generated@@727 $generated@@728)))))
 :pattern ( ($generated@@78 $generated@@726 ($generated@@505 $generated@@727 $generated@@728)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (= (type $generated@@729) ($generated@@398 $generated@@184 $generated@@184)) (= (type $generated@@730) $generated@@70)) (= (type $generated@@731) $generated@@70)) ($generated@@78 $generated@@729 ($generated@@513 $generated@@730 $generated@@731))) (and (and ($generated@@78 ($generated@@396 $generated@@729) ($generated@@294 $generated@@730)) ($generated@@78 ($generated@@447 $generated@@729) ($generated@@294 $generated@@731))) ($generated@@78 ($generated@@487 $generated@@729) ($generated@@294 ($generated@@175 $generated@@730 $generated@@731)))))
 :pattern ( ($generated@@78 $generated@@729 ($generated@@513 $generated@@730 $generated@@731)))
)))
(assert (forall (($generated@@732 T@U) ) (!  (=> (= (type $generated@@732) $generated@@2) ($generated@@78 $generated@@732 $generated@@46))
 :pattern ( ($generated@@78 $generated@@732 $generated@@46))
)))
(assert (forall (($generated@@733 T@U) ) (!  (=> (= (type $generated@@733) $generated@@3) ($generated@@78 $generated@@733 $generated@@47))
 :pattern ( ($generated@@78 $generated@@733 $generated@@47))
)))
(assert (forall (($generated@@734 T@U) ) (!  (=> (= (type $generated@@734) $generated@@4) ($generated@@78 $generated@@734 $generated@@44))
 :pattern ( ($generated@@78 $generated@@734 $generated@@44))
)))
(assert (forall (($generated@@735 T@U) ) (!  (=> (= (type $generated@@735) $generated@@551) ($generated@@78 $generated@@735 $generated@@45))
 :pattern ( ($generated@@78 $generated@@735 $generated@@45))
)))
(assert (forall (($generated@@736 T@U) ) (!  (=> (= (type $generated@@736) $generated@@184) ($generated@@78 $generated@@736 $generated@@48))
 :pattern ( ($generated@@78 $generated@@736 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@737 () T@U)
(declare-fun $generated@@738 () T@U)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@737) ($generated@@197 $generated@@93 $generated@@4)) (= (type $generated@@738) $generated@@93)) (= (type $generated@@739) ($generated@@92 $generated@@93 $generated@@94))) (= (type $generated@@740) $generated@@81)) (= (type $generated@@741) ($generated@@92 $generated@@93 $generated@@94))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@743  (=> (and (= $generated@@737 ($generated@@196 $generated@@738 $generated@@739 $generated@@60 false)) ($generated@@256 $generated@@740)) (=> (and (and ($generated@@275 $generated@@741) ($generated@@742 $generated@@741)) (and (= $generated@@739 $generated@@741) (forall (($generated@@744 T@U) ) (!  (=> (= (type $generated@@744) $generated@@81) (=> (and (and ($generated@@78 $generated@@744 $generated@@251) (not ($generated@@257 $generated@@744 $generated@@189))) (< ($generated@@630 $generated@@744) ($generated@@630 $generated@@740))) (and (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 $generated@@522) $generated@@744) ($generated@@360 ($generated@@8 ($generated@@153 $generated@@744))))) 0) (forall (($generated@@745 T@U) ) (!  (=> (and (and (= (type $generated@@745) $generated@@2) true) (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 $generated@@522) $generated@@744) ($generated@@360 $generated@@745))) 0)) (<= ($generated@@153 $generated@@744) ($generated $generated@@745)))
 :pattern ( ($generated@@97 ($generated@@317 ($generated@@254 $generated@@522) $generated@@744) ($generated@@360 $generated@@745)))
)))))
 :no-pattern (type $generated@@744)
 :no-pattern ($generated $generated@@744)
 :no-pattern ($generated@@0 $generated@@744)
)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 ($generated@@254 $generated@@522)) $generated@@740) ($generated@@360 ($generated@@8 ($generated@@153 $generated@@740))))) 0)) (=> (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 ($generated@@254 $generated@@522)) $generated@@740) ($generated@@360 ($generated@@8 ($generated@@153 $generated@@740))))) 0) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@746 Int) ) (!  (=> true (=> (> ($generated ($generated@@97 ($generated@@317 ($generated@@254 ($generated@@254 $generated@@522)) $generated@@740) ($generated@@360 ($generated@@8 $generated@@746)))) 0) (<= ($generated@@153 $generated@@740) $generated@@746)))
 :pattern ( ($generated@@97 ($generated@@317 ($generated@@254 ($generated@@254 $generated@@522)) $generated@@740) ($generated@@360 ($generated@@8 $generated@@746))))
)))))))))
(let (($generated@@747  (=> (and ($generated@@275 $generated@@739) ($generated@@742 $generated@@739)) (=> (and (and (and (and ($generated@@78 $generated@@740 $generated@@251) ($generated@@90 $generated@@740 $generated@@251 $generated@@739)) ($generated@@256 $generated@@740)) (= 4 $generated@@168)) (and (not ($generated@@257 $generated@@740 $generated@@189)) (= (ControlFlow 0 4) 2))) $generated@@743))))
$generated@@747)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
