(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U Int) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@149 $generated@@157)) $generated@@134)
 :pattern ( ($generated@@149 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@152 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 Int) ) (! (let (($generated@@161 ($generated@@138 (type $generated@@159))))
(= (type ($generated@@156 $generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
))))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) $generated@@64) (= (type $generated@@163) $generated@@134)) (= (type $generated@@164) ($generated@@135 $generated@@136))) (= (type $generated@@167) $generated@@136)) (or ($generated@@150 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@167) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@164 ($generated@@152 $generated@@162)) ($generated@@153 $generated@@167 $generated@@162)) (and (and (<= ($generated@@154 0) $generated@@165) (<= $generated@@165 $generated@@166)) (<= $generated@@166 ($generated@@155 $generated@@164))))))) (and (=> (not (= $generated@@165 $generated@@166)) ($generated@@150 $generated@@162 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)) (= ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) (ite (= $generated@@165 $generated@@166) 0 (+ ($generated@@132 $generated@@162 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) (ite (= ($generated@@156 $generated@@164 (- $generated@@166 1)) $generated@@167) 1 0))))))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@151 $generated@@168 ($generated@@75 0)))
 :pattern ( ($generated@@151 $generated@@168 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@64)) (= (type $generated@@176) $generated@@171)) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@136)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@136)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@64)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@188) $generated@@64)) ($generated@@151 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@151 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@77 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@191 $generated@@77 $generated@@4))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@77) (= (type $generated@@251) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@77)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@171)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@136)) (= (type $generated@@263) $generated@@136)) (= ($generated@@151 ($generated@@257 $generated@@262 $generated@@263) ($generated@@170 $generated@@260 $generated@@261))  (and ($generated@@153 $generated@@262 $generated@@260) ($generated@@153 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@151 ($generated@@257 $generated@@262 $generated@@263) ($generated@@170 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@171) (= (type $generated@@265) $generated@@171)) (= ($generated@@177 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@177 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@151 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@136) ($generated@@0 ($generated@@81 $generated@@268 $generated@@270))) ($generated@@153 $generated@@270 $generated@@269))
 :pattern ( ($generated@@81 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@151 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@151 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@0 ($generated@@81 $generated@@273 $generated@@275))) ($generated@@153 $generated@@275 $generated@@274))
 :pattern ( ($generated@@81 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@151 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@154 $generated@@276) $generated@@276)
 :pattern ( ($generated@@154 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@136)) (= (type $generated@@286) $generated@@136)) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@281 $generated@@287)) (= ($generated@@74 ($generated@@257 $generated@@285 $generated@@286) ($generated@@170 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@74 ($generated@@257 $generated@@285 $generated@@286) ($generated@@170 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@171) (= ($generated@@169 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@171) ($generated@@169 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@136) (= (type $generated@@293) $generated@@136)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@169 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@135 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@155 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@134)) (= (type $generated@@299) ($generated@@135 $generated@@136))) (= (type $generated@@302) $generated@@136)) (or ($generated@@150 $generated@@297 ($generated@@277 $generated@@299) ($generated@@154 $generated@@300) ($generated@@154 $generated@@301) $generated@@302) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@299 ($generated@@152 $generated@@297)) ($generated@@153 $generated@@302 $generated@@297)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@300)) (<= ($generated@@154 $generated@@300) ($generated@@154 $generated@@301))) (<= ($generated@@154 $generated@@301) ($generated@@155 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@154 $generated@@300) ($generated@@154 $generated@@301))) ($generated@@150 $generated@@297 ($generated@@277 $generated@@299) ($generated@@154 $generated@@300) ($generated@@154 (- $generated@@301 1)) $generated@@302)) (= ($generated@@132 $generated@@297 ($generated@@149 $generated@@298) ($generated@@277 $generated@@299) ($generated@@154 $generated@@300) ($generated@@154 $generated@@301) $generated@@302) (ite (= ($generated@@154 $generated@@300) ($generated@@154 $generated@@301)) 0 (+ ($generated@@132 $generated@@297 ($generated@@149 $generated@@298) ($generated@@277 $generated@@299) ($generated@@154 $generated@@300) ($generated@@154 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@156 ($generated@@277 $generated@@299) ($generated@@154 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@297 ($generated@@149 $generated@@298) ($generated@@277 $generated@@299) ($generated@@154 $generated@@300) ($generated@@154 $generated@@301) $generated@@302))
))))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@136)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@64) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@282 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@74 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@282 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@76 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@79 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@76 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@81 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 20)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@81 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@81 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@76 $generated@@351 $generated@@2)) (= ($generated@@185 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@81 $generated@@350 $generated@@352))) (<= ($generated ($generated@@81 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@185 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@314 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@318 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@318 (type $generated@@360))))
(let (($generated@@362 ($generated@@317 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@316 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@315 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@336 (type $generated@@364))))
(let (($generated@@366 ($generated@@335 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@334 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@333 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@332 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@336 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@336 (type $generated@@371))))
(let (($generated@@373 ($generated@@335 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@334 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@333 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@376) $generated@@64)) (= ($generated@@151 $generated@@375 ($generated@@184 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@375 $generated@@377)))) ($generated@@153 $generated@@377 $generated@@376))
 :pattern ( ($generated@@81 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@151 $generated@@375 ($generated@@184 $generated@@376)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 Int) ($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@378) $generated@@64) (= (type $generated@@379) $generated@@134)) (= (type $generated@@380) ($generated@@135 $generated@@136))) (= (type $generated@@383) $generated@@136)) (or ($generated@@150 $generated@@378 $generated@@380 $generated@@381 $generated@@382 $generated@@383) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@380 ($generated@@152 $generated@@378)) ($generated@@153 $generated@@383 $generated@@378)) (and (and (<= ($generated@@154 0) $generated@@381) (<= $generated@@381 $generated@@382)) (<= $generated@@382 ($generated@@155 $generated@@380))))))) true)
 :pattern ( ($generated@@132 $generated@@378 $generated@@379 $generated@@380 $generated@@381 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@266 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@136) ($generated@@0 ($generated@@81 $generated@@384 $generated@@387))) ($generated@@282 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@81 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@266 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@271 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@136) ($generated@@0 ($generated@@81 $generated@@388 $generated@@391))) ($generated@@282 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@81 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@271 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= ($generated ($generated@@81 ($generated@@309 $generated@@393) $generated@@392)) 0))
 :pattern ( (let (($generated@@393 (type $generated@@392)))
($generated@@81 ($generated@@309 $generated@@393) $generated@@392)))
)))
(assert  (and (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@394 $generated@@397)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@394 $generated@@397))
)) (forall (($generated@@398 T@T) ($generated@@399 T@U) ) (! (= (type ($generated@@395 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@395 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@396 $generated@@400)) ($generated@@76 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@396 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@404) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@403) ($generated@@178 ($generated@@395 $generated@@171 $generated@@404)))) (= ($generated@@81 ($generated@@396 $generated@@403) ($generated@@178 ($generated@@395 $generated@@171 $generated@@404))) ($generated@@179 ($generated@@395 $generated@@171 $generated@@404))))))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@76 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@412) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@81 ($generated@@332 $generated@@411) ($generated@@178 ($generated@@395 $generated@@171 $generated@@412)))) (= ($generated@@81 ($generated@@406 $generated@@411) ($generated@@178 ($generated@@395 $generated@@171 $generated@@412))) ($generated@@179 ($generated@@395 $generated@@171 $generated@@412))))))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@81 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@282 ($generated@@81 ($generated@@396 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@282 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@426) $generated@@430))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) $generated@@64)) (= (type $generated@@437) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@282 ($generated@@81 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@282 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 Int) ($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@134)) (= (type $generated@@441) ($generated@@135 $generated@@136))) (= (type $generated@@444) $generated@@136)) (= ($generated@@132 $generated@@439 ($generated@@149 $generated@@440) $generated@@441 $generated@@442 $generated@@443 $generated@@444) ($generated@@132 $generated@@439 $generated@@440 $generated@@441 $generated@@442 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@132 $generated@@439 ($generated@@149 $generated@@440) $generated@@441 $generated@@442 $generated@@443 $generated@@444))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 Int) ($generated@@449 Int) ($generated@@450 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@134)) (= (type $generated@@447) ($generated@@135 $generated@@136))) (= (type $generated@@450) $generated@@136)) (or ($generated@@150 $generated@@445 ($generated@@277 $generated@@447) ($generated@@154 $generated@@448) ($generated@@154 $generated@@449) ($generated@@277 $generated@@450)) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@447 ($generated@@152 $generated@@445)) ($generated@@153 $generated@@450 $generated@@445)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@448)) (<= ($generated@@154 $generated@@448) ($generated@@154 $generated@@449))) (<= ($generated@@154 $generated@@449) ($generated@@155 ($generated@@277 $generated@@447)))))))) (and (=> (not (= ($generated@@154 $generated@@448) ($generated@@154 $generated@@449))) ($generated@@150 $generated@@445 ($generated@@277 $generated@@447) ($generated@@154 $generated@@448) ($generated@@154 (- $generated@@449 1)) ($generated@@277 $generated@@450))) (= ($generated@@132 $generated@@445 ($generated@@149 $generated@@446) ($generated@@277 $generated@@447) ($generated@@154 $generated@@448) ($generated@@154 $generated@@449) ($generated@@277 $generated@@450)) (ite (= ($generated@@154 $generated@@448) ($generated@@154 $generated@@449)) 0 (+ ($generated@@132 $generated@@445 ($generated@@149 $generated@@446) ($generated@@277 $generated@@447) ($generated@@154 $generated@@448) ($generated@@154 (- $generated@@449 1)) ($generated@@277 $generated@@450)) (ite (= ($generated@@156 ($generated@@277 $generated@@447) ($generated@@154 (- $generated@@449 1))) ($generated@@277 $generated@@450)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@445 ($generated@@149 $generated@@446) ($generated@@277 $generated@@447) ($generated@@154 $generated@@448) ($generated@@154 $generated@@449) ($generated@@277 $generated@@450)))
))))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@76 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@336 (type $generated@@453))))
(let (($generated@@455 ($generated@@335 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@334 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@333 $generated@@455 $generated@@454)) (= ($generated@@332 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@332 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@336 (type $generated@@456))))
(let (($generated@@458 ($generated@@335 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@334 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@333 $generated@@458 $generated@@457)) (= ($generated@@368 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@368 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@336 (type $generated@@459))))
(let (($generated@@461 ($generated@@335 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@334 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@333 $generated@@461 $generated@@460)) (= ($generated@@405 $generated@@459) ($generated@@451 $generated@@136))))))
 :pattern ( ($generated@@405 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@318 (type $generated@@462))))
(let (($generated@@464 ($generated@@317 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@316 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@315 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@136) (= (type $generated@@466) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@394 $generated@@462) ($generated@@303 ($generated@@257 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@394 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@336 (type $generated@@467))))
(let (($generated@@469 ($generated@@335 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@334 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@333 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@136) (= (type $generated@@471) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@405 $generated@@467) ($generated@@303 ($generated@@257 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@405 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@136) ($generated@@153 $generated@@472 $generated@@46)) (and (= ($generated@@303 ($generated@@395 $generated@@2 $generated@@472)) $generated@@472) ($generated@@151 ($generated@@395 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@153 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@136) ($generated@@153 $generated@@473 $generated@@47)) (and (= ($generated@@303 ($generated@@395 $generated@@3 $generated@@473)) $generated@@473) ($generated@@151 ($generated@@395 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@153 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@136) ($generated@@153 $generated@@474 $generated@@44)) (and (= ($generated@@303 ($generated@@395 $generated@@4 $generated@@474)) $generated@@474) ($generated@@151 ($generated@@395 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@153 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 21))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@136) ($generated@@153 $generated@@476 $generated@@45)) (and (= ($generated@@303 ($generated@@395 $generated@@475 $generated@@476)) $generated@@476) ($generated@@151 ($generated@@395 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@153 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@153 ($generated@@303 $generated@@477) $generated@@478) ($generated@@151 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@153 ($generated@@303 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@79 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@76 $generated@@480 $generated@@2)) (<= 0 ($generated@@308 $generated@@479))))
 :pattern ( ($generated@@308 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@138 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@135 $generated@@482)) (<= 0 ($generated@@155 $generated@@481))))
 :pattern ( ($generated@@155 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@72 ($generated@@423 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@431 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@431 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@431 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@431 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@72 ($generated@@431 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@136) (= (type $generated@@504) $generated@@136)) (= ($generated@@288 ($generated@@257 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@505 ($generated@@170 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@170 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@64)) (= ($generated@@509 ($generated@@170 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@170 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@136) (= (type $generated@@514) $generated@@136)) (= ($generated@@178 ($generated@@257 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@257 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@136) (= (type $generated@@516) $generated@@136)) (= ($generated@@179 ($generated@@257 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@257 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@135 $generated@@136)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@517 ($generated@@152 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@155 $generated@@517))) ($generated@@282 ($generated@@156 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@156 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@74 $generated@@517 ($generated@@152 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@75 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@75 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@266 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@266 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@266 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@271 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@271 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@271 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@184 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@184 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@184 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@535 ($generated@@152 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@152 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@152 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@395 $generated@@540 ($generated@@303 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@303 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) (= ($generated@@151 $generated@@541 ($generated@@423 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@541) $generated@@544))) (and ($generated@@153 ($generated@@81 ($generated@@396 $generated@@541) $generated@@544) $generated@@543) ($generated@@153 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@541) $generated@@544))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@151 $generated@@541 ($generated@@423 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) (= ($generated@@151 $generated@@545 ($generated@@431 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@545) $generated@@548))) (and ($generated@@153 ($generated@@81 ($generated@@406 $generated@@545) $generated@@548) $generated@@547) ($generated@@153 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@545) $generated@@548))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@151 $generated@@545 ($generated@@431 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@136)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@257 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@257 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@136) (= (type $generated@@554) $generated@@136)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@257 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@257 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) $generated@@64)) ($generated@@153 $generated@@555 ($generated@@423 $generated@@556 $generated@@557))) (and (= ($generated@@303 ($generated@@395 ($generated@@316 $generated@@136 $generated@@136) $generated@@555)) $generated@@555) ($generated@@151 ($generated@@395 ($generated@@316 $generated@@136 $generated@@136) $generated@@555) ($generated@@423 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@153 $generated@@555 ($generated@@423 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@153 $generated@@558 ($generated@@431 $generated@@559 $generated@@560))) (and (= ($generated@@303 ($generated@@395 ($generated@@334 $generated@@136 $generated@@136) $generated@@558)) $generated@@558) ($generated@@151 ($generated@@395 ($generated@@334 $generated@@136 $generated@@136) $generated@@558) ($generated@@431 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@153 $generated@@558 ($generated@@431 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@64) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@136)) ($generated@@153 $generated@@563 ($generated@@170 $generated@@561 $generated@@562))) (and (= ($generated@@303 ($generated@@395 $generated@@171 $generated@@563)) $generated@@563) ($generated@@151 ($generated@@395 $generated@@171 $generated@@563) ($generated@@170 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@153 $generated@@563 ($generated@@170 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@81 ($generated@@451 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@81 ($generated@@451 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@69)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@64) (= (type $generated@@569) $generated@@64)) (and (= ($generated@@72 ($generated@@170 $generated@@568 $generated@@569)) $generated@@62) (= ($generated@@566 ($generated@@170 $generated@@568 $generated@@569)) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@171) (= ($generated@@549 ($generated@@303 $generated@@570)) ($generated@@550 $generated@@570)))
 :pattern ( ($generated@@549 ($generated@@303 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@136) ($generated@@153 $generated@@571 ($generated@@75 0))) (and (= ($generated@@303 ($generated@@395 $generated@@2 $generated@@571)) $generated@@571) ($generated@@151 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@571) ($generated@@75 0))))
 :pattern ( ($generated@@153 $generated@@571 ($generated@@75 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@136) (= (type $generated@@573) $generated@@64)) ($generated@@153 $generated@@572 ($generated@@266 $generated@@573))) (and (= ($generated@@303 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@572)) $generated@@572) ($generated@@151 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@572) ($generated@@266 $generated@@573))))
 :pattern ( ($generated@@153 $generated@@572 ($generated@@266 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@136) (= (type $generated@@575) $generated@@64)) ($generated@@153 $generated@@574 ($generated@@271 $generated@@575))) (and (= ($generated@@303 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@574)) $generated@@574) ($generated@@151 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@574) ($generated@@271 $generated@@575))))
 :pattern ( ($generated@@153 $generated@@574 ($generated@@271 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@136) (= (type $generated@@577) $generated@@64)) ($generated@@153 $generated@@576 ($generated@@184 $generated@@577))) (and (= ($generated@@303 ($generated@@395 ($generated@@76 $generated@@136 $generated@@2) $generated@@576)) $generated@@576) ($generated@@151 ($generated@@395 ($generated@@76 $generated@@136 $generated@@2) $generated@@576) ($generated@@184 $generated@@577))))
 :pattern ( ($generated@@153 $generated@@576 ($generated@@184 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@136) (= (type $generated@@579) $generated@@64)) ($generated@@153 $generated@@578 ($generated@@152 $generated@@579))) (and (= ($generated@@303 ($generated@@395 ($generated@@135 $generated@@136) $generated@@578)) $generated@@578) ($generated@@151 ($generated@@395 ($generated@@135 $generated@@136) $generated@@578) ($generated@@152 $generated@@579))))
 :pattern ( ($generated@@153 $generated@@578 ($generated@@152 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@580 ($generated@@184 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@580 $generated@@583)))) ($generated@@282 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@81 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@184 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@171) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@281 $generated@@586) (and ($generated@@169 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@64) ($generated@@74 $generated@@584 ($generated@@170 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@170 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@282 ($generated@@178 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@282 ($generated@@178 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@171) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@281 $generated@@590) (and ($generated@@169 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@64) ($generated@@74 $generated@@588 ($generated@@170 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@74 $generated@@588 ($generated@@170 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@282 ($generated@@179 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@282 ($generated@@179 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@136) (= (type $generated@@593) $generated@@136)) (= ($generated@@257 ($generated@@277 $generated@@592) ($generated@@277 $generated@@593)) ($generated@@277 ($generated@@257 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@592) ($generated@@277 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@154 $generated@@594))) ($generated@@277 ($generated@@303 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@154 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@303 ($generated@@277 $generated@@595)) ($generated@@277 ($generated@@303 $generated@@595)))
 :pattern ( ($generated@@303 ($generated@@277 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@138 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@135 $generated@@597)) (= ($generated@@155 $generated@@596) 0)) (= $generated@@596 ($generated@@294 $generated@@597))))
 :pattern ( ($generated@@155 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@76 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@308 ($generated@@82 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@308 $generated@@598) ($generated ($generated@@81 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@308 ($generated@@82 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@2)) ($generated@@74 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@3)) ($generated@@74 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@4)) ($generated@@74 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@475)) ($generated@@74 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@136)) ($generated@@74 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@135 $generated@@136)) (= (type $generated@@613) $generated@@64)) (= ($generated@@151 $generated@@612 ($generated@@152 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@155 $generated@@612))) ($generated@@153 ($generated@@156 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@156 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@151 $generated@@612 ($generated@@152 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@155 $generated@@616))) (< ($generated@@550 ($generated@@395 $generated@@171 ($generated@@156 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@550 ($generated@@395 $generated@@171 ($generated@@156 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@64)) ($generated@@151 $generated@@618 ($generated@@423 $generated@@619 $generated@@620))) (and (and ($generated@@151 ($generated@@314 $generated@@618) ($generated@@266 $generated@@619)) ($generated@@151 ($generated@@357 $generated@@618) ($generated@@266 $generated@@620))) ($generated@@151 ($generated@@394 $generated@@618) ($generated@@266 ($generated@@170 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@151 $generated@@618 ($generated@@423 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) $generated@@64)) ($generated@@151 $generated@@621 ($generated@@431 $generated@@622 $generated@@623))) (and (and ($generated@@151 ($generated@@332 $generated@@621) ($generated@@271 $generated@@622)) ($generated@@151 ($generated@@368 $generated@@621) ($generated@@271 $generated@@623))) ($generated@@151 ($generated@@405 $generated@@621) ($generated@@271 ($generated@@170 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@151 $generated@@621 ($generated@@431 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@151 $generated@@624 $generated@@46))
 :pattern ( ($generated@@151 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@151 $generated@@625 $generated@@47))
 :pattern ( ($generated@@151 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@151 $generated@@626 $generated@@44))
 :pattern ( ($generated@@151 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@475) ($generated@@151 $generated@@627 $generated@@45))
 :pattern ( ($generated@@151 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@136) ($generated@@151 $generated@@628 $generated@@48))
 :pattern ( ($generated@@151 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@629) ($generated@@135 $generated@@136)) (= (type $generated@@631) $generated@@136)) (= (type $generated@@633) $generated@@64)) (= (type $generated@@634) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@636) ($generated@@191 $generated@@77 $generated@@4))) (= (type $generated@@637) $generated@@77)) (= (type $generated@@638) ($generated@@191 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@640 true))
(let (($generated@@641  (=> (and (not (= ($generated@@156 $generated@@629 (- $generated@@630 1)) $generated@@631)) (= (ControlFlow 0 5) 3)) $generated@@640)))
(let (($generated@@642  (=> (and (= ($generated@@156 $generated@@629 (- $generated@@630 1)) $generated@@631) (= (ControlFlow 0 4) 3)) $generated@@640)))
(let (($generated@@643  (=> (and (not (= $generated@@632 $generated@@630)) ($generated@@74 $generated@@629 ($generated@@152 $generated@@633) $generated@@634)) (=> (and (and ($generated@@74 ($generated@@8 $generated@@632) $generated@@46 $generated@@634) (= $generated@@635 (- $generated@@630 1))) (and ($generated@@74 ($generated@@8 $generated@@635) $generated@@46 $generated@@634) ($generated@@282 $generated@@631 $generated@@633 $generated@@634))) (and (=> (= (ControlFlow 0 6) (- 0 13)) (<= ($generated@@154 0) $generated@@632)) (and (=> (= (ControlFlow 0 6) (- 0 12)) (<= $generated@@632 $generated@@635)) (and (=> (= (ControlFlow 0 6) (- 0 11)) (<= $generated@@635 ($generated@@155 $generated@@629))) (=> (and (and (<= ($generated@@154 0) $generated@@632) (<= $generated@@632 $generated@@635)) (<= $generated@@635 ($generated@@155 $generated@@629))) (and (=> (= (ControlFlow 0 6) (- 0 10)) (or (or (<= 0 $generated@@632) (< ($generated@@615 $generated@@629) ($generated@@615 $generated@@629))) (= $generated@@632 $generated@@632))) (=> (or (or (<= 0 $generated@@632) (< ($generated@@615 $generated@@629) ($generated@@615 $generated@@629))) (= $generated@@632 $generated@@632)) (and (=> (= (ControlFlow 0 6) (- 0 9)) (or (or (or (<= 0 $generated@@630) (< ($generated@@615 $generated@@629) ($generated@@615 $generated@@629))) (< $generated@@632 $generated@@632)) (= $generated@@635 $generated@@630))) (=> (or (or (or (<= 0 $generated@@630) (< ($generated@@615 $generated@@629) ($generated@@615 $generated@@629))) (< $generated@@632 $generated@@632)) (= $generated@@635 $generated@@630)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (< ($generated@@615 $generated@@629) ($generated@@615 $generated@@629)) (and (= ($generated@@615 $generated@@629) ($generated@@615 $generated@@629)) (or (< $generated@@632 $generated@@632) (and (= $generated@@632 $generated@@632) (< $generated@@635 $generated@@630)))))) (=> (or (< ($generated@@615 $generated@@629) ($generated@@615 $generated@@629)) (and (= ($generated@@615 $generated@@629) ($generated@@615 $generated@@629)) (or (< $generated@@632 $generated@@632) (and (= $generated@@632 $generated@@632) (< $generated@@635 $generated@@630))))) (=> ($generated@@150 $generated@@633 $generated@@629 $generated@@632 (- $generated@@630 1) $generated@@631) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 (- $generated@@630 1)) (< (- $generated@@630 1) ($generated@@155 $generated@@629)))) (=> (and (<= 0 (- $generated@@630 1)) (< (- $generated@@630 1) ($generated@@155 $generated@@629))) (and (=> (= (ControlFlow 0 6) 4) $generated@@642) (=> (= (ControlFlow 0 6) 5) $generated@@641)))))))))))))))))))
(let (($generated@@644 true))
(let (($generated@@645  (=> (= $generated@@636 ($generated@@245 $generated@@637 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 2) $generated@@644) (=> (= (ControlFlow 0 14) 6) $generated@@643)))))
(let (($generated@@646 true))
(let (($generated@@647  (=> (and (and (<= ($generated@@154 0) $generated@@632) (<= $generated@@632 $generated@@630)) (<= $generated@@630 ($generated@@155 $generated@@629))) (and (=> (= (ControlFlow 0 15) 1) $generated@@646) (=> (= (ControlFlow 0 15) 14) $generated@@645)))))
(let (($generated@@648  (=> (and (not (and (<= ($generated@@154 0) $generated@@632) (<= $generated@@632 $generated@@630))) (= (ControlFlow 0 17) 15)) $generated@@647)))
(let (($generated@@649  (=> (and (and (<= ($generated@@154 0) $generated@@632) (<= $generated@@632 $generated@@630)) (= (ControlFlow 0 16) 15)) $generated@@647)))
(let (($generated@@650  (=> (< $generated@@632 ($generated@@154 0)) (and (=> (= (ControlFlow 0 19) 16) $generated@@649) (=> (= (ControlFlow 0 19) 17) $generated@@648)))))
(let (($generated@@651  (=> (<= ($generated@@154 0) $generated@@632) (and (=> (= (ControlFlow 0 18) 16) $generated@@649) (=> (= (ControlFlow 0 18) 17) $generated@@648)))))
(let (($generated@@652  (=> (= $generated@@638 ($generated@@190 $generated@@637 $generated@@634 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) 18) $generated@@651) (=> (= (ControlFlow 0 20) 19) $generated@@650)))))
(let (($generated@@653  (=> (and ($generated@@281 $generated@@634) ($generated@@639 $generated@@634)) (=> (and (and ($generated@@151 $generated@@629 ($generated@@152 $generated@@633)) ($generated@@153 $generated@@631 $generated@@633)) (and (= 0 $generated@@148) (= (ControlFlow 0 21) 20))) $generated@@652))))
$generated@@653)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U Int) T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@197 (T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@199 (T@T T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@265 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@T) T@U)
(declare-fun $generated@@493 () T@T)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ) (! (let (($generated@@169 ($generated@@87 (type $generated@@167))))
(= (type ($generated@@166 $generated@@167 $generated@@168)) $generated@@169))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ($generated@@175 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@170) $generated@@64) (= (type $generated@@171) $generated@@88)) (= (type $generated@@172) ($generated@@74 $generated@@75))) (= (type $generated@@175) $generated@@75)) (or ($generated@@82 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@172 ($generated@@78 $generated@@170)) ($generated@@79 $generated@@175 $generated@@170)) (and (and (<= ($generated@@80 0) $generated@@173) (<= $generated@@173 $generated@@174)) (<= $generated@@174 ($generated@@81 $generated@@172))))))) (and (=> (not (= $generated@@173 $generated@@174)) ($generated@@82 $generated@@170 $generated@@172 $generated@@173 (- $generated@@174 1) $generated@@175)) (= ($generated@@84 $generated@@170 ($generated@@85 $generated@@171) $generated@@172 $generated@@173 $generated@@174 $generated@@175) (ite (= $generated@@173 $generated@@174) 0 (+ ($generated@@84 $generated@@170 $generated@@171 $generated@@172 $generated@@173 (- $generated@@174 1) $generated@@175) (ite (= ($generated@@166 $generated@@172 (- $generated@@174 1)) $generated@@175) 1 0))))))
 :pattern ( ($generated@@84 $generated@@170 ($generated@@85 $generated@@171) $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= (type $generated@@176) $generated@@2) ($generated@@77 $generated@@176 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@176 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@179) 17) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@180 $generated@@181)) $generated@@64)
 :pattern ( ($generated@@178 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and (and (= (type $generated@@182) $generated@@64) (= (type $generated@@183) $generated@@64)) (= (type $generated@@184) $generated@@179)) ($generated@@77 $generated@@184 ($generated@@178 $generated@@182 $generated@@183))) ($generated@@177 $generated@@184))
 :pattern ( ($generated@@177 $generated@@184) ($generated@@77 $generated@@184 ($generated@@178 $generated@@182 $generated@@183)))
)))
(assert  (and (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@75)
 :pattern ( ($generated@@186 $generated@@188))
)) (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@75)
 :pattern ( ($generated@@187 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@190) $generated@@179) (= (type $generated@@191) $generated@@179)) true) (= ($generated@@185 $generated@@190 $generated@@191)  (and (= ($generated@@186 $generated@@190) ($generated@@186 $generated@@191)) (= ($generated@@187 $generated@@190) ($generated@@187 $generated@@191)))))
 :pattern ( ($generated@@185 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@64)
 :pattern ( ($generated@@192 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@196) $generated@@64)) ($generated@@77 $generated@@195 ($generated@@192 $generated@@196))) ($generated@@193 $generated@@195))
 :pattern ( ($generated@@77 $generated@@195 ($generated@@192 $generated@@196)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (= ($generated@@1 ($generated@@199 $generated@@203 $generated@@204)) 18)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@205 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@199 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@201 ($generated@@199 $generated@@207 $generated@@208)) $generated@@208)
 :pattern ( ($generated@@199 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@201 (type $generated@@209))))
(= (type ($generated@@197 $generated@@209 $generated@@210 $generated@@211)) $generated@@212))
 :pattern ( ($generated@@197 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(let (($generated@@218 (type $generated@@214)))
(= (type ($generated@@202 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@199 $generated@@218 $generated@@217))))
 :pattern ( ($generated@@202 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@201 (type $generated@@219))))
 (=> (= (type $generated@@222) $generated@@223) (= ($generated@@197 ($generated@@202 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@220 $generated@@221) $generated@@222)))
 :weight 0
))) (and (and (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@197 ($generated@@202 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@197 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@233 $generated@@235) (= ($generated@@197 ($generated@@202 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@197 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or true (= ($generated@@197 ($generated@@202 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@197 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ) (! (= (type ($generated@@198 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@199 $generated@@103 $generated@@4))
 :pattern ( ($generated@@198 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@67 (type $generated@@251))))
 (=> (and (and (and (and (= (type $generated@@246) $generated@@103) (= (type $generated@@247) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@248) ($generated@@66 $generated@@4))) (= (type $generated@@250) $generated@@103)) (= (type $generated@@251) ($generated@@66 $generated@@252))) (= ($generated@@0 ($generated@@197 ($generated@@198 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))  (=> (and (not (= $generated@@250 $generated@@246)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@247 $generated@@250) $generated@@248))) $generated@@249))))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@199 $generated@@103 $generated@@4))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@67 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@103) (= (type $generated@@259) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@260) ($generated@@66 $generated@@4))) (= (type $generated@@262) $generated@@103)) (= (type $generated@@263) ($generated@@66 $generated@@264))) (= ($generated@@0 ($generated@@197 ($generated@@253 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@197 ($generated@@253 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@265 $generated@@266 $generated@@267)) $generated@@179)
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) $generated@@64)) (= (type $generated@@270) $generated@@75)) (= (type $generated@@271) $generated@@75)) (= ($generated@@77 ($generated@@265 $generated@@270 $generated@@271) ($generated@@178 $generated@@268 $generated@@269))  (and ($generated@@79 $generated@@270 $generated@@268) ($generated@@79 $generated@@271 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@265 $generated@@270 $generated@@271) ($generated@@178 $generated@@268 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@179) (= (type $generated@@273) $generated@@179)) (= ($generated@@185 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@185 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@64)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@277) $generated@@64)) (= ($generated@@77 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@75) ($generated@@0 ($generated@@107 $generated@@276 $generated@@278))) ($generated@@79 $generated@@278 $generated@@277))
 :pattern ( ($generated@@107 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@77 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@64)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@282) $generated@@64)) (= ($generated@@77 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@75) ($generated@@0 ($generated@@107 $generated@@281 $generated@@283))) ($generated@@79 $generated@@283 $generated@@282))
 :pattern ( ($generated@@107 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@77 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@80 $generated@@284) $generated@@284)
 :pattern ( ($generated@@80 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) $generated@@64)) (= (type $generated@@293) $generated@@75)) (= (type $generated@@294) $generated@@75)) (= (type $generated@@295) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@289 $generated@@295)) (= ($generated@@100 ($generated@@265 $generated@@293 $generated@@294) ($generated@@178 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@100 ($generated@@265 $generated@@293 $generated@@294) ($generated@@178 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@68)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@179) (= ($generated@@177 $generated@@298) (= ($generated@@296 $generated@@298) $generated@@61)))
 :pattern ( ($generated@@177 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@179) ($generated@@177 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@75) (= (type $generated@@301) $generated@@75)) (= $generated@@299 ($generated@@265 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@177 $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@74 $generated@@303))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@81 ($generated@@302 $generated@@304)) 0)
 :pattern ( ($generated@@302 $generated@@304))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 Int) ($generated@@309 Int) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@305) $generated@@64) (= (type $generated@@306) $generated@@88)) (= (type $generated@@307) ($generated@@74 $generated@@75))) (= (type $generated@@310) $generated@@75)) (or ($generated@@82 $generated@@305 ($generated@@285 $generated@@307) ($generated@@80 $generated@@308) ($generated@@80 $generated@@309) $generated@@310) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@307 ($generated@@78 $generated@@305)) ($generated@@79 $generated@@310 $generated@@305)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@308)) (<= ($generated@@80 $generated@@308) ($generated@@80 $generated@@309))) (<= ($generated@@80 $generated@@309) ($generated@@81 ($generated@@285 $generated@@307)))))))) (and (=> (not (= ($generated@@80 $generated@@308) ($generated@@80 $generated@@309))) ($generated@@82 $generated@@305 ($generated@@285 $generated@@307) ($generated@@80 $generated@@308) ($generated@@80 (- $generated@@309 1)) $generated@@310)) (= ($generated@@84 $generated@@305 ($generated@@85 $generated@@306) ($generated@@285 $generated@@307) ($generated@@80 $generated@@308) ($generated@@80 $generated@@309) $generated@@310) (ite (= ($generated@@80 $generated@@308) ($generated@@80 $generated@@309)) 0 (+ ($generated@@84 $generated@@305 ($generated@@85 $generated@@306) ($generated@@285 $generated@@307) ($generated@@80 $generated@@308) ($generated@@80 (- $generated@@309 1)) $generated@@310) (ite (= ($generated@@166 ($generated@@285 $generated@@307) ($generated@@80 (- $generated@@309 1))) $generated@@310) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@305 ($generated@@85 $generated@@306) ($generated@@285 $generated@@307) ($generated@@80 $generated@@308) ($generated@@80 $generated@@309) $generated@@310))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 Int) ($generated@@314 Int) ($generated@@315 T@U) ) (!  (=> (and (and (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@74 $generated@@75))) (= (type $generated@@315) $generated@@75)) (or ($generated@@76 $generated@@311 ($generated@@285 $generated@@312) ($generated@@80 $generated@@313) ($generated@@80 $generated@@314) ($generated@@285 $generated@@315)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@312 ($generated@@78 $generated@@311)) ($generated@@79 $generated@@315 $generated@@311)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@313)) (<= ($generated@@80 $generated@@313) ($generated@@80 $generated@@314))) (<= ($generated@@80 $generated@@314) ($generated@@81 ($generated@@285 $generated@@312)))))))) (and ($generated@@82 $generated@@311 ($generated@@285 $generated@@312) ($generated@@80 $generated@@313) ($generated@@80 $generated@@314) ($generated@@285 $generated@@315)) (= ($generated@@73 $generated@@311 ($generated@@285 $generated@@312) ($generated@@80 $generated@@313) ($generated@@80 $generated@@314) ($generated@@285 $generated@@315)) ($generated@@0 ($generated@@285 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@311 ($generated@@85 $generated@@86) ($generated@@285 $generated@@312) ($generated@@80 $generated@@313) ($generated@@80 $generated@@314) ($generated@@285 $generated@@315)))) (- $generated@@314 $generated@@313))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@311 ($generated@@285 $generated@@312) ($generated@@80 $generated@@313) ($generated@@80 $generated@@314) ($generated@@285 $generated@@315)))
))))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@75)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@64) (= (type $generated@@320) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@290 ($generated@@316 $generated@@318) $generated@@319 $generated@@320) ($generated@@100 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@290 ($generated@@316 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@193 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@193 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@192 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@192 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@274 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@290 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@274 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@279 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@290 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@279 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@186 ($generated@@413 $generated@@179 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@186 ($generated@@413 $generated@@179 $generated@@422))) ($generated@@187 ($generated@@413 $generated@@179 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@186 ($generated@@413 $generated@@179 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@186 ($generated@@413 $generated@@179 $generated@@430))) ($generated@@187 ($generated@@413 $generated@@179 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@290 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@290 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@290 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@290 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 Int) ($generated@@467 Int) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@88)) (= (type $generated@@465) ($generated@@74 $generated@@75))) (= (type $generated@@468) $generated@@75)) (or ($generated@@82 $generated@@463 ($generated@@285 $generated@@465) ($generated@@80 $generated@@466) ($generated@@80 $generated@@467) ($generated@@285 $generated@@468)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@465 ($generated@@78 $generated@@463)) ($generated@@79 $generated@@468 $generated@@463)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@466)) (<= ($generated@@80 $generated@@466) ($generated@@80 $generated@@467))) (<= ($generated@@80 $generated@@467) ($generated@@81 ($generated@@285 $generated@@465)))))))) (and (=> (not (= ($generated@@80 $generated@@466) ($generated@@80 $generated@@467))) ($generated@@82 $generated@@463 ($generated@@285 $generated@@465) ($generated@@80 $generated@@466) ($generated@@80 (- $generated@@467 1)) ($generated@@285 $generated@@468))) (= ($generated@@84 $generated@@463 ($generated@@85 $generated@@464) ($generated@@285 $generated@@465) ($generated@@80 $generated@@466) ($generated@@80 $generated@@467) ($generated@@285 $generated@@468)) (ite (= ($generated@@80 $generated@@466) ($generated@@80 $generated@@467)) 0 (+ ($generated@@84 $generated@@463 ($generated@@85 $generated@@464) ($generated@@285 $generated@@465) ($generated@@80 $generated@@466) ($generated@@80 (- $generated@@467 1)) ($generated@@285 $generated@@468)) (ite (= ($generated@@166 ($generated@@285 $generated@@465) ($generated@@80 (- $generated@@467 1))) ($generated@@285 $generated@@468)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@463 ($generated@@85 $generated@@464) ($generated@@285 $generated@@465) ($generated@@80 $generated@@466) ($generated@@80 $generated@@467) ($generated@@285 $generated@@468)))
))))
(assert (forall (($generated@@470 T@T) ) (! (= (type ($generated@@469 $generated@@470)) ($generated@@102 $generated@@470 $generated@@4))
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@349 (type $generated@@471))))
(let (($generated@@473 ($generated@@348 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@347 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@346 $generated@@473 $generated@@472)) (= ($generated@@345 $generated@@471) ($generated@@469 $generated@@473))))))
 :pattern ( ($generated@@345 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@381 $generated@@474) ($generated@@469 $generated@@475))))))
 :pattern ( ($generated@@381 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@423 $generated@@477) ($generated@@469 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@331 (type $generated@@480))))
(let (($generated@@482 ($generated@@330 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@329 $generated@@482 $generated@@481)) (or (= $generated@@480 ($generated@@328 $generated@@482 $generated@@481)) (exists (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (and (and (= (type $generated@@483) $generated@@75) (= (type $generated@@484) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@480) ($generated@@316 ($generated@@265 $generated@@483 $generated@@484)))))
 :no-pattern (type $generated@@483)
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@412 $generated@@480))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@349 (type $generated@@485))))
(let (($generated@@487 ($generated@@348 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@347 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@346 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (and (and (= (type $generated@@488) $generated@@75) (= (type $generated@@489) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@485) ($generated@@316 ($generated@@265 $generated@@488 $generated@@489)))))
 :no-pattern (type $generated@@488)
 :no-pattern (type $generated@@489)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
))))))
 :pattern ( ($generated@@423 $generated@@485))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@75) ($generated@@79 $generated@@490 $generated@@46)) (and (= ($generated@@316 ($generated@@413 $generated@@2 $generated@@490)) $generated@@490) ($generated@@77 ($generated@@413 $generated@@2 $generated@@490) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@490 $generated@@46))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@75) ($generated@@79 $generated@@491 $generated@@47)) (and (= ($generated@@316 ($generated@@413 $generated@@3 $generated@@491)) $generated@@491) ($generated@@77 ($generated@@413 $generated@@3 $generated@@491) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@491 $generated@@47))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@75) ($generated@@79 $generated@@492 $generated@@44)) (and (= ($generated@@316 ($generated@@413 $generated@@4 $generated@@492)) $generated@@492) ($generated@@77 ($generated@@413 $generated@@4 $generated@@492) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@492 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@493) 21))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@45)) (and (= ($generated@@316 ($generated@@413 $generated@@493 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@493 $generated@@494) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@45))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@79 ($generated@@316 $generated@@495) $generated@@496) ($generated@@77 $generated@@495 $generated@@496)))
 :pattern ( ($generated@@79 ($generated@@316 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@105 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@102 $generated@@498 $generated@@2)) (<= 0 ($generated@@321 $generated@@497))))
 :pattern ( ($generated@@321 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@87 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@74 $generated@@500)) (<= 0 ($generated@@81 $generated@@499))))
 :pattern ( ($generated@@81 $generated@@499))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@501 ($generated@@441 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@441 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@505 ($generated@@441 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@441 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@509 $generated@@510)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= ($generated@@511 ($generated@@449 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@449 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@515 ($generated@@449 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@449 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@519 $generated@@520)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@75) (= (type $generated@@522) $generated@@75)) (= ($generated@@296 ($generated@@265 $generated@@521 $generated@@522)) $generated@@61))
 :pattern ( ($generated@@265 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= ($generated@@523 ($generated@@178 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@178 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= ($generated@@527 ($generated@@178 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@178 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@75) (= (type $generated@@532) $generated@@75)) (= ($generated@@186 ($generated@@265 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@265 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@75) (= (type $generated@@534) $generated@@75)) (= ($generated@@187 ($generated@@265 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@265 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@74 $generated@@75)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@535 ($generated@@78 $generated@@536) $generated@@537) (forall (($generated@@538 Int) ) (!  (=> (and (<= 0 $generated@@538) (< $generated@@538 ($generated@@81 $generated@@535))) ($generated@@290 ($generated@@166 $generated@@535 $generated@@538) $generated@@536 $generated@@537))
 :pattern ( ($generated@@166 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@100 $generated@@535 ($generated@@78 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@539 ($generated@@101 $generated@@540)) $generated@@540)
 :pattern ( ($generated@@101 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@64)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@64) (= ($generated@@541 ($generated@@274 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@274 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@64) (= ($generated@@98 ($generated@@274 $generated@@544)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@545 ($generated@@279 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@279 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@64) (= ($generated@@98 ($generated@@279 $generated@@548)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@549 ($generated@@192 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@192 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@98 ($generated@@192 $generated@@552)) $generated@@56))
 :pattern ( ($generated@@192 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@64)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@553 ($generated@@78 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@78 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@556)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@413 $generated@@558 ($generated@@316 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@316 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) $generated@@64)) (= ($generated@@77 $generated@@559 ($generated@@441 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@559) $generated@@562))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@559) $generated@@562) $generated@@561) ($generated@@79 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@559) $generated@@562))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@77 $generated@@559 ($generated@@441 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) (= ($generated@@77 $generated@@563 ($generated@@449 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@563) $generated@@566))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@563) $generated@@566) $generated@@565) ($generated@@79 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@563) $generated@@566))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@449 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) (= (type $generated@@570) $generated@@75)) (< ($generated@@567 $generated@@569) ($generated@@568 ($generated@@265 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@265 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@75) (= (type $generated@@572) $generated@@75)) (< ($generated@@567 $generated@@572) ($generated@@568 ($generated@@265 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@265 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@75) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) $generated@@64)) ($generated@@79 $generated@@573 ($generated@@441 $generated@@574 $generated@@575))) (and (= ($generated@@316 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@573)) $generated@@573) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@573) ($generated@@441 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@79 $generated@@573 ($generated@@441 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@449 $generated@@577 $generated@@578))) (and (= ($generated@@316 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@576) ($generated@@449 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@449 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@64) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@75)) ($generated@@79 $generated@@581 ($generated@@178 $generated@@579 $generated@@580))) (and (= ($generated@@316 ($generated@@413 $generated@@179 $generated@@581)) $generated@@581) ($generated@@77 ($generated@@413 $generated@@179 $generated@@581) ($generated@@178 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@178 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (not ($generated@@0 ($generated@@107 ($generated@@469 $generated@@583) $generated@@582))))
 :pattern ( (let (($generated@@583 (type $generated@@582)))
($generated@@107 ($generated@@469 $generated@@583) $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= (type ($generated@@584 $generated@@585)) $generated@@69)
 :pattern ( ($generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@64) (= (type $generated@@587) $generated@@64)) (and (= ($generated@@98 ($generated@@178 $generated@@586 $generated@@587)) $generated@@62) (= ($generated@@584 ($generated@@178 $generated@@586 $generated@@587)) $generated@@63)))
 :pattern ( ($generated@@178 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 Int) ($generated@@589 Int) ) (! (= ($generated@@83 $generated@@588 $generated@@589) (* $generated@@588 $generated@@589))
 :pattern ( ($generated@@83 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@179) (= ($generated@@567 ($generated@@316 $generated@@590)) ($generated@@568 $generated@@590)))
 :pattern ( ($generated@@567 ($generated@@316 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@75) ($generated@@79 $generated@@591 ($generated@@101 0))) (and (= ($generated@@316 ($generated@@413 $generated@@2 $generated@@591)) $generated@@591) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@591) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@591 ($generated@@101 0)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@75) (= (type $generated@@593) $generated@@64)) ($generated@@79 $generated@@592 ($generated@@274 $generated@@593))) (and (= ($generated@@316 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@592)) $generated@@592) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@592) ($generated@@274 $generated@@593))))
 :pattern ( ($generated@@79 $generated@@592 ($generated@@274 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@75) (= (type $generated@@595) $generated@@64)) ($generated@@79 $generated@@594 ($generated@@279 $generated@@595))) (and (= ($generated@@316 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@279 $generated@@595))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@279 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@75) (= (type $generated@@597) $generated@@64)) ($generated@@79 $generated@@596 ($generated@@192 $generated@@597))) (and (= ($generated@@316 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@596)) $generated@@596) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@596) ($generated@@192 $generated@@597))))
 :pattern ( ($generated@@79 $generated@@596 ($generated@@192 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@75) (= (type $generated@@599) $generated@@64)) ($generated@@79 $generated@@598 ($generated@@78 $generated@@599))) (and (= ($generated@@316 ($generated@@413 ($generated@@74 $generated@@75) $generated@@598)) $generated@@598) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@598) ($generated@@78 $generated@@599))))
 :pattern ( ($generated@@79 $generated@@598 ($generated@@78 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@600 ($generated@@192 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@600 $generated@@603)))) ($generated@@290 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@107 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@100 $generated@@600 ($generated@@192 $generated@@601) $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@179) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@289 $generated@@606) (and ($generated@@177 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@64) ($generated@@100 $generated@@604 ($generated@@178 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@100 $generated@@604 ($generated@@178 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@290 ($generated@@186 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@290 ($generated@@186 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@179) (= (type $generated@@609) $generated@@64)) (= (type $generated@@610) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@289 $generated@@610) (and ($generated@@177 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@64) ($generated@@100 $generated@@608 ($generated@@178 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@100 $generated@@608 ($generated@@178 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@290 ($generated@@187 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@290 ($generated@@187 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@75) (= (type $generated@@613) $generated@@75)) (= ($generated@@265 ($generated@@285 $generated@@612) ($generated@@285 $generated@@613)) ($generated@@285 ($generated@@265 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@265 ($generated@@285 $generated@@612) ($generated@@285 $generated@@613)))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@316 ($generated@@8 ($generated@@80 $generated@@614))) ($generated@@285 ($generated@@316 ($generated@@8 $generated@@614))))
 :pattern ( ($generated@@316 ($generated@@8 ($generated@@80 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@316 ($generated@@285 $generated@@615)) ($generated@@285 ($generated@@316 $generated@@615)))
 :pattern ( ($generated@@316 ($generated@@285 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@87 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@74 $generated@@617)) (= ($generated@@81 $generated@@616) 0)) (= $generated@@616 ($generated@@302 $generated@@617))))
 :pattern ( ($generated@@81 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@102 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@321 ($generated@@108 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@321 $generated@@618) ($generated ($generated@@107 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 Int) ($generated@@625 Int) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@64) (= (type $generated@@623) ($generated@@74 $generated@@75))) (= (type $generated@@626) $generated@@75)) (or ($generated@@76 $generated@@622 ($generated@@285 $generated@@623) ($generated@@80 $generated@@624) ($generated@@80 $generated@@625) $generated@@626) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@623 ($generated@@78 $generated@@622)) ($generated@@79 $generated@@626 $generated@@622)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@624)) (<= ($generated@@80 $generated@@624) ($generated@@80 $generated@@625))) (<= ($generated@@80 $generated@@625) ($generated@@81 ($generated@@285 $generated@@623)))))))) (and ($generated@@82 $generated@@622 ($generated@@285 $generated@@623) ($generated@@80 $generated@@624) ($generated@@80 $generated@@625) $generated@@626) (= ($generated@@73 $generated@@622 ($generated@@285 $generated@@623) ($generated@@80 $generated@@624) ($generated@@80 $generated@@625) $generated@@626) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@622 ($generated@@85 $generated@@86) ($generated@@285 $generated@@623) ($generated@@80 $generated@@624) ($generated@@80 $generated@@625) $generated@@626)) (- $generated@@625 $generated@@624)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@622 ($generated@@285 $generated@@623) ($generated@@80 $generated@@624) ($generated@@80 $generated@@625) $generated@@626))
))))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@628) $generated@@2)) ($generated@@100 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@100 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@630) $generated@@3)) ($generated@@100 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@100 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@632) $generated@@4)) ($generated@@100 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@100 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@634) $generated@@493)) ($generated@@100 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@100 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@636) $generated@@75)) ($generated@@100 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@100 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@74 $generated@@75)) (= (type $generated@@638) $generated@@64)) (= ($generated@@77 $generated@@637 ($generated@@78 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@81 $generated@@637))) ($generated@@79 ($generated@@166 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@166 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@77 $generated@@637 ($generated@@78 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@641))) (< ($generated@@568 ($generated@@413 $generated@@179 ($generated@@166 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@568 ($generated@@413 $generated@@179 ($generated@@166 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) $generated@@64)) ($generated@@77 $generated@@643 ($generated@@441 $generated@@644 $generated@@645))) (and (and ($generated@@77 ($generated@@327 $generated@@643) ($generated@@274 $generated@@644)) ($generated@@77 ($generated@@370 $generated@@643) ($generated@@274 $generated@@645))) ($generated@@77 ($generated@@412 $generated@@643) ($generated@@274 ($generated@@178 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@77 $generated@@643 ($generated@@441 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@449 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@345 $generated@@646) ($generated@@279 $generated@@647)) ($generated@@77 ($generated@@381 $generated@@646) ($generated@@279 $generated@@648))) ($generated@@77 ($generated@@423 $generated@@646) ($generated@@279 ($generated@@178 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@449 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@2) ($generated@@77 $generated@@649 $generated@@46))
 :pattern ( ($generated@@77 $generated@@649 $generated@@46))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@3) ($generated@@77 $generated@@650 $generated@@47))
 :pattern ( ($generated@@77 $generated@@650 $generated@@47))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@4) ($generated@@77 $generated@@651 $generated@@44))
 :pattern ( ($generated@@77 $generated@@651 $generated@@44))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@493) ($generated@@77 $generated@@652 $generated@@45))
 :pattern ( ($generated@@77 $generated@@652 $generated@@45))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@75) ($generated@@77 $generated@@653 $generated@@48))
 :pattern ( ($generated@@77 $generated@@653 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@654) ($generated@@199 $generated@@103 $generated@@4)) (= (type $generated@@655) $generated@@103)) (= (type $generated@@656) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@657) ($generated@@74 $generated@@75))) (= (type $generated@@658) $generated@@64)) (= (type $generated@@661) $generated@@75)) (= (type $generated@@662) ($generated@@199 $generated@@103 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@664  (=> (= $generated@@654 ($generated@@253 $generated@@655 $generated@@656 $generated@@60 false)) (=> (and (and ($generated@@100 $generated@@657 ($generated@@78 $generated@@658) $generated@@656) ($generated@@100 ($generated@@8 $generated@@659) $generated@@46 $generated@@656)) (and ($generated@@100 ($generated@@8 $generated@@660) $generated@@46 $generated@@656) ($generated@@290 $generated@@661 $generated@@658 $generated@@656))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@80 0) $generated@@659)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= $generated@@659 $generated@@660)) (=> (= (ControlFlow 0 3) (- 0 2)) (<= $generated@@660 ($generated@@81 $generated@@657)))))))))
(let (($generated@@665 true))
(let (($generated@@666  (=> (and (and (<= ($generated@@80 0) $generated@@659) (<= $generated@@659 $generated@@660)) (<= $generated@@660 ($generated@@81 $generated@@657))) (and (=> (= (ControlFlow 0 6) 1) $generated@@665) (=> (= (ControlFlow 0 6) 3) $generated@@664)))))
(let (($generated@@667  (=> (and (not (and (<= ($generated@@80 0) $generated@@659) (<= $generated@@659 $generated@@660))) (= (ControlFlow 0 8) 6)) $generated@@666)))
(let (($generated@@668  (=> (and (and (<= ($generated@@80 0) $generated@@659) (<= $generated@@659 $generated@@660)) (= (ControlFlow 0 7) 6)) $generated@@666)))
(let (($generated@@669  (=> (< $generated@@659 ($generated@@80 0)) (and (=> (= (ControlFlow 0 10) 7) $generated@@668) (=> (= (ControlFlow 0 10) 8) $generated@@667)))))
(let (($generated@@670  (=> (<= ($generated@@80 0) $generated@@659) (and (=> (= (ControlFlow 0 9) 7) $generated@@668) (=> (= (ControlFlow 0 9) 8) $generated@@667)))))
(let (($generated@@671  (=> (= $generated@@662 ($generated@@198 $generated@@655 $generated@@656 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@670) (=> (= (ControlFlow 0 11) 10) $generated@@669)))))
(let (($generated@@672  (=> (and ($generated@@289 $generated@@656) ($generated@@663 $generated@@656)) (=> (and (and ($generated@@77 $generated@@657 ($generated@@78 $generated@@658)) ($generated@@79 $generated@@661 $generated@@658)) (and (= 1 $generated@@72) (= (ControlFlow 0 12) 11))) $generated@@671))))
$generated@@672))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@168) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 ($generated@@87 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ($generated@@179 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@88)) (= (type $generated@@176) ($generated@@74 $generated@@75))) (= (type $generated@@179) $generated@@75)) (or ($generated@@82 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@179) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@176 ($generated@@78 $generated@@174)) ($generated@@79 $generated@@179 $generated@@174)) (and (and (<= ($generated@@80 0) $generated@@177) (<= $generated@@177 $generated@@178)) (<= $generated@@178 ($generated@@81 $generated@@176))))))) (and (=> (not (= $generated@@177 $generated@@178)) ($generated@@82 $generated@@174 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179)) (= ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179) (ite (= $generated@@177 $generated@@178) 0 (+ ($generated@@84 $generated@@174 $generated@@175 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179) (ite (= ($generated@@170 $generated@@176 (- $generated@@178 1)) $generated@@179) 1 0))))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@77 $generated@@180 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@180 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@64) (= (type $generated@@187) $generated@@64)) (= (type $generated@@188) $generated@@183)) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@75)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@200) $generated@@64)) ($generated@@77 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@77 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 18)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@103 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@103) (= (type $generated@@251) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@103)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@183)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@75)) (= (type $generated@@263) $generated@@75)) (= ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261))  (and ($generated@@79 $generated@@262 $generated@@260) ($generated@@79 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@183) (= (type $generated@@265) $generated@@183)) (= ($generated@@189 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@189 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@75) ($generated@@0 ($generated@@107 $generated@@268 $generated@@270))) ($generated@@79 $generated@@270 $generated@@269))
 :pattern ( ($generated@@107 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@75) ($generated@@0 ($generated@@107 $generated@@273 $generated@@275))) ($generated@@79 $generated@@275 $generated@@274))
 :pattern ( ($generated@@107 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@75)) (= (type $generated@@287) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@281 $generated@@287)) (= ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@183) (= ($generated@@181 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@183) ($generated@@181 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@75) (= (type $generated@@293) $generated@@75)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@181 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@74 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@81 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@74 $generated@@75))) (= (type $generated@@302) $generated@@75)) (or ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@299 ($generated@@78 $generated@@297)) ($generated@@79 $generated@@302 $generated@@297)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@300)) (<= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) (<= ($generated@@80 $generated@@301) ($generated@@81 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302)) (= ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (ite (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301)) 0 (+ ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@170 ($generated@@277 $generated@@299) ($generated@@80 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@74 $generated@@75))) (= (type $generated@@307) $generated@@75)) (or ($generated@@76 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@304 ($generated@@78 $generated@@303)) ($generated@@79 $generated@@307 $generated@@303)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@305)) (<= ($generated@@80 $generated@@305) ($generated@@80 $generated@@306))) (<= ($generated@@80 $generated@@306) ($generated@@81 ($generated@@277 $generated@@304)))))))) (and ($generated@@82 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (= ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) ($generated@@0 ($generated@@277 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@303 ($generated@@85 $generated@@86) ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))) (- $generated@@306 $generated@@305))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@75)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@100 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@314) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@315) $generated@@75)) (= (type $generated@@316) $generated@@64)) ($generated@@166 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@166 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@318) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@320) $generated@@64)) ($generated@@166 $generated@@317 $generated@@318)) ($generated@@100 $generated@@319 $generated@@320 $generated@@317)) ($generated@@100 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@166 $generated@@317 $generated@@318) ($generated@@100 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@197 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@197 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@282 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@282 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@464) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@465) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@463 $generated@@465))) (and ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))) ($generated@@166 $generated@@463 $generated@@465))
 :pattern ( ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@88)) (= (type $generated@@468) ($generated@@74 $generated@@75))) (= (type $generated@@471) $generated@@75)) (or ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@468 ($generated@@78 $generated@@466)) ($generated@@79 $generated@@471 $generated@@466)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@469)) (<= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) (<= ($generated@@80 $generated@@470) ($generated@@81 ($generated@@277 $generated@@468)))))))) (and (=> (not (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471))) (= ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (ite (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470)) 0 (+ ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471)) (ite (= ($generated@@170 ($generated@@277 $generated@@468) ($generated@@80 (- $generated@@470 1))) ($generated@@277 $generated@@471)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)))
))))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@102 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@345 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@345 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@381 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@381 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@349 (type $generated@@480))))
(let (($generated@@482 ($generated@@348 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@347 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@346 $generated@@482 $generated@@481)) (= ($generated@@423 $generated@@480) ($generated@@472 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@331 (type $generated@@483))))
(let (($generated@@485 ($generated@@330 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@329 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@328 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@75) (= (type $generated@@487) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@483) ($generated@@308 ($generated@@257 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@412 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@488) ($generated@@308 ($generated@@257 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@423 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) ($generated@@79 $generated@@493 $generated@@46)) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@493)) $generated@@493) ($generated@@77 ($generated@@413 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@47)) (and (= ($generated@@308 ($generated@@413 $generated@@3 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@75) ($generated@@79 $generated@@495 $generated@@44)) (and (= ($generated@@308 ($generated@@413 $generated@@4 $generated@@495)) $generated@@495) ($generated@@77 ($generated@@413 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) ($generated@@79 $generated@@497 $generated@@45)) (and (= ($generated@@308 ($generated@@413 $generated@@496 $generated@@497)) $generated@@497) ($generated@@77 ($generated@@413 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@79 ($generated@@308 $generated@@498) $generated@@499) ($generated@@77 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@79 ($generated@@308 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@105 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@102 $generated@@501 $generated@@2)) (<= 0 ($generated@@321 $generated@@500))))
 :pattern ( ($generated@@321 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@87 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@74 $generated@@503)) (<= 0 ($generated@@81 $generated@@502))))
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@441 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@441 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@441 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@449 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@449 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@449 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@288 ($generated@@257 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@75) (= (type $generated@@535) $generated@@75)) (= ($generated@@190 ($generated@@257 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@257 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@191 ($generated@@257 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@74 $generated@@75)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@81 $generated@@538))) ($generated@@282 ($generated@@170 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@170 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@101 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@101 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@266 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@98 ($generated@@266 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@98 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@98 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@78 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@78 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@413 $generated@@561 ($generated@@308 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@308 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@562) $generated@@565) $generated@@564) ($generated@@79 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@562) $generated@@565))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@566) $generated@@569) $generated@@568) ($generated@@79 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@566) $generated@@569))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@75) (= (type $generated@@573) $generated@@75)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@257 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@257 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578))) (and (= ($generated@@308 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576) ($generated@@441 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@75) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579)) $generated@@579) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579) ($generated@@449 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@64) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@75)) ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@308 ($generated@@413 $generated@@183 $generated@@584)) $generated@@584) ($generated@@77 ($generated@@413 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@107 ($generated@@472 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@107 ($generated@@472 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@98 ($generated@@182 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@182 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 Int) ) (! (= ($generated@@83 $generated@@591 $generated@@592) (* $generated@@591 $generated@@592))
 :pattern ( ($generated@@83 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@183) (= ($generated@@570 ($generated@@308 $generated@@593)) ($generated@@571 $generated@@593)))
 :pattern ( ($generated@@570 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) ($generated@@79 $generated@@594 ($generated@@101 0))) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@101 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@64)) ($generated@@79 $generated@@595 ($generated@@266 $generated@@596))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595) ($generated@@266 $generated@@596))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@266 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@75) (= (type $generated@@598) $generated@@64)) ($generated@@79 $generated@@597 ($generated@@271 $generated@@598))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597) ($generated@@271 $generated@@598))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@75) (= (type $generated@@600) $generated@@64)) ($generated@@79 $generated@@599 ($generated@@196 $generated@@600))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599)) $generated@@599) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599) ($generated@@196 $generated@@600))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@196 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@75) (= (type $generated@@602) $generated@@64)) ($generated@@79 $generated@@601 ($generated@@78 $generated@@602))) (and (= ($generated@@308 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601)) $generated@@601) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601) ($generated@@78 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@78 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@603 $generated@@606)))) ($generated@@282 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@107 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@183) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@609) (and ($generated@@181 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@183) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@613) (and ($generated@@181 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@75) (= (type $generated@@616) $generated@@75)) (= ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)) ($generated@@277 ($generated@@257 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))) ($generated@@277 ($generated@@308 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@308 ($generated@@277 $generated@@618)) ($generated@@277 ($generated@@308 $generated@@618)))
 :pattern ( ($generated@@308 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@87 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@74 $generated@@620)) (= ($generated@@81 $generated@@619) 0)) (= $generated@@619 ($generated@@294 $generated@@620))))
 :pattern ( ($generated@@81 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@102 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@321 $generated@@621) ($generated ($generated@@107 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) ($generated@@74 $generated@@75))) (= (type $generated@@629) $generated@@75)) (or ($generated@@76 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@626 ($generated@@78 $generated@@625)) ($generated@@79 $generated@@629 $generated@@625)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@627)) (<= ($generated@@80 $generated@@627) ($generated@@80 $generated@@628))) (<= ($generated@@80 $generated@@628) ($generated@@81 ($generated@@277 $generated@@626)))))))) (and ($generated@@82 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (= ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@625 ($generated@@85 $generated@@86) ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629)) (- $generated@@628 $generated@@627)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@631) $generated@@2)) ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@633) $generated@@3)) ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@635) $generated@@4)) ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@637) $generated@@496)) ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@639) $generated@@75)) ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@74 $generated@@75)) (= (type $generated@@641) $generated@@64)) (= ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@640))) ($generated@@79 ($generated@@170 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@170 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@81 $generated@@644))) (< ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@327 $generated@@646) ($generated@@266 $generated@@647)) ($generated@@77 ($generated@@370 $generated@@646) ($generated@@266 $generated@@648))) ($generated@@77 ($generated@@412 $generated@@646) ($generated@@266 ($generated@@182 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651))) (and (and ($generated@@77 ($generated@@345 $generated@@649) ($generated@@271 $generated@@650)) ($generated@@77 ($generated@@381 $generated@@649) ($generated@@271 $generated@@651))) ($generated@@77 ($generated@@423 $generated@@649) ($generated@@271 ($generated@@182 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@77 $generated@@652 $generated@@46))
 :pattern ( ($generated@@77 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@77 $generated@@653 $generated@@47))
 :pattern ( ($generated@@77 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@77 $generated@@654 $generated@@44))
 :pattern ( ($generated@@77 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@496) ($generated@@77 $generated@@655 $generated@@45))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@75) ($generated@@77 $generated@@656 $generated@@48))
 :pattern ( ($generated@@77 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@657) ($generated@@203 $generated@@103 $generated@@4)) (= (type $generated@@658) $generated@@103)) (= (type $generated@@659) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@660) ($generated@@74 $generated@@75))) (= (type $generated@@661) $generated@@64)) (= (type $generated@@664) $generated@@75)) (= (type $generated@@666) $generated@@75)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@667  (=> (= $generated@@657 ($generated@@202 $generated@@658 $generated@@659 $generated@@60 false)) (=> (and ($generated@@100 $generated@@660 ($generated@@78 $generated@@661) $generated@@659) (= $generated@@662 ($generated@@80 0))) (=> (and (and ($generated@@100 ($generated@@8 $generated@@662) $generated@@46 $generated@@659) (= $generated@@663 ($generated@@81 $generated@@660))) (and ($generated@@100 ($generated@@8 $generated@@663) $generated@@46 $generated@@659) ($generated@@282 $generated@@664 $generated@@661 $generated@@659))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@80 0) $generated@@662)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@662 $generated@@663)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@663 ($generated@@81 $generated@@660))))))))))
(let (($generated@@668  (=> (and ($generated@@281 $generated@@659) ($generated@@665 $generated@@659)) (=> (and (and (and ($generated@@77 $generated@@660 ($generated@@78 $generated@@661)) ($generated@@100 $generated@@660 ($generated@@78 $generated@@661) $generated@@659)) (and ($generated@@79 $generated@@664 $generated@@661) ($generated@@282 $generated@@664 $generated@@661 $generated@@659))) (and (and ($generated@@79 $generated@@666 $generated@@661) ($generated@@282 $generated@@666 $generated@@661 $generated@@659)) (and (= 2 $generated@@72) (= (ControlFlow 0 5) 2)))) $generated@@667))))
$generated@@668)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@168) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 ($generated@@87 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ($generated@@179 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@88)) (= (type $generated@@176) ($generated@@74 $generated@@75))) (= (type $generated@@179) $generated@@75)) (or ($generated@@82 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@179) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@176 ($generated@@78 $generated@@174)) ($generated@@79 $generated@@179 $generated@@174)) (and (and (<= ($generated@@80 0) $generated@@177) (<= $generated@@177 $generated@@178)) (<= $generated@@178 ($generated@@81 $generated@@176))))))) (and (=> (not (= $generated@@177 $generated@@178)) ($generated@@82 $generated@@174 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179)) (= ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179) (ite (= $generated@@177 $generated@@178) 0 (+ ($generated@@84 $generated@@174 $generated@@175 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179) (ite (= ($generated@@170 $generated@@176 (- $generated@@178 1)) $generated@@179) 1 0))))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@77 $generated@@180 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@180 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@64) (= (type $generated@@187) $generated@@64)) (= (type $generated@@188) $generated@@183)) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@75)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@200) $generated@@64)) ($generated@@77 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@77 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 18)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@103 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@103) (= (type $generated@@251) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@103)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@183)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@75)) (= (type $generated@@263) $generated@@75)) (= ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261))  (and ($generated@@79 $generated@@262 $generated@@260) ($generated@@79 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@183) (= (type $generated@@265) $generated@@183)) (= ($generated@@189 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@189 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@75) ($generated@@0 ($generated@@107 $generated@@268 $generated@@270))) ($generated@@79 $generated@@270 $generated@@269))
 :pattern ( ($generated@@107 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@75) ($generated@@0 ($generated@@107 $generated@@273 $generated@@275))) ($generated@@79 $generated@@275 $generated@@274))
 :pattern ( ($generated@@107 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@75)) (= (type $generated@@287) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@281 $generated@@287)) (= ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@183) (= ($generated@@181 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@183) ($generated@@181 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@75) (= (type $generated@@293) $generated@@75)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@181 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@74 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@81 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@74 $generated@@75))) (= (type $generated@@302) $generated@@75)) (or ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@299 ($generated@@78 $generated@@297)) ($generated@@79 $generated@@302 $generated@@297)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@300)) (<= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) (<= ($generated@@80 $generated@@301) ($generated@@81 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302)) (= ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (ite (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301)) 0 (+ ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@170 ($generated@@277 $generated@@299) ($generated@@80 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@74 $generated@@75))) (= (type $generated@@307) $generated@@75)) (or ($generated@@76 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@304 ($generated@@78 $generated@@303)) ($generated@@79 $generated@@307 $generated@@303)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@305)) (<= ($generated@@80 $generated@@305) ($generated@@80 $generated@@306))) (<= ($generated@@80 $generated@@306) ($generated@@81 ($generated@@277 $generated@@304)))))))) (and ($generated@@82 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (= ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) ($generated@@0 ($generated@@277 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@303 ($generated@@85 $generated@@86) ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))) (- $generated@@306 $generated@@305))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@75)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@100 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@314) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@315) $generated@@75)) (= (type $generated@@316) $generated@@64)) ($generated@@166 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@166 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@318) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@320) $generated@@64)) ($generated@@166 $generated@@317 $generated@@318)) ($generated@@100 $generated@@319 $generated@@320 $generated@@317)) ($generated@@100 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@166 $generated@@317 $generated@@318) ($generated@@100 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@197 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@197 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@282 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@282 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@464) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@465) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@463 $generated@@465))) (and ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))) ($generated@@166 $generated@@463 $generated@@465))
 :pattern ( ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@88)) (= (type $generated@@468) ($generated@@74 $generated@@75))) (= (type $generated@@471) $generated@@75)) (or ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@468 ($generated@@78 $generated@@466)) ($generated@@79 $generated@@471 $generated@@466)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@469)) (<= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) (<= ($generated@@80 $generated@@470) ($generated@@81 ($generated@@277 $generated@@468)))))))) (and (=> (not (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471))) (= ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (ite (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470)) 0 (+ ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471)) (ite (= ($generated@@170 ($generated@@277 $generated@@468) ($generated@@80 (- $generated@@470 1))) ($generated@@277 $generated@@471)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)))
))))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@102 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@345 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@345 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@381 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@381 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@349 (type $generated@@480))))
(let (($generated@@482 ($generated@@348 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@347 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@346 $generated@@482 $generated@@481)) (= ($generated@@423 $generated@@480) ($generated@@472 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@331 (type $generated@@483))))
(let (($generated@@485 ($generated@@330 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@329 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@328 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@75) (= (type $generated@@487) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@483) ($generated@@308 ($generated@@257 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@412 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@488) ($generated@@308 ($generated@@257 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@423 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) ($generated@@79 $generated@@493 $generated@@46)) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@493)) $generated@@493) ($generated@@77 ($generated@@413 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@47)) (and (= ($generated@@308 ($generated@@413 $generated@@3 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@75) ($generated@@79 $generated@@495 $generated@@44)) (and (= ($generated@@308 ($generated@@413 $generated@@4 $generated@@495)) $generated@@495) ($generated@@77 ($generated@@413 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) ($generated@@79 $generated@@497 $generated@@45)) (and (= ($generated@@308 ($generated@@413 $generated@@496 $generated@@497)) $generated@@497) ($generated@@77 ($generated@@413 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@79 ($generated@@308 $generated@@498) $generated@@499) ($generated@@77 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@79 ($generated@@308 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@105 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@102 $generated@@501 $generated@@2)) (<= 0 ($generated@@321 $generated@@500))))
 :pattern ( ($generated@@321 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@87 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@74 $generated@@503)) (<= 0 ($generated@@81 $generated@@502))))
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@441 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@441 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@441 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@449 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@449 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@449 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@288 ($generated@@257 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@75) (= (type $generated@@535) $generated@@75)) (= ($generated@@190 ($generated@@257 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@257 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@191 ($generated@@257 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@74 $generated@@75)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@81 $generated@@538))) ($generated@@282 ($generated@@170 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@170 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@101 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@101 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@266 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@98 ($generated@@266 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@98 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@98 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@78 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@78 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@413 $generated@@561 ($generated@@308 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@308 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@562) $generated@@565) $generated@@564) ($generated@@79 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@562) $generated@@565))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@566) $generated@@569) $generated@@568) ($generated@@79 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@566) $generated@@569))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@75) (= (type $generated@@573) $generated@@75)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@257 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@257 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578))) (and (= ($generated@@308 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576) ($generated@@441 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@75) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579)) $generated@@579) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579) ($generated@@449 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@64) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@75)) ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@308 ($generated@@413 $generated@@183 $generated@@584)) $generated@@584) ($generated@@77 ($generated@@413 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@107 ($generated@@472 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@107 ($generated@@472 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@98 ($generated@@182 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@182 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 Int) ) (! (= ($generated@@83 $generated@@591 $generated@@592) (* $generated@@591 $generated@@592))
 :pattern ( ($generated@@83 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@183) (= ($generated@@570 ($generated@@308 $generated@@593)) ($generated@@571 $generated@@593)))
 :pattern ( ($generated@@570 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) ($generated@@79 $generated@@594 ($generated@@101 0))) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@101 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@64)) ($generated@@79 $generated@@595 ($generated@@266 $generated@@596))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595) ($generated@@266 $generated@@596))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@266 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@75) (= (type $generated@@598) $generated@@64)) ($generated@@79 $generated@@597 ($generated@@271 $generated@@598))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597) ($generated@@271 $generated@@598))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@75) (= (type $generated@@600) $generated@@64)) ($generated@@79 $generated@@599 ($generated@@196 $generated@@600))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599)) $generated@@599) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599) ($generated@@196 $generated@@600))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@196 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@75) (= (type $generated@@602) $generated@@64)) ($generated@@79 $generated@@601 ($generated@@78 $generated@@602))) (and (= ($generated@@308 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601)) $generated@@601) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601) ($generated@@78 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@78 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@603 $generated@@606)))) ($generated@@282 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@107 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@183) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@609) (and ($generated@@181 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@183) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@613) (and ($generated@@181 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@75) (= (type $generated@@616) $generated@@75)) (= ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)) ($generated@@277 ($generated@@257 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))) ($generated@@277 ($generated@@308 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@308 ($generated@@277 $generated@@618)) ($generated@@277 ($generated@@308 $generated@@618)))
 :pattern ( ($generated@@308 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@87 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@74 $generated@@620)) (= ($generated@@81 $generated@@619) 0)) (= $generated@@619 ($generated@@294 $generated@@620))))
 :pattern ( ($generated@@81 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@102 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@321 $generated@@621) ($generated ($generated@@107 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) ($generated@@74 $generated@@75))) (= (type $generated@@629) $generated@@75)) (or ($generated@@76 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@626 ($generated@@78 $generated@@625)) ($generated@@79 $generated@@629 $generated@@625)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@627)) (<= ($generated@@80 $generated@@627) ($generated@@80 $generated@@628))) (<= ($generated@@80 $generated@@628) ($generated@@81 ($generated@@277 $generated@@626)))))))) (and ($generated@@82 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (= ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@625 ($generated@@85 $generated@@86) ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629)) (- $generated@@628 $generated@@627)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@631) $generated@@2)) ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@633) $generated@@3)) ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@635) $generated@@4)) ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@637) $generated@@496)) ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@639) $generated@@75)) ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@74 $generated@@75)) (= (type $generated@@641) $generated@@64)) (= ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@640))) ($generated@@79 ($generated@@170 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@170 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@81 $generated@@644))) (< ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@327 $generated@@646) ($generated@@266 $generated@@647)) ($generated@@77 ($generated@@370 $generated@@646) ($generated@@266 $generated@@648))) ($generated@@77 ($generated@@412 $generated@@646) ($generated@@266 ($generated@@182 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651))) (and (and ($generated@@77 ($generated@@345 $generated@@649) ($generated@@271 $generated@@650)) ($generated@@77 ($generated@@381 $generated@@649) ($generated@@271 $generated@@651))) ($generated@@77 ($generated@@423 $generated@@649) ($generated@@271 ($generated@@182 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@77 $generated@@652 $generated@@46))
 :pattern ( ($generated@@77 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@77 $generated@@653 $generated@@47))
 :pattern ( ($generated@@77 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@77 $generated@@654 $generated@@44))
 :pattern ( ($generated@@77 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@496) ($generated@@77 $generated@@655 $generated@@45))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@75) ($generated@@77 $generated@@656 $generated@@48))
 :pattern ( ($generated@@77 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Bool)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Bool)
(declare-fun $generated@@696 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@659) ($generated@@74 $generated@@75)) (= (type $generated@@660) $generated@@64)) (= (type $generated@@663) $generated@@75)) (= (type $generated@@674) $generated@@75)) (= (type $generated@@665) $generated@@75)) (= (type $generated@@678) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@661) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@680) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@681) $generated@@75)) (= (type $generated@@667) $generated@@75)) (= (type $generated@@669) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@690) $generated@@103)) (= (type $generated@@691) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@692) ($generated@@203 $generated@@103 $generated@@4))) (= (type $generated@@694) $generated@@75)) (= (type $generated@@696) $generated@@75)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 63) (let (($generated@@697  (=> (and (and (and (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@658)) (<= $generated@@658 ($generated@@81 $generated@@659))) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@662 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@662) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 37) (- 0 47)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 37) (- 0 46)) (<= $generated@@657 $generated@@662)) (and (=> (= (ControlFlow 0 37) (- 0 45)) (<= $generated@@662 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))) (and (=> (= (ControlFlow 0 37) (- 0 44)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 37) (- 0 43)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 37) (- 0 42)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 37) (- 0 41)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657))) (and (=> (= (ControlFlow 0 37) (- 0 40)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 37) (- 0 39)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 37) (- 0 38)) (<= $generated@@657 $generated@@658)) (=> (= (ControlFlow 0 37) (- 0 36)) (<= $generated@@658 ($generated@@81 $generated@@659))))))))))))))))))))))))
(let (($generated@@698  (=> (and (not (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@658))) (= (ControlFlow 0 49) 37)) $generated@@697)))
(let (($generated@@699  (=> (and (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@658)) (= (ControlFlow 0 48) 37)) $generated@@697)))
(let (($generated@@700  (=> (< $generated@@657 ($generated@@80 0)) (and (=> (= (ControlFlow 0 51) 48) $generated@@699) (=> (= (ControlFlow 0 51) 49) $generated@@698)))))
(let (($generated@@701  (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 50) 48) $generated@@699) (=> (= (ControlFlow 0 50) 49) $generated@@698)))))
(let (($generated@@702  (=> (not $generated@@666) (and (=> (= (ControlFlow 0 52) 50) $generated@@701) (=> (= (ControlFlow 0 52) 51) $generated@@700)))))
(let (($generated@@703  (=> (= (ControlFlow 0 28) (- 0 27)) (= $generated@@667 $generated@@663))))
(let (($generated@@704  (=> (and (<= ($generated@@81 $generated@@659) $generated@@658) (= $generated@@668 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 29) (- 0 34)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 29) (- 0 33)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 29) (- 0 32)) (<= $generated@@657 $generated@@668)) (=> (<= $generated@@657 $generated@@668) (and (=> (= (ControlFlow 0 29) (- 0 31)) (<= $generated@@668 ($generated@@81 $generated@@659))) (=> (<= $generated@@668 ($generated@@81 $generated@@659)) (=> (and (and (and ($generated@@281 $generated@@669) ($generated@@670 $generated@@669)) (=> (not (= $generated@@663 $generated@@665)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@668 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@668 $generated@@665)))) (and (=> (not (= $generated@@663 $generated@@665)) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@668 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@668 $generated@@665)) (- $generated@@668 $generated@@657))) (= $generated@@661 $generated@@669))) (and (=> (= (ControlFlow 0 29) (- 0 30)) $generated@@664) (=> $generated@@664 (=> (and (= $generated@@667 $generated@@665) (= (ControlFlow 0 29) 28)) $generated@@703)))))))))))))))
(let (($generated@@705  (and (=> (= (ControlFlow 0 3) (- 0 10)) (or (<= 0 $generated@@671) (= (- ($generated@@81 $generated@@659) $generated@@672) $generated@@671))) (=> (or (<= 0 $generated@@671) (= (- ($generated@@81 $generated@@659) $generated@@672) $generated@@671)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (< (- ($generated@@81 $generated@@659) $generated@@672) $generated@@671)) (=> (< (- ($generated@@81 $generated@@659) $generated@@672) $generated@@671) (=> (=> (and (and (<= ($generated@@80 0) $generated@@673) (<= $generated@@673 $generated@@672)) (<= $generated@@672 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@673 ($generated@@81 $generated@@659) $generated@@663) (=> (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@673 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@673)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@673 $generated@@672 $generated@@674) (=> (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@673 $generated@@672 $generated@@674)) (- $generated@@672 $generated@@673)) ($generated@@82 $generated@@660 $generated@@659 $generated@@673 $generated@@672 $generated@@674)))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> $generated@@666 (<= ($generated@@80 0) $generated@@673))) (=> (=> $generated@@666 (<= ($generated@@80 0) $generated@@673)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> $generated@@666 (<= $generated@@673 $generated@@672))) (=> (=> $generated@@666 (<= $generated@@673 $generated@@672)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> $generated@@666 (<= $generated@@672 ($generated@@81 $generated@@659)))) (=> (=> $generated@@666 (<= $generated@@672 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@673 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@673)))) (=> (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@673 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@673))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@673 $generated@@672 $generated@@674)) (- $generated@@672 $generated@@673)))) (=> (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@673 $generated@@672 $generated@@674)) (- $generated@@672 $generated@@673))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@666 (= $generated@@675 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@673 $generated@@672 $generated@@674)))))))))))))))))))))
(let (($generated@@706  (=> (and (>= (- (+ $generated@@658 1) $generated@@657) ($generated@@83 ($generated@@80 2) $generated@@676)) (= $generated@@677 (+ $generated@@658 1))) (and (=> (= (ControlFlow 0 13) (- 0 22)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 13) (- 0 21)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 13) (- 0 20)) (<= $generated@@657 $generated@@677)) (=> (<= $generated@@657 $generated@@677) (and (=> (= (ControlFlow 0 13) (- 0 19)) (<= $generated@@677 ($generated@@81 $generated@@659))) (=> (<= $generated@@677 ($generated@@81 $generated@@659)) (=> (and ($generated@@281 $generated@@678) ($generated@@670 $generated@@678)) (=> (and (and (=> (not (= $generated@@663 $generated@@665)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@677 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@677 $generated@@665))) (=> (not (= $generated@@663 $generated@@665)) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@677 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@677 $generated@@665)) (- $generated@@677 $generated@@657)))) (and (= $generated@@661 $generated@@678) (= $generated@@679 ($generated@@81 $generated@@659)))) (and (=> (= (ControlFlow 0 13) (- 0 18)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 13) (- 0 17)) (<= $generated@@657 $generated@@677)) (=> (<= $generated@@657 $generated@@677) (and (=> (= (ControlFlow 0 13) (- 0 16)) (<= $generated@@677 $generated@@679)) (=> (<= $generated@@677 $generated@@679) (and (=> (= (ControlFlow 0 13) (- 0 15)) (<= $generated@@679 ($generated@@81 $generated@@659))) (=> (<= $generated@@679 ($generated@@81 $generated@@659)) (=> (and ($generated@@281 $generated@@680) ($generated@@670 $generated@@680)) (=> (and (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@677 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@677 $generated@@679 $generated@@663)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@679 $generated@@663)) (and (= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@677 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@677 $generated@@679 $generated@@663)) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@679 $generated@@663)) (= $generated@@678 $generated@@680))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@677) (< $generated@@677 ($generated@@81 $generated@@659)))) (=> (and (<= 0 $generated@@677) (< $generated@@677 ($generated@@81 $generated@@659))) (=> (and (and (and (= $generated@@681 ($generated@@170 $generated@@659 $generated@@677)) (= $generated@@682 (+ $generated@@677 1))) (and (= $generated@@683 ($generated@@80 1)) (= $generated@@674 $generated@@681))) (and (and (= $generated@@672 $generated@@682) (= $generated@@675 $generated@@683)) (and (= $generated@@673 $generated@@677) (= (ControlFlow 0 13) 3)))) $generated@@705))))))))))))))))))))))))))
(let (($generated@@707  (=> (> ($generated@@83 ($generated@@80 2) $generated@@676) (- (+ $generated@@658 1) $generated@@657)) (=> (and (= $generated@@684 (+ $generated@@658 1)) (= $generated@@674 $generated@@665)) (=> (and (and (= $generated@@672 $generated@@684) (= $generated@@675 $generated@@676)) (and (= $generated@@673 $generated@@657) (= (ControlFlow 0 12) 3))) $generated@@705)))))
(let (($generated@@708  (=> (not (= ($generated@@170 $generated@@659 $generated@@658) $generated@@665)) (and (=> (= (ControlFlow 0 23) 12) $generated@@707) (=> (= (ControlFlow 0 23) 13) $generated@@706)))))
(let (($generated@@709  (=> (and (and (and (= ($generated@@170 $generated@@659 $generated@@658) $generated@@665) (= $generated@@685 (+ $generated@@658 1))) (and (= $generated@@686 (+ $generated@@676 1)) (= $generated@@674 $generated@@665))) (and (and (= $generated@@672 $generated@@685) (= $generated@@675 $generated@@686)) (and (= $generated@@673 $generated@@657) (= (ControlFlow 0 11) 3)))) $generated@@705)))
(let (($generated@@710  (=> (and (< $generated@@658 ($generated@@81 $generated@@659)) (= $generated@@671 (- ($generated@@81 $generated@@659) $generated@@658))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@81 $generated@@659)))) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 24) (- 0 25)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 24) 11) $generated@@709) (=> (= (ControlFlow 0 24) 23) $generated@@708)))))))))
(let (($generated@@711  (=> $generated@@666 (and (=> (= (ControlFlow 0 35) 29) $generated@@704) (=> (= (ControlFlow 0 35) 24) $generated@@710)))))
(let (($generated@@712  (and (=> (= (ControlFlow 0 53) 52) $generated@@702) (=> (= (ControlFlow 0 53) 35) $generated@@711))))
(let (($generated@@713 true))
(let (($generated@@714  (=> (and (and ($generated@@281 $generated@@661) ($generated@@670 $generated@@661)) (=> $generated@@664 (and ($generated@@79 $generated@@665 $generated@@660) ($generated@@282 $generated@@665 $generated@@660 $generated@@661)))) (=> (and (and (and (and (and (and (and (and (and $generated@@664 (not false)) (<= 1 $generated@@658)) (<= 1 $generated@@676)) (<= 0 $generated@@657)) (= $generated@@687 1)) (= $generated@@688 1)) (= $generated@@689 0)) true) (and (and (and (and (=> $generated@@666 true) (=> $generated@@666 (<= ($generated@@80 0) $generated@@657))) (and (=> $generated@@666 (<= $generated@@657 $generated@@658)) (=> $generated@@666 (<= $generated@@658 ($generated@@81 $generated@@659))))) (and (and (=> $generated@@666 ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657)))) (and (=> $generated@@666 ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)))))) (and (and (and (=> $generated@@666 ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (=> $generated@@666 (= $generated@@676 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@103) (=> (and (not (= $generated@@715 $generated@@690)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@691 $generated@@715) $generated@@60))) (= ($generated@@107 $generated@@661 $generated@@715) ($generated@@107 $generated@@691 $generated@@715))))
 :pattern ( ($generated@@107 $generated@@661 $generated@@715))
)) ($generated@@166 $generated@@691 $generated@@661))) (and (and (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (! (let (($generated@@718 ($generated@@67 (type $generated@@717))))
 (=> (and (and (= (type $generated@@716) $generated@@103) (= (type $generated@@717) ($generated@@66 $generated@@718))) (and (not (= $generated@@716 $generated@@690)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@691 $generated@@716) $generated@@60)))) (or (= ($generated@@109 ($generated@@107 $generated@@661 $generated@@716) $generated@@717) ($generated@@109 ($generated@@107 $generated@@691 $generated@@716) $generated@@717)) ($generated@@0 ($generated@@201 $generated@@692 $generated@@716 $generated@@717)))))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@661 $generated@@716) $generated@@717))
)) (=> true $generated@@664)) (and (<= (- ($generated@@81 $generated@@659) $generated@@658) $generated@@693) (=> (= (- ($generated@@81 $generated@@659) $generated@@658) $generated@@693) true)))))) (and (=> (= (ControlFlow 0 54) 1) $generated@@713) (=> (= (ControlFlow 0 54) 53) $generated@@712))))))
(let (($generated@@719  (=> (= $generated@@692 ($generated@@202 $generated@@690 $generated@@691 $generated@@60 false)) (and (=> (= (ControlFlow 0 55) (- 0 62)) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@81 $generated@@659)))) (=> (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@81 $generated@@659))) (=> (= $generated@@694 ($generated@@170 $generated@@659 ($generated@@80 0))) (=> (and (and (= $generated@@687 ($generated@@80 1)) (= $generated@@688 ($generated@@80 1))) (and (= $generated@@689 ($generated@@80 0)) (= $generated@@693 (- ($generated@@81 $generated@@659) $generated@@687)))) (and (=> (= (ControlFlow 0 55) (- 0 61)) (=> $generated@@666 (<= ($generated@@80 0) $generated@@689))) (=> (=> $generated@@666 (<= ($generated@@80 0) $generated@@689)) (and (=> (= (ControlFlow 0 55) (- 0 60)) (=> $generated@@666 (<= $generated@@689 $generated@@687))) (=> (=> $generated@@666 (<= $generated@@689 $generated@@687)) (and (=> (= (ControlFlow 0 55) (- 0 59)) (=> $generated@@666 (<= $generated@@687 ($generated@@81 $generated@@659)))) (=> (=> $generated@@666 (<= $generated@@687 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 55) (- 0 58)) (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@689 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@689)))) (=> (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@689 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@689))) (and (=> (= (ControlFlow 0 55) (- 0 57)) (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@689 $generated@@687 $generated@@694)) (- $generated@@687 $generated@@689)))) (=> (=> $generated@@666 (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@689 $generated@@687 $generated@@694)) (- $generated@@687 $generated@@689))) (and (=> (= (ControlFlow 0 55) (- 0 56)) (=> $generated@@666 (= $generated@@688 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@689 $generated@@687 $generated@@694)))) (=> (=> $generated@@666 (= $generated@@688 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@689 $generated@@687 $generated@@694))) (=> (= (ControlFlow 0 55) 54) $generated@@714))))))))))))))))))))
(let (($generated@@720  (=> (and (and ($generated@@281 $generated@@691) ($generated@@670 $generated@@691)) (and ($generated@@77 $generated@@659 ($generated@@78 $generated@@660)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@691))) (=> (and (and (and ($generated@@79 $generated@@663 $generated@@660) ($generated@@282 $generated@@663 $generated@@660 $generated@@691)) (and (=> $generated@@695 (and ($generated@@79 $generated@@696 $generated@@660) ($generated@@282 $generated@@696 $generated@@660 $generated@@691))) (= 2 $generated@@72))) (and (and ($generated@@76 $generated@@660 $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@73 $generated@@660 $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) 0)))) (= (ControlFlow 0 63) 55))) $generated@@719))))
$generated@@720)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@164 (T@U Int) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@T T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@618 (Int Int) Int)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@143 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143)) 15))) (forall (($generated@@144 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@139 $generated@@144))
))) (= ($generated@@1 $generated@@140) 16)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@145)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@145))
))) (= (type $generated@@141) $generated@@138)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@68) (= (type $generated@@147) $generated@@138)) (= (type $generated@@148) ($generated@@139 $generated@@140))) (= (type $generated@@151) $generated@@140)) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@150 $generated@@151) ($generated@@136 $generated@@146 $generated@@141 $generated@@148 $generated@@149 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@136 $generated@@146 ($generated@@137 $generated@@147) $generated@@148 $generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@153 $generated@@155) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60))
)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert  (and (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@157 $generated@@165)) $generated@@138)
 :pattern ( ($generated@@157 $generated@@165))
)) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@160 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (! (let (($generated@@169 ($generated@@142 (type $generated@@167))))
(= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@169))
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ($generated@@175 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@138)) (= (type $generated@@172) ($generated@@139 $generated@@140))) (= (type $generated@@175) $generated@@140)) (or ($generated@@158 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@172 ($generated@@160 $generated@@170)) ($generated@@161 $generated@@175 $generated@@170)) (and (and (<= ($generated@@162 0) $generated@@173) (<= $generated@@173 $generated@@174)) (<= $generated@@174 ($generated@@163 $generated@@172))))))) (and (=> (not (= $generated@@173 $generated@@174)) ($generated@@158 $generated@@170 $generated@@172 $generated@@173 (- $generated@@174 1) $generated@@175)) (= ($generated@@136 $generated@@170 ($generated@@157 $generated@@171) $generated@@172 $generated@@173 $generated@@174 $generated@@175) (ite (= $generated@@173 $generated@@174) 0 (+ ($generated@@136 $generated@@170 $generated@@171 $generated@@172 $generated@@173 (- $generated@@174 1) $generated@@175) (ite (= ($generated@@164 $generated@@172 (- $generated@@174 1)) $generated@@175) 1 0))))))
 :pattern ( ($generated@@136 $generated@@170 ($generated@@157 $generated@@171) $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert  (and (= ($generated@@1 $generated@@178) 17) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@140)
 :pattern ( ($generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@178) (= (type $generated@@182) $generated@@178)) (and ($generated@@177 $generated@@181) ($generated@@177 $generated@@182))) (= ($generated@@176 $generated@@181 $generated@@182) (= ($generated@@179 $generated@@181) ($generated@@179 $generated@@182))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182) ($generated@@177 $generated@@181))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182) ($generated@@177 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@159 $generated@@183 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@183 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@68)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@68) (= (type $generated@@189) $generated@@68)) (= (type $generated@@190) $generated@@178)) ($generated@@159 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@159 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@140)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@140)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@178) (= (type $generated@@197) $generated@@178)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert  (and (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@200))
)) (= (type $generated@@199) $generated@@178)))
(assert (= ($generated@@198 $generated@@199) $generated@@63))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@159 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@159 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 18)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@81 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@81)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@262 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@263 $generated@@266)) ($generated@@78 $generated@@199 ($generated@@262 $generated@@265) $generated@@266))
 :pattern ( ($generated@@78 $generated@@199 ($generated@@262 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@267 $generated@@268 $generated@@269)) $generated@@178)
 :pattern ( ($generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@140)) (= (type $generated@@273) $generated@@140)) (= ($generated@@159 ($generated@@267 $generated@@272 $generated@@273) ($generated@@185 $generated@@270 $generated@@271))  (and ($generated@@161 $generated@@272 $generated@@270) ($generated@@161 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@159 ($generated@@267 $generated@@272 $generated@@273) ($generated@@185 $generated@@270 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@68) ($generated@@159 $generated@@199 ($generated@@262 $generated@@274)))
 :pattern ( ($generated@@159 $generated@@199 ($generated@@262 $generated@@274)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@178) (= (type $generated@@276) $generated@@178)) (= ($generated@@191 $generated@@275 $generated@@276) (= $generated@@275 $generated@@276)))
 :pattern ( ($generated@@191 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@178) (= (type $generated@@278) $generated@@178)) (= ($generated@@176 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@176 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@282) $generated@@68)) (= ($generated@@159 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@140) ($generated@@0 ($generated@@85 $generated@@281 $generated@@283))) ($generated@@161 $generated@@283 $generated@@282))
 :pattern ( ($generated@@85 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@159 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@287) $generated@@68)) (= ($generated@@159 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@140) ($generated@@0 ($generated@@85 $generated@@286 $generated@@288))) ($generated@@161 $generated@@288 $generated@@287))
 :pattern ( ($generated@@85 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@159 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@162 $generated@@289) $generated@@289)
 :pattern ( ($generated@@162 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
(= (type ($generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@290 $generated@@293) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@178) (= (type $generated@@296) $generated@@178)) (and ($generated@@294 $generated@@295) ($generated@@294 $generated@@296))) (= ($generated@@176 $generated@@295 $generated@@296) true))
 :pattern ( ($generated@@176 $generated@@295 $generated@@296) ($generated@@294 $generated@@295))
 :pattern ( ($generated@@176 $generated@@295 $generated@@296) ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) $generated@@68)) (= (type $generated@@300) $generated@@140)) (= (type $generated@@301) $generated@@140)) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@263 $generated@@302)) (= ($generated@@78 ($generated@@267 $generated@@300 $generated@@301) ($generated@@185 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@78 ($generated@@267 $generated@@300 $generated@@301) ($generated@@185 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@178) (= ($generated@@184 $generated@@303) (= ($generated@@198 $generated@@303) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@178) (= ($generated@@294 $generated@@304) (= ($generated@@198 $generated@@304) $generated@@63)))
 :pattern ( ($generated@@294 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@178) (= ($generated@@177 $generated@@305) (= ($generated@@198 $generated@@305) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@178) ($generated@@184 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@140) (= (type $generated@@308) $generated@@140)) (= $generated@@306 ($generated@@267 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@184 $generated@@306))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@139 $generated@@310))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@163 ($generated@@309 $generated@@311)) 0)
 :pattern ( ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@178) ($generated@@294 $generated@@312)) (= $generated@@312 $generated@@199))
 :pattern ( ($generated@@294 $generated@@312))
)))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 Int) ($generated@@317 Int) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) $generated@@138)) (= (type $generated@@315) ($generated@@139 $generated@@140))) (= (type $generated@@318) $generated@@140)) (or ($generated@@158 $generated@@313 ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 $generated@@317) $generated@@318) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@315 ($generated@@160 $generated@@313)) ($generated@@161 $generated@@318 $generated@@313)) (and (and (<= ($generated@@162 0) ($generated@@162 $generated@@316)) (<= ($generated@@162 $generated@@316) ($generated@@162 $generated@@317))) (<= ($generated@@162 $generated@@317) ($generated@@163 ($generated@@290 $generated@@315)))))))) (and (=> (not (= ($generated@@162 $generated@@316) ($generated@@162 $generated@@317))) ($generated@@158 $generated@@313 ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 (- $generated@@317 1)) $generated@@318)) (= ($generated@@136 $generated@@313 ($generated@@157 $generated@@314) ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 $generated@@317) $generated@@318) (ite (= ($generated@@162 $generated@@316) ($generated@@162 $generated@@317)) 0 (+ ($generated@@136 $generated@@313 ($generated@@157 $generated@@314) ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 (- $generated@@317 1)) $generated@@318) (ite (= ($generated@@164 ($generated@@290 $generated@@315) ($generated@@162 (- $generated@@317 1))) $generated@@318) 1 0))))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@313 ($generated@@157 $generated@@314) ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 $generated@@317) $generated@@318))
))))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@178)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@178) ($generated@@177 $generated@@321)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@140) (= $generated@@321 ($generated@@319 $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@177 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@140)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@68) (= (type $generated@@327) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@297 ($generated@@323 $generated@@325) $generated@@326 $generated@@327) ($generated@@78 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@297 ($generated@@323 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@328) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@330) $generated@@140)) (= (type $generated@@331) $generated@@68)) ($generated@@152 $generated@@328 $generated@@329)) ($generated@@297 $generated@@330 $generated@@331 $generated@@328)) ($generated@@297 $generated@@330 $generated@@331 $generated@@329))
 :pattern ( ($generated@@152 $generated@@328 $generated@@329) ($generated@@297 $generated@@330 $generated@@331 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@332) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@333) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@335) $generated@@68)) ($generated@@152 $generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@335 $generated@@332)) ($generated@@78 $generated@@334 $generated@@335 $generated@@333))
 :pattern ( ($generated@@152 $generated@@332 $generated@@333) ($generated@@78 $generated@@334 $generated@@335 $generated@@332))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@80 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@83 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@80 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@85 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@73)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@68) (and (= ($generated@@76 ($generated@@262 $generated@@344)) $generated@@64) (= ($generated@@342 ($generated@@262 $generated@@344)) $generated@@67)))
 :pattern ( ($generated@@262 $generated@@344))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@80 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@85 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@85 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@83 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@80 $generated@@382 $generated@@2)) (= ($generated@@202 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@85 $generated@@381 $generated@@383))) (<= ($generated ($generated@@85 $generated@@381 $generated@@383)) ($generated@@336 $generated@@381))))
 :pattern ( ($generated@@85 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@202 $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@345 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@349 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@80 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@349 (type $generated@@391))))
(let (($generated@@393 ($generated@@348 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@347 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@346 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@367 (type $generated@@395))))
(let (($generated@@397 ($generated@@366 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@365 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@364 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@363 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@367 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@80 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@367 (type $generated@@402))))
(let (($generated@@404 ($generated@@366 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@365 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@364 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@407) $generated@@68)) (= ($generated@@159 $generated@@406 ($generated@@201 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@406 $generated@@408)))) ($generated@@161 $generated@@408 $generated@@407))
 :pattern ( ($generated@@85 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@159 $generated@@406 ($generated@@201 $generated@@407)))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) $generated@@68) (= (type $generated@@410) $generated@@140)) (= (type $generated@@411) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@263 $generated@@411)) (= ($generated@@78 ($generated@@319 $generated@@410) ($generated@@262 $generated@@409) $generated@@411) ($generated@@297 $generated@@410 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@78 ($generated@@319 $generated@@410) ($generated@@262 $generated@@409) $generated@@411))
)))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) $generated@@68) (= (type $generated@@413) $generated@@138)) (= (type $generated@@414) ($generated@@139 $generated@@140))) (= (type $generated@@417) $generated@@140)) (or ($generated@@158 $generated@@412 $generated@@414 $generated@@415 $generated@@416 $generated@@417) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@414 ($generated@@160 $generated@@412)) ($generated@@161 $generated@@417 $generated@@412)) (and (and (<= ($generated@@162 0) $generated@@415) (<= $generated@@415 $generated@@416)) (<= $generated@@416 ($generated@@163 $generated@@414))))))) true)
 :pattern ( ($generated@@136 $generated@@412 $generated@@413 $generated@@414 $generated@@415 $generated@@416 $generated@@417))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@279 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@140) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@297 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@279 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@284 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@140) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@297 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@284 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@85 ($generated@@337 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@85 ($generated@@337 $generated@@427) $generated@@426)))
)))
(assert  (and (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@428 $generated@@431)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@428 $generated@@431))
)) (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@429 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@429 $generated@@432 $generated@@433))
))) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@349 (type $generated@@434))))
(let (($generated@@436 ($generated@@348 (type $generated@@434))))
(= (type ($generated@@430 $generated@@434)) ($generated@@80 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@430 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@438) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@437) ($generated@@192 ($generated@@429 $generated@@178 $generated@@438)))) (= ($generated@@85 ($generated@@430 $generated@@437) ($generated@@192 ($generated@@429 $generated@@178 $generated@@438))) ($generated@@193 ($generated@@429 $generated@@178 $generated@@438))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@437) $generated@@438))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@367 (type $generated@@442))))
(let (($generated@@444 ($generated@@366 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@80 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@446) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@85 ($generated@@363 $generated@@445) ($generated@@192 ($generated@@429 $generated@@178 $generated@@446)))) (= ($generated@@85 ($generated@@440 $generated@@445) ($generated@@192 ($generated@@429 $generated@@178 $generated@@446))) ($generated@@193 ($generated@@429 $generated@@178 $generated@@446))))))
 :pattern ( ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@348 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@347 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@430 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@366 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@365 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@85 ($generated@@363 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@452) $generated@@456))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@461) $generated@@68)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@460) $generated@@464))) (and ($generated@@297 ($generated@@85 ($generated@@430 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@297 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@460) $generated@@464))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@469) $generated@@68)) (= (type $generated@@470) $generated@@68)) (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@468) $generated@@472))) (and ($generated@@297 ($generated@@85 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@297 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@178)) ($generated@@159 $generated@@474 ($generated@@262 $generated@@473))) (or ($generated@@294 $generated@@474) ($generated@@177 $generated@@474)))
 :pattern ( ($generated@@177 $generated@@474) ($generated@@159 $generated@@474 ($generated@@262 $generated@@473)))
 :pattern ( ($generated@@294 $generated@@474) ($generated@@159 $generated@@474 ($generated@@262 $generated@@473)))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 Int) ($generated@@479 Int) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@138)) (= (type $generated@@477) ($generated@@139 $generated@@140))) (= (type $generated@@480) $generated@@140)) (= ($generated@@136 $generated@@475 ($generated@@157 $generated@@476) $generated@@477 $generated@@478 $generated@@479 $generated@@480) ($generated@@136 $generated@@475 $generated@@476 $generated@@477 $generated@@478 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@136 $generated@@475 ($generated@@157 $generated@@476) $generated@@477 $generated@@478 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@481) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@481 $generated@@483))) (and ($generated@@152 $generated@@481 $generated@@482) ($generated@@152 $generated@@482 $generated@@483))) ($generated@@152 $generated@@481 $generated@@483))
 :pattern ( ($generated@@152 $generated@@481 $generated@@482) ($generated@@152 $generated@@482 $generated@@483))
)))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 Int) ($generated@@488 Int) ($generated@@489 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@138)) (= (type $generated@@486) ($generated@@139 $generated@@140))) (= (type $generated@@489) $generated@@140)) (or ($generated@@158 $generated@@484 ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 $generated@@488) ($generated@@290 $generated@@489)) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@486 ($generated@@160 $generated@@484)) ($generated@@161 $generated@@489 $generated@@484)) (and (and (<= ($generated@@162 0) ($generated@@162 $generated@@487)) (<= ($generated@@162 $generated@@487) ($generated@@162 $generated@@488))) (<= ($generated@@162 $generated@@488) ($generated@@163 ($generated@@290 $generated@@486)))))))) (and (=> (not (= ($generated@@162 $generated@@487) ($generated@@162 $generated@@488))) ($generated@@158 $generated@@484 ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 (- $generated@@488 1)) ($generated@@290 $generated@@489))) (= ($generated@@136 $generated@@484 ($generated@@157 $generated@@485) ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 $generated@@488) ($generated@@290 $generated@@489)) (ite (= ($generated@@162 $generated@@487) ($generated@@162 $generated@@488)) 0 (+ ($generated@@136 $generated@@484 ($generated@@157 $generated@@485) ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 (- $generated@@488 1)) ($generated@@290 $generated@@489)) (ite (= ($generated@@164 ($generated@@290 $generated@@486) ($generated@@162 (- $generated@@488 1))) ($generated@@290 $generated@@489)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@484 ($generated@@157 $generated@@485) ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 $generated@@488) ($generated@@290 $generated@@489)))
))))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@80 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@367 (type $generated@@492))))
(let (($generated@@494 ($generated@@366 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@365 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@364 $generated@@494 $generated@@493)) (= ($generated@@363 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@363 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@367 (type $generated@@495))))
(let (($generated@@497 ($generated@@366 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@365 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@364 $generated@@497 $generated@@496)) (= ($generated@@399 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@399 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@367 (type $generated@@498))))
(let (($generated@@500 ($generated@@366 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@365 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@364 $generated@@500 $generated@@499)) (= ($generated@@439 $generated@@498) ($generated@@490 $generated@@140))))))
 :pattern ( ($generated@@439 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@349 (type $generated@@501))))
(let (($generated@@503 ($generated@@348 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@347 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@346 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@140) (= (type $generated@@505) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@501) ($generated@@323 ($generated@@267 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@428 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@367 (type $generated@@506))))
(let (($generated@@508 ($generated@@366 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@365 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@364 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@140) (= (type $generated@@510) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@439 $generated@@506) ($generated@@323 ($generated@@267 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@439 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@140) ($generated@@161 $generated@@511 $generated@@46)) (and (= ($generated@@323 ($generated@@429 $generated@@2 $generated@@511)) $generated@@511) ($generated@@159 ($generated@@429 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@161 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@140) ($generated@@161 $generated@@512 $generated@@47)) (and (= ($generated@@323 ($generated@@429 $generated@@3 $generated@@512)) $generated@@512) ($generated@@159 ($generated@@429 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@161 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@140) ($generated@@161 $generated@@513 $generated@@44)) (and (= ($generated@@323 ($generated@@429 $generated@@4 $generated@@513)) $generated@@513) ($generated@@159 ($generated@@429 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@161 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 21))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@140) ($generated@@161 $generated@@515 $generated@@45)) (and (= ($generated@@323 ($generated@@429 $generated@@514 $generated@@515)) $generated@@515) ($generated@@159 ($generated@@429 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@161 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@161 ($generated@@323 $generated@@516) $generated@@517) ($generated@@159 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@161 ($generated@@323 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@83 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@80 $generated@@519 $generated@@2)) (<= 0 ($generated@@336 $generated@@518))))
 :pattern ( ($generated@@336 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@142 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@139 $generated@@521)) (<= 0 ($generated@@163 $generated@@520))))
 :pattern ( ($generated@@163 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@457 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@457 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@457 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@457 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@76 ($generated@@457 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@465 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@465 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (= ($generated@@536 ($generated@@465 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@465 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@76 ($generated@@465 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@140)) (= ($generated@@198 ($generated@@267 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@544 ($generated@@185 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@185 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@548 ($generated@@185 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@185 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@140) (= (type $generated@@553) $generated@@140)) (= ($generated@@192 ($generated@@267 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@267 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@140) (= (type $generated@@555) $generated@@140)) (= ($generated@@193 ($generated@@267 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@267 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@139 $generated@@140)) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@556 ($generated@@160 $generated@@557) $generated@@558) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@163 $generated@@556))) ($generated@@297 ($generated@@164 $generated@@556 $generated@@559) $generated@@557 $generated@@558))
 :pattern ( ($generated@@164 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@78 $generated@@556 ($generated@@160 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@79 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@79 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@279 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@279 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@76 ($generated@@279 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@279 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@284 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@284 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@76 ($generated@@284 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@284 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@201 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@201 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@160 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@160 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@160 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@262 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@262 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@140) (= ($generated@@198 ($generated@@319 $generated@@581)) $generated@@65))
 :pattern ( ($generated@@319 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@140) (= ($generated@@179 ($generated@@319 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@319 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@429 $generated@@584 ($generated@@323 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@323 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) (= ($generated@@159 $generated@@585 ($generated@@457 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@585) $generated@@588))) (and ($generated@@161 ($generated@@85 ($generated@@430 $generated@@585) $generated@@588) $generated@@587) ($generated@@161 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@585) $generated@@588))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@159 $generated@@585 ($generated@@457 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) (= ($generated@@159 $generated@@589 ($generated@@465 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@589) $generated@@592))) (and ($generated@@161 ($generated@@85 ($generated@@440 $generated@@589) $generated@@592) $generated@@591) ($generated@@161 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@589) $generated@@592))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@159 $generated@@589 ($generated@@465 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@140)) (= ($generated@@159 ($generated@@319 $generated@@594) ($generated@@262 $generated@@593)) ($generated@@161 $generated@@594 $generated@@593)))
 :pattern ( ($generated@@159 ($generated@@319 $generated@@594) ($generated@@262 $generated@@593)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@140) (= (type $generated@@598) $generated@@140)) (< ($generated@@595 $generated@@597) ($generated@@596 ($generated@@267 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@267 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@140) (= (type $generated@@600) $generated@@140)) (< ($generated@@595 $generated@@600) ($generated@@596 ($generated@@267 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@267 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@140) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@161 $generated@@601 ($generated@@457 $generated@@602 $generated@@603))) (and (= ($generated@@323 ($generated@@429 ($generated@@347 $generated@@140 $generated@@140) $generated@@601)) $generated@@601) ($generated@@159 ($generated@@429 ($generated@@347 $generated@@140 $generated@@140) $generated@@601) ($generated@@457 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@161 $generated@@601 ($generated@@457 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@140) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@161 $generated@@604 ($generated@@465 $generated@@605 $generated@@606))) (and (= ($generated@@323 ($generated@@429 ($generated@@365 $generated@@140 $generated@@140) $generated@@604)) $generated@@604) ($generated@@159 ($generated@@429 ($generated@@365 $generated@@140 $generated@@140) $generated@@604) ($generated@@465 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@161 $generated@@604 ($generated@@465 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@140)) ($generated@@161 $generated@@609 ($generated@@185 $generated@@607 $generated@@608))) (and (= ($generated@@323 ($generated@@429 $generated@@178 $generated@@609)) $generated@@609) ($generated@@159 ($generated@@429 $generated@@178 $generated@@609) ($generated@@185 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@161 $generated@@609 ($generated@@185 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@140) (< ($generated@@595 $generated@@610) ($generated@@596 ($generated@@319 $generated@@610))))
 :pattern ( ($generated@@319 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@178) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@263 $generated@@613) (and ($generated@@177 $generated@@611) ($generated@@78 $generated@@611 ($generated@@262 $generated@@612) $generated@@613)))) ($generated@@297 ($generated@@179 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@297 ($generated@@179 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@85 ($generated@@490 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@85 ($generated@@490 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@68)) (and (= ($generated@@76 ($generated@@185 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@342 ($generated@@185 $generated@@616 $generated@@617)) $generated@@66)))
 :pattern ( ($generated@@185 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 Int) ) (! (= ($generated@@618 $generated@@619 $generated@@620) (* $generated@@619 $generated@@620))
 :pattern ( ($generated@@618 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@178) (= ($generated@@595 ($generated@@323 $generated@@621)) ($generated@@596 $generated@@621)))
 :pattern ( ($generated@@595 ($generated@@323 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@140) ($generated@@161 $generated@@622 ($generated@@79 0))) (and (= ($generated@@323 ($generated@@429 $generated@@2 $generated@@622)) $generated@@622) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@622) ($generated@@79 0))))
 :pattern ( ($generated@@161 $generated@@622 ($generated@@79 0)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@140) (= (type $generated@@624) $generated@@68)) ($generated@@161 $generated@@623 ($generated@@279 $generated@@624))) (and (= ($generated@@323 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@623)) $generated@@623) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@623) ($generated@@279 $generated@@624))))
 :pattern ( ($generated@@161 $generated@@623 ($generated@@279 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@140) (= (type $generated@@626) $generated@@68)) ($generated@@161 $generated@@625 ($generated@@284 $generated@@626))) (and (= ($generated@@323 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@625)) $generated@@625) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@625) ($generated@@284 $generated@@626))))
 :pattern ( ($generated@@161 $generated@@625 ($generated@@284 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@140) (= (type $generated@@628) $generated@@68)) ($generated@@161 $generated@@627 ($generated@@201 $generated@@628))) (and (= ($generated@@323 ($generated@@429 ($generated@@80 $generated@@140 $generated@@2) $generated@@627)) $generated@@627) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@2) $generated@@627) ($generated@@201 $generated@@628))))
 :pattern ( ($generated@@161 $generated@@627 ($generated@@201 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@140) (= (type $generated@@630) $generated@@68)) ($generated@@161 $generated@@629 ($generated@@160 $generated@@630))) (and (= ($generated@@323 ($generated@@429 ($generated@@139 $generated@@140) $generated@@629)) $generated@@629) ($generated@@159 ($generated@@429 ($generated@@139 $generated@@140) $generated@@629) ($generated@@160 $generated@@630))))
 :pattern ( ($generated@@161 $generated@@629 ($generated@@160 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@68) (= (type $generated@@632) $generated@@140)) ($generated@@161 $generated@@632 ($generated@@262 $generated@@631))) (and (= ($generated@@323 ($generated@@429 $generated@@178 $generated@@632)) $generated@@632) ($generated@@159 ($generated@@429 $generated@@178 $generated@@632) ($generated@@262 $generated@@631))))
 :pattern ( ($generated@@161 $generated@@632 ($generated@@262 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@633 ($generated@@201 $generated@@634) $generated@@635) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@633 $generated@@636)))) ($generated@@297 $generated@@636 $generated@@634 $generated@@635))
 :pattern ( ($generated@@85 $generated@@633 $generated@@636))
))))
 :pattern ( ($generated@@78 $generated@@633 ($generated@@201 $generated@@634) $generated@@635))
)))
(assert (= $generated@@199 ($generated@@290 $generated@@199)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@178) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@263 $generated@@639) (and ($generated@@184 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@68) ($generated@@78 $generated@@637 ($generated@@185 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@185 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@297 ($generated@@192 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@297 ($generated@@192 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@178) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@263 $generated@@643) (and ($generated@@184 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@68) ($generated@@78 $generated@@641 ($generated@@185 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@78 $generated@@641 ($generated@@185 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@297 ($generated@@193 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@297 ($generated@@193 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@140) (= (type $generated@@646) $generated@@140)) (= ($generated@@267 ($generated@@290 $generated@@645) ($generated@@290 $generated@@646)) ($generated@@290 ($generated@@267 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@267 ($generated@@290 $generated@@645) ($generated@@290 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@162 $generated@@647))) ($generated@@290 ($generated@@323 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@162 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@140) (= ($generated@@319 ($generated@@290 $generated@@648)) ($generated@@290 ($generated@@319 $generated@@648))))
 :pattern ( ($generated@@319 ($generated@@290 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@323 ($generated@@290 $generated@@649)) ($generated@@290 ($generated@@323 $generated@@649)))
 :pattern ( ($generated@@323 ($generated@@290 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@142 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@139 $generated@@651)) (= ($generated@@163 $generated@@650) 0)) (= $generated@@650 ($generated@@309 $generated@@651))))
 :pattern ( ($generated@@163 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@653)))
 (=> (and (and (= (type $generated@@652) ($generated@@80 $generated@@655 $generated@@2)) (= (type $generated@@654) $generated@@2)) (<= 0 ($generated $generated@@654))) (= ($generated@@336 ($generated@@86 $generated@@652 $generated@@653 $generated@@654)) (+ (- ($generated@@336 $generated@@652) ($generated ($generated@@85 $generated@@652 $generated@@653))) ($generated $generated@@654)))))
 :pattern ( ($generated@@336 ($generated@@86 $generated@@652 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@2)) ($generated@@78 $generated@@657 $generated@@46 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@46 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@659) $generated@@3)) ($generated@@78 $generated@@659 $generated@@47 $generated@@658))
 :pattern ( ($generated@@78 $generated@@659 $generated@@47 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) $generated@@4)) ($generated@@78 $generated@@661 $generated@@44 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@44 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@663) $generated@@514)) ($generated@@78 $generated@@663 $generated@@45 $generated@@662))
 :pattern ( ($generated@@78 $generated@@663 $generated@@45 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@665) $generated@@140)) ($generated@@78 $generated@@665 $generated@@48 $generated@@664))
 :pattern ( ($generated@@78 $generated@@665 $generated@@48 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@139 $generated@@140)) (= (type $generated@@667) $generated@@68)) (= ($generated@@159 $generated@@666 ($generated@@160 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@163 $generated@@666))) ($generated@@161 ($generated@@164 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@164 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@159 $generated@@666 ($generated@@160 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@139 $generated@@140)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@163 $generated@@670))) (< ($generated@@596 ($generated@@429 $generated@@178 ($generated@@164 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@596 ($generated@@429 $generated@@178 ($generated@@164 $generated@@670 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) $generated@@68)) ($generated@@159 $generated@@672 ($generated@@457 $generated@@673 $generated@@674))) (and (and ($generated@@159 ($generated@@345 $generated@@672) ($generated@@279 $generated@@673)) ($generated@@159 ($generated@@388 $generated@@672) ($generated@@279 $generated@@674))) ($generated@@159 ($generated@@428 $generated@@672) ($generated@@279 ($generated@@185 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@159 $generated@@672 ($generated@@457 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) $generated@@68)) ($generated@@159 $generated@@675 ($generated@@465 $generated@@676 $generated@@677))) (and (and ($generated@@159 ($generated@@363 $generated@@675) ($generated@@284 $generated@@676)) ($generated@@159 ($generated@@399 $generated@@675) ($generated@@284 $generated@@677))) ($generated@@159 ($generated@@439 $generated@@675) ($generated@@284 ($generated@@185 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@159 $generated@@675 ($generated@@465 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@2) ($generated@@159 $generated@@678 $generated@@46))
 :pattern ( ($generated@@159 $generated@@678 $generated@@46))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@3) ($generated@@159 $generated@@679 $generated@@47))
 :pattern ( ($generated@@159 $generated@@679 $generated@@47))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@4) ($generated@@159 $generated@@680 $generated@@44))
 :pattern ( ($generated@@159 $generated@@680 $generated@@44))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@514) ($generated@@159 $generated@@681 $generated@@45))
 :pattern ( ($generated@@159 $generated@@681 $generated@@45))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@140) ($generated@@159 $generated@@682 $generated@@48))
 :pattern ( ($generated@@159 $generated@@682 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 (T@U) Bool)
(declare-fun $generated@@697 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@683) $generated@@178) (= (type $generated@@684) $generated@@140)) (= (type $generated@@685) $generated@@68)) (= (type $generated@@686) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@687) ($generated@@139 $generated@@140))) (= (type $generated@@692) $generated@@140)) (= (type $generated@@693) ($generated@@208 $generated@@81 $generated@@4))) (= (type $generated@@694) $generated@@81)) (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@697) $generated@@178)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@698 true))
(let (($generated@@699  (=> ($generated@@294 $generated@@683) (=> (and (and (and ($generated@@161 $generated@@684 $generated@@685) ($generated@@297 $generated@@684 $generated@@685 $generated@@686)) (and ($generated@@78 $generated@@687 ($generated@@160 $generated@@685) $generated@@686) (= $generated@@688 ($generated@@162 0)))) (and (and ($generated@@78 ($generated@@8 $generated@@688) $generated@@46 $generated@@686) (= $generated@@689 ($generated@@163 $generated@@687))) (and ($generated@@78 ($generated@@8 $generated@@689) $generated@@46 $generated@@686) ($generated@@297 $generated@@684 $generated@@685 $generated@@686)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@162 0) $generated@@688)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@688 $generated@@689)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@689 ($generated@@163 $generated@@687)))))))))
(let (($generated@@700  (=> (=> ($generated@@177 $generated@@683) (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@685 ($generated@@157 $generated@@141) $generated@@687 ($generated@@162 0) ($generated@@163 $generated@@687) ($generated@@179 $generated@@683))) ($generated@@163 $generated@@687))) (and (=> (= (ControlFlow 0 11) 2) $generated@@699) (=> (= (ControlFlow 0 11) 5) $generated@@698)))))
(let (($generated@@701  (=> ($generated@@177 $generated@@683) (and (=> (= (ControlFlow 0 6) (- 0 10)) ($generated@@177 $generated@@683)) (=> ($generated@@177 $generated@@683) (=> ($generated@@78 $generated@@687 ($generated@@160 $generated@@685) $generated@@686) (=> (and (= $generated@@690 ($generated@@162 0)) ($generated@@78 ($generated@@8 $generated@@690) $generated@@46 $generated@@686)) (=> (and (and (= $generated@@691 ($generated@@163 $generated@@687)) ($generated@@78 ($generated@@8 $generated@@691) $generated@@46 $generated@@686)) (and (= $generated@@692 ($generated@@179 $generated@@683)) ($generated@@297 $generated@@692 $generated@@685 $generated@@686))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= ($generated@@162 0) $generated@@690)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (<= $generated@@690 $generated@@691)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= $generated@@691 ($generated@@163 $generated@@687))) (=> (and (and (and (<= ($generated@@162 0) $generated@@690) (<= $generated@@690 $generated@@691)) (<= $generated@@691 ($generated@@163 $generated@@687))) (and ($generated@@158 $generated@@685 $generated@@687 ($generated@@162 0) ($generated@@163 $generated@@687) ($generated@@179 $generated@@683)) (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@685 ($generated@@157 $generated@@141) $generated@@687 ($generated@@162 0) ($generated@@163 $generated@@687) ($generated@@179 $generated@@683))) ($generated@@163 $generated@@687)))) (and (=> (= (ControlFlow 0 6) 2) $generated@@699) (=> (= (ControlFlow 0 6) 5) $generated@@698))))))))))))))
(let (($generated@@702  (=> (= $generated@@693 ($generated@@207 $generated@@694 $generated@@695 $generated@@60 false)) (=> (and ($generated@@263 $generated@@686) ($generated@@696 $generated@@686)) (=> (and (and (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@81) (=> (and (not (= $generated@@703 $generated@@694)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@695 $generated@@703) $generated@@60))) (= ($generated@@85 $generated@@686 $generated@@703) ($generated@@85 $generated@@695 $generated@@703))))
 :pattern ( ($generated@@85 $generated@@686 $generated@@703))
)) ($generated@@152 $generated@@695 $generated@@686)) (and ($generated@@159 $generated@@683 ($generated@@262 $generated@@685)) ($generated@@78 $generated@@683 ($generated@@262 $generated@@685) $generated@@686))) (and (=> (= (ControlFlow 0 12) 6) $generated@@701) (=> (= (ControlFlow 0 12) 11) $generated@@700)))))))
(let (($generated@@704  (=> (and (and (and ($generated@@263 $generated@@695) ($generated@@696 $generated@@695)) (and ($generated@@159 $generated@@687 ($generated@@160 $generated@@685)) ($generated@@78 $generated@@687 ($generated@@160 $generated@@685) $generated@@695))) (and (and ($generated@@159 $generated@@697 ($generated@@262 $generated@@685)) ($generated@@78 $generated@@697 ($generated@@262 $generated@@685) $generated@@695)) (and (= 3 $generated@@156) (= (ControlFlow 0 13) 12)))) $generated@@702)))
$generated@@704)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (Int) Int)
(declare-fun $generated@@163 (T@U) Int)
(declare-fun $generated@@164 (T@U Int) T@U)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@297 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@T T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@457 (T@U T@U) T@U)
(declare-fun $generated@@465 (T@U T@U) T@U)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@514 () T@T)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@618 (Int Int) Int)
(declare-fun $generated@@669 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@143 T@T) ) (= ($generated@@1 ($generated@@139 $generated@@143)) 15))) (forall (($generated@@144 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@139 $generated@@144))
))) (= ($generated@@1 $generated@@140) 16)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@137 $generated@@145)) $generated@@138)
 :pattern ( ($generated@@137 $generated@@145))
))) (= (type $generated@@141) $generated@@138)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@68) (= (type $generated@@147) $generated@@138)) (= (type $generated@@148) ($generated@@139 $generated@@140))) (= (type $generated@@151) $generated@@140)) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@150 $generated@@151) ($generated@@136 $generated@@146 $generated@@141 $generated@@148 $generated@@149 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@136 $generated@@146 ($generated@@137 $generated@@147) $generated@@148 $generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@153 $generated@@155) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60))
)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert  (and (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@157 $generated@@165)) $generated@@138)
 :pattern ( ($generated@@157 $generated@@165))
)) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@160 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@160 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (! (let (($generated@@169 ($generated@@142 (type $generated@@167))))
(= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@169))
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ($generated@@175 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@138)) (= (type $generated@@172) ($generated@@139 $generated@@140))) (= (type $generated@@175) $generated@@140)) (or ($generated@@158 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@175) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@172 ($generated@@160 $generated@@170)) ($generated@@161 $generated@@175 $generated@@170)) (and (and (<= ($generated@@162 0) $generated@@173) (<= $generated@@173 $generated@@174)) (<= $generated@@174 ($generated@@163 $generated@@172))))))) (and (=> (not (= $generated@@173 $generated@@174)) ($generated@@158 $generated@@170 $generated@@172 $generated@@173 (- $generated@@174 1) $generated@@175)) (= ($generated@@136 $generated@@170 ($generated@@157 $generated@@171) $generated@@172 $generated@@173 $generated@@174 $generated@@175) (ite (= $generated@@173 $generated@@174) 0 (+ ($generated@@136 $generated@@170 $generated@@171 $generated@@172 $generated@@173 (- $generated@@174 1) $generated@@175) (ite (= ($generated@@164 $generated@@172 (- $generated@@174 1)) $generated@@175) 1 0))))))
 :pattern ( ($generated@@136 $generated@@170 ($generated@@157 $generated@@171) $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert  (and (= ($generated@@1 $generated@@178) 17) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@140)
 :pattern ( ($generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@178) (= (type $generated@@182) $generated@@178)) (and ($generated@@177 $generated@@181) ($generated@@177 $generated@@182))) (= ($generated@@176 $generated@@181 $generated@@182) (= ($generated@@179 $generated@@181) ($generated@@179 $generated@@182))))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182) ($generated@@177 $generated@@181))
 :pattern ( ($generated@@176 $generated@@181 $generated@@182) ($generated@@177 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@159 $generated@@183 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@183 ($generated@@79 0)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@68)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@68) (= (type $generated@@189) $generated@@68)) (= (type $generated@@190) $generated@@178)) ($generated@@159 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@159 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (forall (($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@194)) $generated@@140)
 :pattern ( ($generated@@192 $generated@@194))
)) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@140)
 :pattern ( ($generated@@193 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) $generated@@178) (= (type $generated@@197) $generated@@178)) true) (= ($generated@@191 $generated@@196 $generated@@197)  (and (= ($generated@@192 $generated@@196) ($generated@@192 $generated@@197)) (= ($generated@@193 $generated@@196) ($generated@@193 $generated@@197)))))
 :pattern ( ($generated@@191 $generated@@196 $generated@@197))
)))
(assert  (and (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@72)
 :pattern ( ($generated@@198 $generated@@200))
)) (= (type $generated@@199) $generated@@178)))
(assert (= ($generated@@198 $generated@@199) $generated@@63))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@68)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@205) $generated@@68)) ($generated@@159 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@159 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 18)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@81 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@71 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@81) (= (type $generated@@256) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@257) ($generated@@70 $generated@@4))) (= (type $generated@@259) $generated@@81)) (= (type $generated@@260) ($generated@@70 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@262 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@263 $generated@@266)) ($generated@@78 $generated@@199 ($generated@@262 $generated@@265) $generated@@266))
 :pattern ( ($generated@@78 $generated@@199 ($generated@@262 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@267 $generated@@268 $generated@@269)) $generated@@178)
 :pattern ( ($generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@140)) (= (type $generated@@273) $generated@@140)) (= ($generated@@159 ($generated@@267 $generated@@272 $generated@@273) ($generated@@185 $generated@@270 $generated@@271))  (and ($generated@@161 $generated@@272 $generated@@270) ($generated@@161 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@159 ($generated@@267 $generated@@272 $generated@@273) ($generated@@185 $generated@@270 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@68) ($generated@@159 $generated@@199 ($generated@@262 $generated@@274)))
 :pattern ( ($generated@@159 $generated@@199 ($generated@@262 $generated@@274)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@178) (= (type $generated@@276) $generated@@178)) (= ($generated@@191 $generated@@275 $generated@@276) (= $generated@@275 $generated@@276)))
 :pattern ( ($generated@@191 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@178) (= (type $generated@@278) $generated@@178)) (= ($generated@@176 $generated@@277 $generated@@278) (= $generated@@277 $generated@@278)))
 :pattern ( ($generated@@176 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@282) $generated@@68)) (= ($generated@@159 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@140) ($generated@@0 ($generated@@85 $generated@@281 $generated@@283))) ($generated@@161 $generated@@283 $generated@@282))
 :pattern ( ($generated@@85 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@159 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@287) $generated@@68)) (= ($generated@@159 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@140) ($generated@@0 ($generated@@85 $generated@@286 $generated@@288))) ($generated@@161 $generated@@288 $generated@@287))
 :pattern ( ($generated@@85 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@159 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@289 Int) ) (! (= ($generated@@162 $generated@@289) $generated@@289)
 :pattern ( ($generated@@162 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 (type $generated@@291)))
(= (type ($generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@290 $generated@@293) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@178) (= (type $generated@@296) $generated@@178)) (and ($generated@@294 $generated@@295) ($generated@@294 $generated@@296))) (= ($generated@@176 $generated@@295 $generated@@296) true))
 :pattern ( ($generated@@176 $generated@@295 $generated@@296) ($generated@@294 $generated@@295))
 :pattern ( ($generated@@176 $generated@@295 $generated@@296) ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) $generated@@68)) (= (type $generated@@300) $generated@@140)) (= (type $generated@@301) $generated@@140)) (= (type $generated@@302) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@263 $generated@@302)) (= ($generated@@78 ($generated@@267 $generated@@300 $generated@@301) ($generated@@185 $generated@@298 $generated@@299) $generated@@302)  (and ($generated@@297 $generated@@300 $generated@@298 $generated@@302) ($generated@@297 $generated@@301 $generated@@299 $generated@@302))))
 :pattern ( ($generated@@78 ($generated@@267 $generated@@300 $generated@@301) ($generated@@185 $generated@@298 $generated@@299) $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@178) (= ($generated@@184 $generated@@303) (= ($generated@@198 $generated@@303) $generated@@61)))
 :pattern ( ($generated@@184 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@178) (= ($generated@@294 $generated@@304) (= ($generated@@198 $generated@@304) $generated@@63)))
 :pattern ( ($generated@@294 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@178) (= ($generated@@177 $generated@@305) (= ($generated@@198 $generated@@305) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@178) ($generated@@184 $generated@@306)) (exists (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (and (and (= (type $generated@@307) $generated@@140) (= (type $generated@@308) $generated@@140)) (= $generated@@306 ($generated@@267 $generated@@307 $generated@@308)))
 :no-pattern (type $generated@@307)
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
)))
 :pattern ( ($generated@@184 $generated@@306))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@139 $generated@@310))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@163 ($generated@@309 $generated@@311)) 0)
 :pattern ( ($generated@@309 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@178) ($generated@@294 $generated@@312)) (= $generated@@312 $generated@@199))
 :pattern ( ($generated@@294 $generated@@312))
)))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 Int) ($generated@@317 Int) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) $generated@@138)) (= (type $generated@@315) ($generated@@139 $generated@@140))) (= (type $generated@@318) $generated@@140)) (or ($generated@@158 $generated@@313 ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 $generated@@317) $generated@@318) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@315 ($generated@@160 $generated@@313)) ($generated@@161 $generated@@318 $generated@@313)) (and (and (<= ($generated@@162 0) ($generated@@162 $generated@@316)) (<= ($generated@@162 $generated@@316) ($generated@@162 $generated@@317))) (<= ($generated@@162 $generated@@317) ($generated@@163 ($generated@@290 $generated@@315)))))))) (and (=> (not (= ($generated@@162 $generated@@316) ($generated@@162 $generated@@317))) ($generated@@158 $generated@@313 ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 (- $generated@@317 1)) $generated@@318)) (= ($generated@@136 $generated@@313 ($generated@@157 $generated@@314) ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 $generated@@317) $generated@@318) (ite (= ($generated@@162 $generated@@316) ($generated@@162 $generated@@317)) 0 (+ ($generated@@136 $generated@@313 ($generated@@157 $generated@@314) ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 (- $generated@@317 1)) $generated@@318) (ite (= ($generated@@164 ($generated@@290 $generated@@315) ($generated@@162 (- $generated@@317 1))) $generated@@318) 1 0))))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@313 ($generated@@157 $generated@@314) ($generated@@290 $generated@@315) ($generated@@162 $generated@@316) ($generated@@162 $generated@@317) $generated@@318))
))))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@178)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@178) ($generated@@177 $generated@@321)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@140) (= $generated@@321 ($generated@@319 $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
)))
 :pattern ( ($generated@@177 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@140)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@68) (= (type $generated@@327) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@297 ($generated@@323 $generated@@325) $generated@@326 $generated@@327) ($generated@@78 $generated@@325 $generated@@326 $generated@@327)))
 :pattern ( ($generated@@297 ($generated@@323 $generated@@325) $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@328) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@329) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@330) $generated@@140)) (= (type $generated@@331) $generated@@68)) ($generated@@152 $generated@@328 $generated@@329)) ($generated@@297 $generated@@330 $generated@@331 $generated@@328)) ($generated@@297 $generated@@330 $generated@@331 $generated@@329))
 :pattern ( ($generated@@152 $generated@@328 $generated@@329) ($generated@@297 $generated@@330 $generated@@331 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@332) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@333) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@335) $generated@@68)) ($generated@@152 $generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@335 $generated@@332)) ($generated@@78 $generated@@334 $generated@@335 $generated@@333))
 :pattern ( ($generated@@152 $generated@@332 $generated@@333) ($generated@@78 $generated@@334 $generated@@335 $generated@@332))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@80 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@83 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@80 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@85 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@73)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@68) (and (= ($generated@@76 ($generated@@262 $generated@@344)) $generated@@64) (= ($generated@@342 ($generated@@262 $generated@@344)) $generated@@67)))
 :pattern ( ($generated@@262 $generated@@344))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@80 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@85 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@85 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@83 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@80 $generated@@382 $generated@@2)) (= ($generated@@202 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@85 $generated@@381 $generated@@383))) (<= ($generated ($generated@@85 $generated@@381 $generated@@383)) ($generated@@336 $generated@@381))))
 :pattern ( ($generated@@85 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@202 $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@345 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@349 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@80 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@349 (type $generated@@391))))
(let (($generated@@393 ($generated@@348 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@347 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@346 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@367 (type $generated@@395))))
(let (($generated@@397 ($generated@@366 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@365 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@364 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@363 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@367 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@80 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@367 (type $generated@@402))))
(let (($generated@@404 ($generated@@366 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@365 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@364 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@85 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@407) $generated@@68)) (= ($generated@@159 $generated@@406 ($generated@@201 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@406 $generated@@408)))) ($generated@@161 $generated@@408 $generated@@407))
 :pattern ( ($generated@@85 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@159 $generated@@406 ($generated@@201 $generated@@407)))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) $generated@@68) (= (type $generated@@410) $generated@@140)) (= (type $generated@@411) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@263 $generated@@411)) (= ($generated@@78 ($generated@@319 $generated@@410) ($generated@@262 $generated@@409) $generated@@411) ($generated@@297 $generated@@410 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@78 ($generated@@319 $generated@@410) ($generated@@262 $generated@@409) $generated@@411))
)))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) $generated@@68) (= (type $generated@@413) $generated@@138)) (= (type $generated@@414) ($generated@@139 $generated@@140))) (= (type $generated@@417) $generated@@140)) (or ($generated@@158 $generated@@412 $generated@@414 $generated@@415 $generated@@416 $generated@@417) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@414 ($generated@@160 $generated@@412)) ($generated@@161 $generated@@417 $generated@@412)) (and (and (<= ($generated@@162 0) $generated@@415) (<= $generated@@415 $generated@@416)) (<= $generated@@416 ($generated@@163 $generated@@414))))))) true)
 :pattern ( ($generated@@136 $generated@@412 $generated@@413 $generated@@414 $generated@@415 $generated@@416 $generated@@417))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@279 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@140) ($generated@@0 ($generated@@85 $generated@@418 $generated@@421))) ($generated@@297 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@85 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@279 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@422) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@422 ($generated@@284 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@140) ($generated@@0 ($generated@@85 $generated@@422 $generated@@425))) ($generated@@297 $generated@@425 $generated@@423 $generated@@424))
 :pattern ( ($generated@@85 $generated@@422 $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@422 ($generated@@284 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(= ($generated ($generated@@85 ($generated@@337 $generated@@427) $generated@@426)) 0))
 :pattern ( (let (($generated@@427 (type $generated@@426)))
($generated@@85 ($generated@@337 $generated@@427) $generated@@426)))
)))
(assert  (and (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@428 $generated@@431)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@428 $generated@@431))
)) (forall (($generated@@432 T@T) ($generated@@433 T@U) ) (! (= (type ($generated@@429 $generated@@432 $generated@@433)) $generated@@432)
 :pattern ( ($generated@@429 $generated@@432 $generated@@433))
))) (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@349 (type $generated@@434))))
(let (($generated@@436 ($generated@@348 (type $generated@@434))))
(= (type ($generated@@430 $generated@@434)) ($generated@@80 $generated@@436 $generated@@435))))
 :pattern ( ($generated@@430 $generated@@434))
))))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@438) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@428 $generated@@437) $generated@@438))  (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@437) ($generated@@192 ($generated@@429 $generated@@178 $generated@@438)))) (= ($generated@@85 ($generated@@430 $generated@@437) ($generated@@192 ($generated@@429 $generated@@178 $generated@@438))) ($generated@@193 ($generated@@429 $generated@@178 $generated@@438))))))
 :pattern ( ($generated@@85 ($generated@@428 $generated@@437) $generated@@438))
)))
(assert  (and (forall (($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@441)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@439 $generated@@441))
)) (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@367 (type $generated@@442))))
(let (($generated@@444 ($generated@@366 (type $generated@@442))))
(= (type ($generated@@440 $generated@@442)) ($generated@@80 $generated@@444 $generated@@443))))
 :pattern ( ($generated@@440 $generated@@442))
))))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@446) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@85 ($generated@@363 $generated@@445) ($generated@@192 ($generated@@429 $generated@@178 $generated@@446)))) (= ($generated@@85 ($generated@@440 $generated@@445) ($generated@@192 ($generated@@429 $generated@@178 $generated@@446))) ($generated@@193 ($generated@@429 $generated@@178 $generated@@446))))))
 :pattern ( ($generated@@85 ($generated@@439 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@348 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@347 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@85 ($generated@@430 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@447) $generated@@451))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@366 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@365 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@85 ($generated@@399 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@85 ($generated@@363 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@452) $generated@@456))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@85 ($generated@@399 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (and (and (= (type $generated@@460) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@461) $generated@@68)) (= (type $generated@@462) $generated@@68)) (= (type $generated@@463) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463) (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@460) $generated@@464))) (and ($generated@@297 ($generated@@85 ($generated@@430 $generated@@460) $generated@@464) $generated@@462 $generated@@463) ($generated@@297 $generated@@464 $generated@@461 $generated@@463)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@460) $generated@@464))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@460) $generated@@464))
))))
 :pattern ( ($generated@@78 $generated@@460 ($generated@@457 $generated@@461 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@465 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (and (= (type $generated@@468) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@469) $generated@@68)) (= (type $generated@@470) $generated@@68)) (= (type $generated@@471) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@468) $generated@@472))) (and ($generated@@297 ($generated@@85 ($generated@@440 $generated@@468) $generated@@472) $generated@@470 $generated@@471) ($generated@@297 $generated@@472 $generated@@469 $generated@@471)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@468) $generated@@472))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@468) $generated@@472))
))))
 :pattern ( ($generated@@78 $generated@@468 ($generated@@465 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@178)) ($generated@@159 $generated@@474 ($generated@@262 $generated@@473))) (or ($generated@@294 $generated@@474) ($generated@@177 $generated@@474)))
 :pattern ( ($generated@@177 $generated@@474) ($generated@@159 $generated@@474 ($generated@@262 $generated@@473)))
 :pattern ( ($generated@@294 $generated@@474) ($generated@@159 $generated@@474 ($generated@@262 $generated@@473)))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 Int) ($generated@@479 Int) ($generated@@480 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@138)) (= (type $generated@@477) ($generated@@139 $generated@@140))) (= (type $generated@@480) $generated@@140)) (= ($generated@@136 $generated@@475 ($generated@@157 $generated@@476) $generated@@477 $generated@@478 $generated@@479 $generated@@480) ($generated@@136 $generated@@475 $generated@@476 $generated@@477 $generated@@478 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@136 $generated@@475 ($generated@@157 $generated@@476) $generated@@477 $generated@@478 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@481) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@482) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@483) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@481 $generated@@483))) (and ($generated@@152 $generated@@481 $generated@@482) ($generated@@152 $generated@@482 $generated@@483))) ($generated@@152 $generated@@481 $generated@@483))
 :pattern ( ($generated@@152 $generated@@481 $generated@@482) ($generated@@152 $generated@@482 $generated@@483))
)))
(assert  (=> (<= 0 $generated@@156) (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 Int) ($generated@@488 Int) ($generated@@489 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@138)) (= (type $generated@@486) ($generated@@139 $generated@@140))) (= (type $generated@@489) $generated@@140)) (or ($generated@@158 $generated@@484 ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 $generated@@488) ($generated@@290 $generated@@489)) (and (not (= 0 $generated@@156)) (and (and ($generated@@159 $generated@@486 ($generated@@160 $generated@@484)) ($generated@@161 $generated@@489 $generated@@484)) (and (and (<= ($generated@@162 0) ($generated@@162 $generated@@487)) (<= ($generated@@162 $generated@@487) ($generated@@162 $generated@@488))) (<= ($generated@@162 $generated@@488) ($generated@@163 ($generated@@290 $generated@@486)))))))) (and (=> (not (= ($generated@@162 $generated@@487) ($generated@@162 $generated@@488))) ($generated@@158 $generated@@484 ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 (- $generated@@488 1)) ($generated@@290 $generated@@489))) (= ($generated@@136 $generated@@484 ($generated@@157 $generated@@485) ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 $generated@@488) ($generated@@290 $generated@@489)) (ite (= ($generated@@162 $generated@@487) ($generated@@162 $generated@@488)) 0 (+ ($generated@@136 $generated@@484 ($generated@@157 $generated@@485) ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 (- $generated@@488 1)) ($generated@@290 $generated@@489)) (ite (= ($generated@@164 ($generated@@290 $generated@@486) ($generated@@162 (- $generated@@488 1))) ($generated@@290 $generated@@489)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@136 $generated@@484 ($generated@@157 $generated@@485) ($generated@@290 $generated@@486) ($generated@@162 $generated@@487) ($generated@@162 $generated@@488) ($generated@@290 $generated@@489)))
))))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@80 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@367 (type $generated@@492))))
(let (($generated@@494 ($generated@@366 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@365 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@364 $generated@@494 $generated@@493)) (= ($generated@@363 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@363 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@367 (type $generated@@495))))
(let (($generated@@497 ($generated@@366 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@365 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@364 $generated@@497 $generated@@496)) (= ($generated@@399 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@399 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@367 (type $generated@@498))))
(let (($generated@@500 ($generated@@366 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@365 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@364 $generated@@500 $generated@@499)) (= ($generated@@439 $generated@@498) ($generated@@490 $generated@@140))))))
 :pattern ( ($generated@@439 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@349 (type $generated@@501))))
(let (($generated@@503 ($generated@@348 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@347 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@346 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@140) (= (type $generated@@505) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@428 $generated@@501) ($generated@@323 ($generated@@267 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@428 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@367 (type $generated@@506))))
(let (($generated@@508 ($generated@@366 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@365 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@364 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@140) (= (type $generated@@510) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@439 $generated@@506) ($generated@@323 ($generated@@267 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@439 $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@140) ($generated@@161 $generated@@511 $generated@@46)) (and (= ($generated@@323 ($generated@@429 $generated@@2 $generated@@511)) $generated@@511) ($generated@@159 ($generated@@429 $generated@@2 $generated@@511) $generated@@46)))
 :pattern ( ($generated@@161 $generated@@511 $generated@@46))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@140) ($generated@@161 $generated@@512 $generated@@47)) (and (= ($generated@@323 ($generated@@429 $generated@@3 $generated@@512)) $generated@@512) ($generated@@159 ($generated@@429 $generated@@3 $generated@@512) $generated@@47)))
 :pattern ( ($generated@@161 $generated@@512 $generated@@47))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@140) ($generated@@161 $generated@@513 $generated@@44)) (and (= ($generated@@323 ($generated@@429 $generated@@4 $generated@@513)) $generated@@513) ($generated@@159 ($generated@@429 $generated@@4 $generated@@513) $generated@@44)))
 :pattern ( ($generated@@161 $generated@@513 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@514) 21))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@140) ($generated@@161 $generated@@515 $generated@@45)) (and (= ($generated@@323 ($generated@@429 $generated@@514 $generated@@515)) $generated@@515) ($generated@@159 ($generated@@429 $generated@@514 $generated@@515) $generated@@45)))
 :pattern ( ($generated@@161 $generated@@515 $generated@@45))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@161 ($generated@@323 $generated@@516) $generated@@517) ($generated@@159 $generated@@516 $generated@@517)))
 :pattern ( ($generated@@161 ($generated@@323 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@83 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@80 $generated@@519 $generated@@2)) (<= 0 ($generated@@336 $generated@@518))))
 :pattern ( ($generated@@336 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@142 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@139 $generated@@521)) (<= 0 ($generated@@163 $generated@@520))))
 :pattern ( ($generated@@163 $generated@@520))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@457 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@457 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@457 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@457 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@76 ($generated@@457 $generated@@530 $generated@@531)) $generated@@58))
 :pattern ( ($generated@@457 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@68) (= (type $generated@@535) $generated@@68)) (= ($generated@@532 ($generated@@465 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@465 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (= ($generated@@536 ($generated@@465 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@465 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@76 ($generated@@465 $generated@@540 $generated@@541)) $generated@@59))
 :pattern ( ($generated@@465 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@140)) (= ($generated@@198 ($generated@@267 $generated@@542 $generated@@543)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@68) (= (type $generated@@547) $generated@@68)) (= ($generated@@544 ($generated@@185 $generated@@546 $generated@@547)) $generated@@546))
 :pattern ( ($generated@@185 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@68) (= (type $generated@@551) $generated@@68)) (= ($generated@@548 ($generated@@185 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@185 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@140) (= (type $generated@@553) $generated@@140)) (= ($generated@@192 ($generated@@267 $generated@@552 $generated@@553)) $generated@@552))
 :pattern ( ($generated@@267 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@140) (= (type $generated@@555) $generated@@140)) (= ($generated@@193 ($generated@@267 $generated@@554 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@267 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@139 $generated@@140)) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@556 ($generated@@160 $generated@@557) $generated@@558) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@163 $generated@@556))) ($generated@@297 ($generated@@164 $generated@@556 $generated@@559) $generated@@557 $generated@@558))
 :pattern ( ($generated@@164 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@78 $generated@@556 ($generated@@160 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@560 ($generated@@79 $generated@@561)) $generated@@561)
 :pattern ( ($generated@@79 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@279 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@279 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@76 ($generated@@279 $generated@@565)) $generated@@54))
 :pattern ( ($generated@@279 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@284 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@284 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@76 ($generated@@284 $generated@@569)) $generated@@55))
 :pattern ( ($generated@@284 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@201 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@201 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@68) (= ($generated@@76 ($generated@@201 $generated@@573)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@68)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@68) (= ($generated@@574 ($generated@@160 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@160 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@68) (= ($generated@@76 ($generated@@160 $generated@@577)) $generated@@57))
 :pattern ( ($generated@@160 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@68)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@578 ($generated@@262 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@262 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@140) (= ($generated@@198 ($generated@@319 $generated@@581)) $generated@@65))
 :pattern ( ($generated@@319 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@140) (= ($generated@@179 ($generated@@319 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@319 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@429 $generated@@584 ($generated@@323 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@323 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) (= ($generated@@159 $generated@@585 ($generated@@457 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@585) $generated@@588))) (and ($generated@@161 ($generated@@85 ($generated@@430 $generated@@585) $generated@@588) $generated@@587) ($generated@@161 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@85 ($generated@@430 $generated@@585) $generated@@588))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@159 $generated@@585 ($generated@@457 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) (= ($generated@@159 $generated@@589 ($generated@@465 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@363 $generated@@589) $generated@@592))) (and ($generated@@161 ($generated@@85 ($generated@@440 $generated@@589) $generated@@592) $generated@@591) ($generated@@161 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@85 ($generated@@440 $generated@@589) $generated@@592))
 :pattern ( ($generated@@85 ($generated@@363 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@159 $generated@@589 ($generated@@465 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@140)) (= ($generated@@159 ($generated@@319 $generated@@594) ($generated@@262 $generated@@593)) ($generated@@161 $generated@@594 $generated@@593)))
 :pattern ( ($generated@@159 ($generated@@319 $generated@@594) ($generated@@262 $generated@@593)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@140) (= (type $generated@@598) $generated@@140)) (< ($generated@@595 $generated@@597) ($generated@@596 ($generated@@267 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@267 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@140) (= (type $generated@@600) $generated@@140)) (< ($generated@@595 $generated@@600) ($generated@@596 ($generated@@267 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@267 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@140) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@161 $generated@@601 ($generated@@457 $generated@@602 $generated@@603))) (and (= ($generated@@323 ($generated@@429 ($generated@@347 $generated@@140 $generated@@140) $generated@@601)) $generated@@601) ($generated@@159 ($generated@@429 ($generated@@347 $generated@@140 $generated@@140) $generated@@601) ($generated@@457 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@161 $generated@@601 ($generated@@457 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@140) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@161 $generated@@604 ($generated@@465 $generated@@605 $generated@@606))) (and (= ($generated@@323 ($generated@@429 ($generated@@365 $generated@@140 $generated@@140) $generated@@604)) $generated@@604) ($generated@@159 ($generated@@429 ($generated@@365 $generated@@140 $generated@@140) $generated@@604) ($generated@@465 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@161 $generated@@604 ($generated@@465 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@140)) ($generated@@161 $generated@@609 ($generated@@185 $generated@@607 $generated@@608))) (and (= ($generated@@323 ($generated@@429 $generated@@178 $generated@@609)) $generated@@609) ($generated@@159 ($generated@@429 $generated@@178 $generated@@609) ($generated@@185 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@161 $generated@@609 ($generated@@185 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@140) (< ($generated@@595 $generated@@610) ($generated@@596 ($generated@@319 $generated@@610))))
 :pattern ( ($generated@@319 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@178) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@263 $generated@@613) (and ($generated@@177 $generated@@611) ($generated@@78 $generated@@611 ($generated@@262 $generated@@612) $generated@@613)))) ($generated@@297 ($generated@@179 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@297 ($generated@@179 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@85 ($generated@@490 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@85 ($generated@@490 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@68)) (and (= ($generated@@76 ($generated@@185 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@342 ($generated@@185 $generated@@616 $generated@@617)) $generated@@66)))
 :pattern ( ($generated@@185 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 Int) ) (! (= ($generated@@618 $generated@@619 $generated@@620) (* $generated@@619 $generated@@620))
 :pattern ( ($generated@@618 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@178) (= ($generated@@595 ($generated@@323 $generated@@621)) ($generated@@596 $generated@@621)))
 :pattern ( ($generated@@595 ($generated@@323 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@140) ($generated@@161 $generated@@622 ($generated@@79 0))) (and (= ($generated@@323 ($generated@@429 $generated@@2 $generated@@622)) $generated@@622) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@622) ($generated@@79 0))))
 :pattern ( ($generated@@161 $generated@@622 ($generated@@79 0)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@140) (= (type $generated@@624) $generated@@68)) ($generated@@161 $generated@@623 ($generated@@279 $generated@@624))) (and (= ($generated@@323 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@623)) $generated@@623) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@623) ($generated@@279 $generated@@624))))
 :pattern ( ($generated@@161 $generated@@623 ($generated@@279 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@140) (= (type $generated@@626) $generated@@68)) ($generated@@161 $generated@@625 ($generated@@284 $generated@@626))) (and (= ($generated@@323 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@625)) $generated@@625) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@4) $generated@@625) ($generated@@284 $generated@@626))))
 :pattern ( ($generated@@161 $generated@@625 ($generated@@284 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@140) (= (type $generated@@628) $generated@@68)) ($generated@@161 $generated@@627 ($generated@@201 $generated@@628))) (and (= ($generated@@323 ($generated@@429 ($generated@@80 $generated@@140 $generated@@2) $generated@@627)) $generated@@627) ($generated@@159 ($generated@@429 ($generated@@80 $generated@@140 $generated@@2) $generated@@627) ($generated@@201 $generated@@628))))
 :pattern ( ($generated@@161 $generated@@627 ($generated@@201 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@140) (= (type $generated@@630) $generated@@68)) ($generated@@161 $generated@@629 ($generated@@160 $generated@@630))) (and (= ($generated@@323 ($generated@@429 ($generated@@139 $generated@@140) $generated@@629)) $generated@@629) ($generated@@159 ($generated@@429 ($generated@@139 $generated@@140) $generated@@629) ($generated@@160 $generated@@630))))
 :pattern ( ($generated@@161 $generated@@629 ($generated@@160 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@68) (= (type $generated@@632) $generated@@140)) ($generated@@161 $generated@@632 ($generated@@262 $generated@@631))) (and (= ($generated@@323 ($generated@@429 $generated@@178 $generated@@632)) $generated@@632) ($generated@@159 ($generated@@429 $generated@@178 $generated@@632) ($generated@@262 $generated@@631))))
 :pattern ( ($generated@@161 $generated@@632 ($generated@@262 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@633 ($generated@@201 $generated@@634) $generated@@635) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@633 $generated@@636)))) ($generated@@297 $generated@@636 $generated@@634 $generated@@635))
 :pattern ( ($generated@@85 $generated@@633 $generated@@636))
))))
 :pattern ( ($generated@@78 $generated@@633 ($generated@@201 $generated@@634) $generated@@635))
)))
(assert (= $generated@@199 ($generated@@290 $generated@@199)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@178) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@263 $generated@@639) (and ($generated@@184 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@68) ($generated@@78 $generated@@637 ($generated@@185 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@78 $generated@@637 ($generated@@185 $generated@@638 $generated@@640) $generated@@639))
))))) ($generated@@297 ($generated@@192 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@297 ($generated@@192 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@178) (= (type $generated@@642) $generated@@68)) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@263 $generated@@643) (and ($generated@@184 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@68) ($generated@@78 $generated@@641 ($generated@@185 $generated@@644 $generated@@642) $generated@@643))
 :pattern ( ($generated@@78 $generated@@641 ($generated@@185 $generated@@644 $generated@@642) $generated@@643))
))))) ($generated@@297 ($generated@@193 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@297 ($generated@@193 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@140) (= (type $generated@@646) $generated@@140)) (= ($generated@@267 ($generated@@290 $generated@@645) ($generated@@290 $generated@@646)) ($generated@@290 ($generated@@267 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@267 ($generated@@290 $generated@@645) ($generated@@290 $generated@@646)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@323 ($generated@@8 ($generated@@162 $generated@@647))) ($generated@@290 ($generated@@323 ($generated@@8 $generated@@647))))
 :pattern ( ($generated@@323 ($generated@@8 ($generated@@162 $generated@@647))))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@140) (= ($generated@@319 ($generated@@290 $generated@@648)) ($generated@@290 ($generated@@319 $generated@@648))))
 :pattern ( ($generated@@319 ($generated@@290 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (! (= ($generated@@323 ($generated@@290 $generated@@649)) ($generated@@290 ($generated@@323 $generated@@649)))
 :pattern ( ($generated@@323 ($generated@@290 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@142 (type $generated@@650))))
 (=> (and (= (type $generated@@650) ($generated@@139 $generated@@651)) (= ($generated@@163 $generated@@650) 0)) (= $generated@@650 ($generated@@309 $generated@@651))))
 :pattern ( ($generated@@163 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 (type $generated@@653)))
 (=> (and (and (= (type $generated@@652) ($generated@@80 $generated@@655 $generated@@2)) (= (type $generated@@654) $generated@@2)) (<= 0 ($generated $generated@@654))) (= ($generated@@336 ($generated@@86 $generated@@652 $generated@@653 $generated@@654)) (+ (- ($generated@@336 $generated@@652) ($generated ($generated@@85 $generated@@652 $generated@@653))) ($generated $generated@@654)))))
 :pattern ( ($generated@@336 ($generated@@86 $generated@@652 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@657) $generated@@2)) ($generated@@78 $generated@@657 $generated@@46 $generated@@656))
 :pattern ( ($generated@@78 $generated@@657 $generated@@46 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@659) $generated@@3)) ($generated@@78 $generated@@659 $generated@@47 $generated@@658))
 :pattern ( ($generated@@78 $generated@@659 $generated@@47 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@661) $generated@@4)) ($generated@@78 $generated@@661 $generated@@44 $generated@@660))
 :pattern ( ($generated@@78 $generated@@661 $generated@@44 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@663) $generated@@514)) ($generated@@78 $generated@@663 $generated@@45 $generated@@662))
 :pattern ( ($generated@@78 $generated@@663 $generated@@45 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@665) $generated@@140)) ($generated@@78 $generated@@665 $generated@@48 $generated@@664))
 :pattern ( ($generated@@78 $generated@@665 $generated@@48 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@139 $generated@@140)) (= (type $generated@@667) $generated@@68)) (= ($generated@@159 $generated@@666 ($generated@@160 $generated@@667)) (forall (($generated@@668 Int) ) (!  (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@163 $generated@@666))) ($generated@@161 ($generated@@164 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@164 $generated@@666 $generated@@668))
))))
 :pattern ( ($generated@@159 $generated@@666 ($generated@@160 $generated@@667)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 Int) ) (!  (=> (= (type $generated@@670) ($generated@@139 $generated@@140)) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@163 $generated@@670))) (< ($generated@@596 ($generated@@429 $generated@@178 ($generated@@164 $generated@@670 $generated@@671))) ($generated@@669 $generated@@670))))
 :pattern ( ($generated@@596 ($generated@@429 $generated@@178 ($generated@@164 $generated@@670 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@347 $generated@@140 $generated@@140)) (= (type $generated@@673) $generated@@68)) (= (type $generated@@674) $generated@@68)) ($generated@@159 $generated@@672 ($generated@@457 $generated@@673 $generated@@674))) (and (and ($generated@@159 ($generated@@345 $generated@@672) ($generated@@279 $generated@@673)) ($generated@@159 ($generated@@388 $generated@@672) ($generated@@279 $generated@@674))) ($generated@@159 ($generated@@428 $generated@@672) ($generated@@279 ($generated@@185 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@159 $generated@@672 ($generated@@457 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) ($generated@@365 $generated@@140 $generated@@140)) (= (type $generated@@676) $generated@@68)) (= (type $generated@@677) $generated@@68)) ($generated@@159 $generated@@675 ($generated@@465 $generated@@676 $generated@@677))) (and (and ($generated@@159 ($generated@@363 $generated@@675) ($generated@@284 $generated@@676)) ($generated@@159 ($generated@@399 $generated@@675) ($generated@@284 $generated@@677))) ($generated@@159 ($generated@@439 $generated@@675) ($generated@@284 ($generated@@185 $generated@@676 $generated@@677)))))
 :pattern ( ($generated@@159 $generated@@675 ($generated@@465 $generated@@676 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@2) ($generated@@159 $generated@@678 $generated@@46))
 :pattern ( ($generated@@159 $generated@@678 $generated@@46))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@3) ($generated@@159 $generated@@679 $generated@@47))
 :pattern ( ($generated@@159 $generated@@679 $generated@@47))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@4) ($generated@@159 $generated@@680 $generated@@44))
 :pattern ( ($generated@@159 $generated@@680 $generated@@44))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@514) ($generated@@159 $generated@@681 $generated@@45))
 :pattern ( ($generated@@159 $generated@@681 $generated@@45))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@140) ($generated@@159 $generated@@682 $generated@@48))
 :pattern ( ($generated@@159 $generated@@682 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Bool)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 (T@U) Bool)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@683) $generated@@178) (= (type $generated@@684) $generated@@68)) (= (type $generated@@685) ($generated@@139 $generated@@140))) (= (type $generated@@704) $generated@@178)) (= (type $generated@@686) $generated@@140)) (= (type $generated@@687) $generated@@178)) (= (type $generated@@689) $generated@@140)) (= (type $generated@@690) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@691) $generated@@140)) (= (type $generated@@692) $generated@@68)) (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@695) $generated@@81)) (= (type $generated@@698) $generated@@140)) (= (type $generated@@701) $generated@@140)) (= (type $generated@@705) ($generated@@208 $generated@@81 $generated@@4))) (= (type $generated@@706) $generated@@178)) (= (type $generated@@707) $generated@@140)) (= (type $generated@@708) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@709  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@177 $generated@@683) (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 ($generated@@157 $generated@@141)) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) ($generated@@179 $generated@@683))) ($generated@@163 $generated@@685)))) (=> (=> ($generated@@177 $generated@@683) (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 ($generated@@157 $generated@@141)) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) ($generated@@179 $generated@@683))) ($generated@@163 $generated@@685))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@294 $generated@@683) (forall (($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@140) ($generated@@161 $generated@@710 $generated@@684)) (<= ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 ($generated@@157 $generated@@141)) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@710)) ($generated@@163 $generated@@685)))
 :pattern ( ($generated@@136 $generated@@684 ($generated@@157 ($generated@@157 $generated@@141)) $generated@@685 0 ($generated@@163 $generated@@685) $generated@@710))
))))))))
(let (($generated@@711  (=> (and (and ($generated@@158 $generated@@684 $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@686) (= $generated@@687 (ite (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@686)) ($generated@@163 $generated@@685)) ($generated@@319 $generated@@686) $generated@@199))) (and (= $generated@@683 $generated@@687) (= (ControlFlow 0 5) 2))) $generated@@709)))
(let (($generated@@712  (=> (and (>= ($generated@@163 $generated@@685) ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@686))) (= (ControlFlow 0 7) 5)) $generated@@711)))
(let (($generated@@713  (=> (and (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@686)) ($generated@@163 $generated@@685)) (= (ControlFlow 0 6) 5)) $generated@@711)))
(let (($generated@@714  (and (=> (= (ControlFlow 0 8) (- 0 14)) (exists (($generated@@715 T@U) ) (!  (and (= (type $generated@@715) $generated@@140) (and ($generated@@161 $generated@@715 $generated@@684) (=> $generated@@688 (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@715)) ($generated@@163 $generated@@685)))))
 :no-pattern (type $generated@@715)
 :no-pattern ($generated $generated@@715)
 :no-pattern ($generated@@0 $generated@@715)
))) (=> (exists (($generated@@716 T@U) ) (!  (and (= (type $generated@@716) $generated@@140) (and ($generated@@161 $generated@@716 $generated@@684) (=> $generated@@688 (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@716)) ($generated@@163 $generated@@685)))))
 :no-pattern (type $generated@@716)
 :no-pattern ($generated $generated@@716)
 :no-pattern ($generated@@0 $generated@@716)
)) (=> (and (and (and ($generated@@161 $generated@@689 $generated@@684) ($generated@@297 $generated@@689 $generated@@684 $generated@@690)) (=> $generated@@688 (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@689)) ($generated@@163 $generated@@685)))) (and ($generated@@161 $generated@@691 $generated@@692) ($generated@@297 $generated@@691 $generated@@692 $generated@@690))) (and (=> (= (ControlFlow 0 8) (- 0 13)) (not (= ($generated@@163 $generated@@685) 0))) (=> (not (= ($generated@@163 $generated@@685) 0)) (and (=> (= (ControlFlow 0 8) (- 0 12)) (=> $generated@@688 (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 ($generated@@157 $generated@@141)) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@689)) ($generated@@163 $generated@@685)))) (=> (=> $generated@@688 (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 ($generated@@157 $generated@@141)) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@689)) ($generated@@163 $generated@@685))) (=> (and ($generated@@263 $generated@@693) ($generated@@694 $generated@@693)) (=> (and (and ($generated@@161 $generated@@686 $generated@@684) ($generated@@297 $generated@@686 $generated@@684 $generated@@693)) (=> $generated@@688 (= $generated@@686 $generated@@689))) (=> (and (and (and (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@81) (=> (and (not (= $generated@@717 $generated@@695)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@690 $generated@@717) $generated@@60))) (= ($generated@@85 $generated@@693 $generated@@717) ($generated@@85 $generated@@690 $generated@@717))))
 :pattern ( ($generated@@85 $generated@@693 $generated@@717))
)) ($generated@@152 $generated@@690 $generated@@693)) (and ($generated@@78 $generated@@685 ($generated@@160 $generated@@684) $generated@@693) (= $generated@@696 ($generated@@162 0)))) (and (and ($generated@@78 ($generated@@8 $generated@@696) $generated@@46 $generated@@693) (= $generated@@697 ($generated@@163 $generated@@685))) (and ($generated@@78 ($generated@@8 $generated@@697) $generated@@46 $generated@@693) ($generated@@297 $generated@@686 $generated@@684 $generated@@693)))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (<= ($generated@@162 0) $generated@@696)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (<= $generated@@696 $generated@@697)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= $generated@@697 ($generated@@163 $generated@@685))) (=> (and (and (and (<= ($generated@@162 0) $generated@@696) (<= $generated@@696 $generated@@697)) (<= $generated@@697 ($generated@@163 $generated@@685))) ($generated@@158 $generated@@684 $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@686)) (and (=> (= (ControlFlow 0 8) 6) $generated@@713) (=> (= (ControlFlow 0 8) 7) $generated@@712))))))))))))))))))
(let (($generated@@718  (=> (and (=> $generated@@688 ($generated@@158 $generated@@684 $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@698)) (= (ControlFlow 0 16) 8)) $generated@@714)))
(let (($generated@@719  (=> (and (not $generated@@688) (= (ControlFlow 0 21) 16)) $generated@@718)))
(let (($generated@@720  (=> $generated@@688 (=> (and ($generated@@78 $generated@@685 ($generated@@160 $generated@@684) $generated@@690) (= $generated@@699 ($generated@@162 0))) (=> (and (and ($generated@@78 ($generated@@8 $generated@@699) $generated@@46 $generated@@690) (= $generated@@700 ($generated@@163 $generated@@685))) (and ($generated@@78 ($generated@@8 $generated@@700) $generated@@46 $generated@@690) ($generated@@297 $generated@@698 $generated@@684 $generated@@690))) (and (=> (= (ControlFlow 0 17) (- 0 20)) (<= ($generated@@162 0) $generated@@699)) (and (=> (= (ControlFlow 0 17) (- 0 19)) (<= $generated@@699 $generated@@700)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (<= $generated@@700 ($generated@@163 $generated@@685))) (=> (and ($generated@@158 $generated@@684 $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@698) (= (ControlFlow 0 17) 16)) $generated@@718)))))))))
(let (($generated@@721  (=> (and ($generated@@161 $generated@@698 $generated@@684) ($generated@@297 $generated@@698 $generated@@684 $generated@@690)) (and (=> (= (ControlFlow 0 22) 17) $generated@@720) (=> (= (ControlFlow 0 22) 21) $generated@@719)))))
(let (($generated@@722  (=> (and (not (and ($generated@@161 $generated@@698 $generated@@684) ($generated@@297 $generated@@698 $generated@@684 $generated@@690))) (= (ControlFlow 0 15) 8)) $generated@@714)))
(let (($generated@@723  (=> (and (forall (($generated@@724 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@140) ($generated@@161 $generated@@724 $generated@@684)) ($generated@@158 $generated@@684 $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@724))
 :pattern ( ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 0 ($generated@@163 $generated@@685) $generated@@724))
)) (= $generated@@688 (exists (($generated@@725 T@U) ) (!  (and (= (type $generated@@725) $generated@@140) (and ($generated@@161 $generated@@725 $generated@@684) (> ($generated@@618 ($generated@@162 2) ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@725)) ($generated@@163 $generated@@685))))
 :pattern ( ($generated@@136 $generated@@684 ($generated@@157 $generated@@141) $generated@@685 0 ($generated@@163 $generated@@685) $generated@@725))
)))) (and (=> (= (ControlFlow 0 23) 22) $generated@@721) (=> (= (ControlFlow 0 23) 15) $generated@@722)))))
(let (($generated@@726  (=> (and (not (and ($generated@@161 $generated@@701 $generated@@684) ($generated@@297 $generated@@701 $generated@@684 $generated@@690))) (= (ControlFlow 0 28) 23)) $generated@@723)))
(let (($generated@@727  (=> (and (and (and ($generated@@161 $generated@@701 $generated@@684) ($generated@@297 $generated@@701 $generated@@684 $generated@@690)) (and ($generated@@78 $generated@@685 ($generated@@160 $generated@@684) $generated@@690) (= $generated@@702 ($generated@@162 0)))) (and (and ($generated@@78 ($generated@@8 $generated@@702) $generated@@46 $generated@@690) (= $generated@@703 ($generated@@163 $generated@@685))) (and ($generated@@78 ($generated@@8 $generated@@703) $generated@@46 $generated@@690) ($generated@@297 $generated@@701 $generated@@684 $generated@@690)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (<= ($generated@@162 0) $generated@@702)) (and (=> (= (ControlFlow 0 24) (- 0 26)) (<= $generated@@702 $generated@@703)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (<= $generated@@703 ($generated@@163 $generated@@685))) (=> (and (and (and (<= ($generated@@162 0) $generated@@702) (<= $generated@@702 $generated@@703)) (<= $generated@@703 ($generated@@163 $generated@@685))) (and ($generated@@158 $generated@@684 $generated@@685 ($generated@@162 0) ($generated@@163 $generated@@685) $generated@@701) (= (ControlFlow 0 24) 23))) $generated@@723)))))))
(let (($generated@@728  (=> (not (= ($generated@@163 $generated@@685) ($generated@@162 0))) (and (=> (= (ControlFlow 0 29) 24) $generated@@727) (=> (= (ControlFlow 0 29) 28) $generated@@726)))))
(let (($generated@@729  (=> (and (and (= ($generated@@163 $generated@@685) ($generated@@162 0)) (= $generated@@704 ($generated@@290 $generated@@199))) (and (= $generated@@683 $generated@@704) (= (ControlFlow 0 4) 2))) $generated@@709)))
(let (($generated@@730  (=> (= $generated@@705 ($generated@@207 $generated@@695 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 30) 4) $generated@@729) (=> (= (ControlFlow 0 30) 29) $generated@@728)))))
(let (($generated@@731  (=> (and ($generated@@263 $generated@@690) ($generated@@694 $generated@@690)) (=> (and (and (and (and ($generated@@159 $generated@@685 ($generated@@160 $generated@@684)) ($generated@@78 $generated@@685 ($generated@@160 $generated@@684) $generated@@690)) (and ($generated@@159 $generated@@706 ($generated@@262 $generated@@684)) ($generated@@78 $generated@@706 ($generated@@262 $generated@@684) $generated@@690))) (and (and ($generated@@161 $generated@@707 $generated@@684) ($generated@@297 $generated@@707 $generated@@684 $generated@@690)) true)) (and (and (and ($generated@@161 $generated@@708 $generated@@684) ($generated@@297 $generated@@708 $generated@@684 $generated@@690)) true) (and (= 3 $generated@@156) (= (ControlFlow 0 31) 30)))) $generated@@730))))
$generated@@731))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (Int) Int)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@U Int) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (Int Int) Int)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@150) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert  (and (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@153 $generated@@161)) $generated@@134)
 :pattern ( ($generated@@153 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@156 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@162))
))) (forall (($generated@@163 T@U) ($generated@@164 Int) ) (! (let (($generated@@165 ($generated@@138 (type $generated@@163))))
(= (type ($generated@@160 $generated@@163 $generated@@164)) $generated@@165))
 :pattern ( ($generated@@160 $generated@@163 $generated@@164))
))))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 Int) ($generated@@171 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@166) $generated@@64) (= (type $generated@@167) $generated@@134)) (= (type $generated@@168) ($generated@@135 $generated@@136))) (= (type $generated@@171) $generated@@136)) (or ($generated@@154 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@171) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@168 ($generated@@156 $generated@@166)) ($generated@@157 $generated@@171 $generated@@166)) (and (and (<= ($generated@@158 0) $generated@@169) (<= $generated@@169 $generated@@170)) (<= $generated@@170 ($generated@@159 $generated@@168))))))) (and (=> (not (= $generated@@169 $generated@@170)) ($generated@@154 $generated@@166 $generated@@168 $generated@@169 (- $generated@@170 1) $generated@@171)) (= ($generated@@132 $generated@@166 ($generated@@153 $generated@@167) $generated@@168 $generated@@169 $generated@@170 $generated@@171) (ite (= $generated@@169 $generated@@170) 0 (+ ($generated@@132 $generated@@166 $generated@@167 $generated@@168 $generated@@169 (- $generated@@170 1) $generated@@171) (ite (= ($generated@@160 $generated@@168 (- $generated@@170 1)) $generated@@171) 1 0))))))
 :pattern ( ($generated@@132 $generated@@166 ($generated@@153 $generated@@167) $generated@@168 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@2) ($generated@@155 $generated@@172 ($generated@@75 0)))
 :pattern ( ($generated@@155 $generated@@172 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@175) 17) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@64)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@64) (= (type $generated@@179) $generated@@64)) (= (type $generated@@180) $generated@@175)) ($generated@@155 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@155 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@136)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@136)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@175) (= (type $generated@@187) $generated@@175)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@64)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@192) $generated@@64)) ($generated@@155 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@155 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 18)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@77 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@67 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@77) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@244) ($generated@@66 $generated@@4))) (= (type $generated@@246) $generated@@77)) (= (type $generated@@247) ($generated@@66 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251)) $generated@@175)
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@136)) (= (type $generated@@255) $generated@@136)) (= ($generated@@155 ($generated@@249 $generated@@254 $generated@@255) ($generated@@174 $generated@@252 $generated@@253))  (and ($generated@@157 $generated@@254 $generated@@252) ($generated@@157 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@155 ($generated@@249 $generated@@254 $generated@@255) ($generated@@174 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@175) (= (type $generated@@257) $generated@@175)) (= ($generated@@181 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@181 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@155 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@136) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@157 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@155 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@64)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@266) $generated@@64)) (= ($generated@@155 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@136) ($generated@@0 ($generated@@81 $generated@@265 $generated@@267))) ($generated@@157 $generated@@267 $generated@@266))
 :pattern ( ($generated@@81 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@155 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@158 $generated@@268) $generated@@268)
 :pattern ( ($generated@@158 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) $generated@@136)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@249 $generated@@277 $generated@@278) ($generated@@174 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@249 $generated@@277 $generated@@278) ($generated@@174 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@175) (= ($generated@@173 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@175) ($generated@@173 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@136) (= (type $generated@@285) $generated@@136)) (= $generated@@283 ($generated@@249 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@173 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@135 $generated@@287))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@159 ($generated@@286 $generated@@288)) 0)
 :pattern ( ($generated@@286 $generated@@288))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) $generated@@134)) (= (type $generated@@291) ($generated@@135 $generated@@136))) (= (type $generated@@294) $generated@@136)) (or ($generated@@154 $generated@@289 ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 $generated@@293) $generated@@294) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@291 ($generated@@156 $generated@@289)) ($generated@@157 $generated@@294 $generated@@289)) (and (and (<= ($generated@@158 0) ($generated@@158 $generated@@292)) (<= ($generated@@158 $generated@@292) ($generated@@158 $generated@@293))) (<= ($generated@@158 $generated@@293) ($generated@@159 ($generated@@269 $generated@@291)))))))) (and (=> (not (= ($generated@@158 $generated@@292) ($generated@@158 $generated@@293))) ($generated@@154 $generated@@289 ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 (- $generated@@293 1)) $generated@@294)) (= ($generated@@132 $generated@@289 ($generated@@153 $generated@@290) ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 $generated@@293) $generated@@294) (ite (= ($generated@@158 $generated@@292) ($generated@@158 $generated@@293)) 0 (+ ($generated@@132 $generated@@289 ($generated@@153 $generated@@290) ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 (- $generated@@293 1)) $generated@@294) (ite (= ($generated@@160 ($generated@@269 $generated@@291) ($generated@@158 (- $generated@@293 1))) $generated@@294) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@289 ($generated@@153 $generated@@290) ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 $generated@@293) $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@136)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@74 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@274 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@301) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@302) $generated@@136)) (= (type $generated@@303) $generated@@64)) ($generated@@148 $generated@@300 $generated@@301)) ($generated@@274 $generated@@302 $generated@@303 $generated@@300)) ($generated@@274 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@148 $generated@@300 $generated@@301) ($generated@@274 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@305) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@307) $generated@@64)) ($generated@@148 $generated@@304 $generated@@305)) ($generated@@74 $generated@@306 $generated@@307 $generated@@304)) ($generated@@74 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@148 $generated@@304 $generated@@305) ($generated@@74 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@76 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@79 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@76 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@81 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 20)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@81 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@81 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@76 $generated@@351 $generated@@2)) (= ($generated@@189 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@81 $generated@@350 $generated@@352))) (<= ($generated ($generated@@81 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@189 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@314 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@318 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@318 (type $generated@@360))))
(let (($generated@@362 ($generated@@317 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@316 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@315 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@336 (type $generated@@364))))
(let (($generated@@366 ($generated@@335 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@334 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@333 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@332 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@336 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@336 (type $generated@@371))))
(let (($generated@@373 ($generated@@335 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@334 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@333 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@376) $generated@@64)) (= ($generated@@155 $generated@@375 ($generated@@188 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@375 $generated@@377)))) ($generated@@157 $generated@@377 $generated@@376))
 :pattern ( ($generated@@81 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@155 $generated@@375 ($generated@@188 $generated@@376)))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 Int) ($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@378) $generated@@64) (= (type $generated@@379) $generated@@134)) (= (type $generated@@380) ($generated@@135 $generated@@136))) (= (type $generated@@383) $generated@@136)) (or ($generated@@154 $generated@@378 $generated@@380 $generated@@381 $generated@@382 $generated@@383) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@380 ($generated@@156 $generated@@378)) ($generated@@157 $generated@@383 $generated@@378)) (and (and (<= ($generated@@158 0) $generated@@381) (<= $generated@@381 $generated@@382)) (<= $generated@@382 ($generated@@159 $generated@@380))))))) true)
 :pattern ( ($generated@@132 $generated@@378 $generated@@379 $generated@@380 $generated@@381 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@258 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@136) ($generated@@0 ($generated@@81 $generated@@384 $generated@@387))) ($generated@@274 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@81 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@258 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@263 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@136) ($generated@@0 ($generated@@81 $generated@@388 $generated@@391))) ($generated@@274 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@81 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@263 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= ($generated ($generated@@81 ($generated@@309 $generated@@393) $generated@@392)) 0))
 :pattern ( (let (($generated@@393 (type $generated@@392)))
($generated@@81 ($generated@@309 $generated@@393) $generated@@392)))
)))
(assert  (and (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@394 $generated@@397)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@394 $generated@@397))
)) (forall (($generated@@398 T@T) ($generated@@399 T@U) ) (! (= (type ($generated@@395 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@395 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@396 $generated@@400)) ($generated@@76 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@396 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@404) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@403) ($generated@@182 ($generated@@395 $generated@@175 $generated@@404)))) (= ($generated@@81 ($generated@@396 $generated@@403) ($generated@@182 ($generated@@395 $generated@@175 $generated@@404))) ($generated@@183 ($generated@@395 $generated@@175 $generated@@404))))))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@76 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@412) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@81 ($generated@@332 $generated@@411) ($generated@@182 ($generated@@395 $generated@@175 $generated@@412)))) (= ($generated@@81 ($generated@@406 $generated@@411) ($generated@@182 ($generated@@395 $generated@@175 $generated@@412))) ($generated@@183 ($generated@@395 $generated@@175 $generated@@412))))))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@81 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@274 ($generated@@81 ($generated@@396 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@274 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@426) $generated@@430))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) $generated@@64)) (= (type $generated@@437) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@274 ($generated@@81 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@274 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 Int) ($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@134)) (= (type $generated@@441) ($generated@@135 $generated@@136))) (= (type $generated@@444) $generated@@136)) (= ($generated@@132 $generated@@439 ($generated@@153 $generated@@440) $generated@@441 $generated@@442 $generated@@443 $generated@@444) ($generated@@132 $generated@@439 $generated@@440 $generated@@441 $generated@@442 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@132 $generated@@439 ($generated@@153 $generated@@440) $generated@@441 $generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@445) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@447) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@445 $generated@@447))) (and ($generated@@148 $generated@@445 $generated@@446) ($generated@@148 $generated@@446 $generated@@447))) ($generated@@148 $generated@@445 $generated@@447))
 :pattern ( ($generated@@148 $generated@@445 $generated@@446) ($generated@@148 $generated@@446 $generated@@447))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 Int) ($generated@@452 Int) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@134)) (= (type $generated@@450) ($generated@@135 $generated@@136))) (= (type $generated@@453) $generated@@136)) (or ($generated@@154 $generated@@448 ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 $generated@@452) ($generated@@269 $generated@@453)) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@450 ($generated@@156 $generated@@448)) ($generated@@157 $generated@@453 $generated@@448)) (and (and (<= ($generated@@158 0) ($generated@@158 $generated@@451)) (<= ($generated@@158 $generated@@451) ($generated@@158 $generated@@452))) (<= ($generated@@158 $generated@@452) ($generated@@159 ($generated@@269 $generated@@450)))))))) (and (=> (not (= ($generated@@158 $generated@@451) ($generated@@158 $generated@@452))) ($generated@@154 $generated@@448 ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 (- $generated@@452 1)) ($generated@@269 $generated@@453))) (= ($generated@@132 $generated@@448 ($generated@@153 $generated@@449) ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 $generated@@452) ($generated@@269 $generated@@453)) (ite (= ($generated@@158 $generated@@451) ($generated@@158 $generated@@452)) 0 (+ ($generated@@132 $generated@@448 ($generated@@153 $generated@@449) ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 (- $generated@@452 1)) ($generated@@269 $generated@@453)) (ite (= ($generated@@160 ($generated@@269 $generated@@450) ($generated@@158 (- $generated@@452 1))) ($generated@@269 $generated@@453)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@448 ($generated@@153 $generated@@449) ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 $generated@@452) ($generated@@269 $generated@@453)))
))))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@76 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@336 (type $generated@@456))))
(let (($generated@@458 ($generated@@335 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@334 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@333 $generated@@458 $generated@@457)) (= ($generated@@332 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@332 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@336 (type $generated@@459))))
(let (($generated@@461 ($generated@@335 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@334 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@333 $generated@@461 $generated@@460)) (= ($generated@@368 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@368 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@336 (type $generated@@462))))
(let (($generated@@464 ($generated@@335 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@334 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@333 $generated@@464 $generated@@463)) (= ($generated@@405 $generated@@462) ($generated@@454 $generated@@136))))))
 :pattern ( ($generated@@405 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@318 (type $generated@@465))))
(let (($generated@@467 ($generated@@317 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@316 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@315 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@136) (= (type $generated@@469) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@394 $generated@@465) ($generated@@295 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@394 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@336 (type $generated@@470))))
(let (($generated@@472 ($generated@@335 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@334 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@333 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@136) (= (type $generated@@474) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@405 $generated@@470) ($generated@@295 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@405 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@136) ($generated@@157 $generated@@475 $generated@@46)) (and (= ($generated@@295 ($generated@@395 $generated@@2 $generated@@475)) $generated@@475) ($generated@@155 ($generated@@395 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@157 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@136) ($generated@@157 $generated@@476 $generated@@47)) (and (= ($generated@@295 ($generated@@395 $generated@@3 $generated@@476)) $generated@@476) ($generated@@155 ($generated@@395 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@157 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@136) ($generated@@157 $generated@@477 $generated@@44)) (and (= ($generated@@295 ($generated@@395 $generated@@4 $generated@@477)) $generated@@477) ($generated@@155 ($generated@@395 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@157 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 21))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@136) ($generated@@157 $generated@@479 $generated@@45)) (and (= ($generated@@295 ($generated@@395 $generated@@478 $generated@@479)) $generated@@479) ($generated@@155 ($generated@@395 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@157 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@157 ($generated@@295 $generated@@480) $generated@@481) ($generated@@155 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@157 ($generated@@295 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@79 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@76 $generated@@483 $generated@@2)) (<= 0 ($generated@@308 $generated@@482))))
 :pattern ( ($generated@@308 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@138 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@135 $generated@@485)) (<= 0 ($generated@@159 $generated@@484))))
 :pattern ( ($generated@@159 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@423 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@423 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@423 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@423 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@72 ($generated@@423 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@496 ($generated@@431 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@431 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@431 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@431 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@72 ($generated@@431 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@136) (= (type $generated@@507) $generated@@136)) (= ($generated@@280 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@174 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@174 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= ($generated@@512 ($generated@@174 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@174 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@136) (= (type $generated@@517) $generated@@136)) (= ($generated@@182 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@136) (= (type $generated@@519) $generated@@136)) (= ($generated@@183 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@135 $generated@@136)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@520 ($generated@@156 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@159 $generated@@520))) ($generated@@274 ($generated@@160 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@160 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@74 $generated@@520 ($generated@@156 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@75 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@75 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@258 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@258 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@530 ($generated@@263 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@263 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@72 ($generated@@263 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@64) (= ($generated@@534 ($generated@@188 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@188 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@72 ($generated@@188 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@64) (= ($generated@@538 ($generated@@156 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@156 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@72 ($generated@@156 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@156 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@395 $generated@@543 ($generated@@295 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@295 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) (= ($generated@@155 $generated@@544 ($generated@@423 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@544) $generated@@547))) (and ($generated@@157 ($generated@@81 ($generated@@396 $generated@@544) $generated@@547) $generated@@546) ($generated@@157 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@544) $generated@@547))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@155 $generated@@544 ($generated@@423 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) (= ($generated@@155 $generated@@548 ($generated@@431 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@548) $generated@@551))) (and ($generated@@157 ($generated@@81 ($generated@@406 $generated@@548) $generated@@551) $generated@@550) ($generated@@157 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@548) $generated@@551))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@155 $generated@@548 ($generated@@431 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@136)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@249 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@249 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@136)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@249 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@249 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@157 $generated@@558 ($generated@@423 $generated@@559 $generated@@560))) (and (= ($generated@@295 ($generated@@395 ($generated@@316 $generated@@136 $generated@@136) $generated@@558)) $generated@@558) ($generated@@155 ($generated@@395 ($generated@@316 $generated@@136 $generated@@136) $generated@@558) ($generated@@423 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@157 $generated@@558 ($generated@@423 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@136) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@157 $generated@@561 ($generated@@431 $generated@@562 $generated@@563))) (and (= ($generated@@295 ($generated@@395 ($generated@@334 $generated@@136 $generated@@136) $generated@@561)) $generated@@561) ($generated@@155 ($generated@@395 ($generated@@334 $generated@@136 $generated@@136) $generated@@561) ($generated@@431 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@157 $generated@@561 ($generated@@431 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@64) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@136)) ($generated@@157 $generated@@566 ($generated@@174 $generated@@564 $generated@@565))) (and (= ($generated@@295 ($generated@@395 $generated@@175 $generated@@566)) $generated@@566) ($generated@@155 ($generated@@395 $generated@@175 $generated@@566) ($generated@@174 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@157 $generated@@566 ($generated@@174 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@81 ($generated@@454 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@81 ($generated@@454 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@69)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@64) (= (type $generated@@572) $generated@@64)) (and (= ($generated@@72 ($generated@@174 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@174 $generated@@571 $generated@@572)) $generated@@63)))
 :pattern ( ($generated@@174 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 Int) ($generated@@575 Int) ) (! (= ($generated@@573 $generated@@574 $generated@@575) (* $generated@@574 $generated@@575))
 :pattern ( ($generated@@573 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@175) (= ($generated@@552 ($generated@@295 $generated@@576)) ($generated@@553 $generated@@576)))
 :pattern ( ($generated@@552 ($generated@@295 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@136) ($generated@@157 $generated@@577 ($generated@@75 0))) (and (= ($generated@@295 ($generated@@395 $generated@@2 $generated@@577)) $generated@@577) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@577) ($generated@@75 0))))
 :pattern ( ($generated@@157 $generated@@577 ($generated@@75 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@136) (= (type $generated@@579) $generated@@64)) ($generated@@157 $generated@@578 ($generated@@258 $generated@@579))) (and (= ($generated@@295 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@578)) $generated@@578) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@578) ($generated@@258 $generated@@579))))
 :pattern ( ($generated@@157 $generated@@578 ($generated@@258 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) ($generated@@157 $generated@@580 ($generated@@263 $generated@@581))) (and (= ($generated@@295 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@580)) $generated@@580) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@580) ($generated@@263 $generated@@581))))
 :pattern ( ($generated@@157 $generated@@580 ($generated@@263 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@64)) ($generated@@157 $generated@@582 ($generated@@188 $generated@@583))) (and (= ($generated@@295 ($generated@@395 ($generated@@76 $generated@@136 $generated@@2) $generated@@582)) $generated@@582) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@2) $generated@@582) ($generated@@188 $generated@@583))))
 :pattern ( ($generated@@157 $generated@@582 ($generated@@188 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@64)) ($generated@@157 $generated@@584 ($generated@@156 $generated@@585))) (and (= ($generated@@295 ($generated@@395 ($generated@@135 $generated@@136) $generated@@584)) $generated@@584) ($generated@@155 ($generated@@395 ($generated@@135 $generated@@136) $generated@@584) ($generated@@156 $generated@@585))))
 :pattern ( ($generated@@157 $generated@@584 ($generated@@156 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@586 ($generated@@188 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@586 $generated@@589)))) ($generated@@274 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@81 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@74 $generated@@586 ($generated@@188 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@175) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@592) (and ($generated@@173 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@64) ($generated@@74 $generated@@590 ($generated@@174 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@74 $generated@@590 ($generated@@174 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@274 ($generated@@182 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@274 ($generated@@182 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@175) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@596) (and ($generated@@173 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@174 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@174 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@274 ($generated@@183 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@274 ($generated@@183 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@136) (= (type $generated@@599) $generated@@136)) (= ($generated@@249 ($generated@@269 $generated@@598) ($generated@@269 $generated@@599)) ($generated@@269 ($generated@@249 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@598) ($generated@@269 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@158 $generated@@600))) ($generated@@269 ($generated@@295 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@158 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@295 ($generated@@269 $generated@@601)) ($generated@@269 ($generated@@295 $generated@@601)))
 :pattern ( ($generated@@295 ($generated@@269 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@138 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@135 $generated@@603)) (= ($generated@@159 $generated@@602) 0)) (= $generated@@602 ($generated@@286 $generated@@603))))
 :pattern ( ($generated@@159 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@76 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@308 ($generated@@82 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@308 $generated@@604) ($generated ($generated@@81 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@308 ($generated@@82 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@2)) ($generated@@74 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@3)) ($generated@@74 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@4)) ($generated@@74 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@74 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@478)) ($generated@@74 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@136)) ($generated@@74 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@135 $generated@@136)) (= (type $generated@@619) $generated@@64)) (= ($generated@@155 $generated@@618 ($generated@@156 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@159 $generated@@618))) ($generated@@157 ($generated@@160 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@160 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@155 $generated@@618 ($generated@@156 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@159 $generated@@622))) (< ($generated@@553 ($generated@@395 $generated@@175 ($generated@@160 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@553 ($generated@@395 $generated@@175 ($generated@@160 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@625) $generated@@64)) (= (type $generated@@626) $generated@@64)) ($generated@@155 $generated@@624 ($generated@@423 $generated@@625 $generated@@626))) (and (and ($generated@@155 ($generated@@314 $generated@@624) ($generated@@258 $generated@@625)) ($generated@@155 ($generated@@357 $generated@@624) ($generated@@258 $generated@@626))) ($generated@@155 ($generated@@394 $generated@@624) ($generated@@258 ($generated@@174 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@155 $generated@@624 ($generated@@423 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@64)) ($generated@@155 $generated@@627 ($generated@@431 $generated@@628 $generated@@629))) (and (and ($generated@@155 ($generated@@332 $generated@@627) ($generated@@263 $generated@@628)) ($generated@@155 ($generated@@368 $generated@@627) ($generated@@263 $generated@@629))) ($generated@@155 ($generated@@405 $generated@@627) ($generated@@263 ($generated@@174 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@155 $generated@@627 ($generated@@431 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@155 $generated@@630 $generated@@46))
 :pattern ( ($generated@@155 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@155 $generated@@631 $generated@@47))
 :pattern ( ($generated@@155 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@155 $generated@@632 $generated@@44))
 :pattern ( ($generated@@155 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@478) ($generated@@155 $generated@@633 $generated@@45))
 :pattern ( ($generated@@155 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@136) ($generated@@155 $generated@@634 $generated@@48))
 :pattern ( ($generated@@155 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@635) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@637) $generated@@77)) (= (type $generated@@638) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@639) $generated@@136)) (= (type $generated@@640) $generated@@64)) (= (type $generated@@642) ($generated@@135 $generated@@136))) (= (type $generated@@643) $generated@@136)) (= (type $generated@@646) ($generated@@195 $generated@@77 $generated@@4))) (= (type $generated@@647) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@648 true))
(let (($generated@@649 true))
(let (($generated@@650  (=> (and ($generated@@273 $generated@@635) ($generated@@636 $generated@@635)) (=> (and (and (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@77) (=> (and (not (= $generated@@651 $generated@@637)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@638 $generated@@651) $generated@@60))) (= ($generated@@81 $generated@@635 $generated@@651) ($generated@@81 $generated@@638 $generated@@651))))
 :pattern ( ($generated@@81 $generated@@635 $generated@@651))
)) ($generated@@148 $generated@@638 $generated@@635)) (and ($generated@@157 $generated@@639 $generated@@640) ($generated@@274 $generated@@639 $generated@@640 $generated@@635))) (and (=> (= (ControlFlow 0 3) 1) $generated@@649) (=> (= (ControlFlow 0 3) 2) $generated@@648))))))
(let (($generated@@652  (=> (and (=> $generated@@641 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@640 ($generated@@153 $generated@@137) $generated@@642 ($generated@@158 0) ($generated@@159 $generated@@642) $generated@@643)) ($generated@@159 $generated@@642))) (= (ControlFlow 0 8) 3)) $generated@@650)))
(let (($generated@@653  (=> $generated@@641 (=> (and ($generated@@74 $generated@@642 ($generated@@156 $generated@@640) $generated@@638) (= $generated@@644 ($generated@@158 0))) (=> (and (and ($generated@@74 ($generated@@8 $generated@@644) $generated@@46 $generated@@638) (= $generated@@645 ($generated@@159 $generated@@642))) (and ($generated@@74 ($generated@@8 $generated@@645) $generated@@46 $generated@@638) ($generated@@274 $generated@@643 $generated@@640 $generated@@638))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= ($generated@@158 0) $generated@@644)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= $generated@@644 $generated@@645)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= $generated@@645 ($generated@@159 $generated@@642))) (=> (and (and (and (and (<= ($generated@@158 0) $generated@@644) (<= $generated@@644 $generated@@645)) (<= $generated@@645 ($generated@@159 $generated@@642))) ($generated@@154 $generated@@640 $generated@@642 ($generated@@158 0) ($generated@@159 $generated@@642) $generated@@643)) (and (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@640 ($generated@@153 $generated@@137) $generated@@642 ($generated@@158 0) ($generated@@159 $generated@@642) $generated@@643)) ($generated@@159 $generated@@642)) (= (ControlFlow 0 4) 3))) $generated@@650)))))))))
(let (($generated@@654  (=> (and (= $generated@@646 ($generated@@194 $generated@@637 $generated@@638 $generated@@60 false)) (not (= ($generated@@159 $generated@@642) 0))) (and (=> (= (ControlFlow 0 9) 4) $generated@@653) (=> (= (ControlFlow 0 9) 8) $generated@@652)))))
(let (($generated@@655  (=> (and ($generated@@273 $generated@@638) ($generated@@636 $generated@@638)) (=> (and (and (and ($generated@@155 $generated@@642 ($generated@@156 $generated@@640)) ($generated@@74 $generated@@642 ($generated@@156 $generated@@640) $generated@@638)) (and ($generated@@157 $generated@@643 $generated@@640) ($generated@@274 $generated@@643 $generated@@640 $generated@@638))) (and (and ($generated@@157 $generated@@647 $generated@@640) ($generated@@274 $generated@@647 $generated@@640 $generated@@638)) (and (= 2 $generated@@152) (= (ControlFlow 0 10) 9)))) $generated@@654))))
$generated@@655))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (Int) Int)
(declare-fun $generated@@159 (T@U) Int)
(declare-fun $generated@@160 (T@U Int) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@T T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (Int Int) Int)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@150) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert  (and (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@153 $generated@@161)) $generated@@134)
 :pattern ( ($generated@@153 $generated@@161))
)) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@156 $generated@@162)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@162))
))) (forall (($generated@@163 T@U) ($generated@@164 Int) ) (! (let (($generated@@165 ($generated@@138 (type $generated@@163))))
(= (type ($generated@@160 $generated@@163 $generated@@164)) $generated@@165))
 :pattern ( ($generated@@160 $generated@@163 $generated@@164))
))))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 Int) ($generated@@171 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@166) $generated@@64) (= (type $generated@@167) $generated@@134)) (= (type $generated@@168) ($generated@@135 $generated@@136))) (= (type $generated@@171) $generated@@136)) (or ($generated@@154 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@171) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@168 ($generated@@156 $generated@@166)) ($generated@@157 $generated@@171 $generated@@166)) (and (and (<= ($generated@@158 0) $generated@@169) (<= $generated@@169 $generated@@170)) (<= $generated@@170 ($generated@@159 $generated@@168))))))) (and (=> (not (= $generated@@169 $generated@@170)) ($generated@@154 $generated@@166 $generated@@168 $generated@@169 (- $generated@@170 1) $generated@@171)) (= ($generated@@132 $generated@@166 ($generated@@153 $generated@@167) $generated@@168 $generated@@169 $generated@@170 $generated@@171) (ite (= $generated@@169 $generated@@170) 0 (+ ($generated@@132 $generated@@166 $generated@@167 $generated@@168 $generated@@169 (- $generated@@170 1) $generated@@171) (ite (= ($generated@@160 $generated@@168 (- $generated@@170 1)) $generated@@171) 1 0))))))
 :pattern ( ($generated@@132 $generated@@166 ($generated@@153 $generated@@167) $generated@@168 $generated@@169 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@2) ($generated@@155 $generated@@172 ($generated@@75 0)))
 :pattern ( ($generated@@155 $generated@@172 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@175) 17) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@176 $generated@@177)) $generated@@64)
 :pattern ( ($generated@@174 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@64) (= (type $generated@@179) $generated@@64)) (= (type $generated@@180) $generated@@175)) ($generated@@155 $generated@@180 ($generated@@174 $generated@@178 $generated@@179))) ($generated@@173 $generated@@180))
 :pattern ( ($generated@@173 $generated@@180) ($generated@@155 $generated@@180 ($generated@@174 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@136)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@136)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@175) (= (type $generated@@187) $generated@@175)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@64)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@192) $generated@@64)) ($generated@@155 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@155 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 18)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@77 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@67 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@77) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@244) ($generated@@66 $generated@@4))) (= (type $generated@@246) $generated@@77)) (= (type $generated@@247) ($generated@@66 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@249 $generated@@250 $generated@@251)) $generated@@175)
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@136)) (= (type $generated@@255) $generated@@136)) (= ($generated@@155 ($generated@@249 $generated@@254 $generated@@255) ($generated@@174 $generated@@252 $generated@@253))  (and ($generated@@157 $generated@@254 $generated@@252) ($generated@@157 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@155 ($generated@@249 $generated@@254 $generated@@255) ($generated@@174 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@175) (= (type $generated@@257) $generated@@175)) (= ($generated@@181 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@181 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@64)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@155 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@136) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@157 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@155 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@64)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@266) $generated@@64)) (= ($generated@@155 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@136) ($generated@@0 ($generated@@81 $generated@@265 $generated@@267))) ($generated@@157 $generated@@267 $generated@@266))
 :pattern ( ($generated@@81 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@155 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@158 $generated@@268) $generated@@268)
 :pattern ( ($generated@@158 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@136)) (= (type $generated@@278) $generated@@136)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@249 $generated@@277 $generated@@278) ($generated@@174 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@249 $generated@@277 $generated@@278) ($generated@@174 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@175) (= ($generated@@173 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@175) ($generated@@173 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@136) (= (type $generated@@285) $generated@@136)) (= $generated@@283 ($generated@@249 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@173 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@135 $generated@@287))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@159 ($generated@@286 $generated@@288)) 0)
 :pattern ( ($generated@@286 $generated@@288))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 Int) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) $generated@@134)) (= (type $generated@@291) ($generated@@135 $generated@@136))) (= (type $generated@@294) $generated@@136)) (or ($generated@@154 $generated@@289 ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 $generated@@293) $generated@@294) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@291 ($generated@@156 $generated@@289)) ($generated@@157 $generated@@294 $generated@@289)) (and (and (<= ($generated@@158 0) ($generated@@158 $generated@@292)) (<= ($generated@@158 $generated@@292) ($generated@@158 $generated@@293))) (<= ($generated@@158 $generated@@293) ($generated@@159 ($generated@@269 $generated@@291)))))))) (and (=> (not (= ($generated@@158 $generated@@292) ($generated@@158 $generated@@293))) ($generated@@154 $generated@@289 ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 (- $generated@@293 1)) $generated@@294)) (= ($generated@@132 $generated@@289 ($generated@@153 $generated@@290) ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 $generated@@293) $generated@@294) (ite (= ($generated@@158 $generated@@292) ($generated@@158 $generated@@293)) 0 (+ ($generated@@132 $generated@@289 ($generated@@153 $generated@@290) ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 (- $generated@@293 1)) $generated@@294) (ite (= ($generated@@160 ($generated@@269 $generated@@291) ($generated@@158 (- $generated@@293 1))) $generated@@294) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@289 ($generated@@153 $generated@@290) ($generated@@269 $generated@@291) ($generated@@158 $generated@@292) ($generated@@158 $generated@@293) $generated@@294))
))))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@136)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@74 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@274 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@301) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@302) $generated@@136)) (= (type $generated@@303) $generated@@64)) ($generated@@148 $generated@@300 $generated@@301)) ($generated@@274 $generated@@302 $generated@@303 $generated@@300)) ($generated@@274 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@148 $generated@@300 $generated@@301) ($generated@@274 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@305) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@307) $generated@@64)) ($generated@@148 $generated@@304 $generated@@305)) ($generated@@74 $generated@@306 $generated@@307 $generated@@304)) ($generated@@74 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@148 $generated@@304 $generated@@305) ($generated@@74 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@76 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@79 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@76 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@81 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 20)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@81 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@81 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@79 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@76 $generated@@351 $generated@@2)) (= ($generated@@189 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@81 $generated@@350 $generated@@352))) (<= ($generated ($generated@@81 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@189 $generated@@350))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@314 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@318 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@76 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@318 (type $generated@@360))))
(let (($generated@@362 ($generated@@317 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@316 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@315 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@336 (type $generated@@364))))
(let (($generated@@366 ($generated@@335 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@334 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@333 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@332 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@336 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@336 (type $generated@@371))))
(let (($generated@@373 ($generated@@335 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@334 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@333 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@376) $generated@@64)) (= ($generated@@155 $generated@@375 ($generated@@188 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@375 $generated@@377)))) ($generated@@157 $generated@@377 $generated@@376))
 :pattern ( ($generated@@81 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@155 $generated@@375 ($generated@@188 $generated@@376)))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 Int) ($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@378) $generated@@64) (= (type $generated@@379) $generated@@134)) (= (type $generated@@380) ($generated@@135 $generated@@136))) (= (type $generated@@383) $generated@@136)) (or ($generated@@154 $generated@@378 $generated@@380 $generated@@381 $generated@@382 $generated@@383) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@380 ($generated@@156 $generated@@378)) ($generated@@157 $generated@@383 $generated@@378)) (and (and (<= ($generated@@158 0) $generated@@381) (<= $generated@@381 $generated@@382)) (<= $generated@@382 ($generated@@159 $generated@@380))))))) true)
 :pattern ( ($generated@@132 $generated@@378 $generated@@379 $generated@@380 $generated@@381 $generated@@382 $generated@@383))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@384 ($generated@@258 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@136) ($generated@@0 ($generated@@81 $generated@@384 $generated@@387))) ($generated@@274 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@81 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@384 ($generated@@258 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@263 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@136) ($generated@@0 ($generated@@81 $generated@@388 $generated@@391))) ($generated@@274 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@81 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@263 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(= ($generated ($generated@@81 ($generated@@309 $generated@@393) $generated@@392)) 0))
 :pattern ( (let (($generated@@393 (type $generated@@392)))
($generated@@81 ($generated@@309 $generated@@393) $generated@@392)))
)))
(assert  (and (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@394 $generated@@397)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@394 $generated@@397))
)) (forall (($generated@@398 T@T) ($generated@@399 T@U) ) (! (= (type ($generated@@395 $generated@@398 $generated@@399)) $generated@@398)
 :pattern ( ($generated@@395 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@396 $generated@@400)) ($generated@@76 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@396 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@404) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@403) ($generated@@182 ($generated@@395 $generated@@175 $generated@@404)))) (= ($generated@@81 ($generated@@396 $generated@@403) ($generated@@182 ($generated@@395 $generated@@175 $generated@@404))) ($generated@@183 ($generated@@395 $generated@@175 $generated@@404))))))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@76 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@412) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@81 ($generated@@332 $generated@@411) ($generated@@182 ($generated@@395 $generated@@175 $generated@@412)))) (= ($generated@@81 ($generated@@406 $generated@@411) ($generated@@182 ($generated@@395 $generated@@175 $generated@@412))) ($generated@@183 ($generated@@395 $generated@@175 $generated@@412))))))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@81 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@274 ($generated@@81 ($generated@@396 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@274 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@426) $generated@@430))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@74 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@435) $generated@@64)) (= (type $generated@@436) $generated@@64)) (= (type $generated@@437) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@274 ($generated@@81 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@274 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@74 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 Int) ($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@134)) (= (type $generated@@441) ($generated@@135 $generated@@136))) (= (type $generated@@444) $generated@@136)) (= ($generated@@132 $generated@@439 ($generated@@153 $generated@@440) $generated@@441 $generated@@442 $generated@@443 $generated@@444) ($generated@@132 $generated@@439 $generated@@440 $generated@@441 $generated@@442 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@132 $generated@@439 ($generated@@153 $generated@@440) $generated@@441 $generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@445) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@446) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@447) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@445 $generated@@447))) (and ($generated@@148 $generated@@445 $generated@@446) ($generated@@148 $generated@@446 $generated@@447))) ($generated@@148 $generated@@445 $generated@@447))
 :pattern ( ($generated@@148 $generated@@445 $generated@@446) ($generated@@148 $generated@@446 $generated@@447))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 Int) ($generated@@452 Int) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@134)) (= (type $generated@@450) ($generated@@135 $generated@@136))) (= (type $generated@@453) $generated@@136)) (or ($generated@@154 $generated@@448 ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 $generated@@452) ($generated@@269 $generated@@453)) (and (not (= 0 $generated@@152)) (and (and ($generated@@155 $generated@@450 ($generated@@156 $generated@@448)) ($generated@@157 $generated@@453 $generated@@448)) (and (and (<= ($generated@@158 0) ($generated@@158 $generated@@451)) (<= ($generated@@158 $generated@@451) ($generated@@158 $generated@@452))) (<= ($generated@@158 $generated@@452) ($generated@@159 ($generated@@269 $generated@@450)))))))) (and (=> (not (= ($generated@@158 $generated@@451) ($generated@@158 $generated@@452))) ($generated@@154 $generated@@448 ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 (- $generated@@452 1)) ($generated@@269 $generated@@453))) (= ($generated@@132 $generated@@448 ($generated@@153 $generated@@449) ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 $generated@@452) ($generated@@269 $generated@@453)) (ite (= ($generated@@158 $generated@@451) ($generated@@158 $generated@@452)) 0 (+ ($generated@@132 $generated@@448 ($generated@@153 $generated@@449) ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 (- $generated@@452 1)) ($generated@@269 $generated@@453)) (ite (= ($generated@@160 ($generated@@269 $generated@@450) ($generated@@158 (- $generated@@452 1))) ($generated@@269 $generated@@453)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@448 ($generated@@153 $generated@@449) ($generated@@269 $generated@@450) ($generated@@158 $generated@@451) ($generated@@158 $generated@@452) ($generated@@269 $generated@@453)))
))))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@76 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@336 (type $generated@@456))))
(let (($generated@@458 ($generated@@335 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@334 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@333 $generated@@458 $generated@@457)) (= ($generated@@332 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@332 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@336 (type $generated@@459))))
(let (($generated@@461 ($generated@@335 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@334 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@333 $generated@@461 $generated@@460)) (= ($generated@@368 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@368 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@336 (type $generated@@462))))
(let (($generated@@464 ($generated@@335 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@334 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@333 $generated@@464 $generated@@463)) (= ($generated@@405 $generated@@462) ($generated@@454 $generated@@136))))))
 :pattern ( ($generated@@405 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@318 (type $generated@@465))))
(let (($generated@@467 ($generated@@317 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@316 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@315 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@136) (= (type $generated@@469) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@394 $generated@@465) ($generated@@295 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@394 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@336 (type $generated@@470))))
(let (($generated@@472 ($generated@@335 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@334 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@333 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@136) (= (type $generated@@474) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@405 $generated@@470) ($generated@@295 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@405 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@136) ($generated@@157 $generated@@475 $generated@@46)) (and (= ($generated@@295 ($generated@@395 $generated@@2 $generated@@475)) $generated@@475) ($generated@@155 ($generated@@395 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@157 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@136) ($generated@@157 $generated@@476 $generated@@47)) (and (= ($generated@@295 ($generated@@395 $generated@@3 $generated@@476)) $generated@@476) ($generated@@155 ($generated@@395 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@157 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@136) ($generated@@157 $generated@@477 $generated@@44)) (and (= ($generated@@295 ($generated@@395 $generated@@4 $generated@@477)) $generated@@477) ($generated@@155 ($generated@@395 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@157 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 21))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@136) ($generated@@157 $generated@@479 $generated@@45)) (and (= ($generated@@295 ($generated@@395 $generated@@478 $generated@@479)) $generated@@479) ($generated@@155 ($generated@@395 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@157 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@157 ($generated@@295 $generated@@480) $generated@@481) ($generated@@155 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@157 ($generated@@295 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@79 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@76 $generated@@483 $generated@@2)) (<= 0 ($generated@@308 $generated@@482))))
 :pattern ( ($generated@@308 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@138 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@135 $generated@@485)) (<= 0 ($generated@@159 $generated@@484))))
 :pattern ( ($generated@@159 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@423 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@423 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@423 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@423 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@72 ($generated@@423 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@496 ($generated@@431 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@431 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@431 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@431 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@72 ($generated@@431 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@136) (= (type $generated@@507) $generated@@136)) (= ($generated@@280 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@174 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@174 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= ($generated@@512 ($generated@@174 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@174 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@136) (= (type $generated@@517) $generated@@136)) (= ($generated@@182 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@136) (= (type $generated@@519) $generated@@136)) (= ($generated@@183 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@135 $generated@@136)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@520 ($generated@@156 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@159 $generated@@520))) ($generated@@274 ($generated@@160 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@160 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@74 $generated@@520 ($generated@@156 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@75 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@75 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@258 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@258 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@258 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@530 ($generated@@263 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@263 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@72 ($generated@@263 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@64)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@64) (= ($generated@@534 ($generated@@188 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@188 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@64) (= ($generated@@72 ($generated@@188 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@64)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@64) (= ($generated@@538 ($generated@@156 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@156 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@64) (= ($generated@@72 ($generated@@156 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@156 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@395 $generated@@543 ($generated@@295 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@295 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) (= ($generated@@155 $generated@@544 ($generated@@423 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@544) $generated@@547))) (and ($generated@@157 ($generated@@81 ($generated@@396 $generated@@544) $generated@@547) $generated@@546) ($generated@@157 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@544) $generated@@547))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@155 $generated@@544 ($generated@@423 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) (= ($generated@@155 $generated@@548 ($generated@@431 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@548) $generated@@551))) (and ($generated@@157 ($generated@@81 ($generated@@406 $generated@@548) $generated@@551) $generated@@550) ($generated@@157 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@81 ($generated@@406 $generated@@548) $generated@@551))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@155 $generated@@548 ($generated@@431 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@136)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@249 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@249 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@136)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@249 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@249 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@136) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@157 $generated@@558 ($generated@@423 $generated@@559 $generated@@560))) (and (= ($generated@@295 ($generated@@395 ($generated@@316 $generated@@136 $generated@@136) $generated@@558)) $generated@@558) ($generated@@155 ($generated@@395 ($generated@@316 $generated@@136 $generated@@136) $generated@@558) ($generated@@423 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@157 $generated@@558 ($generated@@423 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@136) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@157 $generated@@561 ($generated@@431 $generated@@562 $generated@@563))) (and (= ($generated@@295 ($generated@@395 ($generated@@334 $generated@@136 $generated@@136) $generated@@561)) $generated@@561) ($generated@@155 ($generated@@395 ($generated@@334 $generated@@136 $generated@@136) $generated@@561) ($generated@@431 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@157 $generated@@561 ($generated@@431 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@64) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@136)) ($generated@@157 $generated@@566 ($generated@@174 $generated@@564 $generated@@565))) (and (= ($generated@@295 ($generated@@395 $generated@@175 $generated@@566)) $generated@@566) ($generated@@155 ($generated@@395 $generated@@175 $generated@@566) ($generated@@174 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@157 $generated@@566 ($generated@@174 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@81 ($generated@@454 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@81 ($generated@@454 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@69)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@64) (= (type $generated@@572) $generated@@64)) (and (= ($generated@@72 ($generated@@174 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@174 $generated@@571 $generated@@572)) $generated@@63)))
 :pattern ( ($generated@@174 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 Int) ($generated@@575 Int) ) (! (= ($generated@@573 $generated@@574 $generated@@575) (* $generated@@574 $generated@@575))
 :pattern ( ($generated@@573 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@175) (= ($generated@@552 ($generated@@295 $generated@@576)) ($generated@@553 $generated@@576)))
 :pattern ( ($generated@@552 ($generated@@295 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@136) ($generated@@157 $generated@@577 ($generated@@75 0))) (and (= ($generated@@295 ($generated@@395 $generated@@2 $generated@@577)) $generated@@577) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@577) ($generated@@75 0))))
 :pattern ( ($generated@@157 $generated@@577 ($generated@@75 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@136) (= (type $generated@@579) $generated@@64)) ($generated@@157 $generated@@578 ($generated@@258 $generated@@579))) (and (= ($generated@@295 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@578)) $generated@@578) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@578) ($generated@@258 $generated@@579))))
 :pattern ( ($generated@@157 $generated@@578 ($generated@@258 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) ($generated@@157 $generated@@580 ($generated@@263 $generated@@581))) (and (= ($generated@@295 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@580)) $generated@@580) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@4) $generated@@580) ($generated@@263 $generated@@581))))
 :pattern ( ($generated@@157 $generated@@580 ($generated@@263 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@64)) ($generated@@157 $generated@@582 ($generated@@188 $generated@@583))) (and (= ($generated@@295 ($generated@@395 ($generated@@76 $generated@@136 $generated@@2) $generated@@582)) $generated@@582) ($generated@@155 ($generated@@395 ($generated@@76 $generated@@136 $generated@@2) $generated@@582) ($generated@@188 $generated@@583))))
 :pattern ( ($generated@@157 $generated@@582 ($generated@@188 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@64)) ($generated@@157 $generated@@584 ($generated@@156 $generated@@585))) (and (= ($generated@@295 ($generated@@395 ($generated@@135 $generated@@136) $generated@@584)) $generated@@584) ($generated@@155 ($generated@@395 ($generated@@135 $generated@@136) $generated@@584) ($generated@@156 $generated@@585))))
 :pattern ( ($generated@@157 $generated@@584 ($generated@@156 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@586 ($generated@@188 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@586 $generated@@589)))) ($generated@@274 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@81 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@74 $generated@@586 ($generated@@188 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@175) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@592) (and ($generated@@173 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@64) ($generated@@74 $generated@@590 ($generated@@174 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@74 $generated@@590 ($generated@@174 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@274 ($generated@@182 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@274 ($generated@@182 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@175) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@596) (and ($generated@@173 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@174 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@174 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@274 ($generated@@183 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@274 ($generated@@183 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@136) (= (type $generated@@599) $generated@@136)) (= ($generated@@249 ($generated@@269 $generated@@598) ($generated@@269 $generated@@599)) ($generated@@269 ($generated@@249 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@598) ($generated@@269 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@158 $generated@@600))) ($generated@@269 ($generated@@295 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@158 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@295 ($generated@@269 $generated@@601)) ($generated@@269 ($generated@@295 $generated@@601)))
 :pattern ( ($generated@@295 ($generated@@269 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@138 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@135 $generated@@603)) (= ($generated@@159 $generated@@602) 0)) (= $generated@@602 ($generated@@286 $generated@@603))))
 :pattern ( ($generated@@159 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@76 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@308 ($generated@@82 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@308 $generated@@604) ($generated ($generated@@81 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@308 ($generated@@82 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@2)) ($generated@@74 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@3)) ($generated@@74 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@4)) ($generated@@74 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@74 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@478)) ($generated@@74 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@136)) ($generated@@74 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@135 $generated@@136)) (= (type $generated@@619) $generated@@64)) (= ($generated@@155 $generated@@618 ($generated@@156 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@159 $generated@@618))) ($generated@@157 ($generated@@160 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@160 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@155 $generated@@618 ($generated@@156 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@159 $generated@@622))) (< ($generated@@553 ($generated@@395 $generated@@175 ($generated@@160 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@553 ($generated@@395 $generated@@175 ($generated@@160 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@316 $generated@@136 $generated@@136)) (= (type $generated@@625) $generated@@64)) (= (type $generated@@626) $generated@@64)) ($generated@@155 $generated@@624 ($generated@@423 $generated@@625 $generated@@626))) (and (and ($generated@@155 ($generated@@314 $generated@@624) ($generated@@258 $generated@@625)) ($generated@@155 ($generated@@357 $generated@@624) ($generated@@258 $generated@@626))) ($generated@@155 ($generated@@394 $generated@@624) ($generated@@258 ($generated@@174 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@155 $generated@@624 ($generated@@423 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@334 $generated@@136 $generated@@136)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@64)) ($generated@@155 $generated@@627 ($generated@@431 $generated@@628 $generated@@629))) (and (and ($generated@@155 ($generated@@332 $generated@@627) ($generated@@263 $generated@@628)) ($generated@@155 ($generated@@368 $generated@@627) ($generated@@263 $generated@@629))) ($generated@@155 ($generated@@405 $generated@@627) ($generated@@263 ($generated@@174 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@155 $generated@@627 ($generated@@431 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@155 $generated@@630 $generated@@46))
 :pattern ( ($generated@@155 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@155 $generated@@631 $generated@@47))
 :pattern ( ($generated@@155 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@155 $generated@@632 $generated@@44))
 :pattern ( ($generated@@155 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@478) ($generated@@155 $generated@@633 $generated@@45))
 :pattern ( ($generated@@155 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@136) ($generated@@155 $generated@@634 $generated@@48))
 :pattern ( ($generated@@155 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () Bool)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Bool)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Bool)
(declare-fun $generated@@675 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@637) ($generated@@135 $generated@@136)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@639) $generated@@136)) (= (type $generated@@654) $generated@@136)) (= (type $generated@@643) $generated@@136)) (= (type $generated@@656) $generated@@136)) (= (type $generated@@646) $generated@@136)) (= (type $generated@@649) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@660) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@662) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@669) $generated@@77)) (= (type $generated@@670) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@671) ($generated@@195 $generated@@77 $generated@@4))) (= (type $generated@@673) $generated@@136)) (= (type $generated@@675) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 69) (let (($generated@@676  (=> (and (=> $generated@@635 ($generated@@154 $generated@@636 $generated@@637 $generated@@638 ($generated@@159 $generated@@637) $generated@@639)) (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 $generated@@137) $generated@@637 $generated@@638 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@638)))) (and (=> (= (ControlFlow 0 40) (- 0 47)) $generated@@640) (=> $generated@@640 (=> (and (and ($generated@@74 $generated@@637 ($generated@@156 $generated@@636) $generated@@641) ($generated@@74 ($generated@@8 $generated@@638) $generated@@46 $generated@@641)) (and ($generated@@74 ($generated@@8 $generated@@642) $generated@@46 $generated@@641) ($generated@@274 $generated@@643 $generated@@636 $generated@@641))) (and (=> (= (ControlFlow 0 40) (- 0 46)) (<= ($generated@@158 0) $generated@@638)) (and (=> (= (ControlFlow 0 40) (- 0 45)) (<= $generated@@638 $generated@@642)) (and (=> (= (ControlFlow 0 40) (- 0 44)) (<= $generated@@642 ($generated@@159 $generated@@637))) (=> ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@642 $generated@@643) (=> (and ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@642 $generated@@643) (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 $generated@@137) $generated@@637 $generated@@638 $generated@@642 $generated@@643)) (- $generated@@642 $generated@@638))) (and (=> (= (ControlFlow 0 40) (- 0 43)) $generated@@640) (=> $generated@@640 (=> (and (and ($generated@@74 $generated@@637 ($generated@@156 $generated@@636) $generated@@641) ($generated@@74 ($generated@@8 $generated@@638) $generated@@46 $generated@@641)) (and ($generated@@74 ($generated@@8 $generated@@642) $generated@@46 $generated@@641) ($generated@@274 $generated@@643 $generated@@636 $generated@@641))) (and (=> (= (ControlFlow 0 40) (- 0 42)) (<= ($generated@@158 0) $generated@@638)) (and (=> (= (ControlFlow 0 40) (- 0 41)) (<= $generated@@638 $generated@@642)) (=> (= (ControlFlow 0 40) (- 0 39)) (<= $generated@@642 ($generated@@159 $generated@@637)))))))))))))))))))
(let (($generated@@677  (=> (and (not $generated@@635) (= (ControlFlow 0 52) 40)) $generated@@676)))
(let (($generated@@678  (=> (and $generated@@635 ($generated@@74 $generated@@637 ($generated@@156 $generated@@636) $generated@@641)) (=> (and (and ($generated@@74 ($generated@@8 $generated@@638) $generated@@46 $generated@@641) (= $generated@@644 ($generated@@159 $generated@@637))) (and ($generated@@74 ($generated@@8 $generated@@644) $generated@@46 $generated@@641) ($generated@@274 $generated@@639 $generated@@636 $generated@@641))) (and (=> (= (ControlFlow 0 48) (- 0 51)) (<= ($generated@@158 0) $generated@@638)) (and (=> (= (ControlFlow 0 48) (- 0 50)) (<= $generated@@638 $generated@@644)) (and (=> (= (ControlFlow 0 48) (- 0 49)) (<= $generated@@644 ($generated@@159 $generated@@637))) (=> (and ($generated@@154 $generated@@636 $generated@@637 $generated@@638 ($generated@@159 $generated@@637) $generated@@639) (= (ControlFlow 0 48) 40)) $generated@@676))))))))
(let (($generated@@679  (=> (and (and (<= ($generated@@158 0) $generated@@638) (<= $generated@@638 $generated@@642)) (<= $generated@@642 ($generated@@159 $generated@@637))) (and (=> (= (ControlFlow 0 53) 48) $generated@@678) (=> (= (ControlFlow 0 53) 52) $generated@@677)))))
(let (($generated@@680  (=> (and (not (and (<= ($generated@@158 0) $generated@@638) (<= $generated@@638 $generated@@642))) (= (ControlFlow 0 55) 53)) $generated@@679)))
(let (($generated@@681  (=> (and (and (<= ($generated@@158 0) $generated@@638) (<= $generated@@638 $generated@@642)) (= (ControlFlow 0 54) 53)) $generated@@679)))
(let (($generated@@682  (=> (< $generated@@638 ($generated@@158 0)) (and (=> (= (ControlFlow 0 57) 54) $generated@@681) (=> (= (ControlFlow 0 57) 55) $generated@@680)))))
(let (($generated@@683  (=> (<= ($generated@@158 0) $generated@@638) (and (=> (= (ControlFlow 0 56) 54) $generated@@681) (=> (= (ControlFlow 0 56) 55) $generated@@680)))))
(let (($generated@@684  (=> (not $generated@@645) (and (=> (= (ControlFlow 0 58) 56) $generated@@683) (=> (= (ControlFlow 0 58) 57) $generated@@682)))))
(let (($generated@@685  (=> (= (ControlFlow 0 16) (- 0 15)) (=> $generated@@635 (= $generated@@646 $generated@@639)))))
(let (($generated@@686  (=> (= ($generated@@159 $generated@@637) $generated@@647) (and (=> (= (ControlFlow 0 23) (- 0 24)) $generated@@640) (=> $generated@@640 (=> (and (= $generated@@646 $generated@@643) (= (ControlFlow 0 23) 16)) $generated@@685))))))
(let (($generated@@687  (=> (and (<= ($generated@@159 $generated@@637) $generated@@642) (= $generated@@648 ($generated@@159 $generated@@637))) (and (=> (= (ControlFlow 0 17) (- 0 22)) $generated@@640) (=> $generated@@640 (and (=> (= (ControlFlow 0 17) (- 0 21)) (<= ($generated@@158 0) $generated@@638)) (=> (<= ($generated@@158 0) $generated@@638) (and (=> (= (ControlFlow 0 17) (- 0 20)) (<= $generated@@638 $generated@@648)) (=> (<= $generated@@638 $generated@@648) (and (=> (= (ControlFlow 0 17) (- 0 19)) (<= $generated@@648 ($generated@@159 $generated@@637))) (=> (<= $generated@@648 ($generated@@159 $generated@@637)) (=> (and (and (and ($generated@@273 $generated@@649) ($generated@@650 $generated@@649)) (=> (not (= $generated@@639 $generated@@643)) (and ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@648 $generated@@639) ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@648 $generated@@643)))) (and (=> (not (= $generated@@639 $generated@@643)) (<= (+ ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@648 $generated@@639) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@648 $generated@@643)) (- $generated@@648 $generated@@638))) (= $generated@@641 $generated@@649))) (and (=> (= (ControlFlow 0 17) (- 0 18)) $generated@@640) (=> $generated@@640 (=> (and (= $generated@@646 $generated@@643) (= (ControlFlow 0 17) 16)) $generated@@685)))))))))))))))
(let (($generated@@688  (and (=> (= (ControlFlow 0 3) (- 0 10)) (or (<= 0 $generated@@651) (= (- ($generated@@159 $generated@@637) $generated@@652) $generated@@651))) (=> (or (<= 0 $generated@@651) (= (- ($generated@@159 $generated@@637) $generated@@652) $generated@@651)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (< (- ($generated@@159 $generated@@637) $generated@@652) $generated@@651)) (=> (< (- ($generated@@159 $generated@@637) $generated@@652) $generated@@651) (=> (=> (and (and (<= ($generated@@158 0) $generated@@653) (<= $generated@@653 $generated@@652)) (<= $generated@@652 ($generated@@159 $generated@@637))) (and (=> $generated@@635 ($generated@@154 $generated@@636 $generated@@637 $generated@@653 ($generated@@159 $generated@@637) $generated@@639)) (=> (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 $generated@@137) $generated@@637 $generated@@653 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@653))) (and ($generated@@154 $generated@@636 $generated@@637 $generated@@653 $generated@@652 $generated@@654) (=> (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 $generated@@137) $generated@@637 $generated@@653 $generated@@652 $generated@@654)) (- $generated@@652 $generated@@653)) ($generated@@154 $generated@@636 $generated@@637 $generated@@653 $generated@@652 $generated@@654)))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> $generated@@645 (<= ($generated@@158 0) $generated@@653))) (=> (=> $generated@@645 (<= ($generated@@158 0) $generated@@653)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> $generated@@645 (<= $generated@@653 $generated@@652))) (=> (=> $generated@@645 (<= $generated@@653 $generated@@652)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> $generated@@645 (<= $generated@@652 ($generated@@159 $generated@@637)))) (=> (=> $generated@@645 (<= $generated@@652 ($generated@@159 $generated@@637))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@645 (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@653 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@653))))) (=> (=> $generated@@645 (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@653 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@653)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@645 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@653 $generated@@652 $generated@@654)) (- $generated@@652 $generated@@653)))) (=> (=> $generated@@645 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@653 $generated@@652 $generated@@654)) (- $generated@@652 $generated@@653))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@645 (= $generated@@655 ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@653 $generated@@652 $generated@@654)))))))))))))))))))))
(let (($generated@@689  (=> (not (= ($generated@@159 $generated@@637) $generated@@647)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@159 $generated@@637)))) (=> (and (<= 0 $generated@@647) (< $generated@@647 ($generated@@159 $generated@@637))) (=> (and (and (and (= $generated@@656 ($generated@@160 $generated@@637 $generated@@647)) (= $generated@@657 (+ $generated@@647 1))) (and (= $generated@@658 ($generated@@158 1)) (= $generated@@654 $generated@@656))) (and (and (= $generated@@652 $generated@@657) (= $generated@@655 $generated@@658)) (and (= $generated@@653 $generated@@647) (= (ControlFlow 0 13) 3)))) $generated@@688))))))
(let (($generated@@690  (=> (and (>= (- (+ $generated@@642 1) $generated@@638) ($generated@@573 ($generated@@158 2) $generated@@659)) (= $generated@@647 (+ $generated@@642 1))) (and (=> (= (ControlFlow 0 25) (- 0 33)) $generated@@640) (=> $generated@@640 (and (=> (= (ControlFlow 0 25) (- 0 32)) (<= ($generated@@158 0) $generated@@638)) (=> (<= ($generated@@158 0) $generated@@638) (and (=> (= (ControlFlow 0 25) (- 0 31)) (<= $generated@@638 $generated@@647)) (=> (<= $generated@@638 $generated@@647) (and (=> (= (ControlFlow 0 25) (- 0 30)) (<= $generated@@647 ($generated@@159 $generated@@637))) (=> (<= $generated@@647 ($generated@@159 $generated@@637)) (=> (and ($generated@@273 $generated@@660) ($generated@@650 $generated@@660)) (=> (and (and (=> (not (= $generated@@639 $generated@@643)) (and ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@647 $generated@@639) ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@647 $generated@@643))) (=> (not (= $generated@@639 $generated@@643)) (<= (+ ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@647 $generated@@639) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@647 $generated@@643)) (- $generated@@647 $generated@@638)))) (and (= $generated@@641 $generated@@660) (= $generated@@661 ($generated@@159 $generated@@637)))) (and (=> (= (ControlFlow 0 25) (- 0 29)) (<= ($generated@@158 0) $generated@@638)) (=> (<= ($generated@@158 0) $generated@@638) (and (=> (= (ControlFlow 0 25) (- 0 28)) (<= $generated@@638 $generated@@647)) (=> (<= $generated@@638 $generated@@647) (and (=> (= (ControlFlow 0 25) (- 0 27)) (<= $generated@@647 $generated@@661)) (=> (<= $generated@@647 $generated@@661) (and (=> (= (ControlFlow 0 25) (- 0 26)) (<= $generated@@661 ($generated@@159 $generated@@637))) (=> (<= $generated@@661 ($generated@@159 $generated@@637)) (=> (and ($generated@@273 $generated@@662) ($generated@@650 $generated@@662)) (=> (and (and (and ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@647 $generated@@639) ($generated@@154 $generated@@636 $generated@@637 $generated@@647 $generated@@661 $generated@@639)) ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@661 $generated@@639)) (and (= (+ ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@647 $generated@@639) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@647 $generated@@661 $generated@@639)) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@661 $generated@@639)) (= $generated@@660 $generated@@662))) (and (=> (= (ControlFlow 0 25) 23) $generated@@686) (=> (= (ControlFlow 0 25) 13) $generated@@689)))))))))))))))))))))))))
(let (($generated@@691  (=> (> ($generated@@573 ($generated@@158 2) $generated@@659) (- (+ $generated@@642 1) $generated@@638)) (=> (and (= $generated@@663 (+ $generated@@642 1)) (= $generated@@654 $generated@@643)) (=> (and (and (= $generated@@652 $generated@@663) (= $generated@@655 $generated@@659)) (and (= $generated@@653 $generated@@638) (= (ControlFlow 0 12) 3))) $generated@@688)))))
(let (($generated@@692  (=> (not (= ($generated@@160 $generated@@637 $generated@@642) $generated@@643)) (and (=> (= (ControlFlow 0 34) 12) $generated@@691) (=> (= (ControlFlow 0 34) 25) $generated@@690)))))
(let (($generated@@693  (=> (and (and (and (= ($generated@@160 $generated@@637 $generated@@642) $generated@@643) (= $generated@@664 (+ $generated@@642 1))) (and (= $generated@@665 (+ $generated@@659 1)) (= $generated@@654 $generated@@643))) (and (and (= $generated@@652 $generated@@664) (= $generated@@655 $generated@@665)) (and (= $generated@@653 $generated@@638) (= (ControlFlow 0 11) 3)))) $generated@@688)))
(let (($generated@@694  (=> (and (< $generated@@642 ($generated@@159 $generated@@637)) (= $generated@@651 (- ($generated@@159 $generated@@637) $generated@@642))) (and (=> (= (ControlFlow 0 35) (- 0 37)) (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@159 $generated@@637)))) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@159 $generated@@637))) (and (=> (= (ControlFlow 0 35) (- 0 36)) $generated@@640) (=> $generated@@640 (and (=> (= (ControlFlow 0 35) 11) $generated@@693) (=> (= (ControlFlow 0 35) 34) $generated@@692)))))))))
(let (($generated@@695  (=> $generated@@645 (and (=> (= (ControlFlow 0 38) 17) $generated@@687) (=> (= (ControlFlow 0 38) 35) $generated@@694)))))
(let (($generated@@696  (and (=> (= (ControlFlow 0 59) 58) $generated@@684) (=> (= (ControlFlow 0 59) 38) $generated@@695))))
(let (($generated@@697 true))
(let (($generated@@698  (=> (=> $generated@@640 (and ($generated@@157 $generated@@643 $generated@@636) ($generated@@274 $generated@@643 $generated@@636 $generated@@641))) (=> (and ($generated@@273 $generated@@641) ($generated@@650 $generated@@641)) (=> (and (and (and (and (and (and (and (and (and $generated@@640 (not false)) (<= 1 $generated@@642)) (<= 1 $generated@@659)) (<= 0 $generated@@638)) (= $generated@@666 1)) (= $generated@@667 1)) (= $generated@@668 0)) true) (and (and (and (and (=> $generated@@645 true) (=> $generated@@645 (<= ($generated@@158 0) $generated@@638))) (and (=> $generated@@645 (<= $generated@@638 $generated@@642)) (=> $generated@@645 (<= $generated@@642 ($generated@@159 $generated@@637))))) (and (and (=> $generated@@645 (=> $generated@@635 ($generated@@154 $generated@@636 $generated@@637 $generated@@638 ($generated@@159 $generated@@637) $generated@@639))) (=> $generated@@645 (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@638))))) (and (=> $generated@@645 ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@642 $generated@@643)) (=> $generated@@645 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@642 $generated@@643)) (- $generated@@642 $generated@@638)))))) (and (and (and (=> $generated@@645 ($generated@@154 $generated@@636 $generated@@637 $generated@@638 $generated@@642 $generated@@643)) (=> $generated@@645 (= $generated@@659 ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@638 $generated@@642 $generated@@643)))) (and (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@77) (=> (and (not (= $generated@@699 $generated@@669)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@670 $generated@@699) $generated@@60))) (= ($generated@@81 $generated@@641 $generated@@699) ($generated@@81 $generated@@670 $generated@@699))))
 :pattern ( ($generated@@81 $generated@@641 $generated@@699))
)) ($generated@@148 $generated@@670 $generated@@641))) (and (and (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (! (let (($generated@@702 ($generated@@67 (type $generated@@701))))
 (=> (and (and (= (type $generated@@700) $generated@@77) (= (type $generated@@701) ($generated@@66 $generated@@702))) (and (not (= $generated@@700 $generated@@669)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@670 $generated@@700) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@641 $generated@@700) $generated@@701) ($generated@@83 ($generated@@81 $generated@@670 $generated@@700) $generated@@701)) ($generated@@0 ($generated@@193 $generated@@671 $generated@@700 $generated@@701)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@641 $generated@@700) $generated@@701))
)) (=> true $generated@@640)) (and (<= (- ($generated@@159 $generated@@637) $generated@@642) $generated@@672) (=> (= (- ($generated@@159 $generated@@637) $generated@@642) $generated@@672) true)))))) (and (=> (= (ControlFlow 0 60) 1) $generated@@697) (=> (= (ControlFlow 0 60) 59) $generated@@696)))))))
(let (($generated@@703  (=> (= $generated@@671 ($generated@@194 $generated@@669 $generated@@670 $generated@@60 false)) (and (=> (= (ControlFlow 0 61) (- 0 68)) (and (<= 0 ($generated@@158 0)) (< ($generated@@158 0) ($generated@@159 $generated@@637)))) (=> (and (<= 0 ($generated@@158 0)) (< ($generated@@158 0) ($generated@@159 $generated@@637))) (=> (= $generated@@673 ($generated@@160 $generated@@637 ($generated@@158 0))) (=> (and (and (= $generated@@666 ($generated@@158 1)) (= $generated@@667 ($generated@@158 1))) (and (= $generated@@668 ($generated@@158 0)) (= $generated@@672 (- ($generated@@159 $generated@@637) $generated@@666)))) (and (=> (= (ControlFlow 0 61) (- 0 67)) (=> $generated@@645 (<= ($generated@@158 0) $generated@@668))) (=> (=> $generated@@645 (<= ($generated@@158 0) $generated@@668)) (and (=> (= (ControlFlow 0 61) (- 0 66)) (=> $generated@@645 (<= $generated@@668 $generated@@666))) (=> (=> $generated@@645 (<= $generated@@668 $generated@@666)) (and (=> (= (ControlFlow 0 61) (- 0 65)) (=> $generated@@645 (<= $generated@@666 ($generated@@159 $generated@@637)))) (=> (=> $generated@@645 (<= $generated@@666 ($generated@@159 $generated@@637))) (and (=> (= (ControlFlow 0 61) (- 0 64)) (=> $generated@@645 (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@668 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@668))))) (=> (=> $generated@@645 (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@668 ($generated@@159 $generated@@637) $generated@@639)) (- ($generated@@159 $generated@@637) $generated@@668)))) (and (=> (= (ControlFlow 0 61) (- 0 63)) (=> $generated@@645 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@668 $generated@@666 $generated@@673)) (- $generated@@666 $generated@@668)))) (=> (=> $generated@@645 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@668 $generated@@666 $generated@@673)) (- $generated@@666 $generated@@668))) (and (=> (= (ControlFlow 0 61) (- 0 62)) (=> $generated@@645 (= $generated@@667 ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@668 $generated@@666 $generated@@673)))) (=> (=> $generated@@645 (= $generated@@667 ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 $generated@@668 $generated@@666 $generated@@673))) (=> (= (ControlFlow 0 61) 60) $generated@@698))))))))))))))))))))
(let (($generated@@704  (=> (and (and ($generated@@273 $generated@@670) ($generated@@650 $generated@@670)) (and ($generated@@155 $generated@@637 ($generated@@156 $generated@@636)) ($generated@@74 $generated@@637 ($generated@@156 $generated@@636) $generated@@670))) (=> (and (and (and ($generated@@157 $generated@@639 $generated@@636) ($generated@@274 $generated@@639 $generated@@636 $generated@@670)) (=> $generated@@674 (and ($generated@@157 $generated@@675 $generated@@636) ($generated@@274 $generated@@675 $generated@@636 $generated@@670)))) (and (and (= 2 $generated@@152) (not (= ($generated@@159 $generated@@637) 0))) (and (=> $generated@@635 (> ($generated@@573 ($generated@@158 2) ($generated@@132 $generated@@636 ($generated@@153 ($generated@@153 $generated@@137)) $generated@@637 ($generated@@158 0) ($generated@@159 $generated@@637) $generated@@639)) ($generated@@159 $generated@@637))) (= (ControlFlow 0 69) 61)))) $generated@@703))))
$generated@@704))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U Int) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@149 $generated@@157)) $generated@@134)
 :pattern ( ($generated@@149 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@152 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 Int) ) (! (let (($generated@@161 ($generated@@138 (type $generated@@159))))
(= (type ($generated@@156 $generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
))))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) $generated@@64) (= (type $generated@@163) $generated@@134)) (= (type $generated@@164) ($generated@@135 $generated@@136))) (= (type $generated@@167) $generated@@136)) (or ($generated@@150 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@167) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@164 ($generated@@152 $generated@@162)) ($generated@@153 $generated@@167 $generated@@162)) (and (and (<= ($generated@@154 0) $generated@@165) (<= $generated@@165 $generated@@166)) (<= $generated@@166 ($generated@@155 $generated@@164))))))) (and (=> (not (= $generated@@165 $generated@@166)) ($generated@@150 $generated@@162 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)) (= ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) (ite (= $generated@@165 $generated@@166) 0 (+ ($generated@@132 $generated@@162 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) (ite (= ($generated@@156 $generated@@164 (- $generated@@166 1)) $generated@@167) 1 0))))))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@151 $generated@@168 ($generated@@75 0)))
 :pattern ( ($generated@@151 $generated@@168 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@64)) (= (type $generated@@176) $generated@@171)) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@136)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@136)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@64)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@188) $generated@@64)) ($generated@@151 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@151 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@77 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@171)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@136)) (= (type $generated@@251) $generated@@136)) (= ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249))  (and ($generated@@153 $generated@@250 $generated@@248) ($generated@@153 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@171) (= (type $generated@@253) $generated@@171)) (= ($generated@@177 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@177 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@136) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@153 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@153 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@154 $generated@@264) $generated@@264)
 :pattern ( ($generated@@154 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@136)) (= (type $generated@@274) $generated@@136)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@171) (= ($generated@@169 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@171) ($generated@@169 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@136) (= (type $generated@@281) $generated@@136)) (= $generated@@279 ($generated@@245 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@169 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@135 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@155 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Int) ($generated@@289 Int) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) $generated@@134)) (= (type $generated@@287) ($generated@@135 $generated@@136))) (= (type $generated@@290) $generated@@136)) (or ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@287 ($generated@@152 $generated@@285)) ($generated@@153 $generated@@290 $generated@@285)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@288)) (<= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) (<= ($generated@@154 $generated@@289) ($generated@@155 ($generated@@265 $generated@@287)))))))) (and (=> (not (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290)) (= ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (ite (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289)) 0 (+ ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290) (ite (= ($generated@@156 ($generated@@265 $generated@@287) ($generated@@154 (- $generated@@289 1))) $generated@@290) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@136)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 20)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (= ($generated@@185 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@81 $generated@@338 $generated@@340))) (<= ($generated ($generated@@81 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@185 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(let (($generated@@343 ($generated@@305 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@304 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@303 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@302 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@306 (type $generated@@348))))
(let (($generated@@350 ($generated@@305 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@304 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@303 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@324 (type $generated@@352))))
(let (($generated@@354 ($generated@@323 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@322 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@321 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@320 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@324 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@324 (type $generated@@359))))
(let (($generated@@361 ($generated@@323 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@322 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@321 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@153 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 Int) ($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@366) $generated@@64) (= (type $generated@@367) $generated@@134)) (= (type $generated@@368) ($generated@@135 $generated@@136))) (= (type $generated@@371) $generated@@136)) (or ($generated@@150 $generated@@366 $generated@@368 $generated@@369 $generated@@370 $generated@@371) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@368 ($generated@@152 $generated@@366)) ($generated@@153 $generated@@371 $generated@@366)) (and (and (<= ($generated@@154 0) $generated@@369) (<= $generated@@369 $generated@@370)) (<= $generated@@370 ($generated@@155 $generated@@368))))))) true)
 :pattern ( ($generated@@132 $generated@@366 $generated@@367 $generated@@368 $generated@@369 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@136) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@270 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@136) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@270 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@297 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@392) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@400) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@270 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@270 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@270 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@270 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 Int) ($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@134)) (= (type $generated@@429) ($generated@@135 $generated@@136))) (= (type $generated@@432) $generated@@136)) (= ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432) ($generated@@132 $generated@@427 $generated@@428 $generated@@429 $generated@@430 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 Int) ($generated@@437 Int) ($generated@@438 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@134)) (= (type $generated@@435) ($generated@@135 $generated@@136))) (= (type $generated@@438) $generated@@136)) (or ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@435 ($generated@@152 $generated@@433)) ($generated@@153 $generated@@438 $generated@@433)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@436)) (<= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) (<= ($generated@@154 $generated@@437) ($generated@@155 ($generated@@265 $generated@@435)))))))) (and (=> (not (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438))) (= ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (ite (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437)) 0 (+ ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438)) (ite (= ($generated@@156 ($generated@@265 $generated@@435) ($generated@@154 (- $generated@@437 1))) ($generated@@265 $generated@@438)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)))
))))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@324 (type $generated@@441))))
(let (($generated@@443 ($generated@@323 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@322 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@321 $generated@@443 $generated@@442)) (= ($generated@@320 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@320 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@324 (type $generated@@444))))
(let (($generated@@446 ($generated@@323 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@322 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@321 $generated@@446 $generated@@445)) (= ($generated@@356 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@356 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@324 (type $generated@@447))))
(let (($generated@@449 ($generated@@323 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@322 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@321 $generated@@449 $generated@@448)) (= ($generated@@393 $generated@@447) ($generated@@439 $generated@@136))))))
 :pattern ( ($generated@@393 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@306 (type $generated@@450))))
(let (($generated@@452 ($generated@@305 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@304 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@303 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@136) (= (type $generated@@454) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@450) ($generated@@291 ($generated@@245 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@382 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@324 (type $generated@@455))))
(let (($generated@@457 ($generated@@323 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@322 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@321 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@136) (= (type $generated@@459) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@455) ($generated@@291 ($generated@@245 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@393 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@136) ($generated@@153 $generated@@460 $generated@@46)) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@460)) $generated@@460) ($generated@@151 ($generated@@383 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@153 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@136) ($generated@@153 $generated@@461 $generated@@47)) (and (= ($generated@@291 ($generated@@383 $generated@@3 $generated@@461)) $generated@@461) ($generated@@151 ($generated@@383 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@153 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@136) ($generated@@153 $generated@@462 $generated@@44)) (and (= ($generated@@291 ($generated@@383 $generated@@4 $generated@@462)) $generated@@462) ($generated@@151 ($generated@@383 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@153 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 21))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@136) ($generated@@153 $generated@@464 $generated@@45)) (and (= ($generated@@291 ($generated@@383 $generated@@463 $generated@@464)) $generated@@464) ($generated@@151 ($generated@@383 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@153 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@153 ($generated@@291 $generated@@465) $generated@@466) ($generated@@151 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@153 ($generated@@291 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@296 $generated@@467))))
 :pattern ( ($generated@@296 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@138 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@135 $generated@@470)) (<= 0 ($generated@@155 $generated@@469))))
 :pattern ( ($generated@@155 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@411 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@411 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@411 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@419 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@419 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@419 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@136) (= (type $generated@@492) $generated@@136)) (= ($generated@@276 ($generated@@245 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@170 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@170 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@170 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@170 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@136) (= (type $generated@@502) $generated@@136)) (= ($generated@@178 ($generated@@245 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@245 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@136) (= (type $generated@@504) $generated@@136)) (= ($generated@@179 ($generated@@245 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@245 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@135 $generated@@136)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@155 $generated@@505))) ($generated@@270 ($generated@@156 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@156 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@254 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@254 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@259 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@259 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@184 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@184 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@184 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@152 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@152 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@152 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@383 $generated@@528 ($generated@@291 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@291 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))) (and ($generated@@153 ($generated@@81 ($generated@@384 $generated@@529) $generated@@532) $generated@@531) ($generated@@153 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))) (and ($generated@@153 ($generated@@81 ($generated@@394 $generated@@533) $generated@@536) $generated@@535) ($generated@@153 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@136)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@245 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@245 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@136) (= (type $generated@@542) $generated@@136)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@245 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@245 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545))) (and (= ($generated@@291 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543)) $generated@@543) ($generated@@151 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543) ($generated@@411 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548))) (and (= ($generated@@291 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546)) $generated@@546) ($generated@@151 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546) ($generated@@419 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@136)) ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@383 $generated@@171 $generated@@551)) $generated@@551) ($generated@@151 ($generated@@383 $generated@@171 $generated@@551) ($generated@@170 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@81 ($generated@@439 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (and (= ($generated@@72 ($generated@@170 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@170 $generated@@556 $generated@@557)) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@171) (= ($generated@@537 ($generated@@291 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@291 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) ($generated@@153 $generated@@559 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@559)) $generated@@559) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@153 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) ($generated@@153 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@153 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) ($generated@@153 $generated@@562 ($generated@@259 $generated@@563))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562)) $generated@@562) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562) ($generated@@259 $generated@@563))))
 :pattern ( ($generated@@153 $generated@@562 ($generated@@259 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) ($generated@@153 $generated@@564 ($generated@@184 $generated@@565))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564)) $generated@@564) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564) ($generated@@184 $generated@@565))))
 :pattern ( ($generated@@153 $generated@@564 ($generated@@184 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) ($generated@@153 $generated@@566 ($generated@@152 $generated@@567))) (and (= ($generated@@291 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566)) $generated@@566) ($generated@@151 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566) ($generated@@152 $generated@@567))))
 :pattern ( ($generated@@153 $generated@@566 ($generated@@152 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@568 $generated@@571)))) ($generated@@270 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@81 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@171) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@574) (and ($generated@@169 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@171) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@578) (and ($generated@@169 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@136)) (= ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)) ($generated@@265 ($generated@@245 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))) ($generated@@265 ($generated@@291 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@291 ($generated@@265 $generated@@583)) ($generated@@265 ($generated@@291 $generated@@583)))
 :pattern ( ($generated@@291 ($generated@@265 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@138 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@135 $generated@@585)) (= ($generated@@155 $generated@@584) 0)) (= $generated@@584 ($generated@@282 $generated@@585))))
 :pattern ( ($generated@@155 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@296 $generated@@586) ($generated ($generated@@81 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@2)) ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@3)) ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@4)) ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@463)) ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@136)) ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@135 $generated@@136)) (= (type $generated@@601) $generated@@64)) (= ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@155 $generated@@600))) ($generated@@153 ($generated@@156 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@156 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@155 $generated@@604))) (< ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608))) (and (and ($generated@@151 ($generated@@302 $generated@@606) ($generated@@254 $generated@@607)) ($generated@@151 ($generated@@345 $generated@@606) ($generated@@254 $generated@@608))) ($generated@@151 ($generated@@382 $generated@@606) ($generated@@254 ($generated@@170 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611))) (and (and ($generated@@151 ($generated@@320 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@151 ($generated@@356 $generated@@609) ($generated@@259 $generated@@611))) ($generated@@151 ($generated@@393 $generated@@609) ($generated@@259 ($generated@@170 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@151 $generated@@612 $generated@@46))
 :pattern ( ($generated@@151 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@151 $generated@@613 $generated@@47))
 :pattern ( ($generated@@151 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@151 $generated@@614 $generated@@44))
 :pattern ( ($generated@@151 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@463) ($generated@@151 $generated@@615 $generated@@45))
 :pattern ( ($generated@@151 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@136) ($generated@@151 $generated@@616 $generated@@48))
 :pattern ( ($generated@@151 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@620) ($generated@@135 $generated@@136)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@624) $generated@@64)) (= (type $generated@@625) $generated@@136)) (= (type $generated@@626) ($generated@@191 $generated@@77 $generated@@4))) (= (type $generated@@627) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@628  (=> (and (and (and (and (<= ($generated@@154 0) $generated@@617) (<= $generated@@617 $generated@@618)) (<= $generated@@618 $generated@@619)) (<= $generated@@619 ($generated@@155 $generated@@620))) (and (and (and ($generated@@269 $generated@@621) ($generated@@622 $generated@@621)) (= $generated@@623 $generated@@621)) (and (and ($generated@@74 $generated@@620 ($generated@@152 $generated@@624) $generated@@621) ($generated@@74 ($generated@@8 $generated@@617) $generated@@46 $generated@@621)) (and ($generated@@74 ($generated@@8 $generated@@618) $generated@@46 $generated@@621) ($generated@@270 $generated@@625 $generated@@624 $generated@@621))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (<= ($generated@@154 0) $generated@@617)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (<= $generated@@617 $generated@@618)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= $generated@@618 ($generated@@155 $generated@@620))) (=> (and (and (and (and (<= ($generated@@154 0) $generated@@617) (<= $generated@@617 $generated@@618)) (<= $generated@@618 ($generated@@155 $generated@@620))) ($generated@@150 $generated@@624 $generated@@620 $generated@@617 $generated@@618 $generated@@625)) (and (and ($generated@@74 $generated@@620 ($generated@@152 $generated@@624) $generated@@621) ($generated@@74 ($generated@@8 $generated@@618) $generated@@46 $generated@@621)) (and ($generated@@74 ($generated@@8 $generated@@619) $generated@@46 $generated@@621) ($generated@@270 $generated@@625 $generated@@624 $generated@@621)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@154 0) $generated@@618)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= $generated@@618 $generated@@619)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= $generated@@619 ($generated@@155 $generated@@620))) (=> (and (and (and (and (<= ($generated@@154 0) $generated@@618) (<= $generated@@618 $generated@@619)) (<= $generated@@619 ($generated@@155 $generated@@620))) ($generated@@150 $generated@@624 $generated@@620 $generated@@618 $generated@@619 $generated@@625)) (and (and ($generated@@74 $generated@@620 ($generated@@152 $generated@@624) $generated@@621) ($generated@@74 ($generated@@8 $generated@@617) $generated@@46 $generated@@621)) (and ($generated@@74 ($generated@@8 $generated@@619) $generated@@46 $generated@@621) ($generated@@270 $generated@@625 $generated@@624 $generated@@621)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@154 0) $generated@@617)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@617 $generated@@619)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@619 ($generated@@155 $generated@@620))))))))))))))))
(let (($generated@@629  (=> (and (not (and (and (<= ($generated@@154 0) $generated@@617) (<= $generated@@617 $generated@@618)) (<= $generated@@618 $generated@@619))) (= (ControlFlow 0 12) 2)) $generated@@628)))
(let (($generated@@630  (=> (and (and (and (<= ($generated@@154 0) $generated@@617) (<= $generated@@617 $generated@@618)) (<= $generated@@618 $generated@@619)) (= (ControlFlow 0 11) 2)) $generated@@628)))
(let (($generated@@631  (=> (not (and (<= ($generated@@154 0) $generated@@617) (<= $generated@@617 $generated@@618))) (and (=> (= (ControlFlow 0 14) 11) $generated@@630) (=> (= (ControlFlow 0 14) 12) $generated@@629)))))
(let (($generated@@632  (=> (and (<= ($generated@@154 0) $generated@@617) (<= $generated@@617 $generated@@618)) (and (=> (= (ControlFlow 0 13) 11) $generated@@630) (=> (= (ControlFlow 0 13) 12) $generated@@629)))))
(let (($generated@@633  (=> (< $generated@@617 ($generated@@154 0)) (and (=> (= (ControlFlow 0 16) 13) $generated@@632) (=> (= (ControlFlow 0 16) 14) $generated@@631)))))
(let (($generated@@634  (=> (<= ($generated@@154 0) $generated@@617) (and (=> (= (ControlFlow 0 15) 13) $generated@@632) (=> (= (ControlFlow 0 15) 14) $generated@@631)))))
(let (($generated@@635  (=> (= $generated@@626 ($generated@@190 $generated@@627 $generated@@623 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@634) (=> (= (ControlFlow 0 17) 16) $generated@@633)))))
(let (($generated@@636  (=> (and (and (and ($generated@@269 $generated@@623) ($generated@@622 $generated@@623)) (and ($generated@@151 $generated@@620 ($generated@@152 $generated@@624)) ($generated@@74 $generated@@620 ($generated@@152 $generated@@624) $generated@@623))) (and (and ($generated@@153 $generated@@625 $generated@@624) ($generated@@270 $generated@@625 $generated@@624 $generated@@623)) (and (= 1 $generated@@148) (= (ControlFlow 0 18) 17)))) $generated@@635)))
$generated@@636))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U Int) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@149 $generated@@157)) $generated@@134)
 :pattern ( ($generated@@149 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@152 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 Int) ) (! (let (($generated@@161 ($generated@@138 (type $generated@@159))))
(= (type ($generated@@156 $generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
))))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) $generated@@64) (= (type $generated@@163) $generated@@134)) (= (type $generated@@164) ($generated@@135 $generated@@136))) (= (type $generated@@167) $generated@@136)) (or ($generated@@150 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@167) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@164 ($generated@@152 $generated@@162)) ($generated@@153 $generated@@167 $generated@@162)) (and (and (<= ($generated@@154 0) $generated@@165) (<= $generated@@165 $generated@@166)) (<= $generated@@166 ($generated@@155 $generated@@164))))))) (and (=> (not (= $generated@@165 $generated@@166)) ($generated@@150 $generated@@162 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)) (= ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) (ite (= $generated@@165 $generated@@166) 0 (+ ($generated@@132 $generated@@162 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) (ite (= ($generated@@156 $generated@@164 (- $generated@@166 1)) $generated@@167) 1 0))))))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@151 $generated@@168 ($generated@@75 0)))
 :pattern ( ($generated@@151 $generated@@168 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@64)) (= (type $generated@@176) $generated@@171)) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@136)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@136)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@64)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@188) $generated@@64)) ($generated@@151 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@151 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@77 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@171)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@136)) (= (type $generated@@251) $generated@@136)) (= ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249))  (and ($generated@@153 $generated@@250 $generated@@248) ($generated@@153 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@171) (= (type $generated@@253) $generated@@171)) (= ($generated@@177 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@177 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@136) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@153 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@153 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@154 $generated@@264) $generated@@264)
 :pattern ( ($generated@@154 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@136)) (= (type $generated@@274) $generated@@136)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@171) (= ($generated@@169 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@171) ($generated@@169 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@136) (= (type $generated@@281) $generated@@136)) (= $generated@@279 ($generated@@245 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@169 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@135 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@155 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Int) ($generated@@289 Int) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) $generated@@134)) (= (type $generated@@287) ($generated@@135 $generated@@136))) (= (type $generated@@290) $generated@@136)) (or ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@287 ($generated@@152 $generated@@285)) ($generated@@153 $generated@@290 $generated@@285)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@288)) (<= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) (<= ($generated@@154 $generated@@289) ($generated@@155 ($generated@@265 $generated@@287)))))))) (and (=> (not (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290)) (= ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (ite (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289)) 0 (+ ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290) (ite (= ($generated@@156 ($generated@@265 $generated@@287) ($generated@@154 (- $generated@@289 1))) $generated@@290) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@136)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 20)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (= ($generated@@185 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@81 $generated@@338 $generated@@340))) (<= ($generated ($generated@@81 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@185 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(let (($generated@@343 ($generated@@305 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@304 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@303 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@302 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@306 (type $generated@@348))))
(let (($generated@@350 ($generated@@305 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@304 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@303 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@324 (type $generated@@352))))
(let (($generated@@354 ($generated@@323 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@322 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@321 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@320 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@324 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@324 (type $generated@@359))))
(let (($generated@@361 ($generated@@323 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@322 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@321 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@153 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 Int) ($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@366) $generated@@64) (= (type $generated@@367) $generated@@134)) (= (type $generated@@368) ($generated@@135 $generated@@136))) (= (type $generated@@371) $generated@@136)) (or ($generated@@150 $generated@@366 $generated@@368 $generated@@369 $generated@@370 $generated@@371) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@368 ($generated@@152 $generated@@366)) ($generated@@153 $generated@@371 $generated@@366)) (and (and (<= ($generated@@154 0) $generated@@369) (<= $generated@@369 $generated@@370)) (<= $generated@@370 ($generated@@155 $generated@@368))))))) true)
 :pattern ( ($generated@@132 $generated@@366 $generated@@367 $generated@@368 $generated@@369 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@136) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@270 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@136) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@270 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@297 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@392) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@400) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@270 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@270 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@270 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@270 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 Int) ($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@134)) (= (type $generated@@429) ($generated@@135 $generated@@136))) (= (type $generated@@432) $generated@@136)) (= ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432) ($generated@@132 $generated@@427 $generated@@428 $generated@@429 $generated@@430 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 Int) ($generated@@437 Int) ($generated@@438 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@134)) (= (type $generated@@435) ($generated@@135 $generated@@136))) (= (type $generated@@438) $generated@@136)) (or ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@435 ($generated@@152 $generated@@433)) ($generated@@153 $generated@@438 $generated@@433)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@436)) (<= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) (<= ($generated@@154 $generated@@437) ($generated@@155 ($generated@@265 $generated@@435)))))))) (and (=> (not (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438))) (= ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (ite (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437)) 0 (+ ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438)) (ite (= ($generated@@156 ($generated@@265 $generated@@435) ($generated@@154 (- $generated@@437 1))) ($generated@@265 $generated@@438)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)))
))))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@324 (type $generated@@441))))
(let (($generated@@443 ($generated@@323 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@322 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@321 $generated@@443 $generated@@442)) (= ($generated@@320 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@320 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@324 (type $generated@@444))))
(let (($generated@@446 ($generated@@323 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@322 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@321 $generated@@446 $generated@@445)) (= ($generated@@356 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@356 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@324 (type $generated@@447))))
(let (($generated@@449 ($generated@@323 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@322 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@321 $generated@@449 $generated@@448)) (= ($generated@@393 $generated@@447) ($generated@@439 $generated@@136))))))
 :pattern ( ($generated@@393 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@306 (type $generated@@450))))
(let (($generated@@452 ($generated@@305 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@304 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@303 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@136) (= (type $generated@@454) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@450) ($generated@@291 ($generated@@245 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@382 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@324 (type $generated@@455))))
(let (($generated@@457 ($generated@@323 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@322 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@321 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@136) (= (type $generated@@459) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@455) ($generated@@291 ($generated@@245 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@393 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@136) ($generated@@153 $generated@@460 $generated@@46)) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@460)) $generated@@460) ($generated@@151 ($generated@@383 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@153 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@136) ($generated@@153 $generated@@461 $generated@@47)) (and (= ($generated@@291 ($generated@@383 $generated@@3 $generated@@461)) $generated@@461) ($generated@@151 ($generated@@383 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@153 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@136) ($generated@@153 $generated@@462 $generated@@44)) (and (= ($generated@@291 ($generated@@383 $generated@@4 $generated@@462)) $generated@@462) ($generated@@151 ($generated@@383 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@153 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 21))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@136) ($generated@@153 $generated@@464 $generated@@45)) (and (= ($generated@@291 ($generated@@383 $generated@@463 $generated@@464)) $generated@@464) ($generated@@151 ($generated@@383 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@153 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@153 ($generated@@291 $generated@@465) $generated@@466) ($generated@@151 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@153 ($generated@@291 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@296 $generated@@467))))
 :pattern ( ($generated@@296 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@138 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@135 $generated@@470)) (<= 0 ($generated@@155 $generated@@469))))
 :pattern ( ($generated@@155 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@411 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@411 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@411 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@419 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@419 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@419 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@136) (= (type $generated@@492) $generated@@136)) (= ($generated@@276 ($generated@@245 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@170 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@170 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@170 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@170 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@136) (= (type $generated@@502) $generated@@136)) (= ($generated@@178 ($generated@@245 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@245 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@136) (= (type $generated@@504) $generated@@136)) (= ($generated@@179 ($generated@@245 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@245 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@135 $generated@@136)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@155 $generated@@505))) ($generated@@270 ($generated@@156 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@156 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@254 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@254 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@259 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@259 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@184 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@184 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@184 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@152 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@152 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@152 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@383 $generated@@528 ($generated@@291 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@291 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))) (and ($generated@@153 ($generated@@81 ($generated@@384 $generated@@529) $generated@@532) $generated@@531) ($generated@@153 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))) (and ($generated@@153 ($generated@@81 ($generated@@394 $generated@@533) $generated@@536) $generated@@535) ($generated@@153 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@136)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@245 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@245 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@136) (= (type $generated@@542) $generated@@136)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@245 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@245 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545))) (and (= ($generated@@291 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543)) $generated@@543) ($generated@@151 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543) ($generated@@411 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548))) (and (= ($generated@@291 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546)) $generated@@546) ($generated@@151 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546) ($generated@@419 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@136)) ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@383 $generated@@171 $generated@@551)) $generated@@551) ($generated@@151 ($generated@@383 $generated@@171 $generated@@551) ($generated@@170 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@81 ($generated@@439 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (and (= ($generated@@72 ($generated@@170 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@170 $generated@@556 $generated@@557)) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@171) (= ($generated@@537 ($generated@@291 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@291 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) ($generated@@153 $generated@@559 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@559)) $generated@@559) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@153 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) ($generated@@153 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@153 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) ($generated@@153 $generated@@562 ($generated@@259 $generated@@563))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562)) $generated@@562) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562) ($generated@@259 $generated@@563))))
 :pattern ( ($generated@@153 $generated@@562 ($generated@@259 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) ($generated@@153 $generated@@564 ($generated@@184 $generated@@565))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564)) $generated@@564) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564) ($generated@@184 $generated@@565))))
 :pattern ( ($generated@@153 $generated@@564 ($generated@@184 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) ($generated@@153 $generated@@566 ($generated@@152 $generated@@567))) (and (= ($generated@@291 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566)) $generated@@566) ($generated@@151 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566) ($generated@@152 $generated@@567))))
 :pattern ( ($generated@@153 $generated@@566 ($generated@@152 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@568 $generated@@571)))) ($generated@@270 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@81 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@171) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@574) (and ($generated@@169 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@171) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@578) (and ($generated@@169 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@136)) (= ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)) ($generated@@265 ($generated@@245 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))) ($generated@@265 ($generated@@291 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@291 ($generated@@265 $generated@@583)) ($generated@@265 ($generated@@291 $generated@@583)))
 :pattern ( ($generated@@291 ($generated@@265 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@138 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@135 $generated@@585)) (= ($generated@@155 $generated@@584) 0)) (= $generated@@584 ($generated@@282 $generated@@585))))
 :pattern ( ($generated@@155 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@296 $generated@@586) ($generated ($generated@@81 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@2)) ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@3)) ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@4)) ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@463)) ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@136)) ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@135 $generated@@136)) (= (type $generated@@601) $generated@@64)) (= ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@155 $generated@@600))) ($generated@@153 ($generated@@156 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@156 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@155 $generated@@604))) (< ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608))) (and (and ($generated@@151 ($generated@@302 $generated@@606) ($generated@@254 $generated@@607)) ($generated@@151 ($generated@@345 $generated@@606) ($generated@@254 $generated@@608))) ($generated@@151 ($generated@@382 $generated@@606) ($generated@@254 ($generated@@170 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611))) (and (and ($generated@@151 ($generated@@320 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@151 ($generated@@356 $generated@@609) ($generated@@259 $generated@@611))) ($generated@@151 ($generated@@393 $generated@@609) ($generated@@259 ($generated@@170 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@151 $generated@@612 $generated@@46))
 :pattern ( ($generated@@151 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@151 $generated@@613 $generated@@47))
 :pattern ( ($generated@@151 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@151 $generated@@614 $generated@@44))
 :pattern ( ($generated@@151 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@463) ($generated@@151 $generated@@615 $generated@@45))
 :pattern ( ($generated@@151 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@136) ($generated@@151 $generated@@616 $generated@@48))
 :pattern ( ($generated@@151 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@617) ($generated@@191 $generated@@77 $generated@@4)) (= (type $generated@@618) $generated@@77)) (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) ($generated@@135 $generated@@136))) (= (type $generated@@627) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (= $generated@@617 ($generated@@190 $generated@@618 $generated@@619 $generated@@60 false)) (=> (and (and (and ($generated@@269 $generated@@620) ($generated@@621 $generated@@620)) (= $generated@@619 $generated@@620)) (and (forall (($generated@@629 T@U) ($generated@@630 Int) ($generated@@631 Int) ($generated@@632 Int) ) (!  (=> (= (type $generated@@629) ($generated@@135 $generated@@136)) (=> (and (and ($generated@@151 $generated@@629 ($generated@@152 $generated@@622)) (and (and (and (<= ($generated@@154 0) $generated@@630) (<= $generated@@630 $generated@@631)) (<= $generated@@631 $generated@@632)) (<= $generated@@632 ($generated@@155 $generated@@629)))) (or (< ($generated@@603 $generated@@629) ($generated@@603 $generated@@623)) (and (= ($generated@@603 $generated@@629) ($generated@@603 $generated@@623)) (or (and (<= 0 $generated@@630) (< $generated@@630 $generated@@624)) (and (= $generated@@630 $generated@@624) (or (and (<= 0 $generated@@631) (< $generated@@631 $generated@@625)) (and (= $generated@@631 $generated@@625) (and (<= 0 $generated@@632) (< $generated@@632 $generated@@626))))))))) (= (+ ($generated@@132 $generated@@622 ($generated@@149 $generated@@137) $generated@@629 $generated@@630 $generated@@631 $generated@@627) ($generated@@132 $generated@@622 ($generated@@149 $generated@@137) $generated@@629 $generated@@631 $generated@@632 $generated@@627)) ($generated@@132 $generated@@622 ($generated@@149 $generated@@137) $generated@@629 $generated@@630 $generated@@632 $generated@@627))))
 :no-pattern (type $generated@@629)
 :no-pattern ($generated $generated@@629)
 :no-pattern ($generated@@0 $generated@@629)
)) (= (ControlFlow 0 2) (- 0 1)))) (= (+ ($generated@@132 $generated@@622 ($generated@@149 ($generated@@149 $generated@@137)) $generated@@623 $generated@@624 $generated@@625 $generated@@627) ($generated@@132 $generated@@622 ($generated@@149 ($generated@@149 $generated@@137)) $generated@@623 $generated@@625 $generated@@626 $generated@@627)) ($generated@@132 $generated@@622 ($generated@@149 ($generated@@149 $generated@@137)) $generated@@623 $generated@@624 $generated@@626 $generated@@627))))))
(let (($generated@@633  (=> (and (and ($generated@@269 $generated@@619) ($generated@@621 $generated@@619)) (and ($generated@@151 $generated@@623 ($generated@@152 $generated@@622)) ($generated@@74 $generated@@623 ($generated@@152 $generated@@622) $generated@@619))) (=> (and (and (and ($generated@@153 $generated@@627 $generated@@622) ($generated@@270 $generated@@627 $generated@@622 $generated@@619)) (and (= 1 $generated@@148) (<= ($generated@@154 0) $generated@@624))) (and (and (<= $generated@@624 $generated@@625) (<= $generated@@625 $generated@@626)) (and (<= $generated@@626 ($generated@@155 $generated@@623)) (= (ControlFlow 0 3) 2)))) $generated@@628))))
$generated@@633)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U Int) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@149 $generated@@157)) $generated@@134)
 :pattern ( ($generated@@149 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@152 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 Int) ) (! (let (($generated@@161 ($generated@@138 (type $generated@@159))))
(= (type ($generated@@156 $generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
))))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) $generated@@64) (= (type $generated@@163) $generated@@134)) (= (type $generated@@164) ($generated@@135 $generated@@136))) (= (type $generated@@167) $generated@@136)) (or ($generated@@150 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@167) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@164 ($generated@@152 $generated@@162)) ($generated@@153 $generated@@167 $generated@@162)) (and (and (<= ($generated@@154 0) $generated@@165) (<= $generated@@165 $generated@@166)) (<= $generated@@166 ($generated@@155 $generated@@164))))))) (and (=> (not (= $generated@@165 $generated@@166)) ($generated@@150 $generated@@162 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)) (= ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) (ite (= $generated@@165 $generated@@166) 0 (+ ($generated@@132 $generated@@162 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) (ite (= ($generated@@156 $generated@@164 (- $generated@@166 1)) $generated@@167) 1 0))))))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@151 $generated@@168 ($generated@@75 0)))
 :pattern ( ($generated@@151 $generated@@168 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@64)) (= (type $generated@@176) $generated@@171)) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@136)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@136)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@64)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@188) $generated@@64)) ($generated@@151 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@151 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@77 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@171)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@136)) (= (type $generated@@251) $generated@@136)) (= ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249))  (and ($generated@@153 $generated@@250 $generated@@248) ($generated@@153 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@171) (= (type $generated@@253) $generated@@171)) (= ($generated@@177 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@177 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@136) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@153 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@153 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@154 $generated@@264) $generated@@264)
 :pattern ( ($generated@@154 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@136)) (= (type $generated@@274) $generated@@136)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@171) (= ($generated@@169 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@171) ($generated@@169 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@136) (= (type $generated@@281) $generated@@136)) (= $generated@@279 ($generated@@245 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@169 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@135 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@155 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Int) ($generated@@289 Int) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) $generated@@134)) (= (type $generated@@287) ($generated@@135 $generated@@136))) (= (type $generated@@290) $generated@@136)) (or ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@287 ($generated@@152 $generated@@285)) ($generated@@153 $generated@@290 $generated@@285)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@288)) (<= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) (<= ($generated@@154 $generated@@289) ($generated@@155 ($generated@@265 $generated@@287)))))))) (and (=> (not (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290)) (= ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (ite (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289)) 0 (+ ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290) (ite (= ($generated@@156 ($generated@@265 $generated@@287) ($generated@@154 (- $generated@@289 1))) $generated@@290) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@136)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 20)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (= ($generated@@185 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@81 $generated@@338 $generated@@340))) (<= ($generated ($generated@@81 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@185 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(let (($generated@@343 ($generated@@305 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@304 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@303 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@302 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@306 (type $generated@@348))))
(let (($generated@@350 ($generated@@305 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@304 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@303 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@324 (type $generated@@352))))
(let (($generated@@354 ($generated@@323 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@322 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@321 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@320 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@324 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@324 (type $generated@@359))))
(let (($generated@@361 ($generated@@323 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@322 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@321 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@153 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 Int) ($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@366) $generated@@64) (= (type $generated@@367) $generated@@134)) (= (type $generated@@368) ($generated@@135 $generated@@136))) (= (type $generated@@371) $generated@@136)) (or ($generated@@150 $generated@@366 $generated@@368 $generated@@369 $generated@@370 $generated@@371) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@368 ($generated@@152 $generated@@366)) ($generated@@153 $generated@@371 $generated@@366)) (and (and (<= ($generated@@154 0) $generated@@369) (<= $generated@@369 $generated@@370)) (<= $generated@@370 ($generated@@155 $generated@@368))))))) true)
 :pattern ( ($generated@@132 $generated@@366 $generated@@367 $generated@@368 $generated@@369 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@136) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@270 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@136) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@270 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@297 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@392) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@400) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@270 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@270 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@270 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@270 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 Int) ($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@134)) (= (type $generated@@429) ($generated@@135 $generated@@136))) (= (type $generated@@432) $generated@@136)) (= ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432) ($generated@@132 $generated@@427 $generated@@428 $generated@@429 $generated@@430 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 Int) ($generated@@437 Int) ($generated@@438 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@134)) (= (type $generated@@435) ($generated@@135 $generated@@136))) (= (type $generated@@438) $generated@@136)) (or ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@435 ($generated@@152 $generated@@433)) ($generated@@153 $generated@@438 $generated@@433)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@436)) (<= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) (<= ($generated@@154 $generated@@437) ($generated@@155 ($generated@@265 $generated@@435)))))))) (and (=> (not (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438))) (= ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (ite (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437)) 0 (+ ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438)) (ite (= ($generated@@156 ($generated@@265 $generated@@435) ($generated@@154 (- $generated@@437 1))) ($generated@@265 $generated@@438)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)))
))))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@324 (type $generated@@441))))
(let (($generated@@443 ($generated@@323 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@322 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@321 $generated@@443 $generated@@442)) (= ($generated@@320 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@320 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@324 (type $generated@@444))))
(let (($generated@@446 ($generated@@323 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@322 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@321 $generated@@446 $generated@@445)) (= ($generated@@356 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@356 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@324 (type $generated@@447))))
(let (($generated@@449 ($generated@@323 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@322 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@321 $generated@@449 $generated@@448)) (= ($generated@@393 $generated@@447) ($generated@@439 $generated@@136))))))
 :pattern ( ($generated@@393 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@306 (type $generated@@450))))
(let (($generated@@452 ($generated@@305 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@304 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@303 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@136) (= (type $generated@@454) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@450) ($generated@@291 ($generated@@245 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@382 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@324 (type $generated@@455))))
(let (($generated@@457 ($generated@@323 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@322 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@321 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@136) (= (type $generated@@459) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@455) ($generated@@291 ($generated@@245 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@393 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@136) ($generated@@153 $generated@@460 $generated@@46)) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@460)) $generated@@460) ($generated@@151 ($generated@@383 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@153 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@136) ($generated@@153 $generated@@461 $generated@@47)) (and (= ($generated@@291 ($generated@@383 $generated@@3 $generated@@461)) $generated@@461) ($generated@@151 ($generated@@383 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@153 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@136) ($generated@@153 $generated@@462 $generated@@44)) (and (= ($generated@@291 ($generated@@383 $generated@@4 $generated@@462)) $generated@@462) ($generated@@151 ($generated@@383 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@153 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 21))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@136) ($generated@@153 $generated@@464 $generated@@45)) (and (= ($generated@@291 ($generated@@383 $generated@@463 $generated@@464)) $generated@@464) ($generated@@151 ($generated@@383 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@153 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@153 ($generated@@291 $generated@@465) $generated@@466) ($generated@@151 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@153 ($generated@@291 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@296 $generated@@467))))
 :pattern ( ($generated@@296 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@138 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@135 $generated@@470)) (<= 0 ($generated@@155 $generated@@469))))
 :pattern ( ($generated@@155 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@411 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@411 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@411 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@419 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@419 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@419 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@136) (= (type $generated@@492) $generated@@136)) (= ($generated@@276 ($generated@@245 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@170 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@170 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@170 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@170 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@136) (= (type $generated@@502) $generated@@136)) (= ($generated@@178 ($generated@@245 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@245 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@136) (= (type $generated@@504) $generated@@136)) (= ($generated@@179 ($generated@@245 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@245 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@135 $generated@@136)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@155 $generated@@505))) ($generated@@270 ($generated@@156 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@156 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@254 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@254 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@259 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@259 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@184 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@184 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@184 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@152 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@152 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@152 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@383 $generated@@528 ($generated@@291 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@291 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))) (and ($generated@@153 ($generated@@81 ($generated@@384 $generated@@529) $generated@@532) $generated@@531) ($generated@@153 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))) (and ($generated@@153 ($generated@@81 ($generated@@394 $generated@@533) $generated@@536) $generated@@535) ($generated@@153 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@136)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@245 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@245 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@136) (= (type $generated@@542) $generated@@136)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@245 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@245 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545))) (and (= ($generated@@291 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543)) $generated@@543) ($generated@@151 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543) ($generated@@411 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548))) (and (= ($generated@@291 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546)) $generated@@546) ($generated@@151 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546) ($generated@@419 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@136)) ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@383 $generated@@171 $generated@@551)) $generated@@551) ($generated@@151 ($generated@@383 $generated@@171 $generated@@551) ($generated@@170 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@81 ($generated@@439 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (and (= ($generated@@72 ($generated@@170 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@170 $generated@@556 $generated@@557)) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@171) (= ($generated@@537 ($generated@@291 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@291 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) ($generated@@153 $generated@@559 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@559)) $generated@@559) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@153 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) ($generated@@153 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@153 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) ($generated@@153 $generated@@562 ($generated@@259 $generated@@563))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562)) $generated@@562) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562) ($generated@@259 $generated@@563))))
 :pattern ( ($generated@@153 $generated@@562 ($generated@@259 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) ($generated@@153 $generated@@564 ($generated@@184 $generated@@565))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564)) $generated@@564) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564) ($generated@@184 $generated@@565))))
 :pattern ( ($generated@@153 $generated@@564 ($generated@@184 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) ($generated@@153 $generated@@566 ($generated@@152 $generated@@567))) (and (= ($generated@@291 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566)) $generated@@566) ($generated@@151 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566) ($generated@@152 $generated@@567))))
 :pattern ( ($generated@@153 $generated@@566 ($generated@@152 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@568 $generated@@571)))) ($generated@@270 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@81 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@171) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@574) (and ($generated@@169 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@171) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@578) (and ($generated@@169 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@136)) (= ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)) ($generated@@265 ($generated@@245 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))) ($generated@@265 ($generated@@291 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@291 ($generated@@265 $generated@@583)) ($generated@@265 ($generated@@291 $generated@@583)))
 :pattern ( ($generated@@291 ($generated@@265 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@138 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@135 $generated@@585)) (= ($generated@@155 $generated@@584) 0)) (= $generated@@584 ($generated@@282 $generated@@585))))
 :pattern ( ($generated@@155 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@296 $generated@@586) ($generated ($generated@@81 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@2)) ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@3)) ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@4)) ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@463)) ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@136)) ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@135 $generated@@136)) (= (type $generated@@601) $generated@@64)) (= ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@155 $generated@@600))) ($generated@@153 ($generated@@156 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@156 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@155 $generated@@604))) (< ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608))) (and (and ($generated@@151 ($generated@@302 $generated@@606) ($generated@@254 $generated@@607)) ($generated@@151 ($generated@@345 $generated@@606) ($generated@@254 $generated@@608))) ($generated@@151 ($generated@@382 $generated@@606) ($generated@@254 ($generated@@170 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611))) (and (and ($generated@@151 ($generated@@320 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@151 ($generated@@356 $generated@@609) ($generated@@259 $generated@@611))) ($generated@@151 ($generated@@393 $generated@@609) ($generated@@259 ($generated@@170 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@151 $generated@@612 $generated@@46))
 :pattern ( ($generated@@151 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@151 $generated@@613 $generated@@47))
 :pattern ( ($generated@@151 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@151 $generated@@614 $generated@@44))
 :pattern ( ($generated@@151 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@463) ($generated@@151 $generated@@615 $generated@@45))
 :pattern ( ($generated@@151 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@136) ($generated@@151 $generated@@616 $generated@@48))
 :pattern ( ($generated@@151 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@617) $generated@@136) (= (type $generated@@618) $generated@@136)) (= (type $generated@@619) ($generated@@135 $generated@@136))) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@626) ($generated@@191 $generated@@77 $generated@@4))) (= (type $generated@@627) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@628 true))
(let (($generated@@629  (=> (not (= $generated@@617 $generated@@618)) (=> (and (and ($generated@@74 $generated@@619 ($generated@@152 $generated@@620) $generated@@621) ($generated@@74 ($generated@@8 $generated@@622) $generated@@46 $generated@@621)) (and ($generated@@74 ($generated@@8 $generated@@623) $generated@@46 $generated@@621) ($generated@@270 $generated@@617 $generated@@620 $generated@@621))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@154 0) $generated@@622)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= $generated@@622 $generated@@623)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= $generated@@623 ($generated@@155 $generated@@619))) (=> (and (and (and (and (<= ($generated@@154 0) $generated@@622) (<= $generated@@622 $generated@@623)) (<= $generated@@623 ($generated@@155 $generated@@619))) ($generated@@150 $generated@@620 $generated@@619 $generated@@622 $generated@@623 $generated@@617)) (and (and ($generated@@74 $generated@@619 ($generated@@152 $generated@@620) $generated@@621) ($generated@@74 ($generated@@8 $generated@@622) $generated@@46 $generated@@621)) (and ($generated@@74 ($generated@@8 $generated@@623) $generated@@46 $generated@@621) ($generated@@270 $generated@@618 $generated@@620 $generated@@621)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@154 0) $generated@@622)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@622 $generated@@623)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@623 ($generated@@155 $generated@@619)))))))))))))
(let (($generated@@630  (=> (and (and (and (<= ($generated@@154 0) $generated@@622) (<= $generated@@622 $generated@@623)) (<= $generated@@623 ($generated@@155 $generated@@619))) (and (and ($generated@@269 $generated@@621) ($generated@@624 $generated@@621)) (= $generated@@625 $generated@@621))) (and (=> (= (ControlFlow 0 9) 2) $generated@@629) (=> (= (ControlFlow 0 9) 8) $generated@@628)))))
(let (($generated@@631  (=> (and (not (and (<= ($generated@@154 0) $generated@@622) (<= $generated@@622 $generated@@623))) (= (ControlFlow 0 11) 9)) $generated@@630)))
(let (($generated@@632  (=> (and (and (<= ($generated@@154 0) $generated@@622) (<= $generated@@622 $generated@@623)) (= (ControlFlow 0 10) 9)) $generated@@630)))
(let (($generated@@633  (=> (< $generated@@622 ($generated@@154 0)) (and (=> (= (ControlFlow 0 13) 10) $generated@@632) (=> (= (ControlFlow 0 13) 11) $generated@@631)))))
(let (($generated@@634  (=> (<= ($generated@@154 0) $generated@@622) (and (=> (= (ControlFlow 0 12) 10) $generated@@632) (=> (= (ControlFlow 0 12) 11) $generated@@631)))))
(let (($generated@@635  (=> (= $generated@@626 ($generated@@190 $generated@@627 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 12) $generated@@634) (=> (= (ControlFlow 0 14) 13) $generated@@633)))))
(let (($generated@@636  (=> (and ($generated@@269 $generated@@625) ($generated@@624 $generated@@625)) (=> (and (and (and ($generated@@151 $generated@@619 ($generated@@152 $generated@@620)) ($generated@@74 $generated@@619 ($generated@@152 $generated@@620) $generated@@625)) (and ($generated@@153 $generated@@617 $generated@@620) ($generated@@270 $generated@@617 $generated@@620 $generated@@625))) (and (and ($generated@@153 $generated@@618 $generated@@620) ($generated@@270 $generated@@618 $generated@@620 $generated@@625)) (and (= 1 $generated@@148) (= (ControlFlow 0 15) 14)))) $generated@@635))))
$generated@@636))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U Int) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@T) ) (= ($generated@@1 ($generated@@135 $generated@@139)) 15))) (forall (($generated@@140 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@135 $generated@@140))
))) (= ($generated@@1 $generated@@136) 16)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@133 $generated@@141)) $generated@@134)
 :pattern ( ($generated@@133 $generated@@141))
))) (= (type $generated@@137) $generated@@134)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@134)) (= (type $generated@@144) ($generated@@135 $generated@@136))) (= (type $generated@@147) $generated@@136)) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@132 $generated@@142 $generated@@137 $generated@@144 $generated@@145 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@132 $generated@@142 ($generated@@133 $generated@@143) $generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert  (and (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@149 $generated@@157)) $generated@@134)
 :pattern ( ($generated@@149 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@152 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@152 $generated@@158))
))) (forall (($generated@@159 T@U) ($generated@@160 Int) ) (! (let (($generated@@161 ($generated@@138 (type $generated@@159))))
(= (type ($generated@@156 $generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
))))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) $generated@@64) (= (type $generated@@163) $generated@@134)) (= (type $generated@@164) ($generated@@135 $generated@@136))) (= (type $generated@@167) $generated@@136)) (or ($generated@@150 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@167) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@164 ($generated@@152 $generated@@162)) ($generated@@153 $generated@@167 $generated@@162)) (and (and (<= ($generated@@154 0) $generated@@165) (<= $generated@@165 $generated@@166)) (<= $generated@@166 ($generated@@155 $generated@@164))))))) (and (=> (not (= $generated@@165 $generated@@166)) ($generated@@150 $generated@@162 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167)) (= ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167) (ite (= $generated@@165 $generated@@166) 0 (+ ($generated@@132 $generated@@162 $generated@@163 $generated@@164 $generated@@165 (- $generated@@166 1) $generated@@167) (ite (= ($generated@@156 $generated@@164 (- $generated@@166 1)) $generated@@167) 1 0))))))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@149 $generated@@163) $generated@@164 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@151 $generated@@168 ($generated@@75 0)))
 :pattern ( ($generated@@151 $generated@@168 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@64)) (= (type $generated@@176) $generated@@171)) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@151 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@136)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@136)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@64)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@188) $generated@@64)) ($generated@@151 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@151 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@77 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@67 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@77) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@240) ($generated@@66 $generated@@4))) (= (type $generated@@242) $generated@@77)) (= (type $generated@@243) ($generated@@66 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247)) $generated@@171)
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@136)) (= (type $generated@@251) $generated@@136)) (= ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249))  (and ($generated@@153 $generated@@250 $generated@@248) ($generated@@153 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@151 ($generated@@245 $generated@@250 $generated@@251) ($generated@@170 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@171) (= (type $generated@@253) $generated@@171)) (= ($generated@@177 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@177 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@136) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@153 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@151 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@153 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@151 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@154 $generated@@264) $generated@@264)
 :pattern ( ($generated@@154 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) $generated@@64)) (= (type $generated@@273) $generated@@136)) (= (type $generated@@274) $generated@@136)) (= (type $generated@@275) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@269 $generated@@275)) (= ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@74 ($generated@@245 $generated@@273 $generated@@274) ($generated@@170 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@68)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@171) (= ($generated@@169 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@61)))
 :pattern ( ($generated@@169 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@171) ($generated@@169 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@136) (= (type $generated@@281) $generated@@136)) (= $generated@@279 ($generated@@245 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@169 $generated@@279))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@135 $generated@@283))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@155 ($generated@@282 $generated@@284)) 0)
 :pattern ( ($generated@@282 $generated@@284))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 Int) ($generated@@289 Int) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) $generated@@134)) (= (type $generated@@287) ($generated@@135 $generated@@136))) (= (type $generated@@290) $generated@@136)) (or ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@287 ($generated@@152 $generated@@285)) ($generated@@153 $generated@@290 $generated@@285)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@288)) (<= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) (<= ($generated@@154 $generated@@289) ($generated@@155 ($generated@@265 $generated@@287)))))))) (and (=> (not (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289))) ($generated@@150 $generated@@285 ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290)) (= ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290) (ite (= ($generated@@154 $generated@@288) ($generated@@154 $generated@@289)) 0 (+ ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 (- $generated@@289 1)) $generated@@290) (ite (= ($generated@@156 ($generated@@265 $generated@@287) ($generated@@154 (- $generated@@289 1))) $generated@@290) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@285 ($generated@@149 $generated@@286) ($generated@@265 $generated@@287) ($generated@@154 $generated@@288) ($generated@@154 $generated@@289) $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@136)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@270 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@76 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@79 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@76 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@81 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 20)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (= ($generated@@185 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@81 $generated@@338 $generated@@340))) (<= ($generated ($generated@@81 $generated@@338 $generated@@340)) ($generated@@296 $generated@@338))))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@185 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@306 (type $generated@@341))))
(let (($generated@@343 ($generated@@305 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@304 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@303 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@302 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@306 (type $generated@@348))))
(let (($generated@@350 ($generated@@305 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@304 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@303 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@324 (type $generated@@352))))
(let (($generated@@354 ($generated@@323 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@322 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@321 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@320 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@324 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@324 (type $generated@@359))))
(let (($generated@@361 ($generated@@323 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@322 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@321 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@153 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@151 $generated@@363 ($generated@@184 $generated@@364)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 Int) ($generated@@370 Int) ($generated@@371 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@366) $generated@@64) (= (type $generated@@367) $generated@@134)) (= (type $generated@@368) ($generated@@135 $generated@@136))) (= (type $generated@@371) $generated@@136)) (or ($generated@@150 $generated@@366 $generated@@368 $generated@@369 $generated@@370 $generated@@371) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@368 ($generated@@152 $generated@@366)) ($generated@@153 $generated@@371 $generated@@366)) (and (and (<= ($generated@@154 0) $generated@@369) (<= $generated@@369 $generated@@370)) (<= $generated@@370 ($generated@@155 $generated@@368))))))) true)
 :pattern ( ($generated@@132 $generated@@366 $generated@@367 $generated@@368 $generated@@369 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@373) $generated@@64)) (= (type $generated@@374) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@136) ($generated@@0 ($generated@@81 $generated@@372 $generated@@375))) ($generated@@270 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@81 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@74 $generated@@372 ($generated@@254 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@76 $generated@@136 $generated@@4)) (= (type $generated@@377) $generated@@64)) (= (type $generated@@378) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@136) ($generated@@0 ($generated@@81 $generated@@376 $generated@@379))) ($generated@@270 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@74 $generated@@376 ($generated@@259 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= ($generated ($generated@@81 ($generated@@297 $generated@@381) $generated@@380)) 0))
 :pattern ( (let (($generated@@381 (type $generated@@380)))
($generated@@81 ($generated@@297 $generated@@381) $generated@@380)))
)))
(assert  (and (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@382 $generated@@385)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@382 $generated@@385))
)) (forall (($generated@@386 T@T) ($generated@@387 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@383 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@306 (type $generated@@388))))
(let (($generated@@390 ($generated@@305 (type $generated@@388))))
(= (type ($generated@@384 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@384 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@392) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392)))) (= ($generated@@81 ($generated@@384 $generated@@391) ($generated@@178 ($generated@@383 $generated@@171 $generated@@392))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@391) $generated@@392))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@136 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@324 (type $generated@@396))))
(let (($generated@@398 ($generated@@323 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@76 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@400) $generated@@136)) (= ($generated@@0 ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400)))) (= ($generated@@81 ($generated@@394 $generated@@399) ($generated@@178 ($generated@@383 $generated@@171 $generated@@400))) ($generated@@179 ($generated@@383 $generated@@171 $generated@@400))))))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@305 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@304 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@323 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@322 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))) (and ($generated@@270 ($generated@@81 ($generated@@384 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@270 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@64)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) $generated@@64)) (= (type $generated@@425) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))) (and ($generated@@270 ($generated@@81 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@270 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@74 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 Int) ($generated@@431 Int) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) $generated@@64) (= (type $generated@@428) $generated@@134)) (= (type $generated@@429) ($generated@@135 $generated@@136))) (= (type $generated@@432) $generated@@136)) (= ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432) ($generated@@132 $generated@@427 $generated@@428 $generated@@429 $generated@@430 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@132 $generated@@427 ($generated@@149 $generated@@428) $generated@@429 $generated@@430 $generated@@431 $generated@@432))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 Int) ($generated@@437 Int) ($generated@@438 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@134)) (= (type $generated@@435) ($generated@@135 $generated@@136))) (= (type $generated@@438) $generated@@136)) (or ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (and (not (= 0 $generated@@148)) (and (and ($generated@@151 $generated@@435 ($generated@@152 $generated@@433)) ($generated@@153 $generated@@438 $generated@@433)) (and (and (<= ($generated@@154 0) ($generated@@154 $generated@@436)) (<= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) (<= ($generated@@154 $generated@@437) ($generated@@155 ($generated@@265 $generated@@435)))))))) (and (=> (not (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437))) ($generated@@150 $generated@@433 ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438))) (= ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)) (ite (= ($generated@@154 $generated@@436) ($generated@@154 $generated@@437)) 0 (+ ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 (- $generated@@437 1)) ($generated@@265 $generated@@438)) (ite (= ($generated@@156 ($generated@@265 $generated@@435) ($generated@@154 (- $generated@@437 1))) ($generated@@265 $generated@@438)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@132 $generated@@433 ($generated@@149 $generated@@434) ($generated@@265 $generated@@435) ($generated@@154 $generated@@436) ($generated@@154 $generated@@437) ($generated@@265 $generated@@438)))
))))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@324 (type $generated@@441))))
(let (($generated@@443 ($generated@@323 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@322 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@321 $generated@@443 $generated@@442)) (= ($generated@@320 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@320 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@324 (type $generated@@444))))
(let (($generated@@446 ($generated@@323 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@322 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@321 $generated@@446 $generated@@445)) (= ($generated@@356 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@356 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@324 (type $generated@@447))))
(let (($generated@@449 ($generated@@323 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@322 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@321 $generated@@449 $generated@@448)) (= ($generated@@393 $generated@@447) ($generated@@439 $generated@@136))))))
 :pattern ( ($generated@@393 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@306 (type $generated@@450))))
(let (($generated@@452 ($generated@@305 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@304 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@303 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@136) (= (type $generated@@454) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@450) ($generated@@291 ($generated@@245 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@382 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@324 (type $generated@@455))))
(let (($generated@@457 ($generated@@323 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@322 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@321 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@136) (= (type $generated@@459) $generated@@136)) ($generated@@0 ($generated@@81 ($generated@@393 $generated@@455) ($generated@@291 ($generated@@245 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@393 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@136) ($generated@@153 $generated@@460 $generated@@46)) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@460)) $generated@@460) ($generated@@151 ($generated@@383 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@153 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@136) ($generated@@153 $generated@@461 $generated@@47)) (and (= ($generated@@291 ($generated@@383 $generated@@3 $generated@@461)) $generated@@461) ($generated@@151 ($generated@@383 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@153 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@136) ($generated@@153 $generated@@462 $generated@@44)) (and (= ($generated@@291 ($generated@@383 $generated@@4 $generated@@462)) $generated@@462) ($generated@@151 ($generated@@383 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@153 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 21))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@136) ($generated@@153 $generated@@464 $generated@@45)) (and (= ($generated@@291 ($generated@@383 $generated@@463 $generated@@464)) $generated@@464) ($generated@@151 ($generated@@383 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@153 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@153 ($generated@@291 $generated@@465) $generated@@466) ($generated@@151 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@153 ($generated@@291 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@296 $generated@@467))))
 :pattern ( ($generated@@296 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@138 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@135 $generated@@470)) (<= 0 ($generated@@155 $generated@@469))))
 :pattern ( ($generated@@155 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@411 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@411 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@411 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@411 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@411 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@419 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@419 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@419 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@419 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@419 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@136) (= (type $generated@@492) $generated@@136)) (= ($generated@@276 ($generated@@245 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@170 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@170 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@170 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@170 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@136) (= (type $generated@@502) $generated@@136)) (= ($generated@@178 ($generated@@245 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@245 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@136) (= (type $generated@@504) $generated@@136)) (= ($generated@@179 ($generated@@245 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@245 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@135 $generated@@136)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@155 $generated@@505))) ($generated@@270 ($generated@@156 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@156 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@74 $generated@@505 ($generated@@152 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@509 ($generated@@75 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@75 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@254 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@254 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@514)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@259 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@259 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@518)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@184 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@184 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@184 $generated@@522)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@152 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@152 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@152 $generated@@526)) $generated@@57))
 :pattern ( ($generated@@152 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
(= ($generated@@383 $generated@@528 ($generated@@291 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@291 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))) (and ($generated@@153 ($generated@@81 ($generated@@384 $generated@@529) $generated@@532) $generated@@531) ($generated@@153 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@151 $generated@@529 ($generated@@411 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) (= ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@136) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))) (and ($generated@@153 ($generated@@81 ($generated@@394 $generated@@533) $generated@@536) $generated@@535) ($generated@@153 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@533) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@151 $generated@@533 ($generated@@419 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@136)) (< ($generated@@537 $generated@@539) ($generated@@538 ($generated@@245 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@245 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@136) (= (type $generated@@542) $generated@@136)) (< ($generated@@537 $generated@@542) ($generated@@538 ($generated@@245 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@245 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545))) (and (= ($generated@@291 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543)) $generated@@543) ($generated@@151 ($generated@@383 ($generated@@304 $generated@@136 $generated@@136) $generated@@543) ($generated@@411 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@153 $generated@@543 ($generated@@411 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@64)) ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548))) (and (= ($generated@@291 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546)) $generated@@546) ($generated@@151 ($generated@@383 ($generated@@322 $generated@@136 $generated@@136) $generated@@546) ($generated@@419 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@153 $generated@@546 ($generated@@419 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@136)) ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550))) (and (= ($generated@@291 ($generated@@383 $generated@@171 $generated@@551)) $generated@@551) ($generated@@151 ($generated@@383 $generated@@171 $generated@@551) ($generated@@170 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@153 $generated@@551 ($generated@@170 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@81 ($generated@@439 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (and (= ($generated@@72 ($generated@@170 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@170 $generated@@556 $generated@@557)) $generated@@63)))
 :pattern ( ($generated@@170 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@171) (= ($generated@@537 ($generated@@291 $generated@@558)) ($generated@@538 $generated@@558)))
 :pattern ( ($generated@@537 ($generated@@291 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@136) ($generated@@153 $generated@@559 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@383 $generated@@2 $generated@@559)) $generated@@559) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@153 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) ($generated@@153 $generated@@560 ($generated@@254 $generated@@561))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@560) ($generated@@254 $generated@@561))))
 :pattern ( ($generated@@153 $generated@@560 ($generated@@254 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@64)) ($generated@@153 $generated@@562 ($generated@@259 $generated@@563))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562)) $generated@@562) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@4) $generated@@562) ($generated@@259 $generated@@563))))
 :pattern ( ($generated@@153 $generated@@562 ($generated@@259 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) ($generated@@153 $generated@@564 ($generated@@184 $generated@@565))) (and (= ($generated@@291 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564)) $generated@@564) ($generated@@151 ($generated@@383 ($generated@@76 $generated@@136 $generated@@2) $generated@@564) ($generated@@184 $generated@@565))))
 :pattern ( ($generated@@153 $generated@@564 ($generated@@184 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@64)) ($generated@@153 $generated@@566 ($generated@@152 $generated@@567))) (and (= ($generated@@291 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566)) $generated@@566) ($generated@@151 ($generated@@383 ($generated@@135 $generated@@136) $generated@@566) ($generated@@152 $generated@@567))))
 :pattern ( ($generated@@153 $generated@@566 ($generated@@152 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@136 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@136) (< 0 ($generated ($generated@@81 $generated@@568 $generated@@571)))) ($generated@@270 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@81 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@184 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@171) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@574) (and ($generated@@169 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@170 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@270 ($generated@@178 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@171) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@269 $generated@@578) (and ($generated@@169 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@74 $generated@@576 ($generated@@170 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@270 ($generated@@179 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@136)) (= ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)) ($generated@@265 ($generated@@245 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@245 ($generated@@265 $generated@@580) ($generated@@265 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))) ($generated@@265 ($generated@@291 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@154 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@291 ($generated@@265 $generated@@583)) ($generated@@265 ($generated@@291 $generated@@583)))
 :pattern ( ($generated@@291 ($generated@@265 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@138 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@135 $generated@@585)) (= ($generated@@155 $generated@@584) 0)) (= $generated@@584 ($generated@@282 $generated@@585))))
 :pattern ( ($generated@@155 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@296 $generated@@586) ($generated ($generated@@81 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@296 ($generated@@82 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@2)) ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@3)) ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@4)) ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@463)) ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@74 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@136)) ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@135 $generated@@136)) (= (type $generated@@601) $generated@@64)) (= ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@155 $generated@@600))) ($generated@@153 ($generated@@156 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@156 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@151 $generated@@600 ($generated@@152 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@135 $generated@@136)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@155 $generated@@604))) (< ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@538 ($generated@@383 $generated@@171 ($generated@@156 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@304 $generated@@136 $generated@@136)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608))) (and (and ($generated@@151 ($generated@@302 $generated@@606) ($generated@@254 $generated@@607)) ($generated@@151 ($generated@@345 $generated@@606) ($generated@@254 $generated@@608))) ($generated@@151 ($generated@@382 $generated@@606) ($generated@@254 ($generated@@170 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@151 $generated@@606 ($generated@@411 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@322 $generated@@136 $generated@@136)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611))) (and (and ($generated@@151 ($generated@@320 $generated@@609) ($generated@@259 $generated@@610)) ($generated@@151 ($generated@@356 $generated@@609) ($generated@@259 $generated@@611))) ($generated@@151 ($generated@@393 $generated@@609) ($generated@@259 ($generated@@170 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@151 $generated@@609 ($generated@@419 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@151 $generated@@612 $generated@@46))
 :pattern ( ($generated@@151 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@151 $generated@@613 $generated@@47))
 :pattern ( ($generated@@151 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@151 $generated@@614 $generated@@44))
 :pattern ( ($generated@@151 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@463) ($generated@@151 $generated@@615 $generated@@45))
 :pattern ( ($generated@@151 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@136) ($generated@@151 $generated@@616 $generated@@48))
 :pattern ( ($generated@@151 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@617) ($generated@@191 $generated@@77 $generated@@4)) (= (type $generated@@618) $generated@@77)) (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@622) $generated@@64)) (= (type $generated@@623) ($generated@@135 $generated@@136))) (= (type $generated@@626) $generated@@136)) (= (type $generated@@627) $generated@@136)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@628  (=> (= $generated@@617 ($generated@@190 $generated@@618 $generated@@619 $generated@@60 false)) (=> (and (and (and ($generated@@269 $generated@@620) ($generated@@621 $generated@@620)) (= $generated@@619 $generated@@620)) (and (and (forall (($generated@@629 T@U) ($generated@@630 Int) ($generated@@631 Int) ) (!  (=> (= (type $generated@@629) ($generated@@135 $generated@@136)) (=> (and (and ($generated@@151 $generated@@629 ($generated@@152 $generated@@622)) (and (and (<= ($generated@@154 0) $generated@@630) (<= $generated@@630 $generated@@631)) (<= $generated@@631 ($generated@@155 $generated@@629)))) (or (< ($generated@@603 $generated@@629) ($generated@@603 $generated@@623)) (and (= ($generated@@603 $generated@@629) ($generated@@603 $generated@@623)) (or (and (<= 0 $generated@@630) (< $generated@@630 $generated@@624)) (and (= $generated@@630 $generated@@624) (and (<= 0 $generated@@631) (< $generated@@631 $generated@@625))))))) (=> (not (= $generated@@626 $generated@@627)) (<= (+ ($generated@@132 $generated@@622 ($generated@@149 $generated@@137) $generated@@629 $generated@@630 $generated@@631 $generated@@626) ($generated@@132 $generated@@622 ($generated@@149 $generated@@137) $generated@@629 $generated@@630 $generated@@631 $generated@@627)) (- $generated@@631 $generated@@630)))))
 :no-pattern (type $generated@@629)
 :no-pattern ($generated $generated@@629)
 :no-pattern ($generated@@0 $generated@@629)
)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@626 $generated@@627)))) (<= (+ ($generated@@132 $generated@@622 ($generated@@149 ($generated@@149 $generated@@137)) $generated@@623 $generated@@624 $generated@@625 $generated@@626) ($generated@@132 $generated@@622 ($generated@@149 ($generated@@149 $generated@@137)) $generated@@623 $generated@@624 $generated@@625 $generated@@627)) (- $generated@@625 $generated@@624))))))
(let (($generated@@632  (=> (and ($generated@@269 $generated@@619) ($generated@@621 $generated@@619)) (=> (and (and ($generated@@151 $generated@@623 ($generated@@152 $generated@@622)) ($generated@@74 $generated@@623 ($generated@@152 $generated@@622) $generated@@619)) (and ($generated@@153 $generated@@626 $generated@@622) ($generated@@270 $generated@@626 $generated@@622 $generated@@619))) (=> (and (and (and ($generated@@153 $generated@@627 $generated@@622) ($generated@@270 $generated@@627 $generated@@622 $generated@@619)) (= 1 $generated@@148)) (and (and (<= ($generated@@154 0) $generated@@624) (<= $generated@@624 $generated@@625)) (and (<= $generated@@625 ($generated@@155 $generated@@623)) (= (ControlFlow 0 3) 2)))) $generated@@628)))))
$generated@@632)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@168) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 ($generated@@87 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ($generated@@179 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@88)) (= (type $generated@@176) ($generated@@74 $generated@@75))) (= (type $generated@@179) $generated@@75)) (or ($generated@@82 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@179) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@176 ($generated@@78 $generated@@174)) ($generated@@79 $generated@@179 $generated@@174)) (and (and (<= ($generated@@80 0) $generated@@177) (<= $generated@@177 $generated@@178)) (<= $generated@@178 ($generated@@81 $generated@@176))))))) (and (=> (not (= $generated@@177 $generated@@178)) ($generated@@82 $generated@@174 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179)) (= ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179) (ite (= $generated@@177 $generated@@178) 0 (+ ($generated@@84 $generated@@174 $generated@@175 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179) (ite (= ($generated@@170 $generated@@176 (- $generated@@178 1)) $generated@@179) 1 0))))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@77 $generated@@180 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@180 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@64) (= (type $generated@@187) $generated@@64)) (= (type $generated@@188) $generated@@183)) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@75)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@200) $generated@@64)) ($generated@@77 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@77 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 18)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@103 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@103) (= (type $generated@@251) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@103)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@183)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@75)) (= (type $generated@@263) $generated@@75)) (= ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261))  (and ($generated@@79 $generated@@262 $generated@@260) ($generated@@79 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@183) (= (type $generated@@265) $generated@@183)) (= ($generated@@189 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@189 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@75) ($generated@@0 ($generated@@107 $generated@@268 $generated@@270))) ($generated@@79 $generated@@270 $generated@@269))
 :pattern ( ($generated@@107 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@75) ($generated@@0 ($generated@@107 $generated@@273 $generated@@275))) ($generated@@79 $generated@@275 $generated@@274))
 :pattern ( ($generated@@107 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@75)) (= (type $generated@@287) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@281 $generated@@287)) (= ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@183) (= ($generated@@181 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@183) ($generated@@181 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@75) (= (type $generated@@293) $generated@@75)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@181 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@74 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@81 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@74 $generated@@75))) (= (type $generated@@302) $generated@@75)) (or ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@299 ($generated@@78 $generated@@297)) ($generated@@79 $generated@@302 $generated@@297)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@300)) (<= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) (<= ($generated@@80 $generated@@301) ($generated@@81 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302)) (= ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (ite (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301)) 0 (+ ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@170 ($generated@@277 $generated@@299) ($generated@@80 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@74 $generated@@75))) (= (type $generated@@307) $generated@@75)) (or ($generated@@76 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@304 ($generated@@78 $generated@@303)) ($generated@@79 $generated@@307 $generated@@303)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@305)) (<= ($generated@@80 $generated@@305) ($generated@@80 $generated@@306))) (<= ($generated@@80 $generated@@306) ($generated@@81 ($generated@@277 $generated@@304)))))))) (and ($generated@@82 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (= ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) ($generated@@0 ($generated@@277 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@303 ($generated@@85 $generated@@86) ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))) (- $generated@@306 $generated@@305))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@75)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@100 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@314) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@315) $generated@@75)) (= (type $generated@@316) $generated@@64)) ($generated@@166 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@166 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@318) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@320) $generated@@64)) ($generated@@166 $generated@@317 $generated@@318)) ($generated@@100 $generated@@319 $generated@@320 $generated@@317)) ($generated@@100 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@166 $generated@@317 $generated@@318) ($generated@@100 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@197 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@197 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@282 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@282 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@464) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@465) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@463 $generated@@465))) (and ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))) ($generated@@166 $generated@@463 $generated@@465))
 :pattern ( ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@88)) (= (type $generated@@468) ($generated@@74 $generated@@75))) (= (type $generated@@471) $generated@@75)) (or ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@468 ($generated@@78 $generated@@466)) ($generated@@79 $generated@@471 $generated@@466)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@469)) (<= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) (<= ($generated@@80 $generated@@470) ($generated@@81 ($generated@@277 $generated@@468)))))))) (and (=> (not (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471))) (= ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (ite (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470)) 0 (+ ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471)) (ite (= ($generated@@170 ($generated@@277 $generated@@468) ($generated@@80 (- $generated@@470 1))) ($generated@@277 $generated@@471)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)))
))))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@102 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@345 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@345 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@381 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@381 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@349 (type $generated@@480))))
(let (($generated@@482 ($generated@@348 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@347 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@346 $generated@@482 $generated@@481)) (= ($generated@@423 $generated@@480) ($generated@@472 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@331 (type $generated@@483))))
(let (($generated@@485 ($generated@@330 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@329 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@328 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@75) (= (type $generated@@487) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@483) ($generated@@308 ($generated@@257 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@412 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@488) ($generated@@308 ($generated@@257 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@423 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) ($generated@@79 $generated@@493 $generated@@46)) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@493)) $generated@@493) ($generated@@77 ($generated@@413 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@47)) (and (= ($generated@@308 ($generated@@413 $generated@@3 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@75) ($generated@@79 $generated@@495 $generated@@44)) (and (= ($generated@@308 ($generated@@413 $generated@@4 $generated@@495)) $generated@@495) ($generated@@77 ($generated@@413 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) ($generated@@79 $generated@@497 $generated@@45)) (and (= ($generated@@308 ($generated@@413 $generated@@496 $generated@@497)) $generated@@497) ($generated@@77 ($generated@@413 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@79 ($generated@@308 $generated@@498) $generated@@499) ($generated@@77 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@79 ($generated@@308 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@105 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@102 $generated@@501 $generated@@2)) (<= 0 ($generated@@321 $generated@@500))))
 :pattern ( ($generated@@321 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@87 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@74 $generated@@503)) (<= 0 ($generated@@81 $generated@@502))))
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@441 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@441 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@441 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@449 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@449 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@449 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@288 ($generated@@257 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@75) (= (type $generated@@535) $generated@@75)) (= ($generated@@190 ($generated@@257 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@257 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@191 ($generated@@257 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@74 $generated@@75)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@81 $generated@@538))) ($generated@@282 ($generated@@170 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@170 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@101 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@101 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@266 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@98 ($generated@@266 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@98 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@98 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@78 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@78 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@413 $generated@@561 ($generated@@308 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@308 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@562) $generated@@565) $generated@@564) ($generated@@79 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@562) $generated@@565))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@566) $generated@@569) $generated@@568) ($generated@@79 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@566) $generated@@569))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@75) (= (type $generated@@573) $generated@@75)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@257 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@257 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578))) (and (= ($generated@@308 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576) ($generated@@441 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@75) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579)) $generated@@579) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579) ($generated@@449 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@64) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@75)) ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@308 ($generated@@413 $generated@@183 $generated@@584)) $generated@@584) ($generated@@77 ($generated@@413 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@107 ($generated@@472 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@107 ($generated@@472 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@98 ($generated@@182 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@182 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 Int) ) (! (= ($generated@@83 $generated@@591 $generated@@592) (* $generated@@591 $generated@@592))
 :pattern ( ($generated@@83 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@183) (= ($generated@@570 ($generated@@308 $generated@@593)) ($generated@@571 $generated@@593)))
 :pattern ( ($generated@@570 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) ($generated@@79 $generated@@594 ($generated@@101 0))) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@101 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@64)) ($generated@@79 $generated@@595 ($generated@@266 $generated@@596))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595) ($generated@@266 $generated@@596))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@266 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@75) (= (type $generated@@598) $generated@@64)) ($generated@@79 $generated@@597 ($generated@@271 $generated@@598))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597) ($generated@@271 $generated@@598))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@75) (= (type $generated@@600) $generated@@64)) ($generated@@79 $generated@@599 ($generated@@196 $generated@@600))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599)) $generated@@599) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599) ($generated@@196 $generated@@600))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@196 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@75) (= (type $generated@@602) $generated@@64)) ($generated@@79 $generated@@601 ($generated@@78 $generated@@602))) (and (= ($generated@@308 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601)) $generated@@601) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601) ($generated@@78 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@78 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@603 $generated@@606)))) ($generated@@282 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@107 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@183) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@609) (and ($generated@@181 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@183) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@613) (and ($generated@@181 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@75) (= (type $generated@@616) $generated@@75)) (= ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)) ($generated@@277 ($generated@@257 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))) ($generated@@277 ($generated@@308 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@308 ($generated@@277 $generated@@618)) ($generated@@277 ($generated@@308 $generated@@618)))
 :pattern ( ($generated@@308 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@87 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@74 $generated@@620)) (= ($generated@@81 $generated@@619) 0)) (= $generated@@619 ($generated@@294 $generated@@620))))
 :pattern ( ($generated@@81 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@102 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@321 $generated@@621) ($generated ($generated@@107 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) ($generated@@74 $generated@@75))) (= (type $generated@@629) $generated@@75)) (or ($generated@@76 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@626 ($generated@@78 $generated@@625)) ($generated@@79 $generated@@629 $generated@@625)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@627)) (<= ($generated@@80 $generated@@627) ($generated@@80 $generated@@628))) (<= ($generated@@80 $generated@@628) ($generated@@81 ($generated@@277 $generated@@626)))))))) (and ($generated@@82 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (= ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@625 ($generated@@85 $generated@@86) ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629)) (- $generated@@628 $generated@@627)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@631) $generated@@2)) ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@633) $generated@@3)) ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@635) $generated@@4)) ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@637) $generated@@496)) ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@639) $generated@@75)) ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@74 $generated@@75)) (= (type $generated@@641) $generated@@64)) (= ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@640))) ($generated@@79 ($generated@@170 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@170 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@81 $generated@@644))) (< ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@327 $generated@@646) ($generated@@266 $generated@@647)) ($generated@@77 ($generated@@370 $generated@@646) ($generated@@266 $generated@@648))) ($generated@@77 ($generated@@412 $generated@@646) ($generated@@266 ($generated@@182 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651))) (and (and ($generated@@77 ($generated@@345 $generated@@649) ($generated@@271 $generated@@650)) ($generated@@77 ($generated@@381 $generated@@649) ($generated@@271 $generated@@651))) ($generated@@77 ($generated@@423 $generated@@649) ($generated@@271 ($generated@@182 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@77 $generated@@652 $generated@@46))
 :pattern ( ($generated@@77 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@77 $generated@@653 $generated@@47))
 :pattern ( ($generated@@77 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@77 $generated@@654 $generated@@44))
 :pattern ( ($generated@@77 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@496) ($generated@@77 $generated@@655 $generated@@45))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@75) ($generated@@77 $generated@@656 $generated@@48))
 :pattern ( ($generated@@77 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@657) ($generated@@203 $generated@@103 $generated@@4)) (= (type $generated@@658) $generated@@103)) (= (type $generated@@659) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@660) ($generated@@74 $generated@@75))) (= (type $generated@@661) $generated@@64)) (= (type $generated@@664) $generated@@75)) (= (type $generated@@666) $generated@@75)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@667  (=> (= $generated@@657 ($generated@@202 $generated@@658 $generated@@659 $generated@@60 false)) (=> (and ($generated@@100 $generated@@660 ($generated@@78 $generated@@661) $generated@@659) (= $generated@@662 ($generated@@80 0))) (=> (and (and ($generated@@100 ($generated@@8 $generated@@662) $generated@@46 $generated@@659) (= $generated@@663 ($generated@@81 $generated@@660))) (and ($generated@@100 ($generated@@8 $generated@@663) $generated@@46 $generated@@659) ($generated@@282 $generated@@664 $generated@@661 $generated@@659))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@80 0) $generated@@662)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@662 $generated@@663)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@663 ($generated@@81 $generated@@660))))))))))
(let (($generated@@668  (=> (and ($generated@@281 $generated@@659) ($generated@@665 $generated@@659)) (=> (and (and (and ($generated@@77 $generated@@660 ($generated@@78 $generated@@661)) ($generated@@100 $generated@@660 ($generated@@78 $generated@@661) $generated@@659)) (and ($generated@@79 $generated@@664 $generated@@661) ($generated@@282 $generated@@664 $generated@@661 $generated@@659))) (and (and ($generated@@79 $generated@@666 $generated@@661) ($generated@@282 $generated@@666 $generated@@661 $generated@@659)) (and (= 2 $generated@@72) (= (ControlFlow 0 5) 2)))) $generated@@667))))
$generated@@668)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@168) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 ($generated@@87 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ($generated@@179 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@88)) (= (type $generated@@176) ($generated@@74 $generated@@75))) (= (type $generated@@179) $generated@@75)) (or ($generated@@82 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@179) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@176 ($generated@@78 $generated@@174)) ($generated@@79 $generated@@179 $generated@@174)) (and (and (<= ($generated@@80 0) $generated@@177) (<= $generated@@177 $generated@@178)) (<= $generated@@178 ($generated@@81 $generated@@176))))))) (and (=> (not (= $generated@@177 $generated@@178)) ($generated@@82 $generated@@174 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179)) (= ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179) (ite (= $generated@@177 $generated@@178) 0 (+ ($generated@@84 $generated@@174 $generated@@175 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179) (ite (= ($generated@@170 $generated@@176 (- $generated@@178 1)) $generated@@179) 1 0))))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@77 $generated@@180 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@180 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@64) (= (type $generated@@187) $generated@@64)) (= (type $generated@@188) $generated@@183)) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@75)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@200) $generated@@64)) ($generated@@77 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@77 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 18)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@103 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@103) (= (type $generated@@251) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@103)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@183)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@75)) (= (type $generated@@263) $generated@@75)) (= ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261))  (and ($generated@@79 $generated@@262 $generated@@260) ($generated@@79 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@183) (= (type $generated@@265) $generated@@183)) (= ($generated@@189 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@189 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@75) ($generated@@0 ($generated@@107 $generated@@268 $generated@@270))) ($generated@@79 $generated@@270 $generated@@269))
 :pattern ( ($generated@@107 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@75) ($generated@@0 ($generated@@107 $generated@@273 $generated@@275))) ($generated@@79 $generated@@275 $generated@@274))
 :pattern ( ($generated@@107 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@75)) (= (type $generated@@287) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@281 $generated@@287)) (= ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@183) (= ($generated@@181 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@183) ($generated@@181 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@75) (= (type $generated@@293) $generated@@75)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@181 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@74 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@81 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@74 $generated@@75))) (= (type $generated@@302) $generated@@75)) (or ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@299 ($generated@@78 $generated@@297)) ($generated@@79 $generated@@302 $generated@@297)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@300)) (<= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) (<= ($generated@@80 $generated@@301) ($generated@@81 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302)) (= ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (ite (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301)) 0 (+ ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@170 ($generated@@277 $generated@@299) ($generated@@80 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@74 $generated@@75))) (= (type $generated@@307) $generated@@75)) (or ($generated@@76 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@304 ($generated@@78 $generated@@303)) ($generated@@79 $generated@@307 $generated@@303)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@305)) (<= ($generated@@80 $generated@@305) ($generated@@80 $generated@@306))) (<= ($generated@@80 $generated@@306) ($generated@@81 ($generated@@277 $generated@@304)))))))) (and ($generated@@82 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (= ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) ($generated@@0 ($generated@@277 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@303 ($generated@@85 $generated@@86) ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))) (- $generated@@306 $generated@@305))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@75)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@100 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@314) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@315) $generated@@75)) (= (type $generated@@316) $generated@@64)) ($generated@@166 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@166 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@318) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@320) $generated@@64)) ($generated@@166 $generated@@317 $generated@@318)) ($generated@@100 $generated@@319 $generated@@320 $generated@@317)) ($generated@@100 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@166 $generated@@317 $generated@@318) ($generated@@100 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@197 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@197 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@282 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@282 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@464) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@465) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@463 $generated@@465))) (and ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))) ($generated@@166 $generated@@463 $generated@@465))
 :pattern ( ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@88)) (= (type $generated@@468) ($generated@@74 $generated@@75))) (= (type $generated@@471) $generated@@75)) (or ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@468 ($generated@@78 $generated@@466)) ($generated@@79 $generated@@471 $generated@@466)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@469)) (<= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) (<= ($generated@@80 $generated@@470) ($generated@@81 ($generated@@277 $generated@@468)))))))) (and (=> (not (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471))) (= ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (ite (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470)) 0 (+ ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471)) (ite (= ($generated@@170 ($generated@@277 $generated@@468) ($generated@@80 (- $generated@@470 1))) ($generated@@277 $generated@@471)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)))
))))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@102 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@345 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@345 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@381 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@381 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@349 (type $generated@@480))))
(let (($generated@@482 ($generated@@348 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@347 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@346 $generated@@482 $generated@@481)) (= ($generated@@423 $generated@@480) ($generated@@472 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@331 (type $generated@@483))))
(let (($generated@@485 ($generated@@330 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@329 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@328 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@75) (= (type $generated@@487) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@483) ($generated@@308 ($generated@@257 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@412 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@488) ($generated@@308 ($generated@@257 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@423 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) ($generated@@79 $generated@@493 $generated@@46)) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@493)) $generated@@493) ($generated@@77 ($generated@@413 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@47)) (and (= ($generated@@308 ($generated@@413 $generated@@3 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@75) ($generated@@79 $generated@@495 $generated@@44)) (and (= ($generated@@308 ($generated@@413 $generated@@4 $generated@@495)) $generated@@495) ($generated@@77 ($generated@@413 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) ($generated@@79 $generated@@497 $generated@@45)) (and (= ($generated@@308 ($generated@@413 $generated@@496 $generated@@497)) $generated@@497) ($generated@@77 ($generated@@413 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@79 ($generated@@308 $generated@@498) $generated@@499) ($generated@@77 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@79 ($generated@@308 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@105 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@102 $generated@@501 $generated@@2)) (<= 0 ($generated@@321 $generated@@500))))
 :pattern ( ($generated@@321 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@87 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@74 $generated@@503)) (<= 0 ($generated@@81 $generated@@502))))
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@441 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@441 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@441 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@449 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@449 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@449 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@288 ($generated@@257 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@75) (= (type $generated@@535) $generated@@75)) (= ($generated@@190 ($generated@@257 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@257 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@191 ($generated@@257 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@74 $generated@@75)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@81 $generated@@538))) ($generated@@282 ($generated@@170 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@170 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@101 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@101 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@266 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@98 ($generated@@266 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@98 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@98 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@78 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@78 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@413 $generated@@561 ($generated@@308 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@308 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@562) $generated@@565) $generated@@564) ($generated@@79 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@562) $generated@@565))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@566) $generated@@569) $generated@@568) ($generated@@79 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@566) $generated@@569))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@75) (= (type $generated@@573) $generated@@75)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@257 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@257 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578))) (and (= ($generated@@308 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576) ($generated@@441 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@75) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579)) $generated@@579) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579) ($generated@@449 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@64) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@75)) ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@308 ($generated@@413 $generated@@183 $generated@@584)) $generated@@584) ($generated@@77 ($generated@@413 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@107 ($generated@@472 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@107 ($generated@@472 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@98 ($generated@@182 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@182 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 Int) ) (! (= ($generated@@83 $generated@@591 $generated@@592) (* $generated@@591 $generated@@592))
 :pattern ( ($generated@@83 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@183) (= ($generated@@570 ($generated@@308 $generated@@593)) ($generated@@571 $generated@@593)))
 :pattern ( ($generated@@570 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) ($generated@@79 $generated@@594 ($generated@@101 0))) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@101 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@64)) ($generated@@79 $generated@@595 ($generated@@266 $generated@@596))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595) ($generated@@266 $generated@@596))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@266 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@75) (= (type $generated@@598) $generated@@64)) ($generated@@79 $generated@@597 ($generated@@271 $generated@@598))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597) ($generated@@271 $generated@@598))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@75) (= (type $generated@@600) $generated@@64)) ($generated@@79 $generated@@599 ($generated@@196 $generated@@600))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599)) $generated@@599) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599) ($generated@@196 $generated@@600))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@196 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@75) (= (type $generated@@602) $generated@@64)) ($generated@@79 $generated@@601 ($generated@@78 $generated@@602))) (and (= ($generated@@308 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601)) $generated@@601) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601) ($generated@@78 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@78 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@603 $generated@@606)))) ($generated@@282 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@107 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@183) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@609) (and ($generated@@181 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@183) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@613) (and ($generated@@181 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@75) (= (type $generated@@616) $generated@@75)) (= ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)) ($generated@@277 ($generated@@257 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))) ($generated@@277 ($generated@@308 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@308 ($generated@@277 $generated@@618)) ($generated@@277 ($generated@@308 $generated@@618)))
 :pattern ( ($generated@@308 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@87 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@74 $generated@@620)) (= ($generated@@81 $generated@@619) 0)) (= $generated@@619 ($generated@@294 $generated@@620))))
 :pattern ( ($generated@@81 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@102 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@321 $generated@@621) ($generated ($generated@@107 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) ($generated@@74 $generated@@75))) (= (type $generated@@629) $generated@@75)) (or ($generated@@76 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@626 ($generated@@78 $generated@@625)) ($generated@@79 $generated@@629 $generated@@625)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@627)) (<= ($generated@@80 $generated@@627) ($generated@@80 $generated@@628))) (<= ($generated@@80 $generated@@628) ($generated@@81 ($generated@@277 $generated@@626)))))))) (and ($generated@@82 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (= ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@625 ($generated@@85 $generated@@86) ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629)) (- $generated@@628 $generated@@627)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@631) $generated@@2)) ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@633) $generated@@3)) ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@635) $generated@@4)) ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@637) $generated@@496)) ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@639) $generated@@75)) ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@74 $generated@@75)) (= (type $generated@@641) $generated@@64)) (= ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@640))) ($generated@@79 ($generated@@170 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@170 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@81 $generated@@644))) (< ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@327 $generated@@646) ($generated@@266 $generated@@647)) ($generated@@77 ($generated@@370 $generated@@646) ($generated@@266 $generated@@648))) ($generated@@77 ($generated@@412 $generated@@646) ($generated@@266 ($generated@@182 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651))) (and (and ($generated@@77 ($generated@@345 $generated@@649) ($generated@@271 $generated@@650)) ($generated@@77 ($generated@@381 $generated@@649) ($generated@@271 $generated@@651))) ($generated@@77 ($generated@@423 $generated@@649) ($generated@@271 ($generated@@182 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@77 $generated@@652 $generated@@46))
 :pattern ( ($generated@@77 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@77 $generated@@653 $generated@@47))
 :pattern ( ($generated@@77 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@77 $generated@@654 $generated@@44))
 :pattern ( ($generated@@77 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@496) ($generated@@77 $generated@@655 $generated@@45))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@75) ($generated@@77 $generated@@656 $generated@@48))
 :pattern ( ($generated@@77 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Bool)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Bool)
(declare-fun $generated@@702 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@659) ($generated@@74 $generated@@75)) (= (type $generated@@660) $generated@@64)) (= (type $generated@@661) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@665) $generated@@75)) (= (type $generated@@663) $generated@@75)) (= (type $generated@@691) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@676) $generated@@75)) (= (type $generated@@679) $generated@@75)) (= (type $generated@@672) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@667) $generated@@75)) (= (type $generated@@669) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@697) $generated@@103)) (= (type $generated@@698) ($generated@@203 $generated@@103 $generated@@4))) (= (type $generated@@700) $generated@@75)) (= (type $generated@@702) $generated@@75)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 182) (let (($generated@@703  (=> (and (and (and (and (<= ($generated@@80 0) $generated@@657) (< $generated@@657 $generated@@658)) (<= $generated@@658 ($generated@@81 $generated@@659))) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@662 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@662) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 156) (- 0 166)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 156) (- 0 165)) (<= $generated@@657 $generated@@662)) (and (=> (= (ControlFlow 0 156) (- 0 164)) (<= $generated@@662 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 156) (- 0 163)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 156) (- 0 162)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 156) (- 0 161)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 156) (- 0 160)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (and (=> (= (ControlFlow 0 156) (- 0 159)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 156) (- 0 158)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 156) (- 0 157)) (<= $generated@@657 $generated@@658)) (=> (= (ControlFlow 0 156) (- 0 155)) (<= $generated@@658 ($generated@@81 $generated@@659))))))))))))))))))))))))
(let (($generated@@704  (=> (and (not (and (<= ($generated@@80 0) $generated@@657) (< $generated@@657 $generated@@658))) (= (ControlFlow 0 168) 156)) $generated@@703)))
(let (($generated@@705  (=> (and (and (<= ($generated@@80 0) $generated@@657) (< $generated@@657 $generated@@658)) (= (ControlFlow 0 167) 156)) $generated@@703)))
(let (($generated@@706  (=> (< $generated@@657 ($generated@@80 0)) (and (=> (= (ControlFlow 0 170) 167) $generated@@705) (=> (= (ControlFlow 0 170) 168) $generated@@704)))))
(let (($generated@@707  (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 169) 167) $generated@@705) (=> (= (ControlFlow 0 169) 168) $generated@@704)))))
(let (($generated@@708  (=> (not $generated@@666) (and (=> (= (ControlFlow 0 171) 169) $generated@@707) (=> (= (ControlFlow 0 171) 170) $generated@@706)))))
(let (($generated@@709  (=> (= (ControlFlow 0 147) (- 0 146)) (= $generated@@667 $generated@@663))))
(let (($generated@@710  (=> (and (<= ($generated@@81 $generated@@659) $generated@@658) (= $generated@@668 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 148) (- 0 153)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 148) (- 0 152)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 148) (- 0 151)) (<= $generated@@657 $generated@@668)) (=> (<= $generated@@657 $generated@@668) (and (=> (= (ControlFlow 0 148) (- 0 150)) (<= $generated@@668 ($generated@@81 $generated@@659))) (=> (<= $generated@@668 ($generated@@81 $generated@@659)) (=> (and (and (and ($generated@@281 $generated@@669) ($generated@@670 $generated@@669)) (=> (not (= $generated@@663 $generated@@665)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@668 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@668 $generated@@665)))) (and (=> (not (= $generated@@663 $generated@@665)) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@668 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@668 $generated@@665)) (- $generated@@668 $generated@@657))) (= $generated@@661 $generated@@669))) (and (=> (= (ControlFlow 0 148) (- 0 149)) $generated@@664) (=> $generated@@664 (=> (and (= $generated@@667 $generated@@665) (= (ControlFlow 0 148) 147)) $generated@@709)))))))))))))))
(let (($generated@@711  (=> (=> true (>= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657))) (and (=> (= (ControlFlow 0 135) (- 0 139)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 135) (- 0 138)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 135) (- 0 137)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 135) (- 0 136)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 135) (- 0 134))) (= (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657))))))))))))))
(let (($generated@@712  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@658) (<= $generated@@658 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (=> (= (ControlFlow 0 129) (- 0 133)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 129) (- 0 132)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 129) (- 0 131)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 129) (- 0 130)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 129) (- 0 128))) (= (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)) (>= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657)))))))))))))))
(let (($generated@@713  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@658) (<= $generated@@658 ($generated@@81 $generated@@659))) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (=> (= (ControlFlow 0 123) (- 0 127)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 123) (- 0 126)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 123) (- 0 125)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 123) (- 0 124)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 123) (- 0 122))) (= ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)))))))))))))))
(let (($generated@@714  (and (=> (= (ControlFlow 0 117) (- 0 121)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 117) (- 0 120)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 117) (- 0 119)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 117) (- 0 118)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 117) (- 0 116))) (= ($generated@@0 ($generated@@277 ($generated@@11 true))) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665))))))))))))
(let (($generated@@715 true))
(let (($generated@@716  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@658) (<= $generated@@658 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (and (and (and (=> (= (ControlFlow 0 140) 115) $generated@@715) (=> (= (ControlFlow 0 140) 117) $generated@@714)) (=> (= (ControlFlow 0 140) 123) $generated@@713)) (=> (= (ControlFlow 0 140) 129) $generated@@712)) (=> (= (ControlFlow 0 140) 135) $generated@@711))))))
(let (($generated@@717  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)))) (and (=> (= (ControlFlow 0 99) (- 0 104)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 99) (- 0 103)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 99) (- 0 102)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 99) (- 0 101)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and (=> (= (ControlFlow 0 99) (- 0 100)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))) (=> (and (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 99) (- 0 98))) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)))))))))))))))
(let (($generated@@718  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (=> (= (ControlFlow 0 93) (- 0 97)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 93) (- 0 96)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 93) (- 0 95)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 93) (- 0 94)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (= (ControlFlow 0 93) (- 0 92))) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)))))))))))))))
(let (($generated@@719  (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 89) (- 0 91)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 89) (- 0 90)) (<= $generated@@657 $generated@@671)) (=> (= (ControlFlow 0 89) (- 0 88)) (<= $generated@@671 ($generated@@81 $generated@@659))))))))
(let (($generated@@720  (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 81) (- 0 85)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 81) (- 0 84)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 81) (- 0 83)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (and (=> (= (ControlFlow 0 81) (- 0 82)) (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657))) (=> (and (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 81) (- 0 80))) (>= (- (- ($generated@@81 $generated@@659) $generated@@657) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663))) (- (- ($generated@@81 $generated@@659) $generated@@657) (- $generated@@671 $generated@@657))))))))))))
(let (($generated@@721  (=> (and (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 105) 81)) $generated@@720)))
(let (($generated@@722  (=> (= $generated@@665 $generated@@663) (and (and (and (=> (= (ControlFlow 0 106) 89) $generated@@719) (=> (= (ControlFlow 0 106) 93) $generated@@718)) (=> (= (ControlFlow 0 106) 99) $generated@@717)) (=> (= (ControlFlow 0 106) 105) $generated@@721)))))
(let (($generated@@723  (=> (and (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 86) 81)) $generated@@720)))
(let (($generated@@724  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)))) (and (=> (= (ControlFlow 0 74) (- 0 79)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 74) (- 0 78)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 74) (- 0 77)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 74) (- 0 76)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and (=> (= (ControlFlow 0 74) (- 0 75)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))) (=> (and (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 74) (- 0 73))) (= ($generated@@83 ($generated@@80 2) (- (- $generated@@671 $generated@@657) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665))) (- $generated@@671 $generated@@657)))))))))))))))
(let (($generated@@725  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (=> (= (ControlFlow 0 64) (- 0 72)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 64) (- 0 71)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 64) (- 0 70)) (<= $generated@@657 $generated@@671)) (=> (<= $generated@@657 $generated@@671) (and (=> (= (ControlFlow 0 64) (- 0 69)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (<= $generated@@671 ($generated@@81 $generated@@659)) (=> (and (and (and ($generated@@281 $generated@@672) ($generated@@670 $generated@@672)) (=> (not (= $generated@@665 $generated@@663)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (=> (not (= $generated@@665 $generated@@663)) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657))) (= $generated@@661 $generated@@672))) (and (=> (= (ControlFlow 0 64) (- 0 68)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@672) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@672)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@672) ($generated@@282 $generated@@665 $generated@@660 $generated@@672))) (and (=> (= (ControlFlow 0 64) (- 0 67)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 64) (- 0 66)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 64) (- 0 65)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (= (ControlFlow 0 64) (- 0 63))) (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) (- (- $generated@@671 $generated@@657) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)))))))))))))))))))))))))
(let (($generated@@726  (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 60) (- 0 62)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 60) (- 0 61)) (<= $generated@@657 $generated@@671)) (=> (= (ControlFlow 0 60) (- 0 59)) (<= $generated@@671 ($generated@@81 $generated@@659))))))))
(let (($generated@@727  (=> (not (= $generated@@665 $generated@@663)) (and (and (and (=> (= (ControlFlow 0 87) 60) $generated@@726) (=> (= (ControlFlow 0 87) 64) $generated@@725)) (=> (= (ControlFlow 0 87) 74) $generated@@724)) (=> (= (ControlFlow 0 87) 86) $generated@@723)))))
(let (($generated@@728  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (=> (= (ControlFlow 0 107) (- 0 108)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 107) 106) $generated@@722) (=> (= (ControlFlow 0 107) 87) $generated@@727))))))))
(let (($generated@@729  (and (=> (= (ControlFlow 0 39) (- 0 46)) (or (<= 0 $generated@@673) (= (- ($generated@@81 $generated@@659) $generated@@674) $generated@@673))) (=> (or (<= 0 $generated@@673) (= (- ($generated@@81 $generated@@659) $generated@@674) $generated@@673)) (and (=> (= (ControlFlow 0 39) (- 0 45)) (< (- ($generated@@81 $generated@@659) $generated@@674) $generated@@673)) (=> (< (- ($generated@@81 $generated@@659) $generated@@674) $generated@@673) (=> (=> (and (and (<= ($generated@@80 0) $generated@@675) (< $generated@@675 $generated@@674)) (<= $generated@@674 ($generated@@81 $generated@@659))) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663) (=> ($generated@@73 $generated@@660 $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676) (=> ($generated@@73 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676) ($generated@@82 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676)))))) (and (=> (= (ControlFlow 0 39) (- 0 44)) (=> $generated@@666 (<= ($generated@@80 0) $generated@@675))) (=> (=> $generated@@666 (<= ($generated@@80 0) $generated@@675)) (and (=> (= (ControlFlow 0 39) (- 0 43)) (=> $generated@@666 (< $generated@@675 $generated@@674))) (=> (=> $generated@@666 (< $generated@@675 $generated@@674)) (and (=> (= (ControlFlow 0 39) (- 0 42)) (=> $generated@@666 (<= $generated@@674 ($generated@@81 $generated@@659)))) (=> (=> $generated@@666 (<= $generated@@674 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 39) (- 0 41)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@675)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@675 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@675))))) (and (=> (= (ControlFlow 0 39) (- 0 40)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@675 $generated@@674 $generated@@676)) (- $generated@@674 $generated@@675)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@675 $generated@@674 $generated@@676) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@675 $generated@@674 $generated@@676)) (- $generated@@674 $generated@@675))))) (=> (= (ControlFlow 0 39) (- 0 38)) (=> $generated@@666 (= $generated@@677 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@675 $generated@@674 $generated@@676)))))))))))))))))))))
(let (($generated@@730  (=> (and (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@671)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@678 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@678) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 49) (- 0 58)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 49) (- 0 57)) (<= $generated@@671 $generated@@678)) (and (=> (= (ControlFlow 0 49) (- 0 56)) (<= $generated@@678 ($generated@@81 $generated@@659))) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 49) (- 0 55)) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@671))))) (=> ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (and (=> (= (ControlFlow 0 49) (- 0 54)) (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@81 $generated@@659)))) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@81 $generated@@659))) (=> (and (and (and (= $generated@@679 ($generated@@170 $generated@@659 $generated@@671)) (= $generated@@680 (+ $generated@@671 1))) (and (= $generated@@681 ($generated@@80 1)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@682 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@682) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 49) (- 0 53)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 49) (- 0 52)) (<= $generated@@671 $generated@@682)) (and (=> (= (ControlFlow 0 49) (- 0 51)) (<= $generated@@682 ($generated@@81 $generated@@659))) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 49) (- 0 50)) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@671))))) (=> (and ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (= $generated@@676 $generated@@679)) (=> (and (and (= $generated@@675 $generated@@671) (= $generated@@674 $generated@@680)) (and (= $generated@@677 $generated@@681) (= (ControlFlow 0 49) 39))) $generated@@729))))))))))))))))))))
(let (($generated@@731  (=> (> ($generated@@83 ($generated@@80 2) $generated@@683) (- (+ $generated@@658 1) $generated@@657)) (=> (and (= $generated@@684 (+ $generated@@658 1)) (= $generated@@676 $generated@@665)) (=> (and (and (= $generated@@675 $generated@@657) (= $generated@@674 $generated@@684)) (and (= $generated@@677 $generated@@683) (= (ControlFlow 0 48) 39))) $generated@@729)))))
(let (($generated@@732  (=> (and (and (and (= ($generated@@170 $generated@@659 $generated@@658) $generated@@665) (= $generated@@685 (+ $generated@@658 1))) (and (= $generated@@686 (+ $generated@@683 1)) (= $generated@@676 $generated@@665))) (and (and (= $generated@@675 $generated@@657) (= $generated@@674 $generated@@685)) (and (= $generated@@677 $generated@@686) (= (ControlFlow 0 47) 39)))) $generated@@729)))
(let (($generated@@733  (=> (= (ControlFlow 0 37) (- 0 36)) (= (- (- ($generated@@81 $generated@@659) $generated@@657) (- $generated@@671 $generated@@657)) (- ($generated@@81 $generated@@659) $generated@@671)))))
(let (($generated@@734  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@687 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@687) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@687)) (and (<= $generated@@687 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)))) (=> (and (and (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@671)) (and (<= $generated@@671 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@688 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@688) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))))) (and (=> (= (ControlFlow 0 28) (- 0 35)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 28) (- 0 34)) (<= $generated@@657 $generated@@688)) (and (=> (= (ControlFlow 0 28) (- 0 33)) (<= $generated@@688 ($generated@@81 $generated@@659))) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 28) (- 0 32)) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))))) (=> ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 28) (- 0 31)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 28) (- 0 30)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (= (ControlFlow 0 28) (- 0 27))) (> (- ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663))) (- (- ($generated@@81 $generated@@659) $generated@@657) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)))))))))))))))))))))
(let (($generated@@735  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@689 ($generated@@81 $generated@@659))) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@689) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@671) (<= $generated@@671 $generated@@689))) (and (and (<= $generated@@689 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (= $generated@@690 ($generated@@81 $generated@@659))))) (and (=> (= (ControlFlow 0 16) (- 0 26)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 16) (- 0 25)) (<= $generated@@657 $generated@@671)) (=> (<= $generated@@657 $generated@@671) (and (=> (= (ControlFlow 0 16) (- 0 24)) (<= $generated@@671 $generated@@690)) (=> (<= $generated@@671 $generated@@690) (and (=> (= (ControlFlow 0 16) (- 0 23)) (<= $generated@@690 ($generated@@81 $generated@@659))) (=> (<= $generated@@690 ($generated@@81 $generated@@659)) (=> (and ($generated@@281 $generated@@691) ($generated@@670 $generated@@691)) (=> (and (and (and (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 $generated@@690 $generated@@663)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@690 $generated@@663)) (= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 $generated@@690 $generated@@663)) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@690 $generated@@663))) (and (= $generated@@661 $generated@@691) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@691))) (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@691) (= $generated@@692 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@692) $generated@@46 $generated@@691) ($generated@@282 $generated@@663 $generated@@660 $generated@@691)))) (and (=> (= (ControlFlow 0 16) (- 0 22)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 16) (- 0 21)) (<= $generated@@657 $generated@@692)) (and (=> (= (ControlFlow 0 16) (- 0 20)) (<= $generated@@692 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@691) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@691)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@691) ($generated@@282 $generated@@663 $generated@@660 $generated@@691))) (and (=> (= (ControlFlow 0 16) (- 0 19)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 16) (- 0 18)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (=> (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (= (ControlFlow 0 16) (- 0 15))) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)))))))))))))))))))))))))))))
(let (($generated@@736  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@693 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@693) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (<= $generated@@671 $generated@@693)) (=> (= (ControlFlow 0 12) (- 0 11)) (<= $generated@@693 ($generated@@81 $generated@@659)))))))))
(let (($generated@@737  (=> (and (=> true (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657))) (= $generated@@671 (+ $generated@@658 1))) (and (=> (= (ControlFlow 0 109) (- 0 114)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 109) (- 0 113)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 109) (- 0 112)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 109) (- 0 111)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and (=> (= (ControlFlow 0 109) (- 0 110)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))) (=> (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (and (and (and (and (and (=> (= (ControlFlow 0 109) 12) $generated@@736) (=> (= (ControlFlow 0 109) 16) $generated@@735)) (=> (= (ControlFlow 0 109) 28) $generated@@734)) (=> (= (ControlFlow 0 109) 107) $generated@@728)) (=> (= (ControlFlow 0 109) 37) $generated@@733)) (=> (= (ControlFlow 0 109) 49) $generated@@730))))))))))))))
(let (($generated@@738  (and (=> (= (ControlFlow 0 6) (- 0 10)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 6) (- 0 5))) (= (<= ($generated@@83 ($generated@@80 2) $generated@@683) (- (+ $generated@@658 1) $generated@@657)) (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657)))))))))))))
(let (($generated@@739  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@0 ($generated@@277 ($generated@@11 true))) (<= ($generated@@83 ($generated@@80 2) $generated@@683) (- (+ $generated@@658 1) $generated@@657))))))
(let (($generated@@740 true))
(let (($generated@@741  (=> (>= (- (+ $generated@@658 1) $generated@@657) ($generated@@83 ($generated@@80 2) $generated@@683)) (and (and (and (and (=> (= (ControlFlow 0 141) 2) $generated@@740) (=> (= (ControlFlow 0 141) 4) $generated@@739)) (=> (= (ControlFlow 0 141) 6) $generated@@738)) (=> (= (ControlFlow 0 141) 140) $generated@@716)) (=> (= (ControlFlow 0 141) 109) $generated@@737)))))
(let (($generated@@742  (=> (not (= ($generated@@170 $generated@@659 $generated@@658) $generated@@665)) (and (=> (= (ControlFlow 0 142) 48) $generated@@731) (=> (= (ControlFlow 0 142) 141) $generated@@741)))))
(let (($generated@@743  (=> (and (< $generated@@658 ($generated@@81 $generated@@659)) (= $generated@@673 (- ($generated@@81 $generated@@659) $generated@@658))) (and (=> (= (ControlFlow 0 143) (- 0 145)) (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@81 $generated@@659)))) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 143) (- 0 144)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 143) 47) $generated@@732) (=> (= (ControlFlow 0 143) 142) $generated@@742)))))))))
(let (($generated@@744  (=> $generated@@666 (and (=> (= (ControlFlow 0 154) 148) $generated@@710) (=> (= (ControlFlow 0 154) 143) $generated@@743)))))
(let (($generated@@745  (and (=> (= (ControlFlow 0 172) 171) $generated@@708) (=> (= (ControlFlow 0 172) 154) $generated@@744))))
(let (($generated@@746 true))
(let (($generated@@747  (=> (=> $generated@@664 (and ($generated@@79 $generated@@665 $generated@@660) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (=> (and (and (and (and (and (and (and (and (and (and $generated@@664 (not false)) (<= 0 $generated@@657)) (<= 1 $generated@@658)) (<= 1 $generated@@683)) (= $generated@@694 0)) (= $generated@@695 1)) (= $generated@@696 1)) true) (and (=> $generated@@666 true) (=> $generated@@666 (<= ($generated@@80 0) $generated@@657)))) (and (and (and (and (=> $generated@@666 (< $generated@@657 $generated@@658)) (=> $generated@@666 (<= $generated@@658 ($generated@@81 $generated@@659)))) (and (=> $generated@@666 ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))))))) (and (and (=> $generated@@666 (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))))) (=> $generated@@666 ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665))) (and (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657))))) (=> $generated@@666 (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (and ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)))))))) (and (and (and (=> $generated@@666 ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (=> $generated@@666 (= $generated@@683 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (forall (($generated@@748 T@U) ) (!  (=> (= (type $generated@@748) $generated@@103) (=> (and (not (= $generated@@748 $generated@@697)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@661 $generated@@748) $generated@@60))) (= ($generated@@107 $generated@@661 $generated@@748) ($generated@@107 $generated@@661 $generated@@748))))
 :pattern ( ($generated@@107 $generated@@661 $generated@@748))
)) ($generated@@166 $generated@@661 $generated@@661))) (and (and (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (! (let (($generated@@751 ($generated@@67 (type $generated@@750))))
 (=> (and (and (= (type $generated@@749) $generated@@103) (= (type $generated@@750) ($generated@@66 $generated@@751))) (and (not (= $generated@@749 $generated@@697)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@661 $generated@@749) $generated@@60)))) (or (= ($generated@@109 ($generated@@107 $generated@@661 $generated@@749) $generated@@750) ($generated@@109 ($generated@@107 $generated@@661 $generated@@749) $generated@@750)) ($generated@@0 ($generated@@201 $generated@@698 $generated@@749 $generated@@750)))))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@661 $generated@@749) $generated@@750))
)) (=> true $generated@@664)) (and (<= (- ($generated@@81 $generated@@659) $generated@@658) $generated@@699) (=> (= (- ($generated@@81 $generated@@659) $generated@@658) $generated@@699) true)))))) (and (=> (= (ControlFlow 0 173) 1) $generated@@746) (=> (= (ControlFlow 0 173) 172) $generated@@745))))))
(let (($generated@@752  (=> (= $generated@@698 ($generated@@202 $generated@@697 $generated@@661 $generated@@60 false)) (and (=> (= (ControlFlow 0 174) (- 0 181)) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@81 $generated@@659)))) (=> (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@81 $generated@@659))) (=> (= $generated@@700 ($generated@@170 $generated@@659 ($generated@@80 0))) (=> (and (and (= $generated@@694 ($generated@@80 0)) (= $generated@@695 ($generated@@80 1))) (and (= $generated@@696 ($generated@@80 1)) (= $generated@@699 (- ($generated@@81 $generated@@659) $generated@@695)))) (and (=> (= (ControlFlow 0 174) (- 0 180)) (=> $generated@@666 (<= ($generated@@80 0) $generated@@694))) (=> (=> $generated@@666 (<= ($generated@@80 0) $generated@@694)) (and (=> (= (ControlFlow 0 174) (- 0 179)) (=> $generated@@666 (< $generated@@694 $generated@@695))) (=> (=> $generated@@666 (< $generated@@694 $generated@@695)) (and (=> (= (ControlFlow 0 174) (- 0 178)) (=> $generated@@666 (<= $generated@@695 ($generated@@81 $generated@@659)))) (=> (=> $generated@@666 (<= $generated@@695 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 174) (- 0 177)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@694 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@694 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@694 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@694)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@694 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@694 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@694 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@694))))) (and (=> (= (ControlFlow 0 174) (- 0 176)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@694 $generated@@695 $generated@@700) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@694 $generated@@695 $generated@@700) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@694 $generated@@695 $generated@@700)) (- $generated@@695 $generated@@694)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@694 $generated@@695 $generated@@700) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@694 $generated@@695 $generated@@700) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@694 $generated@@695 $generated@@700)) (- $generated@@695 $generated@@694))))) (and (=> (= (ControlFlow 0 174) (- 0 175)) (=> $generated@@666 (= $generated@@696 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@694 $generated@@695 $generated@@700)))) (=> (=> $generated@@666 (= $generated@@696 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@694 $generated@@695 $generated@@700))) (=> (= (ControlFlow 0 174) 173) $generated@@747))))))))))))))))))))
(let (($generated@@753  (=> (and (and ($generated@@281 $generated@@661) ($generated@@670 $generated@@661)) (and ($generated@@77 $generated@@659 ($generated@@78 $generated@@660)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (=> (and (and (and ($generated@@79 $generated@@663 $generated@@660) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (=> $generated@@701 (and ($generated@@79 $generated@@702 $generated@@660) ($generated@@282 $generated@@702 $generated@@660 $generated@@661))) (= 2 $generated@@72))) (and (and ($generated@@76 $generated@@660 $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@73 $generated@@660 $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) 0)))) (= (ControlFlow 0 182) 174))) $generated@@752))))
$generated@@753))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@168) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 ($generated@@87 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ($generated@@179 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@88)) (= (type $generated@@176) ($generated@@74 $generated@@75))) (= (type $generated@@179) $generated@@75)) (or ($generated@@82 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@179) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@176 ($generated@@78 $generated@@174)) ($generated@@79 $generated@@179 $generated@@174)) (and (and (<= ($generated@@80 0) $generated@@177) (<= $generated@@177 $generated@@178)) (<= $generated@@178 ($generated@@81 $generated@@176))))))) (and (=> (not (= $generated@@177 $generated@@178)) ($generated@@82 $generated@@174 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179)) (= ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179) (ite (= $generated@@177 $generated@@178) 0 (+ ($generated@@84 $generated@@174 $generated@@175 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179) (ite (= ($generated@@170 $generated@@176 (- $generated@@178 1)) $generated@@179) 1 0))))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@77 $generated@@180 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@180 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@64) (= (type $generated@@187) $generated@@64)) (= (type $generated@@188) $generated@@183)) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@75)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@200) $generated@@64)) ($generated@@77 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@77 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 18)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@103 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@103) (= (type $generated@@251) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@103)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@183)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@75)) (= (type $generated@@263) $generated@@75)) (= ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261))  (and ($generated@@79 $generated@@262 $generated@@260) ($generated@@79 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@183) (= (type $generated@@265) $generated@@183)) (= ($generated@@189 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@189 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@75) ($generated@@0 ($generated@@107 $generated@@268 $generated@@270))) ($generated@@79 $generated@@270 $generated@@269))
 :pattern ( ($generated@@107 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@75) ($generated@@0 ($generated@@107 $generated@@273 $generated@@275))) ($generated@@79 $generated@@275 $generated@@274))
 :pattern ( ($generated@@107 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@75)) (= (type $generated@@287) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@281 $generated@@287)) (= ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@183) (= ($generated@@181 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@183) ($generated@@181 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@75) (= (type $generated@@293) $generated@@75)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@181 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@74 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@81 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@74 $generated@@75))) (= (type $generated@@302) $generated@@75)) (or ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@299 ($generated@@78 $generated@@297)) ($generated@@79 $generated@@302 $generated@@297)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@300)) (<= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) (<= ($generated@@80 $generated@@301) ($generated@@81 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302)) (= ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (ite (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301)) 0 (+ ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@170 ($generated@@277 $generated@@299) ($generated@@80 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@74 $generated@@75))) (= (type $generated@@307) $generated@@75)) (or ($generated@@76 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@304 ($generated@@78 $generated@@303)) ($generated@@79 $generated@@307 $generated@@303)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@305)) (<= ($generated@@80 $generated@@305) ($generated@@80 $generated@@306))) (<= ($generated@@80 $generated@@306) ($generated@@81 ($generated@@277 $generated@@304)))))))) (and ($generated@@82 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (= ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) ($generated@@0 ($generated@@277 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@303 ($generated@@85 $generated@@86) ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))) (- $generated@@306 $generated@@305))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@75)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@100 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@314) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@315) $generated@@75)) (= (type $generated@@316) $generated@@64)) ($generated@@166 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@166 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@318) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@320) $generated@@64)) ($generated@@166 $generated@@317 $generated@@318)) ($generated@@100 $generated@@319 $generated@@320 $generated@@317)) ($generated@@100 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@166 $generated@@317 $generated@@318) ($generated@@100 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@197 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@197 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@282 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@282 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@464) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@465) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@463 $generated@@465))) (and ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))) ($generated@@166 $generated@@463 $generated@@465))
 :pattern ( ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@88)) (= (type $generated@@468) ($generated@@74 $generated@@75))) (= (type $generated@@471) $generated@@75)) (or ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@468 ($generated@@78 $generated@@466)) ($generated@@79 $generated@@471 $generated@@466)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@469)) (<= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) (<= ($generated@@80 $generated@@470) ($generated@@81 ($generated@@277 $generated@@468)))))))) (and (=> (not (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471))) (= ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (ite (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470)) 0 (+ ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471)) (ite (= ($generated@@170 ($generated@@277 $generated@@468) ($generated@@80 (- $generated@@470 1))) ($generated@@277 $generated@@471)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)))
))))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@102 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@345 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@345 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@381 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@381 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@349 (type $generated@@480))))
(let (($generated@@482 ($generated@@348 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@347 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@346 $generated@@482 $generated@@481)) (= ($generated@@423 $generated@@480) ($generated@@472 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@331 (type $generated@@483))))
(let (($generated@@485 ($generated@@330 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@329 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@328 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@75) (= (type $generated@@487) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@483) ($generated@@308 ($generated@@257 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@412 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@488) ($generated@@308 ($generated@@257 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@423 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) ($generated@@79 $generated@@493 $generated@@46)) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@493)) $generated@@493) ($generated@@77 ($generated@@413 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@47)) (and (= ($generated@@308 ($generated@@413 $generated@@3 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@75) ($generated@@79 $generated@@495 $generated@@44)) (and (= ($generated@@308 ($generated@@413 $generated@@4 $generated@@495)) $generated@@495) ($generated@@77 ($generated@@413 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) ($generated@@79 $generated@@497 $generated@@45)) (and (= ($generated@@308 ($generated@@413 $generated@@496 $generated@@497)) $generated@@497) ($generated@@77 ($generated@@413 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@79 ($generated@@308 $generated@@498) $generated@@499) ($generated@@77 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@79 ($generated@@308 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@105 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@102 $generated@@501 $generated@@2)) (<= 0 ($generated@@321 $generated@@500))))
 :pattern ( ($generated@@321 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@87 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@74 $generated@@503)) (<= 0 ($generated@@81 $generated@@502))))
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@441 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@441 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@441 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@449 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@449 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@449 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@288 ($generated@@257 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@75) (= (type $generated@@535) $generated@@75)) (= ($generated@@190 ($generated@@257 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@257 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@191 ($generated@@257 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@74 $generated@@75)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@81 $generated@@538))) ($generated@@282 ($generated@@170 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@170 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@101 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@101 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@266 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@98 ($generated@@266 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@98 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@98 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@78 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@78 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@413 $generated@@561 ($generated@@308 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@308 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@562) $generated@@565) $generated@@564) ($generated@@79 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@562) $generated@@565))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@566) $generated@@569) $generated@@568) ($generated@@79 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@566) $generated@@569))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@75) (= (type $generated@@573) $generated@@75)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@257 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@257 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578))) (and (= ($generated@@308 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576) ($generated@@441 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@75) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579)) $generated@@579) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579) ($generated@@449 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@64) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@75)) ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@308 ($generated@@413 $generated@@183 $generated@@584)) $generated@@584) ($generated@@77 ($generated@@413 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@107 ($generated@@472 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@107 ($generated@@472 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@98 ($generated@@182 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@182 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 Int) ) (! (= ($generated@@83 $generated@@591 $generated@@592) (* $generated@@591 $generated@@592))
 :pattern ( ($generated@@83 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@183) (= ($generated@@570 ($generated@@308 $generated@@593)) ($generated@@571 $generated@@593)))
 :pattern ( ($generated@@570 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) ($generated@@79 $generated@@594 ($generated@@101 0))) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@101 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@64)) ($generated@@79 $generated@@595 ($generated@@266 $generated@@596))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595) ($generated@@266 $generated@@596))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@266 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@75) (= (type $generated@@598) $generated@@64)) ($generated@@79 $generated@@597 ($generated@@271 $generated@@598))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597) ($generated@@271 $generated@@598))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@75) (= (type $generated@@600) $generated@@64)) ($generated@@79 $generated@@599 ($generated@@196 $generated@@600))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599)) $generated@@599) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599) ($generated@@196 $generated@@600))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@196 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@75) (= (type $generated@@602) $generated@@64)) ($generated@@79 $generated@@601 ($generated@@78 $generated@@602))) (and (= ($generated@@308 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601)) $generated@@601) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601) ($generated@@78 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@78 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@603 $generated@@606)))) ($generated@@282 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@107 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@183) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@609) (and ($generated@@181 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@183) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@613) (and ($generated@@181 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@75) (= (type $generated@@616) $generated@@75)) (= ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)) ($generated@@277 ($generated@@257 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))) ($generated@@277 ($generated@@308 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@308 ($generated@@277 $generated@@618)) ($generated@@277 ($generated@@308 $generated@@618)))
 :pattern ( ($generated@@308 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@87 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@74 $generated@@620)) (= ($generated@@81 $generated@@619) 0)) (= $generated@@619 ($generated@@294 $generated@@620))))
 :pattern ( ($generated@@81 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@102 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@321 $generated@@621) ($generated ($generated@@107 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) ($generated@@74 $generated@@75))) (= (type $generated@@629) $generated@@75)) (or ($generated@@76 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@626 ($generated@@78 $generated@@625)) ($generated@@79 $generated@@629 $generated@@625)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@627)) (<= ($generated@@80 $generated@@627) ($generated@@80 $generated@@628))) (<= ($generated@@80 $generated@@628) ($generated@@81 ($generated@@277 $generated@@626)))))))) (and ($generated@@82 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (= ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@625 ($generated@@85 $generated@@86) ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629)) (- $generated@@628 $generated@@627)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@631) $generated@@2)) ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@633) $generated@@3)) ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@635) $generated@@4)) ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@637) $generated@@496)) ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@639) $generated@@75)) ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@74 $generated@@75)) (= (type $generated@@641) $generated@@64)) (= ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@640))) ($generated@@79 ($generated@@170 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@170 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@81 $generated@@644))) (< ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@327 $generated@@646) ($generated@@266 $generated@@647)) ($generated@@77 ($generated@@370 $generated@@646) ($generated@@266 $generated@@648))) ($generated@@77 ($generated@@412 $generated@@646) ($generated@@266 ($generated@@182 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651))) (and (and ($generated@@77 ($generated@@345 $generated@@649) ($generated@@271 $generated@@650)) ($generated@@77 ($generated@@381 $generated@@649) ($generated@@271 $generated@@651))) ($generated@@77 ($generated@@423 $generated@@649) ($generated@@271 ($generated@@182 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@77 $generated@@652 $generated@@46))
 :pattern ( ($generated@@77 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@77 $generated@@653 $generated@@47))
 :pattern ( ($generated@@77 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@77 $generated@@654 $generated@@44))
 :pattern ( ($generated@@77 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@496) ($generated@@77 $generated@@655 $generated@@45))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@75) ($generated@@77 $generated@@656 $generated@@48))
 :pattern ( ($generated@@77 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@657) ($generated@@203 $generated@@103 $generated@@4)) (= (type $generated@@658) $generated@@103)) (= (type $generated@@659) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@660) ($generated@@74 $generated@@75))) (= (type $generated@@661) $generated@@64)) (= (type $generated@@664) $generated@@75)) (= (type $generated@@666) $generated@@75)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@667  (=> (= $generated@@657 ($generated@@202 $generated@@658 $generated@@659 $generated@@60 false)) (=> (and ($generated@@100 $generated@@660 ($generated@@78 $generated@@661) $generated@@659) (= $generated@@662 ($generated@@80 0))) (=> (and (and ($generated@@100 ($generated@@8 $generated@@662) $generated@@46 $generated@@659) (= $generated@@663 ($generated@@81 $generated@@660))) (and ($generated@@100 ($generated@@8 $generated@@663) $generated@@46 $generated@@659) ($generated@@282 $generated@@664 $generated@@661 $generated@@659))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@80 0) $generated@@662)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@662 $generated@@663)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@663 ($generated@@81 $generated@@660))))))))))
(let (($generated@@668  (=> (and ($generated@@281 $generated@@659) ($generated@@665 $generated@@659)) (=> (and (and (and ($generated@@77 $generated@@660 ($generated@@78 $generated@@661)) ($generated@@100 $generated@@660 ($generated@@78 $generated@@661) $generated@@659)) (and ($generated@@79 $generated@@664 $generated@@661) ($generated@@282 $generated@@664 $generated@@661 $generated@@659))) (and (and ($generated@@79 $generated@@666 $generated@@661) ($generated@@282 $generated@@666 $generated@@661 $generated@@659)) (and (= 2 $generated@@72) (= (ControlFlow 0 5) 2)))) $generated@@667))))
$generated@@668)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U Int Int T@U) Bool)
(declare-fun $generated@@83 (Int Int) Int)
(declare-fun $generated@@84 (T@U T@U T@U Int Int T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@166 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U Int) T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U) T@U)
(declare-fun $generated@@183 () T@T)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@T T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@T) T@U)
(declare-fun $generated@@496 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (forall (($generated@@89 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@89)) 11)) (forall (($generated@@90 T@T) ) (! (= ($generated@@87 ($generated@@74 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@74 $generated@@90))
))) (= ($generated@@1 $generated@@75) 12)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@64)
 :pattern ( ($generated@@78 $generated@@91))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@85 $generated@@92)) $generated@@88)
 :pattern ( ($generated@@85 $generated@@92))
))) (= (type $generated@@86) $generated@@88)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (=> (and (and (and (= (type $generated@@93) $generated@@64) (= (type $generated@@94) ($generated@@74 $generated@@75))) (= (type $generated@@97) $generated@@75)) (or ($generated@@76 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@94 ($generated@@78 $generated@@93)) ($generated@@79 $generated@@97 $generated@@93)) (and (and (<= ($generated@@80 0) $generated@@95) (<= $generated@@95 $generated@@96)) (<= $generated@@96 ($generated@@81 $generated@@94))))))) (and ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (= ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@93 ($generated@@85 $generated@@86) $generated@@94 $generated@@95 $generated@@96 $generated@@97)) (- $generated@@96 $generated@@95)))))
 :pattern ( ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@96 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@65)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 14)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 15)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@67 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 16)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@67 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@158 $generated@@159)) $generated@@88)
 :pattern ( ($generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@64) (= (type $generated@@161) $generated@@88)) (= (type $generated@@162) ($generated@@74 $generated@@75))) (= (type $generated@@165) $generated@@75)) (= ($generated@@84 $generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165) ($generated@@84 $generated@@160 $generated@@86 $generated@@162 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@160 ($generated@@158 $generated@@161) $generated@@162 $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@168) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@166 $generated@@167 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@167 $generated@@169) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@168 $generated@@169) $generated@@60))
)))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 ($generated@@87 (type $generated@@171))))
(= (type ($generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ($generated@@179 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@174) $generated@@64) (= (type $generated@@175) $generated@@88)) (= (type $generated@@176) ($generated@@74 $generated@@75))) (= (type $generated@@179) $generated@@75)) (or ($generated@@82 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@179) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@176 ($generated@@78 $generated@@174)) ($generated@@79 $generated@@179 $generated@@174)) (and (and (<= ($generated@@80 0) $generated@@177) (<= $generated@@177 $generated@@178)) (<= $generated@@178 ($generated@@81 $generated@@176))))))) (and (=> (not (= $generated@@177 $generated@@178)) ($generated@@82 $generated@@174 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179)) (= ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179) (ite (= $generated@@177 $generated@@178) 0 (+ ($generated@@84 $generated@@174 $generated@@175 $generated@@176 $generated@@177 (- $generated@@178 1) $generated@@179) (ite (= ($generated@@170 $generated@@176 (- $generated@@178 1)) $generated@@179) 1 0))))))
 :pattern ( ($generated@@84 $generated@@174 ($generated@@85 $generated@@175) $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@2) ($generated@@77 $generated@@180 ($generated@@101 0)))
 :pattern ( ($generated@@77 $generated@@180 ($generated@@101 0)))
)))
(assert  (and (= ($generated@@1 $generated@@183) 17) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@182 $generated@@184 $generated@@185)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@64) (= (type $generated@@187) $generated@@64)) (= (type $generated@@188) $generated@@183)) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187))) ($generated@@181 $generated@@188))
 :pattern ( ($generated@@181 $generated@@188) ($generated@@77 $generated@@188 ($generated@@182 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@75)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@75)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@183) (= (type $generated@@195) $generated@@183)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@64)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@200) $generated@@64)) ($generated@@77 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@77 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 18)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@103 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@67 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@103) (= (type $generated@@251) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@252) ($generated@@66 $generated@@4))) (= (type $generated@@254) $generated@@103)) (= (type $generated@@255) ($generated@@66 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259)) $generated@@183)
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@75)) (= (type $generated@@263) $generated@@75)) (= ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261))  (and ($generated@@79 $generated@@262 $generated@@260) ($generated@@79 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@77 ($generated@@257 $generated@@262 $generated@@263) ($generated@@182 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@183) (= (type $generated@@265) $generated@@183)) (= ($generated@@189 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@189 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@64)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@269) $generated@@64)) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@75) ($generated@@0 ($generated@@107 $generated@@268 $generated@@270))) ($generated@@79 $generated@@270 $generated@@269))
 :pattern ( ($generated@@107 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@64)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@274) $generated@@64)) (= ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@75) ($generated@@0 ($generated@@107 $generated@@273 $generated@@275))) ($generated@@79 $generated@@275 $generated@@274))
 :pattern ( ($generated@@107 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@80 $generated@@276) $generated@@276)
 :pattern ( ($generated@@80 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) $generated@@64)) (= (type $generated@@285) $generated@@75)) (= (type $generated@@286) $generated@@75)) (= (type $generated@@287) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@281 $generated@@287)) (= ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@100 ($generated@@257 $generated@@285 $generated@@286) ($generated@@182 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@68)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@183) (= ($generated@@181 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@181 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@183) ($generated@@181 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@75) (= (type $generated@@293) $generated@@75)) (= $generated@@291 ($generated@@257 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@181 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@74 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@81 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 Int) ($generated@@301 Int) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) $generated@@88)) (= (type $generated@@299) ($generated@@74 $generated@@75))) (= (type $generated@@302) $generated@@75)) (or ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@299 ($generated@@78 $generated@@297)) ($generated@@79 $generated@@302 $generated@@297)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@300)) (<= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) (<= ($generated@@80 $generated@@301) ($generated@@81 ($generated@@277 $generated@@299)))))))) (and (=> (not (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301))) ($generated@@82 $generated@@297 ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302)) (= ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302) (ite (= ($generated@@80 $generated@@300) ($generated@@80 $generated@@301)) 0 (+ ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 (- $generated@@301 1)) $generated@@302) (ite (= ($generated@@170 ($generated@@277 $generated@@299) ($generated@@80 (- $generated@@301 1))) $generated@@302) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@297 ($generated@@85 $generated@@298) ($generated@@277 $generated@@299) ($generated@@80 $generated@@300) ($generated@@80 $generated@@301) $generated@@302))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 Int) ($generated@@306 Int) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@303) $generated@@64) (= (type $generated@@304) ($generated@@74 $generated@@75))) (= (type $generated@@307) $generated@@75)) (or ($generated@@76 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@304 ($generated@@78 $generated@@303)) ($generated@@79 $generated@@307 $generated@@303)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@305)) (<= ($generated@@80 $generated@@305) ($generated@@80 $generated@@306))) (<= ($generated@@80 $generated@@306) ($generated@@81 ($generated@@277 $generated@@304)))))))) (and ($generated@@82 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) (= ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)) ($generated@@0 ($generated@@277 ($generated@@11 (> ($generated@@83 ($generated@@80 2) ($generated@@80 ($generated@@84 $generated@@303 ($generated@@85 $generated@@86) ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))) (- $generated@@306 $generated@@305))))))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@303 ($generated@@277 $generated@@304) ($generated@@80 $generated@@305) ($generated@@80 $generated@@306) ($generated@@277 $generated@@307)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@75)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@64) (= (type $generated@@312) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@100 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@282 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@314) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@315) $generated@@75)) (= (type $generated@@316) $generated@@64)) ($generated@@166 $generated@@313 $generated@@314)) ($generated@@282 $generated@@315 $generated@@316 $generated@@313)) ($generated@@282 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@166 $generated@@313 $generated@@314) ($generated@@282 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@318) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@320) $generated@@64)) ($generated@@166 $generated@@317 $generated@@318)) ($generated@@100 $generated@@319 $generated@@320 $generated@@317)) ($generated@@100 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@166 $generated@@317 $generated@@318) ($generated@@100 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@102 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@105 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@102 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@107 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@102 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@107 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 20)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@102 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@107 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@105 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@102 $generated@@364 $generated@@2)) (= ($generated@@197 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@107 $generated@@363 $generated@@365))) (<= ($generated ($generated@@107 $generated@@363 $generated@@365)) ($generated@@321 $generated@@363))))
 :pattern ( ($generated@@107 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@197 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@102 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@107 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@102 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@107 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@389) $generated@@64)) (= ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@388 $generated@@390)))) ($generated@@79 $generated@@390 $generated@@389))
 :pattern ( ($generated@@107 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@196 $generated@@389)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 Int) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@391) $generated@@64) (= (type $generated@@392) $generated@@88)) (= (type $generated@@393) ($generated@@74 $generated@@75))) (= (type $generated@@396) $generated@@75)) (or ($generated@@82 $generated@@391 $generated@@393 $generated@@394 $generated@@395 $generated@@396) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@393 ($generated@@78 $generated@@391)) ($generated@@79 $generated@@396 $generated@@391)) (and (and (<= ($generated@@80 0) $generated@@394) (<= $generated@@394 $generated@@395)) (<= $generated@@395 ($generated@@81 $generated@@393))))))) true)
 :pattern ( ($generated@@84 $generated@@391 $generated@@392 $generated@@393 $generated@@394 $generated@@395 $generated@@396))
))))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 Int) ($generated@@400 Int) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) $generated@@64) (= (type $generated@@398) ($generated@@74 $generated@@75))) (= (type $generated@@401) $generated@@75)) (or ($generated@@76 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@398 ($generated@@78 $generated@@397)) ($generated@@79 $generated@@401 $generated@@397)) (and (and (<= ($generated@@80 0) $generated@@399) (<= $generated@@399 $generated@@400)) (<= $generated@@400 ($generated@@81 $generated@@398))))))) true)
 :pattern ( ($generated@@73 $generated@@397 $generated@@398 $generated@@399 $generated@@400 $generated@@401))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@75) ($generated@@0 ($generated@@107 $generated@@402 $generated@@405))) ($generated@@282 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@107 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@100 $generated@@402 ($generated@@266 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@102 $generated@@75 $generated@@4)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@75) ($generated@@0 ($generated@@107 $generated@@406 $generated@@409))) ($generated@@282 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@107 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@100 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@107 ($generated@@322 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@107 ($generated@@322 $generated@@411) $generated@@410)))
)))
(assert  (and (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@412 $generated@@415)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@412 $generated@@415))
)) (forall (($generated@@416 T@T) ($generated@@417 T@U) ) (! (= (type ($generated@@413 $generated@@416 $generated@@417)) $generated@@416)
 :pattern ( ($generated@@413 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@331 (type $generated@@418))))
(let (($generated@@420 ($generated@@330 (type $generated@@418))))
(= (type ($generated@@414 $generated@@418)) ($generated@@102 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@414 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@422) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422)))) (= ($generated@@107 ($generated@@414 $generated@@421) ($generated@@190 ($generated@@413 $generated@@183 $generated@@422))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@422))))))
 :pattern ( ($generated@@107 ($generated@@412 $generated@@421) $generated@@422))
)))
(assert  (and (forall (($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@425)) ($generated@@102 $generated@@75 $generated@@4))
 :pattern ( ($generated@@423 $generated@@425))
)) (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@349 (type $generated@@426))))
(let (($generated@@428 ($generated@@348 (type $generated@@426))))
(= (type ($generated@@424 $generated@@426)) ($generated@@102 $generated@@428 $generated@@427))))
 :pattern ( ($generated@@424 $generated@@426))
))))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@430) $generated@@75)) (= ($generated@@0 ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))  (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430)))) (= ($generated@@107 ($generated@@424 $generated@@429) ($generated@@190 ($generated@@413 $generated@@183 $generated@@430))) ($generated@@191 ($generated@@413 $generated@@183 $generated@@430))))))
 :pattern ( ($generated@@107 ($generated@@423 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@330 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@329 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@107 ($generated@@370 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@107 ($generated@@327 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@431) $generated@@435))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@107 ($generated@@370 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@348 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@347 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@107 ($generated@@381 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@107 ($generated@@345 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@436) $generated@@440))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@107 ($generated@@381 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@445) $generated@@64)) (= (type $generated@@446) $generated@@64)) (= (type $generated@@447) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))) (and ($generated@@282 ($generated@@107 ($generated@@414 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@282 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@444) $generated@@448))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@100 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (= (type $generated@@452) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@453) $generated@@64)) (= (type $generated@@454) $generated@@64)) (= (type $generated@@455) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))) (and ($generated@@282 ($generated@@107 ($generated@@424 $generated@@452) $generated@@456) $generated@@454 $generated@@455) ($generated@@282 $generated@@456 $generated@@453 $generated@@455)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@452) $generated@@456))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@452) $generated@@456))
))))
 :pattern ( ($generated@@100 $generated@@452 ($generated@@449 $generated@@453 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 Int) ($generated@@461 Int) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@88)) (= (type $generated@@459) ($generated@@74 $generated@@75))) (= (type $generated@@462) $generated@@75)) (= ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462) ($generated@@84 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@84 $generated@@457 ($generated@@85 $generated@@458) $generated@@459 $generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@463) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@464) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@465) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@463 $generated@@465))) (and ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))) ($generated@@166 $generated@@463 $generated@@465))
 :pattern ( ($generated@@166 $generated@@463 $generated@@464) ($generated@@166 $generated@@464 $generated@@465))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 Int) ($generated@@470 Int) ($generated@@471 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@88)) (= (type $generated@@468) ($generated@@74 $generated@@75))) (= (type $generated@@471) $generated@@75)) (or ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (and (not (= 0 $generated@@72)) (and (and ($generated@@77 $generated@@468 ($generated@@78 $generated@@466)) ($generated@@79 $generated@@471 $generated@@466)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@469)) (<= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) (<= ($generated@@80 $generated@@470) ($generated@@81 ($generated@@277 $generated@@468)))))))) (and (=> (not (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470))) ($generated@@82 $generated@@466 ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471))) (= ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)) (ite (= ($generated@@80 $generated@@469) ($generated@@80 $generated@@470)) 0 (+ ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 (- $generated@@470 1)) ($generated@@277 $generated@@471)) (ite (= ($generated@@170 ($generated@@277 $generated@@468) ($generated@@80 (- $generated@@470 1))) ($generated@@277 $generated@@471)) 1 0))))))
 :weight 3
 :pattern ( ($generated@@84 $generated@@466 ($generated@@85 $generated@@467) ($generated@@277 $generated@@468) ($generated@@80 $generated@@469) ($generated@@80 $generated@@470) ($generated@@277 $generated@@471)))
))))
(assert (forall (($generated@@473 T@T) ) (! (= (type ($generated@@472 $generated@@473)) ($generated@@102 $generated@@473 $generated@@4))
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@349 (type $generated@@474))))
(let (($generated@@476 ($generated@@348 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@347 $generated@@476 $generated@@475)) (= (= $generated@@474 ($generated@@346 $generated@@476 $generated@@475)) (= ($generated@@345 $generated@@474) ($generated@@472 $generated@@476))))))
 :pattern ( ($generated@@345 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@349 (type $generated@@477))))
(let (($generated@@479 ($generated@@348 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@347 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@346 $generated@@479 $generated@@478)) (= ($generated@@381 $generated@@477) ($generated@@472 $generated@@478))))))
 :pattern ( ($generated@@381 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@349 (type $generated@@480))))
(let (($generated@@482 ($generated@@348 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@347 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@346 $generated@@482 $generated@@481)) (= ($generated@@423 $generated@@480) ($generated@@472 $generated@@75))))))
 :pattern ( ($generated@@423 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@331 (type $generated@@483))))
(let (($generated@@485 ($generated@@330 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@329 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@328 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@75) (= (type $generated@@487) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@412 $generated@@483) ($generated@@308 ($generated@@257 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@412 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@349 (type $generated@@488))))
(let (($generated@@490 ($generated@@348 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@347 $generated@@490 $generated@@489)) (or (= $generated@@488 ($generated@@346 $generated@@490 $generated@@489)) (exists (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (and (and (= (type $generated@@491) $generated@@75) (= (type $generated@@492) $generated@@75)) ($generated@@0 ($generated@@107 ($generated@@423 $generated@@488) ($generated@@308 ($generated@@257 $generated@@491 $generated@@492)))))
 :no-pattern (type $generated@@491)
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@423 $generated@@488))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@75) ($generated@@79 $generated@@493 $generated@@46)) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@493)) $generated@@493) ($generated@@77 ($generated@@413 $generated@@2 $generated@@493) $generated@@46)))
 :pattern ( ($generated@@79 $generated@@493 $generated@@46))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@75) ($generated@@79 $generated@@494 $generated@@47)) (and (= ($generated@@308 ($generated@@413 $generated@@3 $generated@@494)) $generated@@494) ($generated@@77 ($generated@@413 $generated@@3 $generated@@494) $generated@@47)))
 :pattern ( ($generated@@79 $generated@@494 $generated@@47))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@75) ($generated@@79 $generated@@495 $generated@@44)) (and (= ($generated@@308 ($generated@@413 $generated@@4 $generated@@495)) $generated@@495) ($generated@@77 ($generated@@413 $generated@@4 $generated@@495) $generated@@44)))
 :pattern ( ($generated@@79 $generated@@495 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@496) 21))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@75) ($generated@@79 $generated@@497 $generated@@45)) (and (= ($generated@@308 ($generated@@413 $generated@@496 $generated@@497)) $generated@@497) ($generated@@77 ($generated@@413 $generated@@496 $generated@@497) $generated@@45)))
 :pattern ( ($generated@@79 $generated@@497 $generated@@45))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@79 ($generated@@308 $generated@@498) $generated@@499) ($generated@@77 $generated@@498 $generated@@499)))
 :pattern ( ($generated@@79 ($generated@@308 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@105 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@102 $generated@@501 $generated@@2)) (<= 0 ($generated@@321 $generated@@500))))
 :pattern ( ($generated@@321 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@87 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@74 $generated@@503)) (<= 0 ($generated@@81 $generated@@502))))
 :pattern ( ($generated@@81 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@441 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@64) (= (type $generated@@511) $generated@@64)) (= ($generated@@508 ($generated@@441 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@441 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= ($generated@@98 ($generated@@441 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@441 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= ($generated@@514 ($generated@@449 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@449 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= ($generated@@518 ($generated@@449 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@449 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= ($generated@@98 ($generated@@449 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@449 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@288 ($generated@@257 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@257 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) $generated@@64)) (= ($generated@@526 ($generated@@182 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@182 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (= ($generated@@530 ($generated@@182 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@182 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@75) (= (type $generated@@535) $generated@@75)) (= ($generated@@190 ($generated@@257 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@257 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@191 ($generated@@257 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@257 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@74 $generated@@75)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@81 $generated@@538))) ($generated@@282 ($generated@@170 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@170 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@100 $generated@@538 ($generated@@78 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@101 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@101 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@266 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@266 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@98 ($generated@@266 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@98 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@196 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@196 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@98 ($generated@@196 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@78 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@78 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@98 ($generated@@78 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@78 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@413 $generated@@561 ($generated@@308 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@308 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))) (and ($generated@@79 ($generated@@107 ($generated@@414 $generated@@562) $generated@@565) $generated@@564) ($generated@@79 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@107 ($generated@@414 $generated@@562) $generated@@565))
 :pattern ( ($generated@@107 ($generated@@327 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@441 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@75) ($generated@@0 ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))) (and ($generated@@79 ($generated@@107 ($generated@@424 $generated@@566) $generated@@569) $generated@@568) ($generated@@79 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@107 ($generated@@424 $generated@@566) $generated@@569))
 :pattern ( ($generated@@107 ($generated@@345 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@449 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@75) (= (type $generated@@573) $generated@@75)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@257 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@257 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@257 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@257 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@75) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578))) (and (= ($generated@@308 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576)) $generated@@576) ($generated@@77 ($generated@@413 ($generated@@329 $generated@@75 $generated@@75) $generated@@576) ($generated@@441 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@441 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@75) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581))) (and (= ($generated@@308 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579)) $generated@@579) ($generated@@77 ($generated@@413 ($generated@@347 $generated@@75 $generated@@75) $generated@@579) ($generated@@449 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@79 $generated@@579 ($generated@@449 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@64) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@75)) ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583))) (and (= ($generated@@308 ($generated@@413 $generated@@183 $generated@@584)) $generated@@584) ($generated@@77 ($generated@@413 $generated@@183 $generated@@584) ($generated@@182 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@182 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@585)))
 (not ($generated@@0 ($generated@@107 ($generated@@472 $generated@@586) $generated@@585))))
 :pattern ( (let (($generated@@586 (type $generated@@585)))
($generated@@107 ($generated@@472 $generated@@586) $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@69)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@64) (= (type $generated@@590) $generated@@64)) (and (= ($generated@@98 ($generated@@182 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@587 ($generated@@182 $generated@@589 $generated@@590)) $generated@@63)))
 :pattern ( ($generated@@182 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 Int) ($generated@@592 Int) ) (! (= ($generated@@83 $generated@@591 $generated@@592) (* $generated@@591 $generated@@592))
 :pattern ( ($generated@@83 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@183) (= ($generated@@570 ($generated@@308 $generated@@593)) ($generated@@571 $generated@@593)))
 :pattern ( ($generated@@570 ($generated@@308 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) ($generated@@79 $generated@@594 ($generated@@101 0))) (and (= ($generated@@308 ($generated@@413 $generated@@2 $generated@@594)) $generated@@594) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@594) ($generated@@101 0))))
 :pattern ( ($generated@@79 $generated@@594 ($generated@@101 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@64)) ($generated@@79 $generated@@595 ($generated@@266 $generated@@596))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@595) ($generated@@266 $generated@@596))))
 :pattern ( ($generated@@79 $generated@@595 ($generated@@266 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@75) (= (type $generated@@598) $generated@@64)) ($generated@@79 $generated@@597 ($generated@@271 $generated@@598))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@4) $generated@@597) ($generated@@271 $generated@@598))))
 :pattern ( ($generated@@79 $generated@@597 ($generated@@271 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@75) (= (type $generated@@600) $generated@@64)) ($generated@@79 $generated@@599 ($generated@@196 $generated@@600))) (and (= ($generated@@308 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599)) $generated@@599) ($generated@@77 ($generated@@413 ($generated@@102 $generated@@75 $generated@@2) $generated@@599) ($generated@@196 $generated@@600))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@196 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@75) (= (type $generated@@602) $generated@@64)) ($generated@@79 $generated@@601 ($generated@@78 $generated@@602))) (and (= ($generated@@308 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601)) $generated@@601) ($generated@@77 ($generated@@413 ($generated@@74 $generated@@75) $generated@@601) ($generated@@78 $generated@@602))))
 :pattern ( ($generated@@79 $generated@@601 ($generated@@78 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@102 $generated@@75 $generated@@2)) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (< 0 ($generated ($generated@@107 $generated@@603 $generated@@606)))) ($generated@@282 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@107 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@100 $generated@@603 ($generated@@196 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@183) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@609) (and ($generated@@181 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@64) ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@100 $generated@@607 ($generated@@182 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@282 ($generated@@190 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@183) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@281 $generated@@613) (and ($generated@@181 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@64) ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@100 $generated@@611 ($generated@@182 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@191 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@75) (= (type $generated@@616) $generated@@75)) (= ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)) ($generated@@277 ($generated@@257 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@257 ($generated@@277 $generated@@615) ($generated@@277 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))) ($generated@@277 ($generated@@308 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@80 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@308 ($generated@@277 $generated@@618)) ($generated@@277 ($generated@@308 $generated@@618)))
 :pattern ( ($generated@@308 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@87 (type $generated@@619))))
 (=> (and (= (type $generated@@619) ($generated@@74 $generated@@620)) (= ($generated@@81 $generated@@619) 0)) (= $generated@@619 ($generated@@294 $generated@@620))))
 :pattern ( ($generated@@81 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@622)))
 (=> (and (and (= (type $generated@@621) ($generated@@102 $generated@@624 $generated@@2)) (= (type $generated@@623) $generated@@2)) (<= 0 ($generated $generated@@623))) (= ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)) (+ (- ($generated@@321 $generated@@621) ($generated ($generated@@107 $generated@@621 $generated@@622))) ($generated $generated@@623)))))
 :pattern ( ($generated@@321 ($generated@@108 $generated@@621 $generated@@622 $generated@@623)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 Int) ($generated@@628 Int) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@64) (= (type $generated@@626) ($generated@@74 $generated@@75))) (= (type $generated@@629) $generated@@75)) (or ($generated@@76 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (and (not (= 1 $generated@@72)) (and (and ($generated@@77 $generated@@626 ($generated@@78 $generated@@625)) ($generated@@79 $generated@@629 $generated@@625)) (and (and (<= ($generated@@80 0) ($generated@@80 $generated@@627)) (<= ($generated@@80 $generated@@627) ($generated@@80 $generated@@628))) (<= ($generated@@80 $generated@@628) ($generated@@81 ($generated@@277 $generated@@626)))))))) (and ($generated@@82 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (= ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@625 ($generated@@85 $generated@@86) ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629)) (- $generated@@628 $generated@@627)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@625 ($generated@@277 $generated@@626) ($generated@@80 $generated@@627) ($generated@@80 $generated@@628) $generated@@629))
))))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@631) $generated@@2)) ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@100 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@633) $generated@@3)) ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@100 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@635) $generated@@4)) ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@100 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@637) $generated@@496)) ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@100 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@639) $generated@@75)) ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@100 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@74 $generated@@75)) (= (type $generated@@641) $generated@@64)) (= ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@81 $generated@@640))) ($generated@@79 ($generated@@170 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@170 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@77 $generated@@640 ($generated@@78 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@74 $generated@@75)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@81 $generated@@644))) (< ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@571 ($generated@@413 $generated@@183 ($generated@@170 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@329 $generated@@75 $generated@@75)) (= (type $generated@@647) $generated@@64)) (= (type $generated@@648) $generated@@64)) ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@77 ($generated@@327 $generated@@646) ($generated@@266 $generated@@647)) ($generated@@77 ($generated@@370 $generated@@646) ($generated@@266 $generated@@648))) ($generated@@77 ($generated@@412 $generated@@646) ($generated@@266 ($generated@@182 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@77 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@347 $generated@@75 $generated@@75)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651))) (and (and ($generated@@77 ($generated@@345 $generated@@649) ($generated@@271 $generated@@650)) ($generated@@77 ($generated@@381 $generated@@649) ($generated@@271 $generated@@651))) ($generated@@77 ($generated@@423 $generated@@649) ($generated@@271 ($generated@@182 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@77 $generated@@649 ($generated@@449 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@77 $generated@@652 $generated@@46))
 :pattern ( ($generated@@77 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@77 $generated@@653 $generated@@47))
 :pattern ( ($generated@@77 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@77 $generated@@654 $generated@@44))
 :pattern ( ($generated@@77 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@496) ($generated@@77 $generated@@655 $generated@@45))
 :pattern ( ($generated@@77 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@75) ($generated@@77 $generated@@656 $generated@@48))
 :pattern ( ($generated@@77 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Bool)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Bool)
(declare-fun $generated@@707 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@659) ($generated@@74 $generated@@75)) (= (type $generated@@660) $generated@@64)) (= (type $generated@@661) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@665) $generated@@75)) (= (type $generated@@663) $generated@@75)) (= (type $generated@@694) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@678) $generated@@75)) (= (type $generated@@680) $generated@@75)) (= (type $generated@@673) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@667) $generated@@75)) (= (type $generated@@669) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@702) $generated@@103)) (= (type $generated@@703) ($generated@@203 $generated@@103 $generated@@4))) (= (type $generated@@705) $generated@@75)) (= (type $generated@@707) $generated@@75)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 199) (let (($generated@@708  (=> (and (and (and (and (<= ($generated@@80 0) $generated@@657) (< $generated@@657 $generated@@658)) (<= $generated@@658 ($generated@@81 $generated@@659))) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@662 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@662) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 173) (- 0 183)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 173) (- 0 182)) (<= $generated@@657 $generated@@662)) (and (=> (= (ControlFlow 0 173) (- 0 181)) (<= $generated@@662 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 173) (- 0 180)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 173) (- 0 179)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 173) (- 0 178)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 173) (- 0 177)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (and (=> (= (ControlFlow 0 173) (- 0 176)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 173) (- 0 175)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 173) (- 0 174)) (<= $generated@@657 $generated@@658)) (=> (= (ControlFlow 0 173) (- 0 172)) (<= $generated@@658 ($generated@@81 $generated@@659))))))))))))))))))))))))
(let (($generated@@709  (=> (and (not (and (<= ($generated@@80 0) $generated@@657) (< $generated@@657 $generated@@658))) (= (ControlFlow 0 185) 173)) $generated@@708)))
(let (($generated@@710  (=> (and (and (<= ($generated@@80 0) $generated@@657) (< $generated@@657 $generated@@658)) (= (ControlFlow 0 184) 173)) $generated@@708)))
(let (($generated@@711  (=> (< $generated@@657 ($generated@@80 0)) (and (=> (= (ControlFlow 0 187) 184) $generated@@710) (=> (= (ControlFlow 0 187) 185) $generated@@709)))))
(let (($generated@@712  (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 186) 184) $generated@@710) (=> (= (ControlFlow 0 186) 185) $generated@@709)))))
(let (($generated@@713  (=> (not $generated@@666) (and (=> (= (ControlFlow 0 188) 186) $generated@@712) (=> (= (ControlFlow 0 188) 187) $generated@@711)))))
(let (($generated@@714  (=> (= (ControlFlow 0 164) (- 0 163)) (= $generated@@667 $generated@@663))))
(let (($generated@@715  (=> (and (<= ($generated@@81 $generated@@659) $generated@@658) (= $generated@@668 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 165) (- 0 170)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 165) (- 0 169)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 165) (- 0 168)) (<= $generated@@657 $generated@@668)) (=> (<= $generated@@657 $generated@@668) (and (=> (= (ControlFlow 0 165) (- 0 167)) (<= $generated@@668 ($generated@@81 $generated@@659))) (=> (<= $generated@@668 ($generated@@81 $generated@@659)) (=> (and (and (and ($generated@@281 $generated@@669) ($generated@@670 $generated@@669)) (=> (not (= $generated@@663 $generated@@665)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@668 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@668 $generated@@665)))) (and (=> (not (= $generated@@663 $generated@@665)) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@668 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@668 $generated@@665)) (- $generated@@668 $generated@@657))) (= $generated@@661 $generated@@669))) (and (=> (= (ControlFlow 0 165) (- 0 166)) $generated@@664) (=> $generated@@664 (=> (and (= $generated@@667 $generated@@665) (= (ControlFlow 0 165) 164)) $generated@@714)))))))))))))))
(let (($generated@@716  (=> (=> true (>= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657))) (and (=> (= (ControlFlow 0 152) (- 0 156)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 152) (- 0 155)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 152) (- 0 154)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 152) (- 0 153)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 152) (- 0 151))) (= (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657))))))))))))))
(let (($generated@@717  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@658) (<= $generated@@658 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (=> (= (ControlFlow 0 146) (- 0 150)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 146) (- 0 149)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 146) (- 0 148)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 146) (- 0 147)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 146) (- 0 145))) (= (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)) (>= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657)))))))))))))))
(let (($generated@@718  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@658) (<= $generated@@658 ($generated@@81 $generated@@659))) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (=> (= (ControlFlow 0 140) (- 0 144)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 140) (- 0 143)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 140) (- 0 142)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 140) (- 0 141)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 140) (- 0 139))) (= ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)))))))))))))))
(let (($generated@@719  (and (=> (= (ControlFlow 0 134) (- 0 138)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 134) (- 0 137)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 134) (- 0 136)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 134) (- 0 135)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 134) (- 0 133))) (= ($generated@@0 ($generated@@277 ($generated@@11 true))) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665))))))))))))
(let (($generated@@720 true))
(let (($generated@@721  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@658) (<= $generated@@658 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (and (and (and (=> (= (ControlFlow 0 157) 132) $generated@@720) (=> (= (ControlFlow 0 157) 134) $generated@@719)) (=> (= (ControlFlow 0 157) 140) $generated@@718)) (=> (= (ControlFlow 0 157) 146) $generated@@717)) (=> (= (ControlFlow 0 157) 152) $generated@@716))))))
(let (($generated@@722  (=> (and $generated@@664 ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@665 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)))) (and (=> (= (ControlFlow 0 116) (- 0 121)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 116) (- 0 120)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 116) (- 0 119)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 116) (- 0 118)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and (=> (= (ControlFlow 0 116) (- 0 117)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))) (=> (and (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 116) (- 0 115))) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)))))))))))))))
(let (($generated@@723  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (=> (= (ControlFlow 0 110) (- 0 114)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 110) (- 0 113)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 110) (- 0 112)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 110) (- 0 111)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (= (ControlFlow 0 110) (- 0 109))) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)))))))))))))))
(let (($generated@@724  (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 106) (- 0 108)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 106) (- 0 107)) (<= $generated@@657 $generated@@671)) (=> (= (ControlFlow 0 106) (- 0 105)) (<= $generated@@671 ($generated@@81 $generated@@659))))))))
(let (($generated@@725  (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 95) (- 0 102)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 95) (- 0 101)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 95) (- 0 100)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (and (=> (= (ControlFlow 0 95) (- 0 99)) (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657))) (=> (and (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661)) (=> (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@672 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@672) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 95) (- 0 98)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 95) (- 0 97)) (<= $generated@@671 $generated@@672)) (and (=> (= (ControlFlow 0 95) (- 0 96)) (<= $generated@@672 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (=> (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (= (ControlFlow 0 95) (- 0 94))) (> (+ ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663))) (- ($generated@@81 $generated@@659) $generated@@657))) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- (- ($generated@@81 $generated@@659) $generated@@657) (- $generated@@671 $generated@@657))))))))))))))))))
(let (($generated@@726  (=> (and (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657)) (= (ControlFlow 0 122) 95)) $generated@@725)))
(let (($generated@@727  (=> (= $generated@@665 $generated@@663) (and (and (and (=> (= (ControlFlow 0 123) 106) $generated@@724) (=> (= (ControlFlow 0 123) 110) $generated@@723)) (=> (= (ControlFlow 0 123) 116) $generated@@722)) (=> (= (ControlFlow 0 123) 122) $generated@@726)))))
(let (($generated@@728  (=> (and (=> true (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657))) (= (ControlFlow 0 103) 95)) $generated@@725)))
(let (($generated@@729  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (=> (and (and (and (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657)) (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659)))) (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) $generated@@664) (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)))) (and (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@671))) (and (and (<= $generated@@671 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665))))) (and (=> (= (ControlFlow 0 85) (- 0 93)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 85) (- 0 92)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 85) (- 0 91)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 85) (- 0 90)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and (=> (= (ControlFlow 0 85) (- 0 89)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))) (=> (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 85) (- 0 88)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 85) (- 0 87)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 85) (- 0 86)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (= (ControlFlow 0 85) (- 0 84))) (= (<= (+ ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665))) ($generated@@83 ($generated@@80 2) (- $generated@@671 $generated@@657))) (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657)))))))))))))))))))))))
(let (($generated@@730  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (=> (and (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657)) (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659)))) (=> (and (and (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) $generated@@664) (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@671)))) (and (and (and (<= $generated@@671 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665))) (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))))) (and (=> (= (ControlFlow 0 76) (- 0 83)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 76) (- 0 82)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 76) (- 0 81)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (and (=> (= (ControlFlow 0 76) (- 0 80)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 76) (- 0 79)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 76) (- 0 78)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 76) (- 0 77)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (=> (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (= (ControlFlow 0 76) (- 0 75))) (= (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (<= (+ ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665))) ($generated@@83 ($generated@@80 2) (- $generated@@671 $generated@@657))))))))))))))))))))))
(let (($generated@@731  (and (=> (= (ControlFlow 0 63) (- 0 74)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 63) (- 0 73)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 63) (- 0 72)) (<= $generated@@657 $generated@@671)) (=> (<= $generated@@657 $generated@@671) (and (=> (= (ControlFlow 0 63) (- 0 71)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (<= $generated@@671 ($generated@@81 $generated@@659)) (=> (and (and (and (and ($generated@@281 $generated@@673) ($generated@@670 $generated@@673)) (=> (not (= $generated@@665 $generated@@663)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663)))) (and (=> (not (= $generated@@665 $generated@@663)) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) (- $generated@@671 $generated@@657))) (= $generated@@661 $generated@@673))) (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@673) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@673)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@673) ($generated@@282 $generated@@663 $generated@@660 $generated@@673)))) (and (=> (= (ControlFlow 0 63) (- 0 70)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 63) (- 0 69)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 63) (- 0 68)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) (and (=> (= (ControlFlow 0 63) (- 0 67)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@673) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@673)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@673) ($generated@@282 $generated@@665 $generated@@660 $generated@@673))) (and (=> (= (ControlFlow 0 63) (- 0 66)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 63) (- 0 65)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 63) (- 0 64)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) (=> (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (= (ControlFlow 0 63) (- 0 62))) (= ($generated@@0 ($generated@@277 ($generated@@11 true))) (<= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))))))))))))))))))))))))))
(let (($generated@@732 true))
(let (($generated@@733  (=> (not (= $generated@@665 $generated@@663)) (and (and (and (and (=> (= (ControlFlow 0 104) 61) $generated@@732) (=> (= (ControlFlow 0 104) 63) $generated@@731)) (=> (= (ControlFlow 0 104) 76) $generated@@730)) (=> (= (ControlFlow 0 104) 85) $generated@@729)) (=> (= (ControlFlow 0 104) 103) $generated@@728)))))
(let (($generated@@734  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661)) (and ($generated@@282 $generated@@663 $generated@@660 $generated@@661) (<= ($generated@@80 0) $generated@@657))) (=> (and (and (and (and (<= $generated@@657 $generated@@671) (<= $generated@@671 ($generated@@81 $generated@@659))) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@674 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@674) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (and (and (<= ($generated@@80 0) $generated@@671) (<= $generated@@671 $generated@@674)) (and (<= $generated@@674 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663))) (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (> (+ ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663))) (- ($generated@@81 $generated@@659) $generated@@657))))) (and (=> (= (ControlFlow 0 124) (- 0 125)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 124) 123) $generated@@727) (=> (= (ControlFlow 0 124) 104) $generated@@733)))))))))
(let (($generated@@735  (and (=> (= (ControlFlow 0 45) (- 0 52)) (or (<= 0 $generated@@675) (= (- ($generated@@81 $generated@@659) $generated@@676) $generated@@675))) (=> (or (<= 0 $generated@@675) (= (- ($generated@@81 $generated@@659) $generated@@676) $generated@@675)) (and (=> (= (ControlFlow 0 45) (- 0 51)) (< (- ($generated@@81 $generated@@659) $generated@@676) $generated@@675)) (=> (< (- ($generated@@81 $generated@@659) $generated@@676) $generated@@675) (=> (=> (and (and (<= ($generated@@80 0) $generated@@677) (< $generated@@677 $generated@@676)) (<= $generated@@676 ($generated@@81 $generated@@659))) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663) (=> ($generated@@73 $generated@@660 $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678) (=> ($generated@@73 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678) ($generated@@82 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678)))))) (and (=> (= (ControlFlow 0 45) (- 0 50)) (=> $generated@@666 (<= ($generated@@80 0) $generated@@677))) (=> (=> $generated@@666 (<= ($generated@@80 0) $generated@@677)) (and (=> (= (ControlFlow 0 45) (- 0 49)) (=> $generated@@666 (< $generated@@677 $generated@@676))) (=> (=> $generated@@666 (< $generated@@677 $generated@@676)) (and (=> (= (ControlFlow 0 45) (- 0 48)) (=> $generated@@666 (<= $generated@@676 ($generated@@81 $generated@@659)))) (=> (=> $generated@@666 (<= $generated@@676 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 45) (- 0 47)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@677)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@677 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@677))))) (and (=> (= (ControlFlow 0 45) (- 0 46)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@677 $generated@@676 $generated@@678)) (- $generated@@676 $generated@@677)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@677 $generated@@676 $generated@@678) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@677 $generated@@676 $generated@@678)) (- $generated@@676 $generated@@677))))) (=> (= (ControlFlow 0 45) (- 0 44)) (=> $generated@@666 (= $generated@@679 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@677 $generated@@676 $generated@@678)))))))))))))))))))))
(let (($generated@@736  (=> (=> true ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 55) (- 0 60)) (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@81 $generated@@659)))) (=> (and (<= 0 $generated@@671) (< $generated@@671 ($generated@@81 $generated@@659))) (=> (and (and (and (= $generated@@680 ($generated@@170 $generated@@659 $generated@@671)) (= $generated@@681 (+ $generated@@671 1))) (and (= $generated@@682 ($generated@@80 1)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@683 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@683) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 55) (- 0 59)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 55) (- 0 58)) (<= $generated@@671 $generated@@683)) (and (=> (= (ControlFlow 0 55) (- 0 57)) (<= $generated@@683 ($generated@@81 $generated@@659))) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and (=> (= (ControlFlow 0 55) (- 0 56)) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@671))))) (=> (and ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (= $generated@@678 $generated@@680)) (=> (and (and (= $generated@@677 $generated@@671) (= $generated@@676 $generated@@681)) (and (= $generated@@679 $generated@@682) (= (ControlFlow 0 55) 45))) $generated@@735)))))))))))))
(let (($generated@@737  (=> (> ($generated@@83 ($generated@@80 2) $generated@@684) (- (+ $generated@@658 1) $generated@@657)) (=> (and (= $generated@@685 (+ $generated@@658 1)) (= $generated@@678 $generated@@665)) (=> (and (and (= $generated@@677 $generated@@657) (= $generated@@676 $generated@@685)) (and (= $generated@@679 $generated@@684) (= (ControlFlow 0 54) 45))) $generated@@735)))))
(let (($generated@@738  (=> (and (and (and (= ($generated@@170 $generated@@659 $generated@@658) $generated@@665) (= $generated@@686 (+ $generated@@658 1))) (and (= $generated@@687 (+ $generated@@684 1)) (= $generated@@678 $generated@@665))) (and (and (= $generated@@677 $generated@@657) (= $generated@@676 $generated@@686)) (and (= $generated@@679 $generated@@687) (= (ControlFlow 0 53) 45)))) $generated@@735)))
(let (($generated@@739  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@688 ($generated@@81 $generated@@659))) (=> (and (and ($generated@@100 ($generated@@8 $generated@@688) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@671) (<= $generated@@671 $generated@@688))) (=> (and (and (and (<= $generated@@688 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@689 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@689) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 40) (- 0 43)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 40) (- 0 42)) (<= $generated@@671 $generated@@689)) (and (=> (= (ControlFlow 0 40) (- 0 41)) (<= $generated@@689 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (= (ControlFlow 0 40) (- 0 39))) (= (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@671)) ($generated@@73 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)))))))))))))
(let (($generated@@740  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@690 ($generated@@81 $generated@@659))) (=> (and (and ($generated@@100 ($generated@@8 $generated@@690) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@671) (<= $generated@@671 $generated@@690))) (=> (and (and (and (<= $generated@@690 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) (= $generated@@691 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@691) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 35) (- 0 38)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 35) (- 0 37)) (<= $generated@@671 $generated@@691)) (and (=> (= (ControlFlow 0 35) (- 0 36)) (<= $generated@@691 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (= (ControlFlow 0 35) (- 0 34))) (= (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- (- ($generated@@81 $generated@@659) $generated@@657) (- $generated@@671 $generated@@657))) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@671))))))))))))))
(let (($generated@@741  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@692 ($generated@@81 $generated@@659))) (=> (and (and (and ($generated@@100 ($generated@@8 $generated@@692) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@692))) (and (and (<= $generated@@692 ($generated@@81 $generated@@659)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (= $generated@@693 ($generated@@81 $generated@@659))))) (and (=> (= (ControlFlow 0 23) (- 0 33)) (<= ($generated@@80 0) $generated@@657)) (=> (<= ($generated@@80 0) $generated@@657) (and (=> (= (ControlFlow 0 23) (- 0 32)) (<= $generated@@657 $generated@@671)) (=> (<= $generated@@657 $generated@@671) (and (=> (= (ControlFlow 0 23) (- 0 31)) (<= $generated@@671 $generated@@693)) (=> (<= $generated@@671 $generated@@693) (and (=> (= (ControlFlow 0 23) (- 0 30)) (<= $generated@@693 ($generated@@81 $generated@@659))) (=> (<= $generated@@693 ($generated@@81 $generated@@659)) (=> (and ($generated@@281 $generated@@694) ($generated@@670 $generated@@694)) (=> (and (and (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 $generated@@693 $generated@@663)) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@693 $generated@@663)) (and (= (+ ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 $generated@@693 $generated@@663)) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@693 $generated@@663)) (= $generated@@661 $generated@@694))) (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@694) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@694)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@694) ($generated@@282 $generated@@663 $generated@@660 $generated@@694)))) (and (=> (= (ControlFlow 0 23) (- 0 29)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 23) (- 0 28)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 23) (- 0 27)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@694)) (=> (and (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@694) (= $generated@@695 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@695) $generated@@46 $generated@@694) ($generated@@282 $generated@@663 $generated@@660 $generated@@694))) (and (=> (= (ControlFlow 0 23) (- 0 26)) (<= ($generated@@80 0) $generated@@671)) (and (=> (= (ControlFlow 0 23) (- 0 25)) (<= $generated@@671 $generated@@695)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (<= $generated@@695 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663) (=> (and (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@663) ($generated@@82 $generated@@660 $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663)) (= (ControlFlow 0 23) (- 0 22))) (= (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657)) (> (+ ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@663)) ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@671 ($generated@@81 $generated@@659) $generated@@663))) (- ($generated@@81 $generated@@659) $generated@@657))))))))))))))))))))))))))))
(let (($generated@@742  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@696 ($generated@@81 $generated@@659))) (=> (and (and ($generated@@100 ($generated@@8 $generated@@696) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (<= ($generated@@80 0) $generated@@657) (<= $generated@@657 $generated@@696))) (=> (and (and (and (<= $generated@@696 ($generated@@81 $generated@@659)) ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@697 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@697) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 18) (- 0 20)) (<= $generated@@657 $generated@@697)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (<= $generated@@697 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (= (ControlFlow 0 18) (- 0 17))) (= ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))))))))))))))
(let (($generated@@743  (=> ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) (=> (and (and ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661) (= $generated@@698 ($generated@@81 $generated@@659))) (and ($generated@@100 ($generated@@8 $generated@@698) $generated@@46 $generated@@661) ($generated@@282 $generated@@663 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 13) (- 0 15)) (<= $generated@@657 $generated@@698)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= $generated@@698 ($generated@@81 $generated@@659))) (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (=> (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (= (ControlFlow 0 13) (- 0 12))) (= ($generated@@0 ($generated@@277 ($generated@@11 true))) ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)))))))))))
(let (($generated@@744 true))
(let (($generated@@745  (=> (and (=> true (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657))) (= $generated@@671 (+ $generated@@658 1))) (and (=> (= (ControlFlow 0 126) (- 0 131)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@671) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 126) (- 0 130)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 126) (- 0 129)) (<= $generated@@657 $generated@@671)) (and (=> (= (ControlFlow 0 126) (- 0 128)) (<= $generated@@671 ($generated@@81 $generated@@659))) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665) ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (and (=> (= (ControlFlow 0 126) (- 0 127)) (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657))) (=> (= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@671 $generated@@665)) (- $generated@@671 $generated@@657)) (and (and (and (and (and (and (and (=> (= (ControlFlow 0 126) 11) $generated@@744) (=> (= (ControlFlow 0 126) 13) $generated@@743)) (=> (= (ControlFlow 0 126) 18) $generated@@742)) (=> (= (ControlFlow 0 126) 23) $generated@@741)) (=> (= (ControlFlow 0 126) 124) $generated@@734)) (=> (= (ControlFlow 0 126) 35) $generated@@740)) (=> (= (ControlFlow 0 126) 40) $generated@@739)) (=> (= (ControlFlow 0 126) 55) $generated@@736))))))))))))))
(let (($generated@@746  (and (=> (= (ControlFlow 0 6) (- 0 10)) $generated@@664) (=> $generated@@664 (=> (and (and ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661) ($generated@@100 ($generated@@8 $generated@@657) $generated@@46 $generated@@661)) (and ($generated@@100 ($generated@@8 $generated@@658) $generated@@46 $generated@@661) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= ($generated@@80 0) $generated@@657)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (<= $generated@@657 $generated@@658)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (<= $generated@@658 ($generated@@81 $generated@@659))) (=> ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (=> (and ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (= (ControlFlow 0 6) (- 0 5))) (= (<= ($generated@@83 ($generated@@80 2) $generated@@684) (- (+ $generated@@658 1) $generated@@657)) (<= ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- (+ $generated@@658 1) $generated@@657)))))))))))))
(let (($generated@@747  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@0 ($generated@@277 ($generated@@11 true))) (<= ($generated@@83 ($generated@@80 2) $generated@@684) (- (+ $generated@@658 1) $generated@@657))))))
(let (($generated@@748 true))
(let (($generated@@749  (=> (>= (- (+ $generated@@658 1) $generated@@657) ($generated@@83 ($generated@@80 2) $generated@@684)) (and (and (and (and (=> (= (ControlFlow 0 158) 2) $generated@@748) (=> (= (ControlFlow 0 158) 4) $generated@@747)) (=> (= (ControlFlow 0 158) 6) $generated@@746)) (=> (= (ControlFlow 0 158) 157) $generated@@721)) (=> (= (ControlFlow 0 158) 126) $generated@@745)))))
(let (($generated@@750  (=> (not (= ($generated@@170 $generated@@659 $generated@@658) $generated@@665)) (and (=> (= (ControlFlow 0 159) 54) $generated@@737) (=> (= (ControlFlow 0 159) 158) $generated@@749)))))
(let (($generated@@751  (=> (and (< $generated@@658 ($generated@@81 $generated@@659)) (= $generated@@675 (- ($generated@@81 $generated@@659) $generated@@658))) (and (=> (= (ControlFlow 0 160) (- 0 162)) (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@81 $generated@@659)))) (=> (and (<= 0 $generated@@658) (< $generated@@658 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 160) (- 0 161)) $generated@@664) (=> $generated@@664 (and (=> (= (ControlFlow 0 160) 53) $generated@@738) (=> (= (ControlFlow 0 160) 159) $generated@@750)))))))))
(let (($generated@@752  (=> $generated@@666 (and (=> (= (ControlFlow 0 171) 165) $generated@@715) (=> (= (ControlFlow 0 171) 160) $generated@@751)))))
(let (($generated@@753  (and (=> (= (ControlFlow 0 189) 188) $generated@@713) (=> (= (ControlFlow 0 189) 171) $generated@@752))))
(let (($generated@@754 true))
(let (($generated@@755  (=> (=> $generated@@664 (and ($generated@@79 $generated@@665 $generated@@660) ($generated@@282 $generated@@665 $generated@@660 $generated@@661))) (=> (and (and (and (and (and (and (and (and (and (and $generated@@664 (not false)) (<= 0 $generated@@657)) (<= 1 $generated@@658)) (<= 1 $generated@@684)) (= $generated@@699 0)) (= $generated@@700 1)) (= $generated@@701 1)) true) (and (=> $generated@@666 true) (=> $generated@@666 (<= ($generated@@80 0) $generated@@657)))) (and (and (and (and (=> $generated@@666 (< $generated@@657 $generated@@658)) (=> $generated@@666 (<= $generated@@658 ($generated@@81 $generated@@659)))) (and (=> $generated@@666 ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))))))) (and (and (=> $generated@@666 (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@73 $generated@@660 $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@657))))) (=> $generated@@666 ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665))) (and (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657))))) (=> $generated@@666 (and ($generated@@76 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (and ($generated@@73 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (- $generated@@658 $generated@@657)))))))) (and (and (and (=> $generated@@666 ($generated@@82 $generated@@660 $generated@@659 $generated@@657 $generated@@658 $generated@@665)) (=> $generated@@666 (= $generated@@684 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@657 $generated@@658 $generated@@665)))) (and (forall (($generated@@756 T@U) ) (!  (=> (= (type $generated@@756) $generated@@103) (=> (and (not (= $generated@@756 $generated@@702)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@661 $generated@@756) $generated@@60))) (= ($generated@@107 $generated@@661 $generated@@756) ($generated@@107 $generated@@661 $generated@@756))))
 :pattern ( ($generated@@107 $generated@@661 $generated@@756))
)) ($generated@@166 $generated@@661 $generated@@661))) (and (and (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (! (let (($generated@@759 ($generated@@67 (type $generated@@758))))
 (=> (and (and (= (type $generated@@757) $generated@@103) (= (type $generated@@758) ($generated@@66 $generated@@759))) (and (not (= $generated@@757 $generated@@702)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@661 $generated@@757) $generated@@60)))) (or (= ($generated@@109 ($generated@@107 $generated@@661 $generated@@757) $generated@@758) ($generated@@109 ($generated@@107 $generated@@661 $generated@@757) $generated@@758)) ($generated@@0 ($generated@@201 $generated@@703 $generated@@757 $generated@@758)))))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@661 $generated@@757) $generated@@758))
)) (=> true $generated@@664)) (and (<= (- ($generated@@81 $generated@@659) $generated@@658) $generated@@704) (=> (= (- ($generated@@81 $generated@@659) $generated@@658) $generated@@704) true)))))) (and (=> (= (ControlFlow 0 190) 1) $generated@@754) (=> (= (ControlFlow 0 190) 189) $generated@@753))))))
(let (($generated@@760  (=> (= $generated@@703 ($generated@@202 $generated@@702 $generated@@661 $generated@@60 false)) (and (=> (= (ControlFlow 0 191) (- 0 198)) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@81 $generated@@659)))) (=> (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@81 $generated@@659))) (=> (= $generated@@705 ($generated@@170 $generated@@659 ($generated@@80 0))) (=> (and (and (= $generated@@699 ($generated@@80 0)) (= $generated@@700 ($generated@@80 1))) (and (= $generated@@701 ($generated@@80 1)) (= $generated@@704 (- ($generated@@81 $generated@@659) $generated@@700)))) (and (=> (= (ControlFlow 0 191) (- 0 197)) (=> $generated@@666 (<= ($generated@@80 0) $generated@@699))) (=> (=> $generated@@666 (<= ($generated@@80 0) $generated@@699)) (and (=> (= (ControlFlow 0 191) (- 0 196)) (=> $generated@@666 (< $generated@@699 $generated@@700))) (=> (=> $generated@@666 (< $generated@@699 $generated@@700)) (and (=> (= (ControlFlow 0 191) (- 0 195)) (=> $generated@@666 (<= $generated@@700 ($generated@@81 $generated@@659)))) (=> (=> $generated@@666 (<= $generated@@700 ($generated@@81 $generated@@659))) (and (=> (= (ControlFlow 0 191) (- 0 194)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@699 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@699 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@699 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@699)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@699 ($generated@@81 $generated@@659) $generated@@663) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@699 ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@699 ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) $generated@@699))))) (and (=> (= (ControlFlow 0 191) (- 0 193)) (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@699 $generated@@700 $generated@@705) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@699 $generated@@700 $generated@@705) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@699 $generated@@700 $generated@@705)) (- $generated@@700 $generated@@699)))))) (=> (=> $generated@@666 (=> ($generated@@76 $generated@@660 $generated@@659 $generated@@699 $generated@@700 $generated@@705) (or ($generated@@73 $generated@@660 $generated@@659 $generated@@699 $generated@@700 $generated@@705) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@699 $generated@@700 $generated@@705)) (- $generated@@700 $generated@@699))))) (and (=> (= (ControlFlow 0 191) (- 0 192)) (=> $generated@@666 (= $generated@@701 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@699 $generated@@700 $generated@@705)))) (=> (=> $generated@@666 (= $generated@@701 ($generated@@84 $generated@@660 ($generated@@85 ($generated@@85 $generated@@86)) $generated@@659 $generated@@699 $generated@@700 $generated@@705))) (=> (= (ControlFlow 0 191) 190) $generated@@755))))))))))))))))))))
(let (($generated@@761  (=> (and (and ($generated@@281 $generated@@661) ($generated@@670 $generated@@661)) (and ($generated@@77 $generated@@659 ($generated@@78 $generated@@660)) ($generated@@100 $generated@@659 ($generated@@78 $generated@@660) $generated@@661))) (=> (and (and (and ($generated@@79 $generated@@663 $generated@@660) ($generated@@282 $generated@@663 $generated@@660 $generated@@661)) (and (=> $generated@@706 (and ($generated@@79 $generated@@707 $generated@@660) ($generated@@282 $generated@@707 $generated@@660 $generated@@661))) (= 2 $generated@@72))) (and (and ($generated@@76 $generated@@660 $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663) (and ($generated@@73 $generated@@660 $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663) (> ($generated@@83 ($generated@@80 2) ($generated@@84 $generated@@660 ($generated@@85 $generated@@86) $generated@@659 ($generated@@80 0) ($generated@@81 $generated@@659) $generated@@663)) (- ($generated@@81 $generated@@659) 0)))) (= (ControlFlow 0 199) 191))) $generated@@760))))
$generated@@761)))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
