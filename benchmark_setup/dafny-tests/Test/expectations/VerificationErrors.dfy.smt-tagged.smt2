(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Bool)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@T) T@U)
(declare-fun $generated@@448 () T@T)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@491 (T@U Int) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@79 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@79 0)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@138)) ($generated@@144 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@144 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@140)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@140)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@138) (= (type $generated@@159) $generated@@138)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@138)))
(assert (= ($generated@@160 $generated@@161) $generated@@63))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@167) $generated@@68)) ($generated@@144 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@144 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@81 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@71 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@81) (= (type $generated@@218) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@219) ($generated@@70 $generated@@4))) (= (type $generated@@221) $generated@@81)) (= (type $generated@@222) ($generated@@70 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@224 $generated@@226)) $generated@@68)
 :pattern ( ($generated@@224 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@225 $generated@@228)) ($generated@@78 $generated@@161 ($generated@@224 $generated@@227) $generated@@228))
 :pattern ( ($generated@@78 $generated@@161 ($generated@@224 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@138)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@140)) (= (type $generated@@236) $generated@@140)) (= ($generated@@144 ($generated@@229 $generated@@235 $generated@@236) ($generated@@147 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@144 ($generated@@229 $generated@@235 $generated@@236) ($generated@@147 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@68) ($generated@@144 $generated@@161 ($generated@@224 $generated@@237)))
 :pattern ( ($generated@@144 $generated@@161 ($generated@@224 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@138) (= (type $generated@@239) $generated@@138)) (= ($generated@@153 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@153 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@138) (= (type $generated@@241) $generated@@138)) (= ($generated@@136 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@136 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@245) $generated@@68)) (= ($generated@@144 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@140) ($generated@@0 ($generated@@85 $generated@@244 $generated@@246))) ($generated@@230 $generated@@246 $generated@@245))
 :pattern ( ($generated@@85 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@144 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@68)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@250) $generated@@68)) (= ($generated@@144 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@0 ($generated@@85 $generated@@249 $generated@@251))) ($generated@@230 $generated@@251 $generated@@250))
 :pattern ( ($generated@@85 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@144 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@252 $generated@@253)) $generated@@254))
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= ($generated@@252 $generated@@255) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@138) (= (type $generated@@258) $generated@@138)) (and ($generated@@256 $generated@@257) ($generated@@256 $generated@@258))) (= ($generated@@136 $generated@@257 $generated@@258) true))
 :pattern ( ($generated@@136 $generated@@257 $generated@@258) ($generated@@256 $generated@@257))
 :pattern ( ($generated@@136 $generated@@257 $generated@@258) ($generated@@256 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@68) (= (type $generated@@261) $generated@@68)) (= (type $generated@@262) $generated@@140)) (= (type $generated@@263) $generated@@140)) (= (type $generated@@264) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@225 $generated@@264)) (= ($generated@@78 ($generated@@229 $generated@@262 $generated@@263) ($generated@@147 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@262 $generated@@263) ($generated@@147 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@138) (= ($generated@@146 $generated@@265) (= ($generated@@160 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@138) (= ($generated@@256 $generated@@266) (= ($generated@@160 $generated@@266) $generated@@63)))
 :pattern ( ($generated@@256 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@138) (= ($generated@@137 $generated@@267) (= ($generated@@160 $generated@@267) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@138) ($generated@@146 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@140) (= (type $generated@@270) $generated@@140)) (= $generated@@268 ($generated@@229 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@146 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@138) ($generated@@256 $generated@@279)) (= $generated@@279 $generated@@161))
 :pattern ( ($generated@@256 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@138)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@138) ($generated@@137 $generated@@282)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@140) (= $generated@@282 ($generated@@280 $generated@@283)))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@137 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@140)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@68) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@259 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@78 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@259 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@80 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@83 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@80 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@85 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@73)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@68) (and (= ($generated@@76 ($generated@@224 $generated@@297)) $generated@@64) (= ($generated@@295 ($generated@@224 $generated@@297)) $generated@@67)))
 :pattern ( ($generated@@224 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@80 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@85 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@85 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@80 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@85 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@83 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@80 $generated@@335 $generated@@2)) (= ($generated@@164 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@85 $generated@@334 $generated@@336))) (<= ($generated ($generated@@85 $generated@@334 $generated@@336)) ($generated@@289 $generated@@334))))
 :pattern ( ($generated@@85 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@164 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@302 (type $generated@@337))))
(let (($generated@@339 ($generated@@301 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@300 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@299 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@85 ($generated@@298 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@298 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@302 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@80 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@302 (type $generated@@344))))
(let (($generated@@346 ($generated@@301 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@300 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@299 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@320 (type $generated@@348))))
(let (($generated@@350 ($generated@@319 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@318 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@317 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@316 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@320 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@80 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@320 (type $generated@@355))))
(let (($generated@@357 ($generated@@319 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@318 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@317 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@85 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@360) $generated@@68)) (= ($generated@@144 $generated@@359 ($generated@@163 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@359 $generated@@361)))) ($generated@@230 $generated@@361 $generated@@360))
 :pattern ( ($generated@@85 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@144 $generated@@359 ($generated@@163 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (and (= (type $generated@@362) $generated@@68) (= (type $generated@@363) $generated@@140)) (= (type $generated@@364) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@225 $generated@@364)) (= ($generated@@78 ($generated@@280 $generated@@363) ($generated@@224 $generated@@362) $generated@@364) ($generated@@259 $generated@@363 $generated@@362 $generated@@364)))
 :pattern ( ($generated@@78 ($generated@@280 $generated@@363) ($generated@@224 $generated@@362) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@138) ($generated@@365 $generated@@366)) (or ($generated@@256 $generated@@366) ($generated@@137 $generated@@366)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@368) $generated@@68)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@367 ($generated@@242 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@140) ($generated@@0 ($generated@@85 $generated@@367 $generated@@370))) ($generated@@259 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@85 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@78 $generated@@367 ($generated@@242 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@372) $generated@@68)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@371 ($generated@@247 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@140) ($generated@@0 ($generated@@85 $generated@@371 $generated@@374))) ($generated@@259 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@85 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@371 ($generated@@247 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@85 ($generated@@290 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@85 ($generated@@290 $generated@@376) $generated@@375)))
)))
(assert  (and (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@377 $generated@@380)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@377 $generated@@380))
)) (forall (($generated@@381 T@T) ($generated@@382 T@U) ) (! (= (type ($generated@@378 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@378 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@302 (type $generated@@383))))
(let (($generated@@385 ($generated@@301 (type $generated@@383))))
(= (type ($generated@@379 $generated@@383)) ($generated@@80 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@379 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@300 $generated@@140 $generated@@140)) (= (type $generated@@387) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@377 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@85 ($generated@@298 $generated@@386) ($generated@@154 ($generated@@378 $generated@@138 $generated@@387)))) (= ($generated@@85 ($generated@@379 $generated@@386) ($generated@@154 ($generated@@378 $generated@@138 $generated@@387))) ($generated@@155 ($generated@@378 $generated@@138 $generated@@387))))))
 :pattern ( ($generated@@85 ($generated@@377 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@320 (type $generated@@391))))
(let (($generated@@393 ($generated@@319 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@80 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@318 $generated@@140 $generated@@140)) (= (type $generated@@395) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@394) ($generated@@154 ($generated@@378 $generated@@138 $generated@@395)))) (= ($generated@@85 ($generated@@389 $generated@@394) ($generated@@154 ($generated@@378 $generated@@138 $generated@@395))) ($generated@@155 ($generated@@378 $generated@@138 $generated@@395))))))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@301 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@300 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@85 ($generated@@341 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@85 ($generated@@298 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@85 ($generated@@379 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@85 ($generated@@298 $generated@@396) $generated@@400))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@319 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@318 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@85 ($generated@@352 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@85 ($generated@@316 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@85 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@401) $generated@@405))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@85 ($generated@@352 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@68)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@300 $generated@@140 $generated@@140)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@298 $generated@@409) $generated@@413))) (and ($generated@@259 ($generated@@85 ($generated@@379 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@259 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@409) $generated@@413))
 :pattern ( ($generated@@85 ($generated@@298 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@78 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@68)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@318 $generated@@140 $generated@@140)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) $generated@@68)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@417) $generated@@421))) (and ($generated@@259 ($generated@@85 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@259 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@78 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (= (type $generated@@422) $generated@@68) (= (type $generated@@423) $generated@@138)) ($generated@@144 $generated@@423 ($generated@@224 $generated@@422))) (or ($generated@@256 $generated@@423) ($generated@@137 $generated@@423)))
 :pattern ( ($generated@@137 $generated@@423) ($generated@@144 $generated@@423 ($generated@@224 $generated@@422)))
 :pattern ( ($generated@@256 $generated@@423) ($generated@@144 $generated@@423 ($generated@@224 $generated@@422)))
)))
(assert (forall (($generated@@425 T@T) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@80 $generated@@425 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@320 (type $generated@@426))))
(let (($generated@@428 ($generated@@319 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@318 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@317 $generated@@428 $generated@@427)) (= ($generated@@316 $generated@@426) ($generated@@424 $generated@@428))))))
 :pattern ( ($generated@@316 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@320 (type $generated@@429))))
(let (($generated@@431 ($generated@@319 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@318 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@317 $generated@@431 $generated@@430)) (= ($generated@@352 $generated@@429) ($generated@@424 $generated@@430))))))
 :pattern ( ($generated@@352 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@320 (type $generated@@432))))
(let (($generated@@434 ($generated@@319 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@318 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@317 $generated@@434 $generated@@433)) (= ($generated@@388 $generated@@432) ($generated@@424 $generated@@140))))))
 :pattern ( ($generated@@388 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@302 (type $generated@@435))))
(let (($generated@@437 ($generated@@301 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@300 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@299 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@140) (= (type $generated@@439) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@377 $generated@@435) ($generated@@284 ($generated@@229 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@377 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@320 (type $generated@@440))))
(let (($generated@@442 ($generated@@319 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@318 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@317 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (and (and (= (type $generated@@443) $generated@@140) (= (type $generated@@444) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@388 $generated@@440) ($generated@@284 ($generated@@229 $generated@@443 $generated@@444)))))
 :no-pattern (type $generated@@443)
 :no-pattern (type $generated@@444)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
))))))
 :pattern ( ($generated@@388 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@140) ($generated@@230 $generated@@445 $generated@@46)) (and (= ($generated@@284 ($generated@@378 $generated@@2 $generated@@445)) $generated@@445) ($generated@@144 ($generated@@378 $generated@@2 $generated@@445) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@445 $generated@@46))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@140) ($generated@@230 $generated@@446 $generated@@47)) (and (= ($generated@@284 ($generated@@378 $generated@@3 $generated@@446)) $generated@@446) ($generated@@144 ($generated@@378 $generated@@3 $generated@@446) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@446 $generated@@47))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@140) ($generated@@230 $generated@@447 $generated@@44)) (and (= ($generated@@284 ($generated@@378 $generated@@4 $generated@@447)) $generated@@447) ($generated@@144 ($generated@@378 $generated@@4 $generated@@447) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@447 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@448) 20))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@140) ($generated@@230 $generated@@449 $generated@@45)) (and (= ($generated@@284 ($generated@@378 $generated@@448 $generated@@449)) $generated@@449) ($generated@@144 ($generated@@378 $generated@@448 $generated@@449) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@449 $generated@@45))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@68) (= ($generated@@230 ($generated@@284 $generated@@450) $generated@@451) ($generated@@144 $generated@@450 $generated@@451)))
 :pattern ( ($generated@@230 ($generated@@284 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@83 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@80 $generated@@453 $generated@@2)) (<= 0 ($generated@@289 $generated@@452))))
 :pattern ( ($generated@@289 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@274 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@273 $generated@@455)) (<= 0 ($generated@@272 $generated@@454))))
 :pattern ( ($generated@@272 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@68)) (= ($generated@@456 ($generated@@406 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@406 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@460 ($generated@@406 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@406 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@76 ($generated@@406 $generated@@464 $generated@@465)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@76 ($generated@@414 $generated@@474 $generated@@475)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@140) (= (type $generated@@477) $generated@@140)) (= ($generated@@160 ($generated@@229 $generated@@476 $generated@@477)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@147 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@147 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@147 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@147 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@140) (= (type $generated@@487) $generated@@140)) (= ($generated@@154 ($generated@@229 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@229 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@140) (= (type $generated@@489) $generated@@140)) (= ($generated@@155 ($generated@@229 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@229 $generated@@488 $generated@@489))
)))
(assert  (and (forall (($generated@@492 T@U) ) (! (= (type ($generated@@490 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@492))
)) (forall (($generated@@493 T@U) ($generated@@494 Int) ) (! (let (($generated@@495 ($generated@@274 (type $generated@@493))))
(= (type ($generated@@491 $generated@@493 $generated@@494)) $generated@@495))
 :pattern ( ($generated@@491 $generated@@493 $generated@@494))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@273 $generated@@140)) (= (type $generated@@497) $generated@@68)) (= (type $generated@@498) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@496 ($generated@@490 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@272 $generated@@496))) ($generated@@259 ($generated@@491 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@491 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@78 $generated@@496 ($generated@@490 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@79 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@79 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@502 ($generated@@242 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@242 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@76 ($generated@@242 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@506 ($generated@@247 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@247 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@76 ($generated@@247 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@163 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@163 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@163 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@490 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@490 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@490 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@490 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@224 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@224 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@140) (= ($generated@@160 ($generated@@280 $generated@@521)) $generated@@65))
 :pattern ( ($generated@@280 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@140) (= ($generated@@139 ($generated@@280 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@280 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@378 $generated@@524 ($generated@@284 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@284 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@300 $generated@@140 $generated@@140)) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) (= ($generated@@144 $generated@@525 ($generated@@406 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@298 $generated@@525) $generated@@528))) (and ($generated@@230 ($generated@@85 ($generated@@379 $generated@@525) $generated@@528) $generated@@527) ($generated@@230 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@525) $generated@@528))
 :pattern ( ($generated@@85 ($generated@@298 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@144 $generated@@525 ($generated@@406 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@318 $generated@@140 $generated@@140)) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) $generated@@68)) (= ($generated@@144 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@316 $generated@@529) $generated@@532))) (and ($generated@@230 ($generated@@85 ($generated@@389 $generated@@529) $generated@@532) $generated@@531) ($generated@@230 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@85 ($generated@@389 $generated@@529) $generated@@532))
 :pattern ( ($generated@@85 ($generated@@316 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@144 $generated@@529 ($generated@@414 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@140)) (= ($generated@@144 ($generated@@280 $generated@@534) ($generated@@224 $generated@@533)) ($generated@@230 $generated@@534 $generated@@533)))
 :pattern ( ($generated@@144 ($generated@@280 $generated@@534) ($generated@@224 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@140) (= (type $generated@@538) $generated@@140)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@229 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@229 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@140) (= (type $generated@@540) $generated@@140)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@229 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@229 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@140) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@68)) ($generated@@230 $generated@@541 ($generated@@406 $generated@@542 $generated@@543))) (and (= ($generated@@284 ($generated@@378 ($generated@@300 $generated@@140 $generated@@140) $generated@@541)) $generated@@541) ($generated@@144 ($generated@@378 ($generated@@300 $generated@@140 $generated@@140) $generated@@541) ($generated@@406 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@406 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@140) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@68)) ($generated@@230 $generated@@544 ($generated@@414 $generated@@545 $generated@@546))) (and (= ($generated@@284 ($generated@@378 ($generated@@318 $generated@@140 $generated@@140) $generated@@544)) $generated@@544) ($generated@@144 ($generated@@378 ($generated@@318 $generated@@140 $generated@@140) $generated@@544) ($generated@@414 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@230 $generated@@544 ($generated@@414 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) $generated@@140)) ($generated@@230 $generated@@549 ($generated@@147 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@378 $generated@@138 $generated@@549)) $generated@@549) ($generated@@144 ($generated@@378 $generated@@138 $generated@@549) ($generated@@147 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@230 $generated@@549 ($generated@@147 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@140) (< ($generated@@535 $generated@@550) ($generated@@536 ($generated@@280 $generated@@550))))
 :pattern ( ($generated@@280 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@138) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@225 $generated@@553) (and ($generated@@137 $generated@@551) ($generated@@78 $generated@@551 ($generated@@224 $generated@@552) $generated@@553)))) ($generated@@259 ($generated@@139 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@259 ($generated@@139 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@85 ($generated@@424 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@85 ($generated@@424 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@295 ($generated@@147 $generated@@556 $generated@@557)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@138) (= ($generated@@535 ($generated@@284 $generated@@558)) ($generated@@536 $generated@@558)))
 :pattern ( ($generated@@535 ($generated@@284 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@140) ($generated@@230 $generated@@559 ($generated@@79 0))) (and (= ($generated@@284 ($generated@@378 $generated@@2 $generated@@559)) $generated@@559) ($generated@@144 ($generated@@378 ($generated@@80 $generated@@140 $generated@@4) $generated@@559) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@559 ($generated@@79 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@140) (= (type $generated@@561) $generated@@68)) ($generated@@230 $generated@@560 ($generated@@242 $generated@@561))) (and (= ($generated@@284 ($generated@@378 ($generated@@80 $generated@@140 $generated@@4) $generated@@560)) $generated@@560) ($generated@@144 ($generated@@378 ($generated@@80 $generated@@140 $generated@@4) $generated@@560) ($generated@@242 $generated@@561))))
 :pattern ( ($generated@@230 $generated@@560 ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@140) (= (type $generated@@563) $generated@@68)) ($generated@@230 $generated@@562 ($generated@@247 $generated@@563))) (and (= ($generated@@284 ($generated@@378 ($generated@@80 $generated@@140 $generated@@4) $generated@@562)) $generated@@562) ($generated@@144 ($generated@@378 ($generated@@80 $generated@@140 $generated@@4) $generated@@562) ($generated@@247 $generated@@563))))
 :pattern ( ($generated@@230 $generated@@562 ($generated@@247 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@140) (= (type $generated@@565) $generated@@68)) ($generated@@230 $generated@@564 ($generated@@163 $generated@@565))) (and (= ($generated@@284 ($generated@@378 ($generated@@80 $generated@@140 $generated@@2) $generated@@564)) $generated@@564) ($generated@@144 ($generated@@378 ($generated@@80 $generated@@140 $generated@@2) $generated@@564) ($generated@@163 $generated@@565))))
 :pattern ( ($generated@@230 $generated@@564 ($generated@@163 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@140) (= (type $generated@@567) $generated@@68)) ($generated@@230 $generated@@566 ($generated@@490 $generated@@567))) (and (= ($generated@@284 ($generated@@378 ($generated@@273 $generated@@140) $generated@@566)) $generated@@566) ($generated@@144 ($generated@@378 ($generated@@273 $generated@@140) $generated@@566) ($generated@@490 $generated@@567))))
 :pattern ( ($generated@@230 $generated@@566 ($generated@@490 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@140)) ($generated@@230 $generated@@569 ($generated@@224 $generated@@568))) (and (= ($generated@@284 ($generated@@378 $generated@@138 $generated@@569)) $generated@@569) ($generated@@144 ($generated@@378 $generated@@138 $generated@@569) ($generated@@224 $generated@@568))))
 :pattern ( ($generated@@230 $generated@@569 ($generated@@224 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@571) $generated@@68)) (= (type $generated@@572) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@570 ($generated@@163 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@570 $generated@@573)))) ($generated@@259 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@85 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@78 $generated@@570 ($generated@@163 $generated@@571) $generated@@572))
)))
(assert (= $generated@@161 ($generated@@252 $generated@@161)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@138) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@225 $generated@@576) (and ($generated@@146 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@68) ($generated@@78 $generated@@574 ($generated@@147 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@78 $generated@@574 ($generated@@147 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@259 ($generated@@154 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@259 ($generated@@154 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@138) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@225 $generated@@580) (and ($generated@@146 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@68) ($generated@@78 $generated@@578 ($generated@@147 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@78 $generated@@578 ($generated@@147 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@259 ($generated@@155 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@259 ($generated@@155 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@140) (= (type $generated@@583) $generated@@140)) (= ($generated@@229 ($generated@@252 $generated@@582) ($generated@@252 $generated@@583)) ($generated@@252 ($generated@@229 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@229 ($generated@@252 $generated@@582) ($generated@@252 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@140) (= ($generated@@280 ($generated@@252 $generated@@584)) ($generated@@252 ($generated@@280 $generated@@584))))
 :pattern ( ($generated@@280 ($generated@@252 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@284 ($generated@@252 $generated@@585)) ($generated@@252 ($generated@@284 $generated@@585)))
 :pattern ( ($generated@@284 ($generated@@252 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@274 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@273 $generated@@587)) (= ($generated@@272 $generated@@586) 0)) (= $generated@@586 ($generated@@271 $generated@@587))))
 :pattern ( ($generated@@272 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@80 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@289 ($generated@@86 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@289 $generated@@588) ($generated ($generated@@85 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@289 ($generated@@86 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@593) $generated@@2)) ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@78 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@595) $generated@@3)) ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@78 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@597) $generated@@4)) ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@78 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@599) $generated@@448)) ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@78 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@601) $generated@@140)) ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@78 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@273 $generated@@140)) (= (type $generated@@603) $generated@@68)) (= ($generated@@144 $generated@@602 ($generated@@490 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@272 $generated@@602))) ($generated@@230 ($generated@@491 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@491 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@144 $generated@@602 ($generated@@490 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@273 $generated@@140)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@272 $generated@@606))) (< ($generated@@536 ($generated@@378 $generated@@138 ($generated@@491 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@536 ($generated@@378 $generated@@138 ($generated@@491 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@300 $generated@@140 $generated@@140)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) ($generated@@144 $generated@@608 ($generated@@406 $generated@@609 $generated@@610))) (and (and ($generated@@144 ($generated@@298 $generated@@608) ($generated@@242 $generated@@609)) ($generated@@144 ($generated@@341 $generated@@608) ($generated@@242 $generated@@610))) ($generated@@144 ($generated@@377 $generated@@608) ($generated@@242 ($generated@@147 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@144 $generated@@608 ($generated@@406 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@318 $generated@@140 $generated@@140)) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) $generated@@68)) ($generated@@144 $generated@@611 ($generated@@414 $generated@@612 $generated@@613))) (and (and ($generated@@144 ($generated@@316 $generated@@611) ($generated@@247 $generated@@612)) ($generated@@144 ($generated@@352 $generated@@611) ($generated@@247 $generated@@613))) ($generated@@144 ($generated@@388 $generated@@611) ($generated@@247 ($generated@@147 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@144 $generated@@611 ($generated@@414 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@144 $generated@@614 $generated@@46))
 :pattern ( ($generated@@144 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@144 $generated@@615 $generated@@47))
 :pattern ( ($generated@@144 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@144 $generated@@616 $generated@@44))
 :pattern ( ($generated@@144 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@448) ($generated@@144 $generated@@617 $generated@@45))
 :pattern ( ($generated@@144 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@140) ($generated@@144 $generated@@618 $generated@@48))
 :pattern ( ($generated@@144 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (= (type $generated@@619) $generated@@138) (= (type $generated@@620) ($generated@@170 $generated@@81 $generated@@4))) (= (type $generated@@621) $generated@@81)) (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@625 true))
(let (($generated@@626  (=> (and (not ($generated@@137 $generated@@619)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@137 $generated@@619))))
(let (($generated@@627  (=> ($generated@@256 $generated@@619) (and (=> (= (ControlFlow 0 6) 4) $generated@@626) (=> (= (ControlFlow 0 6) 5) $generated@@625)))))
(let (($generated@@628  (=> (and (not ($generated@@256 $generated@@619)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@137 $generated@@619))))
(let (($generated@@629  (=> (= $generated@@620 ($generated@@169 $generated@@621 $generated@@622 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@628) (=> (= (ControlFlow 0 7) 6) $generated@@627)))))
(let (($generated@@630  (=> (and ($generated@@225 $generated@@622) ($generated@@623 $generated@@622)) (=> (and (and (and ($generated@@144 $generated@@619 ($generated@@224 ($generated@@490 $generated@@45))) ($generated@@78 $generated@@619 ($generated@@224 ($generated@@490 $generated@@45)) $generated@@622)) ($generated@@365 $generated@@619)) (and (= 1 $generated@@624) (= (ControlFlow 0 8) 7))) $generated@@629))))
$generated@@630)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
