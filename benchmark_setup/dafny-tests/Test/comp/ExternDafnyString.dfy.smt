(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (Int) T@U)
(declare-fun $generated@@242 (T@U) Int)
(declare-fun $generated@@243 () T@T)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@578 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (and (= ($generated@@1 $generated@@243) 17) (forall (($generated@@244 Int) ) (! (= (type ($generated@@241 $generated@@244)) $generated@@243)
 :pattern ( ($generated@@241 $generated@@244))
))))
(assert (forall (($generated@@245 Int) ) (!  (=> (and (<= 0 $generated@@245) (< $generated@@245 65536)) (= ($generated@@242 ($generated@@241 $generated@@245)) $generated@@245))
 :pattern ( ($generated@@241 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@149)) (= (type $generated@@251) $generated@@149)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@215 $generated@@250 $generated@@251) ($generated@@139 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@250 $generated@@251) ($generated@@139 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@140) (= ($generated@@138 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@140) ($generated@@138 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@149) (= (type $generated@@258) $generated@@149)) (= $generated@@256 ($generated@@215 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@138 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 18)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@243) (and (and (= ($generated@@241 ($generated@@242 $generated@@267)) $generated@@267) (<= 0 ($generated@@242 $generated@@267))) (< ($generated@@242 $generated@@267) 65536)))
 :pattern ( ($generated@@242 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@149)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@74 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@275) $generated@@149)) (= (type $generated@@276) $generated@@64)) ($generated@@132 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@132 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@280) $generated@@64)) ($generated@@132 $generated@@277 $generated@@278)) ($generated@@74 $generated@@279 $generated@@280 $generated@@277)) ($generated@@74 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@132 $generated@@277 $generated@@278) ($generated@@74 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@76 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@76 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@81 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 20)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@155 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@155 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@136 $generated@@348 ($generated@@154 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@216 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@136 $generated@@348 ($generated@@154 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@225 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@149) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@247 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@225 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@149) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@282 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@282 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@149 $generated@@149)) (= (type $generated@@371) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@147 ($generated@@362 $generated@@140 $generated@@371)))) (= ($generated@@81 ($generated@@363 $generated@@370) ($generated@@147 ($generated@@362 $generated@@140 $generated@@371))) ($generated@@148 ($generated@@362 $generated@@140 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@309 (type $generated@@375))))
(let (($generated@@377 ($generated@@308 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@379) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@378) ($generated@@147 ($generated@@362 $generated@@140 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@147 ($generated@@362 $generated@@140 $generated@@379))) ($generated@@148 ($generated@@362 $generated@@140 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@290 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@289 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@308 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@307 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@149 $generated@@149)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@247 ($generated@@81 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@247 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))) (and ($generated@@247 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@247 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@406 $generated@@408))) (and ($generated@@132 $generated@@406 $generated@@407) ($generated@@132 $generated@@407 $generated@@408))) ($generated@@132 $generated@@406 $generated@@408))
 :pattern ( ($generated@@132 $generated@@406 $generated@@407) ($generated@@132 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@76 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@309 (type $generated@@411))))
(let (($generated@@413 ($generated@@308 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@307 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@306 $generated@@413 $generated@@412)) (= ($generated@@305 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@305 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@309 (type $generated@@414))))
(let (($generated@@416 ($generated@@308 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@307 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@306 $generated@@416 $generated@@415)) (= ($generated@@341 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@341 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@309 (type $generated@@417))))
(let (($generated@@419 ($generated@@308 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@307 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@306 $generated@@419 $generated@@418)) (= ($generated@@372 $generated@@417) ($generated@@409 $generated@@149))))))
 :pattern ( ($generated@@372 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@291 (type $generated@@420))))
(let (($generated@@422 ($generated@@290 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@289 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@288 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@149) (= (type $generated@@424) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@420) ($generated@@268 ($generated@@215 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@361 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@309 (type $generated@@425))))
(let (($generated@@427 ($generated@@308 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@307 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@306 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@149) (= (type $generated@@429) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@425) ($generated@@268 ($generated@@215 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@372 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@149) ($generated@@216 $generated@@430 $generated@@46)) (and (= ($generated@@268 ($generated@@362 $generated@@2 $generated@@430)) $generated@@430) ($generated@@136 ($generated@@362 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@216 $generated@@431 $generated@@47)) (and (= ($generated@@268 ($generated@@362 $generated@@3 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@362 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@216 $generated@@432 $generated@@44)) (and (= ($generated@@268 ($generated@@362 $generated@@4 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@362 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@432 $generated@@44))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@149) ($generated@@216 $generated@@433 $generated@@45)) (and (= ($generated@@268 ($generated@@362 $generated@@243 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@362 $generated@@243 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@64) (= ($generated@@216 ($generated@@268 $generated@@434) $generated@@435) ($generated@@136 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@216 ($generated@@268 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@281 $generated@@436))))
 :pattern ( ($generated@@281 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@262 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@261 $generated@@439)) (<= 0 ($generated@@260 $generated@@438))))
 :pattern ( ($generated@@260 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@390 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@390 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@390 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@390 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@398 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@398 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@398 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@398 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@149) (= (type $generated@@461) $generated@@149)) (= ($generated@@253 ($generated@@215 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@139 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@139 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@139 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@149) (= (type $generated@@471) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@215 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@149) (= (type $generated@@473) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@215 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@262 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@261 $generated@@149)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@260 $generated@@480))) ($generated@@247 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@225 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@225 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@230 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@230 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@154 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@154 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@362 $generated@@503 ($generated@@268 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@268 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@289 $generated@@149 $generated@@149)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@136 $generated@@504 ($generated@@390 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@504) $generated@@507))) (and ($generated@@216 ($generated@@81 ($generated@@363 $generated@@504) $generated@@507) $generated@@506) ($generated@@216 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@136 $generated@@504 ($generated@@390 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@136 $generated@@508 ($generated@@398 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@508) $generated@@511))) (and ($generated@@216 ($generated@@81 ($generated@@373 $generated@@508) $generated@@511) $generated@@510) ($generated@@216 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@136 $generated@@508 ($generated@@398 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@149) (= (type $generated@@515) $generated@@149)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@215 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@215 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@149)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@215 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@215 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@149) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@216 $generated@@518 ($generated@@390 $generated@@519 $generated@@520))) (and (= ($generated@@268 ($generated@@362 ($generated@@289 $generated@@149 $generated@@149) $generated@@518)) $generated@@518) ($generated@@136 ($generated@@362 ($generated@@289 $generated@@149 $generated@@149) $generated@@518) ($generated@@390 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@518 ($generated@@390 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@216 $generated@@521 ($generated@@398 $generated@@522 $generated@@523))) (and (= ($generated@@268 ($generated@@362 ($generated@@307 $generated@@149 $generated@@149) $generated@@521)) $generated@@521) ($generated@@136 ($generated@@362 ($generated@@307 $generated@@149 $generated@@149) $generated@@521) ($generated@@398 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@398 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@149)) ($generated@@216 $generated@@526 ($generated@@139 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@362 $generated@@140 $generated@@526)) $generated@@526) ($generated@@136 ($generated@@362 $generated@@140 $generated@@526) ($generated@@139 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@216 $generated@@526 ($generated@@139 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@81 ($generated@@409 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@81 ($generated@@409 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@139 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@140) (= ($generated@@512 ($generated@@268 $generated@@533)) ($generated@@513 $generated@@533)))
 :pattern ( ($generated@@512 ($generated@@268 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@149) ($generated@@216 $generated@@534 ($generated@@75 0))) (and (= ($generated@@268 ($generated@@362 $generated@@2 $generated@@534)) $generated@@534) ($generated@@136 ($generated@@362 ($generated@@76 $generated@@149 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@149) (= (type $generated@@536) $generated@@64)) ($generated@@216 $generated@@535 ($generated@@225 $generated@@536))) (and (= ($generated@@268 ($generated@@362 ($generated@@76 $generated@@149 $generated@@4) $generated@@535)) $generated@@535) ($generated@@136 ($generated@@362 ($generated@@76 $generated@@149 $generated@@4) $generated@@535) ($generated@@225 $generated@@536))))
 :pattern ( ($generated@@216 $generated@@535 ($generated@@225 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@149) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@362 ($generated@@76 $generated@@149 $generated@@4) $generated@@537)) $generated@@537) ($generated@@136 ($generated@@362 ($generated@@76 $generated@@149 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@154 $generated@@540))) (and (= ($generated@@268 ($generated@@362 ($generated@@76 $generated@@149 $generated@@2) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@362 ($generated@@76 $generated@@149 $generated@@2) $generated@@539) ($generated@@154 $generated@@540))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@154 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@541 ($generated@@474 $generated@@542))) (and (= ($generated@@268 ($generated@@362 ($generated@@261 $generated@@149) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@362 ($generated@@261 $generated@@149) $generated@@541) ($generated@@474 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@541 ($generated@@474 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@154 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@247 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@154 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@140) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@549) (and ($generated@@138 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@139 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@139 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@247 ($generated@@147 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@247 ($generated@@147 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@140) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@553) (and ($generated@@138 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@139 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@139 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@247 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@247 ($generated@@148 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@555) ($generated@@237 $generated@@556)) ($generated@@237 ($generated@@215 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@555) ($generated@@237 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@235 $generated@@557))) ($generated@@237 ($generated@@268 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@235 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@268 ($generated@@237 $generated@@558)) ($generated@@237 ($generated@@268 $generated@@558)))
 :pattern ( ($generated@@268 ($generated@@237 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@262 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@261 $generated@@560)) (= ($generated@@260 $generated@@559) 0)) (= $generated@@559 ($generated@@259 $generated@@560))))
 :pattern ( ($generated@@260 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@281 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@281 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@281 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@566) $generated@@2)) ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
 :pattern ( ($generated@@74 $generated@@566 $generated@@46 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@3)) ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@47 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@4)) ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@44 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@243)) ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@45 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@149)) ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@48 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@261 $generated@@149)) (= (type $generated@@576) $generated@@64)) (= ($generated@@136 $generated@@575 ($generated@@474 $generated@@576)) (forall (($generated@@577 Int) ) (!  (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@260 $generated@@575))) ($generated@@216 ($generated@@475 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@475 $generated@@575 $generated@@577))
))))
 :pattern ( ($generated@@136 $generated@@575 ($generated@@474 $generated@@576)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (!  (=> (= (type $generated@@579) ($generated@@261 $generated@@149)) (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@260 $generated@@579))) (< ($generated@@513 ($generated@@362 $generated@@140 ($generated@@475 $generated@@579 $generated@@580))) ($generated@@578 $generated@@579))))
 :pattern ( ($generated@@513 ($generated@@362 $generated@@140 ($generated@@475 $generated@@579 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@289 $generated@@149 $generated@@149)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@136 $generated@@581 ($generated@@390 $generated@@582 $generated@@583))) (and (and ($generated@@136 ($generated@@287 $generated@@581) ($generated@@225 $generated@@582)) ($generated@@136 ($generated@@330 $generated@@581) ($generated@@225 $generated@@583))) ($generated@@136 ($generated@@361 $generated@@581) ($generated@@225 ($generated@@139 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@136 $generated@@581 ($generated@@390 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@136 $generated@@584 ($generated@@398 $generated@@585 $generated@@586))) (and (and ($generated@@136 ($generated@@305 $generated@@584) ($generated@@230 $generated@@585)) ($generated@@136 ($generated@@341 $generated@@584) ($generated@@230 $generated@@586))) ($generated@@136 ($generated@@372 $generated@@584) ($generated@@230 ($generated@@139 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@136 $generated@@584 ($generated@@398 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@2) ($generated@@136 $generated@@587 $generated@@46))
 :pattern ( ($generated@@136 $generated@@587 $generated@@46))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@3) ($generated@@136 $generated@@588 $generated@@47))
 :pattern ( ($generated@@136 $generated@@588 $generated@@47))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@4) ($generated@@136 $generated@@589 $generated@@44))
 :pattern ( ($generated@@136 $generated@@589 $generated@@44))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@243) ($generated@@136 $generated@@590 $generated@@45))
 :pattern ( ($generated@@136 $generated@@590 $generated@@45))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@149) ($generated@@136 $generated@@591 $generated@@48))
 :pattern ( ($generated@@136 $generated@@591 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Bool)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 (T@U) Bool)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@593) ($generated@@261 $generated@@149)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@604) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@605) ($generated@@261 $generated@@149))) (= (type $generated@@608) ($generated@@261 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@610 true))
(let (($generated@@611  (=> (and (not (= $generated@@592 ($generated@@260 $generated@@593))) (= (ControlFlow 0 12) (- 0 11))) (and (<= 0 $generated@@592) (<= $generated@@592 ($generated@@260 $generated@@593))))))
(let (($generated@@612  (=> (= $generated@@594 $generated@@595) (and (=> (= (ControlFlow 0 14) 12) $generated@@611) (=> (= (ControlFlow 0 14) 13) $generated@@610)))))
(let (($generated@@613  (=> (and (and (= $generated@@596 (+ $generated@@594 1)) (= (ControlFlow 0 4) (- 0 3))) $generated@@597) (<= $generated@@598 $generated@@596))))
(let (($generated@@614  (=> (not (= ($generated@@362 $generated@@243 ($generated@@475 $generated@@593 $generated@@594)) ($generated@@237 ($generated@@241 47)))) (=> (and (= $generated@@598 $generated@@592) (= (ControlFlow 0 8) 4)) $generated@@613))))
(let (($generated@@615  (=> (= ($generated@@362 $generated@@243 ($generated@@475 $generated@@593 $generated@@594)) ($generated@@237 ($generated@@241 47))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@592) (<= $generated@@592 ($generated@@260 $generated@@593)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= $generated@@592 $generated@@594) (<= $generated@@594 ($generated@@260 $generated@@593)))) (=> (= $generated@@599 (+ $generated@@594 1)) (=> (and (= $generated@@598 $generated@@599) (= (ControlFlow 0 5) 4)) $generated@@613)))))))
(let (($generated@@616  (=> (not (= $generated@@594 $generated@@595)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@260 $generated@@593)))) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@260 $generated@@593))) (and (=> (= (ControlFlow 0 9) 5) $generated@@615) (=> (= (ControlFlow 0 9) 8) $generated@@614)))))))
(let (($generated@@617  (=> $generated@@597 (and (=> (= (ControlFlow 0 15) 14) $generated@@612) (=> (= (ControlFlow 0 15) 9) $generated@@616)))))
(let (($generated@@618 true))
(let (($generated@@619  (and (=> (= (ControlFlow 0 16) 2) $generated@@618) (=> (= (ControlFlow 0 16) 15) $generated@@617))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (and (and (and (and (and (not false) (<= 0 $generated@@592)) (<= 0 $generated@@594)) (= $generated@@600 0)) (<= 0 $generated@@595)) (and (and (and (<= $generated@@600 $generated@@594) (<= $generated@@594 $generated@@595)) (=> $generated@@597 true)) (and (and (=> $generated@@597 (<= $generated@@592 $generated@@594)) (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@77) (=> (and (not (= $generated@@622 $generated@@602)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@603 $generated@@622) $generated@@60))) (= ($generated@@81 $generated@@601 $generated@@622) ($generated@@81 $generated@@601 $generated@@622))))
 :pattern ( ($generated@@81 $generated@@601 $generated@@622))
))) (and ($generated@@132 $generated@@601 $generated@@601) (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@67 (type $generated@@624))))
 (=> (and (and (= (type $generated@@623) $generated@@77) (= (type $generated@@624) ($generated@@66 $generated@@625))) (and (not (= $generated@@623 $generated@@602)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@601 $generated@@623) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@601 $generated@@623) $generated@@624) ($generated@@83 ($generated@@81 $generated@@601 $generated@@623) $generated@@624)) ($generated@@0 ($generated@@159 $generated@@604 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@601 $generated@@623) $generated@@624))
)))))) (and (=> (= (ControlFlow 0 17) 1) $generated@@620) (=> (= (ControlFlow 0 17) 16) $generated@@619)))))
(let (($generated@@626  (=> (= $generated@@604 ($generated@@160 $generated@@602 $generated@@603 $generated@@60 false)) (=> (and (and ($generated@@136 $generated@@605 ($generated@@474 $generated@@45)) ($generated@@74 $generated@@605 ($generated@@474 $generated@@45) $generated@@603)) (and ($generated@@246 $generated@@601) ($generated@@606 $generated@@601))) (=> (and (and (and ($generated@@136 $generated@@593 ($generated@@474 $generated@@45)) ($generated@@74 $generated@@593 ($generated@@474 $generated@@45) $generated@@601)) (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@77) (=> (and (not (= $generated@@627 $generated@@602)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@603 $generated@@627) $generated@@60))) (= ($generated@@81 $generated@@601 $generated@@627) ($generated@@81 $generated@@603 $generated@@627))))
 :pattern ( ($generated@@81 $generated@@601 $generated@@627))
))) (and (and ($generated@@132 $generated@@603 $generated@@601) (= $generated@@607 ($generated@@235 0))) (and (= $generated@@600 ($generated@@235 0)) (= $generated@@595 ($generated@@260 $generated@@593))))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (<= $generated@@600 $generated@@595)) (=> (<= $generated@@600 $generated@@595) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@597 (<= $generated@@607 $generated@@600))) (=> (=> $generated@@597 (<= $generated@@607 $generated@@600)) (=> (= (ControlFlow 0 18) 17) $generated@@621))))))))))
(let (($generated@@628  (=> (and ($generated@@246 $generated@@603) ($generated@@606 $generated@@603)) (=> (and (and (and ($generated@@136 $generated@@608 ($generated@@474 $generated@@45)) ($generated@@74 $generated@@608 ($generated@@474 $generated@@45) $generated@@603)) true) (and (= 2 $generated@@609) (= (ControlFlow 0 21) 18))) $generated@@626))))
$generated@@628)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
