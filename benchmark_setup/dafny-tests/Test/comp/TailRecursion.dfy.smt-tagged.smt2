(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@T T@U T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@636 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@63) $generated@@78)) (= (type $generated@@64) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@77)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (= (type $generated@@150) $generated@@73))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@88 $generated@@151 $generated@@150 $generated@@152))
)))
(assert  (and (= (type $generated@@153) $generated@@73) (= (type $generated@@154) $generated@@91)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@91) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@89 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@73)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@73) (= (type $generated@@165) $generated@@73)) (= (type $generated@@166) $generated@@161)) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@73)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@73)) ($generated@@157 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@157 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@73)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@91) (= ($generated@@157 $generated@@182 $generated@@153)  (or (= $generated@@182 $generated@@154) (= ($generated@@180 $generated@@182) $generated@@153))))
 :pattern ( ($generated@@157 $generated@@182 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 18)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@91 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@76 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@91) (= (type $generated@@233) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@234) ($generated@@75 $generated@@4))) (= (type $generated@@236) $generated@@91)) (= (type $generated@@237) ($generated@@75 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (= (type $generated@@239) $generated@@73))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@91) (= (type $generated@@241) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@240 $generated@@239 $generated@@241) ($generated@@88 $generated@@240 $generated@@153 $generated@@241)))
 :pattern ( ($generated@@88 $generated@@240 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@161)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@73) (= (type $generated@@247) $generated@@73)) (= (type $generated@@248) $generated@@170)) (= (type $generated@@249) $generated@@170)) (= ($generated@@157 ($generated@@242 $generated@@248 $generated@@249) ($generated@@160 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@157 ($generated@@242 $generated@@248 $generated@@249) ($generated@@160 $generated@@246 $generated@@247)))
)))
(assert (= (type $generated@@250) ($generated@@75 $generated@@2)))
(assert (= ($generated@@83 $generated@@250) 0))
(assert (forall (($generated@@252 T@T) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@75 $generated@@252))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254))
)))
(assert (= ($generated@@251 $generated@@2 $generated@@65 $generated@@71) $generated@@250))
(assert  (not ($generated@@255 $generated@@250)))
(assert (= (type $generated@@256) ($generated@@75 $generated@@91)))
(assert (= ($generated@@83 $generated@@256) 0))
(assert (= ($generated@@251 $generated@@91 $generated@@65 $generated@@72) $generated@@256))
(assert  (not ($generated@@255 $generated@@256)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@161) (= (type $generated@@258) $generated@@161)) (= ($generated@@167 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@167 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@73)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@262) $generated@@73)) (= ($generated@@157 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@170) ($generated@@0 ($generated@@95 $generated@@261 $generated@@263))) ($generated@@243 $generated@@263 $generated@@262))
 :pattern ( ($generated@@95 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@157 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@73)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@267) $generated@@73)) (= ($generated@@157 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@170) ($generated@@0 ($generated@@95 $generated@@266 $generated@@268))) ($generated@@243 $generated@@268 $generated@@267))
 :pattern ( ($generated@@95 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@157 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@73) (= (type $generated@@278) $generated@@73)) (= (type $generated@@279) $generated@@170)) (= (type $generated@@280) $generated@@170)) (= (type $generated@@281) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@275 $generated@@281)) (= ($generated@@88 ($generated@@242 $generated@@279 $generated@@280) ($generated@@160 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@88 ($generated@@242 $generated@@279 $generated@@280) ($generated@@160 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@78)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@161) (= ($generated@@159 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@159 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@161) ($generated@@159 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@170) (= (type $generated@@287) $generated@@170)) (= $generated@@285 ($generated@@242 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@159 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 19)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@2) (= ($generated@@157 $generated@@296 $generated@@150) (<= ($generated@@269 0) ($generated $generated@@296))))
 :pattern ( ($generated@@157 $generated@@296 $generated@@150))
)))
(assert ($generated@@255 $generated@@60))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@170)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@73) (= (type $generated@@301) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@276 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@88 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@276 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@303) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@304) $generated@@170)) (= (type $generated@@305) $generated@@73)) ($generated@@146 $generated@@302 $generated@@303)) ($generated@@276 $generated@@304 $generated@@305 $generated@@302)) ($generated@@276 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@146 $generated@@302 $generated@@303) ($generated@@276 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@307) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@309) $generated@@73)) ($generated@@146 $generated@@306 $generated@@307)) ($generated@@88 $generated@@308 $generated@@309 $generated@@306)) ($generated@@88 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@146 $generated@@306 $generated@@307) ($generated@@88 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@90 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@93 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@90 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@95 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@90 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@95 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@95 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 21)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@90 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@95 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@95 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@354) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@352 $generated@@353 $generated@@354)) (and ($generated@@146 $generated@@353 $generated@@354) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@76 (type $generated@@356))))
 (=> (and (and (= (type $generated@@355) $generated@@91) (= (type $generated@@356) ($generated@@75 $generated@@357))) (not ($generated@@255 $generated@@356))) (= ($generated@@97 ($generated@@95 $generated@@353 $generated@@355) $generated@@356) ($generated@@97 ($generated@@95 $generated@@354 $generated@@355) $generated@@356))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@354 $generated@@355) $generated@@356))
))))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@93 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@90 $generated@@359 $generated@@2)) (= ($generated@@176 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@95 $generated@@358 $generated@@360))) (<= ($generated ($generated@@95 $generated@@358 $generated@@360)) ($generated@@310 $generated@@358))))
 :pattern ( ($generated@@95 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@176 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@170) ($generated@@243 $generated@@364 $generated@@150)) (and (= ($generated@@297 ($generated@@361 $generated@@2 $generated@@364)) $generated@@364) ($generated@@157 ($generated@@361 $generated@@2 $generated@@364) $generated@@150)))
 :pattern ( ($generated@@243 $generated@@364 $generated@@150))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@170) ($generated@@243 $generated@@365 $generated@@153)) (and (= ($generated@@297 ($generated@@361 $generated@@91 $generated@@365)) $generated@@365) ($generated@@157 ($generated@@361 $generated@@91 $generated@@365) $generated@@153)))
 :pattern ( ($generated@@243 $generated@@365 $generated@@153))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@170) ($generated@@243 $generated@@366 $generated@@239)) (and (= ($generated@@297 ($generated@@361 $generated@@91 $generated@@366)) $generated@@366) ($generated@@157 ($generated@@361 $generated@@91 $generated@@366) $generated@@239)))
 :pattern ( ($generated@@243 $generated@@366 $generated@@239))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@91) (= ($generated@@157 $generated@@367 $generated@@239)  (and ($generated@@157 $generated@@367 $generated@@153) (not (= $generated@@367 $generated@@154)))))
 :pattern ( ($generated@@157 $generated@@367 $generated@@239))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@320 (type $generated@@368))))
(let (($generated@@370 ($generated@@319 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@318 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@317 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@95 ($generated@@316 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@316 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@320 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@90 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@320 (type $generated@@375))))
(let (($generated@@377 ($generated@@319 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@318 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@317 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@95 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@338 (type $generated@@379))))
(let (($generated@@381 ($generated@@337 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@336 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@335 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@95 ($generated@@334 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@334 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@338 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@90 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@338 (type $generated@@386))))
(let (($generated@@388 ($generated@@337 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@336 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@335 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@95 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@391) $generated@@73)) (= ($generated@@157 $generated@@390 ($generated@@175 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@170) (< 0 ($generated ($generated@@95 $generated@@390 $generated@@392)))) ($generated@@243 $generated@@392 $generated@@391))
 :pattern ( ($generated@@95 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@157 $generated@@390 ($generated@@175 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@394) $generated@@91)) (=> (and (and ($generated@@275 $generated@@393) (and (not (= $generated@@394 $generated@@154)) (= ($generated@@180 $generated@@394) $generated@@153))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@393 $generated@@394) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@393 $generated@@394) $generated@@250) $generated@@150 $generated@@393)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@393 $generated@@394) $generated@@250))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@396) $generated@@91)) (=> (and (and ($generated@@275 $generated@@395) (and (not (= $generated@@396 $generated@@154)) (= ($generated@@180 $generated@@396) $generated@@153))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@395 $generated@@396) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@395 $generated@@396) $generated@@256) $generated@@239 $generated@@395)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@395 $generated@@396) $generated@@256))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@398) $generated@@73)) (= (type $generated@@399) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@397 ($generated@@259 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@170) ($generated@@0 ($generated@@95 $generated@@397 $generated@@400))) ($generated@@276 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@95 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@88 $generated@@397 ($generated@@259 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@402) $generated@@73)) (= (type $generated@@403) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@401 ($generated@@264 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@170) ($generated@@0 ($generated@@95 $generated@@401 $generated@@404))) ($generated@@276 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@95 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@88 $generated@@401 ($generated@@264 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@95 ($generated@@311 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@95 ($generated@@311 $generated@@406) $generated@@405)))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@90 $generated@@170 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@320 (type $generated@@410))))
(let (($generated@@412 ($generated@@319 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@90 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@414) $generated@@170)) (= ($generated@@0 ($generated@@95 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@95 ($generated@@316 $generated@@413) ($generated@@168 ($generated@@361 $generated@@161 $generated@@414)))) (= ($generated@@95 ($generated@@408 $generated@@413) ($generated@@168 ($generated@@361 $generated@@161 $generated@@414))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@414))))))
 :pattern ( ($generated@@95 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@90 $generated@@170 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@338 (type $generated@@418))))
(let (($generated@@420 ($generated@@337 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@90 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@422) $generated@@170)) (= ($generated@@0 ($generated@@95 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@95 ($generated@@334 $generated@@421) ($generated@@168 ($generated@@361 $generated@@161 $generated@@422)))) (= ($generated@@95 ($generated@@416 $generated@@421) ($generated@@168 ($generated@@361 $generated@@161 $generated@@422))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@422))))))
 :pattern ( ($generated@@95 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@319 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@318 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@95 ($generated@@372 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@95 ($generated@@316 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@95 ($generated@@408 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@95 ($generated@@316 $generated@@423) $generated@@427))
 :pattern ( ($generated@@95 ($generated@@408 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@95 ($generated@@372 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@337 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@336 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@95 ($generated@@383 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@95 ($generated@@334 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@95 ($generated@@416 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@95 ($generated@@334 $generated@@428) $generated@@432))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@95 ($generated@@383 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@73)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@437) $generated@@73)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@316 $generated@@436) $generated@@440))) (and ($generated@@276 ($generated@@95 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@276 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@95 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@95 ($generated@@316 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@88 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@73)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@445) $generated@@73)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@334 $generated@@444) $generated@@448))) (and ($generated@@276 ($generated@@95 ($generated@@416 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@276 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@444) $generated@@448))
 :pattern ( ($generated@@95 ($generated@@334 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@88 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@449) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@450) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@451) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@449 $generated@@451))) (and ($generated@@146 $generated@@449 $generated@@450) ($generated@@146 $generated@@450 $generated@@451))) ($generated@@146 $generated@@449 $generated@@451))
 :pattern ( ($generated@@146 $generated@@449 $generated@@450) ($generated@@146 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@90 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@338 (type $generated@@454))))
(let (($generated@@456 ($generated@@337 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@336 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@335 $generated@@456 $generated@@455)) (= ($generated@@334 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@334 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@338 (type $generated@@457))))
(let (($generated@@459 ($generated@@337 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@336 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@335 $generated@@459 $generated@@458)) (= ($generated@@383 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@383 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@338 (type $generated@@460))))
(let (($generated@@462 ($generated@@337 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@336 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@335 $generated@@462 $generated@@461)) (= ($generated@@415 $generated@@460) ($generated@@452 $generated@@170))))))
 :pattern ( ($generated@@415 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@320 (type $generated@@463))))
(let (($generated@@465 ($generated@@319 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@318 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@317 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@170) (= (type $generated@@467) $generated@@170)) ($generated@@0 ($generated@@95 ($generated@@407 $generated@@463) ($generated@@297 ($generated@@242 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@407 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@338 (type $generated@@468))))
(let (($generated@@470 ($generated@@337 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@336 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@335 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@170) (= (type $generated@@472) $generated@@170)) ($generated@@0 ($generated@@95 ($generated@@415 $generated@@468) ($generated@@297 ($generated@@242 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@415 $generated@@468))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@79)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@T) ) (!  (=> (and (= (type $generated@@475) $generated@@79) (= (type $generated@@476) $generated@@77)) (and (= ($generated@@473 ($generated@@251 $generated@@477 $generated@@475 $generated@@476)) $generated@@475) (= ($generated@@86 ($generated@@251 $generated@@477 $generated@@475 $generated@@476)) $generated@@476)))
 :pattern ( ($generated@@251 $generated@@477 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@170) ($generated@@243 $generated@@478 $generated@@46)) (and (= ($generated@@297 ($generated@@361 $generated@@2 $generated@@478)) $generated@@478) ($generated@@157 ($generated@@361 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@170) ($generated@@243 $generated@@479 $generated@@47)) (and (= ($generated@@297 ($generated@@361 $generated@@3 $generated@@479)) $generated@@479) ($generated@@157 ($generated@@361 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@170) ($generated@@243 $generated@@480 $generated@@44)) (and (= ($generated@@297 ($generated@@361 $generated@@4 $generated@@480)) $generated@@480) ($generated@@157 ($generated@@361 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 22))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@170) ($generated@@243 $generated@@482 $generated@@45)) (and (= ($generated@@297 ($generated@@361 $generated@@481 $generated@@482)) $generated@@482) ($generated@@157 ($generated@@361 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@73) (= ($generated@@243 ($generated@@297 $generated@@483) $generated@@484) ($generated@@157 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@243 ($generated@@297 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@93 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@90 $generated@@486 $generated@@2)) (<= 0 ($generated@@310 $generated@@485))))
 :pattern ( ($generated@@310 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@291 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@290 $generated@@488)) (<= 0 ($generated@@289 $generated@@487))))
 :pattern ( ($generated@@289 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@73)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@73) (= (type $generated@@492) $generated@@73)) (= ($generated@@489 ($generated@@433 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@433 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@73)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@73) (= (type $generated@@496) $generated@@73)) (= ($generated@@493 ($generated@@433 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@433 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@84 ($generated@@433 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@433 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@73) (= (type $generated@@502) $generated@@73)) (= ($generated@@499 ($generated@@441 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@441 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@73)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@73) (= (type $generated@@506) $generated@@73)) (= ($generated@@503 ($generated@@441 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@84 ($generated@@441 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@441 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@170) (= (type $generated@@510) $generated@@170)) (= ($generated@@282 ($generated@@242 $generated@@509 $generated@@510)) $generated@@63))
 :pattern ( ($generated@@242 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@73) (= (type $generated@@514) $generated@@73)) (= ($generated@@511 ($generated@@160 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@160 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@73)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@73) (= (type $generated@@518) $generated@@73)) (= ($generated@@515 ($generated@@160 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@160 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@170) (= (type $generated@@520) $generated@@170)) (= ($generated@@168 ($generated@@242 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@242 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@170) (= (type $generated@@522) $generated@@170)) (= ($generated@@169 ($generated@@242 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@242 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@291 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@290 $generated@@170)) (= (type $generated@@530) $generated@@73)) (= (type $generated@@531) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@289 $generated@@529))) ($generated@@276 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@88 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@89 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@89 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@73) (= ($generated@@535 ($generated@@259 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@259 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@73) (= ($generated@@84 ($generated@@259 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@73)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@73) (= ($generated@@539 ($generated@@264 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@264 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@73) (= ($generated@@84 ($generated@@264 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@73)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@73) (= ($generated@@543 ($generated@@175 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@175 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@73) (= ($generated@@84 ($generated@@175 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@73)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@73) (= ($generated@@84 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(= ($generated@@361 $generated@@552 ($generated@@297 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@297 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@554) $generated@@73)) (= (type $generated@@555) $generated@@73)) (= ($generated@@157 $generated@@553 ($generated@@433 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@316 $generated@@553) $generated@@556))) (and ($generated@@243 ($generated@@95 ($generated@@408 $generated@@553) $generated@@556) $generated@@555) ($generated@@243 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@95 ($generated@@408 $generated@@553) $generated@@556))
 :pattern ( ($generated@@95 ($generated@@316 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@157 $generated@@553 ($generated@@433 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@558) $generated@@73)) (= (type $generated@@559) $generated@@73)) (= ($generated@@157 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@334 $generated@@557) $generated@@560))) (and ($generated@@243 ($generated@@95 ($generated@@416 $generated@@557) $generated@@560) $generated@@559) ($generated@@243 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@557) $generated@@560))
 :pattern ( ($generated@@95 ($generated@@334 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@157 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@170) (= (type $generated@@564) $generated@@170)) (< ($generated@@561 $generated@@563) ($generated@@562 ($generated@@242 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@242 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@170)) (< ($generated@@561 $generated@@566) ($generated@@562 ($generated@@242 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@242 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@170) (= (type $generated@@568) $generated@@73)) (= (type $generated@@569) $generated@@73)) ($generated@@243 $generated@@567 ($generated@@433 $generated@@568 $generated@@569))) (and (= ($generated@@297 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@567)) $generated@@567) ($generated@@157 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@567) ($generated@@433 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@243 $generated@@567 ($generated@@433 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@170) (= (type $generated@@571) $generated@@73)) (= (type $generated@@572) $generated@@73)) ($generated@@243 $generated@@570 ($generated@@441 $generated@@571 $generated@@572))) (and (= ($generated@@297 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@570)) $generated@@570) ($generated@@157 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@570) ($generated@@441 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@243 $generated@@570 ($generated@@441 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@73) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@170)) ($generated@@243 $generated@@575 ($generated@@160 $generated@@573 $generated@@574))) (and (= ($generated@@297 ($generated@@361 $generated@@161 $generated@@575)) $generated@@575) ($generated@@157 ($generated@@361 $generated@@161 $generated@@575) ($generated@@160 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@243 $generated@@575 ($generated@@160 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@95 ($generated@@452 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@95 ($generated@@452 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@579) $generated@@91)) (and ($generated@@275 $generated@@578) (and (not (= $generated@@579 $generated@@154)) (= ($generated@@180 $generated@@579) $generated@@153)))) ($generated@@157 ($generated@@97 ($generated@@95 $generated@@578 $generated@@579) $generated@@250) $generated@@150))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@578 $generated@@579) $generated@@250))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@581) $generated@@91)) (and ($generated@@275 $generated@@580) (and (not (= $generated@@581 $generated@@154)) (= ($generated@@180 $generated@@581) $generated@@153)))) ($generated@@157 ($generated@@97 ($generated@@95 $generated@@580 $generated@@581) $generated@@256) $generated@@239))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@580 $generated@@581) $generated@@256))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@80)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@73) (= (type $generated@@585) $generated@@73)) (and (= ($generated@@84 ($generated@@160 $generated@@584 $generated@@585)) $generated@@64) (= ($generated@@582 ($generated@@160 $generated@@584 $generated@@585)) $generated@@69)))
 :pattern ( ($generated@@160 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@161) (= ($generated@@561 ($generated@@297 $generated@@586)) ($generated@@562 $generated@@586)))
 :pattern ( ($generated@@561 ($generated@@297 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@170) ($generated@@243 $generated@@587 ($generated@@89 0))) (and (= ($generated@@297 ($generated@@361 $generated@@2 $generated@@587)) $generated@@587) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@587) ($generated@@89 0))))
 :pattern ( ($generated@@243 $generated@@587 ($generated@@89 0)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@170) (= (type $generated@@589) $generated@@73)) ($generated@@243 $generated@@588 ($generated@@259 $generated@@589))) (and (= ($generated@@297 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@588)) $generated@@588) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@588) ($generated@@259 $generated@@589))))
 :pattern ( ($generated@@243 $generated@@588 ($generated@@259 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@170) (= (type $generated@@591) $generated@@73)) ($generated@@243 $generated@@590 ($generated@@264 $generated@@591))) (and (= ($generated@@297 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@590)) $generated@@590) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@590) ($generated@@264 $generated@@591))))
 :pattern ( ($generated@@243 $generated@@590 ($generated@@264 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@170) (= (type $generated@@593) $generated@@73)) ($generated@@243 $generated@@592 ($generated@@175 $generated@@593))) (and (= ($generated@@297 ($generated@@361 ($generated@@90 $generated@@170 $generated@@2) $generated@@592)) $generated@@592) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@2) $generated@@592) ($generated@@175 $generated@@593))))
 :pattern ( ($generated@@243 $generated@@592 ($generated@@175 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@170) (= (type $generated@@595) $generated@@73)) ($generated@@243 $generated@@594 ($generated@@523 $generated@@595))) (and (= ($generated@@297 ($generated@@361 ($generated@@290 $generated@@170) $generated@@594)) $generated@@594) ($generated@@157 ($generated@@361 ($generated@@290 $generated@@170) $generated@@594) ($generated@@523 $generated@@595))))
 :pattern ( ($generated@@243 $generated@@594 ($generated@@523 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (=> (and (and (and (= (type $generated@@596) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@597) $generated@@91)) (= (type $generated@@598) ($generated@@75 $generated@@600))) ($generated@@275 ($generated@@96 $generated@@596 $generated@@597 ($generated@@98 ($generated@@95 $generated@@596 $generated@@597) $generated@@598 $generated@@599)))) ($generated@@146 $generated@@596 ($generated@@96 $generated@@596 $generated@@597 ($generated@@98 ($generated@@95 $generated@@596 $generated@@597) $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@96 $generated@@596 $generated@@597 ($generated@@98 ($generated@@95 $generated@@596 $generated@@597) $generated@@598 $generated@@599)))
)))
(assert (= ($generated@@84 $generated@@150) $generated@@62))
(assert (= ($generated@@582 $generated@@150) $generated@@68))
(assert (= ($generated@@84 $generated@@153) $generated@@66))
(assert (= ($generated@@582 $generated@@153) $generated@@70))
(assert (= ($generated@@84 $generated@@239) $generated@@67))
(assert (= ($generated@@582 $generated@@239) $generated@@70))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@602) $generated@@73)) (= (type $generated@@603) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@601 ($generated@@175 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@170) (< 0 ($generated ($generated@@95 $generated@@601 $generated@@604)))) ($generated@@276 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@95 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@88 $generated@@601 ($generated@@175 $generated@@602) $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@161) (= (type $generated@@606) $generated@@73)) (= (type $generated@@607) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@275 $generated@@607) (and ($generated@@159 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@73) ($generated@@88 $generated@@605 ($generated@@160 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@88 $generated@@605 ($generated@@160 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@276 ($generated@@168 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@276 ($generated@@168 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@161) (= (type $generated@@610) $generated@@73)) (= (type $generated@@611) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@275 $generated@@611) (and ($generated@@159 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@73) ($generated@@88 $generated@@609 ($generated@@160 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@88 $generated@@609 ($generated@@160 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@276 ($generated@@169 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@276 ($generated@@169 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@170) (= (type $generated@@614) $generated@@170)) (= ($generated@@242 ($generated@@271 $generated@@613) ($generated@@271 $generated@@614)) ($generated@@271 ($generated@@242 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@242 ($generated@@271 $generated@@613) ($generated@@271 $generated@@614)))
)))
(assert (forall (($generated@@615 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@269 $generated@@615))) ($generated@@271 ($generated@@297 ($generated@@8 $generated@@615))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@269 $generated@@615))))
)))
(assert (forall (($generated@@616 T@U) ) (! (= ($generated@@297 ($generated@@271 $generated@@616)) ($generated@@271 ($generated@@297 $generated@@616)))
 :pattern ( ($generated@@297 ($generated@@271 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@291 (type $generated@@617))))
 (=> (and (= (type $generated@@617) ($generated@@290 $generated@@618)) (= ($generated@@289 $generated@@617) 0)) (= $generated@@617 ($generated@@288 $generated@@618))))
 :pattern ( ($generated@@289 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@620)))
 (=> (and (and (= (type $generated@@619) ($generated@@90 $generated@@622 $generated@@2)) (= (type $generated@@621) $generated@@2)) (<= 0 ($generated $generated@@621))) (= ($generated@@310 ($generated@@96 $generated@@619 $generated@@620 $generated@@621)) (+ (- ($generated@@310 $generated@@619) ($generated ($generated@@95 $generated@@619 $generated@@620))) ($generated $generated@@621)))))
 :pattern ( ($generated@@310 ($generated@@96 $generated@@619 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@624) $generated@@2)) ($generated@@88 $generated@@624 $generated@@46 $generated@@623))
 :pattern ( ($generated@@88 $generated@@624 $generated@@46 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@626) $generated@@3)) ($generated@@88 $generated@@626 $generated@@47 $generated@@625))
 :pattern ( ($generated@@88 $generated@@626 $generated@@47 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@628) $generated@@4)) ($generated@@88 $generated@@628 $generated@@44 $generated@@627))
 :pattern ( ($generated@@88 $generated@@628 $generated@@44 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@630) $generated@@481)) ($generated@@88 $generated@@630 $generated@@45 $generated@@629))
 :pattern ( ($generated@@88 $generated@@630 $generated@@45 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@632) $generated@@170)) ($generated@@88 $generated@@632 $generated@@48 $generated@@631))
 :pattern ( ($generated@@88 $generated@@632 $generated@@48 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@290 $generated@@170)) (= (type $generated@@634) $generated@@73)) (= ($generated@@157 $generated@@633 ($generated@@523 $generated@@634)) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@289 $generated@@633))) ($generated@@243 ($generated@@524 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@524 $generated@@633 $generated@@635))
))))
 :pattern ( ($generated@@157 $generated@@633 ($generated@@523 $generated@@634)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 Int) ) (!  (=> (= (type $generated@@637) ($generated@@290 $generated@@170)) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@289 $generated@@637))) (< ($generated@@562 ($generated@@361 $generated@@161 ($generated@@524 $generated@@637 $generated@@638))) ($generated@@636 $generated@@637))))
 :pattern ( ($generated@@562 ($generated@@361 $generated@@161 ($generated@@524 $generated@@637 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@640) $generated@@73)) (= (type $generated@@641) $generated@@73)) ($generated@@157 $generated@@639 ($generated@@433 $generated@@640 $generated@@641))) (and (and ($generated@@157 ($generated@@316 $generated@@639) ($generated@@259 $generated@@640)) ($generated@@157 ($generated@@372 $generated@@639) ($generated@@259 $generated@@641))) ($generated@@157 ($generated@@407 $generated@@639) ($generated@@259 ($generated@@160 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@157 $generated@@639 ($generated@@433 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@643) $generated@@73)) (= (type $generated@@644) $generated@@73)) ($generated@@157 $generated@@642 ($generated@@441 $generated@@643 $generated@@644))) (and (and ($generated@@157 ($generated@@334 $generated@@642) ($generated@@264 $generated@@643)) ($generated@@157 ($generated@@383 $generated@@642) ($generated@@264 $generated@@644))) ($generated@@157 ($generated@@415 $generated@@642) ($generated@@264 ($generated@@160 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@157 $generated@@642 ($generated@@441 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@2) ($generated@@157 $generated@@645 $generated@@46))
 :pattern ( ($generated@@157 $generated@@645 $generated@@46))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@3) ($generated@@157 $generated@@646 $generated@@47))
 :pattern ( ($generated@@157 $generated@@646 $generated@@47))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@4) ($generated@@157 $generated@@647 $generated@@44))
 :pattern ( ($generated@@157 $generated@@647 $generated@@44))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@481) ($generated@@157 $generated@@648 $generated@@45))
 :pattern ( ($generated@@157 $generated@@648 $generated@@45))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@170) ($generated@@157 $generated@@649 $generated@@48))
 :pattern ( ($generated@@157 $generated@@649 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(assert  (and (and (= (type $generated@@650) ($generated@@185 $generated@@91 $generated@@4)) (= (type $generated@@651) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@654) $generated@@91)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@656  (=> (and (= $generated@@650 ($generated@@184 $generated@@154 $generated@@651 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@657  (=> (and (and (and ($generated@@275 $generated@@651) ($generated@@652 $generated@@651)) (<= ($generated@@269 0) $generated@@653)) (and (and (not (= $generated@@654 $generated@@154)) ($generated@@157 $generated@@654 $generated@@239)) (and (= 1 $generated@@655) (= (ControlFlow 0 3) 2)))) $generated@@656)))
$generated@@657)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 (T@U T@U) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@141))
)) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (= (type $generated@@144) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@143 ($generated@@139 $generated@@142) $generated@@144)  (or (= $generated@@143 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@143 ($generated@@139 $generated@@142) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@78 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@78 0)))
)))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@80)) (= (type $generated@@151) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@150 ($generated@@147 $generated@@149) $generated@@151) ($generated@@77 $generated@@150 ($generated@@139 $generated@@149) $generated@@151)))
 :pattern ( ($generated@@77 $generated@@150 ($generated@@147 $generated@@149) $generated@@151))
)))
(assert  (and (= ($generated@@1 $generated@@154) 14) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@67) (= (type $generated@@158) $generated@@67)) (= (type $generated@@159) $generated@@154)) ($generated@@145 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@145 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@154) (= (type $generated@@167) $generated@@154)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@67)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@79 $generated@@163 $generated@@2)) (= (type $generated@@172) $generated@@67)) ($generated@@145 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@145 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@80 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@70 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@224) ($generated@@69 $generated@@4))) (= (type $generated@@226) $generated@@80)) (= (type $generated@@227) ($generated@@69 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@154)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@67) (= (type $generated@@234) $generated@@67)) (= (type $generated@@235) $generated@@163)) (= (type $generated@@236) $generated@@163)) (= ($generated@@145 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@145 ($generated@@229 $generated@@235 $generated@@236) ($generated@@153 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@154) (= (type $generated@@238) $generated@@154)) (= ($generated@@160 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@160 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@163) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@145 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@67)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@247) $generated@@67)) (= ($generated@@145 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@163) ($generated@@0 ($generated@@84 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@84 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@145 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@67) (= (type $generated@@256) $generated@@67)) (= (type $generated@@257) $generated@@163)) (= (type $generated@@258) $generated@@163)) (= (type $generated@@259) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@253 $generated@@259)) (= ($generated@@77 ($generated@@229 $generated@@257 $generated@@258) ($generated@@153 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@77 ($generated@@229 $generated@@257 $generated@@258) ($generated@@153 $generated@@255 $generated@@256) $generated@@259))
)))
(assert  (=> (< 0 $generated@@260) (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@67) (= (type $generated@@263) $generated@@80)) ($generated@@145 ($generated@@8 ($generated@@261 $generated@@262 $generated@@263)) $generated@@46))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@154) (= ($generated@@152 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@154) ($generated@@152 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@163) (= (type $generated@@269) $generated@@163)) (= $generated@@267 ($generated@@229 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@152 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@278 $generated@@279 $generated@@280)) $generated@@80)
 :pattern ( ($generated@@278 $generated@@279 $generated@@280))
)))
(assert  (=> (< 0 $generated@@260) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@67) (= (type $generated@@282) $generated@@80)) ($generated@@145 ($generated@@278 $generated@@281 $generated@@282) ($generated@@139 $generated@@281)))
 :pattern ( ($generated@@278 $generated@@281 $generated@@282))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@67) (= (type $generated@@284) $generated@@80)) (= ($generated@@145 $generated@@284 ($generated@@147 $generated@@283))  (and ($generated@@145 $generated@@284 ($generated@@139 $generated@@283)) (not (= $generated@@284 $generated@@140)))))
 :pattern ( ($generated@@145 $generated@@284 ($generated@@147 $generated@@283)))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@163)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@67) (= (type $generated@@289) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@254 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@77 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@254 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@292) $generated@@163)) (= (type $generated@@293) $generated@@67)) ($generated@@135 $generated@@290 $generated@@291)) ($generated@@254 $generated@@292 $generated@@293 $generated@@290)) ($generated@@254 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@135 $generated@@290 $generated@@291) ($generated@@254 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@297) $generated@@67)) ($generated@@135 $generated@@294 $generated@@295)) ($generated@@77 $generated@@296 $generated@@297 $generated@@294)) ($generated@@77 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@135 $generated@@294 $generated@@295) ($generated@@77 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@79 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@82 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@79 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@84 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@72)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@67) (and (= ($generated@@75 ($generated@@139 $generated@@306)) $generated@@63) (= ($generated@@304 ($generated@@139 $generated@@306)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@147 $generated@@307)) $generated@@64) (= ($generated@@304 ($generated@@147 $generated@@307)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 18)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@79 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@84 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@84 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 19)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@79 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@84 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@84 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@82 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@79 $generated@@345 $generated@@2)) (= ($generated@@169 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@84 $generated@@344 $generated@@346))) (<= ($generated ($generated@@84 $generated@@344 $generated@@346)) ($generated@@298 $generated@@344))))
 :pattern ( ($generated@@84 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@169 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (= (type ($generated@@347 $generated@@348)) $generated@@67)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@80)) (= ($generated@@145 $generated@@350 ($generated@@139 $generated@@349))  (or (= $generated@@350 $generated@@140) (= ($generated@@347 $generated@@350) ($generated@@139 $generated@@349)))))
 :pattern ( ($generated@@145 $generated@@350 ($generated@@139 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@308 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@312 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@79 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@312 (type $generated@@358))))
(let (($generated@@360 ($generated@@311 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@310 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@309 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@84 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@330 (type $generated@@362))))
(let (($generated@@364 ($generated@@329 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@328 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@327 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@326 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@330 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@79 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@330 (type $generated@@369))))
(let (($generated@@371 ($generated@@329 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@328 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@327 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@79 $generated@@163 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@145 $generated@@373 ($generated@@168 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@163) (< 0 ($generated ($generated@@84 $generated@@373 $generated@@375)))) ($generated@@230 $generated@@375 $generated@@374))
 :pattern ( ($generated@@84 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@145 $generated@@373 ($generated@@168 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@376 ($generated@@239 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@163) ($generated@@0 ($generated@@84 $generated@@376 $generated@@379))) ($generated@@254 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@84 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@77 $generated@@376 ($generated@@239 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@79 $generated@@163 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@380 ($generated@@244 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@163) ($generated@@0 ($generated@@84 $generated@@380 $generated@@383))) ($generated@@254 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@84 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@77 $generated@@380 ($generated@@244 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@84 ($generated@@299 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@84 ($generated@@299 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@79 $generated@@163 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@312 (type $generated@@392))))
(let (($generated@@394 ($generated@@311 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@310 $generated@@163 $generated@@163)) (= (type $generated@@396) $generated@@163)) (= ($generated@@0 ($generated@@84 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@308 $generated@@395) ($generated@@161 ($generated@@387 $generated@@154 $generated@@396)))) (= ($generated@@84 ($generated@@388 $generated@@395) ($generated@@161 ($generated@@387 $generated@@154 $generated@@396))) ($generated@@162 ($generated@@387 $generated@@154 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@163 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@330 (type $generated@@400))))
(let (($generated@@402 ($generated@@329 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@79 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@328 $generated@@163 $generated@@163)) (= (type $generated@@404) $generated@@163)) (= ($generated@@0 ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@84 ($generated@@326 $generated@@403) ($generated@@161 ($generated@@387 $generated@@154 $generated@@404)))) (= ($generated@@84 ($generated@@398 $generated@@403) ($generated@@161 ($generated@@387 $generated@@154 $generated@@404))) ($generated@@162 ($generated@@387 $generated@@154 $generated@@404))))))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@311 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@310 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@84 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@84 ($generated@@308 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@84 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@84 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@329 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@328 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@84 ($generated@@326 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@310 $generated@@163 $generated@@163)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@418) $generated@@422))) (and ($generated@@254 ($generated@@84 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@254 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@328 $generated@@163 $generated@@163)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@426) $generated@@430))) (and ($generated@@254 ($generated@@84 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@254 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@433) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@431 $generated@@433))) (and ($generated@@135 $generated@@431 $generated@@432) ($generated@@135 $generated@@432 $generated@@433))) ($generated@@135 $generated@@431 $generated@@433))
 :pattern ( ($generated@@135 $generated@@431 $generated@@432) ($generated@@135 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@79 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@330 (type $generated@@436))))
(let (($generated@@438 ($generated@@329 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@328 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@327 $generated@@438 $generated@@437)) (= ($generated@@326 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@326 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@330 (type $generated@@439))))
(let (($generated@@441 ($generated@@329 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@328 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@327 $generated@@441 $generated@@440)) (= ($generated@@366 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@366 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@330 (type $generated@@442))))
(let (($generated@@444 ($generated@@329 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@328 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@327 $generated@@444 $generated@@443)) (= ($generated@@397 $generated@@442) ($generated@@434 $generated@@163))))))
 :pattern ( ($generated@@397 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@312 (type $generated@@445))))
(let (($generated@@447 ($generated@@311 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@310 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@309 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@163) (= (type $generated@@449) $generated@@163)) ($generated@@0 ($generated@@84 ($generated@@386 $generated@@445) ($generated@@285 ($generated@@229 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@386 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@330 (type $generated@@450))))
(let (($generated@@452 ($generated@@329 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@328 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@327 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@163) (= (type $generated@@454) $generated@@163)) ($generated@@0 ($generated@@84 ($generated@@397 $generated@@450) ($generated@@285 ($generated@@229 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@397 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@163) ($generated@@230 $generated@@455 $generated@@46)) (and (= ($generated@@285 ($generated@@387 $generated@@2 $generated@@455)) $generated@@455) ($generated@@145 ($generated@@387 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@230 $generated@@456 $generated@@47)) (and (= ($generated@@285 ($generated@@387 $generated@@3 $generated@@456)) $generated@@456) ($generated@@145 ($generated@@387 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@163) ($generated@@230 $generated@@457 $generated@@44)) (and (= ($generated@@285 ($generated@@387 $generated@@4 $generated@@457)) $generated@@457) ($generated@@145 ($generated@@387 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@230 $generated@@459 $generated@@45)) (and (= ($generated@@285 ($generated@@387 $generated@@458 $generated@@459)) $generated@@459) ($generated@@145 ($generated@@387 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@67) (= ($generated@@230 ($generated@@285 $generated@@460) $generated@@461) ($generated@@145 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@230 ($generated@@285 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@298 $generated@@462))))
 :pattern ( ($generated@@298 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@273 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@272 $generated@@465)) (<= 0 ($generated@@271 $generated@@464))))
 :pattern ( ($generated@@271 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@415 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@415 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@415 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@423 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@163) (= (type $generated@@487) $generated@@163)) (= ($generated@@264 ($generated@@229 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@153 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@153 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@153 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@153 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@163) (= (type $generated@@497) $generated@@163)) (= ($generated@@161 ($generated@@229 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@229 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@163) (= (type $generated@@499) $generated@@163)) (= ($generated@@162 ($generated@@229 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@229 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@273 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@272 $generated@@163)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@271 $generated@@506))) ($generated@@254 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@239 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@239 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@244 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@244 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@244 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@168 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@168 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@168 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@139 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@139 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@147 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@147 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@387 $generated@@535 ($generated@@285 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@285 $generated@@534))
)))
(assert  (=> (< 0 $generated@@260) (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@538) $generated@@80)) (and ($generated@@253 $generated@@537) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@537 $generated@@538) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@261 $generated@@536 $generated@@538)) $generated@@46 $generated@@537))
 :pattern ( ($generated@@261 $generated@@536 $generated@@538) ($generated@@86 ($generated@@84 $generated@@537 $generated@@538) $generated@@60))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@310 $generated@@163 $generated@@163)) (= (type $generated@@540) $generated@@67)) (= (type $generated@@541) $generated@@67)) (= ($generated@@145 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@539) $generated@@542))) (and ($generated@@230 ($generated@@84 ($generated@@388 $generated@@539) $generated@@542) $generated@@541) ($generated@@230 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@84 ($generated@@388 $generated@@539) $generated@@542))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@145 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@328 $generated@@163 $generated@@163)) (= (type $generated@@544) $generated@@67)) (= (type $generated@@545) $generated@@67)) (= ($generated@@145 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) ($generated@@0 ($generated@@84 ($generated@@326 $generated@@543) $generated@@546))) (and ($generated@@230 ($generated@@84 ($generated@@398 $generated@@543) $generated@@546) $generated@@545) ($generated@@230 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@543) $generated@@546))
 :pattern ( ($generated@@84 ($generated@@326 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@145 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@163) (= (type $generated@@550) $generated@@163)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@229 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@163)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@229 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@163) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@230 $generated@@553 ($generated@@415 $generated@@554 $generated@@555))) (and (= ($generated@@285 ($generated@@387 ($generated@@310 $generated@@163 $generated@@163) $generated@@553)) $generated@@553) ($generated@@145 ($generated@@387 ($generated@@310 $generated@@163 $generated@@163) $generated@@553) ($generated@@415 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@230 $generated@@553 ($generated@@415 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@163) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@67)) ($generated@@230 $generated@@556 ($generated@@423 $generated@@557 $generated@@558))) (and (= ($generated@@285 ($generated@@387 ($generated@@328 $generated@@163 $generated@@163) $generated@@556)) $generated@@556) ($generated@@145 ($generated@@387 ($generated@@328 $generated@@163 $generated@@163) $generated@@556) ($generated@@423 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@230 $generated@@556 ($generated@@423 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) $generated@@163)) ($generated@@230 $generated@@561 ($generated@@153 $generated@@559 $generated@@560))) (and (= ($generated@@285 ($generated@@387 $generated@@154 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@387 $generated@@154 $generated@@561) ($generated@@153 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@230 $generated@@561 ($generated@@153 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
 (not ($generated@@0 ($generated@@84 ($generated@@434 $generated@@563) $generated@@562))))
 :pattern ( (let (($generated@@563 (type $generated@@562)))
($generated@@84 ($generated@@434 $generated@@563) $generated@@562)))
)))
(assert  (=> (< 0 $generated@@260) (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@67) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@566) $generated@@80)) (and ($generated@@253 $generated@@565) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@565 $generated@@566) $generated@@60)))) ($generated@@77 ($generated@@278 $generated@@564 $generated@@566) ($generated@@139 $generated@@564) $generated@@565))
 :pattern ( ($generated@@278 $generated@@564 $generated@@566) ($generated@@86 ($generated@@84 $generated@@565 $generated@@566) $generated@@60))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@67) (= (type $generated@@568) $generated@@67)) (and (= ($generated@@75 ($generated@@153 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@304 ($generated@@153 $generated@@567 $generated@@568)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@154) (= ($generated@@547 ($generated@@285 $generated@@569)) ($generated@@548 $generated@@569)))
 :pattern ( ($generated@@547 ($generated@@285 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@163) ($generated@@230 $generated@@570 ($generated@@78 0))) (and (= ($generated@@285 ($generated@@387 $generated@@2 $generated@@570)) $generated@@570) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@570) ($generated@@78 0))))
 :pattern ( ($generated@@230 $generated@@570 ($generated@@78 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@67)) ($generated@@230 $generated@@571 ($generated@@239 $generated@@572))) (and (= ($generated@@285 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@571)) $generated@@571) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@571) ($generated@@239 $generated@@572))))
 :pattern ( ($generated@@230 $generated@@571 ($generated@@239 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@163) (= (type $generated@@574) $generated@@67)) ($generated@@230 $generated@@573 ($generated@@244 $generated@@574))) (and (= ($generated@@285 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@573)) $generated@@573) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@4) $generated@@573) ($generated@@244 $generated@@574))))
 :pattern ( ($generated@@230 $generated@@573 ($generated@@244 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@163) (= (type $generated@@576) $generated@@67)) ($generated@@230 $generated@@575 ($generated@@168 $generated@@576))) (and (= ($generated@@285 ($generated@@387 ($generated@@79 $generated@@163 $generated@@2) $generated@@575)) $generated@@575) ($generated@@145 ($generated@@387 ($generated@@79 $generated@@163 $generated@@2) $generated@@575) ($generated@@168 $generated@@576))))
 :pattern ( ($generated@@230 $generated@@575 ($generated@@168 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@163) (= (type $generated@@578) $generated@@67)) ($generated@@230 $generated@@577 ($generated@@500 $generated@@578))) (and (= ($generated@@285 ($generated@@387 ($generated@@272 $generated@@163) $generated@@577)) $generated@@577) ($generated@@145 ($generated@@387 ($generated@@272 $generated@@163) $generated@@577) ($generated@@500 $generated@@578))))
 :pattern ( ($generated@@230 $generated@@577 ($generated@@500 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@67) (= (type $generated@@580) $generated@@163)) ($generated@@230 $generated@@580 ($generated@@139 $generated@@579))) (and (= ($generated@@285 ($generated@@387 $generated@@80 $generated@@580)) $generated@@580) ($generated@@145 ($generated@@387 $generated@@80 $generated@@580) ($generated@@139 $generated@@579))))
 :pattern ( ($generated@@230 $generated@@580 ($generated@@139 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@67) (= (type $generated@@582) $generated@@163)) ($generated@@230 $generated@@582 ($generated@@147 $generated@@581))) (and (= ($generated@@285 ($generated@@387 $generated@@80 $generated@@582)) $generated@@582) ($generated@@145 ($generated@@387 $generated@@80 $generated@@582) ($generated@@147 $generated@@581))))
 :pattern ( ($generated@@230 $generated@@582 ($generated@@147 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (=> (and (and (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@80)) (= (type $generated@@585) ($generated@@69 $generated@@587))) ($generated@@253 ($generated@@85 $generated@@583 $generated@@584 ($generated@@87 ($generated@@84 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))) ($generated@@135 $generated@@583 ($generated@@85 $generated@@583 $generated@@584 ($generated@@87 ($generated@@84 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@85 $generated@@583 $generated@@584 ($generated@@87 ($generated@@84 $generated@@583 $generated@@584) $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@79 $generated@@163 $generated@@2)) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@588 ($generated@@168 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@163) (< 0 ($generated ($generated@@84 $generated@@588 $generated@@591)))) ($generated@@254 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@84 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@77 $generated@@588 ($generated@@168 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@154) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@253 $generated@@594) (and ($generated@@152 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@67) ($generated@@77 $generated@@592 ($generated@@153 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@77 $generated@@592 ($generated@@153 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@254 ($generated@@161 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@254 ($generated@@161 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@154) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@253 $generated@@598) (and ($generated@@152 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@67) ($generated@@77 $generated@@596 ($generated@@153 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@77 $generated@@596 ($generated@@153 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@254 ($generated@@162 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@254 ($generated@@162 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@163) (= (type $generated@@601) $generated@@163)) (= ($generated@@229 ($generated@@249 $generated@@600) ($generated@@249 $generated@@601)) ($generated@@249 ($generated@@229 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@229 ($generated@@249 $generated@@600) ($generated@@249 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@285 ($generated@@249 $generated@@602)) ($generated@@249 ($generated@@285 $generated@@602)))
 :pattern ( ($generated@@285 ($generated@@249 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@273 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@272 $generated@@604)) (= ($generated@@271 $generated@@603) 0)) (= $generated@@603 ($generated@@270 $generated@@604))))
 :pattern ( ($generated@@271 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@79 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@298 ($generated@@85 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@298 $generated@@605) ($generated ($generated@@84 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@298 ($generated@@85 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@2)) ($generated@@77 $generated@@610 $generated@@46 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@612) $generated@@3)) ($generated@@77 $generated@@612 $generated@@47 $generated@@611))
 :pattern ( ($generated@@77 $generated@@612 $generated@@47 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@614) $generated@@4)) ($generated@@77 $generated@@614 $generated@@44 $generated@@613))
 :pattern ( ($generated@@77 $generated@@614 $generated@@44 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@616) $generated@@458)) ($generated@@77 $generated@@616 $generated@@45 $generated@@615))
 :pattern ( ($generated@@77 $generated@@616 $generated@@45 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@618) $generated@@163)) ($generated@@77 $generated@@618 $generated@@48 $generated@@617))
 :pattern ( ($generated@@77 $generated@@618 $generated@@48 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@272 $generated@@163)) (= (type $generated@@620) $generated@@67)) (= ($generated@@145 $generated@@619 ($generated@@500 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@271 $generated@@619))) ($generated@@230 ($generated@@501 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@501 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@145 $generated@@619 ($generated@@500 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@272 $generated@@163)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@271 $generated@@623))) (< ($generated@@548 ($generated@@387 $generated@@154 ($generated@@501 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@548 ($generated@@387 $generated@@154 ($generated@@501 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@310 $generated@@163 $generated@@163)) (= (type $generated@@626) $generated@@67)) (= (type $generated@@627) $generated@@67)) ($generated@@145 $generated@@625 ($generated@@415 $generated@@626 $generated@@627))) (and (and ($generated@@145 ($generated@@308 $generated@@625) ($generated@@239 $generated@@626)) ($generated@@145 ($generated@@355 $generated@@625) ($generated@@239 $generated@@627))) ($generated@@145 ($generated@@386 $generated@@625) ($generated@@239 ($generated@@153 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@145 $generated@@625 ($generated@@415 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@328 $generated@@163 $generated@@163)) (= (type $generated@@629) $generated@@67)) (= (type $generated@@630) $generated@@67)) ($generated@@145 $generated@@628 ($generated@@423 $generated@@629 $generated@@630))) (and (and ($generated@@145 ($generated@@326 $generated@@628) ($generated@@244 $generated@@629)) ($generated@@145 ($generated@@366 $generated@@628) ($generated@@244 $generated@@630))) ($generated@@145 ($generated@@397 $generated@@628) ($generated@@244 ($generated@@153 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@145 $generated@@628 ($generated@@423 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@145 $generated@@631 $generated@@46))
 :pattern ( ($generated@@145 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@145 $generated@@632 $generated@@47))
 :pattern ( ($generated@@145 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@145 $generated@@633 $generated@@44))
 :pattern ( ($generated@@145 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@458) ($generated@@145 $generated@@634 $generated@@45))
 :pattern ( ($generated@@145 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@163) ($generated@@145 $generated@@635 $generated@@48))
 :pattern ( ($generated@@145 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(assert  (and (and (and (and (= (type $generated@@636) $generated@@80) (= (type $generated@@637) ($generated@@175 $generated@@80 $generated@@4))) (= (type $generated@@638) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@640) $generated@@67)) (= (type $generated@@641) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@642 true))
(let (($generated@@643  (=> (not (= $generated@@636 $generated@@140)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= $generated@@636 $generated@@140))) (=> (not (= $generated@@636 $generated@@140)) (=> (= (ControlFlow 0 3) 1) $generated@@642))))))
(let (($generated@@644  (=> (and (= $generated@@636 $generated@@140) (= (ControlFlow 0 2) 1)) $generated@@642)))
(let (($generated@@645  (=> (= $generated@@637 ($generated@@174 $generated@@140 $generated@@638 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@644) (=> (= (ControlFlow 0 5) 3) $generated@@643)))))
(let (($generated@@646  (=> (and (and (and ($generated@@253 $generated@@638) ($generated@@639 $generated@@638)) (and ($generated@@145 $generated@@636 ($generated@@139 $generated@@640)) ($generated@@77 $generated@@636 ($generated@@139 $generated@@640) $generated@@638))) (and (and (not (= $generated@@641 $generated@@140)) ($generated@@145 $generated@@641 ($generated@@147 $generated@@640))) (and (= 1 $generated@@260) (= (ControlFlow 0 6) 5)))) $generated@@645)))
$generated@@646))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U) T@U)
(declare-fun $generated@@161 () T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@T T@U T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Bool)
(declare-fun $generated@@276 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U T@U) Bool)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@63) $generated@@78)) (= (type $generated@@64) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@77)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (= (type $generated@@150) $generated@@73))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@151 $generated@@150 $generated@@152))
 :pattern ( ($generated@@88 $generated@@151 $generated@@150 $generated@@152))
)))
(assert  (and (= (type $generated@@153) $generated@@73) (= (type $generated@@154) $generated@@91)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@91) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@155 $generated@@153 $generated@@156)  (or (= $generated@@155 $generated@@154) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@155 $generated@@153 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@89 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@161) 16) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@162 $generated@@163)) $generated@@73)
 :pattern ( ($generated@@160 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@73) (= (type $generated@@165) $generated@@73)) (= (type $generated@@166) $generated@@161)) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165))) ($generated@@159 $generated@@166))
 :pattern ( ($generated@@159 $generated@@166) ($generated@@157 $generated@@166 ($generated@@160 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 17) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@161) (= (type $generated@@174) $generated@@161)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@73)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@179) $generated@@73)) ($generated@@157 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@157 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@73)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@91) (= ($generated@@157 $generated@@182 $generated@@153)  (or (= $generated@@182 $generated@@154) (= ($generated@@180 $generated@@182) $generated@@153))))
 :pattern ( ($generated@@157 $generated@@182 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 18)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@91 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@76 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@91) (= (type $generated@@233) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@234) ($generated@@75 $generated@@4))) (= (type $generated@@236) $generated@@91)) (= (type $generated@@237) ($generated@@75 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (= (type $generated@@239) $generated@@73))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@91) (= (type $generated@@241) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@240 $generated@@239 $generated@@241) ($generated@@88 $generated@@240 $generated@@153 $generated@@241)))
 :pattern ( ($generated@@88 $generated@@240 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@161)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@73) (= (type $generated@@247) $generated@@73)) (= (type $generated@@248) $generated@@170)) (= (type $generated@@249) $generated@@170)) (= ($generated@@157 ($generated@@242 $generated@@248 $generated@@249) ($generated@@160 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@157 ($generated@@242 $generated@@248 $generated@@249) ($generated@@160 $generated@@246 $generated@@247)))
)))
(assert (= (type $generated@@250) ($generated@@75 $generated@@2)))
(assert (= ($generated@@83 $generated@@250) 0))
(assert (forall (($generated@@252 T@T) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@75 $generated@@252))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253 $generated@@254))
)))
(assert (= ($generated@@251 $generated@@2 $generated@@65 $generated@@71) $generated@@250))
(assert  (not ($generated@@255 $generated@@250)))
(assert (= (type $generated@@256) ($generated@@75 $generated@@91)))
(assert (= ($generated@@83 $generated@@256) 0))
(assert (= ($generated@@251 $generated@@91 $generated@@65 $generated@@72) $generated@@256))
(assert  (not ($generated@@255 $generated@@256)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@161) (= (type $generated@@258) $generated@@161)) (= ($generated@@167 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@167 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@73)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@262) $generated@@73)) (= ($generated@@157 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@170) ($generated@@0 ($generated@@95 $generated@@261 $generated@@263))) ($generated@@243 $generated@@263 $generated@@262))
 :pattern ( ($generated@@95 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@157 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@73)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@267) $generated@@73)) (= ($generated@@157 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@170) ($generated@@0 ($generated@@95 $generated@@266 $generated@@268))) ($generated@@243 $generated@@268 $generated@@267))
 :pattern ( ($generated@@95 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@157 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@277) $generated@@73) (= (type $generated@@278) $generated@@73)) (= (type $generated@@279) $generated@@170)) (= (type $generated@@280) $generated@@170)) (= (type $generated@@281) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@275 $generated@@281)) (= ($generated@@88 ($generated@@242 $generated@@279 $generated@@280) ($generated@@160 $generated@@277 $generated@@278) $generated@@281)  (and ($generated@@276 $generated@@279 $generated@@277 $generated@@281) ($generated@@276 $generated@@280 $generated@@278 $generated@@281))))
 :pattern ( ($generated@@88 ($generated@@242 $generated@@279 $generated@@280) ($generated@@160 $generated@@277 $generated@@278) $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@78)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@161) (= ($generated@@159 $generated@@284) (= ($generated@@282 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@159 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@161) ($generated@@159 $generated@@285)) (exists (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (and (= (type $generated@@286) $generated@@170) (= (type $generated@@287) $generated@@170)) (= $generated@@285 ($generated@@242 $generated@@286 $generated@@287)))
 :no-pattern (type $generated@@286)
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
)))
 :pattern ( ($generated@@159 $generated@@285))
)))
(assert  (and (and (forall (($generated@@292 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@292)) 19)) (forall (($generated@@293 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@293)) $generated@@293)
 :pattern ( ($generated@@290 $generated@@293))
))) (forall (($generated@@294 T@T) ) (! (= (type ($generated@@288 $generated@@294)) ($generated@@290 $generated@@294))
 :pattern ( ($generated@@288 $generated@@294))
))))
(assert (forall (($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@295)) 0)
 :pattern ( ($generated@@288 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@2) (= ($generated@@157 $generated@@296 $generated@@150) (<= ($generated@@269 0) ($generated $generated@@296))))
 :pattern ( ($generated@@157 $generated@@296 $generated@@150))
)))
(assert ($generated@@255 $generated@@60))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@170)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@73) (= (type $generated@@301) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@276 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@88 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@276 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@303) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@304) $generated@@170)) (= (type $generated@@305) $generated@@73)) ($generated@@146 $generated@@302 $generated@@303)) ($generated@@276 $generated@@304 $generated@@305 $generated@@302)) ($generated@@276 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@146 $generated@@302 $generated@@303) ($generated@@276 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@307) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@309) $generated@@73)) ($generated@@146 $generated@@306 $generated@@307)) ($generated@@88 $generated@@308 $generated@@309 $generated@@306)) ($generated@@88 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@146 $generated@@306 $generated@@307) ($generated@@88 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@90 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@93 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@90 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@95 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 20)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@90 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@95 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@95 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 21)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@90 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@95 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@95 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@354) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@352 $generated@@353 $generated@@354)) (and ($generated@@146 $generated@@353 $generated@@354) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@76 (type $generated@@356))))
 (=> (and (and (= (type $generated@@355) $generated@@91) (= (type $generated@@356) ($generated@@75 $generated@@357))) (not ($generated@@255 $generated@@356))) (= ($generated@@97 ($generated@@95 $generated@@353 $generated@@355) $generated@@356) ($generated@@97 ($generated@@95 $generated@@354 $generated@@355) $generated@@356))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@354 $generated@@355) $generated@@356))
))))
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@93 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@90 $generated@@359 $generated@@2)) (= ($generated@@176 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@95 $generated@@358 $generated@@360))) (<= ($generated ($generated@@95 $generated@@358 $generated@@360)) ($generated@@310 $generated@@358))))
 :pattern ( ($generated@@95 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@176 $generated@@358))
)))
(assert (forall (($generated@@362 T@T) ($generated@@363 T@U) ) (! (= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@362)
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@170) ($generated@@243 $generated@@364 $generated@@150)) (and (= ($generated@@297 ($generated@@361 $generated@@2 $generated@@364)) $generated@@364) ($generated@@157 ($generated@@361 $generated@@2 $generated@@364) $generated@@150)))
 :pattern ( ($generated@@243 $generated@@364 $generated@@150))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@170) ($generated@@243 $generated@@365 $generated@@153)) (and (= ($generated@@297 ($generated@@361 $generated@@91 $generated@@365)) $generated@@365) ($generated@@157 ($generated@@361 $generated@@91 $generated@@365) $generated@@153)))
 :pattern ( ($generated@@243 $generated@@365 $generated@@153))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@170) ($generated@@243 $generated@@366 $generated@@239)) (and (= ($generated@@297 ($generated@@361 $generated@@91 $generated@@366)) $generated@@366) ($generated@@157 ($generated@@361 $generated@@91 $generated@@366) $generated@@239)))
 :pattern ( ($generated@@243 $generated@@366 $generated@@239))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (= (type $generated@@367) $generated@@91) (= ($generated@@157 $generated@@367 $generated@@239)  (and ($generated@@157 $generated@@367 $generated@@153) (not (= $generated@@367 $generated@@154)))))
 :pattern ( ($generated@@157 $generated@@367 $generated@@239))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@320 (type $generated@@368))))
(let (($generated@@370 ($generated@@319 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@318 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@317 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@95 ($generated@@316 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@316 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@320 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@90 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@320 (type $generated@@375))))
(let (($generated@@377 ($generated@@319 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@318 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@317 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@95 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@338 (type $generated@@379))))
(let (($generated@@381 ($generated@@337 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@336 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@335 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@95 ($generated@@334 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@334 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@338 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@90 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@338 (type $generated@@386))))
(let (($generated@@388 ($generated@@337 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@336 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@335 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@95 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@391) $generated@@73)) (= ($generated@@157 $generated@@390 ($generated@@175 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@170) (< 0 ($generated ($generated@@95 $generated@@390 $generated@@392)))) ($generated@@243 $generated@@392 $generated@@391))
 :pattern ( ($generated@@95 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@157 $generated@@390 ($generated@@175 $generated@@391)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@394) $generated@@91)) (=> (and (and ($generated@@275 $generated@@393) (and (not (= $generated@@394 $generated@@154)) (= ($generated@@180 $generated@@394) $generated@@153))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@393 $generated@@394) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@393 $generated@@394) $generated@@250) $generated@@150 $generated@@393)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@393 $generated@@394) $generated@@250))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@396) $generated@@91)) (=> (and (and ($generated@@275 $generated@@395) (and (not (= $generated@@396 $generated@@154)) (= ($generated@@180 $generated@@396) $generated@@153))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@395 $generated@@396) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@395 $generated@@396) $generated@@256) $generated@@239 $generated@@395)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@395 $generated@@396) $generated@@256))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@398) $generated@@73)) (= (type $generated@@399) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@397 ($generated@@259 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@170) ($generated@@0 ($generated@@95 $generated@@397 $generated@@400))) ($generated@@276 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@95 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@88 $generated@@397 ($generated@@259 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@90 $generated@@170 $generated@@4)) (= (type $generated@@402) $generated@@73)) (= (type $generated@@403) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@401 ($generated@@264 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@170) ($generated@@0 ($generated@@95 $generated@@401 $generated@@404))) ($generated@@276 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@95 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@88 $generated@@401 ($generated@@264 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@95 ($generated@@311 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@95 ($generated@@311 $generated@@406) $generated@@405)))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@90 $generated@@170 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@320 (type $generated@@410))))
(let (($generated@@412 ($generated@@319 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@90 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@414) $generated@@170)) (= ($generated@@0 ($generated@@95 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@95 ($generated@@316 $generated@@413) ($generated@@168 ($generated@@361 $generated@@161 $generated@@414)))) (= ($generated@@95 ($generated@@408 $generated@@413) ($generated@@168 ($generated@@361 $generated@@161 $generated@@414))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@414))))))
 :pattern ( ($generated@@95 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@90 $generated@@170 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@338 (type $generated@@418))))
(let (($generated@@420 ($generated@@337 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@90 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@422) $generated@@170)) (= ($generated@@0 ($generated@@95 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@95 ($generated@@334 $generated@@421) ($generated@@168 ($generated@@361 $generated@@161 $generated@@422)))) (= ($generated@@95 ($generated@@416 $generated@@421) ($generated@@168 ($generated@@361 $generated@@161 $generated@@422))) ($generated@@169 ($generated@@361 $generated@@161 $generated@@422))))))
 :pattern ( ($generated@@95 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@319 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@318 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@95 ($generated@@372 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@95 ($generated@@316 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@95 ($generated@@408 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@95 ($generated@@316 $generated@@423) $generated@@427))
 :pattern ( ($generated@@95 ($generated@@408 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@95 ($generated@@372 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@337 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@336 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@95 ($generated@@383 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@95 ($generated@@334 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@95 ($generated@@416 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@95 ($generated@@334 $generated@@428) $generated@@432))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@95 ($generated@@383 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@73)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@437) $generated@@73)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@316 $generated@@436) $generated@@440))) (and ($generated@@276 ($generated@@95 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@276 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@95 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@95 ($generated@@316 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@88 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@73)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@445) $generated@@73)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@334 $generated@@444) $generated@@448))) (and ($generated@@276 ($generated@@95 ($generated@@416 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@276 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@444) $generated@@448))
 :pattern ( ($generated@@95 ($generated@@334 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@88 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@449) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@450) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@451) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@449 $generated@@451))) (and ($generated@@146 $generated@@449 $generated@@450) ($generated@@146 $generated@@450 $generated@@451))) ($generated@@146 $generated@@449 $generated@@451))
 :pattern ( ($generated@@146 $generated@@449 $generated@@450) ($generated@@146 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@90 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@338 (type $generated@@454))))
(let (($generated@@456 ($generated@@337 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@336 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@335 $generated@@456 $generated@@455)) (= ($generated@@334 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@334 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@338 (type $generated@@457))))
(let (($generated@@459 ($generated@@337 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@336 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@335 $generated@@459 $generated@@458)) (= ($generated@@383 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@383 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@338 (type $generated@@460))))
(let (($generated@@462 ($generated@@337 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@336 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@335 $generated@@462 $generated@@461)) (= ($generated@@415 $generated@@460) ($generated@@452 $generated@@170))))))
 :pattern ( ($generated@@415 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@320 (type $generated@@463))))
(let (($generated@@465 ($generated@@319 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@318 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@317 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@170) (= (type $generated@@467) $generated@@170)) ($generated@@0 ($generated@@95 ($generated@@407 $generated@@463) ($generated@@297 ($generated@@242 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@407 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@338 (type $generated@@468))))
(let (($generated@@470 ($generated@@337 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@336 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@335 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@170) (= (type $generated@@472) $generated@@170)) ($generated@@0 ($generated@@95 ($generated@@415 $generated@@468) ($generated@@297 ($generated@@242 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@415 $generated@@468))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@79)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@T) ) (!  (=> (and (= (type $generated@@475) $generated@@79) (= (type $generated@@476) $generated@@77)) (and (= ($generated@@473 ($generated@@251 $generated@@477 $generated@@475 $generated@@476)) $generated@@475) (= ($generated@@86 ($generated@@251 $generated@@477 $generated@@475 $generated@@476)) $generated@@476)))
 :pattern ( ($generated@@251 $generated@@477 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@170) ($generated@@243 $generated@@478 $generated@@46)) (and (= ($generated@@297 ($generated@@361 $generated@@2 $generated@@478)) $generated@@478) ($generated@@157 ($generated@@361 $generated@@2 $generated@@478) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@478 $generated@@46))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@170) ($generated@@243 $generated@@479 $generated@@47)) (and (= ($generated@@297 ($generated@@361 $generated@@3 $generated@@479)) $generated@@479) ($generated@@157 ($generated@@361 $generated@@3 $generated@@479) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@479 $generated@@47))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@170) ($generated@@243 $generated@@480 $generated@@44)) (and (= ($generated@@297 ($generated@@361 $generated@@4 $generated@@480)) $generated@@480) ($generated@@157 ($generated@@361 $generated@@4 $generated@@480) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@480 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@481) 22))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@170) ($generated@@243 $generated@@482 $generated@@45)) (and (= ($generated@@297 ($generated@@361 $generated@@481 $generated@@482)) $generated@@482) ($generated@@157 ($generated@@361 $generated@@481 $generated@@482) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@482 $generated@@45))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@73) (= ($generated@@243 ($generated@@297 $generated@@483) $generated@@484) ($generated@@157 $generated@@483 $generated@@484)))
 :pattern ( ($generated@@243 ($generated@@297 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@93 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@90 $generated@@486 $generated@@2)) (<= 0 ($generated@@310 $generated@@485))))
 :pattern ( ($generated@@310 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@291 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@290 $generated@@488)) (<= 0 ($generated@@289 $generated@@487))))
 :pattern ( ($generated@@289 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@73)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@73) (= (type $generated@@492) $generated@@73)) (= ($generated@@489 ($generated@@433 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@433 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@73)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@73) (= (type $generated@@496) $generated@@73)) (= ($generated@@493 ($generated@@433 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@433 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@84 ($generated@@433 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@433 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@73) (= (type $generated@@502) $generated@@73)) (= ($generated@@499 ($generated@@441 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@441 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@73)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@73) (= (type $generated@@506) $generated@@73)) (= ($generated@@503 ($generated@@441 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@441 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@84 ($generated@@441 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@441 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@170) (= (type $generated@@510) $generated@@170)) (= ($generated@@282 ($generated@@242 $generated@@509 $generated@@510)) $generated@@63))
 :pattern ( ($generated@@242 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@73) (= (type $generated@@514) $generated@@73)) (= ($generated@@511 ($generated@@160 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@160 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@73)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@73) (= (type $generated@@518) $generated@@73)) (= ($generated@@515 ($generated@@160 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@160 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@170) (= (type $generated@@520) $generated@@170)) (= ($generated@@168 ($generated@@242 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@242 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@170) (= (type $generated@@522) $generated@@170)) (= ($generated@@169 ($generated@@242 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@242 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@291 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@290 $generated@@170)) (= (type $generated@@530) $generated@@73)) (= (type $generated@@531) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@289 $generated@@529))) ($generated@@276 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@88 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@89 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@89 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@73) (= ($generated@@535 ($generated@@259 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@259 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@73) (= ($generated@@84 ($generated@@259 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@73)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@73) (= ($generated@@539 ($generated@@264 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@264 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@73) (= ($generated@@84 ($generated@@264 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@73)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@73) (= ($generated@@543 ($generated@@175 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@175 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@73) (= ($generated@@84 ($generated@@175 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@73)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@73) (= ($generated@@84 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
(= ($generated@@361 $generated@@552 ($generated@@297 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@297 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@554) $generated@@73)) (= (type $generated@@555) $generated@@73)) (= ($generated@@157 $generated@@553 ($generated@@433 $generated@@554 $generated@@555)) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@316 $generated@@553) $generated@@556))) (and ($generated@@243 ($generated@@95 ($generated@@408 $generated@@553) $generated@@556) $generated@@555) ($generated@@243 $generated@@556 $generated@@554)))
 :pattern ( ($generated@@95 ($generated@@408 $generated@@553) $generated@@556))
 :pattern ( ($generated@@95 ($generated@@316 $generated@@553) $generated@@556))
))))
 :pattern ( ($generated@@157 $generated@@553 ($generated@@433 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@558) $generated@@73)) (= (type $generated@@559) $generated@@73)) (= ($generated@@157 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@170) ($generated@@0 ($generated@@95 ($generated@@334 $generated@@557) $generated@@560))) (and ($generated@@243 ($generated@@95 ($generated@@416 $generated@@557) $generated@@560) $generated@@559) ($generated@@243 $generated@@560 $generated@@558)))
 :pattern ( ($generated@@95 ($generated@@416 $generated@@557) $generated@@560))
 :pattern ( ($generated@@95 ($generated@@334 $generated@@557) $generated@@560))
))))
 :pattern ( ($generated@@157 $generated@@557 ($generated@@441 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@170) (= (type $generated@@564) $generated@@170)) (< ($generated@@561 $generated@@563) ($generated@@562 ($generated@@242 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@242 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@170) (= (type $generated@@566) $generated@@170)) (< ($generated@@561 $generated@@566) ($generated@@562 ($generated@@242 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@242 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@170) (= (type $generated@@568) $generated@@73)) (= (type $generated@@569) $generated@@73)) ($generated@@243 $generated@@567 ($generated@@433 $generated@@568 $generated@@569))) (and (= ($generated@@297 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@567)) $generated@@567) ($generated@@157 ($generated@@361 ($generated@@318 $generated@@170 $generated@@170) $generated@@567) ($generated@@433 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@243 $generated@@567 ($generated@@433 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@170) (= (type $generated@@571) $generated@@73)) (= (type $generated@@572) $generated@@73)) ($generated@@243 $generated@@570 ($generated@@441 $generated@@571 $generated@@572))) (and (= ($generated@@297 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@570)) $generated@@570) ($generated@@157 ($generated@@361 ($generated@@336 $generated@@170 $generated@@170) $generated@@570) ($generated@@441 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@243 $generated@@570 ($generated@@441 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@73) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@170)) ($generated@@243 $generated@@575 ($generated@@160 $generated@@573 $generated@@574))) (and (= ($generated@@297 ($generated@@361 $generated@@161 $generated@@575)) $generated@@575) ($generated@@157 ($generated@@361 $generated@@161 $generated@@575) ($generated@@160 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@243 $generated@@575 ($generated@@160 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@95 ($generated@@452 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@95 ($generated@@452 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@579) $generated@@91)) (and ($generated@@275 $generated@@578) (and (not (= $generated@@579 $generated@@154)) (= ($generated@@180 $generated@@579) $generated@@153)))) ($generated@@157 ($generated@@97 ($generated@@95 $generated@@578 $generated@@579) $generated@@250) $generated@@150))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@578 $generated@@579) $generated@@250))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@581) $generated@@91)) (and ($generated@@275 $generated@@580) (and (not (= $generated@@581 $generated@@154)) (= ($generated@@180 $generated@@581) $generated@@153)))) ($generated@@157 ($generated@@97 ($generated@@95 $generated@@580 $generated@@581) $generated@@256) $generated@@239))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@580 $generated@@581) $generated@@256))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@80)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@73) (= (type $generated@@585) $generated@@73)) (and (= ($generated@@84 ($generated@@160 $generated@@584 $generated@@585)) $generated@@64) (= ($generated@@582 ($generated@@160 $generated@@584 $generated@@585)) $generated@@69)))
 :pattern ( ($generated@@160 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@161) (= ($generated@@561 ($generated@@297 $generated@@586)) ($generated@@562 $generated@@586)))
 :pattern ( ($generated@@561 ($generated@@297 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@170) ($generated@@243 $generated@@587 ($generated@@89 0))) (and (= ($generated@@297 ($generated@@361 $generated@@2 $generated@@587)) $generated@@587) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@587) ($generated@@89 0))))
 :pattern ( ($generated@@243 $generated@@587 ($generated@@89 0)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@170) (= (type $generated@@589) $generated@@73)) ($generated@@243 $generated@@588 ($generated@@259 $generated@@589))) (and (= ($generated@@297 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@588)) $generated@@588) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@588) ($generated@@259 $generated@@589))))
 :pattern ( ($generated@@243 $generated@@588 ($generated@@259 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@170) (= (type $generated@@591) $generated@@73)) ($generated@@243 $generated@@590 ($generated@@264 $generated@@591))) (and (= ($generated@@297 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@590)) $generated@@590) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@4) $generated@@590) ($generated@@264 $generated@@591))))
 :pattern ( ($generated@@243 $generated@@590 ($generated@@264 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@170) (= (type $generated@@593) $generated@@73)) ($generated@@243 $generated@@592 ($generated@@175 $generated@@593))) (and (= ($generated@@297 ($generated@@361 ($generated@@90 $generated@@170 $generated@@2) $generated@@592)) $generated@@592) ($generated@@157 ($generated@@361 ($generated@@90 $generated@@170 $generated@@2) $generated@@592) ($generated@@175 $generated@@593))))
 :pattern ( ($generated@@243 $generated@@592 ($generated@@175 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@170) (= (type $generated@@595) $generated@@73)) ($generated@@243 $generated@@594 ($generated@@523 $generated@@595))) (and (= ($generated@@297 ($generated@@361 ($generated@@290 $generated@@170) $generated@@594)) $generated@@594) ($generated@@157 ($generated@@361 ($generated@@290 $generated@@170) $generated@@594) ($generated@@523 $generated@@595))))
 :pattern ( ($generated@@243 $generated@@594 ($generated@@523 $generated@@595)))
)))
(assert (= ($generated@@84 $generated@@150) $generated@@62))
(assert (= ($generated@@582 $generated@@150) $generated@@68))
(assert (= ($generated@@84 $generated@@153) $generated@@66))
(assert (= ($generated@@582 $generated@@153) $generated@@70))
(assert (= ($generated@@84 $generated@@239) $generated@@67))
(assert (= ($generated@@582 $generated@@239) $generated@@70))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@90 $generated@@170 $generated@@2)) (= (type $generated@@597) $generated@@73)) (= (type $generated@@598) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@596 ($generated@@175 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@170) (< 0 ($generated ($generated@@95 $generated@@596 $generated@@599)))) ($generated@@276 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@95 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@88 $generated@@596 ($generated@@175 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@161) (= (type $generated@@601) $generated@@73)) (= (type $generated@@602) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@275 $generated@@602) (and ($generated@@159 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@73) ($generated@@88 $generated@@600 ($generated@@160 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@88 $generated@@600 ($generated@@160 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@276 ($generated@@168 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@276 ($generated@@168 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@161) (= (type $generated@@605) $generated@@73)) (= (type $generated@@606) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@275 $generated@@606) (and ($generated@@159 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@73) ($generated@@88 $generated@@604 ($generated@@160 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@88 $generated@@604 ($generated@@160 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@276 ($generated@@169 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@276 ($generated@@169 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@170) (= (type $generated@@609) $generated@@170)) (= ($generated@@242 ($generated@@271 $generated@@608) ($generated@@271 $generated@@609)) ($generated@@271 ($generated@@242 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@242 ($generated@@271 $generated@@608) ($generated@@271 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@269 $generated@@610))) ($generated@@271 ($generated@@297 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@269 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@297 ($generated@@271 $generated@@611)) ($generated@@271 ($generated@@297 $generated@@611)))
 :pattern ( ($generated@@297 ($generated@@271 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@291 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@290 $generated@@613)) (= ($generated@@289 $generated@@612) 0)) (= $generated@@612 ($generated@@288 $generated@@613))))
 :pattern ( ($generated@@289 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@90 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@310 ($generated@@96 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@310 $generated@@614) ($generated ($generated@@95 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@310 ($generated@@96 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@619) $generated@@2)) ($generated@@88 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@88 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@621) $generated@@3)) ($generated@@88 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@88 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@623) $generated@@4)) ($generated@@88 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@88 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@625) $generated@@481)) ($generated@@88 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@88 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@627) $generated@@170)) ($generated@@88 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@88 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@290 $generated@@170)) (= (type $generated@@629) $generated@@73)) (= ($generated@@157 $generated@@628 ($generated@@523 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@289 $generated@@628))) ($generated@@243 ($generated@@524 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@524 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@157 $generated@@628 ($generated@@523 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@290 $generated@@170)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@289 $generated@@632))) (< ($generated@@562 ($generated@@361 $generated@@161 ($generated@@524 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@562 ($generated@@361 $generated@@161 ($generated@@524 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@318 $generated@@170 $generated@@170)) (= (type $generated@@635) $generated@@73)) (= (type $generated@@636) $generated@@73)) ($generated@@157 $generated@@634 ($generated@@433 $generated@@635 $generated@@636))) (and (and ($generated@@157 ($generated@@316 $generated@@634) ($generated@@259 $generated@@635)) ($generated@@157 ($generated@@372 $generated@@634) ($generated@@259 $generated@@636))) ($generated@@157 ($generated@@407 $generated@@634) ($generated@@259 ($generated@@160 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@157 $generated@@634 ($generated@@433 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@336 $generated@@170 $generated@@170)) (= (type $generated@@638) $generated@@73)) (= (type $generated@@639) $generated@@73)) ($generated@@157 $generated@@637 ($generated@@441 $generated@@638 $generated@@639))) (and (and ($generated@@157 ($generated@@334 $generated@@637) ($generated@@264 $generated@@638)) ($generated@@157 ($generated@@383 $generated@@637) ($generated@@264 $generated@@639))) ($generated@@157 ($generated@@415 $generated@@637) ($generated@@264 ($generated@@160 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@157 $generated@@637 ($generated@@441 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@157 $generated@@640 $generated@@46))
 :pattern ( ($generated@@157 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@157 $generated@@641 $generated@@47))
 :pattern ( ($generated@@157 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@157 $generated@@642 $generated@@44))
 :pattern ( ($generated@@157 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@481) ($generated@@157 $generated@@643 $generated@@45))
 :pattern ( ($generated@@157 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@170) ($generated@@157 $generated@@644 $generated@@48))
 :pattern ( ($generated@@157 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () Int)
(assert  (and (and (= (type $generated@@646) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@647) $generated@@91)) (= (type $generated@@651) ($generated@@185 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@655  (=> (not (= $generated@@645 ($generated@@269 0))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (not (= ($generated@@97 ($generated@@95 $generated@@646 $generated@@647) $generated@@256) $generated@@154))) (=> (not (= ($generated@@97 ($generated@@95 $generated@@646 $generated@@647) $generated@@256) $generated@@154)) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@157 ($generated@@8 (- $generated@@645 1)) $generated@@150)) (=> ($generated@@157 ($generated@@8 (- $generated@@645 1)) $generated@@150) (=> (= $generated@@648 (- $generated@@645 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@157 ($generated@@8 (+ $generated@@649 ($generated ($generated@@97 ($generated@@95 $generated@@646 $generated@@647) $generated@@250)))) $generated@@150)) (=> ($generated@@157 ($generated@@8 (+ $generated@@649 ($generated ($generated@@97 ($generated@@95 $generated@@646 $generated@@647) $generated@@250)))) $generated@@150) (=> (= $generated@@650 (+ $generated@@649 ($generated ($generated@@97 ($generated@@95 $generated@@646 $generated@@647) $generated@@250)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@645) (= $generated@@648 $generated@@645))) (=> (or (<= 0 $generated@@645) (= $generated@@648 $generated@@645)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 $generated@@649) (< $generated@@648 $generated@@645)) (= $generated@@650 $generated@@649))) (=> (or (or (<= 0 $generated@@649) (< $generated@@648 $generated@@645)) (= $generated@@650 $generated@@649)) (=> (= (ControlFlow 0 3) (- 0 2)) (or (< $generated@@648 $generated@@645) (and (= $generated@@648 $generated@@645) (< $generated@@650 $generated@@649)))))))))))))))))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@184 $generated@@154 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@656) (=> (= (ControlFlow 0 9) 3) $generated@@655)))))
(let (($generated@@658  (=> (and ($generated@@275 $generated@@646) ($generated@@652 $generated@@646)) (=> (and (and (and (not (= $generated@@647 $generated@@154)) (and ($generated@@157 $generated@@647 $generated@@239) ($generated@@88 $generated@@647 $generated@@239 $generated@@646))) (<= ($generated@@269 0) $generated@@645)) (and (and (<= ($generated@@269 0) $generated@@649) (<= ($generated@@269 0) $generated@@653)) (and (= 1 $generated@@654) (= (ControlFlow 0 10) 9)))) $generated@@657))))
$generated@@658)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@188 (T@U T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 (T@U T@U T@U Int T@U) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (Int) Int)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 () T@T)
(declare-fun $generated@@275 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) Int)
(declare-fun $generated@@278 (T@T T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) T@U)
(declare-fun $generated@@294 (T@U T@U) T@U)
(declare-fun $generated@@295 (T@U T@U) Bool)
(declare-fun $generated@@302 (T@U T@U T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@U T@U) Int)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@334 (T@U T@U T@U) T@U)
(declare-fun $generated@@342 (T@U T@U T@U) Bool)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@353 () T@U)
(declare-fun $generated@@354 (T@U T@U) Bool)
(declare-fun $generated@@355 (T@T) T@U)
(declare-fun $generated@@363 (T@T) T@U)
(declare-fun $generated@@364 (T@U) Int)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@379 (T@U) Int)
(declare-fun $generated@@380 (T@T) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@T) T@U)
(declare-fun $generated@@394 (T@T T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@T T@T) T@U)
(declare-fun $generated@@412 (T@T T@T) T@T)
(declare-fun $generated@@413 (T@T) T@T)
(declare-fun $generated@@414 (T@T) T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) Bool)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 () T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@521 (T@U T@U) T@U)
(declare-fun $generated@@529 (T@U T@U) T@U)
(declare-fun $generated@@540 (T@T) T@U)
(declare-fun $generated@@564 () T@T)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@607 (T@U Int) T@U)
(declare-fun $generated@@618 (T@U) Int)
(declare-fun $generated@@620 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@642 (T@U) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@666 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(declare-fun $generated@@795 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@144 $generated@@147 $generated@@148)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@75) (= (type $generated@@150) $generated@@88)) (= (type $generated@@151) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@143 $generated@@46 $generated@@151 ($generated@@144 $generated@@149 $generated@@150)) ($generated@@145 $generated@@149 $generated@@150)))
 :pattern ( ($generated@@143 $generated@@46 $generated@@151 ($generated@@144 $generated@@149 $generated@@150)))
)))
(assert  (and (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@75)
 :pattern ( ($generated@@152 $generated@@154))
)) (= (type $generated@@153) $generated@@88)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@75) (= (type $generated@@156) $generated@@88)) (= (type $generated@@157) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@156 ($generated@@152 $generated@@155) $generated@@157)  (or (= $generated@@156 $generated@@153) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@156 ($generated@@152 $generated@@155) $generated@@157))
)))
(assert (= (type $generated@@158) $generated@@75))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@2) (= (type $generated@@160) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@159 $generated@@158 $generated@@160))
 :pattern ( ($generated@@85 $generated@@159 $generated@@158 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@161 $generated@@162 ($generated@@86 0)))
 :pattern ( ($generated@@161 $generated@@162 ($generated@@86 0)))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@75)
 :pattern ( ($generated@@163 $generated@@165))
)) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@75)
 :pattern ( ($generated@@164 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@75) (= (type $generated@@168) $generated@@146)) (= (type $generated@@169) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@168 ($generated@@163 $generated@@167) $generated@@169) ($generated@@85 $generated@@168 ($generated@@164 $generated@@167) $generated@@169)))
 :pattern ( ($generated@@85 $generated@@168 ($generated@@163 $generated@@167) $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@75)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@75) (= (type $generated@@173) $generated@@146)) (= (type $generated@@174) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@173 ($generated@@170 $generated@@172) $generated@@174) ($generated@@85 $generated@@173 ($generated@@163 $generated@@172) $generated@@174)))
 :pattern ( ($generated@@85 $generated@@173 ($generated@@170 $generated@@172) $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@175 $generated@@176)) $generated@@75)
 :pattern ( ($generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@75) (= (type $generated@@178) $generated@@88)) (= (type $generated@@179) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@178 ($generated@@175 $generated@@177) $generated@@179) ($generated@@85 $generated@@178 ($generated@@152 $generated@@177) $generated@@179)))
 :pattern ( ($generated@@85 $generated@@178 ($generated@@175 $generated@@177) $generated@@179))
)))
(assert  (and (= ($generated@@1 $generated@@182) 15) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@183 $generated@@184)) $generated@@75)
 :pattern ( ($generated@@181 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (and (= (type $generated@@185) $generated@@75) (= (type $generated@@186) $generated@@75)) (= (type $generated@@187) $generated@@182)) ($generated@@161 $generated@@187 ($generated@@181 $generated@@185 $generated@@186))) ($generated@@180 $generated@@187))
 :pattern ( ($generated@@180 $generated@@187) ($generated@@161 $generated@@187 ($generated@@181 $generated@@185 $generated@@186)))
)))
(assert  (and (and (= ($generated@@1 $generated@@191) 16) (forall (($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@189 $generated@@192))
))) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@191)
 :pattern ( ($generated@@190 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@182) (= (type $generated@@195) $generated@@182)) true) (= ($generated@@188 $generated@@194 $generated@@195)  (and (= ($generated@@189 $generated@@194) ($generated@@189 $generated@@195)) (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)))))
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@75)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@87 $generated@@191 $generated@@2)) (= (type $generated@@200) $generated@@75)) ($generated@@161 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@161 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 17)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@88 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@78 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@88) (= (type $generated@@251) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@252) ($generated@@77 $generated@@4))) (= (type $generated@@254) $generated@@88)) (= (type $generated@@255) ($generated@@77 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ) (! (= (type ($generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261)) ($generated@@203 $generated@@88 $generated@@4))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Bool) ($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@78 (type $generated@@267))))
 (=> (and (and (and (and (= (type $generated@@262) $generated@@88) (= (type $generated@@263) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@264) ($generated@@77 $generated@@4))) (= (type $generated@@266) $generated@@88)) (= (type $generated@@267) ($generated@@77 $generated@@268))) (= ($generated@@0 ($generated@@201 ($generated@@257 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))  (=> (and (not (= $generated@@266 $generated@@262)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@263 $generated@@266) $generated@@264))) $generated@@265))))
 :pattern ( ($generated@@201 ($generated@@257 $generated@@262 $generated@@263 $generated@@264 $generated@@265) $generated@@266 $generated@@267))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@274) 18) (forall (($generated@@280 T@U) ) (! (= (type ($generated@@271 $generated@@280)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@280))
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (= (type ($generated@@276 $generated@@281 $generated@@282)) $generated@@88)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@U) ) (! (= (type ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@279 $generated@@285 $generated@@286 $generated@@287)) $generated@@191)
 :pattern ( ($generated@@279 $generated@@285 $generated@@286 $generated@@287))
))))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 Int) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@288) $generated@@75) (= (type $generated@@289) $generated@@274)) (= (type $generated@@290) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@291) $generated@@88)) (= (type $generated@@293) $generated@@146)) (or ($generated@@275 $generated@@288 $generated@@291 ($generated@@272 $generated@@292) $generated@@293) (and (not (= 2 $generated@@269)) (and (and (and ($generated@@273 $generated@@290) (and (not (= $generated@@291 $generated@@153)) (and ($generated@@161 $generated@@291 ($generated@@175 $generated@@288)) ($generated@@85 $generated@@291 ($generated@@175 $generated@@288) $generated@@290)))) (<= ($generated@@272 0) $generated@@292)) ($generated@@161 $generated@@293 ($generated@@170 $generated@@46)))))) (and (=> (not (or (= ($generated@@272 $generated@@292) ($generated@@272 0)) (= ($generated@@276 $generated@@288 $generated@@291) $generated@@153))) (and (=> (= ($generated@@277 $generated@@288 $generated@@291) ($generated@@272 17)) ($generated@@275 $generated@@288 ($generated@@276 $generated@@288 $generated@@291) ($generated@@272 (- $generated@@292 1)) ($generated@@144 $generated@@288 $generated@@291))) (=> (not (= ($generated@@277 $generated@@288 $generated@@291) ($generated@@272 17))) ($generated@@275 $generated@@288 ($generated@@276 $generated@@288 $generated@@291) ($generated@@272 (- $generated@@292 1)) $generated@@293)))) (= ($generated@@270 $generated@@288 ($generated@@271 $generated@@289) $generated@@291 ($generated@@272 $generated@@292) $generated@@293) (ite  (or (= ($generated@@272 $generated@@292) ($generated@@272 0)) (= ($generated@@276 $generated@@288 $generated@@291) $generated@@153)) ($generated ($generated@@278 $generated@@2 ($generated@@279 $generated@@46 $generated@@290 $generated@@293))) (ite (= ($generated@@277 $generated@@288 $generated@@291) ($generated@@272 17)) ($generated@@270 $generated@@288 ($generated@@271 $generated@@289) ($generated@@276 $generated@@288 $generated@@291) ($generated@@272 (- $generated@@292 1)) ($generated@@144 $generated@@288 $generated@@291)) ($generated@@270 $generated@@288 ($generated@@271 $generated@@289) ($generated@@276 $generated@@288 $generated@@291) ($generated@@272 (- $generated@@292 1)) $generated@@293))))))
 :weight 3
 :pattern ( ($generated@@270 $generated@@288 ($generated@@271 $generated@@289) $generated@@291 ($generated@@272 $generated@@292) $generated@@293) ($generated@@273 $generated@@290))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@294 $generated@@296 $generated@@297)) $generated@@182)
 :pattern ( ($generated@@294 $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) $generated@@75) (= (type $generated@@299) $generated@@75)) (= (type $generated@@300) $generated@@191)) (= (type $generated@@301) $generated@@191)) (= ($generated@@161 ($generated@@294 $generated@@300 $generated@@301) ($generated@@181 $generated@@298 $generated@@299))  (and ($generated@@295 $generated@@300 $generated@@298) ($generated@@295 $generated@@301 $generated@@299))))
 :pattern ( ($generated@@161 ($generated@@294 $generated@@300 $generated@@301) ($generated@@181 $generated@@298 $generated@@299)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (! (= (type ($generated@@302 $generated@@303 $generated@@304 $generated@@305)) $generated@@146)
 :pattern ( ($generated@@302 $generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) $generated@@75) (= (type $generated@@307) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@308) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@191))) (= (type $generated@@309) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@310) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@191 $generated@@4)))) (= ($generated@@279 $generated@@306 $generated@@307 ($generated@@302 $generated@@308 $generated@@309 $generated@@310)) ($generated@@92 $generated@@308 $generated@@307)))
 :pattern ( ($generated@@279 $generated@@306 $generated@@307 ($generated@@302 $generated@@308 $generated@@309 $generated@@310)))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@182) (= (type $generated@@312) $generated@@182)) (= ($generated@@188 $generated@@311 $generated@@312) (= $generated@@311 $generated@@312)))
 :pattern ( ($generated@@188 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@313 $generated@@315)) $generated@@191)
 :pattern ( ($generated@@313 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@75) (= (type $generated@@317) $generated@@88)) (= (type $generated@@318) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@279 $generated@@46 $generated@@318 ($generated@@144 $generated@@316 $generated@@317)) ($generated@@313 ($generated@@8 ($generated@@314 $generated@@316 $generated@@317)))))
 :pattern ( ($generated@@279 $generated@@46 $generated@@318 ($generated@@144 $generated@@316 $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@75)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) ($generated@@87 $generated@@191 $generated@@4)) (= (type $generated@@322) $generated@@75)) (= ($generated@@161 $generated@@321 ($generated@@319 $generated@@322)) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@191) ($generated@@0 ($generated@@92 $generated@@321 $generated@@323))) ($generated@@295 $generated@@323 $generated@@322))
 :pattern ( ($generated@@92 $generated@@321 $generated@@323))
))))
 :pattern ( ($generated@@161 $generated@@321 ($generated@@319 $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@75)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@326) ($generated@@87 $generated@@191 $generated@@4)) (= (type $generated@@327) $generated@@75)) (= ($generated@@161 $generated@@326 ($generated@@324 $generated@@327)) (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@191) ($generated@@0 ($generated@@92 $generated@@326 $generated@@328))) ($generated@@295 $generated@@328 $generated@@327))
 :pattern ( ($generated@@92 $generated@@326 $generated@@328))
))))
 :pattern ( ($generated@@161 $generated@@326 ($generated@@324 $generated@@327)))
)))
(assert (forall (($generated@@329 Int) ) (! (= ($generated@@272 $generated@@329) $generated@@329)
 :pattern ( ($generated@@272 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 (type $generated@@331)))
(= (type ($generated@@330 $generated@@331)) $generated@@332))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (= ($generated@@330 $generated@@333) $generated@@333)
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336 $generated@@337)) ($generated@@87 $generated@@191 $generated@@4))
 :pattern ( ($generated@@334 $generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (= (type $generated@@338) $generated@@191) (= (type $generated@@339) $generated@@75)) (= (type $generated@@340) $generated@@88)) (= (type $generated@@341) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@0 ($generated@@92 ($generated@@334 $generated@@46 $generated@@341 ($generated@@144 $generated@@339 $generated@@340)) $generated@@338)) false))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@46 $generated@@341 ($generated@@144 $generated@@339 $generated@@340)) $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@343) $generated@@75) (= (type $generated@@344) $generated@@75)) (= (type $generated@@345) $generated@@191)) (= (type $generated@@346) $generated@@191)) (= (type $generated@@347) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@273 $generated@@347)) (= ($generated@@85 ($generated@@294 $generated@@345 $generated@@346) ($generated@@181 $generated@@343 $generated@@344) $generated@@347)  (and ($generated@@342 $generated@@345 $generated@@343 $generated@@347) ($generated@@342 $generated@@346 $generated@@344 $generated@@347))))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@345 $generated@@346) ($generated@@181 $generated@@343 $generated@@344) $generated@@347))
)))
(assert  (=> (< 0 $generated@@269) (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@75) (= (type $generated@@349) $generated@@88)) ($generated@@161 ($generated@@8 ($generated@@277 $generated@@348 $generated@@349)) $generated@@46))
 :pattern ( ($generated@@277 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@79)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@182) (= ($generated@@180 $generated@@352) (= ($generated@@350 $generated@@352) $generated@@65)))
 :pattern ( ($generated@@180 $generated@@352))
)))
(assert  (and (= (type $generated@@353) ($generated@@87 $generated@@88 $generated@@89)) (forall (($generated@@356 T@T) ) (! (= (type ($generated@@355 $generated@@356)) ($generated@@87 $generated@@356 $generated@@4))
 :pattern ( ($generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (and (= (type $generated@@357) $generated@@75) (= (type $generated@@358) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@359) $generated@@146)) (and (and ($generated@@273 $generated@@358) ($generated@@161 $generated@@359 ($generated@@164 $generated@@357))) ($generated@@354 ($generated@@334 $generated@@357 $generated@@353 $generated@@359) ($generated@@355 $generated@@191)))) (= ($generated@@143 $generated@@357 $generated@@353 $generated@@359) ($generated@@143 $generated@@357 $generated@@358 $generated@@359)))
 :pattern ( ($generated@@143 $generated@@357 $generated@@353 $generated@@359) ($generated@@273 $generated@@358))
 :pattern ( ($generated@@143 $generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@182) ($generated@@180 $generated@@360)) (exists (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (and (and (= (type $generated@@361) $generated@@191) (= (type $generated@@362) $generated@@191)) (= $generated@@360 ($generated@@294 $generated@@361 $generated@@362)))
 :no-pattern (type $generated@@361)
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
)))
 :pattern ( ($generated@@180 $generated@@360))
)))
(assert  (and (and (forall (($generated@@367 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@367)) 19)) (forall (($generated@@368 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368))
))) (forall (($generated@@369 T@T) ) (! (= (type ($generated@@363 $generated@@369)) ($generated@@365 $generated@@369))
 :pattern ( ($generated@@363 $generated@@369))
))))
(assert (forall (($generated@@370 T@T) ) (! (= ($generated@@364 ($generated@@363 $generated@@370)) 0)
 :pattern ( ($generated@@363 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@2) (= ($generated@@161 $generated@@371 $generated@@158) (<= ($generated@@272 0) ($generated $generated@@371))))
 :pattern ( ($generated@@161 $generated@@371 $generated@@158))
)))
(assert ($generated@@273 $generated@@353))
(assert  (=> (< 0 $generated@@269) (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@75) (= (type $generated@@373) $generated@@88)) ($generated@@161 ($generated@@276 $generated@@372 $generated@@373) ($generated@@152 $generated@@372)))
 :pattern ( ($generated@@276 $generated@@372 $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@75) (= (type $generated@@375) $generated@@88)) (= ($generated@@161 $generated@@375 ($generated@@175 $generated@@374))  (and ($generated@@161 $generated@@375 ($generated@@152 $generated@@374)) (not (= $generated@@375 $generated@@153)))))
 :pattern ( ($generated@@161 $generated@@375 ($generated@@175 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@75) (= (type $generated@@378) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@342 ($generated@@313 $generated@@376) $generated@@377 $generated@@378) ($generated@@85 $generated@@376 $generated@@377 $generated@@378)))
 :pattern ( ($generated@@342 ($generated@@313 $generated@@376) $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@381 T@T) ) (! (= (type ($generated@@380 $generated@@381)) ($generated@@87 $generated@@381 $generated@@2))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@90 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@87 $generated@@383 $generated@@2)) (and (= (= ($generated@@379 $generated@@382) 0) (= $generated@@382 ($generated@@380 $generated@@383))) (=> (not (= ($generated@@379 $generated@@382) 0)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (< 0 ($generated ($generated@@92 $generated@@382 $generated@@384))))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (= (type ($generated@@385 $generated@@386)) $generated@@80)
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@75) (and (= ($generated@@83 ($generated@@164 $generated@@387)) $generated@@62) (= ($generated@@385 ($generated@@164 $generated@@387)) $generated@@70)))
 :pattern ( ($generated@@164 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@75) (and (= ($generated@@83 ($generated@@163 $generated@@388)) $generated@@63) (= ($generated@@385 ($generated@@163 $generated@@388)) $generated@@71)))
 :pattern ( ($generated@@163 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@75) (and (= ($generated@@83 ($generated@@170 $generated@@389)) $generated@@64) (= ($generated@@385 ($generated@@170 $generated@@389)) $generated@@72)))
 :pattern ( ($generated@@170 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@75) (and (= ($generated@@83 ($generated@@152 $generated@@390)) $generated@@67) (= ($generated@@385 ($generated@@152 $generated@@390)) $generated@@74)))
 :pattern ( ($generated@@152 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (= (type $generated@@391) $generated@@75) (and (= ($generated@@83 ($generated@@175 $generated@@391)) $generated@@68) (= ($generated@@385 ($generated@@175 $generated@@391)) $generated@@74)))
 :pattern ( ($generated@@175 $generated@@391))
)))
(assert  (and (and (and (and (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (= ($generated@@1 ($generated@@394 $generated@@397 $generated@@398)) 20)) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@395 ($generated@@394 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@394 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@396 ($generated@@394 $generated@@401 $generated@@402)) $generated@@402)
 :pattern ( ($generated@@394 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@395 (type $generated@@403))))
(= (type ($generated@@392 $generated@@403)) ($generated@@87 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@403))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= (type ($generated@@393 $generated@@405 $generated@@406)) ($generated@@394 $generated@@405 $generated@@406))
 :pattern ( ($generated@@393 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@T) ) (! (let (($generated@@409 (type $generated@@407)))
 (not ($generated@@0 ($generated@@92 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407))))
 :pattern ( (let (($generated@@409 (type $generated@@407)))
($generated@@92 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407)))
)))
(assert  (and (and (and (and (forall (($generated@@415 T@T) ($generated@@416 T@T) ) (= ($generated@@1 ($generated@@412 $generated@@415 $generated@@416)) 21)) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= ($generated@@413 ($generated@@412 $generated@@417 $generated@@418)) $generated@@417)
 :pattern ( ($generated@@412 $generated@@417 $generated@@418))
))) (forall (($generated@@419 T@T) ($generated@@420 T@T) ) (! (= ($generated@@414 ($generated@@412 $generated@@419 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@412 $generated@@419 $generated@@420))
))) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@413 (type $generated@@421))))
(= (type ($generated@@410 $generated@@421)) ($generated@@87 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@410 $generated@@421))
))) (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (! (= (type ($generated@@411 $generated@@423 $generated@@424)) ($generated@@412 $generated@@423 $generated@@424))
 :pattern ( ($generated@@411 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@T) ) (! (let (($generated@@427 (type $generated@@425)))
 (not ($generated@@0 ($generated@@92 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425))))
 :pattern ( (let (($generated@@427 (type $generated@@425)))
($generated@@92 ($generated@@410 ($generated@@411 $generated@@427 $generated@@426)) $generated@@425)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@90 (type $generated@@428))))
 (=> (and (= (type $generated@@428) ($generated@@87 $generated@@430 $generated@@4)) (= (type $generated@@429) ($generated@@87 $generated@@430 $generated@@4))) (= ($generated@@354 $generated@@428 $generated@@429) (forall (($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@430) (= ($generated@@0 ($generated@@92 $generated@@428 $generated@@431)) ($generated@@0 ($generated@@92 $generated@@429 $generated@@431))))
 :pattern ( ($generated@@92 $generated@@428 $generated@@431))
 :pattern ( ($generated@@92 $generated@@429 $generated@@431))
)))))
 :pattern ( ($generated@@354 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@90 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@87 $generated@@433 $generated@@2)) (= ($generated@@197 $generated@@432) (forall (($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@433) (and (<= 0 ($generated ($generated@@92 $generated@@432 $generated@@434))) (<= ($generated ($generated@@92 $generated@@432 $generated@@434)) ($generated@@379 $generated@@432))))
 :pattern ( ($generated@@92 $generated@@432 $generated@@434))
)))))
 :pattern ( ($generated@@197 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@191) ($generated@@295 $generated@@435 $generated@@158)) (and (= ($generated@@313 ($generated@@278 $generated@@2 $generated@@435)) $generated@@435) ($generated@@161 ($generated@@278 $generated@@2 $generated@@435) $generated@@158)))
 :pattern ( ($generated@@295 $generated@@435 $generated@@158))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@75)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@75) (= (type $generated@@439) $generated@@88)) (= ($generated@@161 $generated@@439 ($generated@@152 $generated@@438))  (or (= $generated@@439 $generated@@153) (= ($generated@@436 $generated@@439) ($generated@@152 $generated@@438)))))
 :pattern ( ($generated@@161 $generated@@439 ($generated@@152 $generated@@438)))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@396 (type $generated@@440))))
(let (($generated@@442 ($generated@@395 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@394 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@393 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@442) ($generated@@0 ($generated@@92 ($generated@@392 $generated@@440) $generated@@443)))
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@392 $generated@@440))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@396 (type $generated@@445))))
(= (type ($generated@@444 $generated@@445)) ($generated@@87 $generated@@446 $generated@@4)))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@396 (type $generated@@447))))
(let (($generated@@449 ($generated@@395 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@394 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@393 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ) (!  (and (= (type $generated@@450) $generated@@448) ($generated@@0 ($generated@@92 ($generated@@444 $generated@@447) $generated@@450)))
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@444 $generated@@447))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@414 (type $generated@@451))))
(let (($generated@@453 ($generated@@413 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@412 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@411 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) ($generated@@0 ($generated@@92 ($generated@@410 $generated@@451) $generated@@454)))
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@410 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@414 (type $generated@@456))))
(= (type ($generated@@455 $generated@@456)) ($generated@@87 $generated@@457 $generated@@4)))
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@414 (type $generated@@458))))
(let (($generated@@460 ($generated@@413 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@412 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@411 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@459) ($generated@@0 ($generated@@92 ($generated@@455 $generated@@458) $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@455 $generated@@458))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@463) $generated@@75) (= (type $generated@@464) $generated@@88)) (or ($generated@@462 $generated@@463 $generated@@464) (and (not (= 1 $generated@@269)) (and (not (= $generated@@464 $generated@@153)) ($generated@@161 $generated@@464 ($generated@@175 $generated@@463)))))) (= ($generated@@314 $generated@@463 $generated@@464) ($generated@@277 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@314 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@87 $generated@@191 $generated@@2)) (= (type $generated@@466) $generated@@75)) (= ($generated@@161 $generated@@465 ($generated@@196 $generated@@466)) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@191) (< 0 ($generated ($generated@@92 $generated@@465 $generated@@467)))) ($generated@@295 $generated@@467 $generated@@466))
 :pattern ( ($generated@@92 $generated@@465 $generated@@467))
))))
 :pattern ( ($generated@@161 $generated@@465 ($generated@@196 $generated@@466)))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 Int) ($generated@@473 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@468) $generated@@75) (= (type $generated@@469) $generated@@274)) (= (type $generated@@470) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@471) $generated@@88)) (= (type $generated@@473) $generated@@146)) (or ($generated@@275 $generated@@468 $generated@@471 $generated@@472 $generated@@473) (and (not (= 2 $generated@@269)) (and (and (and ($generated@@273 $generated@@470) (and (not (= $generated@@471 $generated@@153)) (and ($generated@@161 $generated@@471 ($generated@@175 $generated@@468)) ($generated@@85 $generated@@471 ($generated@@175 $generated@@468) $generated@@470)))) (<= ($generated@@272 0) $generated@@472)) ($generated@@161 $generated@@473 ($generated@@170 $generated@@46)))))) (and (=> (not (or (= $generated@@472 ($generated@@272 0)) (= ($generated@@276 $generated@@468 $generated@@471) $generated@@153))) (and (=> (= ($generated@@277 $generated@@468 $generated@@471) ($generated@@272 17)) ($generated@@275 $generated@@468 ($generated@@276 $generated@@468 $generated@@471) (- $generated@@472 1) ($generated@@144 $generated@@468 $generated@@471))) (=> (not (= ($generated@@277 $generated@@468 $generated@@471) ($generated@@272 17))) ($generated@@275 $generated@@468 ($generated@@276 $generated@@468 $generated@@471) (- $generated@@472 1) $generated@@473)))) (= ($generated@@270 $generated@@468 ($generated@@271 $generated@@469) $generated@@471 $generated@@472 $generated@@473) (ite  (or (= $generated@@472 ($generated@@272 0)) (= ($generated@@276 $generated@@468 $generated@@471) $generated@@153)) ($generated ($generated@@278 $generated@@2 ($generated@@279 $generated@@46 $generated@@470 $generated@@473))) (ite (= ($generated@@277 $generated@@468 $generated@@471) ($generated@@272 17)) ($generated@@270 $generated@@468 $generated@@469 ($generated@@276 $generated@@468 $generated@@471) (- $generated@@472 1) ($generated@@144 $generated@@468 $generated@@471)) ($generated@@270 $generated@@468 $generated@@469 ($generated@@276 $generated@@468 $generated@@471) (- $generated@@472 1) $generated@@473))))))
 :pattern ( ($generated@@270 $generated@@468 ($generated@@271 $generated@@469) $generated@@471 $generated@@472 $generated@@473) ($generated@@273 $generated@@470))
))))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@274)
 :pattern ( ($generated@@474 $generated@@476))
)) (= (type $generated@@475) $generated@@274)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 Int) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@477) $generated@@75) (= (type $generated@@478) $generated@@274)) (= (type $generated@@479) $generated@@88)) (= (type $generated@@481) $generated@@146)) (= ($generated@@270 $generated@@477 $generated@@478 $generated@@479 $generated@@480 $generated@@481) ($generated@@270 $generated@@477 $generated@@475 $generated@@479 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@270 $generated@@477 ($generated@@474 $generated@@478) $generated@@479 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@87 $generated@@191 $generated@@4)) (= (type $generated@@483) $generated@@75)) (= (type $generated@@484) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@482 ($generated@@319 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@191) ($generated@@0 ($generated@@92 $generated@@482 $generated@@485))) ($generated@@342 $generated@@485 $generated@@483 $generated@@484))
 :pattern ( ($generated@@92 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@85 $generated@@482 ($generated@@319 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@87 $generated@@191 $generated@@4)) (= (type $generated@@487) $generated@@75)) (= (type $generated@@488) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@486 ($generated@@324 $generated@@487) $generated@@488) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@191) ($generated@@0 ($generated@@92 $generated@@486 $generated@@489))) ($generated@@342 $generated@@489 $generated@@487 $generated@@488))
 :pattern ( ($generated@@92 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@85 $generated@@486 ($generated@@324 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (let (($generated@@491 (type $generated@@490)))
(= ($generated ($generated@@92 ($generated@@380 $generated@@491) $generated@@490)) 0))
 :pattern ( (let (($generated@@491 (type $generated@@490)))
($generated@@92 ($generated@@380 $generated@@491) $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (and (= (type $generated@@492) $generated@@75) (= (type $generated@@493) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@494) $generated@@146)) (and ($generated@@273 $generated@@493) ($generated@@161 $generated@@494 ($generated@@164 $generated@@492)))) (= ($generated@@354 ($generated@@334 $generated@@492 $generated@@353 $generated@@494) ($generated@@355 $generated@@191)) ($generated@@354 ($generated@@334 $generated@@492 $generated@@493 $generated@@494) ($generated@@355 $generated@@191))))
 :pattern ( ($generated@@334 $generated@@492 $generated@@353 $generated@@494) ($generated@@273 $generated@@493))
 :pattern ( ($generated@@334 $generated@@492 $generated@@493 $generated@@494))
)))
(assert  (and (forall (($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@497)) ($generated@@87 $generated@@191 $generated@@4))
 :pattern ( ($generated@@495 $generated@@497))
)) (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@396 (type $generated@@498))))
(let (($generated@@500 ($generated@@395 (type $generated@@498))))
(= (type ($generated@@496 $generated@@498)) ($generated@@87 $generated@@500 $generated@@499))))
 :pattern ( ($generated@@496 $generated@@498))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) ($generated@@394 $generated@@191 $generated@@191)) (= (type $generated@@502) $generated@@191)) (= ($generated@@0 ($generated@@92 ($generated@@495 $generated@@501) $generated@@502))  (and ($generated@@0 ($generated@@92 ($generated@@392 $generated@@501) ($generated@@189 ($generated@@278 $generated@@182 $generated@@502)))) (= ($generated@@92 ($generated@@496 $generated@@501) ($generated@@189 ($generated@@278 $generated@@182 $generated@@502))) ($generated@@190 ($generated@@278 $generated@@182 $generated@@502))))))
 :pattern ( ($generated@@92 ($generated@@495 $generated@@501) $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) ($generated@@87 $generated@@191 $generated@@4))
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@414 (type $generated@@506))))
(let (($generated@@508 ($generated@@413 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506)) ($generated@@87 $generated@@508 $generated@@507))))
 :pattern ( ($generated@@504 $generated@@506))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) ($generated@@412 $generated@@191 $generated@@191)) (= (type $generated@@510) $generated@@191)) (= ($generated@@0 ($generated@@92 ($generated@@503 $generated@@509) $generated@@510))  (and ($generated@@0 ($generated@@92 ($generated@@410 $generated@@509) ($generated@@189 ($generated@@278 $generated@@182 $generated@@510)))) (= ($generated@@92 ($generated@@504 $generated@@509) ($generated@@189 ($generated@@278 $generated@@182 $generated@@510))) ($generated@@190 ($generated@@278 $generated@@182 $generated@@510))))))
 :pattern ( ($generated@@92 ($generated@@503 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(let (($generated@@514 ($generated@@395 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@394 $generated@@514 $generated@@513)) (= ($generated@@0 ($generated@@92 ($generated@@444 $generated@@511) $generated@@512)) (exists (($generated@@515 T@U) ) (!  (and (= (type $generated@@515) $generated@@514) (and ($generated@@0 ($generated@@92 ($generated@@392 $generated@@511) $generated@@515)) (= $generated@@512 ($generated@@92 ($generated@@496 $generated@@511) $generated@@515))))
 :pattern ( ($generated@@92 ($generated@@392 $generated@@511) $generated@@515))
 :pattern ( ($generated@@92 ($generated@@496 $generated@@511) $generated@@515))
))))))
 :pattern ( ($generated@@92 ($generated@@444 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(let (($generated@@519 ($generated@@413 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@412 $generated@@519 $generated@@518)) (= ($generated@@0 ($generated@@92 ($generated@@455 $generated@@516) $generated@@517)) (exists (($generated@@520 T@U) ) (!  (and (= (type $generated@@520) $generated@@519) (and ($generated@@0 ($generated@@92 ($generated@@410 $generated@@516) $generated@@520)) (= $generated@@517 ($generated@@92 ($generated@@504 $generated@@516) $generated@@520))))
 :pattern ( ($generated@@92 ($generated@@410 $generated@@516) $generated@@520))
 :pattern ( ($generated@@92 ($generated@@504 $generated@@516) $generated@@520))
))))))
 :pattern ( ($generated@@92 ($generated@@455 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (= (type ($generated@@521 $generated@@522 $generated@@523)) $generated@@75)
 :pattern ( ($generated@@521 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) ($generated@@394 $generated@@191 $generated@@191)) (= (type $generated@@525) $generated@@75)) (= (type $generated@@526) $generated@@75)) (= (type $generated@@527) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@524 ($generated@@521 $generated@@525 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@191) ($generated@@0 ($generated@@92 ($generated@@392 $generated@@524) $generated@@528))) (and ($generated@@342 ($generated@@92 ($generated@@496 $generated@@524) $generated@@528) $generated@@526 $generated@@527) ($generated@@342 $generated@@528 $generated@@525 $generated@@527)))
 :pattern ( ($generated@@92 ($generated@@496 $generated@@524) $generated@@528))
 :pattern ( ($generated@@92 ($generated@@392 $generated@@524) $generated@@528))
))))
 :pattern ( ($generated@@85 $generated@@524 ($generated@@521 $generated@@525 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (! (= (type ($generated@@529 $generated@@530 $generated@@531)) $generated@@75)
 :pattern ( ($generated@@529 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) ($generated@@412 $generated@@191 $generated@@191)) (= (type $generated@@533) $generated@@75)) (= (type $generated@@534) $generated@@75)) (= (type $generated@@535) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@532 ($generated@@529 $generated@@533 $generated@@534) $generated@@535) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@191) ($generated@@0 ($generated@@92 ($generated@@410 $generated@@532) $generated@@536))) (and ($generated@@342 ($generated@@92 ($generated@@504 $generated@@532) $generated@@536) $generated@@534 $generated@@535) ($generated@@342 $generated@@536 $generated@@533 $generated@@535)))
 :pattern ( ($generated@@92 ($generated@@504 $generated@@532) $generated@@536))
 :pattern ( ($generated@@92 ($generated@@410 $generated@@532) $generated@@536))
))))
 :pattern ( ($generated@@85 $generated@@532 ($generated@@529 $generated@@533 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (! (let (($generated@@539 ($generated@@90 (type $generated@@537))))
 (=> (and (and (= (type $generated@@537) ($generated@@87 $generated@@539 $generated@@4)) (= (type $generated@@538) ($generated@@87 $generated@@539 $generated@@4))) ($generated@@354 $generated@@537 $generated@@538)) (= $generated@@537 $generated@@538)))
 :pattern ( ($generated@@354 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@541 T@T) ) (! (= (type ($generated@@540 $generated@@541)) ($generated@@87 $generated@@541 $generated@@4))
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@414 (type $generated@@542))))
(let (($generated@@544 ($generated@@413 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@412 $generated@@544 $generated@@543)) (= (= $generated@@542 ($generated@@411 $generated@@544 $generated@@543)) (= ($generated@@410 $generated@@542) ($generated@@540 $generated@@544))))))
 :pattern ( ($generated@@410 $generated@@542))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@414 (type $generated@@545))))
(let (($generated@@547 ($generated@@413 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@412 $generated@@547 $generated@@546)) (= (= $generated@@545 ($generated@@411 $generated@@547 $generated@@546)) (= ($generated@@455 $generated@@545) ($generated@@540 $generated@@546))))))
 :pattern ( ($generated@@455 $generated@@545))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@414 (type $generated@@548))))
(let (($generated@@550 ($generated@@413 (type $generated@@548))))
 (=> (= (type $generated@@548) ($generated@@412 $generated@@550 $generated@@549)) (= (= $generated@@548 ($generated@@411 $generated@@550 $generated@@549)) (= ($generated@@503 $generated@@548) ($generated@@540 $generated@@191))))))
 :pattern ( ($generated@@503 $generated@@548))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@396 (type $generated@@551))))
(let (($generated@@553 ($generated@@395 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@394 $generated@@553 $generated@@552)) (or (= $generated@@551 ($generated@@393 $generated@@553 $generated@@552)) (exists (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (and (and (= (type $generated@@554) $generated@@191) (= (type $generated@@555) $generated@@191)) ($generated@@0 ($generated@@92 ($generated@@495 $generated@@551) ($generated@@313 ($generated@@294 $generated@@554 $generated@@555)))))
 :no-pattern (type $generated@@554)
 :no-pattern (type $generated@@555)
 :no-pattern ($generated $generated@@554)
 :no-pattern ($generated@@0 $generated@@554)
 :no-pattern ($generated $generated@@555)
 :no-pattern ($generated@@0 $generated@@555)
))))))
 :pattern ( ($generated@@495 $generated@@551))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@414 (type $generated@@556))))
(let (($generated@@558 ($generated@@413 (type $generated@@556))))
 (=> (= (type $generated@@556) ($generated@@412 $generated@@558 $generated@@557)) (or (= $generated@@556 ($generated@@411 $generated@@558 $generated@@557)) (exists (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (and (and (= (type $generated@@559) $generated@@191) (= (type $generated@@560) $generated@@191)) ($generated@@0 ($generated@@92 ($generated@@503 $generated@@556) ($generated@@313 ($generated@@294 $generated@@559 $generated@@560)))))
 :no-pattern (type $generated@@559)
 :no-pattern (type $generated@@560)
 :no-pattern ($generated $generated@@559)
 :no-pattern ($generated@@0 $generated@@559)
 :no-pattern ($generated $generated@@560)
 :no-pattern ($generated@@0 $generated@@560)
))))))
 :pattern ( ($generated@@503 $generated@@556))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@191) ($generated@@295 $generated@@561 $generated@@46)) (and (= ($generated@@313 ($generated@@278 $generated@@2 $generated@@561)) $generated@@561) ($generated@@161 ($generated@@278 $generated@@2 $generated@@561) $generated@@46)))
 :pattern ( ($generated@@295 $generated@@561 $generated@@46))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@191) ($generated@@295 $generated@@562 $generated@@47)) (and (= ($generated@@313 ($generated@@278 $generated@@3 $generated@@562)) $generated@@562) ($generated@@161 ($generated@@278 $generated@@3 $generated@@562) $generated@@47)))
 :pattern ( ($generated@@295 $generated@@562 $generated@@47))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@191) ($generated@@295 $generated@@563 $generated@@44)) (and (= ($generated@@313 ($generated@@278 $generated@@4 $generated@@563)) $generated@@563) ($generated@@161 ($generated@@278 $generated@@4 $generated@@563) $generated@@44)))
 :pattern ( ($generated@@295 $generated@@563 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@564) 22))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@191) ($generated@@295 $generated@@565 $generated@@45)) (and (= ($generated@@313 ($generated@@278 $generated@@564 $generated@@565)) $generated@@565) ($generated@@161 ($generated@@278 $generated@@564 $generated@@565) $generated@@45)))
 :pattern ( ($generated@@295 $generated@@565 $generated@@45))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@75) (= ($generated@@295 ($generated@@313 $generated@@566) $generated@@567) ($generated@@161 $generated@@566 $generated@@567)))
 :pattern ( ($generated@@295 ($generated@@313 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@90 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@87 $generated@@569 $generated@@2)) (<= 0 ($generated@@379 $generated@@568))))
 :pattern ( ($generated@@379 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@366 (type $generated@@570))))
 (=> (= (type $generated@@570) ($generated@@365 $generated@@571)) (<= 0 ($generated@@364 $generated@@570))))
 :pattern ( ($generated@@364 $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@75)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@75) (= (type $generated@@575) $generated@@75)) (= ($generated@@572 ($generated@@521 $generated@@574 $generated@@575)) $generated@@574))
 :pattern ( ($generated@@521 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@75)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@75) (= (type $generated@@579) $generated@@75)) (= ($generated@@576 ($generated@@521 $generated@@578 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@521 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@75) (= (type $generated@@581) $generated@@75)) (= ($generated@@83 ($generated@@521 $generated@@580 $generated@@581)) $generated@@58))
 :pattern ( ($generated@@521 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@75)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@75) (= (type $generated@@585) $generated@@75)) (= ($generated@@582 ($generated@@529 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@529 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@75)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@75) (= (type $generated@@589) $generated@@75)) (= ($generated@@586 ($generated@@529 $generated@@588 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@529 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@75) (= (type $generated@@591) $generated@@75)) (= ($generated@@83 ($generated@@529 $generated@@590 $generated@@591)) $generated@@59))
 :pattern ( ($generated@@529 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@191) (= (type $generated@@593) $generated@@191)) (= ($generated@@350 ($generated@@294 $generated@@592 $generated@@593)) $generated@@65))
 :pattern ( ($generated@@294 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@75)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@75) (= (type $generated@@597) $generated@@75)) (= ($generated@@594 ($generated@@181 $generated@@596 $generated@@597)) $generated@@596))
 :pattern ( ($generated@@181 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@75)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@75) (= (type $generated@@601) $generated@@75)) (= ($generated@@598 ($generated@@181 $generated@@600 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@181 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@191) (= (type $generated@@603) $generated@@191)) (= ($generated@@189 ($generated@@294 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@294 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@191) (= (type $generated@@605) $generated@@191)) (= ($generated@@190 ($generated@@294 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@294 $generated@@604 $generated@@605))
)))
(assert  (and (forall (($generated@@608 T@U) ) (! (= (type ($generated@@606 $generated@@608)) $generated@@75)
 :pattern ( ($generated@@606 $generated@@608))
)) (forall (($generated@@609 T@U) ($generated@@610 Int) ) (! (let (($generated@@611 ($generated@@366 (type $generated@@609))))
(= (type ($generated@@607 $generated@@609 $generated@@610)) $generated@@611))
 :pattern ( ($generated@@607 $generated@@609 $generated@@610))
))))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@365 $generated@@191)) (= (type $generated@@613) $generated@@75)) (= (type $generated@@614) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@612 ($generated@@606 $generated@@613) $generated@@614) (forall (($generated@@615 Int) ) (!  (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@364 $generated@@612))) ($generated@@342 ($generated@@607 $generated@@612 $generated@@615) $generated@@613 $generated@@614))
 :pattern ( ($generated@@607 $generated@@612 $generated@@615))
))))
 :pattern ( ($generated@@85 $generated@@612 ($generated@@606 $generated@@613) $generated@@614))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@75) (= (type $generated@@617) $generated@@88)) (or ($generated@@462 $generated@@616 ($generated@@330 $generated@@617)) (and (not (= 1 $generated@@269)) (and (not (= $generated@@617 $generated@@153)) ($generated@@161 $generated@@617 ($generated@@175 $generated@@616)))))) (= ($generated@@314 $generated@@616 ($generated@@330 $generated@@617)) ($generated@@277 $generated@@616 ($generated@@330 $generated@@617))))
 :weight 3
 :pattern ( ($generated@@314 $generated@@616 ($generated@@330 $generated@@617)))
))))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@618 ($generated@@86 $generated@@619)) $generated@@619)
 :pattern ( ($generated@@86 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (= (type ($generated@@620 $generated@@621)) $generated@@75)
 :pattern ( ($generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@75) (= ($generated@@620 ($generated@@319 $generated@@622)) $generated@@622))
 :pattern ( ($generated@@319 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@75) (= ($generated@@83 ($generated@@319 $generated@@623)) $generated@@54))
 :pattern ( ($generated@@319 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@75)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@75) (= ($generated@@624 ($generated@@324 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@324 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@75) (= ($generated@@83 ($generated@@324 $generated@@627)) $generated@@55))
 :pattern ( ($generated@@324 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@75)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@75) (= ($generated@@628 ($generated@@196 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@196 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@75) (= ($generated@@83 ($generated@@196 $generated@@631)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@75)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@75) (= ($generated@@632 ($generated@@606 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@606 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@75) (= ($generated@@83 ($generated@@606 $generated@@635)) $generated@@57))
 :pattern ( ($generated@@606 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@75)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@75) (= ($generated@@636 ($generated@@164 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@164 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@75)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@75) (= ($generated@@639 ($generated@@163 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@163 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ) (! (= (type ($generated@@642 $generated@@643)) $generated@@75)
 :pattern ( ($generated@@642 $generated@@643))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@75) (= ($generated@@642 ($generated@@170 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@170 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@75)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@75) (= ($generated@@645 ($generated@@152 $generated@@647)) $generated@@647))
 :pattern ( ($generated@@152 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@75)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@75) (= ($generated@@648 ($generated@@175 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@175 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@651)))
(= ($generated@@278 $generated@@652 ($generated@@313 $generated@@651)) $generated@@651))
 :pattern ( ($generated@@313 $generated@@651))
)))
(assert  (=> (<= 1 $generated@@269) (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@75) (= (type $generated@@654) $generated@@88)) (or ($generated@@462 $generated@@653 $generated@@654) (and (not (= 1 $generated@@269)) (and (not (= $generated@@654 $generated@@153)) ($generated@@161 $generated@@654 ($generated@@175 $generated@@653)))))) true)
 :pattern ( ($generated@@314 $generated@@653 $generated@@654))
))))
(assert  (=> (< 0 $generated@@269) (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@75) (= (type $generated@@656) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@657) $generated@@88)) (and ($generated@@273 $generated@@656) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@656 $generated@@657) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@277 $generated@@655 $generated@@657)) $generated@@46 $generated@@656))
 :pattern ( ($generated@@277 $generated@@655 $generated@@657) ($generated@@94 ($generated@@92 $generated@@656 $generated@@657) $generated@@60))
))))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@658) ($generated@@394 $generated@@191 $generated@@191)) (= (type $generated@@659) $generated@@75)) (= (type $generated@@660) $generated@@75)) (= ($generated@@161 $generated@@658 ($generated@@521 $generated@@659 $generated@@660)) (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@191) ($generated@@0 ($generated@@92 ($generated@@392 $generated@@658) $generated@@661))) (and ($generated@@295 ($generated@@92 ($generated@@496 $generated@@658) $generated@@661) $generated@@660) ($generated@@295 $generated@@661 $generated@@659)))
 :pattern ( ($generated@@92 ($generated@@496 $generated@@658) $generated@@661))
 :pattern ( ($generated@@92 ($generated@@392 $generated@@658) $generated@@661))
))))
 :pattern ( ($generated@@161 $generated@@658 ($generated@@521 $generated@@659 $generated@@660)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@662) ($generated@@412 $generated@@191 $generated@@191)) (= (type $generated@@663) $generated@@75)) (= (type $generated@@664) $generated@@75)) (= ($generated@@161 $generated@@662 ($generated@@529 $generated@@663 $generated@@664)) (forall (($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@191) ($generated@@0 ($generated@@92 ($generated@@410 $generated@@662) $generated@@665))) (and ($generated@@295 ($generated@@92 ($generated@@504 $generated@@662) $generated@@665) $generated@@664) ($generated@@295 $generated@@665 $generated@@663)))
 :pattern ( ($generated@@92 ($generated@@504 $generated@@662) $generated@@665))
 :pattern ( ($generated@@92 ($generated@@410 $generated@@662) $generated@@665))
))))
 :pattern ( ($generated@@161 $generated@@662 ($generated@@529 $generated@@663 $generated@@664)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@191) (= (type $generated@@669) $generated@@191)) (< ($generated@@666 $generated@@668) ($generated@@667 ($generated@@294 $generated@@668 $generated@@669))))
 :pattern ( ($generated@@294 $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@191) (= (type $generated@@671) $generated@@191)) (< ($generated@@666 $generated@@671) ($generated@@667 ($generated@@294 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@294 $generated@@670 $generated@@671))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 Int) ($generated@@676 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@672) $generated@@75) (= (type $generated@@673) $generated@@274)) (= (type $generated@@674) $generated@@88)) (= (type $generated@@676) $generated@@146)) (or ($generated@@275 $generated@@672 $generated@@674 $generated@@675 $generated@@676) (and (not (= 2 $generated@@269)) (and (and (and (not (= $generated@@674 $generated@@153)) ($generated@@161 $generated@@674 ($generated@@175 $generated@@672))) (<= ($generated@@272 0) $generated@@675)) ($generated@@161 $generated@@676 ($generated@@170 $generated@@46)))))) true)
 :pattern ( ($generated@@270 $generated@@672 $generated@@673 $generated@@674 $generated@@675 $generated@@676))
))))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@191) (= (type $generated@@678) $generated@@75)) (= (type $generated@@679) $generated@@75)) ($generated@@295 $generated@@677 ($generated@@521 $generated@@678 $generated@@679))) (and (= ($generated@@313 ($generated@@278 ($generated@@394 $generated@@191 $generated@@191) $generated@@677)) $generated@@677) ($generated@@161 ($generated@@278 ($generated@@394 $generated@@191 $generated@@191) $generated@@677) ($generated@@521 $generated@@678 $generated@@679))))
 :pattern ( ($generated@@295 $generated@@677 ($generated@@521 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) $generated@@191) (= (type $generated@@681) $generated@@75)) (= (type $generated@@682) $generated@@75)) ($generated@@295 $generated@@680 ($generated@@529 $generated@@681 $generated@@682))) (and (= ($generated@@313 ($generated@@278 ($generated@@412 $generated@@191 $generated@@191) $generated@@680)) $generated@@680) ($generated@@161 ($generated@@278 ($generated@@412 $generated@@191 $generated@@191) $generated@@680) ($generated@@529 $generated@@681 $generated@@682))))
 :pattern ( ($generated@@295 $generated@@680 ($generated@@529 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@75) (= (type $generated@@684) $generated@@75)) (= (type $generated@@685) $generated@@191)) ($generated@@295 $generated@@685 ($generated@@181 $generated@@683 $generated@@684))) (and (= ($generated@@313 ($generated@@278 $generated@@182 $generated@@685)) $generated@@685) ($generated@@161 ($generated@@278 $generated@@182 $generated@@685) ($generated@@181 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@295 $generated@@685 ($generated@@181 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (and (= (type $generated@@686) $generated@@146) (= (type $generated@@687) $generated@@75)) (= (type $generated@@688) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@273 $generated@@688)) (= ($generated@@85 $generated@@686 ($generated@@164 $generated@@687) $generated@@688)  (=> ($generated@@143 $generated@@687 $generated@@688 $generated@@686) (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@88) (=> (and (not (= $generated@@689 $generated@@153)) ($generated@@0 ($generated@@92 ($generated@@334 $generated@@687 $generated@@688 $generated@@686) ($generated@@313 $generated@@689)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@688 $generated@@689) $generated@@60))))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@687 $generated@@688 $generated@@686) ($generated@@313 $generated@@689)))
)))))
 :pattern ( ($generated@@85 $generated@@686 ($generated@@164 $generated@@687) $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ) (! (let (($generated@@691 (type $generated@@690)))
 (not ($generated@@0 ($generated@@92 ($generated@@355 $generated@@691) $generated@@690))))
 :pattern ( (let (($generated@@691 (type $generated@@690)))
($generated@@92 ($generated@@355 $generated@@691) $generated@@690)))
)))
(assert (forall (($generated@@692 T@U) ) (! (let (($generated@@693 (type $generated@@692)))
 (not ($generated@@0 ($generated@@92 ($generated@@540 $generated@@693) $generated@@692))))
 :pattern ( (let (($generated@@693 (type $generated@@692)))
($generated@@92 ($generated@@540 $generated@@693) $generated@@692)))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 Int) ($generated@@699 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@694) $generated@@75) (= (type $generated@@695) $generated@@274)) (= (type $generated@@696) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@697) $generated@@88)) (= (type $generated@@699) $generated@@146)) (or ($generated@@275 $generated@@694 ($generated@@330 $generated@@697) ($generated@@272 $generated@@698) ($generated@@330 $generated@@699)) (and (not (= 2 $generated@@269)) (and (and (and ($generated@@273 $generated@@696) (and (not (= $generated@@697 $generated@@153)) (and ($generated@@161 $generated@@697 ($generated@@175 $generated@@694)) ($generated@@85 $generated@@697 ($generated@@175 $generated@@694) $generated@@696)))) (<= ($generated@@272 0) $generated@@698)) ($generated@@161 $generated@@699 ($generated@@170 $generated@@46)))))) (and (=> (not (or (= ($generated@@272 $generated@@698) ($generated@@272 0)) (= ($generated@@276 $generated@@694 ($generated@@330 $generated@@697)) $generated@@153))) (and (=> (= ($generated@@277 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 17)) ($generated@@275 $generated@@694 ($generated@@276 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 (- $generated@@698 1)) ($generated@@144 $generated@@694 ($generated@@330 $generated@@697)))) (=> (not (= ($generated@@277 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 17))) ($generated@@275 $generated@@694 ($generated@@276 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 (- $generated@@698 1)) ($generated@@330 $generated@@699))))) (= ($generated@@270 $generated@@694 ($generated@@271 $generated@@695) ($generated@@330 $generated@@697) ($generated@@272 $generated@@698) ($generated@@330 $generated@@699)) (ite  (or (= ($generated@@272 $generated@@698) ($generated@@272 0)) (= ($generated@@276 $generated@@694 ($generated@@330 $generated@@697)) $generated@@153)) ($generated ($generated@@278 $generated@@2 ($generated@@279 $generated@@46 $generated@@696 ($generated@@330 $generated@@699)))) (ite (= ($generated@@277 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 17)) ($generated@@270 $generated@@694 ($generated@@271 $generated@@695) ($generated@@276 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 (- $generated@@698 1)) ($generated@@144 $generated@@694 ($generated@@330 $generated@@697))) ($generated@@270 $generated@@694 ($generated@@271 $generated@@695) ($generated@@276 $generated@@694 ($generated@@330 $generated@@697)) ($generated@@272 (- $generated@@698 1)) ($generated@@330 $generated@@699)))))))
 :weight 3
 :pattern ( ($generated@@270 $generated@@694 ($generated@@271 $generated@@695) ($generated@@330 $generated@@697) ($generated@@272 $generated@@698) ($generated@@330 $generated@@699)) ($generated@@273 $generated@@696))
))))
(assert  (=> (< 0 $generated@@269) (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (and (= (type $generated@@700) $generated@@75) (= (type $generated@@701) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@702) $generated@@88)) (and ($generated@@273 $generated@@701) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@701 $generated@@702) $generated@@60)))) ($generated@@85 ($generated@@276 $generated@@700 $generated@@702) ($generated@@152 $generated@@700) $generated@@701))
 :pattern ( ($generated@@276 $generated@@700 $generated@@702) ($generated@@94 ($generated@@92 $generated@@701 $generated@@702) $generated@@60))
))))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@75) (= (type $generated@@704) $generated@@146)) (= ($generated@@161 $generated@@704 ($generated@@170 $generated@@703))  (and ($generated@@161 $generated@@704 ($generated@@163 $generated@@703)) ($generated@@143 $generated@@703 $generated@@353 $generated@@704))))
 :pattern ( ($generated@@161 $generated@@704 ($generated@@170 $generated@@703)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) $generated@@75) (= (type $generated@@706) $generated@@75)) (and (= ($generated@@83 ($generated@@181 $generated@@705 $generated@@706)) $generated@@66) (= ($generated@@385 ($generated@@181 $generated@@705 $generated@@706)) $generated@@73)))
 :pattern ( ($generated@@181 $generated@@705 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@182) (= ($generated@@666 ($generated@@313 $generated@@707)) ($generated@@667 $generated@@707)))
 :pattern ( ($generated@@666 ($generated@@313 $generated@@707)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@146) (= (type $generated@@709) $generated@@75)) (= ($generated@@161 $generated@@708 ($generated@@164 $generated@@709)) (forall (($generated@@710 T@U) ) (!  (=> (= (type $generated@@710) ($generated@@87 $generated@@88 $generated@@89)) (=> (and ($generated@@273 $generated@@710) ($generated@@143 $generated@@709 $generated@@710 $generated@@708)) ($generated@@295 ($generated@@279 $generated@@709 $generated@@710 $generated@@708) $generated@@709)))
 :pattern ( ($generated@@279 $generated@@709 $generated@@710 $generated@@708))
))))
 :pattern ( ($generated@@161 $generated@@708 ($generated@@164 $generated@@709)))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@191) ($generated@@295 $generated@@711 ($generated@@86 0))) (and (= ($generated@@313 ($generated@@278 $generated@@2 $generated@@711)) $generated@@711) ($generated@@161 ($generated@@278 ($generated@@87 $generated@@191 $generated@@4) $generated@@711) ($generated@@86 0))))
 :pattern ( ($generated@@295 $generated@@711 ($generated@@86 0)))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@191) (= (type $generated@@713) $generated@@75)) ($generated@@295 $generated@@712 ($generated@@319 $generated@@713))) (and (= ($generated@@313 ($generated@@278 ($generated@@87 $generated@@191 $generated@@4) $generated@@712)) $generated@@712) ($generated@@161 ($generated@@278 ($generated@@87 $generated@@191 $generated@@4) $generated@@712) ($generated@@319 $generated@@713))))
 :pattern ( ($generated@@295 $generated@@712 ($generated@@319 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) $generated@@191) (= (type $generated@@715) $generated@@75)) ($generated@@295 $generated@@714 ($generated@@324 $generated@@715))) (and (= ($generated@@313 ($generated@@278 ($generated@@87 $generated@@191 $generated@@4) $generated@@714)) $generated@@714) ($generated@@161 ($generated@@278 ($generated@@87 $generated@@191 $generated@@4) $generated@@714) ($generated@@324 $generated@@715))))
 :pattern ( ($generated@@295 $generated@@714 ($generated@@324 $generated@@715)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@716) $generated@@191) (= (type $generated@@717) $generated@@75)) ($generated@@295 $generated@@716 ($generated@@196 $generated@@717))) (and (= ($generated@@313 ($generated@@278 ($generated@@87 $generated@@191 $generated@@2) $generated@@716)) $generated@@716) ($generated@@161 ($generated@@278 ($generated@@87 $generated@@191 $generated@@2) $generated@@716) ($generated@@196 $generated@@717))))
 :pattern ( ($generated@@295 $generated@@716 ($generated@@196 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (= (type $generated@@718) $generated@@191) (= (type $generated@@719) $generated@@75)) ($generated@@295 $generated@@718 ($generated@@606 $generated@@719))) (and (= ($generated@@313 ($generated@@278 ($generated@@365 $generated@@191) $generated@@718)) $generated@@718) ($generated@@161 ($generated@@278 ($generated@@365 $generated@@191) $generated@@718) ($generated@@606 $generated@@719))))
 :pattern ( ($generated@@295 $generated@@718 ($generated@@606 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@75) (= (type $generated@@721) $generated@@191)) ($generated@@295 $generated@@721 ($generated@@164 $generated@@720))) (and (= ($generated@@313 ($generated@@278 $generated@@146 $generated@@721)) $generated@@721) ($generated@@161 ($generated@@278 $generated@@146 $generated@@721) ($generated@@164 $generated@@720))))
 :pattern ( ($generated@@295 $generated@@721 ($generated@@164 $generated@@720)))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) $generated@@75) (= (type $generated@@723) $generated@@191)) ($generated@@295 $generated@@723 ($generated@@163 $generated@@722))) (and (= ($generated@@313 ($generated@@278 $generated@@146 $generated@@723)) $generated@@723) ($generated@@161 ($generated@@278 $generated@@146 $generated@@723) ($generated@@163 $generated@@722))))
 :pattern ( ($generated@@295 $generated@@723 ($generated@@163 $generated@@722)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) $generated@@75) (= (type $generated@@725) $generated@@191)) ($generated@@295 $generated@@725 ($generated@@170 $generated@@724))) (and (= ($generated@@313 ($generated@@278 $generated@@146 $generated@@725)) $generated@@725) ($generated@@161 ($generated@@278 $generated@@146 $generated@@725) ($generated@@170 $generated@@724))))
 :pattern ( ($generated@@295 $generated@@725 ($generated@@170 $generated@@724)))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (and (= (type $generated@@726) $generated@@75) (= (type $generated@@727) $generated@@191)) ($generated@@295 $generated@@727 ($generated@@152 $generated@@726))) (and (= ($generated@@313 ($generated@@278 $generated@@88 $generated@@727)) $generated@@727) ($generated@@161 ($generated@@278 $generated@@88 $generated@@727) ($generated@@152 $generated@@726))))
 :pattern ( ($generated@@295 $generated@@727 ($generated@@152 $generated@@726)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) $generated@@75) (= (type $generated@@729) $generated@@191)) ($generated@@295 $generated@@729 ($generated@@175 $generated@@728))) (and (= ($generated@@313 ($generated@@278 $generated@@88 $generated@@729)) $generated@@729) ($generated@@161 ($generated@@278 $generated@@88 $generated@@729) ($generated@@175 $generated@@728))))
 :pattern ( ($generated@@295 $generated@@729 ($generated@@175 $generated@@728)))
)))
(assert (= ($generated@@83 $generated@@158) $generated@@61))
(assert (= ($generated@@385 $generated@@158) $generated@@69))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@730) ($generated@@87 $generated@@191 $generated@@2)) (= (type $generated@@731) $generated@@75)) (= (type $generated@@732) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@730 ($generated@@196 $generated@@731) $generated@@732) (forall (($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@191) (< 0 ($generated ($generated@@92 $generated@@730 $generated@@733)))) ($generated@@342 $generated@@733 $generated@@731 $generated@@732))
 :pattern ( ($generated@@92 $generated@@730 $generated@@733))
))))
 :pattern ( ($generated@@85 $generated@@730 ($generated@@196 $generated@@731) $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@734) $generated@@75) (= (type $generated@@735) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@736) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@191))) (= (type $generated@@737) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@738) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@191 $generated@@4)))) (= (type $generated@@739) $generated@@191)) (= ($generated@@0 ($generated@@92 ($generated@@334 $generated@@734 $generated@@735 ($generated@@302 $generated@@736 $generated@@737 $generated@@738)) $generated@@739)) ($generated@@0 ($generated@@92 ($generated@@92 $generated@@738 $generated@@735) $generated@@739))))
 :pattern ( ($generated@@92 ($generated@@334 $generated@@734 $generated@@735 ($generated@@302 $generated@@736 $generated@@737 $generated@@738)) $generated@@739))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (= (type $generated@@740) $generated@@75) (= (type $generated@@741) $generated@@88)) (= (type $generated@@742) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@314 $generated@@740 $generated@@741) ($generated ($generated@@278 $generated@@2 ($generated@@279 $generated@@46 $generated@@742 ($generated@@144 $generated@@740 $generated@@741))))))
 :pattern ( ($generated@@314 $generated@@740 $generated@@741) ($generated@@273 $generated@@742))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@743) $generated@@146) (= (type $generated@@744) $generated@@75)) (= (type $generated@@745) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@273 $generated@@745) ($generated@@85 $generated@@743 ($generated@@164 $generated@@744) $generated@@745))) ($generated@@143 $generated@@744 $generated@@745 $generated@@743)) ($generated@@342 ($generated@@279 $generated@@744 $generated@@745 $generated@@743) $generated@@744 $generated@@745))
 :pattern ( ($generated@@85 $generated@@743 ($generated@@164 $generated@@744) $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (= (type $generated@@746) $generated@@182) (= (type $generated@@747) $generated@@75)) (= (type $generated@@748) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@273 $generated@@748) (and ($generated@@180 $generated@@746) (exists (($generated@@749 T@U) ) (!  (and (= (type $generated@@749) $generated@@75) ($generated@@85 $generated@@746 ($generated@@181 $generated@@747 $generated@@749) $generated@@748))
 :pattern ( ($generated@@85 $generated@@746 ($generated@@181 $generated@@747 $generated@@749) $generated@@748))
))))) ($generated@@342 ($generated@@189 $generated@@746) $generated@@747 $generated@@748))
 :pattern ( ($generated@@342 ($generated@@189 $generated@@746) $generated@@747 $generated@@748))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (and (= (type $generated@@750) $generated@@182) (= (type $generated@@751) $generated@@75)) (= (type $generated@@752) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@273 $generated@@752) (and ($generated@@180 $generated@@750) (exists (($generated@@753 T@U) ) (!  (and (= (type $generated@@753) $generated@@75) ($generated@@85 $generated@@750 ($generated@@181 $generated@@753 $generated@@751) $generated@@752))
 :pattern ( ($generated@@85 $generated@@750 ($generated@@181 $generated@@753 $generated@@751) $generated@@752))
))))) ($generated@@342 ($generated@@190 $generated@@750) $generated@@751 $generated@@752))
 :pattern ( ($generated@@342 ($generated@@190 $generated@@750) $generated@@751 $generated@@752))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (and (and (= (type $generated@@754) $generated@@146) (= (type $generated@@755) $generated@@75)) (= (type $generated@@756) $generated@@75)) (and ($generated@@161 $generated@@754 ($generated@@164 $generated@@755)) (forall (($generated@@757 T@U) ) (!  (=> (and (= (type $generated@@757) $generated@@191) ($generated@@295 $generated@@757 $generated@@755)) ($generated@@295 $generated@@757 $generated@@756))
 :pattern ( ($generated@@295 $generated@@757 $generated@@755))
 :pattern ( ($generated@@295 $generated@@757 $generated@@756))
)))) ($generated@@161 $generated@@754 ($generated@@164 $generated@@756)))
 :pattern ( ($generated@@161 $generated@@754 ($generated@@164 $generated@@755)) ($generated@@161 $generated@@754 ($generated@@164 $generated@@756)))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@191) (= (type $generated@@759) $generated@@191)) (= ($generated@@294 ($generated@@330 $generated@@758) ($generated@@330 $generated@@759)) ($generated@@330 ($generated@@294 $generated@@758 $generated@@759))))
 :pattern ( ($generated@@294 ($generated@@330 $generated@@758) ($generated@@330 $generated@@759)))
)))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ($generated@@763 Int) ($generated@@764 T@U) ) (!  (=> (and (and (and (= (type $generated@@760) $generated@@75) (= (type $generated@@761) $generated@@274)) (= (type $generated@@762) $generated@@88)) (= (type $generated@@764) $generated@@146)) (= ($generated@@270 $generated@@760 ($generated@@271 $generated@@761) $generated@@762 $generated@@763 $generated@@764) ($generated@@270 $generated@@760 $generated@@761 $generated@@762 $generated@@763 $generated@@764)))
 :pattern ( ($generated@@270 $generated@@760 ($generated@@271 $generated@@761) $generated@@762 $generated@@763 $generated@@764))
)))
(assert (forall (($generated@@765 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@272 $generated@@765))) ($generated@@330 ($generated@@313 ($generated@@8 $generated@@765))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@272 $generated@@765))))
)))
(assert (forall (($generated@@766 T@U) ) (! (= ($generated@@313 ($generated@@330 $generated@@766)) ($generated@@330 ($generated@@313 $generated@@766)))
 :pattern ( ($generated@@313 ($generated@@330 $generated@@766)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (= (type $generated@@767) $generated@@75) (= (type $generated@@768) $generated@@88)) (and (not (= $generated@@768 $generated@@153)) ($generated@@161 $generated@@768 ($generated@@175 $generated@@767)))) (= ($generated@@145 $generated@@767 $generated@@768) true))
 :pattern ( ($generated@@145 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 T@U) ) (! (let (($generated@@770 ($generated@@366 (type $generated@@769))))
 (=> (and (= (type $generated@@769) ($generated@@365 $generated@@770)) (= ($generated@@364 $generated@@769) 0)) (= $generated@@769 ($generated@@363 $generated@@770))))
 :pattern ( ($generated@@364 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@771) $generated@@75) (= (type $generated@@772) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@773) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@191))) (= (type $generated@@774) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@775) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@191 $generated@@4)))) ($generated@@0 ($generated@@92 $generated@@774 $generated@@772))) ($generated@@143 $generated@@771 $generated@@772 ($generated@@302 $generated@@773 $generated@@774 $generated@@775)))
 :pattern ( ($generated@@143 $generated@@771 $generated@@772 ($generated@@302 $generated@@773 $generated@@774 $generated@@775)))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (! (let (($generated@@779 (type $generated@@777)))
 (=> (and (and (= (type $generated@@776) ($generated@@87 $generated@@779 $generated@@2)) (= (type $generated@@778) $generated@@2)) (<= 0 ($generated $generated@@778))) (= ($generated@@379 ($generated@@93 $generated@@776 $generated@@777 $generated@@778)) (+ (- ($generated@@379 $generated@@776) ($generated ($generated@@92 $generated@@776 $generated@@777))) ($generated $generated@@778)))))
 :pattern ( ($generated@@379 ($generated@@93 $generated@@776 $generated@@777 $generated@@778)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (= (type $generated@@780) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@781) $generated@@2)) ($generated@@85 $generated@@781 $generated@@46 $generated@@780))
 :pattern ( ($generated@@85 $generated@@781 $generated@@46 $generated@@780))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (= (type $generated@@782) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@783) $generated@@3)) ($generated@@85 $generated@@783 $generated@@47 $generated@@782))
 :pattern ( ($generated@@85 $generated@@783 $generated@@47 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (= (type $generated@@784) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@785) $generated@@4)) ($generated@@85 $generated@@785 $generated@@44 $generated@@784))
 :pattern ( ($generated@@85 $generated@@785 $generated@@44 $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@787) $generated@@564)) ($generated@@85 $generated@@787 $generated@@45 $generated@@786))
 :pattern ( ($generated@@85 $generated@@787 $generated@@45 $generated@@786))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@789) $generated@@191)) ($generated@@85 $generated@@789 $generated@@48 $generated@@788))
 :pattern ( ($generated@@85 $generated@@789 $generated@@48 $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@365 $generated@@191)) (= (type $generated@@791) $generated@@75)) (= ($generated@@161 $generated@@790 ($generated@@606 $generated@@791)) (forall (($generated@@792 Int) ) (!  (=> (and (<= 0 $generated@@792) (< $generated@@792 ($generated@@364 $generated@@790))) ($generated@@295 ($generated@@607 $generated@@790 $generated@@792) $generated@@791))
 :pattern ( ($generated@@607 $generated@@790 $generated@@792))
))))
 :pattern ( ($generated@@161 $generated@@790 ($generated@@606 $generated@@791)))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (= (type $generated@@793) $generated@@75) (= (type $generated@@794) $generated@@146)) (= ($generated@@161 $generated@@794 ($generated@@163 $generated@@793))  (and ($generated@@161 $generated@@794 ($generated@@164 $generated@@793)) ($generated@@354 ($generated@@334 $generated@@793 $generated@@353 $generated@@794) ($generated@@355 $generated@@191)))))
 :pattern ( ($generated@@161 $generated@@794 ($generated@@163 $generated@@793)))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 Int) ) (!  (=> (= (type $generated@@796) ($generated@@365 $generated@@191)) (=> (and (<= 0 $generated@@797) (< $generated@@797 ($generated@@364 $generated@@796))) (< ($generated@@667 ($generated@@278 $generated@@182 ($generated@@607 $generated@@796 $generated@@797))) ($generated@@795 $generated@@796))))
 :pattern ( ($generated@@667 ($generated@@278 $generated@@182 ($generated@@607 $generated@@796 $generated@@797))))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) ($generated@@394 $generated@@191 $generated@@191)) (= (type $generated@@799) $generated@@75)) (= (type $generated@@800) $generated@@75)) ($generated@@161 $generated@@798 ($generated@@521 $generated@@799 $generated@@800))) (and (and ($generated@@161 ($generated@@392 $generated@@798) ($generated@@319 $generated@@799)) ($generated@@161 ($generated@@444 $generated@@798) ($generated@@319 $generated@@800))) ($generated@@161 ($generated@@495 $generated@@798) ($generated@@319 ($generated@@181 $generated@@799 $generated@@800)))))
 :pattern ( ($generated@@161 $generated@@798 ($generated@@521 $generated@@799 $generated@@800)))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (and (and (= (type $generated@@801) ($generated@@412 $generated@@191 $generated@@191)) (= (type $generated@@802) $generated@@75)) (= (type $generated@@803) $generated@@75)) ($generated@@161 $generated@@801 ($generated@@529 $generated@@802 $generated@@803))) (and (and ($generated@@161 ($generated@@410 $generated@@801) ($generated@@324 $generated@@802)) ($generated@@161 ($generated@@455 $generated@@801) ($generated@@324 $generated@@803))) ($generated@@161 ($generated@@503 $generated@@801) ($generated@@324 ($generated@@181 $generated@@802 $generated@@803)))))
 :pattern ( ($generated@@161 $generated@@801 ($generated@@529 $generated@@802 $generated@@803)))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@2) ($generated@@161 $generated@@804 $generated@@46))
 :pattern ( ($generated@@161 $generated@@804 $generated@@46))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@3) ($generated@@161 $generated@@805 $generated@@47))
 :pattern ( ($generated@@161 $generated@@805 $generated@@47))
)))
(assert (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) $generated@@4) ($generated@@161 $generated@@806 $generated@@44))
 :pattern ( ($generated@@161 $generated@@806 $generated@@44))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) $generated@@564) ($generated@@161 $generated@@807 $generated@@45))
 :pattern ( ($generated@@161 $generated@@807 $generated@@45))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) $generated@@191) ($generated@@161 $generated@@808 $generated@@48))
 :pattern ( ($generated@@161 $generated@@808 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 () Int)
(declare-fun $generated@@813 () Int)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () Int)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@809) $generated@@75) (= (type $generated@@810) $generated@@88)) (= (type $generated@@811) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@816) $generated@@146)) (= (type $generated@@814) $generated@@146)) (= (type $generated@@817) ($generated@@203 $generated@@88 $generated@@4))) (= (type $generated@@818) ($generated@@203 $generated@@88 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@820  (=> (not (= ($generated@@277 $generated@@809 $generated@@810) ($generated@@272 17))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= ($generated@@276 $generated@@809 $generated@@810) $generated@@153))) (=> (not (= ($generated@@276 $generated@@809 $generated@@810) $generated@@153)) (=> ($generated@@85 ($generated@@276 $generated@@809 $generated@@810) ($generated@@152 $generated@@809) $generated@@811) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@161 ($generated@@8 (- $generated@@812 1)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (- $generated@@812 1)) $generated@@158) (=> (= $generated@@813 (- $generated@@812 1)) (=> (and ($generated@@85 ($generated@@8 $generated@@813) $generated@@158 $generated@@811) ($generated@@85 $generated@@814 ($generated@@170 $generated@@46) $generated@@811)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (<= 0 $generated@@812) (= $generated@@813 $generated@@812))) (=> (or (<= 0 $generated@@812) (= $generated@@813 $generated@@812)) (=> (= (ControlFlow 0 10) (- 0 9)) (< $generated@@813 $generated@@812))))))))))))))
(let (($generated@@821  (=> (= ($generated@@277 $generated@@809 $generated@@810) ($generated@@272 17)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (not (= ($generated@@276 $generated@@809 $generated@@810) $generated@@153))) (=> (not (= ($generated@@276 $generated@@809 $generated@@810) $generated@@153)) (=> ($generated@@85 ($generated@@276 $generated@@809 $generated@@810) ($generated@@152 $generated@@809) $generated@@811) (and (=> (= (ControlFlow 0 4) (- 0 7)) (not (= 1 $generated@@269))) (=> (not (= 1 $generated@@269)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@161 ($generated@@8 (- $generated@@812 1)) $generated@@158)) (=> ($generated@@161 ($generated@@8 (- $generated@@812 1)) $generated@@158) (=> (and (and (= $generated@@815 (- $generated@@812 1)) ($generated@@85 ($generated@@8 $generated@@815) $generated@@158 $generated@@811)) (and (= $generated@@816 ($generated@@144 $generated@@809 $generated@@810)) ($generated@@85 $generated@@816 ($generated@@170 $generated@@46) $generated@@811))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@812) (= $generated@@815 $generated@@812))) (=> (or (<= 0 $generated@@812) (= $generated@@815 $generated@@812)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@815 $generated@@812)))))))))))))))
(let (($generated@@822  (=> (not (or (= $generated@@812 ($generated@@272 0)) (= ($generated@@276 $generated@@809 $generated@@810) $generated@@153))) (and (=> (= (ControlFlow 0 14) 4) $generated@@821) (=> (= (ControlFlow 0 14) 10) $generated@@820)))))
(let (($generated@@823 true))
(let (($generated@@824  (=> (= $generated@@812 ($generated@@272 0)) (and (=> (= (ControlFlow 0 16) 2) $generated@@823) (=> (= (ControlFlow 0 16) 14) $generated@@822)))))
(let (($generated@@825  (=> (not (= $generated@@812 ($generated@@272 0))) (and (=> (= (ControlFlow 0 15) 2) $generated@@823) (=> (= (ControlFlow 0 15) 14) $generated@@822)))))
(let (($generated@@826  (=> (= $generated@@817 ($generated@@257 $generated@@153 $generated@@811 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@825) (=> (= (ControlFlow 0 17) 16) $generated@@824)))))
(let (($generated@@827 true))
(let (($generated@@828  (=> (= $generated@@818 ($generated@@202 $generated@@153 $generated@@811 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 1) $generated@@827) (=> (= (ControlFlow 0 18) 17) $generated@@826)))))
(let (($generated@@829  (=> (and (and (and ($generated@@273 $generated@@811) ($generated@@819 $generated@@811)) (and (not (= $generated@@810 $generated@@153)) (and ($generated@@161 $generated@@810 ($generated@@175 $generated@@809)) ($generated@@85 $generated@@810 ($generated@@175 $generated@@809) $generated@@811)))) (and (and (<= ($generated@@272 0) $generated@@812) ($generated@@161 $generated@@814 ($generated@@170 $generated@@46))) (and (= 2 $generated@@269) (= (ControlFlow 0 19) 18)))) $generated@@828)))
$generated@@829)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 (T@U T@U T@U Int Int) Int)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U T@U Int Int) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 () T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@204 (T@U T@U) T@U)
(declare-fun $generated@@205 (T@U T@U) Bool)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@T T@U T@U) T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@277 (T@T T@T) T@U)
(declare-fun $generated@@278 (T@T T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U T@U) Bool)
(declare-fun $generated@@318 (T@U T@U) Bool)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 () T@U)
(declare-fun $generated@@370 (T@U T@U T@U) T@U)
(declare-fun $generated@@371 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@375 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@478 (T@U T@U) T@U)
(declare-fun $generated@@486 (T@U T@U) T@U)
(declare-fun $generated@@500 (T@T) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 () T@T)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@572 (T@U Int) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@609 (T@U) Int)
(declare-fun $generated@@610 (T@U) Int)
(declare-fun $generated@@624 (T@T) T@U)
(declare-fun $generated@@630 (T@U) Bool)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@658 (T@U T@U) Bool)
(declare-fun $generated@@703 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@63) $generated@@78)) (= (type $generated@@64) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@77)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 16) (= (type $generated@@151) $generated@@91)) (= (type $generated@@153) $generated@@73)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ($generated@@159 Int) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@148) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@157) $generated@@91)) (or ($generated@@149 $generated@@156 $generated@@157 $generated@@158 $generated@@159) (and (not (= 1 $generated@@146)) (and (and (and ($generated@@150 $generated@@156) (and (not (= $generated@@157 $generated@@151)) (and ($generated@@152 $generated@@157 $generated@@153) ($generated@@88 $generated@@157 $generated@@153 $generated@@156)))) (<= ($generated@@154 0) $generated@@158)) (<= ($generated@@154 0) $generated@@159))))) (<= ($generated@@154 0) ($generated@@147 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@147 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@162) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (= (type $generated@@164) $generated@@73))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@2) (= (type $generated@@166) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@165 $generated@@164 $generated@@166))
 :pattern ( ($generated@@88 $generated@@165 $generated@@164 $generated@@166))
)))
(assert (= (type $generated@@167) $generated@@73))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@91) (= (type $generated@@169) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@168 $generated@@167 $generated@@169)  (or (= $generated@@168 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@169 $generated@@168) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@168 $generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@152 $generated@@170 ($generated@@89 0)))
 :pattern ( ($generated@@152 $generated@@170 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 17) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@73)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@73) (= (type $generated@@177) $generated@@73)) (= (type $generated@@178) $generated@@173)) ($generated@@152 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@152 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (and (= ($generated@@1 $generated@@182) 18) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@180 $generated@@183))
))) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@181 $generated@@184)) $generated@@182)
 :pattern ( ($generated@@181 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@173) (= (type $generated@@186) $generated@@173)) true) (= ($generated@@179 $generated@@185 $generated@@186)  (and (= ($generated@@180 $generated@@185) ($generated@@180 $generated@@186)) (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)))))
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@187 $generated@@188)) $generated@@148)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Int) ($generated@@193 Int) ) (!  (=> (and (and (= (type $generated@@189) $generated@@148) (= (type $generated@@190) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@191) $generated@@91)) (= ($generated@@147 ($generated@@187 $generated@@189) $generated@@190 $generated@@191 $generated@@192 $generated@@193) ($generated@@147 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193)))
 :pattern ( ($generated@@147 ($generated@@187 $generated@@189) $generated@@190 $generated@@191 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ) (! (= (type ($generated@@194 $generated@@196)) $generated@@73)
 :pattern ( ($generated@@194 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@198) $generated@@73)) ($generated@@152 $generated@@197 ($generated@@194 $generated@@198))) ($generated@@195 $generated@@197))
 :pattern ( ($generated@@152 $generated@@197 ($generated@@194 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@199 $generated@@200)) $generated@@73)
 :pattern ( ($generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= (type $generated@@201) $generated@@91) (= ($generated@@152 $generated@@201 $generated@@167)  (or (= $generated@@201 $generated@@151) (= ($generated@@199 $generated@@201) $generated@@167))))
 :pattern ( ($generated@@152 $generated@@201 $generated@@167))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@91) (= (type $generated@@203) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@202 $generated@@153 $generated@@203) ($generated@@88 $generated@@202 $generated@@167 $generated@@203)))
 :pattern ( ($generated@@88 $generated@@202 $generated@@153 $generated@@203))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= (type ($generated@@204 $generated@@206 $generated@@207)) $generated@@173)
 :pattern ( ($generated@@204 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (and (= (type $generated@@208) $generated@@73) (= (type $generated@@209) $generated@@73)) (= (type $generated@@210) $generated@@182)) (= (type $generated@@211) $generated@@182)) (= ($generated@@152 ($generated@@204 $generated@@210 $generated@@211) ($generated@@172 $generated@@208 $generated@@209))  (and ($generated@@205 $generated@@210 $generated@@208) ($generated@@205 $generated@@211 $generated@@209))))
 :pattern ( ($generated@@152 ($generated@@204 $generated@@210 $generated@@211) ($generated@@172 $generated@@208 $generated@@209)))
)))
(assert (= (type $generated@@212) ($generated@@75 $generated@@2)))
(assert (= ($generated@@83 $generated@@212) 0))
(assert (forall (($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@75 $generated@@214))
 :pattern ( ($generated@@213 $generated@@214 $generated@@215 $generated@@216))
)))
(assert (= ($generated@@213 $generated@@2 $generated@@65 $generated@@71) $generated@@212))
(assert  (not ($generated@@217 $generated@@212)))
(assert (= (type $generated@@218) ($generated@@75 $generated@@91)))
(assert (= ($generated@@83 $generated@@218) 0))
(assert (= ($generated@@213 $generated@@91 $generated@@65 $generated@@72) $generated@@218))
(assert  (not ($generated@@217 $generated@@218)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@173) (= (type $generated@@220) $generated@@173)) (= ($generated@@179 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@179 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@73)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@224) $generated@@73)) (= ($generated@@152 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@182) ($generated@@0 ($generated@@95 $generated@@223 $generated@@225))) ($generated@@205 $generated@@225 $generated@@224))
 :pattern ( ($generated@@95 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@152 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@73)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@229) $generated@@73)) (= ($generated@@152 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@182) ($generated@@0 ($generated@@95 $generated@@228 $generated@@230))) ($generated@@205 $generated@@230 $generated@@229))
 :pattern ( ($generated@@95 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@152 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@231 Int) ) (! (= ($generated@@154 $generated@@231) $generated@@231)
 :pattern ( ($generated@@154 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! (let (($generated@@234 (type $generated@@233)))
(= (type ($generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@232 $generated@@235) $generated@@235)
 :pattern ( ($generated@@232 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@73) (= (type $generated@@238) $generated@@73)) (= (type $generated@@239) $generated@@182)) (= (type $generated@@240) $generated@@182)) (= (type $generated@@241) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@150 $generated@@241)) (= ($generated@@88 ($generated@@204 $generated@@239 $generated@@240) ($generated@@172 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@88 ($generated@@204 $generated@@239 $generated@@240) ($generated@@172 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@78)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@173) (= ($generated@@171 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@63)))
 :pattern ( ($generated@@171 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@173) ($generated@@171 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@182) (= (type $generated@@247) $generated@@182)) (= $generated@@245 ($generated@@204 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@171 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 19)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@2) (= ($generated@@152 $generated@@256 $generated@@164) (<= ($generated@@154 0) ($generated $generated@@256))))
 :pattern ( ($generated@@152 $generated@@256 $generated@@164))
)))
(assert ($generated@@217 $generated@@60))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@182)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@73) (= (type $generated@@261) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@236 ($generated@@257 $generated@@259) $generated@@260 $generated@@261) ($generated@@88 $generated@@259 $generated@@260 $generated@@261)))
 :pattern ( ($generated@@236 ($generated@@257 $generated@@259) $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@263) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@264) $generated@@182)) (= (type $generated@@265) $generated@@73)) ($generated@@160 $generated@@262 $generated@@263)) ($generated@@236 $generated@@264 $generated@@265 $generated@@262)) ($generated@@236 $generated@@264 $generated@@265 $generated@@263))
 :pattern ( ($generated@@160 $generated@@262 $generated@@263) ($generated@@236 $generated@@264 $generated@@265 $generated@@262))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@266) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@267) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@269) $generated@@73)) ($generated@@160 $generated@@266 $generated@@267)) ($generated@@88 $generated@@268 $generated@@269 $generated@@266)) ($generated@@88 $generated@@268 $generated@@269 $generated@@267))
 :pattern ( ($generated@@160 $generated@@266 $generated@@267) ($generated@@88 $generated@@268 $generated@@269 $generated@@266))
)))
(assert (forall (($generated@@272 T@T) ) (! (= (type ($generated@@271 $generated@@272)) ($generated@@90 $generated@@272 $generated@@2))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@93 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@90 $generated@@274 $generated@@2)) (and (= (= ($generated@@270 $generated@@273) 0) (= $generated@@273 ($generated@@271 $generated@@274))) (=> (not (= ($generated@@270 $generated@@273) 0)) (exists (($generated@@275 T@U) ) (!  (and (= (type $generated@@275) $generated@@274) (< 0 ($generated ($generated@@95 $generated@@273 $generated@@275))))
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
))))))
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert  (and (and (and (and (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@281 $generated@@282)) 20)) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@283 $generated@@284)) $generated@@283)
 :pattern ( ($generated@@278 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@T) ($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@278 $generated@@285 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@278 $generated@@285 $generated@@286))
))) (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@279 (type $generated@@287))))
(= (type ($generated@@276 $generated@@287)) ($generated@@90 $generated@@288 $generated@@4)))
 :pattern ( ($generated@@276 $generated@@287))
))) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= (type ($generated@@277 $generated@@289 $generated@@290)) ($generated@@278 $generated@@289 $generated@@290))
 :pattern ( ($generated@@277 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@T) ) (! (let (($generated@@293 (type $generated@@291)))
 (not ($generated@@0 ($generated@@95 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291))))
 :pattern ( (let (($generated@@293 (type $generated@@291)))
($generated@@95 ($generated@@276 ($generated@@277 $generated@@293 $generated@@292)) $generated@@291)))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 21)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@90 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@95 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@95 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (= (type $generated@@313) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@314) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@312 $generated@@313 $generated@@314)) (and ($generated@@160 $generated@@313 $generated@@314) (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@76 (type $generated@@316))))
 (=> (and (and (= (type $generated@@315) $generated@@91) (= (type $generated@@316) ($generated@@75 $generated@@317))) (not ($generated@@217 $generated@@316))) (= ($generated@@97 ($generated@@95 $generated@@313 $generated@@315) $generated@@316) ($generated@@97 ($generated@@95 $generated@@314 $generated@@315) $generated@@316))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@314 $generated@@315) $generated@@316))
))))
 :pattern ( ($generated@@312 $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@93 (type $generated@@319))))
 (=> (and (= (type $generated@@319) ($generated@@90 $generated@@321 $generated@@4)) (= (type $generated@@320) ($generated@@90 $generated@@321 $generated@@4))) (= ($generated@@318 $generated@@319 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (= ($generated@@0 ($generated@@95 $generated@@319 $generated@@322)) ($generated@@0 ($generated@@95 $generated@@320 $generated@@322))))
 :pattern ( ($generated@@95 $generated@@319 $generated@@322))
 :pattern ( ($generated@@95 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@318 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@93 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@90 $generated@@324 $generated@@2)) (= ($generated@@195 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@95 $generated@@323 $generated@@325))) (<= ($generated ($generated@@95 $generated@@323 $generated@@325)) ($generated@@270 $generated@@323))))
 :pattern ( ($generated@@95 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@195 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@182) ($generated@@205 $generated@@329 $generated@@164)) (and (= ($generated@@257 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@152 ($generated@@326 $generated@@2 $generated@@329) $generated@@164)))
 :pattern ( ($generated@@205 $generated@@329 $generated@@164))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@182) ($generated@@205 $generated@@330 $generated@@167)) (and (= ($generated@@257 ($generated@@326 $generated@@91 $generated@@330)) $generated@@330) ($generated@@152 ($generated@@326 $generated@@91 $generated@@330) $generated@@167)))
 :pattern ( ($generated@@205 $generated@@330 $generated@@167))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@182) ($generated@@205 $generated@@331 $generated@@153)) (and (= ($generated@@257 ($generated@@326 $generated@@91 $generated@@331)) $generated@@331) ($generated@@152 ($generated@@326 $generated@@91 $generated@@331) $generated@@153)))
 :pattern ( ($generated@@205 $generated@@331 $generated@@153))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@91) (= ($generated@@152 $generated@@332 $generated@@153)  (and ($generated@@152 $generated@@332 $generated@@167) (not (= $generated@@332 $generated@@151)))))
 :pattern ( ($generated@@152 $generated@@332 $generated@@153))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@280 (type $generated@@333))))
(let (($generated@@335 ($generated@@279 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@278 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@277 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@95 ($generated@@276 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@276 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@280 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@90 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@280 (type $generated@@340))))
(let (($generated@@342 ($generated@@279 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@278 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@277 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@95 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(let (($generated@@346 ($generated@@297 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@296 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@295 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@95 ($generated@@294 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@294 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@298 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@90 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@298 (type $generated@@351))))
(let (($generated@@353 ($generated@@297 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@296 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@295 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@95 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@356) $generated@@73)) (= ($generated@@152 $generated@@355 ($generated@@194 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@355 $generated@@357)))) ($generated@@205 $generated@@357 $generated@@356))
 :pattern ( ($generated@@95 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@152 $generated@@355 ($generated@@194 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@359) $generated@@91)) (=> (and (and ($generated@@150 $generated@@358) (and (not (= $generated@@359 $generated@@151)) (= ($generated@@199 $generated@@359) $generated@@167))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@358 $generated@@359) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@358 $generated@@359) $generated@@212) $generated@@164 $generated@@358)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@358 $generated@@359) $generated@@212))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@361) $generated@@91)) (=> (and (and ($generated@@150 $generated@@360) (and (not (= $generated@@361 $generated@@151)) (= ($generated@@199 $generated@@361) $generated@@167))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@360 $generated@@361) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@360 $generated@@361) $generated@@218) $generated@@153 $generated@@360)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@360 $generated@@361) $generated@@218))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) $generated@@148)
 :pattern ( ($generated@@362 $generated@@364))
)) (= (type $generated@@363) $generated@@148)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 Int) ($generated@@369 Int) ) (!  (=> (and (and (= (type $generated@@365) $generated@@148) (= (type $generated@@366) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@367) $generated@@91)) (= ($generated@@147 $generated@@365 $generated@@366 $generated@@367 $generated@@368 $generated@@369) ($generated@@147 $generated@@363 $generated@@366 $generated@@367 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@147 ($generated@@362 $generated@@365) $generated@@366 $generated@@367 $generated@@368 $generated@@369))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@376 $generated@@377)) 22)) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@372 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@380 $generated@@381)) $generated@@381)
 :pattern ( ($generated@@372 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@374 (type $generated@@382))))
(= (type ($generated@@370 $generated@@382 $generated@@383 $generated@@384)) $generated@@385))
 :pattern ( ($generated@@370 $generated@@382 $generated@@383 $generated@@384))
))) (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 (type $generated@@387)))
(= (type ($generated@@375 $generated@@386 $generated@@387 $generated@@388 $generated@@389)) ($generated@@372 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@375 $generated@@386 $generated@@387 $generated@@388 $generated@@389))
))) (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@374 (type $generated@@392))))
 (=> (= (type $generated@@395) $generated@@396) (= ($generated@@370 ($generated@@375 $generated@@392 $generated@@393 $generated@@394 $generated@@395) $generated@@393 $generated@@394) $generated@@395)))
 :weight 0
))) (and (and (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (or (= $generated@@399 $generated@@401) (= ($generated@@370 ($generated@@375 $generated@@398 $generated@@399 $generated@@400 $generated@@397) $generated@@401 $generated@@402) ($generated@@370 $generated@@398 $generated@@401 $generated@@402)))
 :weight 0
)) (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (or (= $generated@@406 $generated@@408) (= ($generated@@370 ($generated@@375 $generated@@404 $generated@@405 $generated@@406 $generated@@403) $generated@@407 $generated@@408) ($generated@@370 $generated@@404 $generated@@407 $generated@@408)))
 :weight 0
))) (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (or true (= ($generated@@370 ($generated@@375 $generated@@410 $generated@@411 $generated@@412 $generated@@409) $generated@@413 $generated@@414) ($generated@@370 $generated@@410 $generated@@413 $generated@@414)))
 :weight 0
)))) (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@371 $generated@@415 $generated@@416 $generated@@417 $generated@@418 $generated@@419)) ($generated@@372 $generated@@91 $generated@@4))
 :pattern ( ($generated@@371 $generated@@415 $generated@@416 $generated@@417 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@76 (type $generated@@426))))
 (=> (and (and (and (and (and (and (= (type $generated@@420) $generated@@91) (= (type $generated@@421) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@422) ($generated@@75 $generated@@4))) (= (type $generated@@423) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@424) ($generated@@75 $generated@@4))) (= (type $generated@@425) $generated@@91)) (= (type $generated@@426) ($generated@@75 $generated@@427))) (= ($generated@@0 ($generated@@370 ($generated@@371 $generated@@420 $generated@@421 $generated@@422 $generated@@423 $generated@@424) $generated@@425 $generated@@426))  (=> (and (not (= $generated@@425 $generated@@420)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@421 $generated@@425) $generated@@422))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@423 $generated@@425) $generated@@424))))))
 :pattern ( ($generated@@370 ($generated@@371 $generated@@420 $generated@@421 $generated@@422 $generated@@423 $generated@@424) $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430 $generated@@431 $generated@@432 $generated@@433)) ($generated@@372 $generated@@91 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429 $generated@@430 $generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@76 (type $generated@@440))))
 (=> (and (and (and (and (and (and (= (type $generated@@434) $generated@@91) (= (type $generated@@435) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@436) ($generated@@75 $generated@@4))) (= (type $generated@@437) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@438) ($generated@@75 $generated@@4))) (= (type $generated@@439) $generated@@91)) (= (type $generated@@440) ($generated@@75 $generated@@441))) (= ($generated@@0 ($generated@@370 ($generated@@428 $generated@@434 $generated@@435 $generated@@436 $generated@@437 $generated@@438) $generated@@439 $generated@@440))  (=> (and (not (= $generated@@439 $generated@@434)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@435 $generated@@439) $generated@@436))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@437 $generated@@439) $generated@@438))))))
 :pattern ( ($generated@@370 ($generated@@428 $generated@@434 $generated@@435 $generated@@436 $generated@@437 $generated@@438) $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@442) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@443) $generated@@73)) (= (type $generated@@444) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@442 ($generated@@221 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@182) ($generated@@0 ($generated@@95 $generated@@442 $generated@@445))) ($generated@@236 $generated@@445 $generated@@443 $generated@@444))
 :pattern ( ($generated@@95 $generated@@442 $generated@@445))
))))
 :pattern ( ($generated@@88 $generated@@442 ($generated@@221 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (= (type $generated@@446) ($generated@@90 $generated@@182 $generated@@4)) (= (type $generated@@447) $generated@@73)) (= (type $generated@@448) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@446 ($generated@@226 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@182) ($generated@@0 ($generated@@95 $generated@@446 $generated@@449))) ($generated@@236 $generated@@449 $generated@@447 $generated@@448))
 :pattern ( ($generated@@95 $generated@@446 $generated@@449))
))))
 :pattern ( ($generated@@88 $generated@@446 ($generated@@226 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(= ($generated ($generated@@95 ($generated@@271 $generated@@451) $generated@@450)) 0))
 :pattern ( (let (($generated@@451 (type $generated@@450)))
($generated@@95 ($generated@@271 $generated@@451) $generated@@450)))
)))
(assert  (and (forall (($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@454)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@452 $generated@@454))
)) (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@280 (type $generated@@455))))
(let (($generated@@457 ($generated@@279 (type $generated@@455))))
(= (type ($generated@@453 $generated@@455)) ($generated@@90 $generated@@457 $generated@@456))))
 :pattern ( ($generated@@453 $generated@@455))
))))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@278 $generated@@182 $generated@@182)) (= (type $generated@@459) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@452 $generated@@458) $generated@@459))  (and ($generated@@0 ($generated@@95 ($generated@@276 $generated@@458) ($generated@@180 ($generated@@326 $generated@@173 $generated@@459)))) (= ($generated@@95 ($generated@@453 $generated@@458) ($generated@@180 ($generated@@326 $generated@@173 $generated@@459))) ($generated@@181 ($generated@@326 $generated@@173 $generated@@459))))))
 :pattern ( ($generated@@95 ($generated@@452 $generated@@458) $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) ($generated@@90 $generated@@182 $generated@@4))
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@298 (type $generated@@463))))
(let (($generated@@465 ($generated@@297 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463)) ($generated@@90 $generated@@465 $generated@@464))))
 :pattern ( ($generated@@461 $generated@@463))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) ($generated@@296 $generated@@182 $generated@@182)) (= (type $generated@@467) $generated@@182)) (= ($generated@@0 ($generated@@95 ($generated@@460 $generated@@466) $generated@@467))  (and ($generated@@0 ($generated@@95 ($generated@@294 $generated@@466) ($generated@@180 ($generated@@326 $generated@@173 $generated@@467)))) (= ($generated@@95 ($generated@@461 $generated@@466) ($generated@@180 ($generated@@326 $generated@@173 $generated@@467))) ($generated@@181 ($generated@@326 $generated@@173 $generated@@467))))))
 :pattern ( ($generated@@95 ($generated@@460 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@279 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@278 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@95 ($generated@@337 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@95 ($generated@@276 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@95 ($generated@@453 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@95 ($generated@@276 $generated@@468) $generated@@472))
 :pattern ( ($generated@@95 ($generated@@453 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@95 ($generated@@337 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (let (($generated@@475 (type $generated@@474)))
(let (($generated@@476 ($generated@@297 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@296 $generated@@476 $generated@@475)) (= ($generated@@0 ($generated@@95 ($generated@@348 $generated@@473) $generated@@474)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) (and ($generated@@0 ($generated@@95 ($generated@@294 $generated@@473) $generated@@477)) (= $generated@@474 ($generated@@95 ($generated@@461 $generated@@473) $generated@@477))))
 :pattern ( ($generated@@95 ($generated@@294 $generated@@473) $generated@@477))
 :pattern ( ($generated@@95 ($generated@@461 $generated@@473) $generated@@477))
))))))
 :pattern ( ($generated@@95 ($generated@@348 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@479 $generated@@480)) $generated@@73)
 :pattern ( ($generated@@478 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (and (= (type $generated@@481) ($generated@@278 $generated@@182 $generated@@182)) (= (type $generated@@482) $generated@@73)) (= (type $generated@@483) $generated@@73)) (= (type $generated@@484) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@276 $generated@@481) $generated@@485))) (and ($generated@@236 ($generated@@95 ($generated@@453 $generated@@481) $generated@@485) $generated@@483 $generated@@484) ($generated@@236 $generated@@485 $generated@@482 $generated@@484)))
 :pattern ( ($generated@@95 ($generated@@453 $generated@@481) $generated@@485))
 :pattern ( ($generated@@95 ($generated@@276 $generated@@481) $generated@@485))
))))
 :pattern ( ($generated@@88 $generated@@481 ($generated@@478 $generated@@482 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@487 $generated@@488)) $generated@@73)
 :pattern ( ($generated@@486 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (and (= (type $generated@@489) ($generated@@296 $generated@@182 $generated@@182)) (= (type $generated@@490) $generated@@73)) (= (type $generated@@491) $generated@@73)) (= (type $generated@@492) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@489 ($generated@@486 $generated@@490 $generated@@491) $generated@@492) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@294 $generated@@489) $generated@@493))) (and ($generated@@236 ($generated@@95 ($generated@@461 $generated@@489) $generated@@493) $generated@@491 $generated@@492) ($generated@@236 $generated@@493 $generated@@490 $generated@@492)))
 :pattern ( ($generated@@95 ($generated@@461 $generated@@489) $generated@@493))
 :pattern ( ($generated@@95 ($generated@@294 $generated@@489) $generated@@493))
))))
 :pattern ( ($generated@@88 $generated@@489 ($generated@@486 $generated@@490 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@93 (type $generated@@494))))
 (=> (and (and (= (type $generated@@494) ($generated@@90 $generated@@496 $generated@@4)) (= (type $generated@@495) ($generated@@90 $generated@@496 $generated@@4))) ($generated@@318 $generated@@494 $generated@@495)) (= $generated@@494 $generated@@495)))
 :pattern ( ($generated@@318 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@497) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@498) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@499) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@497 $generated@@499))) (and ($generated@@160 $generated@@497 $generated@@498) ($generated@@160 $generated@@498 $generated@@499))) ($generated@@160 $generated@@497 $generated@@499))
 :pattern ( ($generated@@160 $generated@@497 $generated@@498) ($generated@@160 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@T) ) (! (= (type ($generated@@500 $generated@@501)) ($generated@@90 $generated@@501 $generated@@4))
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@298 (type $generated@@502))))
(let (($generated@@504 ($generated@@297 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@296 $generated@@504 $generated@@503)) (= (= $generated@@502 ($generated@@295 $generated@@504 $generated@@503)) (= ($generated@@294 $generated@@502) ($generated@@500 $generated@@504))))))
 :pattern ( ($generated@@294 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@298 (type $generated@@505))))
(let (($generated@@507 ($generated@@297 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@296 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@295 $generated@@507 $generated@@506)) (= ($generated@@348 $generated@@505) ($generated@@500 $generated@@506))))))
 :pattern ( ($generated@@348 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@298 (type $generated@@508))))
(let (($generated@@510 ($generated@@297 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@296 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@295 $generated@@510 $generated@@509)) (= ($generated@@460 $generated@@508) ($generated@@500 $generated@@182))))))
 :pattern ( ($generated@@460 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@511))))
(let (($generated@@513 ($generated@@279 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@278 $generated@@513 $generated@@512)) (or (= $generated@@511 ($generated@@277 $generated@@513 $generated@@512)) (exists (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (and (and (= (type $generated@@514) $generated@@182) (= (type $generated@@515) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@452 $generated@@511) ($generated@@257 ($generated@@204 $generated@@514 $generated@@515)))))
 :no-pattern (type $generated@@514)
 :no-pattern (type $generated@@515)
 :no-pattern ($generated $generated@@514)
 :no-pattern ($generated@@0 $generated@@514)
 :no-pattern ($generated $generated@@515)
 :no-pattern ($generated@@0 $generated@@515)
))))))
 :pattern ( ($generated@@452 $generated@@511))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@298 (type $generated@@516))))
(let (($generated@@518 ($generated@@297 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@296 $generated@@518 $generated@@517)) (or (= $generated@@516 ($generated@@295 $generated@@518 $generated@@517)) (exists (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (and (and (= (type $generated@@519) $generated@@182) (= (type $generated@@520) $generated@@182)) ($generated@@0 ($generated@@95 ($generated@@460 $generated@@516) ($generated@@257 ($generated@@204 $generated@@519 $generated@@520)))))
 :no-pattern (type $generated@@519)
 :no-pattern (type $generated@@520)
 :no-pattern ($generated $generated@@519)
 :no-pattern ($generated@@0 $generated@@519)
 :no-pattern ($generated $generated@@520)
 :no-pattern ($generated@@0 $generated@@520)
))))))
 :pattern ( ($generated@@460 $generated@@516))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@79)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@T) ) (!  (=> (and (= (type $generated@@523) $generated@@79) (= (type $generated@@524) $generated@@77)) (and (= ($generated@@521 ($generated@@213 $generated@@525 $generated@@523 $generated@@524)) $generated@@523) (= ($generated@@86 ($generated@@213 $generated@@525 $generated@@523 $generated@@524)) $generated@@524)))
 :pattern ( ($generated@@213 $generated@@525 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@182) ($generated@@205 $generated@@526 $generated@@46)) (and (= ($generated@@257 ($generated@@326 $generated@@2 $generated@@526)) $generated@@526) ($generated@@152 ($generated@@326 $generated@@2 $generated@@526) $generated@@46)))
 :pattern ( ($generated@@205 $generated@@526 $generated@@46))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@182) ($generated@@205 $generated@@527 $generated@@47)) (and (= ($generated@@257 ($generated@@326 $generated@@3 $generated@@527)) $generated@@527) ($generated@@152 ($generated@@326 $generated@@3 $generated@@527) $generated@@47)))
 :pattern ( ($generated@@205 $generated@@527 $generated@@47))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@182) ($generated@@205 $generated@@528 $generated@@44)) (and (= ($generated@@257 ($generated@@326 $generated@@4 $generated@@528)) $generated@@528) ($generated@@152 ($generated@@326 $generated@@4 $generated@@528) $generated@@44)))
 :pattern ( ($generated@@205 $generated@@528 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@529) 23))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@182) ($generated@@205 $generated@@530 $generated@@45)) (and (= ($generated@@257 ($generated@@326 $generated@@529 $generated@@530)) $generated@@530) ($generated@@152 ($generated@@326 $generated@@529 $generated@@530) $generated@@45)))
 :pattern ( ($generated@@205 $generated@@530 $generated@@45))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@73) (= ($generated@@205 ($generated@@257 $generated@@531) $generated@@532) ($generated@@152 $generated@@531 $generated@@532)))
 :pattern ( ($generated@@205 ($generated@@257 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@93 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@90 $generated@@534 $generated@@2)) (<= 0 ($generated@@270 $generated@@533))))
 :pattern ( ($generated@@270 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@251 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@250 $generated@@536)) (<= 0 ($generated@@249 $generated@@535))))
 :pattern ( ($generated@@249 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@73)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@73) (= (type $generated@@540) $generated@@73)) (= ($generated@@537 ($generated@@478 $generated@@539 $generated@@540)) $generated@@539))
 :pattern ( ($generated@@478 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@73)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@73) (= (type $generated@@544) $generated@@73)) (= ($generated@@541 ($generated@@478 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@478 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@73) (= (type $generated@@546) $generated@@73)) (= ($generated@@84 ($generated@@478 $generated@@545 $generated@@546)) $generated@@58))
 :pattern ( ($generated@@478 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@73)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@73) (= (type $generated@@550) $generated@@73)) (= ($generated@@547 ($generated@@486 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@486 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@73)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@73) (= (type $generated@@554) $generated@@73)) (= ($generated@@551 ($generated@@486 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@486 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@73) (= (type $generated@@556) $generated@@73)) (= ($generated@@84 ($generated@@486 $generated@@555 $generated@@556)) $generated@@59))
 :pattern ( ($generated@@486 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@182) (= (type $generated@@558) $generated@@182)) (= ($generated@@242 ($generated@@204 $generated@@557 $generated@@558)) $generated@@63))
 :pattern ( ($generated@@204 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@73)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@73) (= (type $generated@@562) $generated@@73)) (= ($generated@@559 ($generated@@172 $generated@@561 $generated@@562)) $generated@@561))
 :pattern ( ($generated@@172 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@73)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@73) (= (type $generated@@566) $generated@@73)) (= ($generated@@563 ($generated@@172 $generated@@565 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@172 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@182) (= (type $generated@@568) $generated@@182)) (= ($generated@@180 ($generated@@204 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@204 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@182) (= (type $generated@@570) $generated@@182)) (= ($generated@@181 ($generated@@204 $generated@@569 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@204 $generated@@569 $generated@@570))
)))
(assert  (and (forall (($generated@@573 T@U) ) (! (= (type ($generated@@571 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@571 $generated@@573))
)) (forall (($generated@@574 T@U) ($generated@@575 Int) ) (! (let (($generated@@576 ($generated@@251 (type $generated@@574))))
(= (type ($generated@@572 $generated@@574 $generated@@575)) $generated@@576))
 :pattern ( ($generated@@572 $generated@@574 $generated@@575))
))))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@250 $generated@@182)) (= (type $generated@@578) $generated@@73)) (= (type $generated@@579) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@577 ($generated@@571 $generated@@578) $generated@@579) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@249 $generated@@577))) ($generated@@236 ($generated@@572 $generated@@577 $generated@@580) $generated@@578 $generated@@579))
 :pattern ( ($generated@@572 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@88 $generated@@577 ($generated@@571 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@581 ($generated@@89 $generated@@582)) $generated@@582)
 :pattern ( ($generated@@89 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@73)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@73) (= ($generated@@583 ($generated@@221 $generated@@585)) $generated@@585))
 :pattern ( ($generated@@221 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@73) (= ($generated@@84 ($generated@@221 $generated@@586)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@73)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@73) (= ($generated@@587 ($generated@@226 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@226 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@73) (= ($generated@@84 ($generated@@226 $generated@@590)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@73)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@73) (= ($generated@@591 ($generated@@194 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@194 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@73) (= ($generated@@84 ($generated@@194 $generated@@594)) $generated@@56))
 :pattern ( ($generated@@194 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@73)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@73) (= ($generated@@595 ($generated@@571 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@571 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@73) (= ($generated@@84 ($generated@@571 $generated@@598)) $generated@@57))
 :pattern ( ($generated@@571 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
(= ($generated@@326 $generated@@600 ($generated@@257 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@257 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@278 $generated@@182 $generated@@182)) (= (type $generated@@602) $generated@@73)) (= (type $generated@@603) $generated@@73)) (= ($generated@@152 $generated@@601 ($generated@@478 $generated@@602 $generated@@603)) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@276 $generated@@601) $generated@@604))) (and ($generated@@205 ($generated@@95 ($generated@@453 $generated@@601) $generated@@604) $generated@@603) ($generated@@205 $generated@@604 $generated@@602)))
 :pattern ( ($generated@@95 ($generated@@453 $generated@@601) $generated@@604))
 :pattern ( ($generated@@95 ($generated@@276 $generated@@601) $generated@@604))
))))
 :pattern ( ($generated@@152 $generated@@601 ($generated@@478 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) ($generated@@296 $generated@@182 $generated@@182)) (= (type $generated@@606) $generated@@73)) (= (type $generated@@607) $generated@@73)) (= ($generated@@152 $generated@@605 ($generated@@486 $generated@@606 $generated@@607)) (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@182) ($generated@@0 ($generated@@95 ($generated@@294 $generated@@605) $generated@@608))) (and ($generated@@205 ($generated@@95 ($generated@@461 $generated@@605) $generated@@608) $generated@@607) ($generated@@205 $generated@@608 $generated@@606)))
 :pattern ( ($generated@@95 ($generated@@461 $generated@@605) $generated@@608))
 :pattern ( ($generated@@95 ($generated@@294 $generated@@605) $generated@@608))
))))
 :pattern ( ($generated@@152 $generated@@605 ($generated@@486 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@182) (= (type $generated@@612) $generated@@182)) (< ($generated@@609 $generated@@611) ($generated@@610 ($generated@@204 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@204 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@182) (= (type $generated@@614) $generated@@182)) (< ($generated@@609 $generated@@614) ($generated@@610 ($generated@@204 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@204 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@182) (= (type $generated@@616) $generated@@73)) (= (type $generated@@617) $generated@@73)) ($generated@@205 $generated@@615 ($generated@@478 $generated@@616 $generated@@617))) (and (= ($generated@@257 ($generated@@326 ($generated@@278 $generated@@182 $generated@@182) $generated@@615)) $generated@@615) ($generated@@152 ($generated@@326 ($generated@@278 $generated@@182 $generated@@182) $generated@@615) ($generated@@478 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@205 $generated@@615 ($generated@@478 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@182) (= (type $generated@@619) $generated@@73)) (= (type $generated@@620) $generated@@73)) ($generated@@205 $generated@@618 ($generated@@486 $generated@@619 $generated@@620))) (and (= ($generated@@257 ($generated@@326 ($generated@@296 $generated@@182 $generated@@182) $generated@@618)) $generated@@618) ($generated@@152 ($generated@@326 ($generated@@296 $generated@@182 $generated@@182) $generated@@618) ($generated@@486 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@205 $generated@@618 ($generated@@486 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@73) (= (type $generated@@622) $generated@@73)) (= (type $generated@@623) $generated@@182)) ($generated@@205 $generated@@623 ($generated@@172 $generated@@621 $generated@@622))) (and (= ($generated@@257 ($generated@@326 $generated@@173 $generated@@623)) $generated@@623) ($generated@@152 ($generated@@326 $generated@@173 $generated@@623) ($generated@@172 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@205 $generated@@623 ($generated@@172 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@625 T@T) ) (! (= (type ($generated@@624 $generated@@625)) ($generated@@90 $generated@@625 $generated@@4))
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (not ($generated@@0 ($generated@@95 ($generated@@624 $generated@@627) $generated@@626))))
 :pattern ( (let (($generated@@627 (type $generated@@626)))
($generated@@95 ($generated@@624 $generated@@627) $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (not ($generated@@0 ($generated@@95 ($generated@@500 $generated@@629) $generated@@628))))
 :pattern ( (let (($generated@@629 (type $generated@@628)))
($generated@@95 ($generated@@500 $generated@@629) $generated@@628)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 Int) ($generated@@636 Int) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@148) (= (type $generated@@632) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@633) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@634) $generated@@91)) (=> (and (and (and (and ($generated@@150 $generated@@632) ($generated@@150 $generated@@633)) (and (not (= $generated@@634 $generated@@151)) (and ($generated@@152 $generated@@634 $generated@@153) ($generated@@88 $generated@@634 $generated@@153 $generated@@632)))) (or ($generated@@149 $generated@@632 $generated@@634 $generated@@635 $generated@@636) (and (<= ($generated@@154 0) $generated@@635) (<= ($generated@@154 0) $generated@@636)))) (and ($generated@@630 $generated@@632) ($generated@@160 $generated@@632 $generated@@633))) (=> (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@76 (type $generated@@638))))
 (=> (and (and (= (type $generated@@637) $generated@@91) (= (type $generated@@638) ($generated@@75 $generated@@639))) (and (not (= $generated@@637 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@632 $generated@@637) $generated@@60)))) (= ($generated@@97 ($generated@@95 $generated@@632 $generated@@637) $generated@@638) ($generated@@97 ($generated@@95 $generated@@633 $generated@@637) $generated@@638))))
 :no-pattern (type $generated@@637)
 :no-pattern (type $generated@@638)
 :no-pattern ($generated $generated@@637)
 :no-pattern ($generated@@0 $generated@@637)
 :no-pattern ($generated $generated@@638)
 :no-pattern ($generated@@0 $generated@@638)
)) (= ($generated@@147 $generated@@631 $generated@@632 $generated@@634 $generated@@635 $generated@@636) ($generated@@147 $generated@@631 $generated@@633 $generated@@634 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@630 $generated@@632) ($generated@@160 $generated@@632 $generated@@633) ($generated@@147 $generated@@631 $generated@@633 $generated@@634 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@641) $generated@@91)) (and ($generated@@150 $generated@@640) (and (not (= $generated@@641 $generated@@151)) (= ($generated@@199 $generated@@641) $generated@@167)))) ($generated@@152 ($generated@@97 ($generated@@95 $generated@@640 $generated@@641) $generated@@212) $generated@@164))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@640 $generated@@641) $generated@@212))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@643) $generated@@91)) (and ($generated@@150 $generated@@642) (and (not (= $generated@@643 $generated@@151)) (= ($generated@@199 $generated@@643) $generated@@167)))) ($generated@@152 ($generated@@97 ($generated@@95 $generated@@642 $generated@@643) $generated@@218) $generated@@153))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@642 $generated@@643) $generated@@218))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@80)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@73) (= (type $generated@@647) $generated@@73)) (and (= ($generated@@84 ($generated@@172 $generated@@646 $generated@@647)) $generated@@64) (= ($generated@@644 ($generated@@172 $generated@@646 $generated@@647)) $generated@@69)))
 :pattern ( ($generated@@172 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@173) (= ($generated@@609 ($generated@@257 $generated@@648)) ($generated@@610 $generated@@648)))
 :pattern ( ($generated@@609 ($generated@@257 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@182) ($generated@@205 $generated@@649 ($generated@@89 0))) (and (= ($generated@@257 ($generated@@326 $generated@@2 $generated@@649)) $generated@@649) ($generated@@152 ($generated@@326 ($generated@@90 $generated@@182 $generated@@4) $generated@@649) ($generated@@89 0))))
 :pattern ( ($generated@@205 $generated@@649 ($generated@@89 0)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@182) (= (type $generated@@651) $generated@@73)) ($generated@@205 $generated@@650 ($generated@@221 $generated@@651))) (and (= ($generated@@257 ($generated@@326 ($generated@@90 $generated@@182 $generated@@4) $generated@@650)) $generated@@650) ($generated@@152 ($generated@@326 ($generated@@90 $generated@@182 $generated@@4) $generated@@650) ($generated@@221 $generated@@651))))
 :pattern ( ($generated@@205 $generated@@650 ($generated@@221 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@182) (= (type $generated@@653) $generated@@73)) ($generated@@205 $generated@@652 ($generated@@226 $generated@@653))) (and (= ($generated@@257 ($generated@@326 ($generated@@90 $generated@@182 $generated@@4) $generated@@652)) $generated@@652) ($generated@@152 ($generated@@326 ($generated@@90 $generated@@182 $generated@@4) $generated@@652) ($generated@@226 $generated@@653))))
 :pattern ( ($generated@@205 $generated@@652 ($generated@@226 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@182) (= (type $generated@@655) $generated@@73)) ($generated@@205 $generated@@654 ($generated@@194 $generated@@655))) (and (= ($generated@@257 ($generated@@326 ($generated@@90 $generated@@182 $generated@@2) $generated@@654)) $generated@@654) ($generated@@152 ($generated@@326 ($generated@@90 $generated@@182 $generated@@2) $generated@@654) ($generated@@194 $generated@@655))))
 :pattern ( ($generated@@205 $generated@@654 ($generated@@194 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@182) (= (type $generated@@657) $generated@@73)) ($generated@@205 $generated@@656 ($generated@@571 $generated@@657))) (and (= ($generated@@257 ($generated@@326 ($generated@@250 $generated@@182) $generated@@656)) $generated@@656) ($generated@@152 ($generated@@326 ($generated@@250 $generated@@182) $generated@@656) ($generated@@571 $generated@@657))))
 :pattern ( ($generated@@205 $generated@@656 ($generated@@571 $generated@@657)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 ($generated@@93 (type $generated@@659))))
 (=> (and (= (type $generated@@659) ($generated@@90 $generated@@661 $generated@@4)) (= (type $generated@@660) ($generated@@90 $generated@@661 $generated@@4))) (= ($generated@@658 $generated@@659 $generated@@660) (forall (($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@661) ($generated@@0 ($generated@@95 $generated@@659 $generated@@662))) ($generated@@0 ($generated@@95 $generated@@660 $generated@@662)))
 :pattern ( ($generated@@95 $generated@@659 $generated@@662))
 :pattern ( ($generated@@95 $generated@@660 $generated@@662))
)))))
 :pattern ( ($generated@@658 $generated@@659 $generated@@660))
)))
(assert (= ($generated@@84 $generated@@164) $generated@@62))
(assert (= ($generated@@644 $generated@@164) $generated@@68))
(assert (= ($generated@@84 $generated@@167) $generated@@66))
(assert (= ($generated@@644 $generated@@167) $generated@@70))
(assert (= ($generated@@84 $generated@@153) $generated@@67))
(assert (= ($generated@@644 $generated@@153) $generated@@70))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@90 $generated@@182 $generated@@2)) (= (type $generated@@664) $generated@@73)) (= (type $generated@@665) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@663 ($generated@@194 $generated@@664) $generated@@665) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@182) (< 0 ($generated ($generated@@95 $generated@@663 $generated@@666)))) ($generated@@236 $generated@@666 $generated@@664 $generated@@665))
 :pattern ( ($generated@@95 $generated@@663 $generated@@666))
))))
 :pattern ( ($generated@@88 $generated@@663 ($generated@@194 $generated@@664) $generated@@665))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 Int) ($generated@@671 Int) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@148) (= (type $generated@@668) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@669) $generated@@91)) (or ($generated@@149 $generated@@668 $generated@@669 $generated@@670 $generated@@671) (and (not (= 1 $generated@@146)) (and (and (and ($generated@@150 $generated@@668) (and (not (= $generated@@669 $generated@@151)) (and ($generated@@152 $generated@@669 $generated@@153) ($generated@@88 $generated@@669 $generated@@153 $generated@@668)))) (<= ($generated@@154 0) $generated@@670)) (<= ($generated@@154 0) $generated@@671))))) (and (=> (not (= $generated@@670 ($generated@@154 0))) ($generated@@149 $generated@@668 ($generated@@97 ($generated@@95 $generated@@668 $generated@@669) $generated@@218) (- $generated@@670 1) (+ $generated@@671 ($generated ($generated@@97 ($generated@@95 $generated@@668 $generated@@669) $generated@@212))))) (= ($generated@@147 ($generated@@187 $generated@@667) $generated@@668 $generated@@669 $generated@@670 $generated@@671) (ite (= $generated@@670 ($generated@@154 0)) $generated@@671 ($generated@@147 $generated@@667 $generated@@668 ($generated@@97 ($generated@@95 $generated@@668 $generated@@669) $generated@@218) (- $generated@@670 1) (+ $generated@@671 ($generated ($generated@@97 ($generated@@95 $generated@@668 $generated@@669) $generated@@212))))))))
 :pattern ( ($generated@@147 ($generated@@187 $generated@@667) $generated@@668 $generated@@669 $generated@@670 $generated@@671) ($generated@@150 $generated@@668))
))))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@173) (= (type $generated@@673) $generated@@73)) (= (type $generated@@674) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@150 $generated@@674) (and ($generated@@171 $generated@@672) (exists (($generated@@675 T@U) ) (!  (and (= (type $generated@@675) $generated@@73) ($generated@@88 $generated@@672 ($generated@@172 $generated@@673 $generated@@675) $generated@@674))
 :pattern ( ($generated@@88 $generated@@672 ($generated@@172 $generated@@673 $generated@@675) $generated@@674))
))))) ($generated@@236 ($generated@@180 $generated@@672) $generated@@673 $generated@@674))
 :pattern ( ($generated@@236 ($generated@@180 $generated@@672) $generated@@673 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) $generated@@173) (= (type $generated@@677) $generated@@73)) (= (type $generated@@678) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@150 $generated@@678) (and ($generated@@171 $generated@@676) (exists (($generated@@679 T@U) ) (!  (and (= (type $generated@@679) $generated@@73) ($generated@@88 $generated@@676 ($generated@@172 $generated@@679 $generated@@677) $generated@@678))
 :pattern ( ($generated@@88 $generated@@676 ($generated@@172 $generated@@679 $generated@@677) $generated@@678))
))))) ($generated@@236 ($generated@@181 $generated@@676) $generated@@677 $generated@@678))
 :pattern ( ($generated@@236 ($generated@@181 $generated@@676) $generated@@677 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@182) (= (type $generated@@681) $generated@@182)) (= ($generated@@204 ($generated@@232 $generated@@680) ($generated@@232 $generated@@681)) ($generated@@232 ($generated@@204 $generated@@680 $generated@@681))))
 :pattern ( ($generated@@204 ($generated@@232 $generated@@680) ($generated@@232 $generated@@681)))
)))
(assert (forall (($generated@@682 Int) ) (! (= ($generated@@257 ($generated@@8 ($generated@@154 $generated@@682))) ($generated@@232 ($generated@@257 ($generated@@8 $generated@@682))))
 :pattern ( ($generated@@257 ($generated@@8 ($generated@@154 $generated@@682))))
)))
(assert (forall (($generated@@683 T@U) ) (! (= ($generated@@257 ($generated@@232 $generated@@683)) ($generated@@232 ($generated@@257 $generated@@683)))
 :pattern ( ($generated@@257 ($generated@@232 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (! (let (($generated@@685 ($generated@@251 (type $generated@@684))))
 (=> (and (= (type $generated@@684) ($generated@@250 $generated@@685)) (= ($generated@@249 $generated@@684) 0)) (= $generated@@684 ($generated@@248 $generated@@685))))
 :pattern ( ($generated@@249 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ($generated@@688 T@U) ) (! (let (($generated@@689 (type $generated@@687)))
 (=> (and (and (= (type $generated@@686) ($generated@@90 $generated@@689 $generated@@2)) (= (type $generated@@688) $generated@@2)) (<= 0 ($generated $generated@@688))) (= ($generated@@270 ($generated@@96 $generated@@686 $generated@@687 $generated@@688)) (+ (- ($generated@@270 $generated@@686) ($generated ($generated@@95 $generated@@686 $generated@@687))) ($generated $generated@@688)))))
 :pattern ( ($generated@@270 ($generated@@96 $generated@@686 $generated@@687 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@691) $generated@@2)) ($generated@@88 $generated@@691 $generated@@46 $generated@@690))
 :pattern ( ($generated@@88 $generated@@691 $generated@@46 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@693) $generated@@3)) ($generated@@88 $generated@@693 $generated@@47 $generated@@692))
 :pattern ( ($generated@@88 $generated@@693 $generated@@47 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (= (type $generated@@694) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@695) $generated@@4)) ($generated@@88 $generated@@695 $generated@@44 $generated@@694))
 :pattern ( ($generated@@88 $generated@@695 $generated@@44 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@697) $generated@@529)) ($generated@@88 $generated@@697 $generated@@45 $generated@@696))
 :pattern ( ($generated@@88 $generated@@697 $generated@@45 $generated@@696))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@699) $generated@@182)) ($generated@@88 $generated@@699 $generated@@48 $generated@@698))
 :pattern ( ($generated@@88 $generated@@699 $generated@@48 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@700) ($generated@@250 $generated@@182)) (= (type $generated@@701) $generated@@73)) (= ($generated@@152 $generated@@700 ($generated@@571 $generated@@701)) (forall (($generated@@702 Int) ) (!  (=> (and (<= 0 $generated@@702) (< $generated@@702 ($generated@@249 $generated@@700))) ($generated@@205 ($generated@@572 $generated@@700 $generated@@702) $generated@@701))
 :pattern ( ($generated@@572 $generated@@700 $generated@@702))
))))
 :pattern ( ($generated@@152 $generated@@700 ($generated@@571 $generated@@701)))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 Int) ) (!  (=> (= (type $generated@@704) ($generated@@250 $generated@@182)) (=> (and (<= 0 $generated@@705) (< $generated@@705 ($generated@@249 $generated@@704))) (< ($generated@@610 ($generated@@326 $generated@@173 ($generated@@572 $generated@@704 $generated@@705))) ($generated@@703 $generated@@704))))
 :pattern ( ($generated@@610 ($generated@@326 $generated@@173 ($generated@@572 $generated@@704 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@278 $generated@@182 $generated@@182)) (= (type $generated@@707) $generated@@73)) (= (type $generated@@708) $generated@@73)) ($generated@@152 $generated@@706 ($generated@@478 $generated@@707 $generated@@708))) (and (and ($generated@@152 ($generated@@276 $generated@@706) ($generated@@221 $generated@@707)) ($generated@@152 ($generated@@337 $generated@@706) ($generated@@221 $generated@@708))) ($generated@@152 ($generated@@452 $generated@@706) ($generated@@221 ($generated@@172 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@152 $generated@@706 ($generated@@478 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) ($generated@@296 $generated@@182 $generated@@182)) (= (type $generated@@710) $generated@@73)) (= (type $generated@@711) $generated@@73)) ($generated@@152 $generated@@709 ($generated@@486 $generated@@710 $generated@@711))) (and (and ($generated@@152 ($generated@@294 $generated@@709) ($generated@@226 $generated@@710)) ($generated@@152 ($generated@@348 $generated@@709) ($generated@@226 $generated@@711))) ($generated@@152 ($generated@@460 $generated@@709) ($generated@@226 ($generated@@172 $generated@@710 $generated@@711)))))
 :pattern ( ($generated@@152 $generated@@709 ($generated@@486 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@2) ($generated@@152 $generated@@712 $generated@@46))
 :pattern ( ($generated@@152 $generated@@712 $generated@@46))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@3) ($generated@@152 $generated@@713 $generated@@47))
 :pattern ( ($generated@@152 $generated@@713 $generated@@47))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@4) ($generated@@152 $generated@@714 $generated@@44))
 :pattern ( ($generated@@152 $generated@@714 $generated@@44))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@529) ($generated@@152 $generated@@715 $generated@@45))
 :pattern ( ($generated@@152 $generated@@715 $generated@@45))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@182) ($generated@@152 $generated@@716 $generated@@48))
 :pattern ( ($generated@@152 $generated@@716 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@717 () Bool)
(declare-fun $generated@@718 () Bool)
(declare-fun $generated@@719 () Bool)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () Bool)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () Bool)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () Int)
(declare-fun $generated@@729 () Bool)
(declare-fun $generated@@730 () T@U)
(assert  (and (and (and (= (type $generated@@724) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@723) $generated@@91)) (= (type $generated@@722) ($generated@@372 $generated@@91 $generated@@4))) (= (type $generated@@730) ($generated@@372 $generated@@91 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@731  (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@717) (=> $generated@@717 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@718) (=> $generated@@718 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@719)))))))
(let (($generated@@732  (=> (and (not (= $generated@@720 ($generated@@154 0))) (= $generated@@721 ($generated@@0 ($generated@@370 $generated@@722 $generated@@723 $generated@@218)))) (and (=> (= (ControlFlow 0 7) (- 0 13)) (not (= ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@218) $generated@@151))) (=> (not (= ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@218) $generated@@151)) (=> (and ($generated@@88 ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@218) $generated@@167 $generated@@724) (= $generated@@725 ($generated@@0 ($generated@@370 $generated@@722 $generated@@723 $generated@@212)))) (and (=> (= (ControlFlow 0 7) (- 0 12)) ($generated@@152 ($generated@@8 (- $generated@@720 1)) $generated@@164)) (=> ($generated@@152 ($generated@@8 (- $generated@@720 1)) $generated@@164) (=> (and (= $generated@@726 (- $generated@@720 1)) ($generated@@88 ($generated@@8 $generated@@726) $generated@@164 $generated@@724)) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@152 ($generated@@8 (+ $generated@@727 ($generated ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@212)))) $generated@@164)) (=> ($generated@@152 ($generated@@8 (+ $generated@@727 ($generated ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@212)))) $generated@@164) (=> (= $generated@@728 (+ $generated@@727 ($generated ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@212)))) (=> (and ($generated@@88 ($generated@@8 $generated@@728) $generated@@164 $generated@@724) (= $generated@@729 (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 ($generated@@76 (type $generated@@734))))
 (=> (and (= (type $generated@@733) $generated@@91) (= (type $generated@@734) ($generated@@75 $generated@@735))) (=> (and (and (not (= $generated@@733 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@724 $generated@@733) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@724 $generated@@733) $generated@@60))) ($generated@@0 ($generated@@370 $generated@@722 $generated@@733 $generated@@734)))))
 :no-pattern (type $generated@@733)
 :no-pattern (type $generated@@734)
 :no-pattern ($generated $generated@@733)
 :no-pattern ($generated@@0 $generated@@733)
 :no-pattern ($generated $generated@@734)
 :no-pattern ($generated@@0 $generated@@734)
)))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (or (or (<= 0 $generated@@720) (and ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (not ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182)))))) (= $generated@@726 $generated@@720))) (=> (or (or (<= 0 $generated@@720) (and ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (not ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182)))))) (= $generated@@726 $generated@@720)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (or (or (<= 0 $generated@@727) (and ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (not ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182)))))) (< $generated@@726 $generated@@720)) (= $generated@@728 $generated@@727))) (=> (or (or (or (<= 0 $generated@@727) (and ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (not ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182)))))) (< $generated@@726 $generated@@720)) (= $generated@@728 $generated@@727)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (not ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))))) (and ($generated@@318 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (or (< $generated@@726 $generated@@720) (and (= $generated@@726 $generated@@720) (< $generated@@728 $generated@@727)))))) (=> (or (and ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (not ($generated@@658 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))))) (and ($generated@@318 ($generated@@232 ($generated@@624 $generated@@182)) ($generated@@232 ($generated@@624 $generated@@182))) (or (< $generated@@726 $generated@@720) (and (= $generated@@726 $generated@@720) (< $generated@@728 $generated@@727))))) (=> (and (and (and ($generated@@149 $generated@@724 ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@218) (- $generated@@720 1) (+ $generated@@727 ($generated ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@212)))) (= ($generated@@147 ($generated@@187 $generated@@363) $generated@@724 $generated@@723 $generated@@720 $generated@@727) ($generated@@147 ($generated@@187 $generated@@363) $generated@@724 ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@218) (- $generated@@720 1) (+ $generated@@727 ($generated ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@212)))))) (and ($generated@@149 $generated@@724 ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@218) (- $generated@@720 1) (+ $generated@@727 ($generated ($generated@@97 ($generated@@95 $generated@@724 $generated@@723) $generated@@212)))) ($generated@@152 ($generated@@8 ($generated@@147 ($generated@@187 $generated@@363) $generated@@724 $generated@@723 $generated@@720 $generated@@727)) $generated@@164))) (and (and (= $generated@@717 $generated@@721) (= $generated@@718 $generated@@725)) (and (= $generated@@719 $generated@@729) (= (ControlFlow 0 7) 3)))) $generated@@731))))))))))))))))))))
(let (($generated@@736  (=> (= $generated@@720 ($generated@@154 0)) (=> (and (= ($generated@@147 ($generated@@187 $generated@@363) $generated@@724 $generated@@723 $generated@@720 $generated@@727) $generated@@727) ($generated@@152 ($generated@@8 ($generated@@147 ($generated@@187 $generated@@363) $generated@@724 $generated@@723 $generated@@720 $generated@@727)) $generated@@164)) (=> (and (and (= $generated@@717 true) (= $generated@@718 true)) (and (= $generated@@719 true) (= (ControlFlow 0 6) 3))) $generated@@731)))))
(let (($generated@@737  (=> (= $generated@@730 ($generated@@428 $generated@@151 $generated@@724 $generated@@60 $generated@@724 $generated@@60)) (and (=> (= (ControlFlow 0 14) 6) $generated@@736) (=> (= (ControlFlow 0 14) 7) $generated@@732)))))
(let (($generated@@738 true))
(let (($generated@@739  (=> (= $generated@@722 ($generated@@371 $generated@@151 $generated@@724 $generated@@60 $generated@@724 $generated@@60)) (and (=> (= (ControlFlow 0 15) 1) $generated@@738) (=> (= (ControlFlow 0 15) 14) $generated@@737)))))
(let (($generated@@740  (=> (and (and (and ($generated@@150 $generated@@724) ($generated@@630 $generated@@724)) (and (not (= $generated@@723 $generated@@151)) (and ($generated@@152 $generated@@723 $generated@@153) ($generated@@88 $generated@@723 $generated@@153 $generated@@724)))) (and (and (<= ($generated@@154 0) $generated@@720) (<= ($generated@@154 0) $generated@@727)) (and (= 1 $generated@@146) (= (ControlFlow 0 16) 15)))) $generated@@739)))
$generated@@740))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) Int)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (Int) Int)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@357 (T@U T@U T@U) Bool)
(declare-fun $generated@@363 () Int)
(declare-fun $generated@@364 (T@U T@U) Int)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@370 () T@U)
(declare-fun $generated@@371 (T@U T@U) Bool)
(declare-fun $generated@@372 (T@T) T@U)
(declare-fun $generated@@380 (T@T) T@U)
(declare-fun $generated@@381 (T@U) Int)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U) Int)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@T T@T) T@U)
(declare-fun $generated@@422 (T@T T@T) T@T)
(declare-fun $generated@@423 (T@T) T@T)
(declare-fun $generated@@424 (T@T) T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@T T@T) T@U)
(declare-fun $generated@@440 (T@T T@T) T@T)
(declare-fun $generated@@441 (T@T) T@T)
(declare-fun $generated@@442 (T@T) T@T)
(declare-fun $generated@@463 (T@T T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@493 (T@U T@U) Bool)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@538 (T@U T@U) T@U)
(declare-fun $generated@@546 (T@U T@U) T@U)
(declare-fun $generated@@560 (T@T) T@U)
(declare-fun $generated@@584 () T@T)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@627 (T@U Int) T@U)
(declare-fun $generated@@638 (T@U) Int)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(declare-fun $generated@@665 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@686 (T@U) Int)
(declare-fun $generated@@687 (T@U) Int)
(declare-fun $generated@@799 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@144 $generated@@147 $generated@@148)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@75) (= (type $generated@@150) $generated@@88)) (= (type $generated@@151) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@143 $generated@@46 $generated@@151 ($generated@@144 $generated@@149 $generated@@150)) ($generated@@145 $generated@@149 $generated@@150)))
 :pattern ( ($generated@@143 $generated@@46 $generated@@151 ($generated@@144 $generated@@149 $generated@@150)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@154) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@153 $generated@@155) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@154 $generated@@155) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@154 $generated@@155) $generated@@60))
)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@75)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@88)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@75) (= (type $generated@@160) $generated@@88)) (= (type $generated@@161) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@160 ($generated@@156 $generated@@159) $generated@@161)  (or (= $generated@@160 $generated@@157) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@161 $generated@@160) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@160 ($generated@@156 $generated@@159) $generated@@161))
)))
(assert (= (type $generated@@162) $generated@@75))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@2) (= (type $generated@@164) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@163 $generated@@162 $generated@@164))
 :pattern ( ($generated@@85 $generated@@163 $generated@@162 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@86 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@86 0)))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@75)
 :pattern ( ($generated@@167 $generated@@169))
)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@75)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@75) (= (type $generated@@172) $generated@@146)) (= (type $generated@@173) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@172 ($generated@@167 $generated@@171) $generated@@173) ($generated@@85 $generated@@172 ($generated@@168 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@85 $generated@@172 ($generated@@167 $generated@@171) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@75)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@75) (= (type $generated@@177) $generated@@146)) (= (type $generated@@178) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@177 ($generated@@174 $generated@@176) $generated@@178) ($generated@@85 $generated@@177 ($generated@@167 $generated@@176) $generated@@178)))
 :pattern ( ($generated@@85 $generated@@177 ($generated@@174 $generated@@176) $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@75)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@75) (= (type $generated@@182) $generated@@88)) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 ($generated@@179 $generated@@181) $generated@@183) ($generated@@85 $generated@@182 ($generated@@156 $generated@@181) $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 ($generated@@179 $generated@@181) $generated@@183))
)))
(assert  (and (= ($generated@@1 $generated@@186) 15) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@75)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@75) (= (type $generated@@190) $generated@@75)) (= (type $generated@@191) $generated@@186)) ($generated@@165 $generated@@191 ($generated@@185 $generated@@189 $generated@@190))) ($generated@@184 $generated@@191))
 :pattern ( ($generated@@184 $generated@@191) ($generated@@165 $generated@@191 ($generated@@185 $generated@@189 $generated@@190)))
)))
(assert  (and (and (= ($generated@@1 $generated@@195) 16) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@193 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@193 $generated@@196))
))) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@197)) $generated@@195)
 :pattern ( ($generated@@194 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) $generated@@186) (= (type $generated@@199) $generated@@186)) true) (= ($generated@@192 $generated@@198 $generated@@199)  (and (= ($generated@@193 $generated@@198) ($generated@@193 $generated@@199)) (= ($generated@@194 $generated@@198) ($generated@@194 $generated@@199)))))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@75)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@87 $generated@@195 $generated@@2)) (= (type $generated@@204) $generated@@75)) ($generated@@165 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@165 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@88 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@78 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@88) (= (type $generated@@255) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@256) ($generated@@77 $generated@@4))) (= (type $generated@@258) $generated@@88)) (= (type $generated@@259) ($generated@@77 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@186)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@75) (= (type $generated@@266) $generated@@75)) (= (type $generated@@267) $generated@@195)) (= (type $generated@@268) $generated@@195)) (= ($generated@@165 ($generated@@261 $generated@@267 $generated@@268) ($generated@@185 $generated@@265 $generated@@266))  (and ($generated@@262 $generated@@267 $generated@@265) ($generated@@262 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@165 ($generated@@261 $generated@@267 $generated@@268) ($generated@@185 $generated@@265 $generated@@266)))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273 $generated@@274)) ($generated@@87 $generated@@195 $generated@@4))
 :pattern ( ($generated@@270 $generated@@272 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (= (type ($generated@@271 $generated@@275)) $generated@@195)
 :pattern ( ($generated@@271 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) $generated@@75) (= (type $generated@@277) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@278) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@279) $generated@@146)) (and (and (and ($generated@@152 $generated@@277 $generated@@278) (and ($generated@@269 $generated@@277) ($generated@@269 $generated@@278))) ($generated@@165 $generated@@279 ($generated@@168 $generated@@276))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@78 (type $generated@@281))))
 (=> (and (and (= (type $generated@@280) $generated@@88) (= (type $generated@@281) ($generated@@77 $generated@@282))) (and (not (= $generated@@280 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@276 $generated@@277 $generated@@279) ($generated@@271 $generated@@280))))) (= ($generated@@94 ($generated@@92 $generated@@277 $generated@@280) $generated@@281) ($generated@@94 ($generated@@92 $generated@@278 $generated@@280) $generated@@281))))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))) (= ($generated@@143 $generated@@276 $generated@@277 $generated@@279) ($generated@@143 $generated@@276 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@152 $generated@@277 $generated@@278) ($generated@@143 $generated@@276 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@283) $generated@@75) (= (type $generated@@284) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@285) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@286) $generated@@146)) (and (and (and ($generated@@152 $generated@@284 $generated@@285) (and ($generated@@269 $generated@@284) ($generated@@269 $generated@@285))) ($generated@@165 $generated@@286 ($generated@@168 $generated@@283))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@78 (type $generated@@288))))
 (=> (and (and (= (type $generated@@287) $generated@@88) (= (type $generated@@288) ($generated@@77 $generated@@289))) (and (not (= $generated@@287 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@283 $generated@@285 $generated@@286) ($generated@@271 $generated@@287))))) (= ($generated@@94 ($generated@@92 $generated@@284 $generated@@287) $generated@@288) ($generated@@94 ($generated@@92 $generated@@285 $generated@@287) $generated@@288))))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))) (= ($generated@@143 $generated@@283 $generated@@284 $generated@@286) ($generated@@143 $generated@@283 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@152 $generated@@284 $generated@@285) ($generated@@143 $generated@@283 $generated@@285 $generated@@286))
)))
(assert  (and (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@290 $generated@@292 $generated@@293 $generated@@294)) $generated@@195)
 :pattern ( ($generated@@290 $generated@@292 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@291 $generated@@295 $generated@@296 $generated@@297)) $generated@@146)
 :pattern ( ($generated@@291 $generated@@295 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) $generated@@75) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@300) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@195))) (= (type $generated@@301) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@302) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@195 $generated@@4)))) (= ($generated@@290 $generated@@298 $generated@@299 ($generated@@291 $generated@@300 $generated@@301 $generated@@302)) ($generated@@92 $generated@@300 $generated@@299)))
 :pattern ( ($generated@@290 $generated@@298 $generated@@299 ($generated@@291 $generated@@300 $generated@@301 $generated@@302)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@186) (= (type $generated@@304) $generated@@186)) (= ($generated@@192 $generated@@303 $generated@@304) (= $generated@@303 $generated@@304)))
 :pattern ( ($generated@@192 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@75) (= (type $generated@@307) $generated@@88)) (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@290 $generated@@46 $generated@@308 ($generated@@144 $generated@@306 $generated@@307)) ($generated@@271 ($generated@@8 ($generated@@305 $generated@@306 $generated@@307)))))
 :pattern ( ($generated@@290 $generated@@46 $generated@@308 ($generated@@144 $generated@@306 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@75)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@312) $generated@@75)) (= ($generated@@165 $generated@@311 ($generated@@309 $generated@@312)) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@195) ($generated@@0 ($generated@@92 $generated@@311 $generated@@313))) ($generated@@262 $generated@@313 $generated@@312))
 :pattern ( ($generated@@92 $generated@@311 $generated@@313))
))))
 :pattern ( ($generated@@165 $generated@@311 ($generated@@309 $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@75)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@317) $generated@@75)) (= ($generated@@165 $generated@@316 ($generated@@314 $generated@@317)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@195) ($generated@@0 ($generated@@92 $generated@@316 $generated@@318))) ($generated@@262 $generated@@318 $generated@@317))
 :pattern ( ($generated@@92 $generated@@316 $generated@@318))
))))
 :pattern ( ($generated@@165 $generated@@316 ($generated@@314 $generated@@317)))
)))
(assert (forall (($generated@@320 Int) ) (! (= ($generated@@319 $generated@@320) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 (type $generated@@322)))
(= (type ($generated@@321 $generated@@322)) $generated@@323))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= ($generated@@321 $generated@@324) $generated@@324)
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (= (type $generated@@325) $generated@@195) (= (type $generated@@326) $generated@@75)) (= (type $generated@@327) $generated@@88)) (= (type $generated@@328) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@0 ($generated@@92 ($generated@@270 $generated@@46 $generated@@328 ($generated@@144 $generated@@326 $generated@@327)) $generated@@325)) false))
 :pattern ( ($generated@@92 ($generated@@270 $generated@@46 $generated@@328 ($generated@@144 $generated@@326 $generated@@327)) $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@329) $generated@@75) (= (type $generated@@330) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@331) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@332) $generated@@146)) (and (and (and ($generated@@152 $generated@@330 $generated@@331) (and ($generated@@269 $generated@@330) ($generated@@269 $generated@@331))) ($generated@@165 $generated@@332 ($generated@@168 $generated@@329))) (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@78 (type $generated@@334))))
 (=> (and (and (= (type $generated@@333) $generated@@88) (= (type $generated@@334) ($generated@@77 $generated@@335))) (and (not (= $generated@@333 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@329 $generated@@330 $generated@@332) ($generated@@271 $generated@@333))))) (= ($generated@@94 ($generated@@92 $generated@@330 $generated@@333) $generated@@334) ($generated@@94 ($generated@@92 $generated@@331 $generated@@333) $generated@@334))))
 :no-pattern (type $generated@@333)
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
)))) (= ($generated@@270 $generated@@329 $generated@@330 $generated@@332) ($generated@@270 $generated@@329 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@152 $generated@@330 $generated@@331) ($generated@@270 $generated@@329 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@336) $generated@@75) (= (type $generated@@337) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@339) $generated@@146)) (and (and (and ($generated@@152 $generated@@337 $generated@@338) (and ($generated@@269 $generated@@337) ($generated@@269 $generated@@338))) ($generated@@165 $generated@@339 ($generated@@168 $generated@@336))) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@78 (type $generated@@341))))
 (=> (and (and (= (type $generated@@340) $generated@@88) (= (type $generated@@341) ($generated@@77 $generated@@342))) (and (not (= $generated@@340 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@336 $generated@@338 $generated@@339) ($generated@@271 $generated@@340))))) (= ($generated@@94 ($generated@@92 $generated@@337 $generated@@340) $generated@@341) ($generated@@94 ($generated@@92 $generated@@338 $generated@@340) $generated@@341))))
 :no-pattern (type $generated@@340)
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
)))) (= ($generated@@270 $generated@@336 $generated@@337 $generated@@339) ($generated@@270 $generated@@336 $generated@@338 $generated@@339)))
 :pattern ( ($generated@@152 $generated@@337 $generated@@338) ($generated@@270 $generated@@336 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@343) $generated@@75) (= (type $generated@@344) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@345) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@346) $generated@@146)) (and (and (and ($generated@@152 $generated@@344 $generated@@345) (and ($generated@@269 $generated@@344) ($generated@@269 $generated@@345))) ($generated@@165 $generated@@346 ($generated@@168 $generated@@343))) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@78 (type $generated@@348))))
 (=> (and (and (= (type $generated@@347) $generated@@88) (= (type $generated@@348) ($generated@@77 $generated@@349))) (and (not (= $generated@@347 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@343 $generated@@344 $generated@@346) ($generated@@271 $generated@@347))))) (= ($generated@@94 ($generated@@92 $generated@@344 $generated@@347) $generated@@348) ($generated@@94 ($generated@@92 $generated@@345 $generated@@347) $generated@@348))))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))) (= ($generated@@290 $generated@@343 $generated@@344 $generated@@346) ($generated@@290 $generated@@343 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@152 $generated@@344 $generated@@345) ($generated@@290 $generated@@343 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) $generated@@75) (= (type $generated@@351) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@352) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@353) $generated@@146)) (and (and (and ($generated@@152 $generated@@351 $generated@@352) (and ($generated@@269 $generated@@351) ($generated@@269 $generated@@352))) ($generated@@165 $generated@@353 ($generated@@168 $generated@@350))) (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@78 (type $generated@@355))))
 (=> (and (and (= (type $generated@@354) $generated@@88) (= (type $generated@@355) ($generated@@77 $generated@@356))) (and (not (= $generated@@354 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@350 $generated@@352 $generated@@353) ($generated@@271 $generated@@354))))) (= ($generated@@94 ($generated@@92 $generated@@351 $generated@@354) $generated@@355) ($generated@@94 ($generated@@92 $generated@@352 $generated@@354) $generated@@355))))
 :no-pattern (type $generated@@354)
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
)))) (= ($generated@@290 $generated@@350 $generated@@351 $generated@@353) ($generated@@290 $generated@@350 $generated@@352 $generated@@353)))
 :pattern ( ($generated@@152 $generated@@351 $generated@@352) ($generated@@290 $generated@@350 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@358) $generated@@75) (= (type $generated@@359) $generated@@75)) (= (type $generated@@360) $generated@@195)) (= (type $generated@@361) $generated@@195)) (= (type $generated@@362) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@269 $generated@@362)) (= ($generated@@85 ($generated@@261 $generated@@360 $generated@@361) ($generated@@185 $generated@@358 $generated@@359) $generated@@362)  (and ($generated@@357 $generated@@360 $generated@@358 $generated@@362) ($generated@@357 $generated@@361 $generated@@359 $generated@@362))))
 :pattern ( ($generated@@85 ($generated@@261 $generated@@360 $generated@@361) ($generated@@185 $generated@@358 $generated@@359) $generated@@362))
)))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@75) (= (type $generated@@366) $generated@@88)) ($generated@@165 ($generated@@8 ($generated@@364 $generated@@365 $generated@@366)) $generated@@46))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@79)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@186) (= ($generated@@184 $generated@@369) (= ($generated@@367 $generated@@369) $generated@@65)))
 :pattern ( ($generated@@184 $generated@@369))
)))
(assert  (and (= (type $generated@@370) ($generated@@87 $generated@@88 $generated@@89)) (forall (($generated@@373 T@T) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@373 $generated@@4))
 :pattern ( ($generated@@372 $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@75) (= (type $generated@@375) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@376) $generated@@146)) (and (and ($generated@@269 $generated@@375) ($generated@@165 $generated@@376 ($generated@@168 $generated@@374))) ($generated@@371 ($generated@@270 $generated@@374 $generated@@370 $generated@@376) ($generated@@372 $generated@@195)))) (= ($generated@@143 $generated@@374 $generated@@370 $generated@@376) ($generated@@143 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@143 $generated@@374 $generated@@370 $generated@@376) ($generated@@269 $generated@@375))
 :pattern ( ($generated@@143 $generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@186) ($generated@@184 $generated@@377)) (exists (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (and (and (= (type $generated@@378) $generated@@195) (= (type $generated@@379) $generated@@195)) (= $generated@@377 ($generated@@261 $generated@@378 $generated@@379)))
 :no-pattern (type $generated@@378)
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
)))
 :pattern ( ($generated@@184 $generated@@377))
)))
(assert  (and (and (forall (($generated@@384 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@384)) 18)) (forall (($generated@@385 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385))
))) (forall (($generated@@386 T@T) ) (! (= (type ($generated@@380 $generated@@386)) ($generated@@382 $generated@@386))
 :pattern ( ($generated@@380 $generated@@386))
))))
(assert (forall (($generated@@387 T@T) ) (! (= ($generated@@381 ($generated@@380 $generated@@387)) 0)
 :pattern ( ($generated@@380 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@2) (= ($generated@@165 $generated@@388 $generated@@162) (<= ($generated@@319 0) ($generated $generated@@388))))
 :pattern ( ($generated@@165 $generated@@388 $generated@@162))
)))
(assert ($generated@@269 $generated@@370))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@88)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@75) (= (type $generated@@393) $generated@@88)) ($generated@@165 ($generated@@389 $generated@@392 $generated@@393) ($generated@@156 $generated@@392)))
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@75) (= (type $generated@@395) $generated@@88)) (= ($generated@@165 $generated@@395 ($generated@@179 $generated@@394))  (and ($generated@@165 $generated@@395 ($generated@@156 $generated@@394)) (not (= $generated@@395 $generated@@157)))))
 :pattern ( ($generated@@165 $generated@@395 ($generated@@179 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@75) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@357 ($generated@@271 $generated@@396) $generated@@397 $generated@@398) ($generated@@85 $generated@@396 $generated@@397 $generated@@398)))
 :pattern ( ($generated@@357 ($generated@@271 $generated@@396) $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@400) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@401) $generated@@195)) (= (type $generated@@402) $generated@@75)) ($generated@@152 $generated@@399 $generated@@400)) ($generated@@357 $generated@@401 $generated@@402 $generated@@399)) ($generated@@357 $generated@@401 $generated@@402 $generated@@400))
 :pattern ( ($generated@@152 $generated@@399 $generated@@400) ($generated@@357 $generated@@401 $generated@@402 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@403) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@404) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@406) $generated@@75)) ($generated@@152 $generated@@403 $generated@@404)) ($generated@@85 $generated@@405 $generated@@406 $generated@@403)) ($generated@@85 $generated@@405 $generated@@406 $generated@@404))
 :pattern ( ($generated@@152 $generated@@403 $generated@@404) ($generated@@85 $generated@@405 $generated@@406 $generated@@403))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@87 $generated@@409 $generated@@2))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@90 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@87 $generated@@411 $generated@@2)) (and (= (= ($generated@@407 $generated@@410) 0) (= $generated@@410 ($generated@@408 $generated@@411))) (=> (not (= ($generated@@407 $generated@@410) 0)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (< 0 ($generated ($generated@@92 $generated@@410 $generated@@412))))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@80)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@75) (and (= ($generated@@83 ($generated@@168 $generated@@415)) $generated@@62) (= ($generated@@413 ($generated@@168 $generated@@415)) $generated@@70)))
 :pattern ( ($generated@@168 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@75) (and (= ($generated@@83 ($generated@@167 $generated@@416)) $generated@@63) (= ($generated@@413 ($generated@@167 $generated@@416)) $generated@@71)))
 :pattern ( ($generated@@167 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@75) (and (= ($generated@@83 ($generated@@174 $generated@@417)) $generated@@64) (= ($generated@@413 ($generated@@174 $generated@@417)) $generated@@72)))
 :pattern ( ($generated@@174 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@75) (and (= ($generated@@83 ($generated@@156 $generated@@418)) $generated@@67) (= ($generated@@413 ($generated@@156 $generated@@418)) $generated@@74)))
 :pattern ( ($generated@@156 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@75) (and (= ($generated@@83 ($generated@@179 $generated@@419)) $generated@@68) (= ($generated@@413 ($generated@@179 $generated@@419)) $generated@@74)))
 :pattern ( ($generated@@179 $generated@@419))
)))
(assert  (and (and (and (and (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (= ($generated@@1 ($generated@@422 $generated@@425 $generated@@426)) 19)) (forall (($generated@@427 T@T) ($generated@@428 T@T) ) (! (= ($generated@@423 ($generated@@422 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@422 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (! (= ($generated@@424 ($generated@@422 $generated@@429 $generated@@430)) $generated@@430)
 :pattern ( ($generated@@422 $generated@@429 $generated@@430))
))) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@423 (type $generated@@431))))
(= (type ($generated@@420 $generated@@431)) ($generated@@87 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@431))
))) (forall (($generated@@433 T@T) ($generated@@434 T@T) ) (! (= (type ($generated@@421 $generated@@433 $generated@@434)) ($generated@@422 $generated@@433 $generated@@434))
 :pattern ( ($generated@@421 $generated@@433 $generated@@434))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@T) ) (! (let (($generated@@437 (type $generated@@435)))
 (not ($generated@@0 ($generated@@92 ($generated@@420 ($generated@@421 $generated@@437 $generated@@436)) $generated@@435))))
 :pattern ( (let (($generated@@437 (type $generated@@435)))
($generated@@92 ($generated@@420 ($generated@@421 $generated@@437 $generated@@436)) $generated@@435)))
)))
(assert  (and (and (and (and (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (= ($generated@@1 ($generated@@440 $generated@@443 $generated@@444)) 20)) (forall (($generated@@445 T@T) ($generated@@446 T@T) ) (! (= ($generated@@441 ($generated@@440 $generated@@445 $generated@@446)) $generated@@445)
 :pattern ( ($generated@@440 $generated@@445 $generated@@446))
))) (forall (($generated@@447 T@T) ($generated@@448 T@T) ) (! (= ($generated@@442 ($generated@@440 $generated@@447 $generated@@448)) $generated@@448)
 :pattern ( ($generated@@440 $generated@@447 $generated@@448))
))) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@441 (type $generated@@449))))
(= (type ($generated@@438 $generated@@449)) ($generated@@87 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@438 $generated@@449))
))) (forall (($generated@@451 T@T) ($generated@@452 T@T) ) (! (= (type ($generated@@439 $generated@@451 $generated@@452)) ($generated@@440 $generated@@451 $generated@@452))
 :pattern ( ($generated@@439 $generated@@451 $generated@@452))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@T) ) (! (let (($generated@@455 (type $generated@@453)))
 (not ($generated@@0 ($generated@@92 ($generated@@438 ($generated@@439 $generated@@455 $generated@@454)) $generated@@453))))
 :pattern ( (let (($generated@@455 (type $generated@@453)))
($generated@@92 ($generated@@438 ($generated@@439 $generated@@455 $generated@@454)) $generated@@453)))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@90 (type $generated@@456))))
 (=> (and (= (type $generated@@456) ($generated@@87 $generated@@458 $generated@@4)) (= (type $generated@@457) ($generated@@87 $generated@@458 $generated@@4))) (= ($generated@@371 $generated@@456 $generated@@457) (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@458) (= ($generated@@0 ($generated@@92 $generated@@456 $generated@@459)) ($generated@@0 ($generated@@92 $generated@@457 $generated@@459))))
 :pattern ( ($generated@@92 $generated@@456 $generated@@459))
 :pattern ( ($generated@@92 $generated@@457 $generated@@459))
)))))
 :pattern ( ($generated@@371 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@90 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@87 $generated@@461 $generated@@2)) (= ($generated@@201 $generated@@460) (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@461) (and (<= 0 ($generated ($generated@@92 $generated@@460 $generated@@462))) (<= ($generated ($generated@@92 $generated@@460 $generated@@462)) ($generated@@407 $generated@@460))))
 :pattern ( ($generated@@92 $generated@@460 $generated@@462))
)))))
 :pattern ( ($generated@@201 $generated@@460))
)))
(assert (forall (($generated@@464 T@T) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@464)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@195) ($generated@@262 $generated@@466 $generated@@162)) (and (= ($generated@@271 ($generated@@463 $generated@@2 $generated@@466)) $generated@@466) ($generated@@165 ($generated@@463 $generated@@2 $generated@@466) $generated@@162)))
 :pattern ( ($generated@@262 $generated@@466 $generated@@162))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@75)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@75) (= (type $generated@@470) $generated@@88)) (= ($generated@@165 $generated@@470 ($generated@@156 $generated@@469))  (or (= $generated@@470 $generated@@157) (= ($generated@@467 $generated@@470) ($generated@@156 $generated@@469)))))
 :pattern ( ($generated@@165 $generated@@470 ($generated@@156 $generated@@469)))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@424 (type $generated@@471))))
(let (($generated@@473 ($generated@@423 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@422 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@421 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ) (!  (and (= (type $generated@@474) $generated@@473) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@471) $generated@@474)))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@420 $generated@@471))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@424 (type $generated@@476))))
(= (type ($generated@@475 $generated@@476)) ($generated@@87 $generated@@477 $generated@@4)))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@424 (type $generated@@478))))
(let (($generated@@480 ($generated@@423 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@422 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@421 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ) (!  (and (= (type $generated@@481) $generated@@479) ($generated@@0 ($generated@@92 ($generated@@475 $generated@@478) $generated@@481)))
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@475 $generated@@478))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@442 (type $generated@@482))))
(let (($generated@@484 ($generated@@441 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@440 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@439 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ) (!  (and (= (type $generated@@485) $generated@@484) ($generated@@0 ($generated@@92 ($generated@@438 $generated@@482) $generated@@485)))
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@438 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@442 (type $generated@@487))))
(= (type ($generated@@486 $generated@@487)) ($generated@@87 $generated@@488 $generated@@4)))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@442 (type $generated@@489))))
(let (($generated@@491 ($generated@@441 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@440 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@439 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ) (!  (and (= (type $generated@@492) $generated@@490) ($generated@@0 ($generated@@92 ($generated@@486 $generated@@489) $generated@@492)))
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@486 $generated@@489))
)))
(assert  (=> (<= 1 $generated@@363) (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@494) $generated@@75) (= (type $generated@@495) $generated@@88)) (or ($generated@@493 $generated@@494 $generated@@495) (and (not (= 1 $generated@@363)) (and (not (= $generated@@495 $generated@@157)) ($generated@@165 $generated@@495 ($generated@@179 $generated@@494)))))) (= ($generated@@305 $generated@@494 $generated@@495) ($generated@@364 $generated@@494 $generated@@495)))
 :pattern ( ($generated@@305 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) ($generated@@87 $generated@@195 $generated@@2)) (= (type $generated@@497) $generated@@75)) (= ($generated@@165 $generated@@496 ($generated@@200 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@195) (< 0 ($generated ($generated@@92 $generated@@496 $generated@@498)))) ($generated@@262 $generated@@498 $generated@@497))
 :pattern ( ($generated@@92 $generated@@496 $generated@@498))
))))
 :pattern ( ($generated@@165 $generated@@496 ($generated@@200 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@500) $generated@@75)) (= (type $generated@@501) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@499 ($generated@@309 $generated@@500) $generated@@501) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@195) ($generated@@0 ($generated@@92 $generated@@499 $generated@@502))) ($generated@@357 $generated@@502 $generated@@500 $generated@@501))
 :pattern ( ($generated@@92 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@85 $generated@@499 ($generated@@309 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@504) $generated@@75)) (= (type $generated@@505) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@503 ($generated@@314 $generated@@504) $generated@@505) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@195) ($generated@@0 ($generated@@92 $generated@@503 $generated@@506))) ($generated@@357 $generated@@506 $generated@@504 $generated@@505))
 :pattern ( ($generated@@92 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@85 $generated@@503 ($generated@@314 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated ($generated@@92 ($generated@@408 $generated@@508) $generated@@507)) 0))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@92 ($generated@@408 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@75) (= (type $generated@@510) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@511) $generated@@146)) (and ($generated@@269 $generated@@510) ($generated@@165 $generated@@511 ($generated@@168 $generated@@509)))) (= ($generated@@371 ($generated@@270 $generated@@509 $generated@@370 $generated@@511) ($generated@@372 $generated@@195)) ($generated@@371 ($generated@@270 $generated@@509 $generated@@510 $generated@@511) ($generated@@372 $generated@@195))))
 :pattern ( ($generated@@270 $generated@@509 $generated@@370 $generated@@511) ($generated@@269 $generated@@510))
 :pattern ( ($generated@@270 $generated@@509 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) ($generated@@87 $generated@@195 $generated@@4))
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@424 (type $generated@@515))))
(let (($generated@@517 ($generated@@423 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515)) ($generated@@87 $generated@@517 $generated@@516))))
 :pattern ( ($generated@@513 $generated@@515))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@519) $generated@@195)) (= ($generated@@0 ($generated@@92 ($generated@@512 $generated@@518) $generated@@519))  (and ($generated@@0 ($generated@@92 ($generated@@420 $generated@@518) ($generated@@193 ($generated@@463 $generated@@186 $generated@@519)))) (= ($generated@@92 ($generated@@513 $generated@@518) ($generated@@193 ($generated@@463 $generated@@186 $generated@@519))) ($generated@@194 ($generated@@463 $generated@@186 $generated@@519))))))
 :pattern ( ($generated@@92 ($generated@@512 $generated@@518) $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) ($generated@@87 $generated@@195 $generated@@4))
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@442 (type $generated@@523))))
(let (($generated@@525 ($generated@@441 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523)) ($generated@@87 $generated@@525 $generated@@524))))
 :pattern ( ($generated@@521 $generated@@523))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@527) $generated@@195)) (= ($generated@@0 ($generated@@92 ($generated@@520 $generated@@526) $generated@@527))  (and ($generated@@0 ($generated@@92 ($generated@@438 $generated@@526) ($generated@@193 ($generated@@463 $generated@@186 $generated@@527)))) (= ($generated@@92 ($generated@@521 $generated@@526) ($generated@@193 ($generated@@463 $generated@@186 $generated@@527))) ($generated@@194 ($generated@@463 $generated@@186 $generated@@527))))))
 :pattern ( ($generated@@92 ($generated@@520 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(let (($generated@@531 ($generated@@423 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@422 $generated@@531 $generated@@530)) (= ($generated@@0 ($generated@@92 ($generated@@475 $generated@@528) $generated@@529)) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@531) (and ($generated@@0 ($generated@@92 ($generated@@420 $generated@@528) $generated@@532)) (= $generated@@529 ($generated@@92 ($generated@@513 $generated@@528) $generated@@532))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@528) $generated@@532))
 :pattern ( ($generated@@92 ($generated@@513 $generated@@528) $generated@@532))
))))))
 :pattern ( ($generated@@92 ($generated@@475 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(let (($generated@@536 ($generated@@441 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@440 $generated@@536 $generated@@535)) (= ($generated@@0 ($generated@@92 ($generated@@486 $generated@@533) $generated@@534)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@536) (and ($generated@@0 ($generated@@92 ($generated@@438 $generated@@533) $generated@@537)) (= $generated@@534 ($generated@@92 ($generated@@521 $generated@@533) $generated@@537))))
 :pattern ( ($generated@@92 ($generated@@438 $generated@@533) $generated@@537))
 :pattern ( ($generated@@92 ($generated@@521 $generated@@533) $generated@@537))
))))))
 :pattern ( ($generated@@92 ($generated@@486 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@538 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@542) $generated@@75)) (= (type $generated@@543) $generated@@75)) (= (type $generated@@544) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@541 ($generated@@538 $generated@@542 $generated@@543) $generated@@544) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@541) $generated@@545))) (and ($generated@@357 ($generated@@92 ($generated@@513 $generated@@541) $generated@@545) $generated@@543 $generated@@544) ($generated@@357 $generated@@545 $generated@@542 $generated@@544)))
 :pattern ( ($generated@@92 ($generated@@513 $generated@@541) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@541) $generated@@545))
))))
 :pattern ( ($generated@@85 $generated@@541 ($generated@@538 $generated@@542 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (! (= (type ($generated@@546 $generated@@547 $generated@@548)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@550) $generated@@75)) (= (type $generated@@551) $generated@@75)) (= (type $generated@@552) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@549 ($generated@@546 $generated@@550 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@438 $generated@@549) $generated@@553))) (and ($generated@@357 ($generated@@92 ($generated@@521 $generated@@549) $generated@@553) $generated@@551 $generated@@552) ($generated@@357 $generated@@553 $generated@@550 $generated@@552)))
 :pattern ( ($generated@@92 ($generated@@521 $generated@@549) $generated@@553))
 :pattern ( ($generated@@92 ($generated@@438 $generated@@549) $generated@@553))
))))
 :pattern ( ($generated@@85 $generated@@549 ($generated@@546 $generated@@550 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@90 (type $generated@@554))))
 (=> (and (and (= (type $generated@@554) ($generated@@87 $generated@@556 $generated@@4)) (= (type $generated@@555) ($generated@@87 $generated@@556 $generated@@4))) ($generated@@371 $generated@@554 $generated@@555)) (= $generated@@554 $generated@@555)))
 :pattern ( ($generated@@371 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@557) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@558) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@559) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@557 $generated@@559))) (and ($generated@@152 $generated@@557 $generated@@558) ($generated@@152 $generated@@558 $generated@@559))) ($generated@@152 $generated@@557 $generated@@559))
 :pattern ( ($generated@@152 $generated@@557 $generated@@558) ($generated@@152 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@T) ) (! (= (type ($generated@@560 $generated@@561)) ($generated@@87 $generated@@561 $generated@@4))
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@442 (type $generated@@562))))
(let (($generated@@564 ($generated@@441 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@440 $generated@@564 $generated@@563)) (= (= $generated@@562 ($generated@@439 $generated@@564 $generated@@563)) (= ($generated@@438 $generated@@562) ($generated@@560 $generated@@564))))))
 :pattern ( ($generated@@438 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@442 (type $generated@@565))))
(let (($generated@@567 ($generated@@441 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@440 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@439 $generated@@567 $generated@@566)) (= ($generated@@486 $generated@@565) ($generated@@560 $generated@@566))))))
 :pattern ( ($generated@@486 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@442 (type $generated@@568))))
(let (($generated@@570 ($generated@@441 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@440 $generated@@570 $generated@@569)) (= (= $generated@@568 ($generated@@439 $generated@@570 $generated@@569)) (= ($generated@@520 $generated@@568) ($generated@@560 $generated@@195))))))
 :pattern ( ($generated@@520 $generated@@568))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@424 (type $generated@@571))))
(let (($generated@@573 ($generated@@423 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@422 $generated@@573 $generated@@572)) (or (= $generated@@571 ($generated@@421 $generated@@573 $generated@@572)) (exists (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (and (and (= (type $generated@@574) $generated@@195) (= (type $generated@@575) $generated@@195)) ($generated@@0 ($generated@@92 ($generated@@512 $generated@@571) ($generated@@271 ($generated@@261 $generated@@574 $generated@@575)))))
 :no-pattern (type $generated@@574)
 :no-pattern (type $generated@@575)
 :no-pattern ($generated $generated@@574)
 :no-pattern ($generated@@0 $generated@@574)
 :no-pattern ($generated $generated@@575)
 :no-pattern ($generated@@0 $generated@@575)
))))))
 :pattern ( ($generated@@512 $generated@@571))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@442 (type $generated@@576))))
(let (($generated@@578 ($generated@@441 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@440 $generated@@578 $generated@@577)) (or (= $generated@@576 ($generated@@439 $generated@@578 $generated@@577)) (exists (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (and (and (= (type $generated@@579) $generated@@195) (= (type $generated@@580) $generated@@195)) ($generated@@0 ($generated@@92 ($generated@@520 $generated@@576) ($generated@@271 ($generated@@261 $generated@@579 $generated@@580)))))
 :no-pattern (type $generated@@579)
 :no-pattern (type $generated@@580)
 :no-pattern ($generated $generated@@579)
 :no-pattern ($generated@@0 $generated@@579)
 :no-pattern ($generated $generated@@580)
 :no-pattern ($generated@@0 $generated@@580)
))))))
 :pattern ( ($generated@@520 $generated@@576))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@195) ($generated@@262 $generated@@581 $generated@@46)) (and (= ($generated@@271 ($generated@@463 $generated@@2 $generated@@581)) $generated@@581) ($generated@@165 ($generated@@463 $generated@@2 $generated@@581) $generated@@46)))
 :pattern ( ($generated@@262 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@195) ($generated@@262 $generated@@582 $generated@@47)) (and (= ($generated@@271 ($generated@@463 $generated@@3 $generated@@582)) $generated@@582) ($generated@@165 ($generated@@463 $generated@@3 $generated@@582) $generated@@47)))
 :pattern ( ($generated@@262 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@195) ($generated@@262 $generated@@583 $generated@@44)) (and (= ($generated@@271 ($generated@@463 $generated@@4 $generated@@583)) $generated@@583) ($generated@@165 ($generated@@463 $generated@@4 $generated@@583) $generated@@44)))
 :pattern ( ($generated@@262 $generated@@583 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@584) 21))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@195) ($generated@@262 $generated@@585 $generated@@45)) (and (= ($generated@@271 ($generated@@463 $generated@@584 $generated@@585)) $generated@@585) ($generated@@165 ($generated@@463 $generated@@584 $generated@@585) $generated@@45)))
 :pattern ( ($generated@@262 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@75) (= ($generated@@262 ($generated@@271 $generated@@586) $generated@@587) ($generated@@165 $generated@@586 $generated@@587)))
 :pattern ( ($generated@@262 ($generated@@271 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@90 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@87 $generated@@589 $generated@@2)) (<= 0 ($generated@@407 $generated@@588))))
 :pattern ( ($generated@@407 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@383 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@382 $generated@@591)) (<= 0 ($generated@@381 $generated@@590))))
 :pattern ( ($generated@@381 $generated@@590))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@75)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) (= (type $generated@@595) $generated@@75)) (= ($generated@@592 ($generated@@538 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@538 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@75)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@75) (= (type $generated@@599) $generated@@75)) (= ($generated@@596 ($generated@@538 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@538 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@75) (= (type $generated@@601) $generated@@75)) (= ($generated@@83 ($generated@@538 $generated@@600 $generated@@601)) $generated@@58))
 :pattern ( ($generated@@538 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@75)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@75) (= (type $generated@@605) $generated@@75)) (= ($generated@@602 ($generated@@546 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@546 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@75)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@75) (= (type $generated@@609) $generated@@75)) (= ($generated@@606 ($generated@@546 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@546 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@75) (= (type $generated@@611) $generated@@75)) (= ($generated@@83 ($generated@@546 $generated@@610 $generated@@611)) $generated@@59))
 :pattern ( ($generated@@546 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@195) (= (type $generated@@613) $generated@@195)) (= ($generated@@367 ($generated@@261 $generated@@612 $generated@@613)) $generated@@65))
 :pattern ( ($generated@@261 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@75)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@75) (= (type $generated@@617) $generated@@75)) (= ($generated@@614 ($generated@@185 $generated@@616 $generated@@617)) $generated@@616))
 :pattern ( ($generated@@185 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@75)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@75) (= (type $generated@@621) $generated@@75)) (= ($generated@@618 ($generated@@185 $generated@@620 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@185 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@195) (= (type $generated@@623) $generated@@195)) (= ($generated@@193 ($generated@@261 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@261 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@195) (= (type $generated@@625) $generated@@195)) (= ($generated@@194 ($generated@@261 $generated@@624 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@261 $generated@@624 $generated@@625))
)))
(assert  (and (forall (($generated@@628 T@U) ) (! (= (type ($generated@@626 $generated@@628)) $generated@@75)
 :pattern ( ($generated@@626 $generated@@628))
)) (forall (($generated@@629 T@U) ($generated@@630 Int) ) (! (let (($generated@@631 ($generated@@383 (type $generated@@629))))
(= (type ($generated@@627 $generated@@629 $generated@@630)) $generated@@631))
 :pattern ( ($generated@@627 $generated@@629 $generated@@630))
))))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@382 $generated@@195)) (= (type $generated@@633) $generated@@75)) (= (type $generated@@634) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@632 ($generated@@626 $generated@@633) $generated@@634) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@381 $generated@@632))) ($generated@@357 ($generated@@627 $generated@@632 $generated@@635) $generated@@633 $generated@@634))
 :pattern ( ($generated@@627 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@85 $generated@@632 ($generated@@626 $generated@@633) $generated@@634))
)))
(assert  (=> (<= 1 $generated@@363) (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@75) (= (type $generated@@637) $generated@@88)) (or ($generated@@493 $generated@@636 ($generated@@321 $generated@@637)) (and (not (= 1 $generated@@363)) (and (not (= $generated@@637 $generated@@157)) ($generated@@165 $generated@@637 ($generated@@179 $generated@@636)))))) (= ($generated@@305 $generated@@636 ($generated@@321 $generated@@637)) ($generated@@364 $generated@@636 ($generated@@321 $generated@@637))))
 :weight 3
 :pattern ( ($generated@@305 $generated@@636 ($generated@@321 $generated@@637)))
))))
(assert (forall (($generated@@639 Int) ) (! (= ($generated@@638 ($generated@@86 $generated@@639)) $generated@@639)
 :pattern ( ($generated@@86 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@75)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@75) (= ($generated@@640 ($generated@@309 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@309 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@75) (= ($generated@@83 ($generated@@309 $generated@@643)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@75)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@75) (= ($generated@@644 ($generated@@314 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@314 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@75) (= ($generated@@83 ($generated@@314 $generated@@647)) $generated@@55))
 :pattern ( ($generated@@314 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@75)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@75) (= ($generated@@648 ($generated@@200 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@200 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@75) (= ($generated@@83 ($generated@@200 $generated@@651)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@75)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@75) (= ($generated@@652 ($generated@@626 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@626 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@75) (= ($generated@@83 ($generated@@626 $generated@@655)) $generated@@57))
 :pattern ( ($generated@@626 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@75)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@75) (= ($generated@@656 ($generated@@168 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@168 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@75)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@75) (= ($generated@@659 ($generated@@167 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@167 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ) (! (= (type ($generated@@662 $generated@@663)) $generated@@75)
 :pattern ( ($generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@75) (= ($generated@@662 ($generated@@174 $generated@@664)) $generated@@664))
 :pattern ( ($generated@@174 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ) (! (= (type ($generated@@665 $generated@@666)) $generated@@75)
 :pattern ( ($generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@75) (= ($generated@@665 ($generated@@156 $generated@@667)) $generated@@667))
 :pattern ( ($generated@@156 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ) (! (= (type ($generated@@668 $generated@@669)) $generated@@75)
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@75) (= ($generated@@668 ($generated@@179 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@179 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 (type $generated@@671)))
(= ($generated@@463 $generated@@672 ($generated@@271 $generated@@671)) $generated@@671))
 :pattern ( ($generated@@271 $generated@@671))
)))
(assert  (=> (<= 1 $generated@@363) (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@75) (= (type $generated@@674) $generated@@88)) (or ($generated@@493 $generated@@673 $generated@@674) (and (not (= 1 $generated@@363)) (and (not (= $generated@@674 $generated@@157)) ($generated@@165 $generated@@674 ($generated@@179 $generated@@673)))))) true)
 :pattern ( ($generated@@305 $generated@@673 $generated@@674))
))))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@75) (= (type $generated@@676) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@677) $generated@@88)) (and ($generated@@269 $generated@@676) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@676 $generated@@677) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@364 $generated@@675 $generated@@677)) $generated@@46 $generated@@676))
 :pattern ( ($generated@@364 $generated@@675 $generated@@677) ($generated@@94 ($generated@@92 $generated@@676 $generated@@677) $generated@@60))
))))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@678) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@679) $generated@@75)) (= (type $generated@@680) $generated@@75)) (= ($generated@@165 $generated@@678 ($generated@@538 $generated@@679 $generated@@680)) (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@678) $generated@@681))) (and ($generated@@262 ($generated@@92 ($generated@@513 $generated@@678) $generated@@681) $generated@@680) ($generated@@262 $generated@@681 $generated@@679)))
 :pattern ( ($generated@@92 ($generated@@513 $generated@@678) $generated@@681))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@678) $generated@@681))
))))
 :pattern ( ($generated@@165 $generated@@678 ($generated@@538 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@683) $generated@@75)) (= (type $generated@@684) $generated@@75)) (= ($generated@@165 $generated@@682 ($generated@@546 $generated@@683 $generated@@684)) (forall (($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@438 $generated@@682) $generated@@685))) (and ($generated@@262 ($generated@@92 ($generated@@521 $generated@@682) $generated@@685) $generated@@684) ($generated@@262 $generated@@685 $generated@@683)))
 :pattern ( ($generated@@92 ($generated@@521 $generated@@682) $generated@@685))
 :pattern ( ($generated@@92 ($generated@@438 $generated@@682) $generated@@685))
))))
 :pattern ( ($generated@@165 $generated@@682 ($generated@@546 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@195) (= (type $generated@@689) $generated@@195)) (< ($generated@@686 $generated@@688) ($generated@@687 ($generated@@261 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@261 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@195) (= (type $generated@@691) $generated@@195)) (< ($generated@@686 $generated@@691) ($generated@@687 ($generated@@261 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@261 $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@195) (= (type $generated@@693) $generated@@75)) (= (type $generated@@694) $generated@@75)) ($generated@@262 $generated@@692 ($generated@@538 $generated@@693 $generated@@694))) (and (= ($generated@@271 ($generated@@463 ($generated@@422 $generated@@195 $generated@@195) $generated@@692)) $generated@@692) ($generated@@165 ($generated@@463 ($generated@@422 $generated@@195 $generated@@195) $generated@@692) ($generated@@538 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@262 $generated@@692 ($generated@@538 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@195) (= (type $generated@@696) $generated@@75)) (= (type $generated@@697) $generated@@75)) ($generated@@262 $generated@@695 ($generated@@546 $generated@@696 $generated@@697))) (and (= ($generated@@271 ($generated@@463 ($generated@@440 $generated@@195 $generated@@195) $generated@@695)) $generated@@695) ($generated@@165 ($generated@@463 ($generated@@440 $generated@@195 $generated@@195) $generated@@695) ($generated@@546 $generated@@696 $generated@@697))))
 :pattern ( ($generated@@262 $generated@@695 ($generated@@546 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) $generated@@75) (= (type $generated@@699) $generated@@75)) (= (type $generated@@700) $generated@@195)) ($generated@@262 $generated@@700 ($generated@@185 $generated@@698 $generated@@699))) (and (= ($generated@@271 ($generated@@463 $generated@@186 $generated@@700)) $generated@@700) ($generated@@165 ($generated@@463 $generated@@186 $generated@@700) ($generated@@185 $generated@@698 $generated@@699))))
 :pattern ( ($generated@@262 $generated@@700 ($generated@@185 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@146) (= (type $generated@@702) $generated@@75)) (= (type $generated@@703) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@269 $generated@@703)) (= ($generated@@85 $generated@@701 ($generated@@168 $generated@@702) $generated@@703)  (=> ($generated@@143 $generated@@702 $generated@@703 $generated@@701) (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@88) (=> (and (not (= $generated@@704 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@702 $generated@@703 $generated@@701) ($generated@@271 $generated@@704)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@703 $generated@@704) $generated@@60))))
 :pattern ( ($generated@@92 ($generated@@270 $generated@@702 $generated@@703 $generated@@701) ($generated@@271 $generated@@704)))
)))))
 :pattern ( ($generated@@85 $generated@@701 ($generated@@168 $generated@@702) $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ) (! (let (($generated@@706 (type $generated@@705)))
 (not ($generated@@0 ($generated@@92 ($generated@@372 $generated@@706) $generated@@705))))
 :pattern ( (let (($generated@@706 (type $generated@@705)))
($generated@@92 ($generated@@372 $generated@@706) $generated@@705)))
)))
(assert (forall (($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
 (not ($generated@@0 ($generated@@92 ($generated@@560 $generated@@708) $generated@@707))))
 :pattern ( (let (($generated@@708 (type $generated@@707)))
($generated@@92 ($generated@@560 $generated@@708) $generated@@707)))
)))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) $generated@@75) (= (type $generated@@710) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@711) $generated@@88)) (and ($generated@@269 $generated@@710) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@710 $generated@@711) $generated@@60)))) ($generated@@85 ($generated@@389 $generated@@709 $generated@@711) ($generated@@156 $generated@@709) $generated@@710))
 :pattern ( ($generated@@389 $generated@@709 $generated@@711) ($generated@@94 ($generated@@92 $generated@@710 $generated@@711) $generated@@60))
))))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@75) (= (type $generated@@713) $generated@@146)) (= ($generated@@165 $generated@@713 ($generated@@174 $generated@@712))  (and ($generated@@165 $generated@@713 ($generated@@167 $generated@@712)) ($generated@@143 $generated@@712 $generated@@370 $generated@@713))))
 :pattern ( ($generated@@165 $generated@@713 ($generated@@174 $generated@@712)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@75) (= (type $generated@@715) $generated@@75)) (and (= ($generated@@83 ($generated@@185 $generated@@714 $generated@@715)) $generated@@66) (= ($generated@@413 ($generated@@185 $generated@@714 $generated@@715)) $generated@@73)))
 :pattern ( ($generated@@185 $generated@@714 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@186) (= ($generated@@686 ($generated@@271 $generated@@716)) ($generated@@687 $generated@@716)))
 :pattern ( ($generated@@686 ($generated@@271 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@146) (= (type $generated@@718) $generated@@75)) (= ($generated@@165 $generated@@717 ($generated@@168 $generated@@718)) (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) ($generated@@87 $generated@@88 $generated@@89)) (=> (and ($generated@@269 $generated@@719) ($generated@@143 $generated@@718 $generated@@719 $generated@@717)) ($generated@@262 ($generated@@290 $generated@@718 $generated@@719 $generated@@717) $generated@@718)))
 :pattern ( ($generated@@290 $generated@@718 $generated@@719 $generated@@717))
))))
 :pattern ( ($generated@@165 $generated@@717 ($generated@@168 $generated@@718)))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@195) ($generated@@262 $generated@@720 ($generated@@86 0))) (and (= ($generated@@271 ($generated@@463 $generated@@2 $generated@@720)) $generated@@720) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@720) ($generated@@86 0))))
 :pattern ( ($generated@@262 $generated@@720 ($generated@@86 0)))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@195) (= (type $generated@@722) $generated@@75)) ($generated@@262 $generated@@721 ($generated@@309 $generated@@722))) (and (= ($generated@@271 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@721)) $generated@@721) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@721) ($generated@@309 $generated@@722))))
 :pattern ( ($generated@@262 $generated@@721 ($generated@@309 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@723) $generated@@195) (= (type $generated@@724) $generated@@75)) ($generated@@262 $generated@@723 ($generated@@314 $generated@@724))) (and (= ($generated@@271 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@723)) $generated@@723) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@723) ($generated@@314 $generated@@724))))
 :pattern ( ($generated@@262 $generated@@723 ($generated@@314 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@725) $generated@@195) (= (type $generated@@726) $generated@@75)) ($generated@@262 $generated@@725 ($generated@@200 $generated@@726))) (and (= ($generated@@271 ($generated@@463 ($generated@@87 $generated@@195 $generated@@2) $generated@@725)) $generated@@725) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@2) $generated@@725) ($generated@@200 $generated@@726))))
 :pattern ( ($generated@@262 $generated@@725 ($generated@@200 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (= (type $generated@@727) $generated@@195) (= (type $generated@@728) $generated@@75)) ($generated@@262 $generated@@727 ($generated@@626 $generated@@728))) (and (= ($generated@@271 ($generated@@463 ($generated@@382 $generated@@195) $generated@@727)) $generated@@727) ($generated@@165 ($generated@@463 ($generated@@382 $generated@@195) $generated@@727) ($generated@@626 $generated@@728))))
 :pattern ( ($generated@@262 $generated@@727 ($generated@@626 $generated@@728)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@75) (= (type $generated@@730) $generated@@195)) ($generated@@262 $generated@@730 ($generated@@168 $generated@@729))) (and (= ($generated@@271 ($generated@@463 $generated@@146 $generated@@730)) $generated@@730) ($generated@@165 ($generated@@463 $generated@@146 $generated@@730) ($generated@@168 $generated@@729))))
 :pattern ( ($generated@@262 $generated@@730 ($generated@@168 $generated@@729)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@731) $generated@@75) (= (type $generated@@732) $generated@@195)) ($generated@@262 $generated@@732 ($generated@@167 $generated@@731))) (and (= ($generated@@271 ($generated@@463 $generated@@146 $generated@@732)) $generated@@732) ($generated@@165 ($generated@@463 $generated@@146 $generated@@732) ($generated@@167 $generated@@731))))
 :pattern ( ($generated@@262 $generated@@732 ($generated@@167 $generated@@731)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (= (type $generated@@733) $generated@@75) (= (type $generated@@734) $generated@@195)) ($generated@@262 $generated@@734 ($generated@@174 $generated@@733))) (and (= ($generated@@271 ($generated@@463 $generated@@146 $generated@@734)) $generated@@734) ($generated@@165 ($generated@@463 $generated@@146 $generated@@734) ($generated@@174 $generated@@733))))
 :pattern ( ($generated@@262 $generated@@734 ($generated@@174 $generated@@733)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@75) (= (type $generated@@736) $generated@@195)) ($generated@@262 $generated@@736 ($generated@@156 $generated@@735))) (and (= ($generated@@271 ($generated@@463 $generated@@88 $generated@@736)) $generated@@736) ($generated@@165 ($generated@@463 $generated@@88 $generated@@736) ($generated@@156 $generated@@735))))
 :pattern ( ($generated@@262 $generated@@736 ($generated@@156 $generated@@735)))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (= (type $generated@@737) $generated@@75) (= (type $generated@@738) $generated@@195)) ($generated@@262 $generated@@738 ($generated@@179 $generated@@737))) (and (= ($generated@@271 ($generated@@463 $generated@@88 $generated@@738)) $generated@@738) ($generated@@165 ($generated@@463 $generated@@88 $generated@@738) ($generated@@179 $generated@@737))))
 :pattern ( ($generated@@262 $generated@@738 ($generated@@179 $generated@@737)))
)))
(assert (= ($generated@@83 $generated@@162) $generated@@61))
(assert (= ($generated@@413 $generated@@162) $generated@@69))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@739) ($generated@@87 $generated@@195 $generated@@2)) (= (type $generated@@740) $generated@@75)) (= (type $generated@@741) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@739 ($generated@@200 $generated@@740) $generated@@741) (forall (($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@195) (< 0 ($generated ($generated@@92 $generated@@739 $generated@@742)))) ($generated@@357 $generated@@742 $generated@@740 $generated@@741))
 :pattern ( ($generated@@92 $generated@@739 $generated@@742))
))))
 :pattern ( ($generated@@85 $generated@@739 ($generated@@200 $generated@@740) $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@743) $generated@@75) (= (type $generated@@744) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@745) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@195))) (= (type $generated@@746) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@747) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@195 $generated@@4)))) (= (type $generated@@748) $generated@@195)) (= ($generated@@0 ($generated@@92 ($generated@@270 $generated@@743 $generated@@744 ($generated@@291 $generated@@745 $generated@@746 $generated@@747)) $generated@@748)) ($generated@@0 ($generated@@92 ($generated@@92 $generated@@747 $generated@@744) $generated@@748))))
 :pattern ( ($generated@@92 ($generated@@270 $generated@@743 $generated@@744 ($generated@@291 $generated@@745 $generated@@746 $generated@@747)) $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (= (type $generated@@749) $generated@@75) (= (type $generated@@750) $generated@@88)) (= (type $generated@@751) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@305 $generated@@749 $generated@@750) ($generated ($generated@@463 $generated@@2 ($generated@@290 $generated@@46 $generated@@751 ($generated@@144 $generated@@749 $generated@@750))))))
 :pattern ( ($generated@@305 $generated@@749 $generated@@750) ($generated@@269 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@752) $generated@@146) (= (type $generated@@753) $generated@@75)) (= (type $generated@@754) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@269 $generated@@754) ($generated@@85 $generated@@752 ($generated@@168 $generated@@753) $generated@@754))) ($generated@@143 $generated@@753 $generated@@754 $generated@@752)) ($generated@@357 ($generated@@290 $generated@@753 $generated@@754 $generated@@752) $generated@@753 $generated@@754))
 :pattern ( ($generated@@85 $generated@@752 ($generated@@168 $generated@@753) $generated@@754))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (and (= (type $generated@@755) $generated@@186) (= (type $generated@@756) $generated@@75)) (= (type $generated@@757) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@269 $generated@@757) (and ($generated@@184 $generated@@755) (exists (($generated@@758 T@U) ) (!  (and (= (type $generated@@758) $generated@@75) ($generated@@85 $generated@@755 ($generated@@185 $generated@@756 $generated@@758) $generated@@757))
 :pattern ( ($generated@@85 $generated@@755 ($generated@@185 $generated@@756 $generated@@758) $generated@@757))
))))) ($generated@@357 ($generated@@193 $generated@@755) $generated@@756 $generated@@757))
 :pattern ( ($generated@@357 ($generated@@193 $generated@@755) $generated@@756 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (and (and (= (type $generated@@759) $generated@@186) (= (type $generated@@760) $generated@@75)) (= (type $generated@@761) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@269 $generated@@761) (and ($generated@@184 $generated@@759) (exists (($generated@@762 T@U) ) (!  (and (= (type $generated@@762) $generated@@75) ($generated@@85 $generated@@759 ($generated@@185 $generated@@762 $generated@@760) $generated@@761))
 :pattern ( ($generated@@85 $generated@@759 ($generated@@185 $generated@@762 $generated@@760) $generated@@761))
))))) ($generated@@357 ($generated@@194 $generated@@759) $generated@@760 $generated@@761))
 :pattern ( ($generated@@357 ($generated@@194 $generated@@759) $generated@@760 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (and (and (= (type $generated@@763) $generated@@146) (= (type $generated@@764) $generated@@75)) (= (type $generated@@765) $generated@@75)) (and ($generated@@165 $generated@@763 ($generated@@168 $generated@@764)) (forall (($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@766) $generated@@195) ($generated@@262 $generated@@766 $generated@@764)) ($generated@@262 $generated@@766 $generated@@765))
 :pattern ( ($generated@@262 $generated@@766 $generated@@764))
 :pattern ( ($generated@@262 $generated@@766 $generated@@765))
)))) ($generated@@165 $generated@@763 ($generated@@168 $generated@@765)))
 :pattern ( ($generated@@165 $generated@@763 ($generated@@168 $generated@@764)) ($generated@@165 $generated@@763 ($generated@@168 $generated@@765)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@195) (= (type $generated@@768) $generated@@195)) (= ($generated@@261 ($generated@@321 $generated@@767) ($generated@@321 $generated@@768)) ($generated@@321 ($generated@@261 $generated@@767 $generated@@768))))
 :pattern ( ($generated@@261 ($generated@@321 $generated@@767) ($generated@@321 $generated@@768)))
)))
(assert (forall (($generated@@769 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@319 $generated@@769))) ($generated@@321 ($generated@@271 ($generated@@8 $generated@@769))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@319 $generated@@769))))
)))
(assert (forall (($generated@@770 T@U) ) (! (= ($generated@@271 ($generated@@321 $generated@@770)) ($generated@@321 ($generated@@271 $generated@@770)))
 :pattern ( ($generated@@271 ($generated@@321 $generated@@770)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@75) (= (type $generated@@772) $generated@@88)) (and (not (= $generated@@772 $generated@@157)) ($generated@@165 $generated@@772 ($generated@@179 $generated@@771)))) (= ($generated@@145 $generated@@771 $generated@@772) true))
 :pattern ( ($generated@@145 $generated@@771 $generated@@772))
)))
(assert (forall (($generated@@773 T@U) ) (! (let (($generated@@774 ($generated@@383 (type $generated@@773))))
 (=> (and (= (type $generated@@773) ($generated@@382 $generated@@774)) (= ($generated@@381 $generated@@773) 0)) (= $generated@@773 ($generated@@380 $generated@@774))))
 :pattern ( ($generated@@381 $generated@@773))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@775) $generated@@75) (= (type $generated@@776) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@777) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@195))) (= (type $generated@@778) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@779) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@195 $generated@@4)))) ($generated@@0 ($generated@@92 $generated@@778 $generated@@776))) ($generated@@143 $generated@@775 $generated@@776 ($generated@@291 $generated@@777 $generated@@778 $generated@@779)))
 :pattern ( ($generated@@143 $generated@@775 $generated@@776 ($generated@@291 $generated@@777 $generated@@778 $generated@@779)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ($generated@@782 T@U) ) (! (let (($generated@@783 (type $generated@@781)))
 (=> (and (and (= (type $generated@@780) ($generated@@87 $generated@@783 $generated@@2)) (= (type $generated@@782) $generated@@2)) (<= 0 ($generated $generated@@782))) (= ($generated@@407 ($generated@@93 $generated@@780 $generated@@781 $generated@@782)) (+ (- ($generated@@407 $generated@@780) ($generated ($generated@@92 $generated@@780 $generated@@781))) ($generated $generated@@782)))))
 :pattern ( ($generated@@407 ($generated@@93 $generated@@780 $generated@@781 $generated@@782)))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (= (type $generated@@784) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@785) $generated@@2)) ($generated@@85 $generated@@785 $generated@@46 $generated@@784))
 :pattern ( ($generated@@85 $generated@@785 $generated@@46 $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@787) $generated@@3)) ($generated@@85 $generated@@787 $generated@@47 $generated@@786))
 :pattern ( ($generated@@85 $generated@@787 $generated@@47 $generated@@786))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@789) $generated@@4)) ($generated@@85 $generated@@789 $generated@@44 $generated@@788))
 :pattern ( ($generated@@85 $generated@@789 $generated@@44 $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@791) $generated@@584)) ($generated@@85 $generated@@791 $generated@@45 $generated@@790))
 :pattern ( ($generated@@85 $generated@@791 $generated@@45 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@793) $generated@@195)) ($generated@@85 $generated@@793 $generated@@48 $generated@@792))
 :pattern ( ($generated@@85 $generated@@793 $generated@@48 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) ($generated@@382 $generated@@195)) (= (type $generated@@795) $generated@@75)) (= ($generated@@165 $generated@@794 ($generated@@626 $generated@@795)) (forall (($generated@@796 Int) ) (!  (=> (and (<= 0 $generated@@796) (< $generated@@796 ($generated@@381 $generated@@794))) ($generated@@262 ($generated@@627 $generated@@794 $generated@@796) $generated@@795))
 :pattern ( ($generated@@627 $generated@@794 $generated@@796))
))))
 :pattern ( ($generated@@165 $generated@@794 ($generated@@626 $generated@@795)))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ) (!  (=> (and (= (type $generated@@797) $generated@@75) (= (type $generated@@798) $generated@@146)) (= ($generated@@165 $generated@@798 ($generated@@167 $generated@@797))  (and ($generated@@165 $generated@@798 ($generated@@168 $generated@@797)) ($generated@@371 ($generated@@270 $generated@@797 $generated@@370 $generated@@798) ($generated@@372 $generated@@195)))))
 :pattern ( ($generated@@165 $generated@@798 ($generated@@167 $generated@@797)))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 Int) ) (!  (=> (= (type $generated@@800) ($generated@@382 $generated@@195)) (=> (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@381 $generated@@800))) (< ($generated@@687 ($generated@@463 $generated@@186 ($generated@@627 $generated@@800 $generated@@801))) ($generated@@799 $generated@@800))))
 :pattern ( ($generated@@687 ($generated@@463 $generated@@186 ($generated@@627 $generated@@800 $generated@@801))))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (and (= (type $generated@@802) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@803) $generated@@75)) (= (type $generated@@804) $generated@@75)) ($generated@@165 $generated@@802 ($generated@@538 $generated@@803 $generated@@804))) (and (and ($generated@@165 ($generated@@420 $generated@@802) ($generated@@309 $generated@@803)) ($generated@@165 ($generated@@475 $generated@@802) ($generated@@309 $generated@@804))) ($generated@@165 ($generated@@512 $generated@@802) ($generated@@309 ($generated@@185 $generated@@803 $generated@@804)))))
 :pattern ( ($generated@@165 $generated@@802 ($generated@@538 $generated@@803 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@806) $generated@@75)) (= (type $generated@@807) $generated@@75)) ($generated@@165 $generated@@805 ($generated@@546 $generated@@806 $generated@@807))) (and (and ($generated@@165 ($generated@@438 $generated@@805) ($generated@@314 $generated@@806)) ($generated@@165 ($generated@@486 $generated@@805) ($generated@@314 $generated@@807))) ($generated@@165 ($generated@@520 $generated@@805) ($generated@@314 ($generated@@185 $generated@@806 $generated@@807)))))
 :pattern ( ($generated@@165 $generated@@805 ($generated@@546 $generated@@806 $generated@@807)))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) $generated@@2) ($generated@@165 $generated@@808 $generated@@46))
 :pattern ( ($generated@@165 $generated@@808 $generated@@46))
)))
(assert (forall (($generated@@809 T@U) ) (!  (=> (= (type $generated@@809) $generated@@3) ($generated@@165 $generated@@809 $generated@@47))
 :pattern ( ($generated@@165 $generated@@809 $generated@@47))
)))
(assert (forall (($generated@@810 T@U) ) (!  (=> (= (type $generated@@810) $generated@@4) ($generated@@165 $generated@@810 $generated@@44))
 :pattern ( ($generated@@165 $generated@@810 $generated@@44))
)))
(assert (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@584) ($generated@@165 $generated@@811 $generated@@45))
 :pattern ( ($generated@@165 $generated@@811 $generated@@45))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@195) ($generated@@165 $generated@@812 $generated@@48))
 :pattern ( ($generated@@165 $generated@@812 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () Int)
(declare-fun $generated@@816 () Int)
(declare-fun $generated@@817 () Int)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 (T@U) Bool)
(declare-fun $generated@@822 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@813) $generated@@75) (= (type $generated@@814) $generated@@88)) (= (type $generated@@818) $generated@@146)) (= (type $generated@@819) ($generated@@207 $generated@@88 $generated@@4))) (= (type $generated@@820) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@822) $generated@@146)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@823  (=> (not (= ($generated@@364 $generated@@813 $generated@@814) ($generated@@319 17))) (and (=> (= (ControlFlow 0 9) (- 0 12)) (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157))) (=> (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157)) (and (=> (= (ControlFlow 0 9) (- 0 11)) ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162)) (=> ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162) (=> (= $generated@@816 (- $generated@@815 1)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (<= 0 $generated@@815) (= $generated@@816 $generated@@815))) (=> (or (<= 0 $generated@@815) (= $generated@@816 $generated@@815)) (=> (= (ControlFlow 0 9) (- 0 8)) (< $generated@@816 $generated@@815))))))))))))
(let (($generated@@824  (=> (= ($generated@@364 $generated@@813 $generated@@814) ($generated@@319 17)) (and (=> (= (ControlFlow 0 3) (- 0 7)) (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157))) (=> (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162)) (=> ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162) (=> (= $generated@@817 (- $generated@@815 1)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= 1 $generated@@363))) (=> (not (= 1 $generated@@363)) (=> (= $generated@@818 ($generated@@144 $generated@@813 $generated@@814)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@815) (= $generated@@817 $generated@@815))) (=> (or (<= 0 $generated@@815) (= $generated@@817 $generated@@815)) (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@817 $generated@@815)))))))))))))))
(let (($generated@@825  (=> (not (or (= $generated@@815 ($generated@@319 0)) (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157))) (and (=> (= (ControlFlow 0 13) 3) $generated@@824) (=> (= (ControlFlow 0 13) 9) $generated@@823)))))
(let (($generated@@826 true))
(let (($generated@@827  (and (=> (= (ControlFlow 0 14) 1) $generated@@826) (=> (= (ControlFlow 0 14) 13) $generated@@825))))
(let (($generated@@828  (=> (and (= $generated@@815 ($generated@@319 0)) (= (ControlFlow 0 16) 14)) $generated@@827)))
(let (($generated@@829  (=> (and (not (= $generated@@815 ($generated@@319 0))) (= (ControlFlow 0 15) 14)) $generated@@827)))
(let (($generated@@830  (=> (= $generated@@819 ($generated@@206 $generated@@157 $generated@@820 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@829) (=> (= (ControlFlow 0 17) 16) $generated@@828)))))
(let (($generated@@831  (=> (and ($generated@@269 $generated@@820) ($generated@@821 $generated@@820)) (=> (and (and (and (not (= $generated@@814 $generated@@157)) (and ($generated@@165 $generated@@814 ($generated@@179 $generated@@813)) ($generated@@85 $generated@@814 ($generated@@179 $generated@@813) $generated@@820))) (<= ($generated@@319 0) $generated@@815)) (and (and ($generated@@165 $generated@@822 ($generated@@174 $generated@@46)) ($generated@@85 $generated@@822 ($generated@@174 $generated@@46) $generated@@820)) (and (= 2 $generated@@363) (= (ControlFlow 0 18) 17)))) $generated@@830))))
$generated@@831))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 (T@U T@U T@U Int Int) Int)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U T@U Int Int) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (Int) Int)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U Int Int) Int)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 () T@T)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@209 (T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@T T@U T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@308 (Int Int) Bool)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@339 (T@U) Int)
(declare-fun $generated@@340 (T@T) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@381 (T@U T@U) Bool)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@473 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@U T@U) T@U)
(declare-fun $generated@@489 (Int Int) Int)
(declare-fun $generated@@490 (Int Int) Bool)
(declare-fun $generated@@498 (T@T) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 () T@T)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@570 (T@U Int) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@608 (T@U) Int)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@643 (T@U) T@U)
(declare-fun $generated@@704 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@63) $generated@@78)) (= (type $generated@@64) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@77)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 16) (= (type $generated@@151) $generated@@91)) (= (type $generated@@153) $generated@@73)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ($generated@@159 Int) ) (!  (=> (and (and (and (= (type $generated@@155) $generated@@148) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@157) $generated@@91)) (or ($generated@@149 $generated@@156 $generated@@157 $generated@@158 $generated@@159) (and (not (= 1 $generated@@146)) (and (and (and ($generated@@150 $generated@@156) (and (not (= $generated@@157 $generated@@151)) (and ($generated@@152 $generated@@157 $generated@@153) ($generated@@88 $generated@@157 $generated@@153 $generated@@156)))) (<= ($generated@@154 0) $generated@@158)) (<= ($generated@@154 0) $generated@@159))))) (<= ($generated@@154 0) ($generated@@147 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@147 $generated@@155 $generated@@156 $generated@@157 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@162) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@160 $generated@@161 $generated@@162)) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@161 $generated@@163) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@60))
)))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@148)
 :pattern ( ($generated@@165 $generated@@167))
)) (= (type $generated@@166) $generated@@148)))
(assert (forall (($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 Int) ) (!  (=> (= (type $generated@@168) $generated@@148) (= ($generated@@164 $generated@@168 $generated@@169 $generated@@170) ($generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (= (type $generated@@171) $generated@@73))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@2) (= (type $generated@@173) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@172 $generated@@171 $generated@@173))
 :pattern ( ($generated@@88 $generated@@172 $generated@@171 $generated@@173))
)))
(assert (= (type $generated@@174) $generated@@73))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@175) $generated@@91) (= (type $generated@@176) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@175 $generated@@174 $generated@@176)  (or (= $generated@@175 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@176 $generated@@175) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@175 $generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@2) ($generated@@152 $generated@@177 ($generated@@89 0)))
 :pattern ( ($generated@@152 $generated@@177 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@180) 17) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= (type ($generated@@179 $generated@@181 $generated@@182)) $generated@@73)
 :pattern ( ($generated@@179 $generated@@181 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (and (= (type $generated@@183) $generated@@73) (= (type $generated@@184) $generated@@73)) (= (type $generated@@185) $generated@@180)) ($generated@@152 $generated@@185 ($generated@@179 $generated@@183 $generated@@184))) ($generated@@178 $generated@@185))
 :pattern ( ($generated@@178 $generated@@185) ($generated@@152 $generated@@185 ($generated@@179 $generated@@183 $generated@@184)))
)))
(assert  (and (and (= ($generated@@1 $generated@@189) 18) (forall (($generated@@190 T@U) ) (! (= (type ($generated@@187 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@187 $generated@@190))
))) (forall (($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@191)) $generated@@189)
 :pattern ( ($generated@@188 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) $generated@@180) (= (type $generated@@193) $generated@@180)) true) (= ($generated@@186 $generated@@192 $generated@@193)  (and (= ($generated@@187 $generated@@192) ($generated@@187 $generated@@193)) (= ($generated@@188 $generated@@192) ($generated@@188 $generated@@193)))))
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@194 $generated@@195)) $generated@@148)
 :pattern ( ($generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 Int) ) (!  (=> (and (and (= (type $generated@@196) $generated@@148) (= (type $generated@@197) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@198) $generated@@91)) (= ($generated@@147 ($generated@@194 $generated@@196) $generated@@197 $generated@@198 $generated@@199 $generated@@200) ($generated@@147 $generated@@196 $generated@@197 $generated@@198 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@147 ($generated@@194 $generated@@196) $generated@@197 $generated@@198 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@73)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@90 $generated@@189 $generated@@2)) (= (type $generated@@205) $generated@@73)) ($generated@@152 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@152 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@206 $generated@@207)) $generated@@73)
 :pattern ( ($generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ) (!  (=> (= (type $generated@@208) $generated@@91) (= ($generated@@152 $generated@@208 $generated@@174)  (or (= $generated@@208 $generated@@151) (= ($generated@@206 $generated@@208) $generated@@174))))
 :pattern ( ($generated@@152 $generated@@208 $generated@@174))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@215 $generated@@216)) 19)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@211 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@211 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@213 (type $generated@@221))))
(= (type ($generated@@209 $generated@@221 $generated@@222 $generated@@223)) $generated@@224))
 :pattern ( ($generated@@209 $generated@@221 $generated@@222 $generated@@223))
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 (type $generated@@228)))
(let (($generated@@230 (type $generated@@226)))
(= (type ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@211 $generated@@230 $generated@@229))))
 :pattern ( ($generated@@214 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@213 (type $generated@@231))))
 (=> (= (type $generated@@234) $generated@@235) (= ($generated@@209 ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@232 $generated@@233) $generated@@234)))
 :weight 0
))) (and (and (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@209 ($generated@@214 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@209 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@209 ($generated@@214 $generated@@243 $generated@@244 $generated@@245 $generated@@242) $generated@@246 $generated@@247) ($generated@@209 $generated@@243 $generated@@246 $generated@@247)))
 :weight 0
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (or true (= ($generated@@209 ($generated@@214 $generated@@249 $generated@@250 $generated@@251 $generated@@248) $generated@@252 $generated@@253) ($generated@@209 $generated@@249 $generated@@252 $generated@@253)))
 :weight 0
)))) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ) (! (= (type ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257)) ($generated@@211 $generated@@91 $generated@@4))
 :pattern ( ($generated@@210 $generated@@254 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@76 (type $generated@@263))))
 (=> (and (and (and (and (= (type $generated@@258) $generated@@91) (= (type $generated@@259) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@260) ($generated@@75 $generated@@4))) (= (type $generated@@262) $generated@@91)) (= (type $generated@@263) ($generated@@75 $generated@@264))) (= ($generated@@0 ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (not (= $generated@@262 $generated@@258)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@259 $generated@@262) $generated@@260))) $generated@@261))))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@91) (= (type $generated@@266) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@265 $generated@@153 $generated@@266) ($generated@@88 $generated@@265 $generated@@174 $generated@@266)))
 :pattern ( ($generated@@88 $generated@@265 $generated@@153 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@180)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@73) (= (type $generated@@272) $generated@@73)) (= (type $generated@@273) $generated@@189)) (= (type $generated@@274) $generated@@189)) (= ($generated@@152 ($generated@@267 $generated@@273 $generated@@274) ($generated@@179 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@152 ($generated@@267 $generated@@273 $generated@@274) ($generated@@179 $generated@@271 $generated@@272)))
)))
(assert (= (type $generated@@275) ($generated@@75 $generated@@2)))
(assert (= ($generated@@83 $generated@@275) 0))
(assert (forall (($generated@@277 T@T) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@277 $generated@@278 $generated@@279)) ($generated@@75 $generated@@277))
 :pattern ( ($generated@@276 $generated@@277 $generated@@278 $generated@@279))
)))
(assert (= ($generated@@276 $generated@@2 $generated@@65 $generated@@71) $generated@@275))
(assert  (not ($generated@@280 $generated@@275)))
(assert (= (type $generated@@281) ($generated@@75 $generated@@91)))
(assert (= ($generated@@83 $generated@@281) 0))
(assert (= ($generated@@276 $generated@@91 $generated@@65 $generated@@72) $generated@@281))
(assert  (not ($generated@@280 $generated@@281)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@180) (= (type $generated@@283) $generated@@180)) (= ($generated@@186 $generated@@282 $generated@@283) (= $generated@@282 $generated@@283)))
 :pattern ( ($generated@@186 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@73)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@90 $generated@@189 $generated@@4)) (= (type $generated@@287) $generated@@73)) (= ($generated@@152 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@189) ($generated@@0 ($generated@@95 $generated@@286 $generated@@288))) ($generated@@268 $generated@@288 $generated@@287))
 :pattern ( ($generated@@95 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@152 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@73)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@90 $generated@@189 $generated@@4)) (= (type $generated@@292) $generated@@73)) (= ($generated@@152 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@189) ($generated@@0 ($generated@@95 $generated@@291 $generated@@293))) ($generated@@268 $generated@@293 $generated@@292))
 :pattern ( ($generated@@95 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@152 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@294 Int) ) (! (= ($generated@@154 $generated@@294) $generated@@294)
 :pattern ( ($generated@@154 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 (type $generated@@296)))
(= (type ($generated@@295 $generated@@296)) $generated@@297))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= ($generated@@295 $generated@@298) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@73) (= (type $generated@@301) $generated@@73)) (= (type $generated@@302) $generated@@189)) (= (type $generated@@303) $generated@@189)) (= (type $generated@@304) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@150 $generated@@304)) (= ($generated@@88 ($generated@@267 $generated@@302 $generated@@303) ($generated@@179 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@88 ($generated@@267 $generated@@302 $generated@@303) ($generated@@179 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@78)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@180) (= ($generated@@178 $generated@@307) (= ($generated@@305 $generated@@307) $generated@@63)))
 :pattern ( ($generated@@178 $generated@@307))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@309 T@U) ($generated@@310 Int) ($generated@@311 Int) ) (!  (=> (and (= (type $generated@@309) $generated@@148) (or ($generated@@308 $generated@@310 $generated@@311) (and (not (= 1 $generated@@146)) (and (<= ($generated@@154 0) $generated@@310) (<= ($generated@@154 0) $generated@@311))))) (and (=> (not (= $generated@@310 ($generated@@154 0))) (let (($generated@@312 (+ $generated@@310 $generated@@311)))
($generated@@308 (- (+ (+ (- $generated@@310 1) $generated@@310) $generated@@311) $generated@@312) (- (+ (+ (+ $generated@@311 1) $generated@@310) $generated@@311) $generated@@312)))) (= ($generated@@164 ($generated@@194 $generated@@309) $generated@@310 $generated@@311) (ite (= $generated@@310 ($generated@@154 0)) $generated@@311 (let (($generated@@313 (+ $generated@@310 $generated@@311)))
($generated@@164 $generated@@309 (- (+ (+ (- $generated@@310 1) $generated@@310) $generated@@311) $generated@@313) (- (+ (+ (+ $generated@@311 1) $generated@@310) $generated@@311) $generated@@313)))))))
 :pattern ( ($generated@@164 ($generated@@194 $generated@@309) $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@180) ($generated@@178 $generated@@314)) (exists (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (and (and (= (type $generated@@315) $generated@@189) (= (type $generated@@316) $generated@@189)) (= $generated@@314 ($generated@@267 $generated@@315 $generated@@316)))
 :no-pattern (type $generated@@315)
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
)))
 :pattern ( ($generated@@178 $generated@@314))
)))
(assert  (and (and (forall (($generated@@321 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@321)) 20)) (forall (($generated@@322 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@319 $generated@@322))
))) (forall (($generated@@323 T@T) ) (! (= (type ($generated@@317 $generated@@323)) ($generated@@319 $generated@@323))
 :pattern ( ($generated@@317 $generated@@323))
))))
(assert (forall (($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@324)) 0)
 :pattern ( ($generated@@317 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@2) (= ($generated@@152 $generated@@325 $generated@@171) (<= ($generated@@154 0) ($generated $generated@@325))))
 :pattern ( ($generated@@152 $generated@@325 $generated@@171))
)))
(assert ($generated@@280 $generated@@60))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@189)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@73) (= (type $generated@@330) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@299 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@88 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@299 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@331) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@332) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@333) $generated@@189)) (= (type $generated@@334) $generated@@73)) ($generated@@160 $generated@@331 $generated@@332)) ($generated@@299 $generated@@333 $generated@@334 $generated@@331)) ($generated@@299 $generated@@333 $generated@@334 $generated@@332))
 :pattern ( ($generated@@160 $generated@@331 $generated@@332) ($generated@@299 $generated@@333 $generated@@334 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@335) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@336) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@338) $generated@@73)) ($generated@@160 $generated@@335 $generated@@336)) ($generated@@88 $generated@@337 $generated@@338 $generated@@335)) ($generated@@88 $generated@@337 $generated@@338 $generated@@336))
 :pattern ( ($generated@@160 $generated@@335 $generated@@336) ($generated@@88 $generated@@337 $generated@@338 $generated@@335))
)))
(assert (forall (($generated@@341 T@T) ) (! (= (type ($generated@@340 $generated@@341)) ($generated@@90 $generated@@341 $generated@@2))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@93 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@90 $generated@@343 $generated@@2)) (and (= (= ($generated@@339 $generated@@342) 0) (= $generated@@342 ($generated@@340 $generated@@343))) (=> (not (= ($generated@@339 $generated@@342) 0)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) (< 0 ($generated ($generated@@95 $generated@@342 $generated@@344))))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 21)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@90 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@95 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@95 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 22)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@90 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@95 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@95 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@383) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@381 $generated@@382 $generated@@383)) (and ($generated@@160 $generated@@382 $generated@@383) (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@76 (type $generated@@385))))
 (=> (and (and (= (type $generated@@384) $generated@@91) (= (type $generated@@385) ($generated@@75 $generated@@386))) (not ($generated@@280 $generated@@385))) (= ($generated@@97 ($generated@@95 $generated@@382 $generated@@384) $generated@@385) ($generated@@97 ($generated@@95 $generated@@383 $generated@@384) $generated@@385))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@383 $generated@@384) $generated@@385))
))))
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@93 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@90 $generated@@388 $generated@@2)) (= ($generated@@202 $generated@@387) (forall (($generated@@389 T@U) ) (!  (=> (= (type $generated@@389) $generated@@388) (and (<= 0 ($generated ($generated@@95 $generated@@387 $generated@@389))) (<= ($generated ($generated@@95 $generated@@387 $generated@@389)) ($generated@@339 $generated@@387))))
 :pattern ( ($generated@@95 $generated@@387 $generated@@389))
)))))
 :pattern ( ($generated@@202 $generated@@387))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@390 T@U) ($generated@@391 Int) ($generated@@392 Int) ) (!  (=> (and (= (type $generated@@390) $generated@@148) (or ($generated@@308 $generated@@391 $generated@@392) (and (not (= 1 $generated@@146)) (and (<= ($generated@@154 0) $generated@@391) (<= ($generated@@154 0) $generated@@392))))) (<= ($generated@@154 0) ($generated@@164 $generated@@390 $generated@@391 $generated@@392)))
 :pattern ( ($generated@@164 $generated@@390 $generated@@391 $generated@@392))
))))
(assert (forall (($generated@@394 T@T) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@394)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@189) ($generated@@268 $generated@@396 $generated@@171)) (and (= ($generated@@326 ($generated@@393 $generated@@2 $generated@@396)) $generated@@396) ($generated@@152 ($generated@@393 $generated@@2 $generated@@396) $generated@@171)))
 :pattern ( ($generated@@268 $generated@@396 $generated@@171))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@189) ($generated@@268 $generated@@397 $generated@@174)) (and (= ($generated@@326 ($generated@@393 $generated@@91 $generated@@397)) $generated@@397) ($generated@@152 ($generated@@393 $generated@@91 $generated@@397) $generated@@174)))
 :pattern ( ($generated@@268 $generated@@397 $generated@@174))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@189) ($generated@@268 $generated@@398 $generated@@153)) (and (= ($generated@@326 ($generated@@393 $generated@@91 $generated@@398)) $generated@@398) ($generated@@152 ($generated@@393 $generated@@91 $generated@@398) $generated@@153)))
 :pattern ( ($generated@@268 $generated@@398 $generated@@153))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@91) (= ($generated@@152 $generated@@399 $generated@@153)  (and ($generated@@152 $generated@@399 $generated@@174) (not (= $generated@@399 $generated@@151)))))
 :pattern ( ($generated@@152 $generated@@399 $generated@@153))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@349 (type $generated@@400))))
(let (($generated@@402 ($generated@@348 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@347 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@346 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@345 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@349 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@90 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@349 (type $generated@@407))))
(let (($generated@@409 ($generated@@348 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@347 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@346 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@95 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@367 (type $generated@@411))))
(let (($generated@@413 ($generated@@366 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@365 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@364 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@363 $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@367 (type $generated@@416))))
(= (type ($generated@@415 $generated@@416)) ($generated@@90 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@367 (type $generated@@418))))
(let (($generated@@420 ($generated@@366 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@365 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@364 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@419) ($generated@@0 ($generated@@95 ($generated@@415 $generated@@418) $generated@@421)))
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@415 $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 Int) ($generated@@424 Int) ) (!  (=> (= (type $generated@@422) $generated@@148) (= ($generated@@164 ($generated@@194 $generated@@422) $generated@@423 $generated@@424) ($generated@@164 $generated@@422 $generated@@423 $generated@@424)))
 :pattern ( ($generated@@164 ($generated@@194 $generated@@422) $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@90 $generated@@189 $generated@@2)) (= (type $generated@@426) $generated@@73)) (= ($generated@@152 $generated@@425 ($generated@@201 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@189) (< 0 ($generated ($generated@@95 $generated@@425 $generated@@427)))) ($generated@@268 $generated@@427 $generated@@426))
 :pattern ( ($generated@@95 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@152 $generated@@425 ($generated@@201 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@429) $generated@@91)) (=> (and (and ($generated@@150 $generated@@428) (and (not (= $generated@@429 $generated@@151)) (= ($generated@@206 $generated@@429) $generated@@174))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@428 $generated@@429) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@428 $generated@@429) $generated@@275) $generated@@171 $generated@@428)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@428 $generated@@429) $generated@@275))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@431) $generated@@91)) (=> (and (and ($generated@@150 $generated@@430) (and (not (= $generated@@431 $generated@@151)) (= ($generated@@206 $generated@@431) $generated@@174))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@430 $generated@@431) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@430 $generated@@431) $generated@@281) $generated@@153 $generated@@430)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@430 $generated@@431) $generated@@281))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 Int) ($generated@@436 Int) ) (!  (=> (and (and (= (type $generated@@432) $generated@@148) (= (type $generated@@433) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@434) $generated@@91)) (= ($generated@@147 $generated@@432 $generated@@433 $generated@@434 $generated@@435 $generated@@436) ($generated@@147 $generated@@166 $generated@@433 $generated@@434 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@147 ($generated@@165 $generated@@432) $generated@@433 $generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) ($generated@@90 $generated@@189 $generated@@4)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@437 ($generated@@284 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@189) ($generated@@0 ($generated@@95 $generated@@437 $generated@@440))) ($generated@@299 $generated@@440 $generated@@438 $generated@@439))
 :pattern ( ($generated@@95 $generated@@437 $generated@@440))
))))
 :pattern ( ($generated@@88 $generated@@437 ($generated@@284 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (= (type $generated@@441) ($generated@@90 $generated@@189 $generated@@4)) (= (type $generated@@442) $generated@@73)) (= (type $generated@@443) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@441 ($generated@@289 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@189) ($generated@@0 ($generated@@95 $generated@@441 $generated@@444))) ($generated@@299 $generated@@444 $generated@@442 $generated@@443))
 :pattern ( ($generated@@95 $generated@@441 $generated@@444))
))))
 :pattern ( ($generated@@88 $generated@@441 ($generated@@289 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(= ($generated ($generated@@95 ($generated@@340 $generated@@446) $generated@@445)) 0))
 :pattern ( (let (($generated@@446 (type $generated@@445)))
($generated@@95 ($generated@@340 $generated@@446) $generated@@445)))
)))
(assert  (and (forall (($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@449)) ($generated@@90 $generated@@189 $generated@@4))
 :pattern ( ($generated@@447 $generated@@449))
)) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@349 (type $generated@@450))))
(let (($generated@@452 ($generated@@348 (type $generated@@450))))
(= (type ($generated@@448 $generated@@450)) ($generated@@90 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@448 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@347 $generated@@189 $generated@@189)) (= (type $generated@@454) $generated@@189)) (= ($generated@@0 ($generated@@95 ($generated@@447 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@95 ($generated@@345 $generated@@453) ($generated@@187 ($generated@@393 $generated@@180 $generated@@454)))) (= ($generated@@95 ($generated@@448 $generated@@453) ($generated@@187 ($generated@@393 $generated@@180 $generated@@454))) ($generated@@188 ($generated@@393 $generated@@180 $generated@@454))))))
 :pattern ( ($generated@@95 ($generated@@447 $generated@@453) $generated@@454))
)))
(assert  (and (forall (($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@457)) ($generated@@90 $generated@@189 $generated@@4))
 :pattern ( ($generated@@455 $generated@@457))
)) (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@367 (type $generated@@458))))
(let (($generated@@460 ($generated@@366 (type $generated@@458))))
(= (type ($generated@@456 $generated@@458)) ($generated@@90 $generated@@460 $generated@@459))))
 :pattern ( ($generated@@456 $generated@@458))
))))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) ($generated@@365 $generated@@189 $generated@@189)) (= (type $generated@@462) $generated@@189)) (= ($generated@@0 ($generated@@95 ($generated@@455 $generated@@461) $generated@@462))  (and ($generated@@0 ($generated@@95 ($generated@@363 $generated@@461) ($generated@@187 ($generated@@393 $generated@@180 $generated@@462)))) (= ($generated@@95 ($generated@@456 $generated@@461) ($generated@@187 ($generated@@393 $generated@@180 $generated@@462))) ($generated@@188 ($generated@@393 $generated@@180 $generated@@462))))))
 :pattern ( ($generated@@95 ($generated@@455 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@464)))
(let (($generated@@466 ($generated@@348 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@347 $generated@@466 $generated@@465)) (= ($generated@@0 ($generated@@95 ($generated@@404 $generated@@463) $generated@@464)) (exists (($generated@@467 T@U) ) (!  (and (= (type $generated@@467) $generated@@466) (and ($generated@@0 ($generated@@95 ($generated@@345 $generated@@463) $generated@@467)) (= $generated@@464 ($generated@@95 ($generated@@448 $generated@@463) $generated@@467))))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@463) $generated@@467))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@463) $generated@@467))
))))))
 :pattern ( ($generated@@95 ($generated@@404 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
(let (($generated@@471 ($generated@@366 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@365 $generated@@471 $generated@@470)) (= ($generated@@0 ($generated@@95 ($generated@@415 $generated@@468) $generated@@469)) (exists (($generated@@472 T@U) ) (!  (and (= (type $generated@@472) $generated@@471) (and ($generated@@0 ($generated@@95 ($generated@@363 $generated@@468) $generated@@472)) (= $generated@@469 ($generated@@95 ($generated@@456 $generated@@468) $generated@@472))))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@468) $generated@@472))
 :pattern ( ($generated@@95 ($generated@@456 $generated@@468) $generated@@472))
))))))
 :pattern ( ($generated@@95 ($generated@@415 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@73)
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (and (= (type $generated@@476) ($generated@@347 $generated@@189 $generated@@189)) (= (type $generated@@477) $generated@@73)) (= (type $generated@@478) $generated@@73)) (= (type $generated@@479) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479) (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@189) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@476) $generated@@480))) (and ($generated@@299 ($generated@@95 ($generated@@448 $generated@@476) $generated@@480) $generated@@478 $generated@@479) ($generated@@299 $generated@@480 $generated@@477 $generated@@479)))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@476) $generated@@480))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@476) $generated@@480))
))))
 :pattern ( ($generated@@88 $generated@@476 ($generated@@473 $generated@@477 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@482 $generated@@483)) $generated@@73)
 :pattern ( ($generated@@481 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (and (= (type $generated@@484) ($generated@@365 $generated@@189 $generated@@189)) (= (type $generated@@485) $generated@@73)) (= (type $generated@@486) $generated@@73)) (= (type $generated@@487) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487) (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@189) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@484) $generated@@488))) (and ($generated@@299 ($generated@@95 ($generated@@456 $generated@@484) $generated@@488) $generated@@486 $generated@@487) ($generated@@299 $generated@@488 $generated@@485 $generated@@487)))
 :pattern ( ($generated@@95 ($generated@@456 $generated@@484) $generated@@488))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@484) $generated@@488))
))))
 :pattern ( ($generated@@88 $generated@@484 ($generated@@481 $generated@@485 $generated@@486) $generated@@487))
)))
(assert  (=> (<= 0 $generated@@146) (forall (($generated@@491 Int) ($generated@@492 Int) ) (!  (=> (or ($generated@@490 ($generated@@154 $generated@@491) ($generated@@154 $generated@@492)) (not (= 0 $generated@@146))) (= ($generated@@489 ($generated@@154 $generated@@491) ($generated@@154 $generated@@492)) ($generated@@154 (+ $generated@@491 $generated@@492))))
 :weight 3
 :pattern ( ($generated@@489 ($generated@@154 $generated@@491) ($generated@@154 $generated@@492)))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@493) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@494) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@495) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@493 $generated@@495))) (and ($generated@@160 $generated@@493 $generated@@494) ($generated@@160 $generated@@494 $generated@@495))) ($generated@@160 $generated@@493 $generated@@495))
 :pattern ( ($generated@@160 $generated@@493 $generated@@494) ($generated@@160 $generated@@494 $generated@@495))
)))
(assert  (=> (<= 0 $generated@@146) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@490 $generated@@496 $generated@@497) (not (= 0 $generated@@146))) true)
 :pattern ( ($generated@@489 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@T) ) (! (= (type ($generated@@498 $generated@@499)) ($generated@@90 $generated@@499 $generated@@4))
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@367 (type $generated@@500))))
(let (($generated@@502 ($generated@@366 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@365 $generated@@502 $generated@@501)) (= (= $generated@@500 ($generated@@364 $generated@@502 $generated@@501)) (= ($generated@@363 $generated@@500) ($generated@@498 $generated@@502))))))
 :pattern ( ($generated@@363 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@367 (type $generated@@503))))
(let (($generated@@505 ($generated@@366 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@365 $generated@@505 $generated@@504)) (= (= $generated@@503 ($generated@@364 $generated@@505 $generated@@504)) (= ($generated@@415 $generated@@503) ($generated@@498 $generated@@504))))))
 :pattern ( ($generated@@415 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@367 (type $generated@@506))))
(let (($generated@@508 ($generated@@366 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@365 $generated@@508 $generated@@507)) (= (= $generated@@506 ($generated@@364 $generated@@508 $generated@@507)) (= ($generated@@455 $generated@@506) ($generated@@498 $generated@@189))))))
 :pattern ( ($generated@@455 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@349 (type $generated@@509))))
(let (($generated@@511 ($generated@@348 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@347 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@346 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@189) (= (type $generated@@513) $generated@@189)) ($generated@@0 ($generated@@95 ($generated@@447 $generated@@509) ($generated@@326 ($generated@@267 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@447 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@367 (type $generated@@514))))
(let (($generated@@516 ($generated@@366 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@365 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@364 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@189) (= (type $generated@@518) $generated@@189)) ($generated@@0 ($generated@@95 ($generated@@455 $generated@@514) ($generated@@326 ($generated@@267 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@455 $generated@@514))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@79)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@T) ) (!  (=> (and (= (type $generated@@521) $generated@@79) (= (type $generated@@522) $generated@@77)) (and (= ($generated@@519 ($generated@@276 $generated@@523 $generated@@521 $generated@@522)) $generated@@521) (= ($generated@@86 ($generated@@276 $generated@@523 $generated@@521 $generated@@522)) $generated@@522)))
 :pattern ( ($generated@@276 $generated@@523 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@189) ($generated@@268 $generated@@524 $generated@@46)) (and (= ($generated@@326 ($generated@@393 $generated@@2 $generated@@524)) $generated@@524) ($generated@@152 ($generated@@393 $generated@@2 $generated@@524) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@524 $generated@@46))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@189) ($generated@@268 $generated@@525 $generated@@47)) (and (= ($generated@@326 ($generated@@393 $generated@@3 $generated@@525)) $generated@@525) ($generated@@152 ($generated@@393 $generated@@3 $generated@@525) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@525 $generated@@47))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@189) ($generated@@268 $generated@@526 $generated@@44)) (and (= ($generated@@326 ($generated@@393 $generated@@4 $generated@@526)) $generated@@526) ($generated@@152 ($generated@@393 $generated@@4 $generated@@526) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@526 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@527) 23))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@189) ($generated@@268 $generated@@528 $generated@@45)) (and (= ($generated@@326 ($generated@@393 $generated@@527 $generated@@528)) $generated@@528) ($generated@@152 ($generated@@393 $generated@@527 $generated@@528) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@528 $generated@@45))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@73) (= ($generated@@268 ($generated@@326 $generated@@529) $generated@@530) ($generated@@152 $generated@@529 $generated@@530)))
 :pattern ( ($generated@@268 ($generated@@326 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@93 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@90 $generated@@532 $generated@@2)) (<= 0 ($generated@@339 $generated@@531))))
 :pattern ( ($generated@@339 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@320 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@319 $generated@@534)) (<= 0 ($generated@@318 $generated@@533))))
 :pattern ( ($generated@@318 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@73)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@73) (= (type $generated@@538) $generated@@73)) (= ($generated@@535 ($generated@@473 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@473 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@73)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@73) (= (type $generated@@542) $generated@@73)) (= ($generated@@539 ($generated@@473 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@473 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@73) (= (type $generated@@544) $generated@@73)) (= ($generated@@84 ($generated@@473 $generated@@543 $generated@@544)) $generated@@58))
 :pattern ( ($generated@@473 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@73)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@73) (= (type $generated@@548) $generated@@73)) (= ($generated@@545 ($generated@@481 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@481 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@73)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@73) (= (type $generated@@552) $generated@@73)) (= ($generated@@549 ($generated@@481 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@481 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@73) (= (type $generated@@554) $generated@@73)) (= ($generated@@84 ($generated@@481 $generated@@553 $generated@@554)) $generated@@59))
 :pattern ( ($generated@@481 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@189) (= (type $generated@@556) $generated@@189)) (= ($generated@@305 ($generated@@267 $generated@@555 $generated@@556)) $generated@@63))
 :pattern ( ($generated@@267 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@73)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@73) (= (type $generated@@560) $generated@@73)) (= ($generated@@557 ($generated@@179 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@179 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@73)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@73) (= (type $generated@@564) $generated@@73)) (= ($generated@@561 ($generated@@179 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@179 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@189) (= (type $generated@@566) $generated@@189)) (= ($generated@@187 ($generated@@267 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@267 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@189) (= (type $generated@@568) $generated@@189)) (= ($generated@@188 ($generated@@267 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@267 $generated@@567 $generated@@568))
)))
(assert  (and (forall (($generated@@571 T@U) ) (! (= (type ($generated@@569 $generated@@571)) $generated@@73)
 :pattern ( ($generated@@569 $generated@@571))
)) (forall (($generated@@572 T@U) ($generated@@573 Int) ) (! (let (($generated@@574 ($generated@@320 (type $generated@@572))))
(= (type ($generated@@570 $generated@@572 $generated@@573)) $generated@@574))
 :pattern ( ($generated@@570 $generated@@572 $generated@@573))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@319 $generated@@189)) (= (type $generated@@576) $generated@@73)) (= (type $generated@@577) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@575 ($generated@@569 $generated@@576) $generated@@577) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@318 $generated@@575))) ($generated@@299 ($generated@@570 $generated@@575 $generated@@578) $generated@@576 $generated@@577))
 :pattern ( ($generated@@570 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@88 $generated@@575 ($generated@@569 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@579 ($generated@@89 $generated@@580)) $generated@@580)
 :pattern ( ($generated@@89 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@73)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@73) (= ($generated@@581 ($generated@@284 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@284 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@73) (= ($generated@@84 ($generated@@284 $generated@@584)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@73)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@73) (= ($generated@@585 ($generated@@289 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@289 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@73) (= ($generated@@84 ($generated@@289 $generated@@588)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@73)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@73) (= ($generated@@589 ($generated@@201 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@201 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@73) (= ($generated@@84 ($generated@@201 $generated@@592)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@73)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@73) (= ($generated@@593 ($generated@@569 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@569 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@73) (= ($generated@@84 ($generated@@569 $generated@@596)) $generated@@57))
 :pattern ( ($generated@@569 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@597)))
(= ($generated@@393 $generated@@598 ($generated@@326 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@326 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@347 $generated@@189 $generated@@189)) (= (type $generated@@600) $generated@@73)) (= (type $generated@@601) $generated@@73)) (= ($generated@@152 $generated@@599 ($generated@@473 $generated@@600 $generated@@601)) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@189) ($generated@@0 ($generated@@95 ($generated@@345 $generated@@599) $generated@@602))) (and ($generated@@268 ($generated@@95 ($generated@@448 $generated@@599) $generated@@602) $generated@@601) ($generated@@268 $generated@@602 $generated@@600)))
 :pattern ( ($generated@@95 ($generated@@448 $generated@@599) $generated@@602))
 :pattern ( ($generated@@95 ($generated@@345 $generated@@599) $generated@@602))
))))
 :pattern ( ($generated@@152 $generated@@599 ($generated@@473 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@365 $generated@@189 $generated@@189)) (= (type $generated@@604) $generated@@73)) (= (type $generated@@605) $generated@@73)) (= ($generated@@152 $generated@@603 ($generated@@481 $generated@@604 $generated@@605)) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@189) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@603) $generated@@606))) (and ($generated@@268 ($generated@@95 ($generated@@456 $generated@@603) $generated@@606) $generated@@605) ($generated@@268 $generated@@606 $generated@@604)))
 :pattern ( ($generated@@95 ($generated@@456 $generated@@603) $generated@@606))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@603) $generated@@606))
))))
 :pattern ( ($generated@@152 $generated@@603 ($generated@@481 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@189) (= (type $generated@@610) $generated@@189)) (< ($generated@@607 $generated@@609) ($generated@@608 ($generated@@267 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@267 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@189) (= (type $generated@@612) $generated@@189)) (< ($generated@@607 $generated@@612) ($generated@@608 ($generated@@267 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@267 $generated@@611 $generated@@612))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@613 T@U) ($generated@@614 Int) ($generated@@615 Int) ) (!  (=> (and (= (type $generated@@613) $generated@@148) (or ($generated@@308 ($generated@@154 $generated@@614) ($generated@@154 $generated@@615)) (and (not (= 1 $generated@@146)) (and (<= ($generated@@154 0) $generated@@614) (<= ($generated@@154 0) $generated@@615))))) (and (=> (not (= ($generated@@154 $generated@@614) ($generated@@154 0))) (let (($generated@@616 ($generated@@154 (+ $generated@@614 $generated@@615))))
($generated@@308 (- (+ (+ (- $generated@@614 1) $generated@@614) $generated@@615) $generated@@616) (- (+ (+ (+ $generated@@615 1) $generated@@614) $generated@@615) $generated@@616)))) (= ($generated@@164 ($generated@@194 $generated@@613) ($generated@@154 $generated@@614) ($generated@@154 $generated@@615)) (ite (= ($generated@@154 $generated@@614) ($generated@@154 0)) $generated@@615 (let (($generated@@617 ($generated@@154 (+ $generated@@614 $generated@@615))))
($generated@@154 ($generated@@164 ($generated@@194 $generated@@613) ($generated@@154 (- (+ (+ (- $generated@@614 1) $generated@@614) $generated@@615) $generated@@617)) ($generated@@154 (- (+ (+ (+ $generated@@615 1) $generated@@614) $generated@@615) $generated@@617)))))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@194 $generated@@613) ($generated@@154 $generated@@614) ($generated@@154 $generated@@615)))
))))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@189) (= (type $generated@@619) $generated@@73)) (= (type $generated@@620) $generated@@73)) ($generated@@268 $generated@@618 ($generated@@473 $generated@@619 $generated@@620))) (and (= ($generated@@326 ($generated@@393 ($generated@@347 $generated@@189 $generated@@189) $generated@@618)) $generated@@618) ($generated@@152 ($generated@@393 ($generated@@347 $generated@@189 $generated@@189) $generated@@618) ($generated@@473 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@268 $generated@@618 ($generated@@473 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@189) (= (type $generated@@622) $generated@@73)) (= (type $generated@@623) $generated@@73)) ($generated@@268 $generated@@621 ($generated@@481 $generated@@622 $generated@@623))) (and (= ($generated@@326 ($generated@@393 ($generated@@365 $generated@@189 $generated@@189) $generated@@621)) $generated@@621) ($generated@@152 ($generated@@393 ($generated@@365 $generated@@189 $generated@@189) $generated@@621) ($generated@@481 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@268 $generated@@621 ($generated@@481 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) $generated@@73) (= (type $generated@@625) $generated@@73)) (= (type $generated@@626) $generated@@189)) ($generated@@268 $generated@@626 ($generated@@179 $generated@@624 $generated@@625))) (and (= ($generated@@326 ($generated@@393 $generated@@180 $generated@@626)) $generated@@626) ($generated@@152 ($generated@@393 $generated@@180 $generated@@626) ($generated@@179 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@268 $generated@@626 ($generated@@179 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
 (not ($generated@@0 ($generated@@95 ($generated@@498 $generated@@628) $generated@@627))))
 :pattern ( (let (($generated@@628 (type $generated@@627)))
($generated@@95 ($generated@@498 $generated@@628) $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 Int) ($generated@@635 Int) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@148) (= (type $generated@@631) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@632) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@633) $generated@@91)) (=> (and (and (and (and ($generated@@150 $generated@@631) ($generated@@150 $generated@@632)) (and (not (= $generated@@633 $generated@@151)) (and ($generated@@152 $generated@@633 $generated@@153) ($generated@@88 $generated@@633 $generated@@153 $generated@@631)))) (or ($generated@@149 $generated@@631 $generated@@633 $generated@@634 $generated@@635) (and (<= ($generated@@154 0) $generated@@634) (<= ($generated@@154 0) $generated@@635)))) (and ($generated@@629 $generated@@631) ($generated@@160 $generated@@631 $generated@@632))) (=> (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (! (let (($generated@@638 ($generated@@76 (type $generated@@637))))
 (=> (and (and (= (type $generated@@636) $generated@@91) (= (type $generated@@637) ($generated@@75 $generated@@638))) (and (not (= $generated@@636 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@631 $generated@@636) $generated@@60)))) (= ($generated@@97 ($generated@@95 $generated@@631 $generated@@636) $generated@@637) ($generated@@97 ($generated@@95 $generated@@632 $generated@@636) $generated@@637))))
 :no-pattern (type $generated@@636)
 :no-pattern (type $generated@@637)
 :no-pattern ($generated $generated@@636)
 :no-pattern ($generated@@0 $generated@@636)
 :no-pattern ($generated $generated@@637)
 :no-pattern ($generated@@0 $generated@@637)
)) (= ($generated@@147 $generated@@630 $generated@@631 $generated@@633 $generated@@634 $generated@@635) ($generated@@147 $generated@@630 $generated@@632 $generated@@633 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@629 $generated@@631) ($generated@@160 $generated@@631 $generated@@632) ($generated@@147 $generated@@630 $generated@@632 $generated@@633 $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@640) $generated@@91)) (and ($generated@@150 $generated@@639) (and (not (= $generated@@640 $generated@@151)) (= ($generated@@206 $generated@@640) $generated@@174)))) ($generated@@152 ($generated@@97 ($generated@@95 $generated@@639 $generated@@640) $generated@@275) $generated@@171))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@639 $generated@@640) $generated@@275))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@641) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@642) $generated@@91)) (and ($generated@@150 $generated@@641) (and (not (= $generated@@642 $generated@@151)) (= ($generated@@206 $generated@@642) $generated@@174)))) ($generated@@152 ($generated@@97 ($generated@@95 $generated@@641 $generated@@642) $generated@@281) $generated@@153))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@641 $generated@@642) $generated@@281))
)))
(assert (forall (($generated@@644 T@U) ) (! (= (type ($generated@@643 $generated@@644)) $generated@@80)
 :pattern ( ($generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@73) (= (type $generated@@646) $generated@@73)) (and (= ($generated@@84 ($generated@@179 $generated@@645 $generated@@646)) $generated@@64) (= ($generated@@643 ($generated@@179 $generated@@645 $generated@@646)) $generated@@69)))
 :pattern ( ($generated@@179 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@180) (= ($generated@@607 ($generated@@326 $generated@@647)) ($generated@@608 $generated@@647)))
 :pattern ( ($generated@@607 ($generated@@326 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@189) ($generated@@268 $generated@@648 ($generated@@89 0))) (and (= ($generated@@326 ($generated@@393 $generated@@2 $generated@@648)) $generated@@648) ($generated@@152 ($generated@@393 ($generated@@90 $generated@@189 $generated@@4) $generated@@648) ($generated@@89 0))))
 :pattern ( ($generated@@268 $generated@@648 ($generated@@89 0)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) $generated@@189) (= (type $generated@@650) $generated@@73)) ($generated@@268 $generated@@649 ($generated@@284 $generated@@650))) (and (= ($generated@@326 ($generated@@393 ($generated@@90 $generated@@189 $generated@@4) $generated@@649)) $generated@@649) ($generated@@152 ($generated@@393 ($generated@@90 $generated@@189 $generated@@4) $generated@@649) ($generated@@284 $generated@@650))))
 :pattern ( ($generated@@268 $generated@@649 ($generated@@284 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (= (type $generated@@651) $generated@@189) (= (type $generated@@652) $generated@@73)) ($generated@@268 $generated@@651 ($generated@@289 $generated@@652))) (and (= ($generated@@326 ($generated@@393 ($generated@@90 $generated@@189 $generated@@4) $generated@@651)) $generated@@651) ($generated@@152 ($generated@@393 ($generated@@90 $generated@@189 $generated@@4) $generated@@651) ($generated@@289 $generated@@652))))
 :pattern ( ($generated@@268 $generated@@651 ($generated@@289 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@189) (= (type $generated@@654) $generated@@73)) ($generated@@268 $generated@@653 ($generated@@201 $generated@@654))) (and (= ($generated@@326 ($generated@@393 ($generated@@90 $generated@@189 $generated@@2) $generated@@653)) $generated@@653) ($generated@@152 ($generated@@393 ($generated@@90 $generated@@189 $generated@@2) $generated@@653) ($generated@@201 $generated@@654))))
 :pattern ( ($generated@@268 $generated@@653 ($generated@@201 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (and (= (type $generated@@655) $generated@@189) (= (type $generated@@656) $generated@@73)) ($generated@@268 $generated@@655 ($generated@@569 $generated@@656))) (and (= ($generated@@326 ($generated@@393 ($generated@@319 $generated@@189) $generated@@655)) $generated@@655) ($generated@@152 ($generated@@393 ($generated@@319 $generated@@189) $generated@@655) ($generated@@569 $generated@@656))))
 :pattern ( ($generated@@268 $generated@@655 ($generated@@569 $generated@@656)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (! (let (($generated@@661 (type $generated@@660)))
 (=> (and (and (and (= (type $generated@@657) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@658) $generated@@91)) (= (type $generated@@659) ($generated@@75 $generated@@661))) ($generated@@150 ($generated@@96 $generated@@657 $generated@@658 ($generated@@98 ($generated@@95 $generated@@657 $generated@@658) $generated@@659 $generated@@660)))) ($generated@@160 $generated@@657 ($generated@@96 $generated@@657 $generated@@658 ($generated@@98 ($generated@@95 $generated@@657 $generated@@658) $generated@@659 $generated@@660)))))
 :pattern ( ($generated@@96 $generated@@657 $generated@@658 ($generated@@98 ($generated@@95 $generated@@657 $generated@@658) $generated@@659 $generated@@660)))
)))
(assert (= ($generated@@84 $generated@@171) $generated@@62))
(assert (= ($generated@@643 $generated@@171) $generated@@68))
(assert (= ($generated@@84 $generated@@174) $generated@@66))
(assert (= ($generated@@643 $generated@@174) $generated@@70))
(assert (= ($generated@@84 $generated@@153) $generated@@67))
(assert (= ($generated@@643 $generated@@153) $generated@@70))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@662) ($generated@@90 $generated@@189 $generated@@2)) (= (type $generated@@663) $generated@@73)) (= (type $generated@@664) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@662 ($generated@@201 $generated@@663) $generated@@664) (forall (($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@189) (< 0 ($generated ($generated@@95 $generated@@662 $generated@@665)))) ($generated@@299 $generated@@665 $generated@@663 $generated@@664))
 :pattern ( ($generated@@95 $generated@@662 $generated@@665))
))))
 :pattern ( ($generated@@88 $generated@@662 ($generated@@201 $generated@@663) $generated@@664))
)))
(assert  (=> (<= 1 $generated@@146) (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 Int) ($generated@@670 Int) ) (!  (=> (and (and (and (= (type $generated@@666) $generated@@148) (= (type $generated@@667) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@668) $generated@@91)) (or ($generated@@149 $generated@@667 $generated@@668 $generated@@669 $generated@@670) (and (not (= 1 $generated@@146)) (and (and (and ($generated@@150 $generated@@667) (and (not (= $generated@@668 $generated@@151)) (and ($generated@@152 $generated@@668 $generated@@153) ($generated@@88 $generated@@668 $generated@@153 $generated@@667)))) (<= ($generated@@154 0) $generated@@669)) (<= ($generated@@154 0) $generated@@670))))) (and (=> (not (= $generated@@669 ($generated@@154 0))) ($generated@@149 $generated@@667 ($generated@@97 ($generated@@95 $generated@@667 $generated@@668) $generated@@281) (- $generated@@669 1) (+ $generated@@670 ($generated ($generated@@97 ($generated@@95 $generated@@667 $generated@@668) $generated@@275))))) (= ($generated@@147 ($generated@@194 $generated@@666) $generated@@667 $generated@@668 $generated@@669 $generated@@670) (ite (= $generated@@669 ($generated@@154 0)) $generated@@670 ($generated@@147 $generated@@666 $generated@@667 ($generated@@97 ($generated@@95 $generated@@667 $generated@@668) $generated@@281) (- $generated@@669 1) (+ $generated@@670 ($generated ($generated@@97 ($generated@@95 $generated@@667 $generated@@668) $generated@@275))))))))
 :pattern ( ($generated@@147 ($generated@@194 $generated@@666) $generated@@667 $generated@@668 $generated@@669 $generated@@670) ($generated@@150 $generated@@667))
))))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@180) (= (type $generated@@672) $generated@@73)) (= (type $generated@@673) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@150 $generated@@673) (and ($generated@@178 $generated@@671) (exists (($generated@@674 T@U) ) (!  (and (= (type $generated@@674) $generated@@73) ($generated@@88 $generated@@671 ($generated@@179 $generated@@672 $generated@@674) $generated@@673))
 :pattern ( ($generated@@88 $generated@@671 ($generated@@179 $generated@@672 $generated@@674) $generated@@673))
))))) ($generated@@299 ($generated@@187 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@299 ($generated@@187 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@180) (= (type $generated@@676) $generated@@73)) (= (type $generated@@677) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@150 $generated@@677) (and ($generated@@178 $generated@@675) (exists (($generated@@678 T@U) ) (!  (and (= (type $generated@@678) $generated@@73) ($generated@@88 $generated@@675 ($generated@@179 $generated@@678 $generated@@676) $generated@@677))
 :pattern ( ($generated@@88 $generated@@675 ($generated@@179 $generated@@678 $generated@@676) $generated@@677))
))))) ($generated@@299 ($generated@@188 $generated@@675) $generated@@676 $generated@@677))
 :pattern ( ($generated@@299 ($generated@@188 $generated@@675) $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@189) (= (type $generated@@680) $generated@@189)) (= ($generated@@267 ($generated@@295 $generated@@679) ($generated@@295 $generated@@680)) ($generated@@295 ($generated@@267 $generated@@679 $generated@@680))))
 :pattern ( ($generated@@267 ($generated@@295 $generated@@679) ($generated@@295 $generated@@680)))
)))
(assert (forall (($generated@@681 Int) ) (! (= ($generated@@326 ($generated@@8 ($generated@@154 $generated@@681))) ($generated@@295 ($generated@@326 ($generated@@8 $generated@@681))))
 :pattern ( ($generated@@326 ($generated@@8 ($generated@@154 $generated@@681))))
)))
(assert (forall (($generated@@682 T@U) ) (! (= ($generated@@326 ($generated@@295 $generated@@682)) ($generated@@295 ($generated@@326 $generated@@682)))
 :pattern ( ($generated@@326 ($generated@@295 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@320 (type $generated@@683))))
 (=> (and (= (type $generated@@683) ($generated@@319 $generated@@684)) (= ($generated@@318 $generated@@683) 0)) (= $generated@@683 ($generated@@317 $generated@@684))))
 :pattern ( ($generated@@318 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (! (let (($generated@@688 (type $generated@@686)))
 (=> (and (and (= (type $generated@@685) ($generated@@90 $generated@@688 $generated@@2)) (= (type $generated@@687) $generated@@2)) (<= 0 ($generated $generated@@687))) (= ($generated@@339 ($generated@@96 $generated@@685 $generated@@686 $generated@@687)) (+ (- ($generated@@339 $generated@@685) ($generated ($generated@@95 $generated@@685 $generated@@686))) ($generated $generated@@687)))))
 :pattern ( ($generated@@339 ($generated@@96 $generated@@685 $generated@@686 $generated@@687)))
)))
(assert  (=> (<= 0 $generated@@146) (forall (($generated@@689 Int) ($generated@@690 Int) ) (!  (=> (or ($generated@@490 $generated@@689 $generated@@690) (not (= 0 $generated@@146))) (= ($generated@@489 $generated@@689 $generated@@690) (+ $generated@@689 $generated@@690)))
 :pattern ( ($generated@@489 $generated@@689 $generated@@690))
))))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@692) $generated@@2)) ($generated@@88 $generated@@692 $generated@@46 $generated@@691))
 :pattern ( ($generated@@88 $generated@@692 $generated@@46 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@694) $generated@@3)) ($generated@@88 $generated@@694 $generated@@47 $generated@@693))
 :pattern ( ($generated@@88 $generated@@694 $generated@@47 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@696) $generated@@4)) ($generated@@88 $generated@@696 $generated@@44 $generated@@695))
 :pattern ( ($generated@@88 $generated@@696 $generated@@44 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@698) $generated@@527)) ($generated@@88 $generated@@698 $generated@@45 $generated@@697))
 :pattern ( ($generated@@88 $generated@@698 $generated@@45 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@700) $generated@@189)) ($generated@@88 $generated@@700 $generated@@48 $generated@@699))
 :pattern ( ($generated@@88 $generated@@700 $generated@@48 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@319 $generated@@189)) (= (type $generated@@702) $generated@@73)) (= ($generated@@152 $generated@@701 ($generated@@569 $generated@@702)) (forall (($generated@@703 Int) ) (!  (=> (and (<= 0 $generated@@703) (< $generated@@703 ($generated@@318 $generated@@701))) ($generated@@268 ($generated@@570 $generated@@701 $generated@@703) $generated@@702))
 :pattern ( ($generated@@570 $generated@@701 $generated@@703))
))))
 :pattern ( ($generated@@152 $generated@@701 ($generated@@569 $generated@@702)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 Int) ) (!  (=> (= (type $generated@@705) ($generated@@319 $generated@@189)) (=> (and (<= 0 $generated@@706) (< $generated@@706 ($generated@@318 $generated@@705))) (< ($generated@@608 ($generated@@393 $generated@@180 ($generated@@570 $generated@@705 $generated@@706))) ($generated@@704 $generated@@705))))
 :pattern ( ($generated@@608 ($generated@@393 $generated@@180 ($generated@@570 $generated@@705 $generated@@706))))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (and (= (type $generated@@707) ($generated@@347 $generated@@189 $generated@@189)) (= (type $generated@@708) $generated@@73)) (= (type $generated@@709) $generated@@73)) ($generated@@152 $generated@@707 ($generated@@473 $generated@@708 $generated@@709))) (and (and ($generated@@152 ($generated@@345 $generated@@707) ($generated@@284 $generated@@708)) ($generated@@152 ($generated@@404 $generated@@707) ($generated@@284 $generated@@709))) ($generated@@152 ($generated@@447 $generated@@707) ($generated@@284 ($generated@@179 $generated@@708 $generated@@709)))))
 :pattern ( ($generated@@152 $generated@@707 ($generated@@473 $generated@@708 $generated@@709)))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (and (= (type $generated@@710) ($generated@@365 $generated@@189 $generated@@189)) (= (type $generated@@711) $generated@@73)) (= (type $generated@@712) $generated@@73)) ($generated@@152 $generated@@710 ($generated@@481 $generated@@711 $generated@@712))) (and (and ($generated@@152 ($generated@@363 $generated@@710) ($generated@@289 $generated@@711)) ($generated@@152 ($generated@@415 $generated@@710) ($generated@@289 $generated@@712))) ($generated@@152 ($generated@@455 $generated@@710) ($generated@@289 ($generated@@179 $generated@@711 $generated@@712)))))
 :pattern ( ($generated@@152 $generated@@710 ($generated@@481 $generated@@711 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@2) ($generated@@152 $generated@@713 $generated@@46))
 :pattern ( ($generated@@152 $generated@@713 $generated@@46))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@3) ($generated@@152 $generated@@714 $generated@@47))
 :pattern ( ($generated@@152 $generated@@714 $generated@@47))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@4) ($generated@@152 $generated@@715 $generated@@44))
 :pattern ( ($generated@@152 $generated@@715 $generated@@44))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@527) ($generated@@152 $generated@@716 $generated@@45))
 :pattern ( ($generated@@152 $generated@@716 $generated@@45))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@189) ($generated@@152 $generated@@717 $generated@@48))
 :pattern ( ($generated@@152 $generated@@717 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 () Int)
(declare-fun $generated@@722 () Int)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () Int)
(declare-fun $generated@@725 () Int)
(declare-fun $generated@@726 () Int)
(declare-fun $generated@@727 () Int)
(declare-fun $generated@@728 () Int)
(declare-fun $generated@@729 () Int)
(declare-fun $generated@@730 () Int)
(declare-fun $generated@@731 () T@U)
(declare-fun $generated@@732 () Int)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 () Int)
(declare-fun $generated@@735 () Int)
(declare-fun $generated@@736 () T@U)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 () Int)
(declare-fun $generated@@739 () T@U)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () Int)
(declare-fun $generated@@743 () T@U)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () T@U)
(declare-fun $generated@@746 () T@U)
(declare-fun $generated@@747 () T@U)
(declare-fun $generated@@748 () Int)
(declare-fun $generated@@749 () Int)
(declare-fun $generated@@750 () Int)
(declare-fun $generated@@751 () T@U)
(declare-fun $generated@@752 () Int)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () Int)
(declare-fun $generated@@755 () Int)
(declare-fun $generated@@756 () Int)
(declare-fun $generated@@757 () Int)
(declare-fun $generated@@758 () Bool)
(declare-fun $generated@@759 () T@U)
(declare-fun $generated@@760 () Bool)
(declare-fun $generated@@761 () T@U)
(declare-fun $generated@@762 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@718) ($generated@@211 $generated@@91 $generated@@4)) (= (type $generated@@719) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@723) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@731) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@736) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@739) $generated@@91)) (= (type $generated@@740) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@741) $generated@@91)) (= (type $generated@@743) $generated@@91)) (= (type $generated@@744) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@745) $generated@@91)) (= (type $generated@@746) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@747) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@751) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@759) $generated@@91)) (= (type $generated@@761) $generated@@91)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@763  (=> (= $generated@@718 ($generated@@210 $generated@@151 $generated@@719 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 30)) ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171) (=> (= $generated@@720 ($generated@@154 2000000)) (and (=> (= (ControlFlow 0 2) (- 0 29)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (and (= $generated@@721 ($generated@@154 0)) (<= ($generated@@154 0) $generated@@722)) (=> (and (and (and ($generated@@150 $generated@@723) ($generated@@629 $generated@@723)) (<= ($generated@@154 0) $generated@@724)) (and (forall (($generated@@764 T@U) ) (!  (=> (= (type $generated@@764) $generated@@91) (=> (and (not (= $generated@@764 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@719 $generated@@764) $generated@@60))) (= ($generated@@95 $generated@@723 $generated@@764) ($generated@@95 $generated@@719 $generated@@764))))
 :pattern ( ($generated@@95 $generated@@723 $generated@@764))
)) ($generated@@160 $generated@@719 $generated@@723))) (and (=> (= (ControlFlow 0 2) (- 0 28)) ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171) (=> (and (= $generated@@725 ($generated@@154 2000000)) ($generated@@88 ($generated@@8 $generated@@725) $generated@@171 $generated@@723)) (and (=> (= (ControlFlow 0 2) (- 0 27)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (= $generated@@726 ($generated@@154 0)) (=> (and (and ($generated@@88 ($generated@@8 $generated@@726) $generated@@171 $generated@@723) ($generated@@308 ($generated@@154 2000000) ($generated@@154 0))) (and ($generated@@308 ($generated@@154 2000000) ($generated@@154 0)) (= $generated@@727 ($generated@@154 ($generated@@164 ($generated@@194 $generated@@166) ($generated@@154 2000000) ($generated@@154 0)))))) (and (=> (= (ControlFlow 0 2) (- 0 26)) ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171) (=> (= $generated@@728 ($generated@@154 2000000)) (and (=> (= (ControlFlow 0 2) (- 0 25)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (and (= $generated@@729 ($generated@@154 0)) (<= ($generated@@154 0) $generated@@730)) (=> (and (and (and ($generated@@150 $generated@@731) ($generated@@629 $generated@@731)) (<= ($generated@@154 0) $generated@@732)) (and (forall (($generated@@765 T@U) ) (!  (=> (= (type $generated@@765) $generated@@91) (=> (and (not (= $generated@@765 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@723 $generated@@765) $generated@@60))) (= ($generated@@95 $generated@@731 $generated@@765) ($generated@@95 $generated@@723 $generated@@765))))
 :pattern ( ($generated@@95 $generated@@731 $generated@@765))
)) ($generated@@160 $generated@@723 $generated@@731))) (and (=> (= (ControlFlow 0 2) (- 0 24)) ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171) (=> (= $generated@@733 ($generated@@154 2000000)) (and (=> (= (ControlFlow 0 2) (- 0 23)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (and (= $generated@@734 ($generated@@154 0)) (<= ($generated@@154 0) $generated@@735)) (=> (and (and (and ($generated@@150 $generated@@736) ($generated@@629 $generated@@736)) (<= ($generated@@154 0) $generated@@737)) (and (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@91) (=> (and (not (= $generated@@766 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@731 $generated@@766) $generated@@60))) (= ($generated@@95 $generated@@736 $generated@@766) ($generated@@95 $generated@@731 $generated@@766))))
 :pattern ( ($generated@@95 $generated@@736 $generated@@766))
)) ($generated@@160 $generated@@731 $generated@@736))) (and (=> (= (ControlFlow 0 2) (- 0 22)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (= $generated@@738 ($generated@@154 0)) (=> (and (and (not (= $generated@@739 $generated@@151)) (and ($generated@@152 $generated@@739 $generated@@153) ($generated@@88 $generated@@739 $generated@@153 $generated@@719))) (and ($generated@@150 $generated@@740) ($generated@@629 $generated@@740))) (=> (and (and (and (not (= $generated@@741 $generated@@151)) (and ($generated@@152 $generated@@741 $generated@@153) ($generated@@88 $generated@@741 $generated@@153 $generated@@740))) (not ($generated@@0 ($generated@@97 ($generated@@95 $generated@@736 $generated@@741) $generated@@60)))) (and (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@91) (=> (and (not (= $generated@@767 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@736 $generated@@767) $generated@@60))) (= ($generated@@95 $generated@@740 $generated@@767) ($generated@@95 $generated@@736 $generated@@767))))
 :pattern ( ($generated@@95 $generated@@740 $generated@@767))
)) ($generated@@160 $generated@@736 $generated@@740))) (and (=> (= (ControlFlow 0 2) (- 0 21)) ($generated@@152 ($generated@@8 ($generated@@154 1)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 1)) $generated@@171) (=> (= $generated@@742 ($generated@@154 1)) (=> (and (and (not (= $generated@@743 $generated@@151)) (and ($generated@@152 $generated@@743 $generated@@153) ($generated@@88 $generated@@743 $generated@@153 $generated@@719))) (and ($generated@@150 $generated@@744) ($generated@@629 $generated@@744))) (=> (and (and (and (not (= $generated@@745 $generated@@151)) (and ($generated@@152 $generated@@745 $generated@@153) ($generated@@88 $generated@@745 $generated@@153 $generated@@744))) (not ($generated@@0 ($generated@@97 ($generated@@95 $generated@@740 $generated@@745) $generated@@60)))) (and (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@91) (=> (and (not (= $generated@@768 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@740 $generated@@768) $generated@@60))) (= ($generated@@95 $generated@@744 $generated@@768) ($generated@@95 $generated@@740 $generated@@768))))
 :pattern ( ($generated@@95 $generated@@744 $generated@@768))
)) ($generated@@160 $generated@@740 $generated@@744))) (and (=> (= (ControlFlow 0 2) (- 0 20)) true) (and (=> (= (ControlFlow 0 2) (- 0 19)) (not (= $generated@@741 $generated@@151))) (=> (not (= $generated@@741 $generated@@151)) (and (=> (= (ControlFlow 0 2) (- 0 18)) ($generated@@0 ($generated@@209 $generated@@718 $generated@@741 $generated@@281))) (=> ($generated@@0 ($generated@@209 $generated@@718 $generated@@741 $generated@@281)) (and (=> (= (ControlFlow 0 2) (- 0 17)) true) (and (=> (= (ControlFlow 0 2) (- 0 16)) (not (= $generated@@745 $generated@@151))) (=> (not (= $generated@@745 $generated@@151)) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@0 ($generated@@209 $generated@@718 $generated@@745 $generated@@281))) (=> ($generated@@0 ($generated@@209 $generated@@718 $generated@@745 $generated@@281)) (and (=> (= (ControlFlow 0 2) (- 0 14)) true) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (not (= $generated@@745 $generated@@741)) (= $generated@@741 $generated@@745))) (=> (or (not (= $generated@@745 $generated@@741)) (= $generated@@741 $generated@@745)) (=> (and (and (= $generated@@746 ($generated@@96 $generated@@744 $generated@@741 ($generated@@98 ($generated@@95 $generated@@744 $generated@@741) $generated@@281 $generated@@745))) ($generated@@150 $generated@@746)) (and (= $generated@@747 ($generated@@96 $generated@@746 $generated@@745 ($generated@@98 ($generated@@95 $generated@@746 $generated@@745) $generated@@281 $generated@@741))) ($generated@@150 $generated@@747))) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) (not (= $generated@@741 $generated@@151))) (=> (not (= $generated@@741 $generated@@151)) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171) (=> (= $generated@@748 ($generated@@154 2000000)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (and (= $generated@@749 ($generated@@154 0)) (<= ($generated@@154 0) $generated@@750)) (=> (and (and (and ($generated@@150 $generated@@751) ($generated@@629 $generated@@751)) (<= ($generated@@154 0) $generated@@752)) (and (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@91) (=> (and (not (= $generated@@769 $generated@@151)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@747 $generated@@769) $generated@@60))) (= ($generated@@95 $generated@@751 $generated@@769) ($generated@@95 $generated@@747 $generated@@769))))
 :pattern ( ($generated@@95 $generated@@751 $generated@@769))
)) ($generated@@160 $generated@@747 $generated@@751))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@741 $generated@@151))) (=> (not (= $generated@@741 $generated@@151)) (=> ($generated@@88 $generated@@741 $generated@@174 $generated@@751) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 2000000)) $generated@@171) (=> (and (= $generated@@753 ($generated@@154 2000000)) ($generated@@88 ($generated@@8 $generated@@753) $generated@@171 $generated@@751)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171) (=> (= $generated@@754 ($generated@@154 0)) (=> (and (and ($generated@@88 ($generated@@8 $generated@@754) $generated@@171 $generated@@751) ($generated@@149 $generated@@751 $generated@@741 ($generated@@154 2000000) ($generated@@154 0))) (and ($generated@@149 $generated@@751 $generated@@741 ($generated@@154 2000000) ($generated@@154 0)) (= $generated@@755 ($generated@@147 ($generated@@194 $generated@@166) $generated@@751 $generated@@741 ($generated@@154 2000000) ($generated@@154 0))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@152 ($generated@@8 ($generated@@154 10)) $generated@@171)) (=> ($generated@@152 ($generated@@8 ($generated@@154 10)) $generated@@171) (=> (and (= $generated@@756 ($generated@@154 10)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@152 ($generated@@8 ($generated@@154 0)) $generated@@171)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@770  (=> (and (and ($generated@@150 $generated@@719) ($generated@@629 $generated@@719)) (and (<= ($generated@@154 0) $generated@@757) true)) (=> (and (and (and (=> $generated@@758 (and ($generated@@152 $generated@@759 $generated@@153) ($generated@@88 $generated@@759 $generated@@153 $generated@@719))) true) (and (=> $generated@@760 (and ($generated@@152 $generated@@761 $generated@@153) ($generated@@88 $generated@@761 $generated@@153 $generated@@719))) true)) (and (and (<= ($generated@@154 0) $generated@@762) true) (and (= 3 $generated@@146) (= (ControlFlow 0 31) 2)))) $generated@@763))))
$generated@@770)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 () T@T)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) Int)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (Int) Int)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@357 (T@U T@U T@U) Bool)
(declare-fun $generated@@363 () Int)
(declare-fun $generated@@364 (T@U T@U) Int)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@370 () T@U)
(declare-fun $generated@@371 (T@U T@U) Bool)
(declare-fun $generated@@372 (T@T) T@U)
(declare-fun $generated@@380 (T@T) T@U)
(declare-fun $generated@@381 (T@U) Int)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U) Int)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@T T@T) T@U)
(declare-fun $generated@@422 (T@T T@T) T@T)
(declare-fun $generated@@423 (T@T) T@T)
(declare-fun $generated@@424 (T@T) T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@T T@T) T@U)
(declare-fun $generated@@440 (T@T T@T) T@T)
(declare-fun $generated@@441 (T@T) T@T)
(declare-fun $generated@@442 (T@T) T@T)
(declare-fun $generated@@463 (T@T T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@493 (T@U T@U) Bool)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@538 (T@U T@U) T@U)
(declare-fun $generated@@546 (T@U T@U) T@U)
(declare-fun $generated@@560 (T@T) T@U)
(declare-fun $generated@@584 () T@T)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@606 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@626 (T@U) T@U)
(declare-fun $generated@@627 (T@U Int) T@U)
(declare-fun $generated@@638 (T@U) Int)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@644 (T@U) T@U)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@662 (T@U) T@U)
(declare-fun $generated@@665 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@686 (T@U) Int)
(declare-fun $generated@@687 (T@U) Int)
(declare-fun $generated@@799 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert  (and (= ($generated@@1 $generated@@146) 14) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@144 $generated@@147 $generated@@148)) $generated@@146)
 :pattern ( ($generated@@144 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@75) (= (type $generated@@150) $generated@@88)) (= (type $generated@@151) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@143 $generated@@46 $generated@@151 ($generated@@144 $generated@@149 $generated@@150)) ($generated@@145 $generated@@149 $generated@@150)))
 :pattern ( ($generated@@143 $generated@@46 $generated@@151 ($generated@@144 $generated@@149 $generated@@150)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@154) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@152 $generated@@153 $generated@@154)) (forall (($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@153 $generated@@155) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@154 $generated@@155) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@154 $generated@@155) $generated@@60))
)))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert  (and (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@75)
 :pattern ( ($generated@@156 $generated@@158))
)) (= (type $generated@@157) $generated@@88)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@75) (= (type $generated@@160) $generated@@88)) (= (type $generated@@161) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@160 ($generated@@156 $generated@@159) $generated@@161)  (or (= $generated@@160 $generated@@157) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@161 $generated@@160) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@160 ($generated@@156 $generated@@159) $generated@@161))
)))
(assert (= (type $generated@@162) $generated@@75))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@2) (= (type $generated@@164) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@163 $generated@@162 $generated@@164))
 :pattern ( ($generated@@85 $generated@@163 $generated@@162 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@2) ($generated@@165 $generated@@166 ($generated@@86 0)))
 :pattern ( ($generated@@165 $generated@@166 ($generated@@86 0)))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@75)
 :pattern ( ($generated@@167 $generated@@169))
)) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@75)
 :pattern ( ($generated@@168 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@75) (= (type $generated@@172) $generated@@146)) (= (type $generated@@173) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@172 ($generated@@167 $generated@@171) $generated@@173) ($generated@@85 $generated@@172 ($generated@@168 $generated@@171) $generated@@173)))
 :pattern ( ($generated@@85 $generated@@172 ($generated@@167 $generated@@171) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@75)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@75) (= (type $generated@@177) $generated@@146)) (= (type $generated@@178) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@177 ($generated@@174 $generated@@176) $generated@@178) ($generated@@85 $generated@@177 ($generated@@167 $generated@@176) $generated@@178)))
 :pattern ( ($generated@@85 $generated@@177 ($generated@@174 $generated@@176) $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@75)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@75) (= (type $generated@@182) $generated@@88)) (= (type $generated@@183) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@182 ($generated@@179 $generated@@181) $generated@@183) ($generated@@85 $generated@@182 ($generated@@156 $generated@@181) $generated@@183)))
 :pattern ( ($generated@@85 $generated@@182 ($generated@@179 $generated@@181) $generated@@183))
)))
(assert  (and (= ($generated@@1 $generated@@186) 15) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@187 $generated@@188)) $generated@@75)
 :pattern ( ($generated@@185 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (and (= (type $generated@@189) $generated@@75) (= (type $generated@@190) $generated@@75)) (= (type $generated@@191) $generated@@186)) ($generated@@165 $generated@@191 ($generated@@185 $generated@@189 $generated@@190))) ($generated@@184 $generated@@191))
 :pattern ( ($generated@@184 $generated@@191) ($generated@@165 $generated@@191 ($generated@@185 $generated@@189 $generated@@190)))
)))
(assert  (and (and (= ($generated@@1 $generated@@195) 16) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@193 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@193 $generated@@196))
))) (forall (($generated@@197 T@U) ) (! (= (type ($generated@@194 $generated@@197)) $generated@@195)
 :pattern ( ($generated@@194 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) $generated@@186) (= (type $generated@@199) $generated@@186)) true) (= ($generated@@192 $generated@@198 $generated@@199)  (and (= ($generated@@193 $generated@@198) ($generated@@193 $generated@@199)) (= ($generated@@194 $generated@@198) ($generated@@194 $generated@@199)))))
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ) (! (= (type ($generated@@200 $generated@@202)) $generated@@75)
 :pattern ( ($generated@@200 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) ($generated@@87 $generated@@195 $generated@@2)) (= (type $generated@@204) $generated@@75)) ($generated@@165 $generated@@203 ($generated@@200 $generated@@204))) ($generated@@201 $generated@@203))
 :pattern ( ($generated@@165 $generated@@203 ($generated@@200 $generated@@204)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 17)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@88 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@78 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@88) (= (type $generated@@255) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@256) ($generated@@77 $generated@@4))) (= (type $generated@@258) $generated@@88)) (= (type $generated@@259) ($generated@@77 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@186)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (= (type $generated@@265) $generated@@75) (= (type $generated@@266) $generated@@75)) (= (type $generated@@267) $generated@@195)) (= (type $generated@@268) $generated@@195)) (= ($generated@@165 ($generated@@261 $generated@@267 $generated@@268) ($generated@@185 $generated@@265 $generated@@266))  (and ($generated@@262 $generated@@267 $generated@@265) ($generated@@262 $generated@@268 $generated@@266))))
 :pattern ( ($generated@@165 ($generated@@261 $generated@@267 $generated@@268) ($generated@@185 $generated@@265 $generated@@266)))
)))
(assert  (and (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273 $generated@@274)) ($generated@@87 $generated@@195 $generated@@4))
 :pattern ( ($generated@@270 $generated@@272 $generated@@273 $generated@@274))
)) (forall (($generated@@275 T@U) ) (! (= (type ($generated@@271 $generated@@275)) $generated@@195)
 :pattern ( ($generated@@271 $generated@@275))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@276) $generated@@75) (= (type $generated@@277) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@278) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@279) $generated@@146)) (and (and (and ($generated@@152 $generated@@277 $generated@@278) (and ($generated@@269 $generated@@277) ($generated@@269 $generated@@278))) ($generated@@165 $generated@@279 ($generated@@168 $generated@@276))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@78 (type $generated@@281))))
 (=> (and (and (= (type $generated@@280) $generated@@88) (= (type $generated@@281) ($generated@@77 $generated@@282))) (and (not (= $generated@@280 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@276 $generated@@277 $generated@@279) ($generated@@271 $generated@@280))))) (= ($generated@@94 ($generated@@92 $generated@@277 $generated@@280) $generated@@281) ($generated@@94 ($generated@@92 $generated@@278 $generated@@280) $generated@@281))))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))) (= ($generated@@143 $generated@@276 $generated@@277 $generated@@279) ($generated@@143 $generated@@276 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@152 $generated@@277 $generated@@278) ($generated@@143 $generated@@276 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@283) $generated@@75) (= (type $generated@@284) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@285) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@286) $generated@@146)) (and (and (and ($generated@@152 $generated@@284 $generated@@285) (and ($generated@@269 $generated@@284) ($generated@@269 $generated@@285))) ($generated@@165 $generated@@286 ($generated@@168 $generated@@283))) (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@78 (type $generated@@288))))
 (=> (and (and (= (type $generated@@287) $generated@@88) (= (type $generated@@288) ($generated@@77 $generated@@289))) (and (not (= $generated@@287 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@283 $generated@@285 $generated@@286) ($generated@@271 $generated@@287))))) (= ($generated@@94 ($generated@@92 $generated@@284 $generated@@287) $generated@@288) ($generated@@94 ($generated@@92 $generated@@285 $generated@@287) $generated@@288))))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))) (= ($generated@@143 $generated@@283 $generated@@284 $generated@@286) ($generated@@143 $generated@@283 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@152 $generated@@284 $generated@@285) ($generated@@143 $generated@@283 $generated@@285 $generated@@286))
)))
(assert  (and (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (! (= (type ($generated@@290 $generated@@292 $generated@@293 $generated@@294)) $generated@@195)
 :pattern ( ($generated@@290 $generated@@292 $generated@@293 $generated@@294))
)) (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@291 $generated@@295 $generated@@296 $generated@@297)) $generated@@146)
 :pattern ( ($generated@@291 $generated@@295 $generated@@296 $generated@@297))
))))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@298) $generated@@75) (= (type $generated@@299) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@300) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@195))) (= (type $generated@@301) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@302) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@195 $generated@@4)))) (= ($generated@@290 $generated@@298 $generated@@299 ($generated@@291 $generated@@300 $generated@@301 $generated@@302)) ($generated@@92 $generated@@300 $generated@@299)))
 :pattern ( ($generated@@290 $generated@@298 $generated@@299 ($generated@@291 $generated@@300 $generated@@301 $generated@@302)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@186) (= (type $generated@@304) $generated@@186)) (= ($generated@@192 $generated@@303 $generated@@304) (= $generated@@303 $generated@@304)))
 :pattern ( ($generated@@192 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@75) (= (type $generated@@307) $generated@@88)) (= (type $generated@@308) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@290 $generated@@46 $generated@@308 ($generated@@144 $generated@@306 $generated@@307)) ($generated@@271 ($generated@@8 ($generated@@305 $generated@@306 $generated@@307)))))
 :pattern ( ($generated@@290 $generated@@46 $generated@@308 ($generated@@144 $generated@@306 $generated@@307)))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@75)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@312) $generated@@75)) (= ($generated@@165 $generated@@311 ($generated@@309 $generated@@312)) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@195) ($generated@@0 ($generated@@92 $generated@@311 $generated@@313))) ($generated@@262 $generated@@313 $generated@@312))
 :pattern ( ($generated@@92 $generated@@311 $generated@@313))
))))
 :pattern ( ($generated@@165 $generated@@311 ($generated@@309 $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@75)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@317) $generated@@75)) (= ($generated@@165 $generated@@316 ($generated@@314 $generated@@317)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@195) ($generated@@0 ($generated@@92 $generated@@316 $generated@@318))) ($generated@@262 $generated@@318 $generated@@317))
 :pattern ( ($generated@@92 $generated@@316 $generated@@318))
))))
 :pattern ( ($generated@@165 $generated@@316 ($generated@@314 $generated@@317)))
)))
(assert (forall (($generated@@320 Int) ) (! (= ($generated@@319 $generated@@320) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 (type $generated@@322)))
(= (type ($generated@@321 $generated@@322)) $generated@@323))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= ($generated@@321 $generated@@324) $generated@@324)
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (= (type $generated@@325) $generated@@195) (= (type $generated@@326) $generated@@75)) (= (type $generated@@327) $generated@@88)) (= (type $generated@@328) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@0 ($generated@@92 ($generated@@270 $generated@@46 $generated@@328 ($generated@@144 $generated@@326 $generated@@327)) $generated@@325)) false))
 :pattern ( ($generated@@92 ($generated@@270 $generated@@46 $generated@@328 ($generated@@144 $generated@@326 $generated@@327)) $generated@@325))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@329) $generated@@75) (= (type $generated@@330) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@331) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@332) $generated@@146)) (and (and (and ($generated@@152 $generated@@330 $generated@@331) (and ($generated@@269 $generated@@330) ($generated@@269 $generated@@331))) ($generated@@165 $generated@@332 ($generated@@168 $generated@@329))) (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@78 (type $generated@@334))))
 (=> (and (and (= (type $generated@@333) $generated@@88) (= (type $generated@@334) ($generated@@77 $generated@@335))) (and (not (= $generated@@333 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@329 $generated@@330 $generated@@332) ($generated@@271 $generated@@333))))) (= ($generated@@94 ($generated@@92 $generated@@330 $generated@@333) $generated@@334) ($generated@@94 ($generated@@92 $generated@@331 $generated@@333) $generated@@334))))
 :no-pattern (type $generated@@333)
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
)))) (= ($generated@@270 $generated@@329 $generated@@330 $generated@@332) ($generated@@270 $generated@@329 $generated@@331 $generated@@332)))
 :pattern ( ($generated@@152 $generated@@330 $generated@@331) ($generated@@270 $generated@@329 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@336) $generated@@75) (= (type $generated@@337) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@338) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@339) $generated@@146)) (and (and (and ($generated@@152 $generated@@337 $generated@@338) (and ($generated@@269 $generated@@337) ($generated@@269 $generated@@338))) ($generated@@165 $generated@@339 ($generated@@168 $generated@@336))) (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@78 (type $generated@@341))))
 (=> (and (and (= (type $generated@@340) $generated@@88) (= (type $generated@@341) ($generated@@77 $generated@@342))) (and (not (= $generated@@340 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@336 $generated@@338 $generated@@339) ($generated@@271 $generated@@340))))) (= ($generated@@94 ($generated@@92 $generated@@337 $generated@@340) $generated@@341) ($generated@@94 ($generated@@92 $generated@@338 $generated@@340) $generated@@341))))
 :no-pattern (type $generated@@340)
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
)))) (= ($generated@@270 $generated@@336 $generated@@337 $generated@@339) ($generated@@270 $generated@@336 $generated@@338 $generated@@339)))
 :pattern ( ($generated@@152 $generated@@337 $generated@@338) ($generated@@270 $generated@@336 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@343) $generated@@75) (= (type $generated@@344) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@345) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@346) $generated@@146)) (and (and (and ($generated@@152 $generated@@344 $generated@@345) (and ($generated@@269 $generated@@344) ($generated@@269 $generated@@345))) ($generated@@165 $generated@@346 ($generated@@168 $generated@@343))) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@78 (type $generated@@348))))
 (=> (and (and (= (type $generated@@347) $generated@@88) (= (type $generated@@348) ($generated@@77 $generated@@349))) (and (not (= $generated@@347 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@343 $generated@@344 $generated@@346) ($generated@@271 $generated@@347))))) (= ($generated@@94 ($generated@@92 $generated@@344 $generated@@347) $generated@@348) ($generated@@94 ($generated@@92 $generated@@345 $generated@@347) $generated@@348))))
 :no-pattern (type $generated@@347)
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
)))) (= ($generated@@290 $generated@@343 $generated@@344 $generated@@346) ($generated@@290 $generated@@343 $generated@@345 $generated@@346)))
 :pattern ( ($generated@@152 $generated@@344 $generated@@345) ($generated@@290 $generated@@343 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@350) $generated@@75) (= (type $generated@@351) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@352) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@353) $generated@@146)) (and (and (and ($generated@@152 $generated@@351 $generated@@352) (and ($generated@@269 $generated@@351) ($generated@@269 $generated@@352))) ($generated@@165 $generated@@353 ($generated@@168 $generated@@350))) (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@78 (type $generated@@355))))
 (=> (and (and (= (type $generated@@354) $generated@@88) (= (type $generated@@355) ($generated@@77 $generated@@356))) (and (not (= $generated@@354 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@350 $generated@@352 $generated@@353) ($generated@@271 $generated@@354))))) (= ($generated@@94 ($generated@@92 $generated@@351 $generated@@354) $generated@@355) ($generated@@94 ($generated@@92 $generated@@352 $generated@@354) $generated@@355))))
 :no-pattern (type $generated@@354)
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
)))) (= ($generated@@290 $generated@@350 $generated@@351 $generated@@353) ($generated@@290 $generated@@350 $generated@@352 $generated@@353)))
 :pattern ( ($generated@@152 $generated@@351 $generated@@352) ($generated@@290 $generated@@350 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@358) $generated@@75) (= (type $generated@@359) $generated@@75)) (= (type $generated@@360) $generated@@195)) (= (type $generated@@361) $generated@@195)) (= (type $generated@@362) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@269 $generated@@362)) (= ($generated@@85 ($generated@@261 $generated@@360 $generated@@361) ($generated@@185 $generated@@358 $generated@@359) $generated@@362)  (and ($generated@@357 $generated@@360 $generated@@358 $generated@@362) ($generated@@357 $generated@@361 $generated@@359 $generated@@362))))
 :pattern ( ($generated@@85 ($generated@@261 $generated@@360 $generated@@361) ($generated@@185 $generated@@358 $generated@@359) $generated@@362))
)))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@75) (= (type $generated@@366) $generated@@88)) ($generated@@165 ($generated@@8 ($generated@@364 $generated@@365 $generated@@366)) $generated@@46))
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@79)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@186) (= ($generated@@184 $generated@@369) (= ($generated@@367 $generated@@369) $generated@@65)))
 :pattern ( ($generated@@184 $generated@@369))
)))
(assert  (and (= (type $generated@@370) ($generated@@87 $generated@@88 $generated@@89)) (forall (($generated@@373 T@T) ) (! (= (type ($generated@@372 $generated@@373)) ($generated@@87 $generated@@373 $generated@@4))
 :pattern ( ($generated@@372 $generated@@373))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@75) (= (type $generated@@375) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@376) $generated@@146)) (and (and ($generated@@269 $generated@@375) ($generated@@165 $generated@@376 ($generated@@168 $generated@@374))) ($generated@@371 ($generated@@270 $generated@@374 $generated@@370 $generated@@376) ($generated@@372 $generated@@195)))) (= ($generated@@143 $generated@@374 $generated@@370 $generated@@376) ($generated@@143 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@143 $generated@@374 $generated@@370 $generated@@376) ($generated@@269 $generated@@375))
 :pattern ( ($generated@@143 $generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@186) ($generated@@184 $generated@@377)) (exists (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (and (and (= (type $generated@@378) $generated@@195) (= (type $generated@@379) $generated@@195)) (= $generated@@377 ($generated@@261 $generated@@378 $generated@@379)))
 :no-pattern (type $generated@@378)
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
)))
 :pattern ( ($generated@@184 $generated@@377))
)))
(assert  (and (and (forall (($generated@@384 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@384)) 18)) (forall (($generated@@385 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385))
))) (forall (($generated@@386 T@T) ) (! (= (type ($generated@@380 $generated@@386)) ($generated@@382 $generated@@386))
 :pattern ( ($generated@@380 $generated@@386))
))))
(assert (forall (($generated@@387 T@T) ) (! (= ($generated@@381 ($generated@@380 $generated@@387)) 0)
 :pattern ( ($generated@@380 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@2) (= ($generated@@165 $generated@@388 $generated@@162) (<= ($generated@@319 0) ($generated $generated@@388))))
 :pattern ( ($generated@@165 $generated@@388 $generated@@162))
)))
(assert ($generated@@269 $generated@@370))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@88)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@75) (= (type $generated@@393) $generated@@88)) ($generated@@165 ($generated@@389 $generated@@392 $generated@@393) ($generated@@156 $generated@@392)))
 :pattern ( ($generated@@389 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@75) (= (type $generated@@395) $generated@@88)) (= ($generated@@165 $generated@@395 ($generated@@179 $generated@@394))  (and ($generated@@165 $generated@@395 ($generated@@156 $generated@@394)) (not (= $generated@@395 $generated@@157)))))
 :pattern ( ($generated@@165 $generated@@395 ($generated@@179 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@75) (= (type $generated@@398) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@357 ($generated@@271 $generated@@396) $generated@@397 $generated@@398) ($generated@@85 $generated@@396 $generated@@397 $generated@@398)))
 :pattern ( ($generated@@357 ($generated@@271 $generated@@396) $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@399) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@400) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@401) $generated@@195)) (= (type $generated@@402) $generated@@75)) ($generated@@152 $generated@@399 $generated@@400)) ($generated@@357 $generated@@401 $generated@@402 $generated@@399)) ($generated@@357 $generated@@401 $generated@@402 $generated@@400))
 :pattern ( ($generated@@152 $generated@@399 $generated@@400) ($generated@@357 $generated@@401 $generated@@402 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@403) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@404) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@406) $generated@@75)) ($generated@@152 $generated@@403 $generated@@404)) ($generated@@85 $generated@@405 $generated@@406 $generated@@403)) ($generated@@85 $generated@@405 $generated@@406 $generated@@404))
 :pattern ( ($generated@@152 $generated@@403 $generated@@404) ($generated@@85 $generated@@405 $generated@@406 $generated@@403))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@87 $generated@@409 $generated@@2))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@90 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@87 $generated@@411 $generated@@2)) (and (= (= ($generated@@407 $generated@@410) 0) (= $generated@@410 ($generated@@408 $generated@@411))) (=> (not (= ($generated@@407 $generated@@410) 0)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (< 0 ($generated ($generated@@92 $generated@@410 $generated@@412))))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@80)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@75) (and (= ($generated@@83 ($generated@@168 $generated@@415)) $generated@@62) (= ($generated@@413 ($generated@@168 $generated@@415)) $generated@@70)))
 :pattern ( ($generated@@168 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@75) (and (= ($generated@@83 ($generated@@167 $generated@@416)) $generated@@63) (= ($generated@@413 ($generated@@167 $generated@@416)) $generated@@71)))
 :pattern ( ($generated@@167 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@75) (and (= ($generated@@83 ($generated@@174 $generated@@417)) $generated@@64) (= ($generated@@413 ($generated@@174 $generated@@417)) $generated@@72)))
 :pattern ( ($generated@@174 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (= (type $generated@@418) $generated@@75) (and (= ($generated@@83 ($generated@@156 $generated@@418)) $generated@@67) (= ($generated@@413 ($generated@@156 $generated@@418)) $generated@@74)))
 :pattern ( ($generated@@156 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@75) (and (= ($generated@@83 ($generated@@179 $generated@@419)) $generated@@68) (= ($generated@@413 ($generated@@179 $generated@@419)) $generated@@74)))
 :pattern ( ($generated@@179 $generated@@419))
)))
(assert  (and (and (and (and (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (= ($generated@@1 ($generated@@422 $generated@@425 $generated@@426)) 19)) (forall (($generated@@427 T@T) ($generated@@428 T@T) ) (! (= ($generated@@423 ($generated@@422 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@422 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (! (= ($generated@@424 ($generated@@422 $generated@@429 $generated@@430)) $generated@@430)
 :pattern ( ($generated@@422 $generated@@429 $generated@@430))
))) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@423 (type $generated@@431))))
(= (type ($generated@@420 $generated@@431)) ($generated@@87 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@431))
))) (forall (($generated@@433 T@T) ($generated@@434 T@T) ) (! (= (type ($generated@@421 $generated@@433 $generated@@434)) ($generated@@422 $generated@@433 $generated@@434))
 :pattern ( ($generated@@421 $generated@@433 $generated@@434))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@T) ) (! (let (($generated@@437 (type $generated@@435)))
 (not ($generated@@0 ($generated@@92 ($generated@@420 ($generated@@421 $generated@@437 $generated@@436)) $generated@@435))))
 :pattern ( (let (($generated@@437 (type $generated@@435)))
($generated@@92 ($generated@@420 ($generated@@421 $generated@@437 $generated@@436)) $generated@@435)))
)))
(assert  (and (and (and (and (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (= ($generated@@1 ($generated@@440 $generated@@443 $generated@@444)) 20)) (forall (($generated@@445 T@T) ($generated@@446 T@T) ) (! (= ($generated@@441 ($generated@@440 $generated@@445 $generated@@446)) $generated@@445)
 :pattern ( ($generated@@440 $generated@@445 $generated@@446))
))) (forall (($generated@@447 T@T) ($generated@@448 T@T) ) (! (= ($generated@@442 ($generated@@440 $generated@@447 $generated@@448)) $generated@@448)
 :pattern ( ($generated@@440 $generated@@447 $generated@@448))
))) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@441 (type $generated@@449))))
(= (type ($generated@@438 $generated@@449)) ($generated@@87 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@438 $generated@@449))
))) (forall (($generated@@451 T@T) ($generated@@452 T@T) ) (! (= (type ($generated@@439 $generated@@451 $generated@@452)) ($generated@@440 $generated@@451 $generated@@452))
 :pattern ( ($generated@@439 $generated@@451 $generated@@452))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@T) ) (! (let (($generated@@455 (type $generated@@453)))
 (not ($generated@@0 ($generated@@92 ($generated@@438 ($generated@@439 $generated@@455 $generated@@454)) $generated@@453))))
 :pattern ( (let (($generated@@455 (type $generated@@453)))
($generated@@92 ($generated@@438 ($generated@@439 $generated@@455 $generated@@454)) $generated@@453)))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@90 (type $generated@@456))))
 (=> (and (= (type $generated@@456) ($generated@@87 $generated@@458 $generated@@4)) (= (type $generated@@457) ($generated@@87 $generated@@458 $generated@@4))) (= ($generated@@371 $generated@@456 $generated@@457) (forall (($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@458) (= ($generated@@0 ($generated@@92 $generated@@456 $generated@@459)) ($generated@@0 ($generated@@92 $generated@@457 $generated@@459))))
 :pattern ( ($generated@@92 $generated@@456 $generated@@459))
 :pattern ( ($generated@@92 $generated@@457 $generated@@459))
)))))
 :pattern ( ($generated@@371 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@90 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@87 $generated@@461 $generated@@2)) (= ($generated@@201 $generated@@460) (forall (($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@461) (and (<= 0 ($generated ($generated@@92 $generated@@460 $generated@@462))) (<= ($generated ($generated@@92 $generated@@460 $generated@@462)) ($generated@@407 $generated@@460))))
 :pattern ( ($generated@@92 $generated@@460 $generated@@462))
)))))
 :pattern ( ($generated@@201 $generated@@460))
)))
(assert (forall (($generated@@464 T@T) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@464)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@195) ($generated@@262 $generated@@466 $generated@@162)) (and (= ($generated@@271 ($generated@@463 $generated@@2 $generated@@466)) $generated@@466) ($generated@@165 ($generated@@463 $generated@@2 $generated@@466) $generated@@162)))
 :pattern ( ($generated@@262 $generated@@466 $generated@@162))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@75)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@75) (= (type $generated@@470) $generated@@88)) (= ($generated@@165 $generated@@470 ($generated@@156 $generated@@469))  (or (= $generated@@470 $generated@@157) (= ($generated@@467 $generated@@470) ($generated@@156 $generated@@469)))))
 :pattern ( ($generated@@165 $generated@@470 ($generated@@156 $generated@@469)))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@424 (type $generated@@471))))
(let (($generated@@473 ($generated@@423 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@422 $generated@@473 $generated@@472)) (or (= $generated@@471 ($generated@@421 $generated@@473 $generated@@472)) (exists (($generated@@474 T@U) ) (!  (and (= (type $generated@@474) $generated@@473) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@471) $generated@@474)))
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@420 $generated@@471))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@424 (type $generated@@476))))
(= (type ($generated@@475 $generated@@476)) ($generated@@87 $generated@@477 $generated@@4)))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@424 (type $generated@@478))))
(let (($generated@@480 ($generated@@423 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@422 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@421 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ) (!  (and (= (type $generated@@481) $generated@@479) ($generated@@0 ($generated@@92 ($generated@@475 $generated@@478) $generated@@481)))
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@475 $generated@@478))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@442 (type $generated@@482))))
(let (($generated@@484 ($generated@@441 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@440 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@439 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ) (!  (and (= (type $generated@@485) $generated@@484) ($generated@@0 ($generated@@92 ($generated@@438 $generated@@482) $generated@@485)))
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@438 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@442 (type $generated@@487))))
(= (type ($generated@@486 $generated@@487)) ($generated@@87 $generated@@488 $generated@@4)))
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@442 (type $generated@@489))))
(let (($generated@@491 ($generated@@441 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@440 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@439 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ) (!  (and (= (type $generated@@492) $generated@@490) ($generated@@0 ($generated@@92 ($generated@@486 $generated@@489) $generated@@492)))
 :no-pattern (type $generated@@492)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
))))))
 :pattern ( ($generated@@486 $generated@@489))
)))
(assert  (=> (<= 1 $generated@@363) (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@494) $generated@@75) (= (type $generated@@495) $generated@@88)) (or ($generated@@493 $generated@@494 $generated@@495) (and (not (= 1 $generated@@363)) (and (not (= $generated@@495 $generated@@157)) ($generated@@165 $generated@@495 ($generated@@179 $generated@@494)))))) (= ($generated@@305 $generated@@494 $generated@@495) ($generated@@364 $generated@@494 $generated@@495)))
 :pattern ( ($generated@@305 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) ($generated@@87 $generated@@195 $generated@@2)) (= (type $generated@@497) $generated@@75)) (= ($generated@@165 $generated@@496 ($generated@@200 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@195) (< 0 ($generated ($generated@@92 $generated@@496 $generated@@498)))) ($generated@@262 $generated@@498 $generated@@497))
 :pattern ( ($generated@@92 $generated@@496 $generated@@498))
))))
 :pattern ( ($generated@@165 $generated@@496 ($generated@@200 $generated@@497)))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@500) $generated@@75)) (= (type $generated@@501) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@499 ($generated@@309 $generated@@500) $generated@@501) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@195) ($generated@@0 ($generated@@92 $generated@@499 $generated@@502))) ($generated@@357 $generated@@502 $generated@@500 $generated@@501))
 :pattern ( ($generated@@92 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@85 $generated@@499 ($generated@@309 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@87 $generated@@195 $generated@@4)) (= (type $generated@@504) $generated@@75)) (= (type $generated@@505) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@503 ($generated@@314 $generated@@504) $generated@@505) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@195) ($generated@@0 ($generated@@92 $generated@@503 $generated@@506))) ($generated@@357 $generated@@506 $generated@@504 $generated@@505))
 :pattern ( ($generated@@92 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@85 $generated@@503 ($generated@@314 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated ($generated@@92 ($generated@@408 $generated@@508) $generated@@507)) 0))
 :pattern ( (let (($generated@@508 (type $generated@@507)))
($generated@@92 ($generated@@408 $generated@@508) $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@75) (= (type $generated@@510) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@511) $generated@@146)) (and ($generated@@269 $generated@@510) ($generated@@165 $generated@@511 ($generated@@168 $generated@@509)))) (= ($generated@@371 ($generated@@270 $generated@@509 $generated@@370 $generated@@511) ($generated@@372 $generated@@195)) ($generated@@371 ($generated@@270 $generated@@509 $generated@@510 $generated@@511) ($generated@@372 $generated@@195))))
 :pattern ( ($generated@@270 $generated@@509 $generated@@370 $generated@@511) ($generated@@269 $generated@@510))
 :pattern ( ($generated@@270 $generated@@509 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) ($generated@@87 $generated@@195 $generated@@4))
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@424 (type $generated@@515))))
(let (($generated@@517 ($generated@@423 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515)) ($generated@@87 $generated@@517 $generated@@516))))
 :pattern ( ($generated@@513 $generated@@515))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@519) $generated@@195)) (= ($generated@@0 ($generated@@92 ($generated@@512 $generated@@518) $generated@@519))  (and ($generated@@0 ($generated@@92 ($generated@@420 $generated@@518) ($generated@@193 ($generated@@463 $generated@@186 $generated@@519)))) (= ($generated@@92 ($generated@@513 $generated@@518) ($generated@@193 ($generated@@463 $generated@@186 $generated@@519))) ($generated@@194 ($generated@@463 $generated@@186 $generated@@519))))))
 :pattern ( ($generated@@92 ($generated@@512 $generated@@518) $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) ($generated@@87 $generated@@195 $generated@@4))
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@442 (type $generated@@523))))
(let (($generated@@525 ($generated@@441 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523)) ($generated@@87 $generated@@525 $generated@@524))))
 :pattern ( ($generated@@521 $generated@@523))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@527) $generated@@195)) (= ($generated@@0 ($generated@@92 ($generated@@520 $generated@@526) $generated@@527))  (and ($generated@@0 ($generated@@92 ($generated@@438 $generated@@526) ($generated@@193 ($generated@@463 $generated@@186 $generated@@527)))) (= ($generated@@92 ($generated@@521 $generated@@526) ($generated@@193 ($generated@@463 $generated@@186 $generated@@527))) ($generated@@194 ($generated@@463 $generated@@186 $generated@@527))))))
 :pattern ( ($generated@@92 ($generated@@520 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(let (($generated@@531 ($generated@@423 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@422 $generated@@531 $generated@@530)) (= ($generated@@0 ($generated@@92 ($generated@@475 $generated@@528) $generated@@529)) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@531) (and ($generated@@0 ($generated@@92 ($generated@@420 $generated@@528) $generated@@532)) (= $generated@@529 ($generated@@92 ($generated@@513 $generated@@528) $generated@@532))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@528) $generated@@532))
 :pattern ( ($generated@@92 ($generated@@513 $generated@@528) $generated@@532))
))))))
 :pattern ( ($generated@@92 ($generated@@475 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(let (($generated@@536 ($generated@@441 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@440 $generated@@536 $generated@@535)) (= ($generated@@0 ($generated@@92 ($generated@@486 $generated@@533) $generated@@534)) (exists (($generated@@537 T@U) ) (!  (and (= (type $generated@@537) $generated@@536) (and ($generated@@0 ($generated@@92 ($generated@@438 $generated@@533) $generated@@537)) (= $generated@@534 ($generated@@92 ($generated@@521 $generated@@533) $generated@@537))))
 :pattern ( ($generated@@92 ($generated@@438 $generated@@533) $generated@@537))
 :pattern ( ($generated@@92 ($generated@@521 $generated@@533) $generated@@537))
))))))
 :pattern ( ($generated@@92 ($generated@@486 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@539 $generated@@540)) $generated@@75)
 :pattern ( ($generated@@538 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@542) $generated@@75)) (= (type $generated@@543) $generated@@75)) (= (type $generated@@544) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@541 ($generated@@538 $generated@@542 $generated@@543) $generated@@544) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@541) $generated@@545))) (and ($generated@@357 ($generated@@92 ($generated@@513 $generated@@541) $generated@@545) $generated@@543 $generated@@544) ($generated@@357 $generated@@545 $generated@@542 $generated@@544)))
 :pattern ( ($generated@@92 ($generated@@513 $generated@@541) $generated@@545))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@541) $generated@@545))
))))
 :pattern ( ($generated@@85 $generated@@541 ($generated@@538 $generated@@542 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (! (= (type ($generated@@546 $generated@@547 $generated@@548)) $generated@@75)
 :pattern ( ($generated@@546 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@550) $generated@@75)) (= (type $generated@@551) $generated@@75)) (= (type $generated@@552) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@549 ($generated@@546 $generated@@550 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@438 $generated@@549) $generated@@553))) (and ($generated@@357 ($generated@@92 ($generated@@521 $generated@@549) $generated@@553) $generated@@551 $generated@@552) ($generated@@357 $generated@@553 $generated@@550 $generated@@552)))
 :pattern ( ($generated@@92 ($generated@@521 $generated@@549) $generated@@553))
 :pattern ( ($generated@@92 ($generated@@438 $generated@@549) $generated@@553))
))))
 :pattern ( ($generated@@85 $generated@@549 ($generated@@546 $generated@@550 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 ($generated@@90 (type $generated@@554))))
 (=> (and (and (= (type $generated@@554) ($generated@@87 $generated@@556 $generated@@4)) (= (type $generated@@555) ($generated@@87 $generated@@556 $generated@@4))) ($generated@@371 $generated@@554 $generated@@555)) (= $generated@@554 $generated@@555)))
 :pattern ( ($generated@@371 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@557) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@558) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@559) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@557 $generated@@559))) (and ($generated@@152 $generated@@557 $generated@@558) ($generated@@152 $generated@@558 $generated@@559))) ($generated@@152 $generated@@557 $generated@@559))
 :pattern ( ($generated@@152 $generated@@557 $generated@@558) ($generated@@152 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@T) ) (! (= (type ($generated@@560 $generated@@561)) ($generated@@87 $generated@@561 $generated@@4))
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@442 (type $generated@@562))))
(let (($generated@@564 ($generated@@441 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@440 $generated@@564 $generated@@563)) (= (= $generated@@562 ($generated@@439 $generated@@564 $generated@@563)) (= ($generated@@438 $generated@@562) ($generated@@560 $generated@@564))))))
 :pattern ( ($generated@@438 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@442 (type $generated@@565))))
(let (($generated@@567 ($generated@@441 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@440 $generated@@567 $generated@@566)) (= (= $generated@@565 ($generated@@439 $generated@@567 $generated@@566)) (= ($generated@@486 $generated@@565) ($generated@@560 $generated@@566))))))
 :pattern ( ($generated@@486 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@442 (type $generated@@568))))
(let (($generated@@570 ($generated@@441 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@440 $generated@@570 $generated@@569)) (= (= $generated@@568 ($generated@@439 $generated@@570 $generated@@569)) (= ($generated@@520 $generated@@568) ($generated@@560 $generated@@195))))))
 :pattern ( ($generated@@520 $generated@@568))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@424 (type $generated@@571))))
(let (($generated@@573 ($generated@@423 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@422 $generated@@573 $generated@@572)) (or (= $generated@@571 ($generated@@421 $generated@@573 $generated@@572)) (exists (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (and (and (= (type $generated@@574) $generated@@195) (= (type $generated@@575) $generated@@195)) ($generated@@0 ($generated@@92 ($generated@@512 $generated@@571) ($generated@@271 ($generated@@261 $generated@@574 $generated@@575)))))
 :no-pattern (type $generated@@574)
 :no-pattern (type $generated@@575)
 :no-pattern ($generated $generated@@574)
 :no-pattern ($generated@@0 $generated@@574)
 :no-pattern ($generated $generated@@575)
 :no-pattern ($generated@@0 $generated@@575)
))))))
 :pattern ( ($generated@@512 $generated@@571))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@442 (type $generated@@576))))
(let (($generated@@578 ($generated@@441 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@440 $generated@@578 $generated@@577)) (or (= $generated@@576 ($generated@@439 $generated@@578 $generated@@577)) (exists (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (and (and (= (type $generated@@579) $generated@@195) (= (type $generated@@580) $generated@@195)) ($generated@@0 ($generated@@92 ($generated@@520 $generated@@576) ($generated@@271 ($generated@@261 $generated@@579 $generated@@580)))))
 :no-pattern (type $generated@@579)
 :no-pattern (type $generated@@580)
 :no-pattern ($generated $generated@@579)
 :no-pattern ($generated@@0 $generated@@579)
 :no-pattern ($generated $generated@@580)
 :no-pattern ($generated@@0 $generated@@580)
))))))
 :pattern ( ($generated@@520 $generated@@576))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@195) ($generated@@262 $generated@@581 $generated@@46)) (and (= ($generated@@271 ($generated@@463 $generated@@2 $generated@@581)) $generated@@581) ($generated@@165 ($generated@@463 $generated@@2 $generated@@581) $generated@@46)))
 :pattern ( ($generated@@262 $generated@@581 $generated@@46))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@195) ($generated@@262 $generated@@582 $generated@@47)) (and (= ($generated@@271 ($generated@@463 $generated@@3 $generated@@582)) $generated@@582) ($generated@@165 ($generated@@463 $generated@@3 $generated@@582) $generated@@47)))
 :pattern ( ($generated@@262 $generated@@582 $generated@@47))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@195) ($generated@@262 $generated@@583 $generated@@44)) (and (= ($generated@@271 ($generated@@463 $generated@@4 $generated@@583)) $generated@@583) ($generated@@165 ($generated@@463 $generated@@4 $generated@@583) $generated@@44)))
 :pattern ( ($generated@@262 $generated@@583 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@584) 21))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@195) ($generated@@262 $generated@@585 $generated@@45)) (and (= ($generated@@271 ($generated@@463 $generated@@584 $generated@@585)) $generated@@585) ($generated@@165 ($generated@@463 $generated@@584 $generated@@585) $generated@@45)))
 :pattern ( ($generated@@262 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@75) (= ($generated@@262 ($generated@@271 $generated@@586) $generated@@587) ($generated@@165 $generated@@586 $generated@@587)))
 :pattern ( ($generated@@262 ($generated@@271 $generated@@586) $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@90 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@87 $generated@@589 $generated@@2)) (<= 0 ($generated@@407 $generated@@588))))
 :pattern ( ($generated@@407 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 ($generated@@383 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@382 $generated@@591)) (<= 0 ($generated@@381 $generated@@590))))
 :pattern ( ($generated@@381 $generated@@590))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@75)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@75) (= (type $generated@@595) $generated@@75)) (= ($generated@@592 ($generated@@538 $generated@@594 $generated@@595)) $generated@@594))
 :pattern ( ($generated@@538 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ) (! (= (type ($generated@@596 $generated@@597)) $generated@@75)
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@75) (= (type $generated@@599) $generated@@75)) (= ($generated@@596 ($generated@@538 $generated@@598 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@538 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@75) (= (type $generated@@601) $generated@@75)) (= ($generated@@83 ($generated@@538 $generated@@600 $generated@@601)) $generated@@58))
 :pattern ( ($generated@@538 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@75)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@75) (= (type $generated@@605) $generated@@75)) (= ($generated@@602 ($generated@@546 $generated@@604 $generated@@605)) $generated@@604))
 :pattern ( ($generated@@546 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ) (! (= (type ($generated@@606 $generated@@607)) $generated@@75)
 :pattern ( ($generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@75) (= (type $generated@@609) $generated@@75)) (= ($generated@@606 ($generated@@546 $generated@@608 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@546 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@75) (= (type $generated@@611) $generated@@75)) (= ($generated@@83 ($generated@@546 $generated@@610 $generated@@611)) $generated@@59))
 :pattern ( ($generated@@546 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@195) (= (type $generated@@613) $generated@@195)) (= ($generated@@367 ($generated@@261 $generated@@612 $generated@@613)) $generated@@65))
 :pattern ( ($generated@@261 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@75)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@75) (= (type $generated@@617) $generated@@75)) (= ($generated@@614 ($generated@@185 $generated@@616 $generated@@617)) $generated@@616))
 :pattern ( ($generated@@185 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@75)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@75) (= (type $generated@@621) $generated@@75)) (= ($generated@@618 ($generated@@185 $generated@@620 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@185 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@195) (= (type $generated@@623) $generated@@195)) (= ($generated@@193 ($generated@@261 $generated@@622 $generated@@623)) $generated@@622))
 :pattern ( ($generated@@261 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@195) (= (type $generated@@625) $generated@@195)) (= ($generated@@194 ($generated@@261 $generated@@624 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@261 $generated@@624 $generated@@625))
)))
(assert  (and (forall (($generated@@628 T@U) ) (! (= (type ($generated@@626 $generated@@628)) $generated@@75)
 :pattern ( ($generated@@626 $generated@@628))
)) (forall (($generated@@629 T@U) ($generated@@630 Int) ) (! (let (($generated@@631 ($generated@@383 (type $generated@@629))))
(= (type ($generated@@627 $generated@@629 $generated@@630)) $generated@@631))
 :pattern ( ($generated@@627 $generated@@629 $generated@@630))
))))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@382 $generated@@195)) (= (type $generated@@633) $generated@@75)) (= (type $generated@@634) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@632 ($generated@@626 $generated@@633) $generated@@634) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@381 $generated@@632))) ($generated@@357 ($generated@@627 $generated@@632 $generated@@635) $generated@@633 $generated@@634))
 :pattern ( ($generated@@627 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@85 $generated@@632 ($generated@@626 $generated@@633) $generated@@634))
)))
(assert  (=> (<= 1 $generated@@363) (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@636) $generated@@75) (= (type $generated@@637) $generated@@88)) (or ($generated@@493 $generated@@636 ($generated@@321 $generated@@637)) (and (not (= 1 $generated@@363)) (and (not (= $generated@@637 $generated@@157)) ($generated@@165 $generated@@637 ($generated@@179 $generated@@636)))))) (= ($generated@@305 $generated@@636 ($generated@@321 $generated@@637)) ($generated@@364 $generated@@636 ($generated@@321 $generated@@637))))
 :weight 3
 :pattern ( ($generated@@305 $generated@@636 ($generated@@321 $generated@@637)))
))))
(assert (forall (($generated@@639 Int) ) (! (= ($generated@@638 ($generated@@86 $generated@@639)) $generated@@639)
 :pattern ( ($generated@@86 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ) (! (= (type ($generated@@640 $generated@@641)) $generated@@75)
 :pattern ( ($generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@75) (= ($generated@@640 ($generated@@309 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@309 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@75) (= ($generated@@83 ($generated@@309 $generated@@643)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ) (! (= (type ($generated@@644 $generated@@645)) $generated@@75)
 :pattern ( ($generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@75) (= ($generated@@644 ($generated@@314 $generated@@646)) $generated@@646))
 :pattern ( ($generated@@314 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@75) (= ($generated@@83 ($generated@@314 $generated@@647)) $generated@@55))
 :pattern ( ($generated@@314 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@75)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@75) (= ($generated@@648 ($generated@@200 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@200 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@75) (= ($generated@@83 ($generated@@200 $generated@@651)) $generated@@56))
 :pattern ( ($generated@@200 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@75)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@75) (= ($generated@@652 ($generated@@626 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@626 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@75) (= ($generated@@83 ($generated@@626 $generated@@655)) $generated@@57))
 :pattern ( ($generated@@626 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@75)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@75) (= ($generated@@656 ($generated@@168 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@168 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@75)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (= (type $generated@@661) $generated@@75) (= ($generated@@659 ($generated@@167 $generated@@661)) $generated@@661))
 :pattern ( ($generated@@167 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ) (! (= (type ($generated@@662 $generated@@663)) $generated@@75)
 :pattern ( ($generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ) (!  (=> (= (type $generated@@664) $generated@@75) (= ($generated@@662 ($generated@@174 $generated@@664)) $generated@@664))
 :pattern ( ($generated@@174 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ) (! (= (type ($generated@@665 $generated@@666)) $generated@@75)
 :pattern ( ($generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@75) (= ($generated@@665 ($generated@@156 $generated@@667)) $generated@@667))
 :pattern ( ($generated@@156 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ) (! (= (type ($generated@@668 $generated@@669)) $generated@@75)
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@75) (= ($generated@@668 ($generated@@179 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@179 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 (type $generated@@671)))
(= ($generated@@463 $generated@@672 ($generated@@271 $generated@@671)) $generated@@671))
 :pattern ( ($generated@@271 $generated@@671))
)))
(assert  (=> (<= 1 $generated@@363) (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) $generated@@75) (= (type $generated@@674) $generated@@88)) (or ($generated@@493 $generated@@673 $generated@@674) (and (not (= 1 $generated@@363)) (and (not (= $generated@@674 $generated@@157)) ($generated@@165 $generated@@674 ($generated@@179 $generated@@673)))))) true)
 :pattern ( ($generated@@305 $generated@@673 $generated@@674))
))))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (= (type $generated@@675) $generated@@75) (= (type $generated@@676) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@677) $generated@@88)) (and ($generated@@269 $generated@@676) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@676 $generated@@677) $generated@@60)))) ($generated@@85 ($generated@@8 ($generated@@364 $generated@@675 $generated@@677)) $generated@@46 $generated@@676))
 :pattern ( ($generated@@364 $generated@@675 $generated@@677) ($generated@@94 ($generated@@92 $generated@@676 $generated@@677) $generated@@60))
))))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@678) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@679) $generated@@75)) (= (type $generated@@680) $generated@@75)) (= ($generated@@165 $generated@@678 ($generated@@538 $generated@@679 $generated@@680)) (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@678) $generated@@681))) (and ($generated@@262 ($generated@@92 ($generated@@513 $generated@@678) $generated@@681) $generated@@680) ($generated@@262 $generated@@681 $generated@@679)))
 :pattern ( ($generated@@92 ($generated@@513 $generated@@678) $generated@@681))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@678) $generated@@681))
))))
 :pattern ( ($generated@@165 $generated@@678 ($generated@@538 $generated@@679 $generated@@680)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@683) $generated@@75)) (= (type $generated@@684) $generated@@75)) (= ($generated@@165 $generated@@682 ($generated@@546 $generated@@683 $generated@@684)) (forall (($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@685) $generated@@195) ($generated@@0 ($generated@@92 ($generated@@438 $generated@@682) $generated@@685))) (and ($generated@@262 ($generated@@92 ($generated@@521 $generated@@682) $generated@@685) $generated@@684) ($generated@@262 $generated@@685 $generated@@683)))
 :pattern ( ($generated@@92 ($generated@@521 $generated@@682) $generated@@685))
 :pattern ( ($generated@@92 ($generated@@438 $generated@@682) $generated@@685))
))))
 :pattern ( ($generated@@165 $generated@@682 ($generated@@546 $generated@@683 $generated@@684)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@195) (= (type $generated@@689) $generated@@195)) (< ($generated@@686 $generated@@688) ($generated@@687 ($generated@@261 $generated@@688 $generated@@689))))
 :pattern ( ($generated@@261 $generated@@688 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@195) (= (type $generated@@691) $generated@@195)) (< ($generated@@686 $generated@@691) ($generated@@687 ($generated@@261 $generated@@690 $generated@@691))))
 :pattern ( ($generated@@261 $generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (and (= (type $generated@@692) $generated@@195) (= (type $generated@@693) $generated@@75)) (= (type $generated@@694) $generated@@75)) ($generated@@262 $generated@@692 ($generated@@538 $generated@@693 $generated@@694))) (and (= ($generated@@271 ($generated@@463 ($generated@@422 $generated@@195 $generated@@195) $generated@@692)) $generated@@692) ($generated@@165 ($generated@@463 ($generated@@422 $generated@@195 $generated@@195) $generated@@692) ($generated@@538 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@262 $generated@@692 ($generated@@538 $generated@@693 $generated@@694)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@195) (= (type $generated@@696) $generated@@75)) (= (type $generated@@697) $generated@@75)) ($generated@@262 $generated@@695 ($generated@@546 $generated@@696 $generated@@697))) (and (= ($generated@@271 ($generated@@463 ($generated@@440 $generated@@195 $generated@@195) $generated@@695)) $generated@@695) ($generated@@165 ($generated@@463 ($generated@@440 $generated@@195 $generated@@195) $generated@@695) ($generated@@546 $generated@@696 $generated@@697))))
 :pattern ( ($generated@@262 $generated@@695 ($generated@@546 $generated@@696 $generated@@697)))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) $generated@@75) (= (type $generated@@699) $generated@@75)) (= (type $generated@@700) $generated@@195)) ($generated@@262 $generated@@700 ($generated@@185 $generated@@698 $generated@@699))) (and (= ($generated@@271 ($generated@@463 $generated@@186 $generated@@700)) $generated@@700) ($generated@@165 ($generated@@463 $generated@@186 $generated@@700) ($generated@@185 $generated@@698 $generated@@699))))
 :pattern ( ($generated@@262 $generated@@700 ($generated@@185 $generated@@698 $generated@@699)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) $generated@@146) (= (type $generated@@702) $generated@@75)) (= (type $generated@@703) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@269 $generated@@703)) (= ($generated@@85 $generated@@701 ($generated@@168 $generated@@702) $generated@@703)  (=> ($generated@@143 $generated@@702 $generated@@703 $generated@@701) (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@88) (=> (and (not (= $generated@@704 $generated@@157)) ($generated@@0 ($generated@@92 ($generated@@270 $generated@@702 $generated@@703 $generated@@701) ($generated@@271 $generated@@704)))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@703 $generated@@704) $generated@@60))))
 :pattern ( ($generated@@92 ($generated@@270 $generated@@702 $generated@@703 $generated@@701) ($generated@@271 $generated@@704)))
)))))
 :pattern ( ($generated@@85 $generated@@701 ($generated@@168 $generated@@702) $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ) (! (let (($generated@@706 (type $generated@@705)))
 (not ($generated@@0 ($generated@@92 ($generated@@372 $generated@@706) $generated@@705))))
 :pattern ( (let (($generated@@706 (type $generated@@705)))
($generated@@92 ($generated@@372 $generated@@706) $generated@@705)))
)))
(assert (forall (($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
 (not ($generated@@0 ($generated@@92 ($generated@@560 $generated@@708) $generated@@707))))
 :pattern ( (let (($generated@@708 (type $generated@@707)))
($generated@@92 ($generated@@560 $generated@@708) $generated@@707)))
)))
(assert  (=> (< 0 $generated@@363) (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) $generated@@75) (= (type $generated@@710) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@711) $generated@@88)) (and ($generated@@269 $generated@@710) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@710 $generated@@711) $generated@@60)))) ($generated@@85 ($generated@@389 $generated@@709 $generated@@711) ($generated@@156 $generated@@709) $generated@@710))
 :pattern ( ($generated@@389 $generated@@709 $generated@@711) ($generated@@94 ($generated@@92 $generated@@710 $generated@@711) $generated@@60))
))))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@75) (= (type $generated@@713) $generated@@146)) (= ($generated@@165 $generated@@713 ($generated@@174 $generated@@712))  (and ($generated@@165 $generated@@713 ($generated@@167 $generated@@712)) ($generated@@143 $generated@@712 $generated@@370 $generated@@713))))
 :pattern ( ($generated@@165 $generated@@713 ($generated@@174 $generated@@712)))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@75) (= (type $generated@@715) $generated@@75)) (and (= ($generated@@83 ($generated@@185 $generated@@714 $generated@@715)) $generated@@66) (= ($generated@@413 ($generated@@185 $generated@@714 $generated@@715)) $generated@@73)))
 :pattern ( ($generated@@185 $generated@@714 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@186) (= ($generated@@686 ($generated@@271 $generated@@716)) ($generated@@687 $generated@@716)))
 :pattern ( ($generated@@686 ($generated@@271 $generated@@716)))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@146) (= (type $generated@@718) $generated@@75)) (= ($generated@@165 $generated@@717 ($generated@@168 $generated@@718)) (forall (($generated@@719 T@U) ) (!  (=> (= (type $generated@@719) ($generated@@87 $generated@@88 $generated@@89)) (=> (and ($generated@@269 $generated@@719) ($generated@@143 $generated@@718 $generated@@719 $generated@@717)) ($generated@@262 ($generated@@290 $generated@@718 $generated@@719 $generated@@717) $generated@@718)))
 :pattern ( ($generated@@290 $generated@@718 $generated@@719 $generated@@717))
))))
 :pattern ( ($generated@@165 $generated@@717 ($generated@@168 $generated@@718)))
)))
(assert (forall (($generated@@720 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@195) ($generated@@262 $generated@@720 ($generated@@86 0))) (and (= ($generated@@271 ($generated@@463 $generated@@2 $generated@@720)) $generated@@720) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@720) ($generated@@86 0))))
 :pattern ( ($generated@@262 $generated@@720 ($generated@@86 0)))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@195) (= (type $generated@@722) $generated@@75)) ($generated@@262 $generated@@721 ($generated@@309 $generated@@722))) (and (= ($generated@@271 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@721)) $generated@@721) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@721) ($generated@@309 $generated@@722))))
 :pattern ( ($generated@@262 $generated@@721 ($generated@@309 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@723) $generated@@195) (= (type $generated@@724) $generated@@75)) ($generated@@262 $generated@@723 ($generated@@314 $generated@@724))) (and (= ($generated@@271 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@723)) $generated@@723) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@4) $generated@@723) ($generated@@314 $generated@@724))))
 :pattern ( ($generated@@262 $generated@@723 ($generated@@314 $generated@@724)))
)))
(assert (forall (($generated@@725 T@U) ($generated@@726 T@U) ) (!  (=> (and (and (= (type $generated@@725) $generated@@195) (= (type $generated@@726) $generated@@75)) ($generated@@262 $generated@@725 ($generated@@200 $generated@@726))) (and (= ($generated@@271 ($generated@@463 ($generated@@87 $generated@@195 $generated@@2) $generated@@725)) $generated@@725) ($generated@@165 ($generated@@463 ($generated@@87 $generated@@195 $generated@@2) $generated@@725) ($generated@@200 $generated@@726))))
 :pattern ( ($generated@@262 $generated@@725 ($generated@@200 $generated@@726)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (= (type $generated@@727) $generated@@195) (= (type $generated@@728) $generated@@75)) ($generated@@262 $generated@@727 ($generated@@626 $generated@@728))) (and (= ($generated@@271 ($generated@@463 ($generated@@382 $generated@@195) $generated@@727)) $generated@@727) ($generated@@165 ($generated@@463 ($generated@@382 $generated@@195) $generated@@727) ($generated@@626 $generated@@728))))
 :pattern ( ($generated@@262 $generated@@727 ($generated@@626 $generated@@728)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@75) (= (type $generated@@730) $generated@@195)) ($generated@@262 $generated@@730 ($generated@@168 $generated@@729))) (and (= ($generated@@271 ($generated@@463 $generated@@146 $generated@@730)) $generated@@730) ($generated@@165 ($generated@@463 $generated@@146 $generated@@730) ($generated@@168 $generated@@729))))
 :pattern ( ($generated@@262 $generated@@730 ($generated@@168 $generated@@729)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@731) $generated@@75) (= (type $generated@@732) $generated@@195)) ($generated@@262 $generated@@732 ($generated@@167 $generated@@731))) (and (= ($generated@@271 ($generated@@463 $generated@@146 $generated@@732)) $generated@@732) ($generated@@165 ($generated@@463 $generated@@146 $generated@@732) ($generated@@167 $generated@@731))))
 :pattern ( ($generated@@262 $generated@@732 ($generated@@167 $generated@@731)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (= (type $generated@@733) $generated@@75) (= (type $generated@@734) $generated@@195)) ($generated@@262 $generated@@734 ($generated@@174 $generated@@733))) (and (= ($generated@@271 ($generated@@463 $generated@@146 $generated@@734)) $generated@@734) ($generated@@165 ($generated@@463 $generated@@146 $generated@@734) ($generated@@174 $generated@@733))))
 :pattern ( ($generated@@262 $generated@@734 ($generated@@174 $generated@@733)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@75) (= (type $generated@@736) $generated@@195)) ($generated@@262 $generated@@736 ($generated@@156 $generated@@735))) (and (= ($generated@@271 ($generated@@463 $generated@@88 $generated@@736)) $generated@@736) ($generated@@165 ($generated@@463 $generated@@88 $generated@@736) ($generated@@156 $generated@@735))))
 :pattern ( ($generated@@262 $generated@@736 ($generated@@156 $generated@@735)))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (= (type $generated@@737) $generated@@75) (= (type $generated@@738) $generated@@195)) ($generated@@262 $generated@@738 ($generated@@179 $generated@@737))) (and (= ($generated@@271 ($generated@@463 $generated@@88 $generated@@738)) $generated@@738) ($generated@@165 ($generated@@463 $generated@@88 $generated@@738) ($generated@@179 $generated@@737))))
 :pattern ( ($generated@@262 $generated@@738 ($generated@@179 $generated@@737)))
)))
(assert (= ($generated@@83 $generated@@162) $generated@@61))
(assert (= ($generated@@413 $generated@@162) $generated@@69))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (= (type $generated@@739) ($generated@@87 $generated@@195 $generated@@2)) (= (type $generated@@740) $generated@@75)) (= (type $generated@@741) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@739 ($generated@@200 $generated@@740) $generated@@741) (forall (($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@195) (< 0 ($generated ($generated@@92 $generated@@739 $generated@@742)))) ($generated@@357 $generated@@742 $generated@@740 $generated@@741))
 :pattern ( ($generated@@92 $generated@@739 $generated@@742))
))))
 :pattern ( ($generated@@85 $generated@@739 ($generated@@200 $generated@@740) $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@743) $generated@@75) (= (type $generated@@744) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@745) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@195))) (= (type $generated@@746) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@747) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@195 $generated@@4)))) (= (type $generated@@748) $generated@@195)) (= ($generated@@0 ($generated@@92 ($generated@@270 $generated@@743 $generated@@744 ($generated@@291 $generated@@745 $generated@@746 $generated@@747)) $generated@@748)) ($generated@@0 ($generated@@92 ($generated@@92 $generated@@747 $generated@@744) $generated@@748))))
 :pattern ( ($generated@@92 ($generated@@270 $generated@@743 $generated@@744 ($generated@@291 $generated@@745 $generated@@746 $generated@@747)) $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (and (= (type $generated@@749) $generated@@75) (= (type $generated@@750) $generated@@88)) (= (type $generated@@751) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@305 $generated@@749 $generated@@750) ($generated ($generated@@463 $generated@@2 ($generated@@290 $generated@@46 $generated@@751 ($generated@@144 $generated@@749 $generated@@750))))))
 :pattern ( ($generated@@305 $generated@@749 $generated@@750) ($generated@@269 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@752) $generated@@146) (= (type $generated@@753) $generated@@75)) (= (type $generated@@754) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@269 $generated@@754) ($generated@@85 $generated@@752 ($generated@@168 $generated@@753) $generated@@754))) ($generated@@143 $generated@@753 $generated@@754 $generated@@752)) ($generated@@357 ($generated@@290 $generated@@753 $generated@@754 $generated@@752) $generated@@753 $generated@@754))
 :pattern ( ($generated@@85 $generated@@752 ($generated@@168 $generated@@753) $generated@@754))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (and (and (= (type $generated@@755) $generated@@186) (= (type $generated@@756) $generated@@75)) (= (type $generated@@757) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@269 $generated@@757) (and ($generated@@184 $generated@@755) (exists (($generated@@758 T@U) ) (!  (and (= (type $generated@@758) $generated@@75) ($generated@@85 $generated@@755 ($generated@@185 $generated@@756 $generated@@758) $generated@@757))
 :pattern ( ($generated@@85 $generated@@755 ($generated@@185 $generated@@756 $generated@@758) $generated@@757))
))))) ($generated@@357 ($generated@@193 $generated@@755) $generated@@756 $generated@@757))
 :pattern ( ($generated@@357 ($generated@@193 $generated@@755) $generated@@756 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ($generated@@761 T@U) ) (!  (=> (and (and (and (= (type $generated@@759) $generated@@186) (= (type $generated@@760) $generated@@75)) (= (type $generated@@761) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@269 $generated@@761) (and ($generated@@184 $generated@@759) (exists (($generated@@762 T@U) ) (!  (and (= (type $generated@@762) $generated@@75) ($generated@@85 $generated@@759 ($generated@@185 $generated@@762 $generated@@760) $generated@@761))
 :pattern ( ($generated@@85 $generated@@759 ($generated@@185 $generated@@762 $generated@@760) $generated@@761))
))))) ($generated@@357 ($generated@@194 $generated@@759) $generated@@760 $generated@@761))
 :pattern ( ($generated@@357 ($generated@@194 $generated@@759) $generated@@760 $generated@@761))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ($generated@@765 T@U) ) (!  (=> (and (and (and (= (type $generated@@763) $generated@@146) (= (type $generated@@764) $generated@@75)) (= (type $generated@@765) $generated@@75)) (and ($generated@@165 $generated@@763 ($generated@@168 $generated@@764)) (forall (($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@766) $generated@@195) ($generated@@262 $generated@@766 $generated@@764)) ($generated@@262 $generated@@766 $generated@@765))
 :pattern ( ($generated@@262 $generated@@766 $generated@@764))
 :pattern ( ($generated@@262 $generated@@766 $generated@@765))
)))) ($generated@@165 $generated@@763 ($generated@@168 $generated@@765)))
 :pattern ( ($generated@@165 $generated@@763 ($generated@@168 $generated@@764)) ($generated@@165 $generated@@763 ($generated@@168 $generated@@765)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@195) (= (type $generated@@768) $generated@@195)) (= ($generated@@261 ($generated@@321 $generated@@767) ($generated@@321 $generated@@768)) ($generated@@321 ($generated@@261 $generated@@767 $generated@@768))))
 :pattern ( ($generated@@261 ($generated@@321 $generated@@767) ($generated@@321 $generated@@768)))
)))
(assert (forall (($generated@@769 Int) ) (! (= ($generated@@271 ($generated@@8 ($generated@@319 $generated@@769))) ($generated@@321 ($generated@@271 ($generated@@8 $generated@@769))))
 :pattern ( ($generated@@271 ($generated@@8 ($generated@@319 $generated@@769))))
)))
(assert (forall (($generated@@770 T@U) ) (! (= ($generated@@271 ($generated@@321 $generated@@770)) ($generated@@321 ($generated@@271 $generated@@770)))
 :pattern ( ($generated@@271 ($generated@@321 $generated@@770)))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ) (!  (=> (and (and (= (type $generated@@771) $generated@@75) (= (type $generated@@772) $generated@@88)) (and (not (= $generated@@772 $generated@@157)) ($generated@@165 $generated@@772 ($generated@@179 $generated@@771)))) (= ($generated@@145 $generated@@771 $generated@@772) true))
 :pattern ( ($generated@@145 $generated@@771 $generated@@772))
)))
(assert (forall (($generated@@773 T@U) ) (! (let (($generated@@774 ($generated@@383 (type $generated@@773))))
 (=> (and (= (type $generated@@773) ($generated@@382 $generated@@774)) (= ($generated@@381 $generated@@773) 0)) (= $generated@@773 ($generated@@380 $generated@@774))))
 :pattern ( ($generated@@381 $generated@@773))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@775) $generated@@75) (= (type $generated@@776) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@777) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@195))) (= (type $generated@@778) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) $generated@@4))) (= (type $generated@@779) ($generated@@87 ($generated@@87 $generated@@88 $generated@@89) ($generated@@87 $generated@@195 $generated@@4)))) ($generated@@0 ($generated@@92 $generated@@778 $generated@@776))) ($generated@@143 $generated@@775 $generated@@776 ($generated@@291 $generated@@777 $generated@@778 $generated@@779)))
 :pattern ( ($generated@@143 $generated@@775 $generated@@776 ($generated@@291 $generated@@777 $generated@@778 $generated@@779)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ($generated@@782 T@U) ) (! (let (($generated@@783 (type $generated@@781)))
 (=> (and (and (= (type $generated@@780) ($generated@@87 $generated@@783 $generated@@2)) (= (type $generated@@782) $generated@@2)) (<= 0 ($generated $generated@@782))) (= ($generated@@407 ($generated@@93 $generated@@780 $generated@@781 $generated@@782)) (+ (- ($generated@@407 $generated@@780) ($generated ($generated@@92 $generated@@780 $generated@@781))) ($generated $generated@@782)))))
 :pattern ( ($generated@@407 ($generated@@93 $generated@@780 $generated@@781 $generated@@782)))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (= (type $generated@@784) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@785) $generated@@2)) ($generated@@85 $generated@@785 $generated@@46 $generated@@784))
 :pattern ( ($generated@@85 $generated@@785 $generated@@46 $generated@@784))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@786) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@787) $generated@@3)) ($generated@@85 $generated@@787 $generated@@47 $generated@@786))
 :pattern ( ($generated@@85 $generated@@787 $generated@@47 $generated@@786))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ) (!  (=> (and (= (type $generated@@788) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@789) $generated@@4)) ($generated@@85 $generated@@789 $generated@@44 $generated@@788))
 :pattern ( ($generated@@85 $generated@@789 $generated@@44 $generated@@788))
)))
(assert (forall (($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@790) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@791) $generated@@584)) ($generated@@85 $generated@@791 $generated@@45 $generated@@790))
 :pattern ( ($generated@@85 $generated@@791 $generated@@45 $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@793) $generated@@195)) ($generated@@85 $generated@@793 $generated@@48 $generated@@792))
 :pattern ( ($generated@@85 $generated@@793 $generated@@48 $generated@@792))
)))
(assert (forall (($generated@@794 T@U) ($generated@@795 T@U) ) (!  (=> (and (= (type $generated@@794) ($generated@@382 $generated@@195)) (= (type $generated@@795) $generated@@75)) (= ($generated@@165 $generated@@794 ($generated@@626 $generated@@795)) (forall (($generated@@796 Int) ) (!  (=> (and (<= 0 $generated@@796) (< $generated@@796 ($generated@@381 $generated@@794))) ($generated@@262 ($generated@@627 $generated@@794 $generated@@796) $generated@@795))
 :pattern ( ($generated@@627 $generated@@794 $generated@@796))
))))
 :pattern ( ($generated@@165 $generated@@794 ($generated@@626 $generated@@795)))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ) (!  (=> (and (= (type $generated@@797) $generated@@75) (= (type $generated@@798) $generated@@146)) (= ($generated@@165 $generated@@798 ($generated@@167 $generated@@797))  (and ($generated@@165 $generated@@798 ($generated@@168 $generated@@797)) ($generated@@371 ($generated@@270 $generated@@797 $generated@@370 $generated@@798) ($generated@@372 $generated@@195)))))
 :pattern ( ($generated@@165 $generated@@798 ($generated@@167 $generated@@797)))
)))
(assert (forall (($generated@@800 T@U) ($generated@@801 Int) ) (!  (=> (= (type $generated@@800) ($generated@@382 $generated@@195)) (=> (and (<= 0 $generated@@801) (< $generated@@801 ($generated@@381 $generated@@800))) (< ($generated@@687 ($generated@@463 $generated@@186 ($generated@@627 $generated@@800 $generated@@801))) ($generated@@799 $generated@@800))))
 :pattern ( ($generated@@687 ($generated@@463 $generated@@186 ($generated@@627 $generated@@800 $generated@@801))))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (and (= (type $generated@@802) ($generated@@422 $generated@@195 $generated@@195)) (= (type $generated@@803) $generated@@75)) (= (type $generated@@804) $generated@@75)) ($generated@@165 $generated@@802 ($generated@@538 $generated@@803 $generated@@804))) (and (and ($generated@@165 ($generated@@420 $generated@@802) ($generated@@309 $generated@@803)) ($generated@@165 ($generated@@475 $generated@@802) ($generated@@309 $generated@@804))) ($generated@@165 ($generated@@512 $generated@@802) ($generated@@309 ($generated@@185 $generated@@803 $generated@@804)))))
 :pattern ( ($generated@@165 $generated@@802 ($generated@@538 $generated@@803 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) ($generated@@440 $generated@@195 $generated@@195)) (= (type $generated@@806) $generated@@75)) (= (type $generated@@807) $generated@@75)) ($generated@@165 $generated@@805 ($generated@@546 $generated@@806 $generated@@807))) (and (and ($generated@@165 ($generated@@438 $generated@@805) ($generated@@314 $generated@@806)) ($generated@@165 ($generated@@486 $generated@@805) ($generated@@314 $generated@@807))) ($generated@@165 ($generated@@520 $generated@@805) ($generated@@314 ($generated@@185 $generated@@806 $generated@@807)))))
 :pattern ( ($generated@@165 $generated@@805 ($generated@@546 $generated@@806 $generated@@807)))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) $generated@@2) ($generated@@165 $generated@@808 $generated@@46))
 :pattern ( ($generated@@165 $generated@@808 $generated@@46))
)))
(assert (forall (($generated@@809 T@U) ) (!  (=> (= (type $generated@@809) $generated@@3) ($generated@@165 $generated@@809 $generated@@47))
 :pattern ( ($generated@@165 $generated@@809 $generated@@47))
)))
(assert (forall (($generated@@810 T@U) ) (!  (=> (= (type $generated@@810) $generated@@4) ($generated@@165 $generated@@810 $generated@@44))
 :pattern ( ($generated@@165 $generated@@810 $generated@@44))
)))
(assert (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@584) ($generated@@165 $generated@@811 $generated@@45))
 :pattern ( ($generated@@165 $generated@@811 $generated@@45))
)))
(assert (forall (($generated@@812 T@U) ) (!  (=> (= (type $generated@@812) $generated@@195) ($generated@@165 $generated@@812 $generated@@48))
 :pattern ( ($generated@@165 $generated@@812 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () Int)
(declare-fun $generated@@816 () Int)
(declare-fun $generated@@817 () Int)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 () T@U)
(declare-fun $generated@@821 (T@U) Bool)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@813) $generated@@75) (= (type $generated@@814) $generated@@88)) (= (type $generated@@818) $generated@@146)) (= (type $generated@@819) ($generated@@207 $generated@@88 $generated@@4))) (= (type $generated@@820) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@822) $generated@@146)) (= (type $generated@@823) $generated@@88)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@824  (=> (not (= ($generated@@364 $generated@@813 $generated@@814) ($generated@@319 17))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157))) (=> (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157)) (and (=> (= (ControlFlow 0 10) (- 0 12)) ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162)) (=> ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162) (=> (= $generated@@816 (- $generated@@815 1)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (<= 0 $generated@@815) (= $generated@@816 $generated@@815))) (=> (or (<= 0 $generated@@815) (= $generated@@816 $generated@@815)) (=> (= (ControlFlow 0 10) (- 0 9)) (< $generated@@816 $generated@@815))))))))))))
(let (($generated@@825  (=> (= ($generated@@364 $generated@@813 $generated@@814) ($generated@@319 17)) (and (=> (= (ControlFlow 0 3) (- 0 8)) (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157))) (=> (not (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157)) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162)) (=> ($generated@@165 ($generated@@8 (- $generated@@815 1)) $generated@@162) (=> (= $generated@@817 (- $generated@@815 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (not (= 1 $generated@@363))) (=> (not (= 1 $generated@@363)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@814 $generated@@157))) (=> (not (= $generated@@814 $generated@@157)) (=> (= $generated@@818 ($generated@@144 $generated@@813 $generated@@814)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 $generated@@815) (= $generated@@817 $generated@@815))) (=> (or (<= 0 $generated@@815) (= $generated@@817 $generated@@815)) (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@817 $generated@@815)))))))))))))))))
(let (($generated@@826  (=> (not (or (= $generated@@815 ($generated@@319 0)) (= ($generated@@389 $generated@@813 $generated@@814) $generated@@157))) (and (=> (= (ControlFlow 0 14) 3) $generated@@825) (=> (= (ControlFlow 0 14) 10) $generated@@824)))))
(let (($generated@@827 true))
(let (($generated@@828  (and (=> (= (ControlFlow 0 15) 1) $generated@@827) (=> (= (ControlFlow 0 15) 14) $generated@@826))))
(let (($generated@@829  (=> (and (= $generated@@815 ($generated@@319 0)) (= (ControlFlow 0 17) 15)) $generated@@828)))
(let (($generated@@830  (=> (and (not (= $generated@@815 ($generated@@319 0))) (= (ControlFlow 0 16) 15)) $generated@@828)))
(let (($generated@@831  (=> (= $generated@@819 ($generated@@206 $generated@@157 $generated@@820 $generated@@60 false)) (and (=> (= (ControlFlow 0 18) 16) $generated@@830) (=> (= (ControlFlow 0 18) 17) $generated@@829)))))
(let (($generated@@832  (=> (and ($generated@@269 $generated@@820) ($generated@@821 $generated@@820)) (=> (and (and (and (and (not (= $generated@@814 $generated@@157)) (and ($generated@@165 $generated@@814 ($generated@@179 $generated@@813)) ($generated@@85 $generated@@814 ($generated@@179 $generated@@813) $generated@@820))) (<= ($generated@@319 0) $generated@@815)) (and ($generated@@165 $generated@@822 ($generated@@174 $generated@@46)) ($generated@@85 $generated@@822 ($generated@@174 $generated@@46) $generated@@820))) (and (and (and ($generated@@165 $generated@@823 ($generated@@156 $generated@@813)) ($generated@@85 $generated@@823 ($generated@@156 $generated@@813) $generated@@820)) true) (and (= 2 $generated@@363) (= (ControlFlow 0 19) 18)))) $generated@@831))))
$generated@@832))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U) T@U)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@197 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@205 (T@U) T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@210 (T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@212 (T@T T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@278 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@290 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@302 () Int)
(declare-fun $generated@@303 (T@U T@U T@U Int T@U) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (Int) Int)
(declare-fun $generated@@306 (T@U) Bool)
(declare-fun $generated@@307 () T@T)
(declare-fun $generated@@308 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@309 (T@U T@U) T@U)
(declare-fun $generated@@310 (T@U T@U) Int)
(declare-fun $generated@@311 (T@T T@U) T@U)
(declare-fun $generated@@312 (T@U T@U T@U) T@U)
(declare-fun $generated@@327 (T@U T@U) T@U)
(declare-fun $generated@@328 (T@U T@U) Bool)
(declare-fun $generated@@335 (T@U T@U T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@355 (T@U T@U T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) Int)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U T@U) Bool)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@428 () T@U)
(declare-fun $generated@@429 (T@U T@U) Bool)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@439 (T@U) Int)
(declare-fun $generated@@440 (T@T) T@T)
(declare-fun $generated@@441 (T@T) T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@U) Int)
(declare-fun $generated@@474 (T@T) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@T T@T) T@U)
(declare-fun $generated@@488 (T@T T@T) T@T)
(declare-fun $generated@@489 (T@T) T@T)
(declare-fun $generated@@490 (T@T) T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@T T@T) T@U)
(declare-fun $generated@@506 (T@T T@T) T@T)
(declare-fun $generated@@507 (T@T) T@T)
(declare-fun $generated@@508 (T@T) T@T)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@557 (T@U T@U) Bool)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@570 () T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (Bool) T@U)
(declare-fun $generated@@585 (Bool) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@636 (T@U T@U) T@U)
(declare-fun $generated@@644 (T@U T@U) T@U)
(declare-fun $generated@@658 (T@T) T@U)
(declare-fun $generated@@682 () T@T)
(declare-fun $generated@@690 (T@U) T@U)
(declare-fun $generated@@694 (T@U) T@U)
(declare-fun $generated@@700 (T@U) T@U)
(declare-fun $generated@@704 (T@U) T@U)
(declare-fun $generated@@712 (T@U) T@U)
(declare-fun $generated@@716 (T@U) T@U)
(declare-fun $generated@@725 (T@U) T@U)
(declare-fun $generated@@726 (T@U Int) T@U)
(declare-fun $generated@@737 (T@U) Int)
(declare-fun $generated@@739 (T@U) T@U)
(declare-fun $generated@@743 (T@U) T@U)
(declare-fun $generated@@747 (T@U) T@U)
(declare-fun $generated@@751 (T@U) T@U)
(declare-fun $generated@@755 (T@U) T@U)
(declare-fun $generated@@758 (T@U) T@U)
(declare-fun $generated@@761 (T@U) T@U)
(declare-fun $generated@@764 (T@U) T@U)
(declare-fun $generated@@767 (T@U) T@U)
(declare-fun $generated@@785 (T@U) Int)
(declare-fun $generated@@786 (T@U) Int)
(declare-fun $generated@@918 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@77) 6) (= (type $generated@@44) $generated@@77)) (= (type $generated@@45) $generated@@77)) (= (type $generated@@46) $generated@@77)) (= (type $generated@@47) $generated@@77)) (= (type $generated@@48) $generated@@77)) (= ($generated@@1 $generated@@78) 7)) (= (type $generated@@49) $generated@@78)) (= (type $generated@@50) $generated@@78)) (= (type $generated@@51) $generated@@78)) (= (type $generated@@52) $generated@@78)) (= (type $generated@@53) $generated@@78)) (= (type $generated@@54) $generated@@78)) (= (type $generated@@55) $generated@@78)) (= (type $generated@@56) $generated@@78)) (= (type $generated@@57) $generated@@78)) (= (type $generated@@58) $generated@@78)) (= (type $generated@@59) $generated@@78)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@79 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@79 $generated@@84))
))) (= (type $generated@@60) ($generated@@79 $generated@@4))) (= (type $generated@@61) $generated@@78)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@78)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@78)) (= ($generated@@1 $generated@@81) 9)) (= (type $generated@@66) $generated@@81)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@78)) (= (type $generated@@69) $generated@@78)) (= ($generated@@1 $generated@@82) 10)) (= (type $generated@@70) $generated@@82)) (= (type $generated@@71) $generated@@82)) (= (type $generated@@72) $generated@@82)) (= (type $generated@@73) $generated@@82)) (= (type $generated@@74) $generated@@82)) (= (type $generated@@75) $generated@@82)) (= (type $generated@@76) $generated@@82)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76)
)
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@78)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 11)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 12)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@80 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@80 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@77)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@146 $generated@@149 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@77) (= (type $generated@@152) $generated@@90)) (= (type $generated@@153) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@145 $generated@@46 $generated@@153 ($generated@@146 $generated@@151 $generated@@152)) ($generated@@147 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@145 $generated@@46 $generated@@153 ($generated@@146 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@156) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@90) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@77)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@90)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@77) (= (type $generated@@162) $generated@@90)) (= (type $generated@@163) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@162 ($generated@@158 $generated@@161) $generated@@163)  (or (= $generated@@162 $generated@@159) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@162 ($generated@@158 $generated@@161) $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@77))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@2) (= (type $generated@@166) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@165 $generated@@164 $generated@@166))
 :pattern ( ($generated@@87 $generated@@165 $generated@@164 $generated@@166))
)))
(assert (= (type $generated@@167) $generated@@77))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@90) (= (type $generated@@169) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@168 $generated@@167 $generated@@169)  (or (= $generated@@168 $generated@@159) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@169 $generated@@168) $generated@@60)))))
 :pattern ( ($generated@@87 $generated@@168 $generated@@167 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@2) ($generated@@170 $generated@@171 ($generated@@88 0)))
 :pattern ( ($generated@@170 $generated@@171 ($generated@@88 0)))
)))
(assert  (and (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@77)
 :pattern ( ($generated@@172 $generated@@174))
)) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@77)
 :pattern ( ($generated@@173 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@77) (= (type $generated@@177) $generated@@148)) (= (type $generated@@178) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@177 ($generated@@172 $generated@@176) $generated@@178) ($generated@@87 $generated@@177 ($generated@@173 $generated@@176) $generated@@178)))
 :pattern ( ($generated@@87 $generated@@177 ($generated@@172 $generated@@176) $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@77)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@181) $generated@@77) (= (type $generated@@182) $generated@@148)) (= (type $generated@@183) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@182 ($generated@@179 $generated@@181) $generated@@183) ($generated@@87 $generated@@182 ($generated@@172 $generated@@181) $generated@@183)))
 :pattern ( ($generated@@87 $generated@@182 ($generated@@179 $generated@@181) $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@77)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@77) (= (type $generated@@187) $generated@@90)) (= (type $generated@@188) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@187 ($generated@@184 $generated@@186) $generated@@188) ($generated@@87 $generated@@187 ($generated@@158 $generated@@186) $generated@@188)))
 :pattern ( ($generated@@87 $generated@@187 ($generated@@184 $generated@@186) $generated@@188))
)))
(assert  (and (= ($generated@@1 $generated@@191) 15) (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@192 $generated@@193)) $generated@@77)
 :pattern ( ($generated@@190 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (and (= (type $generated@@194) $generated@@77) (= (type $generated@@195) $generated@@77)) (= (type $generated@@196) $generated@@191)) ($generated@@170 $generated@@196 ($generated@@190 $generated@@194 $generated@@195))) ($generated@@189 $generated@@196))
 :pattern ( ($generated@@189 $generated@@196) ($generated@@170 $generated@@196 ($generated@@190 $generated@@194 $generated@@195)))
)))
(assert  (and (and (= ($generated@@1 $generated@@200) 16) (forall (($generated@@201 T@U) ) (! (= (type ($generated@@198 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@198 $generated@@201))
))) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@202)) $generated@@200)
 :pattern ( ($generated@@199 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and (and (= (type $generated@@203) $generated@@191) (= (type $generated@@204) $generated@@191)) true) (= ($generated@@197 $generated@@203 $generated@@204)  (and (= ($generated@@198 $generated@@203) ($generated@@198 $generated@@204)) (= ($generated@@199 $generated@@203) ($generated@@199 $generated@@204)))))
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@207 T@U) ) (! (= (type ($generated@@205 $generated@@207)) $generated@@77)
 :pattern ( ($generated@@205 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and (and (= (type $generated@@208) ($generated@@89 $generated@@200 $generated@@2)) (= (type $generated@@209) $generated@@77)) ($generated@@170 $generated@@208 ($generated@@205 $generated@@209))) ($generated@@206 $generated@@208))
 :pattern ( ($generated@@170 $generated@@208 ($generated@@205 $generated@@209)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@1 ($generated@@212 $generated@@216 $generated@@217)) 17)) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@212 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@212 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@214 ($generated@@212 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@212 $generated@@220 $generated@@221))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@214 (type $generated@@222))))
(= (type ($generated@@210 $generated@@222 $generated@@223 $generated@@224)) $generated@@225))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 (type $generated@@229)))
(let (($generated@@231 (type $generated@@227)))
(= (type ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@212 $generated@@231 $generated@@230))))
 :pattern ( ($generated@@215 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@214 (type $generated@@232))))
 (=> (= (type $generated@@235) $generated@@236) (= ($generated@@210 ($generated@@215 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@233 $generated@@234) $generated@@235)))
 :weight 0
))) (and (and (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (or (= $generated@@239 $generated@@241) (= ($generated@@210 ($generated@@215 $generated@@238 $generated@@239 $generated@@240 $generated@@237) $generated@@241 $generated@@242) ($generated@@210 $generated@@238 $generated@@241 $generated@@242)))
 :weight 0
)) (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@210 ($generated@@215 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@210 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (or true (= ($generated@@210 ($generated@@215 $generated@@250 $generated@@251 $generated@@252 $generated@@249) $generated@@253 $generated@@254) ($generated@@210 $generated@@250 $generated@@253 $generated@@254)))
 :weight 0
)))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ) (! (= (type ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258)) ($generated@@212 $generated@@90 $generated@@4))
 :pattern ( ($generated@@211 $generated@@255 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Bool) ($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@80 (type $generated@@264))))
 (=> (and (and (and (and (= (type $generated@@259) $generated@@90) (= (type $generated@@260) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@261) ($generated@@79 $generated@@4))) (= (type $generated@@263) $generated@@90)) (= (type $generated@@264) ($generated@@79 $generated@@265))) (= ($generated@@0 ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))  (=> (and (not (= $generated@@263 $generated@@259)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@260 $generated@@263) $generated@@261))) $generated@@262))))
 :pattern ( ($generated@@210 ($generated@@211 $generated@@259 $generated@@260 $generated@@261 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ) (! (= (type ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270)) ($generated@@212 $generated@@90 $generated@@4))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 Bool) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@80 (type $generated@@276))))
 (=> (and (and (and (and (= (type $generated@@271) $generated@@90) (= (type $generated@@272) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@273) ($generated@@79 $generated@@4))) (= (type $generated@@275) $generated@@90)) (= (type $generated@@276) ($generated@@79 $generated@@277))) (= ($generated@@0 ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))  (=> (and (not (= $generated@@275 $generated@@271)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@272 $generated@@275) $generated@@273))) $generated@@274))))
 :pattern ( ($generated@@210 ($generated@@266 $generated@@271 $generated@@272 $generated@@273 $generated@@274) $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 Bool) ) (! (= (type ($generated@@278 $generated@@279 $generated@@280 $generated@@281 $generated@@282)) ($generated@@212 $generated@@90 $generated@@4))
 :pattern ( ($generated@@278 $generated@@279 $generated@@280 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 Bool) ($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@80 (type $generated@@288))))
 (=> (and (and (and (and (= (type $generated@@283) $generated@@90) (= (type $generated@@284) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@285) ($generated@@79 $generated@@4))) (= (type $generated@@287) $generated@@90)) (= (type $generated@@288) ($generated@@79 $generated@@289))) (= ($generated@@0 ($generated@@210 ($generated@@278 $generated@@283 $generated@@284 $generated@@285 $generated@@286) $generated@@287 $generated@@288))  (=> (and (not (= $generated@@287 $generated@@283)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@284 $generated@@287) $generated@@285))) $generated@@286))))
 :pattern ( ($generated@@210 ($generated@@278 $generated@@283 $generated@@284 $generated@@285 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 Bool) ) (! (= (type ($generated@@290 $generated@@291 $generated@@292 $generated@@293 $generated@@294)) ($generated@@212 $generated@@90 $generated@@4))
 :pattern ( ($generated@@290 $generated@@291 $generated@@292 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 Bool) ($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@80 (type $generated@@300))))
 (=> (and (and (and (and (= (type $generated@@295) $generated@@90) (= (type $generated@@296) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@297) ($generated@@79 $generated@@4))) (= (type $generated@@299) $generated@@90)) (= (type $generated@@300) ($generated@@79 $generated@@301))) (= ($generated@@0 ($generated@@210 ($generated@@290 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))  (=> (and (not (= $generated@@299 $generated@@295)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@296 $generated@@299) $generated@@297))) $generated@@298))))
 :pattern ( ($generated@@210 ($generated@@290 $generated@@295 $generated@@296 $generated@@297 $generated@@298) $generated@@299 $generated@@300))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@307) 18) (forall (($generated@@313 T@U) ) (! (= (type ($generated@@304 $generated@@313)) $generated@@307)
 :pattern ( ($generated@@304 $generated@@313))
))) (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (! (= (type ($generated@@309 $generated@@314 $generated@@315)) $generated@@90)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@U) ) (! (= (type ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@312 $generated@@318 $generated@@319 $generated@@320)) $generated@@200)
 :pattern ( ($generated@@312 $generated@@318 $generated@@319 $generated@@320))
))))
(assert  (=> (<= 2 $generated@@302) (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 Int) ($generated@@326 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@321) $generated@@77) (= (type $generated@@322) $generated@@307)) (= (type $generated@@323) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@324) $generated@@90)) (= (type $generated@@326) $generated@@148)) (or ($generated@@308 $generated@@321 $generated@@324 ($generated@@305 $generated@@325) $generated@@326) (and (not (= 2 $generated@@302)) (and (and (and ($generated@@306 $generated@@323) (and (not (= $generated@@324 $generated@@159)) (and ($generated@@170 $generated@@324 ($generated@@184 $generated@@321)) ($generated@@87 $generated@@324 ($generated@@184 $generated@@321) $generated@@323)))) (<= ($generated@@305 0) $generated@@325)) ($generated@@170 $generated@@326 ($generated@@179 $generated@@46)))))) (and (=> (not (or (= ($generated@@305 $generated@@325) ($generated@@305 0)) (= ($generated@@309 $generated@@321 $generated@@324) $generated@@159))) (and (=> (= ($generated@@310 $generated@@321 $generated@@324) ($generated@@305 17)) ($generated@@308 $generated@@321 ($generated@@309 $generated@@321 $generated@@324) ($generated@@305 (- $generated@@325 1)) ($generated@@146 $generated@@321 $generated@@324))) (=> (not (= ($generated@@310 $generated@@321 $generated@@324) ($generated@@305 17))) ($generated@@308 $generated@@321 ($generated@@309 $generated@@321 $generated@@324) ($generated@@305 (- $generated@@325 1)) $generated@@326)))) (= ($generated@@303 $generated@@321 ($generated@@304 $generated@@322) $generated@@324 ($generated@@305 $generated@@325) $generated@@326) (ite  (or (= ($generated@@305 $generated@@325) ($generated@@305 0)) (= ($generated@@309 $generated@@321 $generated@@324) $generated@@159)) ($generated ($generated@@311 $generated@@2 ($generated@@312 $generated@@46 $generated@@323 $generated@@326))) (ite (= ($generated@@310 $generated@@321 $generated@@324) ($generated@@305 17)) ($generated@@303 $generated@@321 ($generated@@304 $generated@@322) ($generated@@309 $generated@@321 $generated@@324) ($generated@@305 (- $generated@@325 1)) ($generated@@146 $generated@@321 $generated@@324)) ($generated@@303 $generated@@321 ($generated@@304 $generated@@322) ($generated@@309 $generated@@321 $generated@@324) ($generated@@305 (- $generated@@325 1)) $generated@@326))))))
 :weight 3
 :pattern ( ($generated@@303 $generated@@321 ($generated@@304 $generated@@322) $generated@@324 ($generated@@305 $generated@@325) $generated@@326) ($generated@@306 $generated@@323))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (= (type ($generated@@327 $generated@@329 $generated@@330)) $generated@@191)
 :pattern ( ($generated@@327 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (and (= (type $generated@@331) $generated@@77) (= (type $generated@@332) $generated@@77)) (= (type $generated@@333) $generated@@200)) (= (type $generated@@334) $generated@@200)) (= ($generated@@170 ($generated@@327 $generated@@333 $generated@@334) ($generated@@190 $generated@@331 $generated@@332))  (and ($generated@@328 $generated@@333 $generated@@331) ($generated@@328 $generated@@334 $generated@@332))))
 :pattern ( ($generated@@170 ($generated@@327 $generated@@333 $generated@@334) ($generated@@190 $generated@@331 $generated@@332)))
)))
(assert  (and (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (! (= (type ($generated@@335 $generated@@337 $generated@@338 $generated@@339)) ($generated@@89 $generated@@200 $generated@@4))
 :pattern ( ($generated@@335 $generated@@337 $generated@@338 $generated@@339))
)) (forall (($generated@@340 T@U) ) (! (= (type ($generated@@336 $generated@@340)) $generated@@200)
 :pattern ( ($generated@@336 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@341) $generated@@77) (= (type $generated@@342) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@343) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@344) $generated@@148)) (and (and (and ($generated@@154 $generated@@342 $generated@@343) (and ($generated@@306 $generated@@342) ($generated@@306 $generated@@343))) ($generated@@170 $generated@@344 ($generated@@173 $generated@@341))) (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@80 (type $generated@@346))))
 (=> (and (and (= (type $generated@@345) $generated@@90) (= (type $generated@@346) ($generated@@79 $generated@@347))) (and (not (= $generated@@345 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@341 $generated@@342 $generated@@344) ($generated@@336 $generated@@345))))) (= ($generated@@96 ($generated@@94 $generated@@342 $generated@@345) $generated@@346) ($generated@@96 ($generated@@94 $generated@@343 $generated@@345) $generated@@346))))
 :no-pattern (type $generated@@345)
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
)))) (= ($generated@@145 $generated@@341 $generated@@342 $generated@@344) ($generated@@145 $generated@@341 $generated@@343 $generated@@344)))
 :pattern ( ($generated@@154 $generated@@342 $generated@@343) ($generated@@145 $generated@@341 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@348) $generated@@77) (= (type $generated@@349) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@350) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@351) $generated@@148)) (and (and (and ($generated@@154 $generated@@349 $generated@@350) (and ($generated@@306 $generated@@349) ($generated@@306 $generated@@350))) ($generated@@170 $generated@@351 ($generated@@173 $generated@@348))) (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@80 (type $generated@@353))))
 (=> (and (and (= (type $generated@@352) $generated@@90) (= (type $generated@@353) ($generated@@79 $generated@@354))) (and (not (= $generated@@352 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@348 $generated@@350 $generated@@351) ($generated@@336 $generated@@352))))) (= ($generated@@96 ($generated@@94 $generated@@349 $generated@@352) $generated@@353) ($generated@@96 ($generated@@94 $generated@@350 $generated@@352) $generated@@353))))
 :no-pattern (type $generated@@352)
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
)))) (= ($generated@@145 $generated@@348 $generated@@349 $generated@@351) ($generated@@145 $generated@@348 $generated@@350 $generated@@351)))
 :pattern ( ($generated@@154 $generated@@349 $generated@@350) ($generated@@145 $generated@@348 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357 $generated@@358)) $generated@@148)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@359) $generated@@77) (= (type $generated@@360) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@361) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@200))) (= (type $generated@@362) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@4))) (= (type $generated@@363) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) ($generated@@89 $generated@@200 $generated@@4)))) (= ($generated@@312 $generated@@359 $generated@@360 ($generated@@355 $generated@@361 $generated@@362 $generated@@363)) ($generated@@94 $generated@@361 $generated@@360)))
 :pattern ( ($generated@@312 $generated@@359 $generated@@360 ($generated@@355 $generated@@361 $generated@@362 $generated@@363)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@191) (= (type $generated@@365) $generated@@191)) (= ($generated@@197 $generated@@364 $generated@@365) (= $generated@@364 $generated@@365)))
 :pattern ( ($generated@@197 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) $generated@@77) (= (type $generated@@368) $generated@@90)) (= (type $generated@@369) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@312 $generated@@46 $generated@@369 ($generated@@146 $generated@@367 $generated@@368)) ($generated@@336 ($generated@@8 ($generated@@366 $generated@@367 $generated@@368)))))
 :pattern ( ($generated@@312 $generated@@46 $generated@@369 ($generated@@146 $generated@@367 $generated@@368)))
)))
(assert (forall (($generated@@371 T@U) ) (! (= (type ($generated@@370 $generated@@371)) $generated@@77)
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@89 $generated@@200 $generated@@4)) (= (type $generated@@373) $generated@@77)) (= ($generated@@170 $generated@@372 ($generated@@370 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@200) ($generated@@0 ($generated@@94 $generated@@372 $generated@@374))) ($generated@@328 $generated@@374 $generated@@373))
 :pattern ( ($generated@@94 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@170 $generated@@372 ($generated@@370 $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (= (type ($generated@@375 $generated@@376)) $generated@@77)
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@89 $generated@@200 $generated@@4)) (= (type $generated@@378) $generated@@77)) (= ($generated@@170 $generated@@377 ($generated@@375 $generated@@378)) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@200) ($generated@@0 ($generated@@94 $generated@@377 $generated@@379))) ($generated@@328 $generated@@379 $generated@@378))
 :pattern ( ($generated@@94 $generated@@377 $generated@@379))
))))
 :pattern ( ($generated@@170 $generated@@377 ($generated@@375 $generated@@378)))
)))
(assert (forall (($generated@@380 Int) ) (! (= ($generated@@305 $generated@@380) $generated@@380)
 :pattern ( ($generated@@305 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= (type ($generated@@381 $generated@@382)) $generated@@383))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (= ($generated@@381 $generated@@384) $generated@@384)
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) $generated@@200) (= (type $generated@@386) $generated@@77)) (= (type $generated@@387) $generated@@90)) (= (type $generated@@388) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@0 ($generated@@94 ($generated@@335 $generated@@46 $generated@@388 ($generated@@146 $generated@@386 $generated@@387)) $generated@@385)) false))
 :pattern ( ($generated@@94 ($generated@@335 $generated@@46 $generated@@388 ($generated@@146 $generated@@386 $generated@@387)) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@389) $generated@@77) (= (type $generated@@390) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@391) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@392) $generated@@148)) (and (and (and ($generated@@154 $generated@@390 $generated@@391) (and ($generated@@306 $generated@@390) ($generated@@306 $generated@@391))) ($generated@@170 $generated@@392 ($generated@@173 $generated@@389))) (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@80 (type $generated@@394))))
 (=> (and (and (= (type $generated@@393) $generated@@90) (= (type $generated@@394) ($generated@@79 $generated@@395))) (and (not (= $generated@@393 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@389 $generated@@390 $generated@@392) ($generated@@336 $generated@@393))))) (= ($generated@@96 ($generated@@94 $generated@@390 $generated@@393) $generated@@394) ($generated@@96 ($generated@@94 $generated@@391 $generated@@393) $generated@@394))))
 :no-pattern (type $generated@@393)
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
)))) (= ($generated@@335 $generated@@389 $generated@@390 $generated@@392) ($generated@@335 $generated@@389 $generated@@391 $generated@@392)))
 :pattern ( ($generated@@154 $generated@@390 $generated@@391) ($generated@@335 $generated@@389 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@396) $generated@@77) (= (type $generated@@397) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@398) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@399) $generated@@148)) (and (and (and ($generated@@154 $generated@@397 $generated@@398) (and ($generated@@306 $generated@@397) ($generated@@306 $generated@@398))) ($generated@@170 $generated@@399 ($generated@@173 $generated@@396))) (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@80 (type $generated@@401))))
 (=> (and (and (= (type $generated@@400) $generated@@90) (= (type $generated@@401) ($generated@@79 $generated@@402))) (and (not (= $generated@@400 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@396 $generated@@398 $generated@@399) ($generated@@336 $generated@@400))))) (= ($generated@@96 ($generated@@94 $generated@@397 $generated@@400) $generated@@401) ($generated@@96 ($generated@@94 $generated@@398 $generated@@400) $generated@@401))))
 :no-pattern (type $generated@@400)
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
)))) (= ($generated@@335 $generated@@396 $generated@@397 $generated@@399) ($generated@@335 $generated@@396 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@154 $generated@@397 $generated@@398) ($generated@@335 $generated@@396 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@403) $generated@@77) (= (type $generated@@404) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@405) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@406) $generated@@148)) (and (and (and ($generated@@154 $generated@@404 $generated@@405) (and ($generated@@306 $generated@@404) ($generated@@306 $generated@@405))) ($generated@@170 $generated@@406 ($generated@@173 $generated@@403))) (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@80 (type $generated@@408))))
 (=> (and (and (= (type $generated@@407) $generated@@90) (= (type $generated@@408) ($generated@@79 $generated@@409))) (and (not (= $generated@@407 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@403 $generated@@404 $generated@@406) ($generated@@336 $generated@@407))))) (= ($generated@@96 ($generated@@94 $generated@@404 $generated@@407) $generated@@408) ($generated@@96 ($generated@@94 $generated@@405 $generated@@407) $generated@@408))))
 :no-pattern (type $generated@@407)
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
)))) (= ($generated@@312 $generated@@403 $generated@@404 $generated@@406) ($generated@@312 $generated@@403 $generated@@405 $generated@@406)))
 :pattern ( ($generated@@154 $generated@@404 $generated@@405) ($generated@@312 $generated@@403 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@410) $generated@@77) (= (type $generated@@411) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@412) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@413) $generated@@148)) (and (and (and ($generated@@154 $generated@@411 $generated@@412) (and ($generated@@306 $generated@@411) ($generated@@306 $generated@@412))) ($generated@@170 $generated@@413 ($generated@@173 $generated@@410))) (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@80 (type $generated@@415))))
 (=> (and (and (= (type $generated@@414) $generated@@90) (= (type $generated@@415) ($generated@@79 $generated@@416))) (and (not (= $generated@@414 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@410 $generated@@412 $generated@@413) ($generated@@336 $generated@@414))))) (= ($generated@@96 ($generated@@94 $generated@@411 $generated@@414) $generated@@415) ($generated@@96 ($generated@@94 $generated@@412 $generated@@414) $generated@@415))))
 :no-pattern (type $generated@@414)
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
)))) (= ($generated@@312 $generated@@410 $generated@@411 $generated@@413) ($generated@@312 $generated@@410 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@154 $generated@@411 $generated@@412) ($generated@@312 $generated@@410 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@418) $generated@@77) (= (type $generated@@419) $generated@@77)) (= (type $generated@@420) $generated@@200)) (= (type $generated@@421) $generated@@200)) (= (type $generated@@422) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@306 $generated@@422)) (= ($generated@@87 ($generated@@327 $generated@@420 $generated@@421) ($generated@@190 $generated@@418 $generated@@419) $generated@@422)  (and ($generated@@417 $generated@@420 $generated@@418 $generated@@422) ($generated@@417 $generated@@421 $generated@@419 $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@420 $generated@@421) ($generated@@190 $generated@@418 $generated@@419) $generated@@422))
)))
(assert  (=> (< 0 $generated@@302) (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@77) (= (type $generated@@424) $generated@@90)) ($generated@@170 ($generated@@8 ($generated@@310 $generated@@423 $generated@@424)) $generated@@46))
 :pattern ( ($generated@@310 $generated@@423 $generated@@424))
))))
(assert (forall (($generated@@426 T@U) ) (! (= (type ($generated@@425 $generated@@426)) $generated@@81)
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (= (type $generated@@427) $generated@@191) (= ($generated@@189 $generated@@427) (= ($generated@@425 $generated@@427) $generated@@66)))
 :pattern ( ($generated@@189 $generated@@427))
)))
(assert  (and (= (type $generated@@428) ($generated@@89 $generated@@90 $generated@@91)) (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@89 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) $generated@@77) (= (type $generated@@433) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@434) $generated@@148)) (and (and ($generated@@306 $generated@@433) ($generated@@170 $generated@@434 ($generated@@173 $generated@@432))) ($generated@@429 ($generated@@335 $generated@@432 $generated@@428 $generated@@434) ($generated@@430 $generated@@200)))) (= ($generated@@145 $generated@@432 $generated@@428 $generated@@434) ($generated@@145 $generated@@432 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@145 $generated@@432 $generated@@428 $generated@@434) ($generated@@306 $generated@@433))
 :pattern ( ($generated@@145 $generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@191) ($generated@@189 $generated@@435)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@200) (= (type $generated@@437) $generated@@200)) (= $generated@@435 ($generated@@327 $generated@@436 $generated@@437)))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
)))
 :pattern ( ($generated@@189 $generated@@435))
)))
(assert  (and (and (forall (($generated@@442 T@T) ) (= ($generated@@1 ($generated@@440 $generated@@442)) 19)) (forall (($generated@@443 T@T) ) (! (= ($generated@@441 ($generated@@440 $generated@@443)) $generated@@443)
 :pattern ( ($generated@@440 $generated@@443))
))) (forall (($generated@@444 T@T) ) (! (= (type ($generated@@438 $generated@@444)) ($generated@@440 $generated@@444))
 :pattern ( ($generated@@438 $generated@@444))
))))
(assert (forall (($generated@@445 T@T) ) (! (= ($generated@@439 ($generated@@438 $generated@@445)) 0)
 :pattern ( ($generated@@438 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@89 $generated@@200 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@89 $generated@@90 $generated@@4)) (= (type $generated@@449) $generated@@200)) (= ($generated@@0 ($generated@@94 ($generated@@446 $generated@@448) $generated@@449)) ($generated@@0 ($generated@@94 $generated@@448 ($generated@@311 $generated@@90 $generated@@449)))))
 :pattern ( ($generated@@94 ($generated@@446 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@93 (type $generated@@451))))
(= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@453))
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@93 (type $generated@@454))))
 (=> (and (= (type $generated@@454) ($generated@@89 $generated@@307 $generated@@456)) (= (type $generated@@455) $generated@@307)) (= ($generated@@450 $generated@@454 $generated@@455) ($generated@@94 $generated@@454 $generated@@455))))
 :pattern ( ($generated@@450 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@2) (= ($generated@@170 $generated@@457 $generated@@164) (<= ($generated@@305 0) ($generated $generated@@457))))
 :pattern ( ($generated@@170 $generated@@457 $generated@@164))
)))
(assert ($generated@@306 $generated@@428))
(assert  (=> (< 0 $generated@@302) (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@77) (= (type $generated@@459) $generated@@90)) ($generated@@170 ($generated@@309 $generated@@458 $generated@@459) ($generated@@158 $generated@@458)))
 :pattern ( ($generated@@309 $generated@@458 $generated@@459))
))))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@77) (= (type $generated@@461) $generated@@90)) (= ($generated@@170 $generated@@461 ($generated@@184 $generated@@460))  (and ($generated@@170 $generated@@461 ($generated@@158 $generated@@460)) (not (= $generated@@461 $generated@@159)))))
 :pattern ( ($generated@@170 $generated@@461 ($generated@@184 $generated@@460)))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@77) (= (type $generated@@464) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@417 ($generated@@336 $generated@@462) $generated@@463 $generated@@464) ($generated@@87 $generated@@462 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@417 ($generated@@336 $generated@@462) $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@465) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@466) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@467) $generated@@200)) (= (type $generated@@468) $generated@@77)) ($generated@@154 $generated@@465 $generated@@466)) ($generated@@417 $generated@@467 $generated@@468 $generated@@465)) ($generated@@417 $generated@@467 $generated@@468 $generated@@466))
 :pattern ( ($generated@@154 $generated@@465 $generated@@466) ($generated@@417 $generated@@467 $generated@@468 $generated@@465))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@469) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@470) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@472) $generated@@77)) ($generated@@154 $generated@@469 $generated@@470)) ($generated@@87 $generated@@471 $generated@@472 $generated@@469)) ($generated@@87 $generated@@471 $generated@@472 $generated@@470))
 :pattern ( ($generated@@154 $generated@@469 $generated@@470) ($generated@@87 $generated@@471 $generated@@472 $generated@@469))
)))
(assert (forall (($generated@@475 T@T) ) (! (= (type ($generated@@474 $generated@@475)) ($generated@@89 $generated@@475 $generated@@2))
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@92 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@89 $generated@@477 $generated@@2)) (and (= (= ($generated@@473 $generated@@476) 0) (= $generated@@476 ($generated@@474 $generated@@477))) (=> (not (= ($generated@@473 $generated@@476) 0)) (exists (($generated@@478 T@U) ) (!  (and (= (type $generated@@478) $generated@@477) (< 0 ($generated ($generated@@94 $generated@@476 $generated@@478))))
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@473 $generated@@476))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@82)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@77) (and (= ($generated@@85 ($generated@@173 $generated@@481)) $generated@@63) (= ($generated@@479 ($generated@@173 $generated@@481)) $generated@@72)))
 :pattern ( ($generated@@173 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@77) (and (= ($generated@@85 ($generated@@172 $generated@@482)) $generated@@64) (= ($generated@@479 ($generated@@172 $generated@@482)) $generated@@73)))
 :pattern ( ($generated@@172 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@77) (and (= ($generated@@85 ($generated@@179 $generated@@483)) $generated@@65) (= ($generated@@479 ($generated@@179 $generated@@483)) $generated@@74)))
 :pattern ( ($generated@@179 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@77) (and (= ($generated@@85 ($generated@@158 $generated@@484)) $generated@@68) (= ($generated@@479 ($generated@@158 $generated@@484)) $generated@@76)))
 :pattern ( ($generated@@158 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@77) (and (= ($generated@@85 ($generated@@184 $generated@@485)) $generated@@69) (= ($generated@@479 ($generated@@184 $generated@@485)) $generated@@76)))
 :pattern ( ($generated@@184 $generated@@485))
)))
(assert  (and (and (and (and (forall (($generated@@491 T@T) ($generated@@492 T@T) ) (= ($generated@@1 ($generated@@488 $generated@@491 $generated@@492)) 20)) (forall (($generated@@493 T@T) ($generated@@494 T@T) ) (! (= ($generated@@489 ($generated@@488 $generated@@493 $generated@@494)) $generated@@493)
 :pattern ( ($generated@@488 $generated@@493 $generated@@494))
))) (forall (($generated@@495 T@T) ($generated@@496 T@T) ) (! (= ($generated@@490 ($generated@@488 $generated@@495 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@488 $generated@@495 $generated@@496))
))) (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@489 (type $generated@@497))))
(= (type ($generated@@486 $generated@@497)) ($generated@@89 $generated@@498 $generated@@4)))
 :pattern ( ($generated@@486 $generated@@497))
))) (forall (($generated@@499 T@T) ($generated@@500 T@T) ) (! (= (type ($generated@@487 $generated@@499 $generated@@500)) ($generated@@488 $generated@@499 $generated@@500))
 :pattern ( ($generated@@487 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@T) ) (! (let (($generated@@503 (type $generated@@501)))
 (not ($generated@@0 ($generated@@94 ($generated@@486 ($generated@@487 $generated@@503 $generated@@502)) $generated@@501))))
 :pattern ( (let (($generated@@503 (type $generated@@501)))
($generated@@94 ($generated@@486 ($generated@@487 $generated@@503 $generated@@502)) $generated@@501)))
)))
(assert  (and (and (and (and (forall (($generated@@509 T@T) ($generated@@510 T@T) ) (= ($generated@@1 ($generated@@506 $generated@@509 $generated@@510)) 21)) (forall (($generated@@511 T@T) ($generated@@512 T@T) ) (! (= ($generated@@507 ($generated@@506 $generated@@511 $generated@@512)) $generated@@511)
 :pattern ( ($generated@@506 $generated@@511 $generated@@512))
))) (forall (($generated@@513 T@T) ($generated@@514 T@T) ) (! (= ($generated@@508 ($generated@@506 $generated@@513 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@506 $generated@@513 $generated@@514))
))) (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@507 (type $generated@@515))))
(= (type ($generated@@504 $generated@@515)) ($generated@@89 $generated@@516 $generated@@4)))
 :pattern ( ($generated@@504 $generated@@515))
))) (forall (($generated@@517 T@T) ($generated@@518 T@T) ) (! (= (type ($generated@@505 $generated@@517 $generated@@518)) ($generated@@506 $generated@@517 $generated@@518))
 :pattern ( ($generated@@505 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@T) ) (! (let (($generated@@521 (type $generated@@519)))
 (not ($generated@@0 ($generated@@94 ($generated@@504 ($generated@@505 $generated@@521 $generated@@520)) $generated@@519))))
 :pattern ( (let (($generated@@521 (type $generated@@519)))
($generated@@94 ($generated@@504 ($generated@@505 $generated@@521 $generated@@520)) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@92 (type $generated@@522))))
 (=> (and (= (type $generated@@522) ($generated@@89 $generated@@524 $generated@@4)) (= (type $generated@@523) ($generated@@89 $generated@@524 $generated@@4))) (= ($generated@@429 $generated@@522 $generated@@523) (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@524) (= ($generated@@0 ($generated@@94 $generated@@522 $generated@@525)) ($generated@@0 ($generated@@94 $generated@@523 $generated@@525))))
 :pattern ( ($generated@@94 $generated@@522 $generated@@525))
 :pattern ( ($generated@@94 $generated@@523 $generated@@525))
)))))
 :pattern ( ($generated@@429 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@92 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@89 $generated@@527 $generated@@2)) (= ($generated@@206 $generated@@526) (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@527) (and (<= 0 ($generated ($generated@@94 $generated@@526 $generated@@528))) (<= ($generated ($generated@@94 $generated@@526 $generated@@528)) ($generated@@473 $generated@@526))))
 :pattern ( ($generated@@94 $generated@@526 $generated@@528))
)))))
 :pattern ( ($generated@@206 $generated@@526))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@200) ($generated@@328 $generated@@529 $generated@@164)) (and (= ($generated@@336 ($generated@@311 $generated@@2 $generated@@529)) $generated@@529) ($generated@@170 ($generated@@311 $generated@@2 $generated@@529) $generated@@164)))
 :pattern ( ($generated@@328 $generated@@529 $generated@@164))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@200) ($generated@@328 $generated@@530 $generated@@167)) (and (= ($generated@@336 ($generated@@311 $generated@@90 $generated@@530)) $generated@@530) ($generated@@170 ($generated@@311 $generated@@90 $generated@@530) $generated@@167)))
 :pattern ( ($generated@@328 $generated@@530 $generated@@167))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@77)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@77) (= (type $generated@@534) $generated@@90)) (= ($generated@@170 $generated@@534 ($generated@@158 $generated@@533))  (or (= $generated@@534 $generated@@159) (= ($generated@@531 $generated@@534) ($generated@@158 $generated@@533)))))
 :pattern ( ($generated@@170 $generated@@534 ($generated@@158 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 ($generated@@490 (type $generated@@535))))
(let (($generated@@537 ($generated@@489 (type $generated@@535))))
 (=> (= (type $generated@@535) ($generated@@488 $generated@@537 $generated@@536)) (or (= $generated@@535 ($generated@@487 $generated@@537 $generated@@536)) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@537) ($generated@@0 ($generated@@94 ($generated@@486 $generated@@535) $generated@@538)))
 :no-pattern (type $generated@@538)
 :no-pattern ($generated $generated@@538)
 :no-pattern ($generated@@0 $generated@@538)
))))))
 :pattern ( ($generated@@486 $generated@@535))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@490 (type $generated@@540))))
(= (type ($generated@@539 $generated@@540)) ($generated@@89 $generated@@541 $generated@@4)))
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@490 (type $generated@@542))))
(let (($generated@@544 ($generated@@489 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@488 $generated@@544 $generated@@543)) (or (= $generated@@542 ($generated@@487 $generated@@544 $generated@@543)) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@543) ($generated@@0 ($generated@@94 ($generated@@539 $generated@@542) $generated@@545)))
 :no-pattern (type $generated@@545)
 :no-pattern ($generated $generated@@545)
 :no-pattern ($generated@@0 $generated@@545)
))))))
 :pattern ( ($generated@@539 $generated@@542))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@508 (type $generated@@546))))
(let (($generated@@548 ($generated@@507 (type $generated@@546))))
 (=> (= (type $generated@@546) ($generated@@506 $generated@@548 $generated@@547)) (or (= $generated@@546 ($generated@@505 $generated@@548 $generated@@547)) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@548) ($generated@@0 ($generated@@94 ($generated@@504 $generated@@546) $generated@@549)))
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))))))
 :pattern ( ($generated@@504 $generated@@546))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@508 (type $generated@@551))))
(= (type ($generated@@550 $generated@@551)) ($generated@@89 $generated@@552 $generated@@4)))
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@508 (type $generated@@553))))
(let (($generated@@555 ($generated@@507 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@506 $generated@@555 $generated@@554)) (or (= $generated@@553 ($generated@@505 $generated@@555 $generated@@554)) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@554) ($generated@@0 ($generated@@94 ($generated@@550 $generated@@553) $generated@@556)))
 :no-pattern (type $generated@@556)
 :no-pattern ($generated $generated@@556)
 :no-pattern ($generated@@0 $generated@@556)
))))))
 :pattern ( ($generated@@550 $generated@@553))
)))
(assert  (=> (<= 1 $generated@@302) (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@77) (= (type $generated@@559) $generated@@90)) (or ($generated@@557 $generated@@558 $generated@@559) (and (not (= 1 $generated@@302)) (and (not (= $generated@@559 $generated@@159)) ($generated@@170 $generated@@559 ($generated@@184 $generated@@558)))))) (= ($generated@@366 $generated@@558 $generated@@559) ($generated@@310 $generated@@558 $generated@@559)))
 :pattern ( ($generated@@366 $generated@@558 $generated@@559))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@89 $generated@@200 $generated@@2)) (= (type $generated@@561) $generated@@77)) (= ($generated@@170 $generated@@560 ($generated@@205 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@200) (< 0 ($generated ($generated@@94 $generated@@560 $generated@@562)))) ($generated@@328 $generated@@562 $generated@@561))
 :pattern ( ($generated@@94 $generated@@560 $generated@@562))
))))
 :pattern ( ($generated@@170 $generated@@560 ($generated@@205 $generated@@561)))
)))
(assert  (=> (<= 2 $generated@@302) (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 Int) ($generated@@568 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@563) $generated@@77) (= (type $generated@@564) $generated@@307)) (= (type $generated@@565) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@566) $generated@@90)) (= (type $generated@@568) $generated@@148)) (or ($generated@@308 $generated@@563 $generated@@566 $generated@@567 $generated@@568) (and (not (= 2 $generated@@302)) (and (and (and ($generated@@306 $generated@@565) (and (not (= $generated@@566 $generated@@159)) (and ($generated@@170 $generated@@566 ($generated@@184 $generated@@563)) ($generated@@87 $generated@@566 ($generated@@184 $generated@@563) $generated@@565)))) (<= ($generated@@305 0) $generated@@567)) ($generated@@170 $generated@@568 ($generated@@179 $generated@@46)))))) (and (=> (not (or (= $generated@@567 ($generated@@305 0)) (= ($generated@@309 $generated@@563 $generated@@566) $generated@@159))) (and (=> (= ($generated@@310 $generated@@563 $generated@@566) ($generated@@305 17)) ($generated@@308 $generated@@563 ($generated@@309 $generated@@563 $generated@@566) (- $generated@@567 1) ($generated@@146 $generated@@563 $generated@@566))) (=> (not (= ($generated@@310 $generated@@563 $generated@@566) ($generated@@305 17))) ($generated@@308 $generated@@563 ($generated@@309 $generated@@563 $generated@@566) (- $generated@@567 1) $generated@@568)))) (= ($generated@@303 $generated@@563 ($generated@@304 $generated@@564) $generated@@566 $generated@@567 $generated@@568) (ite  (or (= $generated@@567 ($generated@@305 0)) (= ($generated@@309 $generated@@563 $generated@@566) $generated@@159)) ($generated ($generated@@311 $generated@@2 ($generated@@312 $generated@@46 $generated@@565 $generated@@568))) (ite (= ($generated@@310 $generated@@563 $generated@@566) ($generated@@305 17)) ($generated@@303 $generated@@563 $generated@@564 ($generated@@309 $generated@@563 $generated@@566) (- $generated@@567 1) ($generated@@146 $generated@@563 $generated@@566)) ($generated@@303 $generated@@563 $generated@@564 ($generated@@309 $generated@@563 $generated@@566) (- $generated@@567 1) $generated@@568))))))
 :pattern ( ($generated@@303 $generated@@563 ($generated@@304 $generated@@564) $generated@@566 $generated@@567 $generated@@568) ($generated@@306 $generated@@565))
))))
(assert  (and (forall (($generated@@571 T@U) ) (! (= (type ($generated@@569 $generated@@571)) $generated@@307)
 :pattern ( ($generated@@569 $generated@@571))
)) (= (type $generated@@570) $generated@@307)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 Int) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@77) (= (type $generated@@573) $generated@@307)) (= (type $generated@@574) $generated@@90)) (= (type $generated@@576) $generated@@148)) (= ($generated@@303 $generated@@572 $generated@@573 $generated@@574 $generated@@575 $generated@@576) ($generated@@303 $generated@@572 $generated@@570 $generated@@574 $generated@@575 $generated@@576)))
 :pattern ( ($generated@@303 $generated@@572 ($generated@@569 $generated@@573) $generated@@574 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@200))
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@200) (= (type $generated@@580) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@94 ($generated@@577 $generated@@579) $generated@@580) $generated@@579))
 :pattern ( ($generated@@94 ($generated@@577 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 Bool) ) (! (= (type ($generated@@581 $generated@@582)) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@4))
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 Bool) ($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) ($generated@@89 $generated@@90 $generated@@91)) (= ($generated@@0 ($generated@@94 ($generated@@581 $generated@@583) $generated@@584)) $generated@@583))
 :pattern ( ($generated@@94 ($generated@@581 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 Bool) ) (! (= (type ($generated@@585 $generated@@586)) ($generated@@89 $generated@@90 $generated@@4))
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 Bool) ($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@90) (= ($generated@@0 ($generated@@94 ($generated@@585 $generated@@587) $generated@@588)) $generated@@587))
 :pattern ( ($generated@@94 ($generated@@585 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) ($generated@@89 $generated@@200 $generated@@4)))
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@89 $generated@@200 $generated@@4)) (= (type $generated@@592) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@94 ($generated@@589 $generated@@591) $generated@@592) $generated@@591))
 :pattern ( ($generated@@94 ($generated@@589 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) ($generated@@89 $generated@@307 $generated@@148))
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@148) (= (type $generated@@596) $generated@@307)) (= ($generated@@94 ($generated@@593 $generated@@595) $generated@@596) $generated@@595))
 :pattern ( ($generated@@94 ($generated@@593 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@597) ($generated@@89 $generated@@200 $generated@@4)) (= (type $generated@@598) $generated@@77)) (= (type $generated@@599) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@597 ($generated@@370 $generated@@598) $generated@@599) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@200) ($generated@@0 ($generated@@94 $generated@@597 $generated@@600))) ($generated@@417 $generated@@600 $generated@@598 $generated@@599))
 :pattern ( ($generated@@94 $generated@@597 $generated@@600))
))))
 :pattern ( ($generated@@87 $generated@@597 ($generated@@370 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@89 $generated@@200 $generated@@4)) (= (type $generated@@602) $generated@@77)) (= (type $generated@@603) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@601 ($generated@@375 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@200) ($generated@@0 ($generated@@94 $generated@@601 $generated@@604))) ($generated@@417 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@94 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@87 $generated@@601 ($generated@@375 $generated@@602) $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
(= ($generated ($generated@@94 ($generated@@474 $generated@@606) $generated@@605)) 0))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@94 ($generated@@474 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@77) (= (type $generated@@608) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@609) $generated@@148)) (and ($generated@@306 $generated@@608) ($generated@@170 $generated@@609 ($generated@@173 $generated@@607)))) (= ($generated@@429 ($generated@@335 $generated@@607 $generated@@428 $generated@@609) ($generated@@430 $generated@@200)) ($generated@@429 ($generated@@335 $generated@@607 $generated@@608 $generated@@609) ($generated@@430 $generated@@200))))
 :pattern ( ($generated@@335 $generated@@607 $generated@@428 $generated@@609) ($generated@@306 $generated@@608))
 :pattern ( ($generated@@335 $generated@@607 $generated@@608 $generated@@609))
)))
(assert  (and (forall (($generated@@612 T@U) ) (! (= (type ($generated@@610 $generated@@612)) ($generated@@89 $generated@@200 $generated@@4))
 :pattern ( ($generated@@610 $generated@@612))
)) (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@490 (type $generated@@613))))
(let (($generated@@615 ($generated@@489 (type $generated@@613))))
(= (type ($generated@@611 $generated@@613)) ($generated@@89 $generated@@615 $generated@@614))))
 :pattern ( ($generated@@611 $generated@@613))
))))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@488 $generated@@200 $generated@@200)) (= (type $generated@@617) $generated@@200)) (= ($generated@@0 ($generated@@94 ($generated@@610 $generated@@616) $generated@@617))  (and ($generated@@0 ($generated@@94 ($generated@@486 $generated@@616) ($generated@@198 ($generated@@311 $generated@@191 $generated@@617)))) (= ($generated@@94 ($generated@@611 $generated@@616) ($generated@@198 ($generated@@311 $generated@@191 $generated@@617))) ($generated@@199 ($generated@@311 $generated@@191 $generated@@617))))))
 :pattern ( ($generated@@94 ($generated@@610 $generated@@616) $generated@@617))
)))
(assert  (and (forall (($generated@@620 T@U) ) (! (= (type ($generated@@618 $generated@@620)) ($generated@@89 $generated@@200 $generated@@4))
 :pattern ( ($generated@@618 $generated@@620))
)) (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@508 (type $generated@@621))))
(let (($generated@@623 ($generated@@507 (type $generated@@621))))
(= (type ($generated@@619 $generated@@621)) ($generated@@89 $generated@@623 $generated@@622))))
 :pattern ( ($generated@@619 $generated@@621))
))))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@506 $generated@@200 $generated@@200)) (= (type $generated@@625) $generated@@200)) (= ($generated@@0 ($generated@@94 ($generated@@618 $generated@@624) $generated@@625))  (and ($generated@@0 ($generated@@94 ($generated@@504 $generated@@624) ($generated@@198 ($generated@@311 $generated@@191 $generated@@625)))) (= ($generated@@94 ($generated@@619 $generated@@624) ($generated@@198 ($generated@@311 $generated@@191 $generated@@625))) ($generated@@199 ($generated@@311 $generated@@191 $generated@@625))))))
 :pattern ( ($generated@@94 ($generated@@618 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@627)))
(let (($generated@@629 ($generated@@489 (type $generated@@626))))
 (=> (= (type $generated@@626) ($generated@@488 $generated@@629 $generated@@628)) (= ($generated@@0 ($generated@@94 ($generated@@539 $generated@@626) $generated@@627)) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@629) (and ($generated@@0 ($generated@@94 ($generated@@486 $generated@@626) $generated@@630)) (= $generated@@627 ($generated@@94 ($generated@@611 $generated@@626) $generated@@630))))
 :pattern ( ($generated@@94 ($generated@@486 $generated@@626) $generated@@630))
 :pattern ( ($generated@@94 ($generated@@611 $generated@@626) $generated@@630))
))))))
 :pattern ( ($generated@@94 ($generated@@539 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@632)))
(let (($generated@@634 ($generated@@507 (type $generated@@631))))
 (=> (= (type $generated@@631) ($generated@@506 $generated@@634 $generated@@633)) (= ($generated@@0 ($generated@@94 ($generated@@550 $generated@@631) $generated@@632)) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@634) (and ($generated@@0 ($generated@@94 ($generated@@504 $generated@@631) $generated@@635)) (= $generated@@632 ($generated@@94 ($generated@@619 $generated@@631) $generated@@635))))
 :pattern ( ($generated@@94 ($generated@@504 $generated@@631) $generated@@635))
 :pattern ( ($generated@@94 ($generated@@619 $generated@@631) $generated@@635))
))))))
 :pattern ( ($generated@@94 ($generated@@550 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (! (= (type ($generated@@636 $generated@@637 $generated@@638)) $generated@@77)
 :pattern ( ($generated@@636 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@488 $generated@@200 $generated@@200)) (= (type $generated@@640) $generated@@77)) (= (type $generated@@641) $generated@@77)) (= (type $generated@@642) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@639 ($generated@@636 $generated@@640 $generated@@641) $generated@@642) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@200) ($generated@@0 ($generated@@94 ($generated@@486 $generated@@639) $generated@@643))) (and ($generated@@417 ($generated@@94 ($generated@@611 $generated@@639) $generated@@643) $generated@@641 $generated@@642) ($generated@@417 $generated@@643 $generated@@640 $generated@@642)))
 :pattern ( ($generated@@94 ($generated@@611 $generated@@639) $generated@@643))
 :pattern ( ($generated@@94 ($generated@@486 $generated@@639) $generated@@643))
))))
 :pattern ( ($generated@@87 $generated@@639 ($generated@@636 $generated@@640 $generated@@641) $generated@@642))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (! (= (type ($generated@@644 $generated@@645 $generated@@646)) $generated@@77)
 :pattern ( ($generated@@644 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@506 $generated@@200 $generated@@200)) (= (type $generated@@648) $generated@@77)) (= (type $generated@@649) $generated@@77)) (= (type $generated@@650) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@647 ($generated@@644 $generated@@648 $generated@@649) $generated@@650) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@200) ($generated@@0 ($generated@@94 ($generated@@504 $generated@@647) $generated@@651))) (and ($generated@@417 ($generated@@94 ($generated@@619 $generated@@647) $generated@@651) $generated@@649 $generated@@650) ($generated@@417 $generated@@651 $generated@@648 $generated@@650)))
 :pattern ( ($generated@@94 ($generated@@619 $generated@@647) $generated@@651))
 :pattern ( ($generated@@94 ($generated@@504 $generated@@647) $generated@@651))
))))
 :pattern ( ($generated@@87 $generated@@647 ($generated@@644 $generated@@648 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 ($generated@@92 (type $generated@@652))))
 (=> (and (and (= (type $generated@@652) ($generated@@89 $generated@@654 $generated@@4)) (= (type $generated@@653) ($generated@@89 $generated@@654 $generated@@4))) ($generated@@429 $generated@@652 $generated@@653)) (= $generated@@652 $generated@@653)))
 :pattern ( ($generated@@429 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@655) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@656) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@657) ($generated@@89 $generated@@90 $generated@@91))) (not (= $generated@@655 $generated@@657))) (and ($generated@@154 $generated@@655 $generated@@656) ($generated@@154 $generated@@656 $generated@@657))) ($generated@@154 $generated@@655 $generated@@657))
 :pattern ( ($generated@@154 $generated@@655 $generated@@656) ($generated@@154 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@T) ) (! (= (type ($generated@@658 $generated@@659)) ($generated@@89 $generated@@659 $generated@@4))
 :pattern ( ($generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (! (let (($generated@@661 ($generated@@508 (type $generated@@660))))
(let (($generated@@662 ($generated@@507 (type $generated@@660))))
 (=> (= (type $generated@@660) ($generated@@506 $generated@@662 $generated@@661)) (= (= $generated@@660 ($generated@@505 $generated@@662 $generated@@661)) (= ($generated@@504 $generated@@660) ($generated@@658 $generated@@662))))))
 :pattern ( ($generated@@504 $generated@@660))
)))
(assert (forall (($generated@@663 T@U) ) (! (let (($generated@@664 ($generated@@508 (type $generated@@663))))
(let (($generated@@665 ($generated@@507 (type $generated@@663))))
 (=> (= (type $generated@@663) ($generated@@506 $generated@@665 $generated@@664)) (= (= $generated@@663 ($generated@@505 $generated@@665 $generated@@664)) (= ($generated@@550 $generated@@663) ($generated@@658 $generated@@664))))))
 :pattern ( ($generated@@550 $generated@@663))
)))
(assert (forall (($generated@@666 T@U) ) (! (let (($generated@@667 ($generated@@508 (type $generated@@666))))
(let (($generated@@668 ($generated@@507 (type $generated@@666))))
 (=> (= (type $generated@@666) ($generated@@506 $generated@@668 $generated@@667)) (= (= $generated@@666 ($generated@@505 $generated@@668 $generated@@667)) (= ($generated@@618 $generated@@666) ($generated@@658 $generated@@200))))))
 :pattern ( ($generated@@618 $generated@@666))
)))
(assert (forall (($generated@@669 T@U) ) (! (let (($generated@@670 ($generated@@490 (type $generated@@669))))
(let (($generated@@671 ($generated@@489 (type $generated@@669))))
 (=> (= (type $generated@@669) ($generated@@488 $generated@@671 $generated@@670)) (or (= $generated@@669 ($generated@@487 $generated@@671 $generated@@670)) (exists (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (and (and (= (type $generated@@672) $generated@@200) (= (type $generated@@673) $generated@@200)) ($generated@@0 ($generated@@94 ($generated@@610 $generated@@669) ($generated@@336 ($generated@@327 $generated@@672 $generated@@673)))))
 :no-pattern (type $generated@@672)
 :no-pattern (type $generated@@673)
 :no-pattern ($generated $generated@@672)
 :no-pattern ($generated@@0 $generated@@672)
 :no-pattern ($generated $generated@@673)
 :no-pattern ($generated@@0 $generated@@673)
))))))
 :pattern ( ($generated@@610 $generated@@669))
)))
(assert (forall (($generated@@674 T@U) ) (! (let (($generated@@675 ($generated@@508 (type $generated@@674))))
(let (($generated@@676 ($generated@@507 (type $generated@@674))))
 (=> (= (type $generated@@674) ($generated@@506 $generated@@676 $generated@@675)) (or (= $generated@@674 ($generated@@505 $generated@@676 $generated@@675)) (exists (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (and (and (= (type $generated@@677) $generated@@200) (= (type $generated@@678) $generated@@200)) ($generated@@0 ($generated@@94 ($generated@@618 $generated@@674) ($generated@@336 ($generated@@327 $generated@@677 $generated@@678)))))
 :no-pattern (type $generated@@677)
 :no-pattern (type $generated@@678)
 :no-pattern ($generated $generated@@677)
 :no-pattern ($generated@@0 $generated@@677)
 :no-pattern ($generated $generated@@678)
 :no-pattern ($generated@@0 $generated@@678)
))))))
 :pattern ( ($generated@@618 $generated@@674))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@200) ($generated@@328 $generated@@679 $generated@@46)) (and (= ($generated@@336 ($generated@@311 $generated@@2 $generated@@679)) $generated@@679) ($generated@@170 ($generated@@311 $generated@@2 $generated@@679) $generated@@46)))
 :pattern ( ($generated@@328 $generated@@679 $generated@@46))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@200) ($generated@@328 $generated@@680 $generated@@47)) (and (= ($generated@@336 ($generated@@311 $generated@@3 $generated@@680)) $generated@@680) ($generated@@170 ($generated@@311 $generated@@3 $generated@@680) $generated@@47)))
 :pattern ( ($generated@@328 $generated@@680 $generated@@47))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@681) $generated@@200) ($generated@@328 $generated@@681 $generated@@44)) (and (= ($generated@@336 ($generated@@311 $generated@@4 $generated@@681)) $generated@@681) ($generated@@170 ($generated@@311 $generated@@4 $generated@@681) $generated@@44)))
 :pattern ( ($generated@@328 $generated@@681 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@682) 22))
(assert (forall (($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@200) ($generated@@328 $generated@@683 $generated@@45)) (and (= ($generated@@336 ($generated@@311 $generated@@682 $generated@@683)) $generated@@683) ($generated@@170 ($generated@@311 $generated@@682 $generated@@683) $generated@@45)))
 :pattern ( ($generated@@328 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@77) (= ($generated@@328 ($generated@@336 $generated@@684) $generated@@685) ($generated@@170 $generated@@684 $generated@@685)))
 :pattern ( ($generated@@328 ($generated@@336 $generated@@684) $generated@@685))
)))
(assert (forall (($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@92 (type $generated@@686))))
 (=> (= (type $generated@@686) ($generated@@89 $generated@@687 $generated@@2)) (<= 0 ($generated@@473 $generated@@686))))
 :pattern ( ($generated@@473 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ) (! (let (($generated@@689 ($generated@@441 (type $generated@@688))))
 (=> (= (type $generated@@688) ($generated@@440 $generated@@689)) (<= 0 ($generated@@439 $generated@@688))))
 :pattern ( ($generated@@439 $generated@@688))
)))
(assert (forall (($generated@@691 T@U) ) (! (= (type ($generated@@690 $generated@@691)) $generated@@77)
 :pattern ( ($generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) $generated@@77) (= (type $generated@@693) $generated@@77)) (= ($generated@@690 ($generated@@636 $generated@@692 $generated@@693)) $generated@@692))
 :pattern ( ($generated@@636 $generated@@692 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ) (! (= (type ($generated@@694 $generated@@695)) $generated@@77)
 :pattern ( ($generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (= (type $generated@@696) $generated@@77) (= (type $generated@@697) $generated@@77)) (= ($generated@@694 ($generated@@636 $generated@@696 $generated@@697)) $generated@@697))
 :pattern ( ($generated@@636 $generated@@696 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@77) (= (type $generated@@699) $generated@@77)) (= ($generated@@85 ($generated@@636 $generated@@698 $generated@@699)) $generated@@58))
 :pattern ( ($generated@@636 $generated@@698 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ) (! (= (type ($generated@@700 $generated@@701)) $generated@@77)
 :pattern ( ($generated@@700 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@702) $generated@@77) (= (type $generated@@703) $generated@@77)) (= ($generated@@700 ($generated@@644 $generated@@702 $generated@@703)) $generated@@702))
 :pattern ( ($generated@@644 $generated@@702 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ) (! (= (type ($generated@@704 $generated@@705)) $generated@@77)
 :pattern ( ($generated@@704 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@77) (= (type $generated@@707) $generated@@77)) (= ($generated@@704 ($generated@@644 $generated@@706 $generated@@707)) $generated@@707))
 :pattern ( ($generated@@644 $generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@708) $generated@@77) (= (type $generated@@709) $generated@@77)) (= ($generated@@85 ($generated@@644 $generated@@708 $generated@@709)) $generated@@59))
 :pattern ( ($generated@@644 $generated@@708 $generated@@709))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@200) (= (type $generated@@711) $generated@@200)) (= ($generated@@425 ($generated@@327 $generated@@710 $generated@@711)) $generated@@66))
 :pattern ( ($generated@@327 $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ) (! (= (type ($generated@@712 $generated@@713)) $generated@@77)
 :pattern ( ($generated@@712 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@77) (= (type $generated@@715) $generated@@77)) (= ($generated@@712 ($generated@@190 $generated@@714 $generated@@715)) $generated@@714))
 :pattern ( ($generated@@190 $generated@@714 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ) (! (= (type ($generated@@716 $generated@@717)) $generated@@77)
 :pattern ( ($generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@77) (= (type $generated@@719) $generated@@77)) (= ($generated@@716 ($generated@@190 $generated@@718 $generated@@719)) $generated@@719))
 :pattern ( ($generated@@190 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@200) (= (type $generated@@721) $generated@@200)) (= ($generated@@198 ($generated@@327 $generated@@720 $generated@@721)) $generated@@720))
 :pattern ( ($generated@@327 $generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@200) (= (type $generated@@723) $generated@@200)) (= ($generated@@199 ($generated@@327 $generated@@722 $generated@@723)) $generated@@723))
 :pattern ( ($generated@@327 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@90) ($generated@@170 $generated@@724 $generated@@167))
 :pattern ( ($generated@@170 $generated@@724 $generated@@167))
)))
(assert  (and (forall (($generated@@727 T@U) ) (! (= (type ($generated@@725 $generated@@727)) $generated@@77)
 :pattern ( ($generated@@725 $generated@@727))
)) (forall (($generated@@728 T@U) ($generated@@729 Int) ) (! (let (($generated@@730 ($generated@@441 (type $generated@@728))))
(= (type ($generated@@726 $generated@@728 $generated@@729)) $generated@@730))
 :pattern ( ($generated@@726 $generated@@728 $generated@@729))
))))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@731) ($generated@@440 $generated@@200)) (= (type $generated@@732) $generated@@77)) (= (type $generated@@733) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@731 ($generated@@725 $generated@@732) $generated@@733) (forall (($generated@@734 Int) ) (!  (=> (and (<= 0 $generated@@734) (< $generated@@734 ($generated@@439 $generated@@731))) ($generated@@417 ($generated@@726 $generated@@731 $generated@@734) $generated@@732 $generated@@733))
 :pattern ( ($generated@@726 $generated@@731 $generated@@734))
))))
 :pattern ( ($generated@@87 $generated@@731 ($generated@@725 $generated@@732) $generated@@733))
)))
(assert  (=> (<= 1 $generated@@302) (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@77) (= (type $generated@@736) $generated@@90)) (or ($generated@@557 $generated@@735 ($generated@@381 $generated@@736)) (and (not (= 1 $generated@@302)) (and (not (= $generated@@736 $generated@@159)) ($generated@@170 $generated@@736 ($generated@@184 $generated@@735)))))) (= ($generated@@366 $generated@@735 ($generated@@381 $generated@@736)) ($generated@@310 $generated@@735 ($generated@@381 $generated@@736))))
 :weight 3
 :pattern ( ($generated@@366 $generated@@735 ($generated@@381 $generated@@736)))
))))
(assert (forall (($generated@@738 Int) ) (! (= ($generated@@737 ($generated@@88 $generated@@738)) $generated@@738)
 :pattern ( ($generated@@88 $generated@@738))
)))
(assert (forall (($generated@@740 T@U) ) (! (= (type ($generated@@739 $generated@@740)) $generated@@77)
 :pattern ( ($generated@@739 $generated@@740))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@77) (= ($generated@@739 ($generated@@370 $generated@@741)) $generated@@741))
 :pattern ( ($generated@@370 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@77) (= ($generated@@85 ($generated@@370 $generated@@742)) $generated@@54))
 :pattern ( ($generated@@370 $generated@@742))
)))
(assert (forall (($generated@@744 T@U) ) (! (= (type ($generated@@743 $generated@@744)) $generated@@77)
 :pattern ( ($generated@@743 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ) (!  (=> (= (type $generated@@745) $generated@@77) (= ($generated@@743 ($generated@@375 $generated@@745)) $generated@@745))
 :pattern ( ($generated@@375 $generated@@745))
)))
(assert (forall (($generated@@746 T@U) ) (!  (=> (= (type $generated@@746) $generated@@77) (= ($generated@@85 ($generated@@375 $generated@@746)) $generated@@55))
 :pattern ( ($generated@@375 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ) (! (= (type ($generated@@747 $generated@@748)) $generated@@77)
 :pattern ( ($generated@@747 $generated@@748))
)))
(assert (forall (($generated@@749 T@U) ) (!  (=> (= (type $generated@@749) $generated@@77) (= ($generated@@747 ($generated@@205 $generated@@749)) $generated@@749))
 :pattern ( ($generated@@205 $generated@@749))
)))
(assert (forall (($generated@@750 T@U) ) (!  (=> (= (type $generated@@750) $generated@@77) (= ($generated@@85 ($generated@@205 $generated@@750)) $generated@@56))
 :pattern ( ($generated@@205 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ) (! (= (type ($generated@@751 $generated@@752)) $generated@@77)
 :pattern ( ($generated@@751 $generated@@752))
)))
(assert (forall (($generated@@753 T@U) ) (!  (=> (= (type $generated@@753) $generated@@77) (= ($generated@@751 ($generated@@725 $generated@@753)) $generated@@753))
 :pattern ( ($generated@@725 $generated@@753))
)))
(assert (forall (($generated@@754 T@U) ) (!  (=> (= (type $generated@@754) $generated@@77) (= ($generated@@85 ($generated@@725 $generated@@754)) $generated@@57))
 :pattern ( ($generated@@725 $generated@@754))
)))
(assert (forall (($generated@@756 T@U) ) (! (= (type ($generated@@755 $generated@@756)) $generated@@77)
 :pattern ( ($generated@@755 $generated@@756))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@77) (= ($generated@@755 ($generated@@173 $generated@@757)) $generated@@757))
 :pattern ( ($generated@@173 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ) (! (= (type ($generated@@758 $generated@@759)) $generated@@77)
 :pattern ( ($generated@@758 $generated@@759))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@77) (= ($generated@@758 ($generated@@172 $generated@@760)) $generated@@760))
 :pattern ( ($generated@@172 $generated@@760))
)))
(assert (forall (($generated@@762 T@U) ) (! (= (type ($generated@@761 $generated@@762)) $generated@@77)
 :pattern ( ($generated@@761 $generated@@762))
)))
(assert (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@77) (= ($generated@@761 ($generated@@179 $generated@@763)) $generated@@763))
 :pattern ( ($generated@@179 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ) (! (= (type ($generated@@764 $generated@@765)) $generated@@77)
 :pattern ( ($generated@@764 $generated@@765))
)))
(assert (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@77) (= ($generated@@764 ($generated@@158 $generated@@766)) $generated@@766))
 :pattern ( ($generated@@158 $generated@@766))
)))
(assert (forall (($generated@@768 T@U) ) (! (= (type ($generated@@767 $generated@@768)) $generated@@77)
 :pattern ( ($generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@77) (= ($generated@@767 ($generated@@184 $generated@@769)) $generated@@769))
 :pattern ( ($generated@@184 $generated@@769))
)))
(assert (forall (($generated@@770 T@U) ) (! (let (($generated@@771 (type $generated@@770)))
(= ($generated@@311 $generated@@771 ($generated@@336 $generated@@770)) $generated@@770))
 :pattern ( ($generated@@336 $generated@@770))
)))
(assert  (=> (<= 1 $generated@@302) (forall (($generated@@772 T@U) ($generated@@773 T@U) ) (!  (=> (and (and (= (type $generated@@772) $generated@@77) (= (type $generated@@773) $generated@@90)) (or ($generated@@557 $generated@@772 $generated@@773) (and (not (= 1 $generated@@302)) (and (not (= $generated@@773 $generated@@159)) ($generated@@170 $generated@@773 ($generated@@184 $generated@@772)))))) true)
 :pattern ( ($generated@@366 $generated@@772 $generated@@773))
))))
(assert  (=> (< 0 $generated@@302) (forall (($generated@@774 T@U) ($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (and (and (= (type $generated@@774) $generated@@77) (= (type $generated@@775) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@776) $generated@@90)) (and ($generated@@306 $generated@@775) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@775 $generated@@776) $generated@@60)))) ($generated@@87 ($generated@@8 ($generated@@310 $generated@@774 $generated@@776)) $generated@@46 $generated@@775))
 :pattern ( ($generated@@310 $generated@@774 $generated@@776) ($generated@@96 ($generated@@94 $generated@@775 $generated@@776) $generated@@60))
))))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (= (type $generated@@777) ($generated@@488 $generated@@200 $generated@@200)) (= (type $generated@@778) $generated@@77)) (= (type $generated@@779) $generated@@77)) (= ($generated@@170 $generated@@777 ($generated@@636 $generated@@778 $generated@@779)) (forall (($generated@@780 T@U) ) (!  (=> (and (= (type $generated@@780) $generated@@200) ($generated@@0 ($generated@@94 ($generated@@486 $generated@@777) $generated@@780))) (and ($generated@@328 ($generated@@94 ($generated@@611 $generated@@777) $generated@@780) $generated@@779) ($generated@@328 $generated@@780 $generated@@778)))
 :pattern ( ($generated@@94 ($generated@@611 $generated@@777) $generated@@780))
 :pattern ( ($generated@@94 ($generated@@486 $generated@@777) $generated@@780))
))))
 :pattern ( ($generated@@170 $generated@@777 ($generated@@636 $generated@@778 $generated@@779)))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (and (= (type $generated@@781) ($generated@@506 $generated@@200 $generated@@200)) (= (type $generated@@782) $generated@@77)) (= (type $generated@@783) $generated@@77)) (= ($generated@@170 $generated@@781 ($generated@@644 $generated@@782 $generated@@783)) (forall (($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@784) $generated@@200) ($generated@@0 ($generated@@94 ($generated@@504 $generated@@781) $generated@@784))) (and ($generated@@328 ($generated@@94 ($generated@@619 $generated@@781) $generated@@784) $generated@@783) ($generated@@328 $generated@@784 $generated@@782)))
 :pattern ( ($generated@@94 ($generated@@619 $generated@@781) $generated@@784))
 :pattern ( ($generated@@94 ($generated@@504 $generated@@781) $generated@@784))
))))
 :pattern ( ($generated@@170 $generated@@781 ($generated@@644 $generated@@782 $generated@@783)))
)))
(assert (forall (($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (= (type $generated@@787) $generated@@200) (= (type $generated@@788) $generated@@200)) (< ($generated@@785 $generated@@787) ($generated@@786 ($generated@@327 $generated@@787 $generated@@788))))
 :pattern ( ($generated@@327 $generated@@787 $generated@@788))
)))
(assert (forall (($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (= (type $generated@@789) $generated@@200) (= (type $generated@@790) $generated@@200)) (< ($generated@@785 $generated@@790) ($generated@@786 ($generated@@327 $generated@@789 $generated@@790))))
 :pattern ( ($generated@@327 $generated@@789 $generated@@790))
)))
(assert (forall (($generated@@791 T@U) ($generated@@792 T@U) ) (! (let (($generated@@793 ($generated@@93 (type $generated@@791))))
 (=> (and (= (type $generated@@791) ($generated@@89 $generated@@307 $generated@@793)) (= (type $generated@@792) $generated@@307)) (= ($generated@@450 $generated@@791 ($generated@@304 $generated@@792)) ($generated@@450 $generated@@791 $generated@@792))))
 :pattern ( ($generated@@450 $generated@@791 ($generated@@304 $generated@@792)))
)))
(assert  (=> (<= 2 $generated@@302) (forall (($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 Int) ($generated@@798 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@794) $generated@@77) (= (type $generated@@795) $generated@@307)) (= (type $generated@@796) $generated@@90)) (= (type $generated@@798) $generated@@148)) (or ($generated@@308 $generated@@794 $generated@@796 $generated@@797 $generated@@798) (and (not (= 2 $generated@@302)) (and (and (and (not (= $generated@@796 $generated@@159)) ($generated@@170 $generated@@796 ($generated@@184 $generated@@794))) (<= ($generated@@305 0) $generated@@797)) ($generated@@170 $generated@@798 ($generated@@179 $generated@@46)))))) true)
 :pattern ( ($generated@@303 $generated@@794 $generated@@795 $generated@@796 $generated@@797 $generated@@798))
))))
(assert (forall (($generated@@799 T@U) ($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (and (and (= (type $generated@@799) $generated@@200) (= (type $generated@@800) $generated@@77)) (= (type $generated@@801) $generated@@77)) ($generated@@328 $generated@@799 ($generated@@636 $generated@@800 $generated@@801))) (and (= ($generated@@336 ($generated@@311 ($generated@@488 $generated@@200 $generated@@200) $generated@@799)) $generated@@799) ($generated@@170 ($generated@@311 ($generated@@488 $generated@@200 $generated@@200) $generated@@799) ($generated@@636 $generated@@800 $generated@@801))))
 :pattern ( ($generated@@328 $generated@@799 ($generated@@636 $generated@@800 $generated@@801)))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (and (and (= (type $generated@@802) $generated@@200) (= (type $generated@@803) $generated@@77)) (= (type $generated@@804) $generated@@77)) ($generated@@328 $generated@@802 ($generated@@644 $generated@@803 $generated@@804))) (and (= ($generated@@336 ($generated@@311 ($generated@@506 $generated@@200 $generated@@200) $generated@@802)) $generated@@802) ($generated@@170 ($generated@@311 ($generated@@506 $generated@@200 $generated@@200) $generated@@802) ($generated@@644 $generated@@803 $generated@@804))))
 :pattern ( ($generated@@328 $generated@@802 ($generated@@644 $generated@@803 $generated@@804)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) $generated@@77) (= (type $generated@@806) $generated@@77)) (= (type $generated@@807) $generated@@200)) ($generated@@328 $generated@@807 ($generated@@190 $generated@@805 $generated@@806))) (and (= ($generated@@336 ($generated@@311 $generated@@191 $generated@@807)) $generated@@807) ($generated@@170 ($generated@@311 $generated@@191 $generated@@807) ($generated@@190 $generated@@805 $generated@@806))))
 :pattern ( ($generated@@328 $generated@@807 ($generated@@190 $generated@@805 $generated@@806)))
)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (and (= (type $generated@@808) $generated@@148) (= (type $generated@@809) $generated@@77)) (= (type $generated@@810) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@306 $generated@@810)) (= ($generated@@87 $generated@@808 ($generated@@173 $generated@@809) $generated@@810)  (=> ($generated@@145 $generated@@809 $generated@@810 $generated@@808) (forall (($generated@@811 T@U) ) (!  (=> (= (type $generated@@811) $generated@@90) (=> (and (not (= $generated@@811 $generated@@159)) ($generated@@0 ($generated@@94 ($generated@@335 $generated@@809 $generated@@810 $generated@@808) ($generated@@336 $generated@@811)))) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@810 $generated@@811) $generated@@60))))
 :pattern ( ($generated@@94 ($generated@@335 $generated@@809 $generated@@810 $generated@@808) ($generated@@336 $generated@@811)))
)))))
 :pattern ( ($generated@@87 $generated@@808 ($generated@@173 $generated@@809) $generated@@810))
)))
(assert (forall (($generated@@812 T@U) ) (! (let (($generated@@813 (type $generated@@812)))
 (not ($generated@@0 ($generated@@94 ($generated@@430 $generated@@813) $generated@@812))))
 :pattern ( (let (($generated@@813 (type $generated@@812)))
($generated@@94 ($generated@@430 $generated@@813) $generated@@812)))
)))
(assert (forall (($generated@@814 T@U) ) (! (let (($generated@@815 (type $generated@@814)))
 (not ($generated@@0 ($generated@@94 ($generated@@658 $generated@@815) $generated@@814))))
 :pattern ( (let (($generated@@815 (type $generated@@814)))
($generated@@94 ($generated@@658 $generated@@815) $generated@@814)))
)))
(assert  (=> (<= 2 $generated@@302) (forall (($generated@@816 T@U) ($generated@@817 T@U) ($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 Int) ($generated@@821 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@816) $generated@@77) (= (type $generated@@817) $generated@@307)) (= (type $generated@@818) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@819) $generated@@90)) (= (type $generated@@821) $generated@@148)) (or ($generated@@308 $generated@@816 ($generated@@381 $generated@@819) ($generated@@305 $generated@@820) ($generated@@381 $generated@@821)) (and (not (= 2 $generated@@302)) (and (and (and ($generated@@306 $generated@@818) (and (not (= $generated@@819 $generated@@159)) (and ($generated@@170 $generated@@819 ($generated@@184 $generated@@816)) ($generated@@87 $generated@@819 ($generated@@184 $generated@@816) $generated@@818)))) (<= ($generated@@305 0) $generated@@820)) ($generated@@170 $generated@@821 ($generated@@179 $generated@@46)))))) (and (=> (not (or (= ($generated@@305 $generated@@820) ($generated@@305 0)) (= ($generated@@309 $generated@@816 ($generated@@381 $generated@@819)) $generated@@159))) (and (=> (= ($generated@@310 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 17)) ($generated@@308 $generated@@816 ($generated@@309 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 (- $generated@@820 1)) ($generated@@146 $generated@@816 ($generated@@381 $generated@@819)))) (=> (not (= ($generated@@310 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 17))) ($generated@@308 $generated@@816 ($generated@@309 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 (- $generated@@820 1)) ($generated@@381 $generated@@821))))) (= ($generated@@303 $generated@@816 ($generated@@304 $generated@@817) ($generated@@381 $generated@@819) ($generated@@305 $generated@@820) ($generated@@381 $generated@@821)) (ite  (or (= ($generated@@305 $generated@@820) ($generated@@305 0)) (= ($generated@@309 $generated@@816 ($generated@@381 $generated@@819)) $generated@@159)) ($generated ($generated@@311 $generated@@2 ($generated@@312 $generated@@46 $generated@@818 ($generated@@381 $generated@@821)))) (ite (= ($generated@@310 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 17)) ($generated@@303 $generated@@816 ($generated@@304 $generated@@817) ($generated@@309 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 (- $generated@@820 1)) ($generated@@146 $generated@@816 ($generated@@381 $generated@@819))) ($generated@@303 $generated@@816 ($generated@@304 $generated@@817) ($generated@@309 $generated@@816 ($generated@@381 $generated@@819)) ($generated@@305 (- $generated@@820 1)) ($generated@@381 $generated@@821)))))))
 :weight 3
 :pattern ( ($generated@@303 $generated@@816 ($generated@@304 $generated@@817) ($generated@@381 $generated@@819) ($generated@@305 $generated@@820) ($generated@@381 $generated@@821)) ($generated@@306 $generated@@818))
))))
(assert  (=> (< 0 $generated@@302) (forall (($generated@@822 T@U) ($generated@@823 T@U) ($generated@@824 T@U) ) (!  (=> (and (and (and (= (type $generated@@822) $generated@@77) (= (type $generated@@823) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@824) $generated@@90)) (and ($generated@@306 $generated@@823) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@823 $generated@@824) $generated@@60)))) ($generated@@87 ($generated@@309 $generated@@822 $generated@@824) ($generated@@158 $generated@@822) $generated@@823))
 :pattern ( ($generated@@309 $generated@@822 $generated@@824) ($generated@@96 ($generated@@94 $generated@@823 $generated@@824) $generated@@60))
))))
(assert (forall (($generated@@825 T@U) ($generated@@826 T@U) ) (!  (=> (and (= (type $generated@@825) $generated@@77) (= (type $generated@@826) $generated@@148)) (= ($generated@@170 $generated@@826 ($generated@@179 $generated@@825))  (and ($generated@@170 $generated@@826 ($generated@@172 $generated@@825)) ($generated@@145 $generated@@825 $generated@@428 $generated@@826))))
 :pattern ( ($generated@@170 $generated@@826 ($generated@@179 $generated@@825)))
)))
(assert (forall (($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (= (type $generated@@827) $generated@@77) (= (type $generated@@828) $generated@@77)) (and (= ($generated@@85 ($generated@@190 $generated@@827 $generated@@828)) $generated@@67) (= ($generated@@479 ($generated@@190 $generated@@827 $generated@@828)) $generated@@75)))
 :pattern ( ($generated@@190 $generated@@827 $generated@@828))
)))
(assert (forall (($generated@@829 T@U) ) (!  (=> (= (type $generated@@829) $generated@@191) (= ($generated@@785 ($generated@@336 $generated@@829)) ($generated@@786 $generated@@829)))
 :pattern ( ($generated@@785 ($generated@@336 $generated@@829)))
)))
(assert (forall (($generated@@830 T@U) ($generated@@831 T@U) ) (!  (=> (and (= (type $generated@@830) $generated@@148) (= (type $generated@@831) $generated@@77)) (= ($generated@@170 $generated@@830 ($generated@@173 $generated@@831)) (forall (($generated@@832 T@U) ) (!  (=> (= (type $generated@@832) ($generated@@89 $generated@@90 $generated@@91)) (=> (and ($generated@@306 $generated@@832) ($generated@@145 $generated@@831 $generated@@832 $generated@@830)) ($generated@@328 ($generated@@312 $generated@@831 $generated@@832 $generated@@830) $generated@@831)))
 :pattern ( ($generated@@312 $generated@@831 $generated@@832 $generated@@830))
))))
 :pattern ( ($generated@@170 $generated@@830 ($generated@@173 $generated@@831)))
)))
(assert (forall (($generated@@833 T@U) ) (!  (=> (and (= (type $generated@@833) $generated@@200) ($generated@@328 $generated@@833 ($generated@@88 0))) (and (= ($generated@@336 ($generated@@311 $generated@@2 $generated@@833)) $generated@@833) ($generated@@170 ($generated@@311 ($generated@@89 $generated@@200 $generated@@4) $generated@@833) ($generated@@88 0))))
 :pattern ( ($generated@@328 $generated@@833 ($generated@@88 0)))
)))
(assert (forall (($generated@@834 T@U) ($generated@@835 T@U) ) (!  (=> (and (and (= (type $generated@@834) $generated@@200) (= (type $generated@@835) $generated@@77)) ($generated@@328 $generated@@834 ($generated@@370 $generated@@835))) (and (= ($generated@@336 ($generated@@311 ($generated@@89 $generated@@200 $generated@@4) $generated@@834)) $generated@@834) ($generated@@170 ($generated@@311 ($generated@@89 $generated@@200 $generated@@4) $generated@@834) ($generated@@370 $generated@@835))))
 :pattern ( ($generated@@328 $generated@@834 ($generated@@370 $generated@@835)))
)))
(assert (forall (($generated@@836 T@U) ($generated@@837 T@U) ) (!  (=> (and (and (= (type $generated@@836) $generated@@200) (= (type $generated@@837) $generated@@77)) ($generated@@328 $generated@@836 ($generated@@375 $generated@@837))) (and (= ($generated@@336 ($generated@@311 ($generated@@89 $generated@@200 $generated@@4) $generated@@836)) $generated@@836) ($generated@@170 ($generated@@311 ($generated@@89 $generated@@200 $generated@@4) $generated@@836) ($generated@@375 $generated@@837))))
 :pattern ( ($generated@@328 $generated@@836 ($generated@@375 $generated@@837)))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ) (!  (=> (and (and (= (type $generated@@838) $generated@@200) (= (type $generated@@839) $generated@@77)) ($generated@@328 $generated@@838 ($generated@@205 $generated@@839))) (and (= ($generated@@336 ($generated@@311 ($generated@@89 $generated@@200 $generated@@2) $generated@@838)) $generated@@838) ($generated@@170 ($generated@@311 ($generated@@89 $generated@@200 $generated@@2) $generated@@838) ($generated@@205 $generated@@839))))
 :pattern ( ($generated@@328 $generated@@838 ($generated@@205 $generated@@839)))
)))
(assert (forall (($generated@@840 T@U) ($generated@@841 T@U) ) (!  (=> (and (and (= (type $generated@@840) $generated@@200) (= (type $generated@@841) $generated@@77)) ($generated@@328 $generated@@840 ($generated@@725 $generated@@841))) (and (= ($generated@@336 ($generated@@311 ($generated@@440 $generated@@200) $generated@@840)) $generated@@840) ($generated@@170 ($generated@@311 ($generated@@440 $generated@@200) $generated@@840) ($generated@@725 $generated@@841))))
 :pattern ( ($generated@@328 $generated@@840 ($generated@@725 $generated@@841)))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (and (= (type $generated@@842) $generated@@77) (= (type $generated@@843) $generated@@200)) ($generated@@328 $generated@@843 ($generated@@173 $generated@@842))) (and (= ($generated@@336 ($generated@@311 $generated@@148 $generated@@843)) $generated@@843) ($generated@@170 ($generated@@311 $generated@@148 $generated@@843) ($generated@@173 $generated@@842))))
 :pattern ( ($generated@@328 $generated@@843 ($generated@@173 $generated@@842)))
)))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ) (!  (=> (and (and (= (type $generated@@844) $generated@@77) (= (type $generated@@845) $generated@@200)) ($generated@@328 $generated@@845 ($generated@@172 $generated@@844))) (and (= ($generated@@336 ($generated@@311 $generated@@148 $generated@@845)) $generated@@845) ($generated@@170 ($generated@@311 $generated@@148 $generated@@845) ($generated@@172 $generated@@844))))
 :pattern ( ($generated@@328 $generated@@845 ($generated@@172 $generated@@844)))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (= (type $generated@@846) $generated@@77) (= (type $generated@@847) $generated@@200)) ($generated@@328 $generated@@847 ($generated@@179 $generated@@846))) (and (= ($generated@@336 ($generated@@311 $generated@@148 $generated@@847)) $generated@@847) ($generated@@170 ($generated@@311 $generated@@148 $generated@@847) ($generated@@179 $generated@@846))))
 :pattern ( ($generated@@328 $generated@@847 ($generated@@179 $generated@@846)))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ) (!  (=> (and (and (= (type $generated@@848) $generated@@77) (= (type $generated@@849) $generated@@200)) ($generated@@328 $generated@@849 ($generated@@158 $generated@@848))) (and (= ($generated@@336 ($generated@@311 $generated@@90 $generated@@849)) $generated@@849) ($generated@@170 ($generated@@311 $generated@@90 $generated@@849) ($generated@@158 $generated@@848))))
 :pattern ( ($generated@@328 $generated@@849 ($generated@@158 $generated@@848)))
)))
(assert (forall (($generated@@850 T@U) ($generated@@851 T@U) ) (!  (=> (and (and (= (type $generated@@850) $generated@@77) (= (type $generated@@851) $generated@@200)) ($generated@@328 $generated@@851 ($generated@@184 $generated@@850))) (and (= ($generated@@336 ($generated@@311 $generated@@90 $generated@@851)) $generated@@851) ($generated@@170 ($generated@@311 $generated@@90 $generated@@851) ($generated@@184 $generated@@850))))
 :pattern ( ($generated@@328 $generated@@851 ($generated@@184 $generated@@850)))
)))
(assert (= ($generated@@85 $generated@@164) $generated@@61))
(assert (= ($generated@@479 $generated@@164) $generated@@70))
(assert (= ($generated@@85 $generated@@167) $generated@@62))
(assert (= ($generated@@479 $generated@@167) $generated@@71))
(assert (forall (($generated@@852 T@U) ($generated@@853 T@U) ($generated@@854 T@U) ) (!  (=> (and (and (= (type $generated@@852) ($generated@@89 $generated@@200 $generated@@2)) (= (type $generated@@853) $generated@@77)) (= (type $generated@@854) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@852 ($generated@@205 $generated@@853) $generated@@854) (forall (($generated@@855 T@U) ) (!  (=> (and (= (type $generated@@855) $generated@@200) (< 0 ($generated ($generated@@94 $generated@@852 $generated@@855)))) ($generated@@417 $generated@@855 $generated@@853 $generated@@854))
 :pattern ( ($generated@@94 $generated@@852 $generated@@855))
))))
 :pattern ( ($generated@@87 $generated@@852 ($generated@@205 $generated@@853) $generated@@854))
)))
(assert (forall (($generated@@856 T@U) ($generated@@857 T@U) ($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ($generated@@861 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@856) $generated@@77) (= (type $generated@@857) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@858) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@200))) (= (type $generated@@859) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@4))) (= (type $generated@@860) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) ($generated@@89 $generated@@200 $generated@@4)))) (= (type $generated@@861) $generated@@200)) (= ($generated@@0 ($generated@@94 ($generated@@335 $generated@@856 $generated@@857 ($generated@@355 $generated@@858 $generated@@859 $generated@@860)) $generated@@861)) ($generated@@0 ($generated@@94 ($generated@@94 $generated@@860 $generated@@857) $generated@@861))))
 :pattern ( ($generated@@94 ($generated@@335 $generated@@856 $generated@@857 ($generated@@355 $generated@@858 $generated@@859 $generated@@860)) $generated@@861))
)))
(assert (forall (($generated@@862 T@U) ($generated@@863 T@U) ($generated@@864 T@U) ) (!  (=> (and (and (= (type $generated@@862) $generated@@77) (= (type $generated@@863) $generated@@90)) (= (type $generated@@864) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@366 $generated@@862 $generated@@863) ($generated ($generated@@311 $generated@@2 ($generated@@312 $generated@@46 $generated@@864 ($generated@@146 $generated@@862 $generated@@863))))))
 :pattern ( ($generated@@366 $generated@@862 $generated@@863) ($generated@@306 $generated@@864))
)))
(assert (forall (($generated@@865 T@U) ) (!  (=> (= (type $generated@@865) ($generated@@89 $generated@@90 $generated@@4)) ($generated@@170 ($generated@@446 $generated@@865) ($generated@@370 $generated@@167)))
 :pattern ( ($generated@@446 $generated@@865))
)))
(assert (forall (($generated@@866 T@U) ($generated@@867 T@U) ($generated@@868 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@866) $generated@@148) (= (type $generated@@867) $generated@@77)) (= (type $generated@@868) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@306 $generated@@868) ($generated@@87 $generated@@866 ($generated@@173 $generated@@867) $generated@@868))) ($generated@@145 $generated@@867 $generated@@868 $generated@@866)) ($generated@@417 ($generated@@312 $generated@@867 $generated@@868 $generated@@866) $generated@@867 $generated@@868))
 :pattern ( ($generated@@87 $generated@@866 ($generated@@173 $generated@@867) $generated@@868))
)))
(assert (forall (($generated@@869 T@U) ($generated@@870 T@U) ($generated@@871 T@U) ) (!  (=> (and (and (and (= (type $generated@@869) $generated@@191) (= (type $generated@@870) $generated@@77)) (= (type $generated@@871) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@306 $generated@@871) (and ($generated@@189 $generated@@869) (exists (($generated@@872 T@U) ) (!  (and (= (type $generated@@872) $generated@@77) ($generated@@87 $generated@@869 ($generated@@190 $generated@@870 $generated@@872) $generated@@871))
 :pattern ( ($generated@@87 $generated@@869 ($generated@@190 $generated@@870 $generated@@872) $generated@@871))
))))) ($generated@@417 ($generated@@198 $generated@@869) $generated@@870 $generated@@871))
 :pattern ( ($generated@@417 ($generated@@198 $generated@@869) $generated@@870 $generated@@871))
)))
(assert (forall (($generated@@873 T@U) ($generated@@874 T@U) ($generated@@875 T@U) ) (!  (=> (and (and (and (= (type $generated@@873) $generated@@191) (= (type $generated@@874) $generated@@77)) (= (type $generated@@875) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@306 $generated@@875) (and ($generated@@189 $generated@@873) (exists (($generated@@876 T@U) ) (!  (and (= (type $generated@@876) $generated@@77) ($generated@@87 $generated@@873 ($generated@@190 $generated@@876 $generated@@874) $generated@@875))
 :pattern ( ($generated@@87 $generated@@873 ($generated@@190 $generated@@876 $generated@@874) $generated@@875))
))))) ($generated@@417 ($generated@@199 $generated@@873) $generated@@874 $generated@@875))
 :pattern ( ($generated@@417 ($generated@@199 $generated@@873) $generated@@874 $generated@@875))
)))
(assert (forall (($generated@@877 T@U) ($generated@@878 T@U) ($generated@@879 T@U) ) (!  (=> (and (and (and (= (type $generated@@877) $generated@@148) (= (type $generated@@878) $generated@@77)) (= (type $generated@@879) $generated@@77)) (and ($generated@@170 $generated@@877 ($generated@@173 $generated@@878)) (forall (($generated@@880 T@U) ) (!  (=> (and (= (type $generated@@880) $generated@@200) ($generated@@328 $generated@@880 $generated@@878)) ($generated@@328 $generated@@880 $generated@@879))
 :pattern ( ($generated@@328 $generated@@880 $generated@@878))
 :pattern ( ($generated@@328 $generated@@880 $generated@@879))
)))) ($generated@@170 $generated@@877 ($generated@@173 $generated@@879)))
 :pattern ( ($generated@@170 $generated@@877 ($generated@@173 $generated@@878)) ($generated@@170 $generated@@877 ($generated@@173 $generated@@879)))
)))
(assert (forall (($generated@@881 T@U) ($generated@@882 T@U) ) (!  (=> (and (= (type $generated@@881) $generated@@200) (= (type $generated@@882) $generated@@200)) (= ($generated@@327 ($generated@@381 $generated@@881) ($generated@@381 $generated@@882)) ($generated@@381 ($generated@@327 $generated@@881 $generated@@882))))
 :pattern ( ($generated@@327 ($generated@@381 $generated@@881) ($generated@@381 $generated@@882)))
)))
(assert (forall (($generated@@883 T@U) ($generated@@884 T@U) ($generated@@885 T@U) ($generated@@886 Int) ($generated@@887 T@U) ) (!  (=> (and (and (and (= (type $generated@@883) $generated@@77) (= (type $generated@@884) $generated@@307)) (= (type $generated@@885) $generated@@90)) (= (type $generated@@887) $generated@@148)) (= ($generated@@303 $generated@@883 ($generated@@304 $generated@@884) $generated@@885 $generated@@886 $generated@@887) ($generated@@303 $generated@@883 $generated@@884 $generated@@885 $generated@@886 $generated@@887)))
 :pattern ( ($generated@@303 $generated@@883 ($generated@@304 $generated@@884) $generated@@885 $generated@@886 $generated@@887))
)))
(assert (forall (($generated@@888 Int) ) (! (= ($generated@@336 ($generated@@8 ($generated@@305 $generated@@888))) ($generated@@381 ($generated@@336 ($generated@@8 $generated@@888))))
 :pattern ( ($generated@@336 ($generated@@8 ($generated@@305 $generated@@888))))
)))
(assert (forall (($generated@@889 T@U) ) (! (= ($generated@@336 ($generated@@381 $generated@@889)) ($generated@@381 ($generated@@336 $generated@@889)))
 :pattern ( ($generated@@336 ($generated@@381 $generated@@889)))
)))
(assert (forall (($generated@@890 T@U) ($generated@@891 T@U) ) (!  (=> (and (and (= (type $generated@@890) $generated@@77) (= (type $generated@@891) $generated@@90)) (and (not (= $generated@@891 $generated@@159)) ($generated@@170 $generated@@891 ($generated@@184 $generated@@890)))) (= ($generated@@147 $generated@@890 $generated@@891) true))
 :pattern ( ($generated@@147 $generated@@890 $generated@@891))
)))
(assert (forall (($generated@@892 T@U) ) (! (let (($generated@@893 ($generated@@441 (type $generated@@892))))
 (=> (and (= (type $generated@@892) ($generated@@440 $generated@@893)) (= ($generated@@439 $generated@@892) 0)) (= $generated@@892 ($generated@@438 $generated@@893))))
 :pattern ( ($generated@@439 $generated@@892))
)))
(assert (forall (($generated@@894 T@U) ($generated@@895 T@U) ($generated@@896 T@U) ($generated@@897 T@U) ($generated@@898 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@894) $generated@@77) (= (type $generated@@895) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@896) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@200))) (= (type $generated@@897) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) $generated@@4))) (= (type $generated@@898) ($generated@@89 ($generated@@89 $generated@@90 $generated@@91) ($generated@@89 $generated@@200 $generated@@4)))) ($generated@@0 ($generated@@94 $generated@@897 $generated@@895))) ($generated@@145 $generated@@894 $generated@@895 ($generated@@355 $generated@@896 $generated@@897 $generated@@898)))
 :pattern ( ($generated@@145 $generated@@894 $generated@@895 ($generated@@355 $generated@@896 $generated@@897 $generated@@898)))
)))
(assert (forall (($generated@@899 T@U) ($generated@@900 T@U) ($generated@@901 T@U) ) (! (let (($generated@@902 (type $generated@@900)))
 (=> (and (and (= (type $generated@@899) ($generated@@89 $generated@@902 $generated@@2)) (= (type $generated@@901) $generated@@2)) (<= 0 ($generated $generated@@901))) (= ($generated@@473 ($generated@@95 $generated@@899 $generated@@900 $generated@@901)) (+ (- ($generated@@473 $generated@@899) ($generated ($generated@@94 $generated@@899 $generated@@900))) ($generated $generated@@901)))))
 :pattern ( ($generated@@473 ($generated@@95 $generated@@899 $generated@@900 $generated@@901)))
)))
(assert (forall (($generated@@903 T@U) ($generated@@904 T@U) ) (!  (=> (and (= (type $generated@@903) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@904) $generated@@2)) ($generated@@87 $generated@@904 $generated@@46 $generated@@903))
 :pattern ( ($generated@@87 $generated@@904 $generated@@46 $generated@@903))
)))
(assert (forall (($generated@@905 T@U) ($generated@@906 T@U) ) (!  (=> (and (= (type $generated@@905) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@906) $generated@@3)) ($generated@@87 $generated@@906 $generated@@47 $generated@@905))
 :pattern ( ($generated@@87 $generated@@906 $generated@@47 $generated@@905))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ) (!  (=> (and (= (type $generated@@907) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@908) $generated@@4)) ($generated@@87 $generated@@908 $generated@@44 $generated@@907))
 :pattern ( ($generated@@87 $generated@@908 $generated@@44 $generated@@907))
)))
(assert (forall (($generated@@909 T@U) ($generated@@910 T@U) ) (!  (=> (and (= (type $generated@@909) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@910) $generated@@682)) ($generated@@87 $generated@@910 $generated@@45 $generated@@909))
 :pattern ( ($generated@@87 $generated@@910 $generated@@45 $generated@@909))
)))
(assert (forall (($generated@@911 T@U) ($generated@@912 T@U) ) (!  (=> (and (= (type $generated@@911) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@912) $generated@@200)) ($generated@@87 $generated@@912 $generated@@48 $generated@@911))
 :pattern ( ($generated@@87 $generated@@912 $generated@@48 $generated@@911))
)))
(assert (forall (($generated@@913 T@U) ($generated@@914 T@U) ) (!  (=> (and (= (type $generated@@913) ($generated@@440 $generated@@200)) (= (type $generated@@914) $generated@@77)) (= ($generated@@170 $generated@@913 ($generated@@725 $generated@@914)) (forall (($generated@@915 Int) ) (!  (=> (and (<= 0 $generated@@915) (< $generated@@915 ($generated@@439 $generated@@913))) ($generated@@328 ($generated@@726 $generated@@913 $generated@@915) $generated@@914))
 :pattern ( ($generated@@726 $generated@@913 $generated@@915))
))))
 :pattern ( ($generated@@170 $generated@@913 ($generated@@725 $generated@@914)))
)))
(assert (forall (($generated@@916 T@U) ($generated@@917 T@U) ) (!  (=> (and (= (type $generated@@916) $generated@@77) (= (type $generated@@917) $generated@@148)) (= ($generated@@170 $generated@@917 ($generated@@172 $generated@@916))  (and ($generated@@170 $generated@@917 ($generated@@173 $generated@@916)) ($generated@@429 ($generated@@335 $generated@@916 $generated@@428 $generated@@917) ($generated@@430 $generated@@200)))))
 :pattern ( ($generated@@170 $generated@@917 ($generated@@172 $generated@@916)))
)))
(assert (forall (($generated@@919 T@U) ($generated@@920 Int) ) (!  (=> (= (type $generated@@919) ($generated@@440 $generated@@200)) (=> (and (<= 0 $generated@@920) (< $generated@@920 ($generated@@439 $generated@@919))) (< ($generated@@786 ($generated@@311 $generated@@191 ($generated@@726 $generated@@919 $generated@@920))) ($generated@@918 $generated@@919))))
 :pattern ( ($generated@@786 ($generated@@311 $generated@@191 ($generated@@726 $generated@@919 $generated@@920))))
)))
(assert (forall (($generated@@921 T@U) ($generated@@922 T@U) ($generated@@923 T@U) ) (!  (=> (and (and (and (= (type $generated@@921) ($generated@@488 $generated@@200 $generated@@200)) (= (type $generated@@922) $generated@@77)) (= (type $generated@@923) $generated@@77)) ($generated@@170 $generated@@921 ($generated@@636 $generated@@922 $generated@@923))) (and (and ($generated@@170 ($generated@@486 $generated@@921) ($generated@@370 $generated@@922)) ($generated@@170 ($generated@@539 $generated@@921) ($generated@@370 $generated@@923))) ($generated@@170 ($generated@@610 $generated@@921) ($generated@@370 ($generated@@190 $generated@@922 $generated@@923)))))
 :pattern ( ($generated@@170 $generated@@921 ($generated@@636 $generated@@922 $generated@@923)))
)))
(assert (forall (($generated@@924 T@U) ($generated@@925 T@U) ($generated@@926 T@U) ) (!  (=> (and (and (and (= (type $generated@@924) ($generated@@506 $generated@@200 $generated@@200)) (= (type $generated@@925) $generated@@77)) (= (type $generated@@926) $generated@@77)) ($generated@@170 $generated@@924 ($generated@@644 $generated@@925 $generated@@926))) (and (and ($generated@@170 ($generated@@504 $generated@@924) ($generated@@375 $generated@@925)) ($generated@@170 ($generated@@550 $generated@@924) ($generated@@375 $generated@@926))) ($generated@@170 ($generated@@618 $generated@@924) ($generated@@375 ($generated@@190 $generated@@925 $generated@@926)))))
 :pattern ( ($generated@@170 $generated@@924 ($generated@@644 $generated@@925 $generated@@926)))
)))
(assert (forall (($generated@@927 T@U) ) (!  (=> (= (type $generated@@927) $generated@@2) ($generated@@170 $generated@@927 $generated@@46))
 :pattern ( ($generated@@170 $generated@@927 $generated@@46))
)))
(assert (forall (($generated@@928 T@U) ) (!  (=> (= (type $generated@@928) $generated@@3) ($generated@@170 $generated@@928 $generated@@47))
 :pattern ( ($generated@@170 $generated@@928 $generated@@47))
)))
(assert (forall (($generated@@929 T@U) ) (!  (=> (= (type $generated@@929) $generated@@4) ($generated@@170 $generated@@929 $generated@@44))
 :pattern ( ($generated@@170 $generated@@929 $generated@@44))
)))
(assert (forall (($generated@@930 T@U) ) (!  (=> (= (type $generated@@930) $generated@@682) ($generated@@170 $generated@@930 $generated@@45))
 :pattern ( ($generated@@170 $generated@@930 $generated@@45))
)))
(assert (forall (($generated@@931 T@U) ) (!  (=> (= (type $generated@@931) $generated@@200) ($generated@@170 $generated@@931 $generated@@48))
 :pattern ( ($generated@@170 $generated@@931 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@932 () T@U)
(declare-fun $generated@@933 () T@U)
(declare-fun $generated@@934 () T@U)
(declare-fun $generated@@935 () T@U)
(declare-fun $generated@@936 () T@U)
(declare-fun $generated@@937 () T@U)
(declare-fun $generated@@938 (T@U) Bool)
(declare-fun $generated@@939 () Bool)
(declare-fun $generated@@940 () T@U)
(declare-fun $generated@@941 () Int)
(declare-fun $generated@@942 () Int)
(declare-fun $generated@@943 () T@U)
(declare-fun $generated@@944 () Int)
(declare-fun $generated@@945 () Int)
(declare-fun $generated@@946 () Int)
(declare-fun $generated@@947 () Int)
(declare-fun $generated@@948 () T@U)
(declare-fun $generated@@949 () T@U)
(declare-fun $generated@@950 () T@U)
(declare-fun $generated@@951 () T@U)
(declare-fun $generated@@952 () T@U)
(declare-fun $generated@@953 () Int)
(declare-fun $generated@@954 () Bool)
(declare-fun $generated@@955 () Int)
(declare-fun $generated@@956 () T@U)
(declare-fun $generated@@957 () T@U)
(declare-fun $generated@@958 () Int)
(declare-fun $generated@@959 () T@U)
(declare-fun $generated@@960 () T@U)
(declare-fun $generated@@961 () T@U)
(declare-fun $generated@@962 () Bool)
(declare-fun $generated@@963 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@948) $generated@@90) (= (type $generated@@949) $generated@@77)) (= (type $generated@@950) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@951) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@952) $generated@@90)) (= (type $generated@@933) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@935) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@936) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@937) $generated@@148)) (= (type $generated@@940) $generated@@90)) (= (type $generated@@934) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@943) $generated@@148)) (= (type $generated@@932) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@956) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@957) ($generated@@212 $generated@@90 $generated@@4))) (= (type $generated@@959) $generated@@90)) (= (type $generated@@960) $generated@@77)) (= (type $generated@@961) $generated@@90)) (= (type $generated@@963) $generated@@90)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@964 true))
(let (($generated@@965 true))
(let (($generated@@966  (=> (and ($generated@@306 $generated@@932) (or (= $generated@@933 $generated@@932) ($generated@@154 $generated@@933 $generated@@932))) (and (=> (= (ControlFlow 0 25) 23) $generated@@965) (=> (= (ControlFlow 0 25) 24) $generated@@964)))))
(let (($generated@@967 true))
(let (($generated@@968 true))
(let (($generated@@969  (=> (and ($generated@@306 $generated@@934) (or (= $generated@@933 $generated@@934) ($generated@@154 $generated@@933 $generated@@934))) (and (=> (= (ControlFlow 0 17) 15) $generated@@968) (=> (= (ControlFlow 0 17) 16) $generated@@967)))))
(let (($generated@@970 true))
(let (($generated@@971 true))
(let (($generated@@972  (=> (and ($generated@@306 $generated@@935) (or (= $generated@@936 $generated@@935) ($generated@@154 $generated@@936 $generated@@935))) (and (=> (= (ControlFlow 0 10) 8) $generated@@971) (=> (= (ControlFlow 0 10) 9) $generated@@970)))))
(let (($generated@@973 true))
(let (($generated@@974  (=> (= $generated@@937 ($generated@@381 ($generated@@450 ($generated@@593 ($generated@@355 ($generated@@577 ($generated@@336 ($generated@@8 ($generated@@305 (- 0 2))))) ($generated@@581 true) ($generated@@589 ($generated@@446 ($generated@@585 false))))) ($generated@@304 $generated@@570)))) (=> (and (and ($generated@@306 $generated@@936) ($generated@@938 $generated@@936)) (and (forall (($generated@@975 T@U) ) (!  (=> (= (type $generated@@975) $generated@@90) (=> (and (not (= $generated@@975 $generated@@159)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@933 $generated@@975) $generated@@60))) (= ($generated@@94 $generated@@936 $generated@@975) ($generated@@94 $generated@@933 $generated@@975))))
 :pattern ( ($generated@@94 $generated@@936 $generated@@975))
)) ($generated@@154 $generated@@933 $generated@@936))) (and (=> (= (ControlFlow 0 11) (- 0 14)) $generated@@939) (=> $generated@@939 (and (=> (= (ControlFlow 0 11) (- 0 13)) (not (= $generated@@940 $generated@@159))) (=> (not (= $generated@@940 $generated@@159)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@170 ($generated@@8 ($generated@@305 100)) $generated@@164)) (=> ($generated@@170 ($generated@@8 ($generated@@305 100)) $generated@@164) (=> (= $generated@@941 ($generated@@305 100)) (and (=> (= (ControlFlow 0 11) 10) $generated@@972) (=> (= (ControlFlow 0 11) 7) $generated@@973)))))))))))))
(let (($generated@@976  (and (=> (= (ControlFlow 0 18) (- 0 22)) ($generated@@170 ($generated@@8 ($generated@@305 100)) $generated@@164)) (=> ($generated@@170 ($generated@@8 ($generated@@305 100)) $generated@@164) (=> (= $generated@@942 ($generated@@305 100)) (=> (and ($generated@@87 ($generated@@8 $generated@@942) $generated@@164 $generated@@933) (= $generated@@943 ($generated@@381 ($generated@@450 ($generated@@593 ($generated@@355 ($generated@@577 ($generated@@336 ($generated@@8 ($generated@@305 (- 0 2))))) ($generated@@581 true) ($generated@@589 ($generated@@446 ($generated@@585 false))))) ($generated@@304 $generated@@570))))) (=> (and (and ($generated@@87 $generated@@943 ($generated@@179 $generated@@46) $generated@@933) ($generated@@308 $generated@@47 $generated@@940 ($generated@@305 100) ($generated@@381 ($generated@@450 ($generated@@593 ($generated@@355 ($generated@@577 ($generated@@336 ($generated@@8 ($generated@@305 (- 0 2))))) ($generated@@581 true) ($generated@@589 ($generated@@446 ($generated@@585 false))))) ($generated@@304 $generated@@570))))) (and ($generated@@308 $generated@@47 $generated@@940 ($generated@@305 100) ($generated@@381 ($generated@@450 ($generated@@593 ($generated@@355 ($generated@@577 ($generated@@336 ($generated@@8 ($generated@@305 (- 0 2))))) ($generated@@581 true) ($generated@@589 ($generated@@446 ($generated@@585 false))))) ($generated@@304 $generated@@570)))) (= $generated@@944 ($generated@@303 $generated@@47 ($generated@@304 $generated@@570) $generated@@940 ($generated@@305 100) ($generated@@381 ($generated@@450 ($generated@@593 ($generated@@355 ($generated@@577 ($generated@@336 ($generated@@8 ($generated@@305 (- 0 2))))) ($generated@@581 true) ($generated@@589 ($generated@@446 ($generated@@585 false))))) ($generated@@304 $generated@@570))))))) (and (=> (= (ControlFlow 0 18) (- 0 21)) $generated@@939) (=> $generated@@939 (and (=> (= (ControlFlow 0 18) (- 0 20)) (not (= $generated@@940 $generated@@159))) (=> (not (= $generated@@940 $generated@@159)) (and (=> (= (ControlFlow 0 18) (- 0 19)) ($generated@@170 ($generated@@8 ($generated@@305 100)) $generated@@164)) (=> ($generated@@170 ($generated@@8 ($generated@@305 100)) $generated@@164) (=> (= $generated@@945 ($generated@@305 100)) (and (=> (= (ControlFlow 0 18) 17) $generated@@969) (=> (= (ControlFlow 0 18) 11) $generated@@974))))))))))))))))
(let (($generated@@977  (=> (<= 100 $generated@@946) (and (=> (= (ControlFlow 0 26) (- 0 28)) $generated@@939) (=> $generated@@939 (and (=> (= (ControlFlow 0 26) (- 0 27)) (not (= $generated@@940 $generated@@159))) (=> (not (= $generated@@940 $generated@@159)) (=> ($generated@@87 $generated@@940 ($generated@@158 $generated@@47) $generated@@933) (and (=> (= (ControlFlow 0 26) 25) $generated@@966) (=> (= (ControlFlow 0 26) 18) $generated@@976))))))))))
(let (($generated@@978  (=> (and (< $generated@@946 100) (= $generated@@947 (- 100 $generated@@946))) (and (=> (= (ControlFlow 0 4) (- 0 6)) $generated@@939) (=> $generated@@939 (=> (and (not (= $generated@@948 $generated@@159)) (and ($generated@@170 $generated@@948 ($generated@@184 $generated@@949)) ($generated@@87 $generated@@948 ($generated@@184 $generated@@949) $generated@@950))) (=> (and (and (and ($generated@@306 $generated@@951) ($generated@@938 $generated@@951)) (and (not (= $generated@@952 $generated@@159)) (and ($generated@@170 $generated@@952 ($generated@@184 $generated@@47)) ($generated@@87 $generated@@952 ($generated@@184 $generated@@47) $generated@@951)))) (and (and (not ($generated@@0 ($generated@@96 ($generated@@94 $generated@@933 $generated@@952) $generated@@60))) (forall (($generated@@979 T@U) ) (!  (=> (= (type $generated@@979) $generated@@90) (=> (and (not (= $generated@@979 $generated@@159)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@933 $generated@@979) $generated@@60))) (= ($generated@@94 $generated@@951 $generated@@979) ($generated@@94 $generated@@933 $generated@@979))))
 :pattern ( ($generated@@94 $generated@@951 $generated@@979))
))) (and ($generated@@154 $generated@@933 $generated@@951) (= $generated@@953 (+ $generated@@946 1))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@947) (= (- 100 $generated@@953) $generated@@947))) (=> (or (<= 0 $generated@@947) (= (- 100 $generated@@953) $generated@@947)) (=> (= (ControlFlow 0 4) (- 0 3)) (< (- 100 $generated@@953) $generated@@947)))))))))))
(let (($generated@@980  (=> $generated@@954 (and (=> (= (ControlFlow 0 29) 26) $generated@@977) (=> (= (ControlFlow 0 29) 4) $generated@@978)))))
(let (($generated@@981 true))
(let (($generated@@982  (and (=> (= (ControlFlow 0 30) 2) $generated@@981) (=> (= (ControlFlow 0 30) 29) $generated@@980))))
(let (($generated@@983 true))
(let (($generated@@984  (=> (and (and ($generated@@306 $generated@@933) ($generated@@938 $generated@@933)) (=> $generated@@939 (and ($generated@@170 $generated@@940 ($generated@@184 $generated@@47)) ($generated@@87 $generated@@940 ($generated@@184 $generated@@47) $generated@@933)))) (=> (and (and (and (and (and (and (not false) (and (<= 0 $generated@@946) (< $generated@@946 101))) $generated@@939) true) (= $generated@@955 100)) (and (forall (($generated@@985 T@U) ) (!  (=> (= (type $generated@@985) $generated@@90) (=> (and (not (= $generated@@985 $generated@@159)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@950 $generated@@985) $generated@@60))) (= ($generated@@94 $generated@@933 $generated@@985) ($generated@@94 $generated@@956 $generated@@985))))
 :pattern ( ($generated@@94 $generated@@933 $generated@@985))
)) ($generated@@154 $generated@@956 $generated@@933))) (and (and (forall (($generated@@986 T@U) ($generated@@987 T@U) ) (! (let (($generated@@988 ($generated@@80 (type $generated@@987))))
 (=> (and (and (= (type $generated@@986) $generated@@90) (= (type $generated@@987) ($generated@@79 $generated@@988))) (and (not (= $generated@@986 $generated@@159)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@956 $generated@@986) $generated@@60)))) (or (= ($generated@@96 ($generated@@94 $generated@@933 $generated@@986) $generated@@987) ($generated@@96 ($generated@@94 $generated@@956 $generated@@986) $generated@@987)) ($generated@@0 ($generated@@210 $generated@@957 $generated@@986 $generated@@987)))))
 :pattern ( ($generated@@96 ($generated@@94 $generated@@933 $generated@@986) $generated@@987))
)) (=> true $generated@@939)) (and (<= (- 100 $generated@@946) $generated@@955) (=> (= (- 100 $generated@@946) $generated@@955) true)))) (and (=> (= (ControlFlow 0 31) 1) $generated@@983) (=> (= (ControlFlow 0 31) 30) $generated@@982))))))
(let (($generated@@989  (=> (and (= $generated@@957 ($generated@@211 $generated@@159 $generated@@950 $generated@@60 false)) (= $generated@@958 ($generated@@305 0))) (=> (and (and (not (= $generated@@959 $generated@@159)) (and ($generated@@170 $generated@@959 ($generated@@184 $generated@@960)) ($generated@@87 $generated@@959 ($generated@@184 $generated@@960) $generated@@950))) (and ($generated@@306 $generated@@956) ($generated@@938 $generated@@956))) (=> (and (and (and (not (= $generated@@961 $generated@@159)) (and ($generated@@170 $generated@@961 ($generated@@184 $generated@@47)) ($generated@@87 $generated@@961 ($generated@@184 $generated@@47) $generated@@956))) (not ($generated@@0 ($generated@@96 ($generated@@94 $generated@@950 $generated@@961) $generated@@60)))) (and (and (forall (($generated@@990 T@U) ) (!  (=> (= (type $generated@@990) $generated@@90) (=> (and (not (= $generated@@990 $generated@@159)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@950 $generated@@990) $generated@@60))) (= ($generated@@94 $generated@@956 $generated@@990) ($generated@@94 $generated@@950 $generated@@990))))
 :pattern ( ($generated@@94 $generated@@956 $generated@@990))
)) ($generated@@154 $generated@@950 $generated@@956)) (and (= $generated@@955 (- 100 $generated@@958)) (= (ControlFlow 0 32) 31)))) $generated@@984)))))
(let (($generated@@991  (=> (and ($generated@@306 $generated@@950) ($generated@@938 $generated@@950)) (=> (and (and (=> $generated@@962 (and ($generated@@170 $generated@@963 ($generated@@184 $generated@@47)) ($generated@@87 $generated@@963 ($generated@@184 $generated@@47) $generated@@950))) true) (and (= 3 $generated@@302) (= (ControlFlow 0 33) 32))) $generated@@989))))
$generated@@991))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(assert  (and (and (= (type $generated@@599) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@600) $generated@@79)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@605  (=> (and (not (= $generated@@594 ($generated@@240 0))) (= $generated@@595 (+ $generated@@594 $generated@@596))) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@141 ($generated@@8 (- (+ (+ (- $generated@@594 1) $generated@@594) $generated@@596) $generated@@595)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- (+ (+ (- $generated@@594 1) $generated@@594) $generated@@596) $generated@@595)) $generated@@138) (=> (= $generated@@597 (- (+ (+ (- $generated@@594 1) $generated@@594) $generated@@596) $generated@@595)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@141 ($generated@@8 (- (+ (+ (+ $generated@@596 1) $generated@@594) $generated@@596) $generated@@595)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- (+ (+ (+ $generated@@596 1) $generated@@594) $generated@@596) $generated@@595)) $generated@@138) (=> (= $generated@@598 (- (+ (+ (+ $generated@@596 1) $generated@@594) $generated@@596) $generated@@595)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@594) (= $generated@@597 $generated@@594))) (=> (or (<= 0 $generated@@594) (= $generated@@597 $generated@@594)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 $generated@@596) (< $generated@@597 $generated@@594)) (= $generated@@598 $generated@@596))) (=> (or (or (<= 0 $generated@@596) (< $generated@@597 $generated@@594)) (= $generated@@598 $generated@@596)) (=> (= (ControlFlow 0 3) (- 0 2)) (or (< $generated@@597 $generated@@594) (and (= $generated@@597 $generated@@594) (< $generated@@598 $generated@@596)))))))))))))))))
(let (($generated@@606 true))
(let (($generated@@607  (=> (= $generated@@599 ($generated@@165 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@606) (=> (= (ControlFlow 0 8) 3) $generated@@605)))))
(let (($generated@@608  (=> (and (and (and ($generated@@246 $generated@@601) ($generated@@602 $generated@@601)) (<= ($generated@@240 0) $generated@@594)) (and (and (<= ($generated@@240 0) $generated@@596) (<= ($generated@@240 0) $generated@@603)) (and (= 1 $generated@@604) (= (ControlFlow 0 9) 8)))) $generated@@607)))
$generated@@608)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@531 $generated@@138) $generated@@64))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(assert  (and (and (= (type $generated@@599) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@600) $generated@@79)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@605  (=> (not (= $generated@@594 ($generated@@240 0))) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@141 ($generated@@8 (- $generated@@594 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@594 1)) $generated@@138) (=> (= $generated@@595 (- $generated@@594 1)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@141 ($generated@@8 (+ $generated@@596 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@596 1)) $generated@@138) (=> (= $generated@@597 (+ $generated@@596 1)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@594) (= $generated@@595 $generated@@594))) (=> (or (<= 0 $generated@@594) (= $generated@@595 $generated@@594)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (or (<= 0 $generated@@596) (< $generated@@595 $generated@@594)) (= $generated@@597 $generated@@596))) (=> (or (or (<= 0 $generated@@596) (< $generated@@595 $generated@@594)) (= $generated@@597 $generated@@596)) (=> (= (ControlFlow 0 5) (- 0 4)) (or (< $generated@@595 $generated@@594) (and (= $generated@@595 $generated@@594) (< $generated@@597 $generated@@596)))))))))))))))))
(let (($generated@@606  (=> (= $generated@@594 ($generated@@240 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@141 ($generated@@8 (+ $generated@@596 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@596 1)) $generated@@138) (=> (and (= $generated@@598 (+ $generated@@596 1)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 (- $generated@@598 1)) $generated@@138)))))))
(let (($generated@@607  (=> (= $generated@@599 ($generated@@165 $generated@@600 $generated@@601 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 2) $generated@@606) (=> (= (ControlFlow 0 10) 5) $generated@@605)))))
(let (($generated@@608  (=> (and (and (and ($generated@@246 $generated@@601) ($generated@@602 $generated@@601)) (<= ($generated@@240 0) $generated@@594)) (and (and (<= ($generated@@240 0) $generated@@596) (<= ($generated@@240 0) $generated@@603)) (and (= 1 $generated@@604) (= (ControlFlow 0 11) 10)))) $generated@@607)))
$generated@@608)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U T@U) Bool)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (Int Int) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert ($generated@@268 $generated@@60))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@154)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@76 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@247 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@275) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@276) $generated@@154)) (= (type $generated@@277) $generated@@66)) ($generated@@134 $generated@@274 $generated@@275)) ($generated@@247 $generated@@276 $generated@@277 $generated@@274)) ($generated@@247 $generated@@276 $generated@@277 $generated@@275))
 :pattern ( ($generated@@134 $generated@@274 $generated@@275) ($generated@@247 $generated@@276 $generated@@277 $generated@@274))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@279) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@281) $generated@@66)) ($generated@@134 $generated@@278 $generated@@279)) ($generated@@76 $generated@@280 $generated@@281 $generated@@278)) ($generated@@76 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@134 $generated@@278 $generated@@279) ($generated@@76 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@284 T@T) ) (! (= (type ($generated@@283 $generated@@284)) ($generated@@78 $generated@@284 $generated@@2))
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@81 (type $generated@@285))))
 (=> (= (type $generated@@285) ($generated@@78 $generated@@286 $generated@@2)) (and (= (= ($generated@@282 $generated@@285) 0) (= $generated@@285 ($generated@@283 $generated@@286))) (=> (not (= ($generated@@282 $generated@@285) 0)) (exists (($generated@@287 T@U) ) (!  (and (= (type $generated@@287) $generated@@286) (< 0 ($generated ($generated@@83 $generated@@285 $generated@@287))))
 :no-pattern (type $generated@@287)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
))))))
 :pattern ( ($generated@@282 $generated@@285))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 18)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@78 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@83 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@83 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 19)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@78 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@83 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@83 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@325) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@326) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@324 $generated@@325 $generated@@326)) (and ($generated@@134 $generated@@325 $generated@@326) (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@69 (type $generated@@328))))
 (=> (and (and (= (type $generated@@327) $generated@@79) (= (type $generated@@328) ($generated@@68 $generated@@329))) (not ($generated@@268 $generated@@328))) (= ($generated@@85 ($generated@@83 $generated@@325 $generated@@327) $generated@@328) ($generated@@85 ($generated@@83 $generated@@326 $generated@@327) $generated@@328))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@326 $generated@@327) $generated@@328))
))))
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@81 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@78 $generated@@331 $generated@@2)) (= ($generated@@160 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@83 $generated@@330 $generated@@332))) (<= ($generated ($generated@@83 $generated@@330 $generated@@332)) ($generated@@282 $generated@@330))))
 :pattern ( ($generated@@83 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@160 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@154) ($generated@@221 $generated@@336 $generated@@138)) (and (= ($generated@@269 ($generated@@333 $generated@@2 $generated@@336)) $generated@@336) ($generated@@141 ($generated@@333 $generated@@2 $generated@@336) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@336 $generated@@138))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@292 (type $generated@@337))))
(let (($generated@@339 ($generated@@291 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@290 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@289 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@288 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@292 (type $generated@@344))))
(let (($generated@@346 ($generated@@291 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@290 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@289 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@310 (type $generated@@348))))
(let (($generated@@350 ($generated@@309 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@308 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@307 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@306 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@310 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@310 (type $generated@@355))))
(let (($generated@@357 ($generated@@309 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@308 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@307 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@360) $generated@@66)) (= ($generated@@141 $generated@@359 ($generated@@159 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@359 $generated@@361)))) ($generated@@221 $generated@@361 $generated@@360))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@141 $generated@@359 ($generated@@159 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@230 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@247 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@230 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@235 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@154) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@247 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@235 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@83 ($generated@@283 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@83 ($generated@@283 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@292 (type $generated@@375))))
(let (($generated@@377 ($generated@@291 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@290 $generated@@154 $generated@@154)) (= (type $generated@@379) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@288 $generated@@378) ($generated@@152 ($generated@@333 $generated@@145 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@152 ($generated@@333 $generated@@145 $generated@@379))) ($generated@@153 ($generated@@333 $generated@@145 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@310 (type $generated@@383))))
(let (($generated@@385 ($generated@@309 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@308 $generated@@154 $generated@@154)) (= (type $generated@@387) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@306 $generated@@386) ($generated@@152 ($generated@@333 $generated@@145 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@152 ($generated@@333 $generated@@145 $generated@@387))) ($generated@@153 ($generated@@333 $generated@@145 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@291 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@290 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@288 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@309 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@308 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@306 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@290 $generated@@154 $generated@@154)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@401) $generated@@405))) (and ($generated@@247 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@247 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@308 $generated@@154 $generated@@154)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@409) $generated@@413))) (and ($generated@@247 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@247 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@414 $generated@@416))) (and ($generated@@134 $generated@@414 $generated@@415) ($generated@@134 $generated@@415 $generated@@416))) ($generated@@134 $generated@@414 $generated@@416))
 :pattern ( ($generated@@134 $generated@@414 $generated@@415) ($generated@@134 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@78 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@310 (type $generated@@419))))
(let (($generated@@421 ($generated@@309 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@308 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@307 $generated@@421 $generated@@420)) (= ($generated@@306 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@306 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@310 (type $generated@@422))))
(let (($generated@@424 ($generated@@309 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@308 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@307 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@310 (type $generated@@425))))
(let (($generated@@427 ($generated@@309 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@308 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@307 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@154))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@292 (type $generated@@428))))
(let (($generated@@430 ($generated@@291 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@290 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@289 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@154) (= (type $generated@@432) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@428) ($generated@@269 ($generated@@220 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@310 (type $generated@@433))))
(let (($generated@@435 ($generated@@309 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@308 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@307 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@154) (= (type $generated@@437) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@433) ($generated@@269 ($generated@@220 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@221 $generated@@438 $generated@@46)) (and (= ($generated@@269 ($generated@@333 $generated@@2 $generated@@438)) $generated@@438) ($generated@@141 ($generated@@333 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@221 $generated@@439 $generated@@47)) (and (= ($generated@@269 ($generated@@333 $generated@@3 $generated@@439)) $generated@@439) ($generated@@141 ($generated@@333 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@154) ($generated@@221 $generated@@440 $generated@@44)) (and (= ($generated@@269 ($generated@@333 $generated@@4 $generated@@440)) $generated@@440) ($generated@@141 ($generated@@333 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@221 $generated@@442 $generated@@45)) (and (= ($generated@@269 ($generated@@333 $generated@@441 $generated@@442)) $generated@@442) ($generated@@141 ($generated@@333 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@66) (= ($generated@@221 ($generated@@269 $generated@@443) $generated@@444) ($generated@@141 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@221 ($generated@@269 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@81 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@78 $generated@@446 $generated@@2)) (<= 0 ($generated@@282 $generated@@445))))
 :pattern ( ($generated@@282 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@262 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@261 $generated@@448)) (<= 0 ($generated@@260 $generated@@447))))
 :pattern ( ($generated@@260 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@154) (= (type $generated@@470) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@469 $generated@@470)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@144 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@144 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@144 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@144 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@154) (= (type $generated@@480) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@220 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) (= (type $generated@@482) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@220 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@262 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@261 $generated@@154)) (= (type $generated@@490) $generated@@66)) (= (type $generated@@491) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@260 $generated@@489))) ($generated@@247 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@76 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@77 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@77 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@230 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@230 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@235 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@235 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@159 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@159 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@333 $generated@@512 ($generated@@269 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@269 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@290 $generated@@154 $generated@@154)) (= (type $generated@@514) $generated@@66)) (= (type $generated@@515) $generated@@66)) (= ($generated@@141 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@288 $generated@@513) $generated@@516))) (and ($generated@@221 ($generated@@83 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@221 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@83 ($generated@@288 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@141 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@308 $generated@@154 $generated@@154)) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) (= ($generated@@141 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@306 $generated@@517) $generated@@520))) (and ($generated@@221 ($generated@@83 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@221 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@83 ($generated@@306 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@141 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@154)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@220 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@220 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@154)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@220 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@220 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@154) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) ($generated@@221 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@269 ($generated@@333 ($generated@@290 $generated@@154 $generated@@154) $generated@@527)) $generated@@527) ($generated@@141 ($generated@@333 ($generated@@290 $generated@@154 $generated@@154) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@221 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@154) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) ($generated@@221 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@269 ($generated@@333 ($generated@@308 $generated@@154 $generated@@154) $generated@@530)) $generated@@530) ($generated@@141 ($generated@@333 ($generated@@308 $generated@@154 $generated@@154) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@221 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@154)) ($generated@@221 $generated@@535 ($generated@@144 $generated@@533 $generated@@534))) (and (= ($generated@@269 ($generated@@333 $generated@@145 $generated@@535)) $generated@@535) ($generated@@141 ($generated@@333 $generated@@145 $generated@@535) ($generated@@144 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@144 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@83 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@83 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 Int) ($generated@@540 Int) ) (! (= ($generated@@538 $generated@@539 $generated@@540) (mod $generated@@539 $generated@@540))
 :pattern ( ($generated@@538 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@543 $generated@@544)) $generated@@63) (= ($generated@@541 ($generated@@144 $generated@@543 $generated@@544)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@145) (= ($generated@@521 ($generated@@269 $generated@@545)) ($generated@@522 $generated@@545)))
 :pattern ( ($generated@@521 ($generated@@269 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@154) ($generated@@221 $generated@@546 ($generated@@77 0))) (and (= ($generated@@269 ($generated@@333 $generated@@2 $generated@@546)) $generated@@546) ($generated@@141 ($generated@@333 ($generated@@78 $generated@@154 $generated@@4) $generated@@546) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@546 ($generated@@77 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@154) (= (type $generated@@548) $generated@@66)) ($generated@@221 $generated@@547 ($generated@@230 $generated@@548))) (and (= ($generated@@269 ($generated@@333 ($generated@@78 $generated@@154 $generated@@4) $generated@@547)) $generated@@547) ($generated@@141 ($generated@@333 ($generated@@78 $generated@@154 $generated@@4) $generated@@547) ($generated@@230 $generated@@548))))
 :pattern ( ($generated@@221 $generated@@547 ($generated@@230 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@66)) ($generated@@221 $generated@@549 ($generated@@235 $generated@@550))) (and (= ($generated@@269 ($generated@@333 ($generated@@78 $generated@@154 $generated@@4) $generated@@549)) $generated@@549) ($generated@@141 ($generated@@333 ($generated@@78 $generated@@154 $generated@@4) $generated@@549) ($generated@@235 $generated@@550))))
 :pattern ( ($generated@@221 $generated@@549 ($generated@@235 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@66)) ($generated@@221 $generated@@551 ($generated@@159 $generated@@552))) (and (= ($generated@@269 ($generated@@333 ($generated@@78 $generated@@154 $generated@@2) $generated@@551)) $generated@@551) ($generated@@141 ($generated@@333 ($generated@@78 $generated@@154 $generated@@2) $generated@@551) ($generated@@159 $generated@@552))))
 :pattern ( ($generated@@221 $generated@@551 ($generated@@159 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@154) (= (type $generated@@554) $generated@@66)) ($generated@@221 $generated@@553 ($generated@@483 $generated@@554))) (and (= ($generated@@269 ($generated@@333 ($generated@@261 $generated@@154) $generated@@553)) $generated@@553) ($generated@@141 ($generated@@333 ($generated@@261 $generated@@154) $generated@@553) ($generated@@483 $generated@@554))))
 :pattern ( ($generated@@221 $generated@@553 ($generated@@483 $generated@@554)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@541 $generated@@138) $generated@@64))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@555 ($generated@@159 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@555 $generated@@558)))) ($generated@@247 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@83 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@76 $generated@@555 ($generated@@159 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@561) (and ($generated@@143 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@66) ($generated@@76 $generated@@559 ($generated@@144 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@76 $generated@@559 ($generated@@144 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@247 ($generated@@152 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@145) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@565) (and ($generated@@143 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@66) ($generated@@76 $generated@@563 ($generated@@144 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@76 $generated@@563 ($generated@@144 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@247 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@154) (= (type $generated@@568) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@567) ($generated@@242 $generated@@568)) ($generated@@242 ($generated@@220 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@567) ($generated@@242 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@240 $generated@@569))) ($generated@@242 ($generated@@269 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@240 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@269 ($generated@@242 $generated@@570)) ($generated@@242 ($generated@@269 $generated@@570)))
 :pattern ( ($generated@@269 ($generated@@242 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@262 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@261 $generated@@572)) (= ($generated@@260 $generated@@571) 0)) (= $generated@@571 ($generated@@259 $generated@@572))))
 :pattern ( ($generated@@260 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@78 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@282 ($generated@@84 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@282 $generated@@573) ($generated ($generated@@83 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@282 ($generated@@84 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@578) $generated@@2)) ($generated@@76 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@76 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@580) $generated@@3)) ($generated@@76 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@76 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@582) $generated@@4)) ($generated@@76 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@76 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@441)) ($generated@@76 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@154)) ($generated@@76 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@261 $generated@@154)) (= (type $generated@@588) $generated@@66)) (= ($generated@@141 $generated@@587 ($generated@@483 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@260 $generated@@587))) ($generated@@221 ($generated@@484 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@484 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@141 $generated@@587 ($generated@@483 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@260 $generated@@591))) (< ($generated@@522 ($generated@@333 $generated@@145 ($generated@@484 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@522 ($generated@@333 $generated@@145 ($generated@@484 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@290 $generated@@154 $generated@@154)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@141 $generated@@593 ($generated@@398 $generated@@594 $generated@@595))) (and (and ($generated@@141 ($generated@@288 $generated@@593) ($generated@@230 $generated@@594)) ($generated@@141 ($generated@@341 $generated@@593) ($generated@@230 $generated@@595))) ($generated@@141 ($generated@@372 $generated@@593) ($generated@@230 ($generated@@144 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@141 $generated@@593 ($generated@@398 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@308 $generated@@154 $generated@@154)) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) $generated@@66)) ($generated@@141 $generated@@596 ($generated@@406 $generated@@597 $generated@@598))) (and (and ($generated@@141 ($generated@@306 $generated@@596) ($generated@@235 $generated@@597)) ($generated@@141 ($generated@@352 $generated@@596) ($generated@@235 $generated@@598))) ($generated@@141 ($generated@@380 $generated@@596) ($generated@@235 ($generated@@144 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@141 $generated@@596 ($generated@@406 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@141 $generated@@599 $generated@@46))
 :pattern ( ($generated@@141 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@141 $generated@@600 $generated@@47))
 :pattern ( ($generated@@141 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@141 $generated@@601 $generated@@44))
 :pattern ( ($generated@@141 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@441) ($generated@@141 $generated@@602 $generated@@45))
 :pattern ( ($generated@@141 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@154) ($generated@@141 $generated@@603 $generated@@48))
 :pattern ( ($generated@@141 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () Bool)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@618) $generated@@79)) (= (type $generated@@619) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@620) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 54) (let (($generated@@634 true))
(let (($generated@@635  (=> (and (not (= $generated@@604 ($generated@@240 300))) (= (ControlFlow 0 43) 41)) $generated@@634)))
(let (($generated@@636  (=> (= $generated@@604 ($generated@@240 300)) (=> (and (= $generated@@605 (+ $generated@@606 1)) (= (ControlFlow 0 42) 41)) $generated@@634))))
(let (($generated@@637  (and (=> (= (ControlFlow 0 44) 42) $generated@@636) (=> (= (ControlFlow 0 44) 43) $generated@@635))))
(let (($generated@@638  (=> (and (<= 25 $generated@@607) (= (ControlFlow 0 47) 44)) $generated@@637)))
(let (($generated@@639  (=> (and (< $generated@@607 25) (= (ControlFlow 0 46) 44)) $generated@@637)))
(let (($generated@@640  (=> (not (= $generated@@604 ($generated@@240 300))) (and (=> (= (ControlFlow 0 48) 46) $generated@@639) (=> (= (ControlFlow 0 48) 47) $generated@@638)))))
(let (($generated@@641  (=> (and (= $generated@@604 ($generated@@240 300)) (= (ControlFlow 0 45) 44)) $generated@@637)))
(let (($generated@@642  (and (=> (= (ControlFlow 0 49) 45) $generated@@641) (=> (= (ControlFlow 0 49) 48) $generated@@640))))
(let (($generated@@643  (=> (and (not (= $generated@@604 ($generated@@240 300))) (= (ControlFlow 0 51) 49)) $generated@@642)))
(let (($generated@@644  (=> (= $generated@@604 ($generated@@240 300)) (=> (and (= $generated@@608 (+ $generated@@609 1)) (= (ControlFlow 0 50) 49)) $generated@@642))))
(let (($generated@@645  (=> (and (= $generated@@610 ($generated@@240 0)) (= $generated@@609 ($generated@@240 20))) (and (=> (= (ControlFlow 0 52) 50) $generated@@644) (=> (= (ControlFlow 0 52) 51) $generated@@643)))))
(let (($generated@@646  (=> (and ($generated@@0 ($generated@@242 ($generated@@11 (< 15 14)))) (= $generated@@611 ($generated@@240 (- 14 15)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@611) (= ($generated@@240 (- 14 15)) $generated@@611))) (=> (or (<= 0 $generated@@611) (= ($generated@@240 (- 14 15)) $generated@@611)) (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@240 (- 14 15)) $generated@@611)))))))
(let (($generated@@647 true))
(let (($generated@@648  (=> $generated@@612 (and (=> (= (ControlFlow 0 7) 3) $generated@@647) (=> (= (ControlFlow 0 7) 5) $generated@@646)))))
(let (($generated@@649 true))
(let (($generated@@650  (and (=> (= (ControlFlow 0 8) 2) $generated@@649) (=> (= (ControlFlow 0 8) 7) $generated@@648))))
(let (($generated@@651 true))
(let (($generated@@652  (=> (and (and (and (and (and (and (not false) (and (<= 13 $generated@@613) (< $generated@@613 25))) (= $generated@@614 10)) (= $generated@@615 8)) (= $generated@@616 (- 0 1))) (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@79) (=> (and (not (= $generated@@653 $generated@@618)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@619 $generated@@653) $generated@@60))) (= ($generated@@83 $generated@@617 $generated@@653) ($generated@@83 $generated@@617 $generated@@653))))
 :pattern ( ($generated@@83 $generated@@617 $generated@@653))
))) (and (and ($generated@@324 $generated@@617 $generated@@617) (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@69 (type $generated@@655))))
 (=> (and (and (= (type $generated@@654) $generated@@79) (= (type $generated@@655) ($generated@@68 $generated@@656))) (and (not (= $generated@@654 $generated@@618)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@617 $generated@@654) $generated@@60)))) (or (= ($generated@@85 ($generated@@83 $generated@@617 $generated@@654) $generated@@655) ($generated@@85 ($generated@@83 $generated@@617 $generated@@654) $generated@@655)) ($generated@@0 ($generated@@164 $generated@@620 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@617 $generated@@654) $generated@@655))
))) (and (<= ($generated@@240 (- 14 15)) $generated@@616) (=> (= ($generated@@240 (- 14 15)) $generated@@616) true)))) (and (=> (= (ControlFlow 0 9) 1) $generated@@651) (=> (= (ControlFlow 0 9) 8) $generated@@650)))))
(let (($generated@@657  (=> (and (= $generated@@616 ($generated@@240 (- 14 15))) (= (ControlFlow 0 10) 9)) $generated@@652)))
(let (($generated@@658  (=> (and (not (= $generated@@610 ($generated@@240 1))) (= (ControlFlow 0 13) 10)) $generated@@657)))
(let (($generated@@659  (=> (= $generated@@610 ($generated@@240 1)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@0 ($generated@@242 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@242 ($generated@@11 true))) (=> (= (ControlFlow 0 11) 10) $generated@@657))))))
(let (($generated@@660  (and (=> (= (ControlFlow 0 14) 11) $generated@@659) (=> (= (ControlFlow 0 14) 13) $generated@@658))))
(let (($generated@@661  (=> (and (not (= $generated@@610 ($generated@@240 0))) (= (ControlFlow 0 16) 14)) $generated@@660)))
(let (($generated@@662  (=> (and (= $generated@@610 ($generated@@240 0)) (= (ControlFlow 0 15) 14)) $generated@@660)))
(let (($generated@@663  (and (=> (= (ControlFlow 0 17) 15) $generated@@662) (=> (= (ControlFlow 0 17) 16) $generated@@661))))
(let (($generated@@664  (=> (and (not (= ($generated@@538 $generated@@610 ($generated@@240 5)) ($generated@@240 0))) (= (ControlFlow 0 19) 17)) $generated@@663)))
(let (($generated@@665  (=> (and (= ($generated@@538 $generated@@610 ($generated@@240 5)) ($generated@@240 0)) (= (ControlFlow 0 18) 17)) $generated@@663)))
(let (($generated@@666  (=> (= $generated@@613 (+ $generated@@621 1)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (not (= ($generated@@240 5) 0))) (=> (not (= ($generated@@240 5) 0)) (and (=> (= (ControlFlow 0 20) 18) $generated@@665) (=> (= (ControlFlow 0 20) 19) $generated@@664)))))))
(let (($generated@@667  (=> (not (= ($generated@@538 $generated@@610 ($generated@@240 3)) ($generated@@240 0))) (=> (and (= $generated@@621 $generated@@622) (= (ControlFlow 0 24) 20)) $generated@@666))))
(let (($generated@@668  (=> (and (and (= ($generated@@538 $generated@@610 ($generated@@240 3)) ($generated@@240 0)) (= $generated@@623 (+ $generated@@622 1))) (and (= $generated@@621 $generated@@623) (= (ControlFlow 0 23) 20))) $generated@@666)))
(let (($generated@@669  (=> (not (= ($generated@@538 $generated@@610 ($generated@@240 2)) ($generated@@240 0))) (and (=> (= (ControlFlow 0 25) (- 0 26)) (not (= ($generated@@240 3) 0))) (=> (not (= ($generated@@240 3) 0)) (and (=> (= (ControlFlow 0 25) 23) $generated@@668) (=> (= (ControlFlow 0 25) 24) $generated@@667)))))))
(let (($generated@@670  (=> (= ($generated@@538 $generated@@610 ($generated@@240 2)) ($generated@@240 0)) (=> (and (= $generated@@621 $generated@@622) (= (ControlFlow 0 22) 20)) $generated@@666))))
(let (($generated@@671  (and (=> (= (ControlFlow 0 27) (- 0 28)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (and (=> (= (ControlFlow 0 27) 22) $generated@@670) (=> (= (ControlFlow 0 27) 25) $generated@@669))))))
(let (($generated@@672  (=> (not (= ($generated@@538 $generated@@624 ($generated@@240 3)) ($generated@@240 0))) (=> (and (= $generated@@622 $generated@@624) (= (ControlFlow 0 31) 27)) $generated@@671))))
(let (($generated@@673  (=> (and (and (= ($generated@@538 $generated@@624 ($generated@@240 3)) ($generated@@240 0)) (= $generated@@625 (+ $generated@@624 1))) (and (= $generated@@622 $generated@@625) (= (ControlFlow 0 30) 27))) $generated@@671)))
(let (($generated@@674  (=> (not (= ($generated@@538 $generated@@624 ($generated@@240 2)) ($generated@@240 0))) (and (=> (= (ControlFlow 0 32) (- 0 33)) (not (= ($generated@@240 3) 0))) (=> (not (= ($generated@@240 3) 0)) (and (=> (= (ControlFlow 0 32) 30) $generated@@673) (=> (= (ControlFlow 0 32) 31) $generated@@672)))))))
(let (($generated@@675  (=> (= ($generated@@538 $generated@@624 ($generated@@240 2)) ($generated@@240 0)) (=> (and (= $generated@@622 $generated@@624) (= (ControlFlow 0 29) 27)) $generated@@671))))
(let (($generated@@676  (=> (not (= $generated@@610 ($generated@@240 0))) (and (=> (= (ControlFlow 0 34) (- 0 40)) ($generated@@141 ($generated@@8 (- $generated@@610 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@610 1)) $generated@@138) (=> (= $generated@@626 (- $generated@@610 1)) (and (=> (= (ControlFlow 0 34) (- 0 39)) ($generated@@141 ($generated@@8 (+ $generated@@604 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@604 1)) $generated@@138) (=> (= $generated@@627 (+ $generated@@604 1)) (and (=> (= (ControlFlow 0 34) (- 0 38)) (or (<= 0 $generated@@610) (= $generated@@626 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@626 $generated@@610)) (and (=> (= (ControlFlow 0 34) (- 0 37)) (or (or (<= 0 $generated@@604) (< $generated@@626 $generated@@610)) (= $generated@@627 $generated@@604))) (=> (or (or (<= 0 $generated@@604) (< $generated@@626 $generated@@610)) (= $generated@@627 $generated@@604)) (and (=> (= (ControlFlow 0 34) (- 0 36)) (or (< $generated@@626 $generated@@610) (and (= $generated@@626 $generated@@610) (< $generated@@627 $generated@@604)))) (=> (or (< $generated@@626 $generated@@610) (and (= $generated@@626 $generated@@610) (< $generated@@627 $generated@@604))) (=> (<= ($generated@@240 0) $generated@@628) (=> (and (and (and (and ($generated@@246 $generated@@617) ($generated@@629 $generated@@617)) (<= ($generated@@240 0) $generated@@630)) (and (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@79) (=> (and (not (= $generated@@677 $generated@@618)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@619 $generated@@677) $generated@@60))) (= ($generated@@83 $generated@@617 $generated@@677) ($generated@@83 $generated@@619 $generated@@677))))
 :pattern ( ($generated@@83 $generated@@617 $generated@@677))
)) ($generated@@134 $generated@@619 $generated@@617))) (and (and (= $generated@@614 ($generated@@240 10)) (= $generated@@631 (+ $generated@@607 1))) (and (= $generated@@615 ($generated@@240 8)) (= $generated@@624 (+ $generated@@631 1))))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (not (= ($generated@@240 2) 0))) (=> (not (= ($generated@@240 2) 0)) (and (=> (= (ControlFlow 0 34) 29) $generated@@675) (=> (= (ControlFlow 0 34) 32) $generated@@674)))))))))))))))))))))
(let (($generated@@678  (=> (and (= $generated@@620 ($generated@@165 $generated@@618 $generated@@619 $generated@@60 false)) (= $generated@@607 ($generated@@240 10))) (and (=> (= (ControlFlow 0 53) 52) $generated@@645) (=> (= (ControlFlow 0 53) 34) $generated@@676)))))
(let (($generated@@679  (=> (and (and (and ($generated@@246 $generated@@619) ($generated@@629 $generated@@619)) (<= ($generated@@240 0) $generated@@610)) (and (and (<= ($generated@@240 0) $generated@@604) (<= ($generated@@240 0) $generated@@632)) (and (= 1 $generated@@633) (= (ControlFlow 0 54) 53)))) $generated@@678)))
$generated@@679))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U Int Int) Int)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@272 () Int)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (Int Int) Bool)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@605 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@138)) $generated@@136)
 :pattern ( ($generated@@135 $generated@@138))
))) (= (type $generated@@137) $generated@@136)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ($generated@@141 Int) ) (!  (=> (= (type $generated@@139) $generated@@136) (= ($generated@@134 $generated@@139 $generated@@140 $generated@@141) ($generated@@134 $generated@@137 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@134 ($generated@@135 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@66))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
 :pattern ( ($generated@@76 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@77 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@66) (= (type $generated@@153) $generated@@66)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@66)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@69 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@79) (= (type $generated@@218) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@219) ($generated@@68 $generated@@4))) (= (type $generated@@221) $generated@@79)) (= (type $generated@@222) ($generated@@68 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@79 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@69 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@79) (= (type $generated@@230) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@231) ($generated@@68 $generated@@4))) (= (type $generated@@233) $generated@@79)) (= (type $generated@@234) ($generated@@68 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@149)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@66) (= (type $generated@@241) $generated@@66)) (= (type $generated@@242) $generated@@158)) (= (type $generated@@243) $generated@@158)) (= ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@145 ($generated@@236 $generated@@242 $generated@@243) ($generated@@148 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@149) (= (type $generated@@245) $generated@@149)) (= ($generated@@155 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@155 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@158) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@145 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@158) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@145 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@256 $generated@@257) $generated@@257)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@158)) (= (type $generated@@267) $generated@@158)) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@262 $generated@@268)) (= ($generated@@76 ($generated@@236 $generated@@266 $generated@@267) ($generated@@148 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@76 ($generated@@236 $generated@@266 $generated@@267) ($generated@@148 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@149) (= ($generated@@147 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@62)))
 :pattern ( ($generated@@147 $generated@@271))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@273 $generated@@275)) $generated@@136)
 :pattern ( ($generated@@273 $generated@@275))
)))
(assert  (=> (<= 1 $generated@@272) (forall (($generated@@276 T@U) ($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (and (= (type $generated@@276) $generated@@136) (or ($generated@@274 $generated@@277 $generated@@278) (and (not (= 1 $generated@@272)) (and (<= ($generated@@256 0) $generated@@277) (<= ($generated@@256 0) $generated@@278))))) (and (=> (not (= $generated@@277 ($generated@@256 0))) (let (($generated@@279 (+ $generated@@277 $generated@@278)))
($generated@@274 (- (+ (+ (- $generated@@277 1) $generated@@277) $generated@@278) $generated@@279) (- (+ (+ (+ $generated@@278 1) $generated@@277) $generated@@278) $generated@@279)))) (= ($generated@@134 ($generated@@273 $generated@@276) $generated@@277 $generated@@278) (ite (= $generated@@277 ($generated@@256 0)) $generated@@278 (let (($generated@@280 (+ $generated@@277 $generated@@278)))
($generated@@134 $generated@@276 (- (+ (+ (- $generated@@277 1) $generated@@277) $generated@@278) $generated@@280) (- (+ (+ (+ $generated@@278 1) $generated@@277) $generated@@278) $generated@@280)))))))
 :pattern ( ($generated@@134 ($generated@@273 $generated@@276) $generated@@277 $generated@@278))
))))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@149) ($generated@@147 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@158) (= (type $generated@@283) $generated@@158)) (= $generated@@281 ($generated@@236 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 18)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@2) (= ($generated@@145 $generated@@292 $generated@@142) (<= ($generated@@256 0) ($generated $generated@@292))))
 :pattern ( ($generated@@145 $generated@@292 $generated@@142))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@158)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@66) (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@263 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@76 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@263 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@78 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@81 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@78 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@83 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@78 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@83 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 20)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@83 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@81 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@78 $generated@@341 $generated@@2)) (= ($generated@@164 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@83 $generated@@340 $generated@@342))) (<= ($generated ($generated@@83 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@83 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@164 $generated@@340))
)))
(assert  (=> (<= 1 $generated@@272) (forall (($generated@@343 T@U) ($generated@@344 Int) ($generated@@345 Int) ) (!  (=> (and (= (type $generated@@343) $generated@@136) (or ($generated@@274 $generated@@344 $generated@@345) (and (not (= 1 $generated@@272)) (and (<= ($generated@@256 0) $generated@@344) (<= ($generated@@256 0) $generated@@345))))) (<= ($generated@@256 0) ($generated@@134 $generated@@343 $generated@@344 $generated@@345)))
 :pattern ( ($generated@@134 $generated@@343 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@158) ($generated@@237 $generated@@349 $generated@@142)) (and (= ($generated@@293 ($generated@@346 $generated@@2 $generated@@349)) $generated@@349) ($generated@@145 ($generated@@346 $generated@@2 $generated@@349) $generated@@142)))
 :pattern ( ($generated@@237 $generated@@349 $generated@@142))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@308 (type $generated@@350))))
(let (($generated@@352 ($generated@@307 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@306 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@305 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@304 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@308 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@78 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@308 (type $generated@@357))))
(let (($generated@@359 ($generated@@307 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@306 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@305 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@83 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@326 (type $generated@@361))))
(let (($generated@@363 ($generated@@325 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@324 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@323 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@322 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@78 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@326 (type $generated@@368))))
(let (($generated@@370 ($generated@@325 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@324 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@323 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 Int) ($generated@@374 Int) ) (!  (=> (= (type $generated@@372) $generated@@136) (= ($generated@@134 ($generated@@273 $generated@@372) $generated@@373 $generated@@374) ($generated@@134 $generated@@372 $generated@@373 $generated@@374)))
 :pattern ( ($generated@@134 ($generated@@273 $generated@@372) $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@376) $generated@@66)) (= ($generated@@145 $generated@@375 ($generated@@163 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@375 $generated@@377)))) ($generated@@237 $generated@@377 $generated@@376))
 :pattern ( ($generated@@83 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@145 $generated@@375 ($generated@@163 $generated@@376)))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@379) $generated@@66)) (= (type $generated@@380) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@378 ($generated@@246 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@158) ($generated@@0 ($generated@@83 $generated@@378 $generated@@381))) ($generated@@263 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@83 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@76 $generated@@378 ($generated@@246 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@78 $generated@@158 $generated@@4)) (= (type $generated@@383) $generated@@66)) (= (type $generated@@384) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@382 ($generated@@251 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@158) ($generated@@0 ($generated@@83 $generated@@382 $generated@@385))) ($generated@@263 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@83 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@76 $generated@@382 ($generated@@251 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@83 ($generated@@299 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@83 ($generated@@299 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@308 (type $generated@@391))))
(let (($generated@@393 ($generated@@307 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@306 $generated@@158 $generated@@158)) (= (type $generated@@395) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@394) ($generated@@156 ($generated@@346 $generated@@149 $generated@@395)))) (= ($generated@@83 ($generated@@389 $generated@@394) ($generated@@156 ($generated@@346 $generated@@149 $generated@@395))) ($generated@@157 ($generated@@346 $generated@@149 $generated@@395))))))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@78 $generated@@158 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@326 (type $generated@@399))))
(let (($generated@@401 ($generated@@325 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@78 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@324 $generated@@158 $generated@@158)) (= (type $generated@@403) $generated@@158)) (= ($generated@@0 ($generated@@83 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@402) ($generated@@156 ($generated@@346 $generated@@149 $generated@@403)))) (= ($generated@@83 ($generated@@397 $generated@@402) ($generated@@156 ($generated@@346 $generated@@149 $generated@@403))) ($generated@@157 ($generated@@346 $generated@@149 $generated@@403))))))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@307 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@306 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@83 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@83 ($generated@@304 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@83 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@83 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@325 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@324 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@83 ($generated@@322 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@83 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@66)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@306 $generated@@158 $generated@@158)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@417) $generated@@421))) (and ($generated@@263 ($generated@@83 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@263 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@66)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@324 $generated@@158 $generated@@158)) (= (type $generated@@426) $generated@@66)) (= (type $generated@@427) $generated@@66)) (= (type $generated@@428) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@425) $generated@@429))) (and ($generated@@263 ($generated@@83 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@263 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@76 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@78 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@326 (type $generated@@432))))
(let (($generated@@434 ($generated@@325 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@324 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@323 $generated@@434 $generated@@433)) (= ($generated@@322 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@322 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@326 (type $generated@@435))))
(let (($generated@@437 ($generated@@325 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@324 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@323 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@326 (type $generated@@438))))
(let (($generated@@440 ($generated@@325 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@324 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@323 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@158))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@308 (type $generated@@441))))
(let (($generated@@443 ($generated@@307 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@306 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@305 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@158) (= (type $generated@@445) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@388 $generated@@441) ($generated@@293 ($generated@@236 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@388 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@326 (type $generated@@446))))
(let (($generated@@448 ($generated@@325 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@324 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@323 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@158) (= (type $generated@@450) $generated@@158)) ($generated@@0 ($generated@@83 ($generated@@396 $generated@@446) ($generated@@293 ($generated@@236 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@237 $generated@@451 $generated@@46)) (and (= ($generated@@293 ($generated@@346 $generated@@2 $generated@@451)) $generated@@451) ($generated@@145 ($generated@@346 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@158) ($generated@@237 $generated@@452 $generated@@47)) (and (= ($generated@@293 ($generated@@346 $generated@@3 $generated@@452)) $generated@@452) ($generated@@145 ($generated@@346 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@158) ($generated@@237 $generated@@453 $generated@@44)) (and (= ($generated@@293 ($generated@@346 $generated@@4 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@346 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 21))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@158) ($generated@@237 $generated@@455 $generated@@45)) (and (= ($generated@@293 ($generated@@346 $generated@@454 $generated@@455)) $generated@@455) ($generated@@145 ($generated@@346 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@66) (= ($generated@@237 ($generated@@293 $generated@@456) $generated@@457) ($generated@@145 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@237 ($generated@@293 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@81 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@78 $generated@@459 $generated@@2)) (<= 0 ($generated@@298 $generated@@458))))
 :pattern ( ($generated@@298 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@287 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@286 $generated@@461)) (<= 0 ($generated@@285 $generated@@460))))
 :pattern ( ($generated@@285 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@74 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@66) (= (type $generated@@475) $generated@@66)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@74 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@158) (= (type $generated@@483) $generated@@158)) (= ($generated@@269 ($generated@@236 $generated@@482 $generated@@483)) $generated@@62))
 :pattern ( ($generated@@236 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@148 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@148 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@488 ($generated@@148 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@148 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@156 ($generated@@236 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@236 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@158) (= (type $generated@@495) $generated@@158)) (= ($generated@@157 ($generated@@236 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@236 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@287 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@286 $generated@@158)) (= (type $generated@@503) $generated@@66)) (= (type $generated@@504) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@285 $generated@@502))) ($generated@@263 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@76 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@77 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@77 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@246 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@246 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@251 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@251 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@163 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@163 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@163 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@74 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@346 $generated@@525 ($generated@@293 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@293 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@306 $generated@@158 $generated@@158)) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) (= ($generated@@145 $generated@@526 ($generated@@414 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@304 $generated@@526) $generated@@529))) (and ($generated@@237 ($generated@@83 ($generated@@389 $generated@@526) $generated@@529) $generated@@528) ($generated@@237 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@526) $generated@@529))
 :pattern ( ($generated@@83 ($generated@@304 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@145 $generated@@526 ($generated@@414 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@324 $generated@@158 $generated@@158)) (= (type $generated@@531) $generated@@66)) (= (type $generated@@532) $generated@@66)) (= ($generated@@145 $generated@@530 ($generated@@422 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) ($generated@@0 ($generated@@83 ($generated@@322 $generated@@530) $generated@@533))) (and ($generated@@237 ($generated@@83 ($generated@@397 $generated@@530) $generated@@533) $generated@@532) ($generated@@237 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@530) $generated@@533))
 :pattern ( ($generated@@83 ($generated@@322 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@145 $generated@@530 ($generated@@422 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@158)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@236 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@236 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@158)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@236 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@236 $generated@@538 $generated@@539))
)))
(assert  (=> (<= 1 $generated@@272) (forall (($generated@@540 T@U) ($generated@@541 Int) ($generated@@542 Int) ) (!  (=> (and (= (type $generated@@540) $generated@@136) (or ($generated@@274 ($generated@@256 $generated@@541) ($generated@@256 $generated@@542)) (and (not (= 1 $generated@@272)) (and (<= ($generated@@256 0) $generated@@541) (<= ($generated@@256 0) $generated@@542))))) (and (=> (not (= ($generated@@256 $generated@@541) ($generated@@256 0))) (let (($generated@@543 ($generated@@256 (+ $generated@@541 $generated@@542))))
($generated@@274 (- (+ (+ (- $generated@@541 1) $generated@@541) $generated@@542) $generated@@543) (- (+ (+ (+ $generated@@542 1) $generated@@541) $generated@@542) $generated@@543)))) (= ($generated@@134 ($generated@@273 $generated@@540) ($generated@@256 $generated@@541) ($generated@@256 $generated@@542)) (ite (= ($generated@@256 $generated@@541) ($generated@@256 0)) $generated@@542 (let (($generated@@544 ($generated@@256 (+ $generated@@541 $generated@@542))))
($generated@@256 ($generated@@134 ($generated@@273 $generated@@540) ($generated@@256 (- (+ (+ (- $generated@@541 1) $generated@@541) $generated@@542) $generated@@544)) ($generated@@256 (- (+ (+ (+ $generated@@542 1) $generated@@541) $generated@@542) $generated@@544)))))))))
 :weight 3
 :pattern ( ($generated@@134 ($generated@@273 $generated@@540) ($generated@@256 $generated@@541) ($generated@@256 $generated@@542)))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@158) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@66)) ($generated@@237 $generated@@545 ($generated@@414 $generated@@546 $generated@@547))) (and (= ($generated@@293 ($generated@@346 ($generated@@306 $generated@@158 $generated@@158) $generated@@545)) $generated@@545) ($generated@@145 ($generated@@346 ($generated@@306 $generated@@158 $generated@@158) $generated@@545) ($generated@@414 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@237 $generated@@545 ($generated@@414 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@158) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) $generated@@66)) ($generated@@237 $generated@@548 ($generated@@422 $generated@@549 $generated@@550))) (and (= ($generated@@293 ($generated@@346 ($generated@@324 $generated@@158 $generated@@158) $generated@@548)) $generated@@548) ($generated@@145 ($generated@@346 ($generated@@324 $generated@@158 $generated@@158) $generated@@548) ($generated@@422 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@237 $generated@@548 ($generated@@422 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@158)) ($generated@@237 $generated@@553 ($generated@@148 $generated@@551 $generated@@552))) (and (= ($generated@@293 ($generated@@346 $generated@@149 $generated@@553)) $generated@@553) ($generated@@145 ($generated@@346 $generated@@149 $generated@@553) ($generated@@148 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@237 $generated@@553 ($generated@@148 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@83 ($generated@@430 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@83 ($generated@@430 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@71)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@66) (= (type $generated@@559) $generated@@66)) (and (= ($generated@@74 ($generated@@148 $generated@@558 $generated@@559)) $generated@@63) (= ($generated@@556 ($generated@@148 $generated@@558 $generated@@559)) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@149) (= ($generated@@534 ($generated@@293 $generated@@560)) ($generated@@535 $generated@@560)))
 :pattern ( ($generated@@534 ($generated@@293 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@158) ($generated@@237 $generated@@561 ($generated@@77 0))) (and (= ($generated@@293 ($generated@@346 $generated@@2 $generated@@561)) $generated@@561) ($generated@@145 ($generated@@346 ($generated@@78 $generated@@158 $generated@@4) $generated@@561) ($generated@@77 0))))
 :pattern ( ($generated@@237 $generated@@561 ($generated@@77 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@158) (= (type $generated@@563) $generated@@66)) ($generated@@237 $generated@@562 ($generated@@246 $generated@@563))) (and (= ($generated@@293 ($generated@@346 ($generated@@78 $generated@@158 $generated@@4) $generated@@562)) $generated@@562) ($generated@@145 ($generated@@346 ($generated@@78 $generated@@158 $generated@@4) $generated@@562) ($generated@@246 $generated@@563))))
 :pattern ( ($generated@@237 $generated@@562 ($generated@@246 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@158) (= (type $generated@@565) $generated@@66)) ($generated@@237 $generated@@564 ($generated@@251 $generated@@565))) (and (= ($generated@@293 ($generated@@346 ($generated@@78 $generated@@158 $generated@@4) $generated@@564)) $generated@@564) ($generated@@145 ($generated@@346 ($generated@@78 $generated@@158 $generated@@4) $generated@@564) ($generated@@251 $generated@@565))))
 :pattern ( ($generated@@237 $generated@@564 ($generated@@251 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@158) (= (type $generated@@567) $generated@@66)) ($generated@@237 $generated@@566 ($generated@@163 $generated@@567))) (and (= ($generated@@293 ($generated@@346 ($generated@@78 $generated@@158 $generated@@2) $generated@@566)) $generated@@566) ($generated@@145 ($generated@@346 ($generated@@78 $generated@@158 $generated@@2) $generated@@566) ($generated@@163 $generated@@567))))
 :pattern ( ($generated@@237 $generated@@566 ($generated@@163 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@158) (= (type $generated@@569) $generated@@66)) ($generated@@237 $generated@@568 ($generated@@496 $generated@@569))) (and (= ($generated@@293 ($generated@@346 ($generated@@286 $generated@@158) $generated@@568)) $generated@@568) ($generated@@145 ($generated@@346 ($generated@@286 $generated@@158) $generated@@568) ($generated@@496 $generated@@569))))
 :pattern ( ($generated@@237 $generated@@568 ($generated@@496 $generated@@569)))
)))
(assert (= ($generated@@74 $generated@@142) $generated@@61))
(assert (= ($generated@@556 $generated@@142) $generated@@64))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@158 $generated@@2)) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@570 ($generated@@163 $generated@@571) $generated@@572) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@158) (< 0 ($generated ($generated@@83 $generated@@570 $generated@@573)))) ($generated@@263 $generated@@573 $generated@@571 $generated@@572))
 :pattern ( ($generated@@83 $generated@@570 $generated@@573))
))))
 :pattern ( ($generated@@76 $generated@@570 ($generated@@163 $generated@@571) $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@149) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@576) (and ($generated@@147 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@66) ($generated@@76 $generated@@574 ($generated@@148 $generated@@575 $generated@@577) $generated@@576))
 :pattern ( ($generated@@76 $generated@@574 ($generated@@148 $generated@@575 $generated@@577) $generated@@576))
))))) ($generated@@263 ($generated@@156 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@263 ($generated@@156 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@149) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@580) (and ($generated@@147 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@66) ($generated@@76 $generated@@578 ($generated@@148 $generated@@581 $generated@@579) $generated@@580))
 :pattern ( ($generated@@76 $generated@@578 ($generated@@148 $generated@@581 $generated@@579) $generated@@580))
))))) ($generated@@263 ($generated@@157 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@263 ($generated@@157 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@158) (= (type $generated@@583) $generated@@158)) (= ($generated@@236 ($generated@@258 $generated@@582) ($generated@@258 $generated@@583)) ($generated@@258 ($generated@@236 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@236 ($generated@@258 $generated@@582) ($generated@@258 $generated@@583)))
)))
(assert (forall (($generated@@584 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@256 $generated@@584))) ($generated@@258 ($generated@@293 ($generated@@8 $generated@@584))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@256 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ) (! (= ($generated@@293 ($generated@@258 $generated@@585)) ($generated@@258 ($generated@@293 $generated@@585)))
 :pattern ( ($generated@@293 ($generated@@258 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@287 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@286 $generated@@587)) (= ($generated@@285 $generated@@586) 0)) (= $generated@@586 ($generated@@284 $generated@@587))))
 :pattern ( ($generated@@285 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@589)))
 (=> (and (and (= (type $generated@@588) ($generated@@78 $generated@@591 $generated@@2)) (= (type $generated@@590) $generated@@2)) (<= 0 ($generated $generated@@590))) (= ($generated@@298 ($generated@@84 $generated@@588 $generated@@589 $generated@@590)) (+ (- ($generated@@298 $generated@@588) ($generated ($generated@@83 $generated@@588 $generated@@589))) ($generated $generated@@590)))))
 :pattern ( ($generated@@298 ($generated@@84 $generated@@588 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@2)) ($generated@@76 $generated@@593 $generated@@46 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@46 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@3)) ($generated@@76 $generated@@595 $generated@@47 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@47 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@4)) ($generated@@76 $generated@@597 $generated@@44 $generated@@596))
 :pattern ( ($generated@@76 $generated@@597 $generated@@44 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@599) $generated@@454)) ($generated@@76 $generated@@599 $generated@@45 $generated@@598))
 :pattern ( ($generated@@76 $generated@@599 $generated@@45 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@601) $generated@@158)) ($generated@@76 $generated@@601 $generated@@48 $generated@@600))
 :pattern ( ($generated@@76 $generated@@601 $generated@@48 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@286 $generated@@158)) (= (type $generated@@603) $generated@@66)) (= ($generated@@145 $generated@@602 ($generated@@496 $generated@@603)) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@285 $generated@@602))) ($generated@@237 ($generated@@497 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@497 $generated@@602 $generated@@604))
))))
 :pattern ( ($generated@@145 $generated@@602 ($generated@@496 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 Int) ) (!  (=> (= (type $generated@@606) ($generated@@286 $generated@@158)) (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@285 $generated@@606))) (< ($generated@@535 ($generated@@346 $generated@@149 ($generated@@497 $generated@@606 $generated@@607))) ($generated@@605 $generated@@606))))
 :pattern ( ($generated@@535 ($generated@@346 $generated@@149 ($generated@@497 $generated@@606 $generated@@607))))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@306 $generated@@158 $generated@@158)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) $generated@@66)) ($generated@@145 $generated@@608 ($generated@@414 $generated@@609 $generated@@610))) (and (and ($generated@@145 ($generated@@304 $generated@@608) ($generated@@246 $generated@@609)) ($generated@@145 ($generated@@354 $generated@@608) ($generated@@246 $generated@@610))) ($generated@@145 ($generated@@388 $generated@@608) ($generated@@246 ($generated@@148 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@145 $generated@@608 ($generated@@414 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@324 $generated@@158 $generated@@158)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) $generated@@66)) ($generated@@145 $generated@@611 ($generated@@422 $generated@@612 $generated@@613))) (and (and ($generated@@145 ($generated@@322 $generated@@611) ($generated@@251 $generated@@612)) ($generated@@145 ($generated@@365 $generated@@611) ($generated@@251 $generated@@613))) ($generated@@145 ($generated@@396 $generated@@611) ($generated@@251 ($generated@@148 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@422 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@2) ($generated@@145 $generated@@614 $generated@@46))
 :pattern ( ($generated@@145 $generated@@614 $generated@@46))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@3) ($generated@@145 $generated@@615 $generated@@47))
 :pattern ( ($generated@@145 $generated@@615 $generated@@47))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@4) ($generated@@145 $generated@@616 $generated@@44))
 :pattern ( ($generated@@145 $generated@@616 $generated@@44))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@454) ($generated@@145 $generated@@617 $generated@@45))
 :pattern ( ($generated@@145 $generated@@617 $generated@@45))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@158) ($generated@@145 $generated@@618 $generated@@48))
 :pattern ( ($generated@@145 $generated@@618 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@624) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@626) ($generated@@170 $generated@@79 $generated@@4))) (= (type $generated@@627) $generated@@79)) (= (type $generated@@630) ($generated@@170 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@632  (=> (and (and (not (= $generated@@619 ($generated@@256 0))) (= $generated@@620 (+ $generated@@619 $generated@@621))) (and ($generated@@145 ($generated@@8 $generated@@620) $generated@@46) (= $generated@@622 $generated@@620))) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@145 ($generated@@8 (- (+ (+ (- $generated@@619 1) $generated@@619) $generated@@621) $generated@@622)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- (+ (+ (- $generated@@619 1) $generated@@619) $generated@@621) $generated@@622)) $generated@@142) (=> (and (= $generated@@623 (- (+ (+ (- $generated@@619 1) $generated@@619) $generated@@621) $generated@@622)) ($generated@@76 ($generated@@8 $generated@@623) $generated@@142 $generated@@624)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@145 ($generated@@8 (- (+ (+ (+ $generated@@621 1) $generated@@619) $generated@@621) $generated@@622)) $generated@@142)) (=> ($generated@@145 ($generated@@8 (- (+ (+ (+ $generated@@621 1) $generated@@619) $generated@@621) $generated@@622)) $generated@@142) (=> (and (= $generated@@625 (- (+ (+ (+ $generated@@621 1) $generated@@619) $generated@@621) $generated@@622)) ($generated@@76 ($generated@@8 $generated@@625) $generated@@142 $generated@@624)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@619) (= $generated@@623 $generated@@619))) (=> (or (<= 0 $generated@@619) (= $generated@@623 $generated@@619)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (<= 0 $generated@@621) (< $generated@@623 $generated@@619)) (= $generated@@625 $generated@@621))) (=> (or (or (<= 0 $generated@@621) (< $generated@@623 $generated@@619)) (= $generated@@625 $generated@@621)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< $generated@@623 $generated@@619) (and (= $generated@@623 $generated@@619) (< $generated@@625 $generated@@621)))))))))))))))))
(let (($generated@@633 true))
(let (($generated@@634  (=> (and (and (= $generated@@626 ($generated@@224 $generated@@627 $generated@@624 $generated@@60 false)) (= $generated@@628 ($generated@@256 10))) (and ($generated@@145 ($generated@@8 $generated@@628) $generated@@46) (= $generated@@629 $generated@@628))) (and (=> (= (ControlFlow 0 9) 2) $generated@@633) (=> (= (ControlFlow 0 9) 4) $generated@@632)))))
(let (($generated@@635 true))
(let (($generated@@636  (=> (= $generated@@630 ($generated@@169 $generated@@627 $generated@@624 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@635) (=> (= (ControlFlow 0 10) 9) $generated@@634)))))
(let (($generated@@637  (=> (and ($generated@@262 $generated@@624) ($generated@@631 $generated@@624)) (=> (and (and (<= ($generated@@256 0) $generated@@619) (<= ($generated@@256 0) $generated@@621)) (and (= 1 $generated@@272) (= (ControlFlow 0 11) 10))) $generated@@636))))
$generated@@637)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@259 (Int) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 () T@T)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U Int) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@250)) 17)) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@246 $generated@@252 $generated@@253)) ($generated@@248 $generated@@254)))
 :pattern ( ($generated@@246 $generated@@252 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@247 $generated@@255)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@248 $generated@@154)) (= (type $generated@@257) $generated@@154)) (= (type $generated@@258) $generated@@66)) (and ($generated@@141 $generated@@256 ($generated@@247 $generated@@258)) ($generated@@221 $generated@@257 $generated@@258))) ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
 :pattern ( ($generated@@141 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
)))
(assert  (and (= ($generated@@1 $generated@@261) 18) (forall (($generated@@262 Int) ) (! (= (type ($generated@@259 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@259 $generated@@262))
))))
(assert (forall (($generated@@263 Int) ) (!  (=> (and (<= 0 $generated@@263) (< $generated@@263 65536)) (= ($generated@@260 ($generated@@259 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@259 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@154)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@268 $generated@@269) ($generated@@144 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@145) (= ($generated@@143 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@145) ($generated@@143 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@154) (= (type $generated@@276) $generated@@154)) (= $generated@@274 ($generated@@220 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@143 $generated@@274))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@277 $generated@@279)) ($generated@@248 $generated@@279))
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) 0)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@2) (= ($generated@@141 $generated@@281 $generated@@138) (<= ($generated@@240 0) ($generated $generated@@281))))
 :pattern ( ($generated@@141 $generated@@281 $generated@@138))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 (type $generated@@283)))
 (=> (= (type $generated@@282) ($generated@@248 $generated@@284)) (= ($generated@@278 ($generated@@246 $generated@@282 $generated@@283)) (+ 1 ($generated@@278 $generated@@282)))))
 :pattern ( ($generated@@246 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@261) (and (and (= ($generated@@259 ($generated@@260 $generated@@285)) $generated@@285) (<= 0 ($generated@@260 $generated@@285))) (< ($generated@@260 $generated@@285) 65536)))
 :pattern ( ($generated@@260 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@154)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@76 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@292) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@293) $generated@@154)) (= (type $generated@@294) $generated@@66)) ($generated@@134 $generated@@291 $generated@@292)) ($generated@@265 $generated@@293 $generated@@294 $generated@@291)) ($generated@@265 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@134 $generated@@291 $generated@@292) ($generated@@265 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@298) $generated@@66)) ($generated@@134 $generated@@295 $generated@@296)) ($generated@@76 $generated@@297 $generated@@298 $generated@@295)) ($generated@@76 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@134 $generated@@295 $generated@@296) ($generated@@76 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@78 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@81 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@78 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@83 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 20)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@78 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@83 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@83 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@81 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@78 $generated@@342 $generated@@2)) (= ($generated@@160 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@83 $generated@@341 $generated@@343))) (<= ($generated ($generated@@83 $generated@@341 $generated@@343)) ($generated@@299 $generated@@341))))
 :pattern ( ($generated@@83 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@160 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@154) ($generated@@221 $generated@@347 $generated@@138)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@347)) $generated@@347) ($generated@@141 ($generated@@344 $generated@@2 $generated@@347) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@347 $generated@@138))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 Int) ) (! (let (($generated@@351 ($generated@@249 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@351))
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 Int) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (= (type $generated@@352) ($generated@@248 $generated@@355)) (and (=> (= $generated@@353 ($generated@@278 $generated@@352)) (= ($generated@@348 ($generated@@246 $generated@@352 $generated@@354) $generated@@353) $generated@@354)) (=> (not (= $generated@@353 ($generated@@278 $generated@@352))) (= ($generated@@348 ($generated@@246 $generated@@352 $generated@@354) $generated@@353) ($generated@@348 $generated@@352 $generated@@353))))))
 :pattern ( ($generated@@348 ($generated@@246 $generated@@352 $generated@@354) $generated@@353))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@309 (type $generated@@356))))
(let (($generated@@358 ($generated@@308 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@307 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@306 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@358) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@305 $generated@@356))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@309 (type $generated@@361))))
(= (type ($generated@@360 $generated@@361)) ($generated@@78 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@309 (type $generated@@363))))
(let (($generated@@365 ($generated@@308 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@307 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@306 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@364) ($generated@@0 ($generated@@83 ($generated@@360 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@360 $generated@@363))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@327 (type $generated@@367))))
(let (($generated@@369 ($generated@@326 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@325 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@324 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@323 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@327 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@78 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@327 (type $generated@@374))))
(let (($generated@@376 ($generated@@326 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@325 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@324 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@379) $generated@@66)) (= ($generated@@141 $generated@@378 ($generated@@159 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@378 $generated@@380)))) ($generated@@221 $generated@@380 $generated@@379))
 :pattern ( ($generated@@83 $generated@@378 $generated@@380))
))))
 :pattern ( ($generated@@141 $generated@@378 ($generated@@159 $generated@@379)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@230 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@154) ($generated@@0 ($generated@@83 $generated@@381 $generated@@384))) ($generated@@265 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@83 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@230 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@386) $generated@@66)) (= (type $generated@@387) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@385 ($generated@@235 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@154) ($generated@@0 ($generated@@83 $generated@@385 $generated@@388))) ($generated@@265 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@83 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@76 $generated@@385 ($generated@@235 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(= ($generated ($generated@@83 ($generated@@300 $generated@@390) $generated@@389)) 0))
 :pattern ( (let (($generated@@390 (type $generated@@389)))
($generated@@83 ($generated@@300 $generated@@390) $generated@@389)))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@309 (type $generated@@394))))
(let (($generated@@396 ($generated@@308 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@398) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@397) ($generated@@152 ($generated@@344 $generated@@145 $generated@@398)))) (= ($generated@@83 ($generated@@392 $generated@@397) ($generated@@152 ($generated@@344 $generated@@145 $generated@@398))) ($generated@@153 ($generated@@344 $generated@@145 $generated@@398))))))
 :pattern ( ($generated@@83 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@327 (type $generated@@402))))
(let (($generated@@404 ($generated@@326 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@78 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@325 $generated@@154 $generated@@154)) (= (type $generated@@406) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@83 ($generated@@323 $generated@@405) ($generated@@152 ($generated@@344 $generated@@145 $generated@@406)))) (= ($generated@@83 ($generated@@400 $generated@@405) ($generated@@152 ($generated@@344 $generated@@145 $generated@@406))) ($generated@@153 ($generated@@344 $generated@@145 $generated@@406))))))
 :pattern ( ($generated@@83 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@308 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@307 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@83 ($generated@@360 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@83 ($generated@@392 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@83 ($generated@@360 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@326 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@325 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@83 ($generated@@323 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@83 ($generated@@400 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@66)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) $generated@@66)) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@420) $generated@@424))) (and ($generated@@265 ($generated@@83 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@265 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@76 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@325 $generated@@154 $generated@@154)) (= (type $generated@@429) $generated@@66)) (= (type $generated@@430) $generated@@66)) (= (type $generated@@431) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@428) $generated@@432))) (and ($generated@@265 ($generated@@83 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@265 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@76 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@433) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@434) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@435) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@433 $generated@@435))) (and ($generated@@134 $generated@@433 $generated@@434) ($generated@@134 $generated@@434 $generated@@435))) ($generated@@134 $generated@@433 $generated@@435))
 :pattern ( ($generated@@134 $generated@@433 $generated@@434) ($generated@@134 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@78 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@327 (type $generated@@438))))
(let (($generated@@440 ($generated@@326 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@325 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@324 $generated@@440 $generated@@439)) (= ($generated@@323 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@323 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@327 (type $generated@@441))))
(let (($generated@@443 ($generated@@326 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@325 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@324 $generated@@443 $generated@@442)) (= ($generated@@371 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@371 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@327 (type $generated@@444))))
(let (($generated@@446 ($generated@@326 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@325 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@324 $generated@@446 $generated@@445)) (= ($generated@@399 $generated@@444) ($generated@@436 $generated@@154))))))
 :pattern ( ($generated@@399 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@309 (type $generated@@447))))
(let (($generated@@449 ($generated@@308 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@307 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@306 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@154) (= (type $generated@@451) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@391 $generated@@447) ($generated@@286 ($generated@@220 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@391 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@327 (type $generated@@452))))
(let (($generated@@454 ($generated@@326 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@325 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@324 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@154) (= (type $generated@@456) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@399 $generated@@452) ($generated@@286 ($generated@@220 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@399 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@154) ($generated@@221 $generated@@457 $generated@@46)) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@457)) $generated@@457) ($generated@@141 ($generated@@344 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@154) ($generated@@221 $generated@@458 $generated@@47)) (and (= ($generated@@286 ($generated@@344 $generated@@3 $generated@@458)) $generated@@458) ($generated@@141 ($generated@@344 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@221 $generated@@459 $generated@@44)) (and (= ($generated@@286 ($generated@@344 $generated@@4 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@344 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@459 $generated@@44))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@221 $generated@@460 $generated@@45)) (and (= ($generated@@286 ($generated@@344 $generated@@261 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@344 $generated@@261 $generated@@460) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@460 $generated@@45))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@66) (= ($generated@@221 ($generated@@286 $generated@@461) $generated@@462) ($generated@@141 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@221 ($generated@@286 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@81 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@78 $generated@@464 $generated@@2)) (<= 0 ($generated@@299 $generated@@463))))
 :pattern ( ($generated@@299 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@249 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@248 $generated@@466)) (<= 0 ($generated@@278 $generated@@465))))
 :pattern ( ($generated@@278 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@74 ($generated@@417 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@425 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@425 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@425 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@425 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@66) (= (type $generated@@486) $generated@@66)) (= ($generated@@74 ($generated@@425 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@425 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@154) (= (type $generated@@488) $generated@@154)) (= ($generated@@271 ($generated@@220 $generated@@487 $generated@@488)) $generated@@62))
 :pattern ( ($generated@@220 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@66) (= (type $generated@@492) $generated@@66)) (= ($generated@@489 ($generated@@144 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@144 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@493 ($generated@@144 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@144 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@154) (= (type $generated@@498) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@220 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@154) (= (type $generated@@500) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@220 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@248 $generated@@154)) (= (type $generated@@502) $generated@@66)) (= (type $generated@@503) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@501 ($generated@@247 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@278 $generated@@501))) ($generated@@265 ($generated@@348 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@348 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@76 $generated@@501 ($generated@@247 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@77 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@77 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@230 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@230 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@235 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@235 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@159 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@159 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@519 ($generated@@247 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@247 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@247 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@344 $generated@@524 ($generated@@286 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@286 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) (= ($generated@@141 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@525) $generated@@528))) (and ($generated@@221 ($generated@@83 ($generated@@392 $generated@@525) $generated@@528) $generated@@527) ($generated@@221 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@83 ($generated@@392 $generated@@525) $generated@@528))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@141 $generated@@525 ($generated@@417 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@325 $generated@@154 $generated@@154)) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) $generated@@66)) (= ($generated@@141 $generated@@529 ($generated@@425 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@323 $generated@@529) $generated@@532))) (and ($generated@@221 ($generated@@83 ($generated@@400 $generated@@529) $generated@@532) $generated@@531) ($generated@@221 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@83 ($generated@@400 $generated@@529) $generated@@532))
 :pattern ( ($generated@@83 ($generated@@323 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@141 $generated@@529 ($generated@@425 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@154) (= (type $generated@@536) $generated@@154)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@220 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@220 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@154)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@220 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@220 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@417 $generated@@540 $generated@@541))) (and (= ($generated@@286 ($generated@@344 ($generated@@307 $generated@@154 $generated@@154) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@344 ($generated@@307 $generated@@154 $generated@@154) $generated@@539) ($generated@@417 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@417 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@154) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@542 ($generated@@425 $generated@@543 $generated@@544))) (and (= ($generated@@286 ($generated@@344 ($generated@@325 $generated@@154 $generated@@154) $generated@@542)) $generated@@542) ($generated@@141 ($generated@@344 ($generated@@325 $generated@@154 $generated@@154) $generated@@542) ($generated@@425 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@542 ($generated@@425 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@66) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@154)) ($generated@@221 $generated@@547 ($generated@@144 $generated@@545 $generated@@546))) (and (= ($generated@@286 ($generated@@344 $generated@@145 $generated@@547)) $generated@@547) ($generated@@141 ($generated@@344 $generated@@145 $generated@@547) ($generated@@144 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@221 $generated@@547 ($generated@@144 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
 (not ($generated@@0 ($generated@@83 ($generated@@436 $generated@@549) $generated@@548))))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@83 ($generated@@436 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@71)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@66) (= (type $generated@@553) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@552 $generated@@553)) $generated@@63) (= ($generated@@550 ($generated@@144 $generated@@552 $generated@@553)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@552 $generated@@553))
)))
(assert  (and (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@249 (type $generated@@556))))
(= (type ($generated@@554 $generated@@556)) ($generated@@248 $generated@@557)))
 :pattern ( ($generated@@554 $generated@@556))
)) (forall (($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@249 (type $generated@@558))))
(= (type ($generated@@555 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@555 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (=> (= (type $generated@@560) ($generated@@248 $generated@@562)) (and (= ($generated@@554 ($generated@@246 $generated@@560 $generated@@561)) $generated@@560) (= ($generated@@555 ($generated@@246 $generated@@560 $generated@@561)) $generated@@561))))
 :pattern ( ($generated@@246 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@145) (= ($generated@@533 ($generated@@286 $generated@@563)) ($generated@@534 $generated@@563)))
 :pattern ( ($generated@@533 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@154) ($generated@@221 $generated@@564 ($generated@@77 0))) (and (= ($generated@@286 ($generated@@344 $generated@@2 $generated@@564)) $generated@@564) ($generated@@141 ($generated@@344 ($generated@@78 $generated@@154 $generated@@4) $generated@@564) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@564 ($generated@@77 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@230 $generated@@566))) (and (= ($generated@@286 ($generated@@344 ($generated@@78 $generated@@154 $generated@@4) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@344 ($generated@@78 $generated@@154 $generated@@4) $generated@@565) ($generated@@230 $generated@@566))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@230 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@154) (= (type $generated@@568) $generated@@66)) ($generated@@221 $generated@@567 ($generated@@235 $generated@@568))) (and (= ($generated@@286 ($generated@@344 ($generated@@78 $generated@@154 $generated@@4) $generated@@567)) $generated@@567) ($generated@@141 ($generated@@344 ($generated@@78 $generated@@154 $generated@@4) $generated@@567) ($generated@@235 $generated@@568))))
 :pattern ( ($generated@@221 $generated@@567 ($generated@@235 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@154) (= (type $generated@@570) $generated@@66)) ($generated@@221 $generated@@569 ($generated@@159 $generated@@570))) (and (= ($generated@@286 ($generated@@344 ($generated@@78 $generated@@154 $generated@@2) $generated@@569)) $generated@@569) ($generated@@141 ($generated@@344 ($generated@@78 $generated@@154 $generated@@2) $generated@@569) ($generated@@159 $generated@@570))))
 :pattern ( ($generated@@221 $generated@@569 ($generated@@159 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@154) (= (type $generated@@572) $generated@@66)) ($generated@@221 $generated@@571 ($generated@@247 $generated@@572))) (and (= ($generated@@286 ($generated@@344 ($generated@@248 $generated@@154) $generated@@571)) $generated@@571) ($generated@@141 ($generated@@344 ($generated@@248 $generated@@154) $generated@@571) ($generated@@247 $generated@@572))))
 :pattern ( ($generated@@221 $generated@@571 ($generated@@247 $generated@@572)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@550 $generated@@138) $generated@@64))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@573 ($generated@@159 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@573 $generated@@576)))) ($generated@@265 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@83 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@159 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@145) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@579) (and ($generated@@143 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@66) ($generated@@76 $generated@@577 ($generated@@144 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@76 $generated@@577 ($generated@@144 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@265 ($generated@@152 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@265 ($generated@@152 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@145) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@583) (and ($generated@@143 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@66) ($generated@@76 $generated@@581 ($generated@@144 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@76 $generated@@581 ($generated@@144 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@265 ($generated@@153 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@265 ($generated@@153 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@154) (= (type $generated@@586) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@585) ($generated@@242 $generated@@586)) ($generated@@242 ($generated@@220 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@585) ($generated@@242 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@240 $generated@@587))) ($generated@@242 ($generated@@286 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@240 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@286 ($generated@@242 $generated@@588)) ($generated@@242 ($generated@@286 $generated@@588)))
 :pattern ( ($generated@@286 ($generated@@242 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@249 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@248 $generated@@590)) (= ($generated@@278 $generated@@589) 0)) (= $generated@@589 ($generated@@277 $generated@@590))))
 :pattern ( ($generated@@278 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@78 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@299 ($generated@@84 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@299 $generated@@591) ($generated ($generated@@83 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@299 ($generated@@84 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@2)) ($generated@@76 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@3)) ($generated@@76 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) $generated@@4)) ($generated@@76 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@76 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@602) $generated@@261)) ($generated@@76 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@76 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@604) $generated@@154)) ($generated@@76 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@76 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@248 $generated@@154)) (= (type $generated@@606) $generated@@66)) (= ($generated@@141 $generated@@605 ($generated@@247 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@278 $generated@@605))) ($generated@@221 ($generated@@348 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@348 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@141 $generated@@605 ($generated@@247 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@248 $generated@@154)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@278 $generated@@609))) (< ($generated@@534 ($generated@@344 $generated@@145 ($generated@@348 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@534 ($generated@@344 $generated@@145 ($generated@@348 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) $generated@@66)) ($generated@@141 $generated@@611 ($generated@@417 $generated@@612 $generated@@613))) (and (and ($generated@@141 ($generated@@305 $generated@@611) ($generated@@230 $generated@@612)) ($generated@@141 ($generated@@360 $generated@@611) ($generated@@230 $generated@@613))) ($generated@@141 ($generated@@391 $generated@@611) ($generated@@230 ($generated@@144 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@141 $generated@@611 ($generated@@417 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@325 $generated@@154 $generated@@154)) (= (type $generated@@615) $generated@@66)) (= (type $generated@@616) $generated@@66)) ($generated@@141 $generated@@614 ($generated@@425 $generated@@615 $generated@@616))) (and (and ($generated@@141 ($generated@@323 $generated@@614) ($generated@@235 $generated@@615)) ($generated@@141 ($generated@@371 $generated@@614) ($generated@@235 $generated@@616))) ($generated@@141 ($generated@@399 $generated@@614) ($generated@@235 ($generated@@144 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@141 $generated@@614 ($generated@@425 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@141 $generated@@617 $generated@@46))
 :pattern ( ($generated@@141 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@141 $generated@@618 $generated@@47))
 :pattern ( ($generated@@141 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@141 $generated@@619 $generated@@44))
 :pattern ( ($generated@@141 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@261) ($generated@@141 $generated@@620 $generated@@45))
 :pattern ( ($generated@@141 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@154) ($generated@@141 $generated@@621 $generated@@48))
 :pattern ( ($generated@@141 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 (T@U) Bool)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(assert  (and (and (and (and (= (type $generated@@626) ($generated@@248 $generated@@154)) (= (type $generated@@627) ($generated@@248 $generated@@154))) (= (type $generated@@628) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@629) $generated@@79)) (= (type $generated@@630) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@634  (=> (not (= $generated@@622 ($generated@@240 0))) (and (=> (= (ControlFlow 0 3) (- 0 7)) ($generated@@141 ($generated@@8 (- $generated@@622 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (- $generated@@622 1)) $generated@@138) (=> (= $generated@@623 (- $generated@@622 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@141 ($generated@@8 (+ $generated@@622 $generated@@624)) $generated@@138)) (=> ($generated@@141 ($generated@@8 (+ $generated@@622 $generated@@624)) $generated@@138) (=> (and (= $generated@@625 (+ $generated@@622 $generated@@624)) (= $generated@@626 ($generated@@242 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@277 $generated@@154) ($generated@@286 ($generated@@259 32))) ($generated@@286 ($generated@@259 43))) ($generated@@286 ($generated@@259 32)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@622) (= $generated@@623 $generated@@622))) (=> (or (<= 0 $generated@@622) (= $generated@@623 $generated@@622)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 $generated@@624) (< $generated@@623 $generated@@622)) (= $generated@@625 $generated@@624))) (=> (or (or (<= 0 $generated@@624) (< $generated@@623 $generated@@622)) (= $generated@@625 $generated@@624)) (=> (= (ControlFlow 0 3) (- 0 2)) (or (< $generated@@623 $generated@@622) (and (= $generated@@623 $generated@@622) (or (< $generated@@625 $generated@@624) (and (= $generated@@625 $generated@@624) (< ($generated@@608 $generated@@626) ($generated@@608 $generated@@627))))))))))))))))))))
(let (($generated@@635 true))
(let (($generated@@636  (=> (= $generated@@628 ($generated@@165 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@635) (=> (= (ControlFlow 0 8) 3) $generated@@634)))))
(let (($generated@@637  (=> (and (and ($generated@@264 $generated@@630) ($generated@@631 $generated@@630)) (and (<= ($generated@@240 0) $generated@@622) (<= ($generated@@240 0) $generated@@624))) (=> (and (and (and ($generated@@141 $generated@@627 ($generated@@247 $generated@@45)) ($generated@@76 $generated@@627 ($generated@@247 $generated@@45) $generated@@630)) (<= ($generated@@240 0) $generated@@632)) (and (= 1 $generated@@633) (= (ControlFlow 0 9) 8))) $generated@@636))))
$generated@@637)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int T@U) T@U)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (Int) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (Int) Int)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@344 (T@T T@T) T@U)
(declare-fun $generated@@345 (T@T T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 (T@U Int) T@U)
(declare-fun $generated@@396 () T@T)
(declare-fun $generated@@397 (Int) Bool)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (Int Int) Int)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@413 (T@U T@U) Bool)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@469 (T@U T@U) T@U)
(declare-fun $generated@@503 (T@T) T@U)
(declare-fun $generated@@527 () T@T)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@581 (T@U Int) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(declare-fun $generated@@622 (T@U) Int)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@714 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@83) 11) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@94 $generated@@95)) 12))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@84 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@84 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@84 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@84 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@73 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@86) 14)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@86)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@73 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ($generated@@139 T@U) ) (! (= (type ($generated@@81 $generated@@138 $generated@@139)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@138 $generated@@139))
))) (= (type $generated@@82) $generated@@70)))
(assert (forall (($generated@@140 Int) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (and (= (type $generated@@141) $generated@@83) (= (type $generated@@142) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@87 $generated@@142)) (= ($generated@@80 ($generated@@81 $generated@@140 $generated@@141) $generated@@82 $generated@@142)  (and ($generated@@80 ($generated@@8 $generated@@140) $generated@@46 $generated@@142) ($generated@@80 $generated@@141 $generated@@82 $generated@@142))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@140 $generated@@141) $generated@@82 $generated@@142))
)))
(assert (forall (($generated@@144 Int) ) (! (= (type ($generated@@143 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@80 $generated@@145 ($generated@@143 0) $generated@@146))
 :pattern ( ($generated@@80 $generated@@145 ($generated@@143 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@149) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@85) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (= (type $generated@@151) $generated@@70))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@80 $generated@@152 $generated@@151 $generated@@153))
 :pattern ( ($generated@@80 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@154 $generated@@155 ($generated@@143 0)))
 :pattern ( ($generated@@154 $generated@@155 ($generated@@143 0)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@158 $generated@@159)) $generated@@70)
 :pattern ( ($generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (and (= (type $generated@@160) $generated@@70) (= (type $generated@@161) $generated@@70)) (= (type $generated@@162) $generated@@83)) ($generated@@154 $generated@@162 ($generated@@157 $generated@@160 $generated@@161))) ($generated@@156 $generated@@162))
 :pattern ( ($generated@@156 $generated@@162) ($generated@@154 $generated@@162 ($generated@@157 $generated@@160 $generated@@161)))
)))
(assert  (and (and (= ($generated@@1 $generated@@166) 15) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@164 $generated@@167))
))) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@83) (= (type $generated@@170) $generated@@83)) true) (= ($generated@@163 $generated@@169 $generated@@170)  (and (= ($generated@@164 $generated@@169) ($generated@@164 $generated@@170)) (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)))))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@74)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@83)))
(assert (= ($generated@@171 $generated@@172) $generated@@64))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@70)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@84 $generated@@166 $generated@@2)) (= (type $generated@@178) $generated@@70)) ($generated@@154 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@154 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@85 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@73 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@85) (= (type $generated@@229) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@230) ($generated@@72 $generated@@4))) (= (type $generated@@232) $generated@@85)) (= (type $generated@@233) ($generated@@72 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@88 (type $generated@@236))))
(= (type ($generated@@235 $generated@@236 $generated@@237)) ($generated@@84 $generated@@238 $generated@@4)))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@88 (type $generated@@239))))
 (=> (and (= (type $generated@@239) ($generated@@84 $generated@@241 $generated@@4)) (= (type $generated@@240) ($generated@@84 $generated@@241 $generated@@4))) (= ($generated@@235 ($generated@@235 $generated@@239 $generated@@240) $generated@@240) ($generated@@235 $generated@@239 $generated@@240))))
 :pattern ( ($generated@@235 ($generated@@235 $generated@@239 $generated@@240) $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= (type ($generated@@242 $generated@@244 $generated@@245)) $generated@@83)
 :pattern ( ($generated@@242 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@246) $generated@@70) (= (type $generated@@247) $generated@@70)) (= (type $generated@@248) $generated@@166)) (= (type $generated@@249) $generated@@166)) (= ($generated@@154 ($generated@@242 $generated@@248 $generated@@249) ($generated@@157 $generated@@246 $generated@@247))  (and ($generated@@243 $generated@@248 $generated@@246) ($generated@@243 $generated@@249 $generated@@247))))
 :pattern ( ($generated@@154 ($generated@@242 $generated@@248 $generated@@249) ($generated@@157 $generated@@246 $generated@@247)))
)))
(assert ($generated@@154 $generated@@172 $generated@@82))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@84 $generated@@85 $generated@@86)) ($generated@@87 $generated@@250)) ($generated@@80 $generated@@172 $generated@@82 $generated@@250))
 :pattern ( ($generated@@80 $generated@@172 $generated@@82 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@83) (= (type $generated@@252) $generated@@83)) (= ($generated@@163 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@163 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@83) (= (type $generated@@255) $generated@@83)) (= ($generated@@253 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@83)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@83) (= (type $generated@@261) $generated@@83)) (and ($generated@@256 $generated@@260) ($generated@@256 $generated@@261))) (= ($generated@@253 $generated@@260 $generated@@261)  (and (= ($generated@@257 $generated@@260) ($generated@@257 $generated@@261)) ($generated@@253 ($generated@@258 $generated@@260) ($generated@@258 $generated@@261)))))
 :pattern ( ($generated@@253 $generated@@260 $generated@@261) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@253 $generated@@260 $generated@@261) ($generated@@256 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@70)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@84 $generated@@166 $generated@@4)) (= (type $generated@@265) $generated@@70)) (= ($generated@@154 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@166) ($generated@@0 ($generated@@90 $generated@@264 $generated@@266))) ($generated@@243 $generated@@266 $generated@@265))
 :pattern ( ($generated@@90 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@154 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@70)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@84 $generated@@166 $generated@@4)) (= (type $generated@@270) $generated@@70)) (= ($generated@@154 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@166) ($generated@@0 ($generated@@90 $generated@@269 $generated@@271))) ($generated@@243 $generated@@271 $generated@@270))
 :pattern ( ($generated@@90 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@154 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 Int) ) (! (= ($generated@@272 $generated@@273) $generated@@273)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
(= (type ($generated@@274 $generated@@275)) $generated@@276))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@274 $generated@@277) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@83) (= (type $generated@@280) $generated@@83)) (and ($generated@@278 $generated@@279) ($generated@@278 $generated@@280))) (= ($generated@@253 $generated@@279 $generated@@280) true))
 :pattern ( ($generated@@253 $generated@@279 $generated@@280) ($generated@@278 $generated@@279))
 :pattern ( ($generated@@253 $generated@@279 $generated@@280) ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@70) (= (type $generated@@283) $generated@@70)) (= (type $generated@@284) $generated@@166)) (= (type $generated@@285) $generated@@166)) (= (type $generated@@286) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@87 $generated@@286)) (= ($generated@@80 ($generated@@242 $generated@@284 $generated@@285) ($generated@@157 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@80 ($generated@@242 $generated@@284 $generated@@285) ($generated@@157 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@83) (= ($generated@@156 $generated@@287) (= ($generated@@171 $generated@@287) $generated@@62)))
 :pattern ( ($generated@@156 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@83) (= ($generated@@278 $generated@@288) (= ($generated@@171 $generated@@288) $generated@@64)))
 :pattern ( ($generated@@278 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@83) (= ($generated@@256 $generated@@289) (= ($generated@@171 $generated@@289) $generated@@66)))
 :pattern ( ($generated@@256 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@83) ($generated@@156 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@166) (= (type $generated@@292) $generated@@166)) (= $generated@@290 ($generated@@242 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@156 $generated@@290))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@83) ($generated@@256 $generated@@293)) (exists (($generated@@294 Int) ($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@83) (= $generated@@293 ($generated@@81 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@256 $generated@@293))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 17)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@T) ) (! (= (type ($generated@@296 $generated@@302)) ($generated@@298 $generated@@302))
 :pattern ( ($generated@@296 $generated@@302))
))))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@303)) 0)
 :pattern ( ($generated@@296 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@83) ($generated@@278 $generated@@304)) (= $generated@@304 $generated@@172))
 :pattern ( ($generated@@278 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@2) (= ($generated@@154 $generated@@305 $generated@@151) (<= ($generated@@272 0) ($generated $generated@@305))))
 :pattern ( ($generated@@154 $generated@@305 $generated@@151))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@166)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@70) (= (type $generated@@310) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@281 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@80 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@281 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@311) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@312) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@313) $generated@@166)) (= (type $generated@@314) $generated@@70)) ($generated@@147 $generated@@311 $generated@@312)) ($generated@@281 $generated@@313 $generated@@314 $generated@@311)) ($generated@@281 $generated@@313 $generated@@314 $generated@@312))
 :pattern ( ($generated@@147 $generated@@311 $generated@@312) ($generated@@281 $generated@@313 $generated@@314 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@315) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@316) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@318) $generated@@70)) ($generated@@147 $generated@@315 $generated@@316)) ($generated@@80 $generated@@317 $generated@@318 $generated@@315)) ($generated@@80 $generated@@317 $generated@@318 $generated@@316))
 :pattern ( ($generated@@147 $generated@@315 $generated@@316) ($generated@@80 $generated@@317 $generated@@318 $generated@@315))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@320 $generated@@321)) ($generated@@84 $generated@@321 $generated@@2))
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@88 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@84 $generated@@323 $generated@@2)) (and (= (= ($generated@@319 $generated@@322) 0) (= $generated@@322 ($generated@@320 $generated@@323))) (=> (not (= ($generated@@319 $generated@@322) 0)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) (< 0 ($generated ($generated@@90 $generated@@322 $generated@@324))))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 18)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@84 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@90 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@90 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert  (and (and (and (and (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (= ($generated@@1 ($generated@@345 $generated@@348 $generated@@349)) 19)) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@346 ($generated@@345 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@345 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@347 ($generated@@345 $generated@@352 $generated@@353)) $generated@@353)
 :pattern ( ($generated@@345 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@346 (type $generated@@354))))
(= (type ($generated@@343 $generated@@354)) ($generated@@84 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@354))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= (type ($generated@@344 $generated@@356 $generated@@357)) ($generated@@345 $generated@@356 $generated@@357))
 :pattern ( ($generated@@344 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@T) ) (! (let (($generated@@360 (type $generated@@358)))
 (not ($generated@@0 ($generated@@90 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358))))
 :pattern ( (let (($generated@@360 (type $generated@@358)))
($generated@@90 ($generated@@343 ($generated@@344 $generated@@360 $generated@@359)) $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@88 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@84 $generated@@362 $generated@@2)) (= ($generated@@175 $generated@@361) (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@362) (and (<= 0 ($generated ($generated@@90 $generated@@361 $generated@@363))) (<= ($generated ($generated@@90 $generated@@361 $generated@@363)) ($generated@@319 $generated@@361))))
 :pattern ( ($generated@@90 $generated@@361 $generated@@363))
)))))
 :pattern ( ($generated@@175 $generated@@361))
)))
(assert (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@364 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@166) ($generated@@243 $generated@@367 $generated@@151)) (and (= ($generated@@306 ($generated@@364 $generated@@2 $generated@@367)) $generated@@367) ($generated@@154 ($generated@@364 $generated@@2 $generated@@367) $generated@@151)))
 :pattern ( ($generated@@243 $generated@@367 $generated@@151))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@166) ($generated@@243 $generated@@368 $generated@@82)) (and (= ($generated@@306 ($generated@@364 $generated@@83 $generated@@368)) $generated@@368) ($generated@@154 ($generated@@364 $generated@@83 $generated@@368) $generated@@82)))
 :pattern ( ($generated@@243 $generated@@368 $generated@@82))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@329 (type $generated@@369))))
(let (($generated@@371 ($generated@@328 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@327 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@326 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@90 ($generated@@325 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@325 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@329 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@84 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@329 (type $generated@@376))))
(let (($generated@@378 ($generated@@328 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@327 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@326 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@90 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@347 (type $generated@@380))))
(let (($generated@@382 ($generated@@346 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@345 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@344 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@90 ($generated@@343 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@343 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@347 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@84 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@347 (type $generated@@387))))
(let (($generated@@389 ($generated@@346 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@345 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@344 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@90 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@84 $generated@@166 $generated@@2)) (= (type $generated@@392) $generated@@70)) (= ($generated@@154 $generated@@391 ($generated@@174 $generated@@392)) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@166) (< 0 ($generated ($generated@@90 $generated@@391 $generated@@393)))) ($generated@@243 $generated@@393 $generated@@392))
 :pattern ( ($generated@@90 $generated@@391 $generated@@393))
))))
 :pattern ( ($generated@@154 $generated@@391 ($generated@@174 $generated@@392)))
)))
(assert  (and (= ($generated@@1 $generated@@396) 20) (forall (($generated@@398 T@U) ($generated@@399 Int) ) (! (= (type ($generated@@395 $generated@@398 $generated@@399)) ($generated@@84 $generated@@166 $generated@@4))
 :pattern ( ($generated@@395 $generated@@398 $generated@@399))
))))
(assert  (=> (<= 1 $generated@@394) (forall (($generated@@400 T@U) ($generated@@401 Int) ) (!  (=> (and (= (type $generated@@400) $generated@@396) (or ($generated@@397 $generated@@401) (and (not (= 1 $generated@@394)) (<= ($generated@@272 0) $generated@@401)))) ($generated@@154 ($generated@@395 $generated@@400 $generated@@401) ($generated@@262 $generated@@151)))
 :pattern ( ($generated@@395 $generated@@400 $generated@@401))
))))
(assert  (and (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@402 $generated@@406)) $generated@@396)
 :pattern ( ($generated@@402 $generated@@406))
)) (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(= (type ($generated@@404 $generated@@407 $generated@@408)) ($generated@@84 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@407 $generated@@408))
))) (forall (($generated@@410 T@T) ) (! (= (type ($generated@@405 $generated@@410)) ($generated@@84 $generated@@410 $generated@@4))
 :pattern ( ($generated@@405 $generated@@410))
))))
(assert  (=> (<= 1 $generated@@394) (forall (($generated@@411 T@U) ($generated@@412 Int) ) (!  (=> (and (= (type $generated@@411) $generated@@396) (or ($generated@@397 $generated@@412) (and (not (= 1 $generated@@394)) (<= ($generated@@272 0) $generated@@412)))) (and (=> (not (= $generated@@412 ($generated@@272 0))) (and (=> (= ($generated@@403 $generated@@412 ($generated@@272 2)) ($generated@@272 0)) ($generated@@397 (- $generated@@412 1))) (=> (not (= ($generated@@403 $generated@@412 ($generated@@272 2)) ($generated@@272 0))) ($generated@@397 (- $generated@@412 1))))) (= ($generated@@395 ($generated@@402 $generated@@411) $generated@@412) (ite (= $generated@@412 ($generated@@272 0)) ($generated@@404 ($generated@@405 $generated@@166) ($generated@@306 ($generated@@8 ($generated@@272 0)))) (ite (= ($generated@@403 $generated@@412 ($generated@@272 2)) ($generated@@272 0)) ($generated@@235 ($generated@@395 $generated@@411 (- $generated@@412 1)) ($generated@@404 ($generated@@405 $generated@@166) ($generated@@306 ($generated@@8 $generated@@412)))) ($generated@@235 ($generated@@404 ($generated@@405 $generated@@166) ($generated@@306 ($generated@@8 $generated@@412))) ($generated@@395 $generated@@411 (- $generated@@412 1))))))))
 :pattern ( ($generated@@395 ($generated@@402 $generated@@411) $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@88 (type $generated@@415))))
(= (type ($generated@@414 $generated@@415 $generated@@416)) ($generated@@84 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@88 (type $generated@@418))))
 (=> (and (and (= (type $generated@@418) ($generated@@84 $generated@@420 $generated@@4)) (= (type $generated@@419) ($generated@@84 $generated@@420 $generated@@4))) ($generated@@413 $generated@@418 $generated@@419)) (and (= ($generated@@414 ($generated@@235 $generated@@418 $generated@@419) $generated@@418) $generated@@419) (= ($generated@@414 ($generated@@235 $generated@@418 $generated@@419) $generated@@419) $generated@@418))))
 :pattern ( ($generated@@235 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
 (=> (and (= (type $generated@@421) ($generated@@84 $generated@@424 $generated@@4)) (= (type $generated@@422) ($generated@@84 $generated@@424 $generated@@4))) (= ($generated@@0 ($generated@@90 ($generated@@414 $generated@@421 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@90 $generated@@421 $generated@@423)) (not ($generated@@0 ($generated@@90 $generated@@422 $generated@@423)))))))
 :pattern ( ($generated@@90 ($generated@@414 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@425) ($generated@@84 $generated@@166 $generated@@4)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@80 $generated@@425 ($generated@@262 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@166) ($generated@@0 ($generated@@90 $generated@@425 $generated@@428))) ($generated@@281 $generated@@428 $generated@@426 $generated@@427))
 :pattern ( ($generated@@90 $generated@@425 $generated@@428))
))))
 :pattern ( ($generated@@80 $generated@@425 ($generated@@262 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@84 $generated@@166 $generated@@4)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@80 $generated@@429 ($generated@@267 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@166) ($generated@@0 ($generated@@90 $generated@@429 $generated@@432))) ($generated@@281 $generated@@432 $generated@@430 $generated@@431))
 :pattern ( ($generated@@90 $generated@@429 $generated@@432))
))))
 :pattern ( ($generated@@80 $generated@@429 ($generated@@267 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(= ($generated ($generated@@90 ($generated@@320 $generated@@434) $generated@@433)) 0))
 :pattern ( (let (($generated@@434 (type $generated@@433)))
($generated@@90 ($generated@@320 $generated@@434) $generated@@433)))
)))
(assert  (and (forall (($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@437)) ($generated@@84 $generated@@166 $generated@@4))
 :pattern ( ($generated@@435 $generated@@437))
)) (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
(= (type ($generated@@436 $generated@@438)) ($generated@@84 $generated@@440 $generated@@439))))
 :pattern ( ($generated@@436 $generated@@438))
))))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) ($generated@@327 $generated@@166 $generated@@166)) (= (type $generated@@442) $generated@@166)) (= ($generated@@0 ($generated@@90 ($generated@@435 $generated@@441) $generated@@442))  (and ($generated@@0 ($generated@@90 ($generated@@325 $generated@@441) ($generated@@164 ($generated@@364 $generated@@83 $generated@@442)))) (= ($generated@@90 ($generated@@436 $generated@@441) ($generated@@164 ($generated@@364 $generated@@83 $generated@@442))) ($generated@@165 ($generated@@364 $generated@@83 $generated@@442))))))
 :pattern ( ($generated@@90 ($generated@@435 $generated@@441) $generated@@442))
)))
(assert  (and (forall (($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@445)) ($generated@@84 $generated@@166 $generated@@4))
 :pattern ( ($generated@@443 $generated@@445))
)) (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@347 (type $generated@@446))))
(let (($generated@@448 ($generated@@346 (type $generated@@446))))
(= (type ($generated@@444 $generated@@446)) ($generated@@84 $generated@@448 $generated@@447))))
 :pattern ( ($generated@@444 $generated@@446))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) ($generated@@345 $generated@@166 $generated@@166)) (= (type $generated@@450) $generated@@166)) (= ($generated@@0 ($generated@@90 ($generated@@443 $generated@@449) $generated@@450))  (and ($generated@@0 ($generated@@90 ($generated@@343 $generated@@449) ($generated@@164 ($generated@@364 $generated@@83 $generated@@450)))) (= ($generated@@90 ($generated@@444 $generated@@449) ($generated@@164 ($generated@@364 $generated@@83 $generated@@450))) ($generated@@165 ($generated@@364 $generated@@83 $generated@@450))))))
 :pattern ( ($generated@@90 ($generated@@443 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
(let (($generated@@454 ($generated@@328 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@327 $generated@@454 $generated@@453)) (= ($generated@@0 ($generated@@90 ($generated@@373 $generated@@451) $generated@@452)) (exists (($generated@@455 T@U) ) (!  (and (= (type $generated@@455) $generated@@454) (and ($generated@@0 ($generated@@90 ($generated@@325 $generated@@451) $generated@@455)) (= $generated@@452 ($generated@@90 ($generated@@436 $generated@@451) $generated@@455))))
 :pattern ( ($generated@@90 ($generated@@325 $generated@@451) $generated@@455))
 :pattern ( ($generated@@90 ($generated@@436 $generated@@451) $generated@@455))
))))))
 :pattern ( ($generated@@90 ($generated@@373 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(let (($generated@@459 ($generated@@346 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@345 $generated@@459 $generated@@458)) (= ($generated@@0 ($generated@@90 ($generated@@384 $generated@@456) $generated@@457)) (exists (($generated@@460 T@U) ) (!  (and (= (type $generated@@460) $generated@@459) (and ($generated@@0 ($generated@@90 ($generated@@343 $generated@@456) $generated@@460)) (= $generated@@457 ($generated@@90 ($generated@@444 $generated@@456) $generated@@460))))
 :pattern ( ($generated@@90 ($generated@@343 $generated@@456) $generated@@460))
 :pattern ( ($generated@@90 ($generated@@444 $generated@@456) $generated@@460))
))))))
 :pattern ( ($generated@@90 ($generated@@384 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (and (and (= (type $generated@@464) ($generated@@327 $generated@@166 $generated@@166)) (= (type $generated@@465) $generated@@70)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@80 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@325 $generated@@464) $generated@@468))) (and ($generated@@281 ($generated@@90 ($generated@@436 $generated@@464) $generated@@468) $generated@@466 $generated@@467) ($generated@@281 $generated@@468 $generated@@465 $generated@@467)))
 :pattern ( ($generated@@90 ($generated@@436 $generated@@464) $generated@@468))
 :pattern ( ($generated@@90 ($generated@@325 $generated@@464) $generated@@468))
))))
 :pattern ( ($generated@@80 $generated@@464 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@469 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (= (type $generated@@472) ($generated@@345 $generated@@166 $generated@@166)) (= (type $generated@@473) $generated@@70)) (= (type $generated@@474) $generated@@70)) (= (type $generated@@475) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@80 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475) (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@343 $generated@@472) $generated@@476))) (and ($generated@@281 ($generated@@90 ($generated@@444 $generated@@472) $generated@@476) $generated@@474 $generated@@475) ($generated@@281 $generated@@476 $generated@@473 $generated@@475)))
 :pattern ( ($generated@@90 ($generated@@444 $generated@@472) $generated@@476))
 :pattern ( ($generated@@90 ($generated@@343 $generated@@472) $generated@@476))
))))
 :pattern ( ($generated@@80 $generated@@472 ($generated@@469 $generated@@473 $generated@@474) $generated@@475))
)))
(assert  (=> (<= 1 $generated@@394) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (!  (=> (and (= (type $generated@@477) $generated@@396) (or ($generated@@397 ($generated@@272 $generated@@478)) (and (not (= 1 $generated@@394)) (<= ($generated@@272 0) $generated@@478)))) (and (=> (not (= ($generated@@272 $generated@@478) ($generated@@272 0))) (and (=> (= ($generated@@272 ($generated@@403 $generated@@478 ($generated@@272 2))) ($generated@@272 0)) ($generated@@397 ($generated@@272 (- $generated@@478 1)))) (=> (not (= ($generated@@272 ($generated@@403 $generated@@478 ($generated@@272 2))) ($generated@@272 0))) ($generated@@397 ($generated@@272 (- $generated@@478 1)))))) (= ($generated@@395 ($generated@@402 $generated@@477) ($generated@@272 $generated@@478)) (ite (= ($generated@@272 $generated@@478) ($generated@@272 0)) ($generated@@404 ($generated@@405 $generated@@166) ($generated@@306 ($generated@@8 ($generated@@272 0)))) (ite (= ($generated@@272 ($generated@@403 $generated@@478 ($generated@@272 2))) ($generated@@272 0)) ($generated@@235 ($generated@@395 ($generated@@402 $generated@@477) ($generated@@272 (- $generated@@478 1))) ($generated@@404 ($generated@@405 $generated@@166) ($generated@@306 ($generated@@8 ($generated@@272 $generated@@478))))) ($generated@@235 ($generated@@404 ($generated@@405 $generated@@166) ($generated@@306 ($generated@@8 ($generated@@272 $generated@@478)))) ($generated@@395 ($generated@@402 $generated@@477) ($generated@@272 (- $generated@@478 1)))))))))
 :weight 3
 :pattern ( ($generated@@395 ($generated@@402 $generated@@477) ($generated@@272 $generated@@478)))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@480)))
 (=> (and (and (= (type $generated@@479) ($generated@@84 $generated@@482 $generated@@4)) (= (type $generated@@481) $generated@@482)) ($generated@@0 ($generated@@90 $generated@@479 $generated@@481))) ($generated@@0 ($generated@@90 ($generated@@404 $generated@@479 $generated@@480) $generated@@481))))
 :pattern ( ($generated@@404 $generated@@479 $generated@@480) ($generated@@90 $generated@@479 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@485)))
 (=> (and (and (= (type $generated@@483) ($generated@@84 $generated@@486 $generated@@4)) (= (type $generated@@484) ($generated@@84 $generated@@486 $generated@@4))) ($generated@@0 ($generated@@90 $generated@@483 $generated@@485))) ($generated@@0 ($generated@@90 ($generated@@235 $generated@@483 $generated@@484) $generated@@485))))
 :pattern ( ($generated@@235 $generated@@483 $generated@@484) ($generated@@90 $generated@@483 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
 (=> (and (and (= (type $generated@@487) ($generated@@84 $generated@@490 $generated@@4)) (= (type $generated@@488) ($generated@@84 $generated@@490 $generated@@4))) ($generated@@0 ($generated@@90 $generated@@488 $generated@@489))) ($generated@@0 ($generated@@90 ($generated@@235 $generated@@487 $generated@@488) $generated@@489))))
 :pattern ( ($generated@@235 $generated@@487 $generated@@488) ($generated@@90 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (! (let (($generated@@494 (type $generated@@492)))
 (=> (and (= (type $generated@@491) ($generated@@84 $generated@@494 $generated@@4)) (= (type $generated@@493) $generated@@494)) (= ($generated@@0 ($generated@@90 ($generated@@404 $generated@@491 $generated@@492) $generated@@493))  (or (= $generated@@493 $generated@@492) ($generated@@0 ($generated@@90 $generated@@491 $generated@@493))))))
 :pattern ( ($generated@@90 ($generated@@404 $generated@@491 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@83) ($generated@@154 $generated@@495 $generated@@82)) (or ($generated@@278 $generated@@495) ($generated@@256 $generated@@495)))
 :pattern ( ($generated@@256 $generated@@495) ($generated@@154 $generated@@495 $generated@@82))
 :pattern ( ($generated@@278 $generated@@495) ($generated@@154 $generated@@495 $generated@@82))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@496) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@497) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@498) ($generated@@84 $generated@@85 $generated@@86))) (not (= $generated@@496 $generated@@498))) (and ($generated@@147 $generated@@496 $generated@@497) ($generated@@147 $generated@@497 $generated@@498))) ($generated@@147 $generated@@496 $generated@@498))
 :pattern ( ($generated@@147 $generated@@496 $generated@@497) ($generated@@147 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
 (=> (and (and (= (type $generated@@499) ($generated@@84 $generated@@502 $generated@@4)) (= (type $generated@@500) ($generated@@84 $generated@@502 $generated@@4))) ($generated@@0 ($generated@@90 $generated@@500 $generated@@501))) (not ($generated@@0 ($generated@@90 ($generated@@414 $generated@@499 $generated@@500) $generated@@501)))))
 :pattern ( ($generated@@414 $generated@@499 $generated@@500) ($generated@@90 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@504 T@T) ) (! (= (type ($generated@@503 $generated@@504)) ($generated@@84 $generated@@504 $generated@@4))
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@347 (type $generated@@505))))
(let (($generated@@507 ($generated@@346 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@345 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@344 $generated@@507 $generated@@506)) (= ($generated@@343 $generated@@505) ($generated@@503 $generated@@507))))))
 :pattern ( ($generated@@343 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@347 (type $generated@@508))))
(let (($generated@@510 ($generated@@346 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@345 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@344 $generated@@510 $generated@@509)) (= ($generated@@384 $generated@@508) ($generated@@503 $generated@@509))))))
 :pattern ( ($generated@@384 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@347 (type $generated@@511))))
(let (($generated@@513 ($generated@@346 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@345 $generated@@513 $generated@@512)) (= (= $generated@@511 ($generated@@344 $generated@@513 $generated@@512)) (= ($generated@@443 $generated@@511) ($generated@@503 $generated@@166))))))
 :pattern ( ($generated@@443 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@329 (type $generated@@514))))
(let (($generated@@516 ($generated@@328 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@327 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@326 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@166) (= (type $generated@@518) $generated@@166)) ($generated@@0 ($generated@@90 ($generated@@435 $generated@@514) ($generated@@306 ($generated@@242 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@435 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@347 (type $generated@@519))))
(let (($generated@@521 ($generated@@346 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@345 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@344 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (and (and (= (type $generated@@522) $generated@@166) (= (type $generated@@523) $generated@@166)) ($generated@@0 ($generated@@90 ($generated@@443 $generated@@519) ($generated@@306 ($generated@@242 $generated@@522 $generated@@523)))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@443 $generated@@519))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@166) ($generated@@243 $generated@@524 $generated@@46)) (and (= ($generated@@306 ($generated@@364 $generated@@2 $generated@@524)) $generated@@524) ($generated@@154 ($generated@@364 $generated@@2 $generated@@524) $generated@@46)))
 :pattern ( ($generated@@243 $generated@@524 $generated@@46))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@166) ($generated@@243 $generated@@525 $generated@@47)) (and (= ($generated@@306 ($generated@@364 $generated@@3 $generated@@525)) $generated@@525) ($generated@@154 ($generated@@364 $generated@@3 $generated@@525) $generated@@47)))
 :pattern ( ($generated@@243 $generated@@525 $generated@@47))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@166) ($generated@@243 $generated@@526 $generated@@44)) (and (= ($generated@@306 ($generated@@364 $generated@@4 $generated@@526)) $generated@@526) ($generated@@154 ($generated@@364 $generated@@4 $generated@@526) $generated@@44)))
 :pattern ( ($generated@@243 $generated@@526 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@527) 21))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@166) ($generated@@243 $generated@@528 $generated@@45)) (and (= ($generated@@306 ($generated@@364 $generated@@527 $generated@@528)) $generated@@528) ($generated@@154 ($generated@@364 $generated@@527 $generated@@528) $generated@@45)))
 :pattern ( ($generated@@243 $generated@@528 $generated@@45))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@243 ($generated@@306 $generated@@529) $generated@@530) ($generated@@154 $generated@@529 $generated@@530)))
 :pattern ( ($generated@@243 ($generated@@306 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@88 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@84 $generated@@532 $generated@@2)) (<= 0 ($generated@@319 $generated@@531))))
 :pattern ( ($generated@@319 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@299 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@298 $generated@@534)) (<= 0 ($generated@@297 $generated@@533))))
 :pattern ( ($generated@@297 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= ($generated@@535 ($generated@@461 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@461 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@70) (= (type $generated@@542) $generated@@70)) (= ($generated@@539 ($generated@@461 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@461 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= ($generated@@78 ($generated@@461 $generated@@543 $generated@@544)) $generated@@58))
 :pattern ( ($generated@@461 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= ($generated@@545 ($generated@@469 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@469 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@70)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= ($generated@@549 ($generated@@469 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@469 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@70) (= (type $generated@@554) $generated@@70)) (= ($generated@@78 ($generated@@469 $generated@@553 $generated@@554)) $generated@@59))
 :pattern ( ($generated@@469 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@166) (= (type $generated@@556) $generated@@166)) (= ($generated@@171 ($generated@@242 $generated@@555 $generated@@556)) $generated@@62))
 :pattern ( ($generated@@242 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@70) (= (type $generated@@560) $generated@@70)) (= ($generated@@557 ($generated@@157 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@157 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@70)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (= ($generated@@561 ($generated@@157 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@157 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@166) (= (type $generated@@566) $generated@@166)) (= ($generated@@164 ($generated@@242 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@242 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@166) (= (type $generated@@568) $generated@@166)) (= ($generated@@165 ($generated@@242 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@242 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@83) (= ($generated@@171 ($generated@@81 $generated@@569 $generated@@570)) $generated@@66))
 :pattern ( ($generated@@81 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 Int) ($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@83) (= ($generated@@257 ($generated@@81 $generated@@571 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@81 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 Int) ($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@83) (= ($generated@@258 ($generated@@81 $generated@@573 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@81 $generated@@573 $generated@@574))
)))
(assert  (and (forall (($generated@@577 T@U) ) (! (= (type ($generated@@575 $generated@@577)) $generated@@396)
 :pattern ( ($generated@@575 $generated@@577))
)) (= (type $generated@@576) $generated@@396)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ) (!  (=> (= (type $generated@@578) $generated@@396) (= ($generated@@395 $generated@@578 $generated@@579) ($generated@@395 $generated@@576 $generated@@579)))
 :pattern ( ($generated@@395 ($generated@@575 $generated@@578) $generated@@579))
)))
(assert  (and (forall (($generated@@582 T@U) ) (! (= (type ($generated@@580 $generated@@582)) $generated@@70)
 :pattern ( ($generated@@580 $generated@@582))
)) (forall (($generated@@583 T@U) ($generated@@584 Int) ) (! (let (($generated@@585 ($generated@@299 (type $generated@@583))))
(= (type ($generated@@581 $generated@@583 $generated@@584)) $generated@@585))
 :pattern ( ($generated@@581 $generated@@583 $generated@@584))
))))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@298 $generated@@166)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@80 $generated@@586 ($generated@@580 $generated@@587) $generated@@588) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@297 $generated@@586))) ($generated@@281 ($generated@@581 $generated@@586 $generated@@589) $generated@@587 $generated@@588))
 :pattern ( ($generated@@581 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@80 $generated@@586 ($generated@@580 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@84 $generated@@592 $generated@@4)) ($generated@@0 ($generated@@90 ($generated@@404 $generated@@590 $generated@@591) $generated@@591))))
 :pattern ( ($generated@@404 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@593 ($generated@@143 $generated@@594)) $generated@@594)
 :pattern ( ($generated@@143 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@70)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@70) (= ($generated@@595 ($generated@@262 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@262 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@70) (= ($generated@@78 ($generated@@262 $generated@@598)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@70)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@70) (= ($generated@@599 ($generated@@267 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@267 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@70) (= ($generated@@78 ($generated@@267 $generated@@602)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@70)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@70) (= ($generated@@603 ($generated@@174 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@174 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@70) (= ($generated@@78 ($generated@@174 $generated@@606)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@70)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@70) (= ($generated@@607 ($generated@@580 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@580 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@70) (= ($generated@@78 ($generated@@580 $generated@@610)) $generated@@57))
 :pattern ( ($generated@@580 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
(= ($generated@@364 $generated@@612 ($generated@@306 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@306 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@327 $generated@@166 $generated@@166)) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) $generated@@70)) (= ($generated@@154 $generated@@613 ($generated@@461 $generated@@614 $generated@@615)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@325 $generated@@613) $generated@@616))) (and ($generated@@243 ($generated@@90 ($generated@@436 $generated@@613) $generated@@616) $generated@@615) ($generated@@243 $generated@@616 $generated@@614)))
 :pattern ( ($generated@@90 ($generated@@436 $generated@@613) $generated@@616))
 :pattern ( ($generated@@90 ($generated@@325 $generated@@613) $generated@@616))
))))
 :pattern ( ($generated@@154 $generated@@613 ($generated@@461 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@345 $generated@@166 $generated@@166)) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) $generated@@70)) (= ($generated@@154 $generated@@617 ($generated@@469 $generated@@618 $generated@@619)) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@166) ($generated@@0 ($generated@@90 ($generated@@343 $generated@@617) $generated@@620))) (and ($generated@@243 ($generated@@90 ($generated@@444 $generated@@617) $generated@@620) $generated@@619) ($generated@@243 $generated@@620 $generated@@618)))
 :pattern ( ($generated@@90 ($generated@@444 $generated@@617) $generated@@620))
 :pattern ( ($generated@@90 ($generated@@343 $generated@@617) $generated@@620))
))))
 :pattern ( ($generated@@154 $generated@@617 ($generated@@469 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@166) (= (type $generated@@624) $generated@@166)) (< ($generated@@621 $generated@@623) ($generated@@622 ($generated@@242 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@242 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@166) (= (type $generated@@626) $generated@@166)) (< ($generated@@621 $generated@@626) ($generated@@622 ($generated@@242 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@242 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 Int) ($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@83) (< ($generated@@622 $generated@@628) ($generated@@622 ($generated@@81 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@81 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) $generated@@396) (= ($generated@@395 ($generated@@402 $generated@@629) $generated@@630) ($generated@@395 $generated@@629 $generated@@630)))
 :pattern ( ($generated@@395 ($generated@@402 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 ($generated@@88 (type $generated@@631))))
 (=> (and (= (type $generated@@631) ($generated@@84 $generated@@633 $generated@@4)) (= (type $generated@@632) ($generated@@84 $generated@@633 $generated@@4))) (= ($generated@@235 $generated@@631 ($generated@@235 $generated@@631 $generated@@632)) ($generated@@235 $generated@@631 $generated@@632))))
 :pattern ( ($generated@@235 $generated@@631 ($generated@@235 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@166) (= (type $generated@@635) $generated@@70)) (= (type $generated@@636) $generated@@70)) ($generated@@243 $generated@@634 ($generated@@461 $generated@@635 $generated@@636))) (and (= ($generated@@306 ($generated@@364 ($generated@@327 $generated@@166 $generated@@166) $generated@@634)) $generated@@634) ($generated@@154 ($generated@@364 ($generated@@327 $generated@@166 $generated@@166) $generated@@634) ($generated@@461 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@243 $generated@@634 ($generated@@461 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@166) (= (type $generated@@638) $generated@@70)) (= (type $generated@@639) $generated@@70)) ($generated@@243 $generated@@637 ($generated@@469 $generated@@638 $generated@@639))) (and (= ($generated@@306 ($generated@@364 ($generated@@345 $generated@@166 $generated@@166) $generated@@637)) $generated@@637) ($generated@@154 ($generated@@364 ($generated@@345 $generated@@166 $generated@@166) $generated@@637) ($generated@@469 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@243 $generated@@637 ($generated@@469 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@70) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) $generated@@166)) ($generated@@243 $generated@@642 ($generated@@157 $generated@@640 $generated@@641))) (and (= ($generated@@306 ($generated@@364 $generated@@83 $generated@@642)) $generated@@642) ($generated@@154 ($generated@@364 $generated@@83 $generated@@642) ($generated@@157 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@243 $generated@@642 ($generated@@157 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@643)))
 (not ($generated@@0 ($generated@@90 ($generated@@405 $generated@@644) $generated@@643))))
 :pattern ( (let (($generated@@644 (type $generated@@643)))
($generated@@90 ($generated@@405 $generated@@644) $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
 (not ($generated@@0 ($generated@@90 ($generated@@503 $generated@@646) $generated@@645))))
 :pattern ( (let (($generated@@646 (type $generated@@645)))
($generated@@90 ($generated@@503 $generated@@646) $generated@@645)))
)))
(assert (forall (($generated@@647 Int) ($generated@@648 Int) ) (! (= ($generated@@403 $generated@@647 $generated@@648) (mod $generated@@647 $generated@@648))
 :pattern ( ($generated@@403 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@75)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@70) (= (type $generated@@652) $generated@@70)) (and (= ($generated@@78 ($generated@@157 $generated@@651 $generated@@652)) $generated@@63) (= ($generated@@649 ($generated@@157 $generated@@651 $generated@@652)) $generated@@68)))
 :pattern ( ($generated@@157 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (= (type $generated@@653) $generated@@83) (= (type $generated@@654) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@87 $generated@@654) (and ($generated@@256 $generated@@653) ($generated@@80 $generated@@653 $generated@@82 $generated@@654)))) ($generated@@80 ($generated@@8 ($generated@@257 $generated@@653)) $generated@@46 $generated@@654))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@257 $generated@@653)) $generated@@46 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@83) (= ($generated@@621 ($generated@@306 $generated@@655)) ($generated@@622 $generated@@655)))
 :pattern ( ($generated@@621 ($generated@@306 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@166) ($generated@@243 $generated@@656 ($generated@@143 0))) (and (= ($generated@@306 ($generated@@364 $generated@@2 $generated@@656)) $generated@@656) ($generated@@154 ($generated@@364 ($generated@@84 $generated@@166 $generated@@4) $generated@@656) ($generated@@143 0))))
 :pattern ( ($generated@@243 $generated@@656 ($generated@@143 0)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@657) $generated@@166) (= (type $generated@@658) $generated@@70)) ($generated@@243 $generated@@657 ($generated@@262 $generated@@658))) (and (= ($generated@@306 ($generated@@364 ($generated@@84 $generated@@166 $generated@@4) $generated@@657)) $generated@@657) ($generated@@154 ($generated@@364 ($generated@@84 $generated@@166 $generated@@4) $generated@@657) ($generated@@262 $generated@@658))))
 :pattern ( ($generated@@243 $generated@@657 ($generated@@262 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@659) $generated@@166) (= (type $generated@@660) $generated@@70)) ($generated@@243 $generated@@659 ($generated@@267 $generated@@660))) (and (= ($generated@@306 ($generated@@364 ($generated@@84 $generated@@166 $generated@@4) $generated@@659)) $generated@@659) ($generated@@154 ($generated@@364 ($generated@@84 $generated@@166 $generated@@4) $generated@@659) ($generated@@267 $generated@@660))))
 :pattern ( ($generated@@243 $generated@@659 ($generated@@267 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (= (type $generated@@661) $generated@@166) (= (type $generated@@662) $generated@@70)) ($generated@@243 $generated@@661 ($generated@@174 $generated@@662))) (and (= ($generated@@306 ($generated@@364 ($generated@@84 $generated@@166 $generated@@2) $generated@@661)) $generated@@661) ($generated@@154 ($generated@@364 ($generated@@84 $generated@@166 $generated@@2) $generated@@661) ($generated@@174 $generated@@662))))
 :pattern ( ($generated@@243 $generated@@661 ($generated@@174 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) $generated@@166) (= (type $generated@@664) $generated@@70)) ($generated@@243 $generated@@663 ($generated@@580 $generated@@664))) (and (= ($generated@@306 ($generated@@364 ($generated@@298 $generated@@166) $generated@@663)) $generated@@663) ($generated@@154 ($generated@@364 ($generated@@298 $generated@@166) $generated@@663) ($generated@@580 $generated@@664))))
 :pattern ( ($generated@@243 $generated@@663 ($generated@@580 $generated@@664)))
)))
(assert (= ($generated@@78 $generated@@151) $generated@@61))
(assert (= ($generated@@649 $generated@@151) $generated@@67))
(assert (= ($generated@@78 $generated@@82) $generated@@65))
(assert (= ($generated@@649 $generated@@82) $generated@@69))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@84 $generated@@166 $generated@@2)) (= (type $generated@@666) $generated@@70)) (= (type $generated@@667) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@80 $generated@@665 ($generated@@174 $generated@@666) $generated@@667) (forall (($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@668) $generated@@166) (< 0 ($generated ($generated@@90 $generated@@665 $generated@@668)))) ($generated@@281 $generated@@668 $generated@@666 $generated@@667))
 :pattern ( ($generated@@90 $generated@@665 $generated@@668))
))))
 :pattern ( ($generated@@80 $generated@@665 ($generated@@174 $generated@@666) $generated@@667))
)))
(assert (= $generated@@172 ($generated@@274 $generated@@172)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (! (let (($generated@@671 ($generated@@88 (type $generated@@669))))
 (=> (and (= (type $generated@@669) ($generated@@84 $generated@@671 $generated@@4)) (= (type $generated@@670) ($generated@@84 $generated@@671 $generated@@4))) (= ($generated@@413 $generated@@669 $generated@@670) (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@671) (or (not ($generated@@0 ($generated@@90 $generated@@669 $generated@@672))) (not ($generated@@0 ($generated@@90 $generated@@670 $generated@@672)))))
 :pattern ( ($generated@@90 $generated@@669 $generated@@672))
 :pattern ( ($generated@@90 $generated@@670 $generated@@672))
)))))
 :pattern ( ($generated@@413 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) $generated@@83) (= (type $generated@@674) $generated@@70)) (= (type $generated@@675) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@87 $generated@@675) (and ($generated@@156 $generated@@673) (exists (($generated@@676 T@U) ) (!  (and (= (type $generated@@676) $generated@@70) ($generated@@80 $generated@@673 ($generated@@157 $generated@@674 $generated@@676) $generated@@675))
 :pattern ( ($generated@@80 $generated@@673 ($generated@@157 $generated@@674 $generated@@676) $generated@@675))
))))) ($generated@@281 ($generated@@164 $generated@@673) $generated@@674 $generated@@675))
 :pattern ( ($generated@@281 ($generated@@164 $generated@@673) $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@83) (= (type $generated@@678) $generated@@70)) (= (type $generated@@679) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@87 $generated@@679) (and ($generated@@156 $generated@@677) (exists (($generated@@680 T@U) ) (!  (and (= (type $generated@@680) $generated@@70) ($generated@@80 $generated@@677 ($generated@@157 $generated@@680 $generated@@678) $generated@@679))
 :pattern ( ($generated@@80 $generated@@677 ($generated@@157 $generated@@680 $generated@@678) $generated@@679))
))))) ($generated@@281 ($generated@@165 $generated@@677) $generated@@678 $generated@@679))
 :pattern ( ($generated@@281 ($generated@@165 $generated@@677) $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@83) (= (type $generated@@682) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@87 $generated@@682) (and ($generated@@256 $generated@@681) ($generated@@80 $generated@@681 $generated@@82 $generated@@682)))) ($generated@@80 ($generated@@258 $generated@@681) $generated@@82 $generated@@682))
 :pattern ( ($generated@@80 ($generated@@258 $generated@@681) $generated@@82 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@166) (= (type $generated@@684) $generated@@166)) (= ($generated@@242 ($generated@@274 $generated@@683) ($generated@@274 $generated@@684)) ($generated@@274 ($generated@@242 $generated@@683 $generated@@684))))
 :pattern ( ($generated@@242 ($generated@@274 $generated@@683) ($generated@@274 $generated@@684)))
)))
(assert (forall (($generated@@685 Int) ($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@83) (= ($generated@@81 ($generated@@272 $generated@@685) ($generated@@274 $generated@@686)) ($generated@@274 ($generated@@81 $generated@@685 $generated@@686))))
 :pattern ( ($generated@@81 ($generated@@272 $generated@@685) ($generated@@274 $generated@@686)))
)))
(assert (forall (($generated@@687 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@272 $generated@@687))) ($generated@@274 ($generated@@306 ($generated@@8 $generated@@687))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@272 $generated@@687))))
)))
(assert (forall (($generated@@688 T@U) ) (! (= ($generated@@306 ($generated@@274 $generated@@688)) ($generated@@274 ($generated@@306 $generated@@688)))
 :pattern ( ($generated@@306 ($generated@@274 $generated@@688)))
)))
(assert (forall (($generated@@689 Int) ($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@83) (= ($generated@@154 ($generated@@81 $generated@@689 $generated@@690) $generated@@82)  (and ($generated@@154 ($generated@@8 $generated@@689) $generated@@46) ($generated@@154 $generated@@690 $generated@@82))))
 :pattern ( ($generated@@154 ($generated@@81 $generated@@689 $generated@@690) $generated@@82))
)))
(assert (forall (($generated@@691 T@U) ) (! (let (($generated@@692 ($generated@@299 (type $generated@@691))))
 (=> (and (= (type $generated@@691) ($generated@@298 $generated@@692)) (= ($generated@@297 $generated@@691) 0)) (= $generated@@691 ($generated@@296 $generated@@692))))
 :pattern ( ($generated@@297 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (! (let (($generated@@696 (type $generated@@694)))
 (=> (and (and (= (type $generated@@693) ($generated@@84 $generated@@696 $generated@@2)) (= (type $generated@@695) $generated@@2)) (<= 0 ($generated $generated@@695))) (= ($generated@@319 ($generated@@91 $generated@@693 $generated@@694 $generated@@695)) (+ (- ($generated@@319 $generated@@693) ($generated ($generated@@90 $generated@@693 $generated@@694))) ($generated $generated@@695)))))
 :pattern ( ($generated@@319 ($generated@@91 $generated@@693 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ) (! (let (($generated@@700 (type $generated@@699)))
 (=> (and (= (type $generated@@697) ($generated@@84 $generated@@700 $generated@@4)) (= (type $generated@@698) ($generated@@84 $generated@@700 $generated@@4))) (= ($generated@@0 ($generated@@90 ($generated@@235 $generated@@697 $generated@@698) $generated@@699))  (or ($generated@@0 ($generated@@90 $generated@@697 $generated@@699)) ($generated@@0 ($generated@@90 $generated@@698 $generated@@699))))))
 :pattern ( ($generated@@90 ($generated@@235 $generated@@697 $generated@@698) $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@702) $generated@@2)) ($generated@@80 $generated@@702 $generated@@46 $generated@@701))
 :pattern ( ($generated@@80 $generated@@702 $generated@@46 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@704) $generated@@3)) ($generated@@80 $generated@@704 $generated@@47 $generated@@703))
 :pattern ( ($generated@@80 $generated@@704 $generated@@47 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@706) $generated@@4)) ($generated@@80 $generated@@706 $generated@@44 $generated@@705))
 :pattern ( ($generated@@80 $generated@@706 $generated@@44 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@708) $generated@@527)) ($generated@@80 $generated@@708 $generated@@45 $generated@@707))
 :pattern ( ($generated@@80 $generated@@708 $generated@@45 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@710) $generated@@166)) ($generated@@80 $generated@@710 $generated@@48 $generated@@709))
 :pattern ( ($generated@@80 $generated@@710 $generated@@48 $generated@@709))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@711) ($generated@@298 $generated@@166)) (= (type $generated@@712) $generated@@70)) (= ($generated@@154 $generated@@711 ($generated@@580 $generated@@712)) (forall (($generated@@713 Int) ) (!  (=> (and (<= 0 $generated@@713) (< $generated@@713 ($generated@@297 $generated@@711))) ($generated@@243 ($generated@@581 $generated@@711 $generated@@713) $generated@@712))
 :pattern ( ($generated@@581 $generated@@711 $generated@@713))
))))
 :pattern ( ($generated@@154 $generated@@711 ($generated@@580 $generated@@712)))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 Int) ) (!  (=> (= (type $generated@@715) ($generated@@298 $generated@@166)) (=> (and (<= 0 $generated@@716) (< $generated@@716 ($generated@@297 $generated@@715))) (< ($generated@@622 ($generated@@364 $generated@@83 ($generated@@581 $generated@@715 $generated@@716))) ($generated@@714 $generated@@715))))
 :pattern ( ($generated@@622 ($generated@@364 $generated@@83 ($generated@@581 $generated@@715 $generated@@716))))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (and (and (= (type $generated@@717) ($generated@@327 $generated@@166 $generated@@166)) (= (type $generated@@718) $generated@@70)) (= (type $generated@@719) $generated@@70)) ($generated@@154 $generated@@717 ($generated@@461 $generated@@718 $generated@@719))) (and (and ($generated@@154 ($generated@@325 $generated@@717) ($generated@@262 $generated@@718)) ($generated@@154 ($generated@@373 $generated@@717) ($generated@@262 $generated@@719))) ($generated@@154 ($generated@@435 $generated@@717) ($generated@@262 ($generated@@157 $generated@@718 $generated@@719)))))
 :pattern ( ($generated@@154 $generated@@717 ($generated@@461 $generated@@718 $generated@@719)))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (and (= (type $generated@@720) ($generated@@345 $generated@@166 $generated@@166)) (= (type $generated@@721) $generated@@70)) (= (type $generated@@722) $generated@@70)) ($generated@@154 $generated@@720 ($generated@@469 $generated@@721 $generated@@722))) (and (and ($generated@@154 ($generated@@343 $generated@@720) ($generated@@267 $generated@@721)) ($generated@@154 ($generated@@384 $generated@@720) ($generated@@267 $generated@@722))) ($generated@@154 ($generated@@443 $generated@@720) ($generated@@267 ($generated@@157 $generated@@721 $generated@@722)))))
 :pattern ( ($generated@@154 $generated@@720 ($generated@@469 $generated@@721 $generated@@722)))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@2) ($generated@@154 $generated@@723 $generated@@46))
 :pattern ( ($generated@@154 $generated@@723 $generated@@46))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@3) ($generated@@154 $generated@@724 $generated@@47))
 :pattern ( ($generated@@154 $generated@@724 $generated@@47))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@4) ($generated@@154 $generated@@725 $generated@@44))
 :pattern ( ($generated@@154 $generated@@725 $generated@@44))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@527) ($generated@@154 $generated@@726 $generated@@45))
 :pattern ( ($generated@@154 $generated@@726 $generated@@45))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@166) ($generated@@154 $generated@@727 $generated@@48))
 :pattern ( ($generated@@154 $generated@@727 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () Int)
(declare-fun $generated@@732 (Int) Bool)
(declare-fun $generated@@733 () Int)
(declare-fun $generated@@734 (Int) Bool)
(declare-fun $generated@@735 () Int)
(declare-fun $generated@@736 (Int) Bool)
(declare-fun $generated@@737 () Int)
(declare-fun $generated@@738 (Int) Bool)
(declare-fun $generated@@739 () Int)
(declare-fun $generated@@740 () T@U)
(declare-fun $generated@@741 () T@U)
(declare-fun $generated@@742 () T@U)
(declare-fun $generated@@743 (T@U) Bool)
(declare-fun $generated@@744 () T@U)
(declare-fun $generated@@745 () Int)
(declare-fun $generated@@746 (Int) Bool)
(declare-fun $generated@@747 () Int)
(declare-fun $generated@@748 (Int) Bool)
(declare-fun $generated@@749 () T@U)
(declare-fun $generated@@750 (T@U) Bool)
(declare-fun $generated@@751 () Int)
(declare-fun $generated@@752 (Int) Bool)
(declare-fun $generated@@753 () Int)
(declare-fun $generated@@754 () T@U)
(declare-fun $generated@@755 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@728) ($generated@@181 $generated@@85 $generated@@4)) (= (type $generated@@729) $generated@@85)) (= (type $generated@@730) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@740) ($generated@@84 $generated@@166 $generated@@4))) (= (type $generated@@741) ($generated@@298 $generated@@166))) (= (type $generated@@742) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@744) ($generated@@298 $generated@@166))) (= (type $generated@@749) $generated@@83)) (= (type $generated@@754) ($generated@@298 $generated@@166))) (= (type $generated@@755) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@756  (=> (= $generated@@728 ($generated@@180 $generated@@729 $generated@@730 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151) (=> (and (and (= $generated@@731 ($generated@@272 10)) ($generated@@80 ($generated@@8 $generated@@731) $generated@@151 $generated@@730)) (and ($generated@@732 ($generated@@272 10)) ($generated@@732 ($generated@@272 10)))) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151) (=> (and (and (= $generated@@733 ($generated@@272 10)) ($generated@@80 ($generated@@8 $generated@@733) $generated@@151 $generated@@730)) (and ($generated@@734 ($generated@@272 10)) ($generated@@734 ($generated@@272 10)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151) (=> (and (and (= $generated@@735 ($generated@@272 10)) ($generated@@80 ($generated@@8 $generated@@735) $generated@@151 $generated@@730)) (and ($generated@@736 ($generated@@272 10)) ($generated@@736 ($generated@@272 10)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@154 ($generated@@8 ($generated@@272 5)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 5)) $generated@@151) (=> (and (and (= $generated@@737 ($generated@@272 5)) ($generated@@80 ($generated@@8 $generated@@737) $generated@@151 $generated@@730)) (and ($generated@@738 ($generated@@272 5)) ($generated@@738 ($generated@@272 5)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@154 ($generated@@8 ($generated@@272 8)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 8)) $generated@@151) (=> (= $generated@@739 ($generated@@272 8)) (=> (and (and ($generated@@80 ($generated@@8 $generated@@739) $generated@@151 $generated@@730) ($generated@@397 ($generated@@272 8))) (and ($generated@@397 ($generated@@272 8)) (= $generated@@740 ($generated@@274 ($generated@@395 ($generated@@402 $generated@@576) ($generated@@272 8)))))) (=> (and (and (and ($generated@@154 $generated@@741 ($generated@@580 $generated@@151)) ($generated@@80 $generated@@741 ($generated@@580 $generated@@151) $generated@@730)) (and ($generated@@87 $generated@@742) ($generated@@743 $generated@@742))) (and (and ($generated@@154 $generated@@744 ($generated@@580 $generated@@151)) ($generated@@80 $generated@@744 ($generated@@580 $generated@@151) $generated@@742)) (and (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@85) (=> (and (not (= $generated@@757 $generated@@729)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@730 $generated@@757) $generated@@60))) (= ($generated@@90 $generated@@742 $generated@@757) ($generated@@90 $generated@@730 $generated@@757))))
 :pattern ( ($generated@@90 $generated@@742 $generated@@757))
)) ($generated@@147 $generated@@730 $generated@@742)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151) (=> (and (and (= $generated@@745 ($generated@@272 10)) ($generated@@80 ($generated@@8 $generated@@745) $generated@@151 $generated@@742)) (and ($generated@@746 ($generated@@272 10)) ($generated@@746 ($generated@@272 10)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 10)) $generated@@151) (=> (and (and (and (= $generated@@747 ($generated@@272 10)) ($generated@@80 ($generated@@8 $generated@@747) $generated@@151 $generated@@742)) (and ($generated@@748 ($generated@@272 10)) ($generated@@748 ($generated@@272 10)))) (and (and (= $generated@@749 ($generated@@274 ($generated@@81 ($generated@@272 100) ($generated@@274 ($generated@@81 ($generated@@272 40) ($generated@@274 ($generated@@81 ($generated@@272 60) ($generated@@274 $generated@@172)))))))) ($generated@@80 $generated@@749 $generated@@82 $generated@@742)) (and ($generated@@750 $generated@@749) ($generated@@750 $generated@@749)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@154 ($generated@@8 ($generated@@272 100)) $generated@@151)) (=> ($generated@@154 ($generated@@8 ($generated@@272 100)) $generated@@151) (=> (and (= $generated@@751 ($generated@@272 100)) ($generated@@80 ($generated@@8 $generated@@751) $generated@@151 $generated@@742)) (=> (and (and ($generated@@752 ($generated@@272 100)) ($generated@@752 ($generated@@272 100))) (and (= $generated@@753 ($generated@@272 10)) ($generated@@80 ($generated@@8 $generated@@753) $generated@@46 $generated@@742))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@272 0) $generated@@753)) (=> (= (ControlFlow 0 2) (- 0 1)) (<= $generated@@753 ($generated@@272 20))))))))))))))))))))))))))))))))))
(let (($generated@@758  (=> (and ($generated@@87 $generated@@730) ($generated@@743 $generated@@730)) (=> (and (and ($generated@@154 $generated@@754 ($generated@@580 $generated@@151)) ($generated@@80 $generated@@754 ($generated@@580 $generated@@151) $generated@@730)) true) (=> (and (and (and ($generated@@154 $generated@@755 $generated@@82) ($generated@@80 $generated@@755 $generated@@82 $generated@@730)) true) (and (= 2 $generated@@394) (= (ControlFlow 0 12) 2))) $generated@@756)))))
$generated@@758)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@277 (T@U Int) Int)
(declare-fun $generated@@278 () T@T)
(declare-fun $generated@@279 (Int) Bool)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 () T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@543 (Int Int) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@137 $generated@@275 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@275))))
 :pattern ( ($generated@@137 $generated@@275 $generated@@134))
)))
(assert (= ($generated@@1 $generated@@278) 18))
(assert  (=> (<= 1 $generated@@276) (forall (($generated@@280 T@U) ($generated@@281 Int) ) (!  (=> (and (= (type $generated@@280) $generated@@278) (or ($generated@@279 $generated@@281) (and (not (= 1 $generated@@276)) (<= ($generated@@248 0) $generated@@281)))) (<= ($generated@@248 0) ($generated@@277 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@277 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@150)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@66) (= (type $generated@@286) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@76 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@255 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@78 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@81 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@78 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@83 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@78 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@83 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 20)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@78 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@83 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@81 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@78 $generated@@330 $generated@@2)) (= ($generated@@156 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@83 $generated@@329 $generated@@331))) (<= ($generated ($generated@@83 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@83 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@156 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@150) ($generated@@229 $generated@@335 $generated@@134)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@335)) $generated@@335) ($generated@@137 ($generated@@332 $generated@@2 $generated@@335) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@134))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@293 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@297 (type $generated@@343))))
(let (($generated@@345 ($generated@@296 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@295 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@294 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@83 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@315 (type $generated@@347))))
(let (($generated@@349 ($generated@@314 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@313 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@312 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@311 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@83 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@137 $generated@@358 ($generated@@155 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@229 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@137 $generated@@358 ($generated@@155 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@238 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@255 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@238 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@243 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@150) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@255 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@243 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@83 ($generated@@288 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@83 ($generated@@288 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@297 (type $generated@@374))))
(let (($generated@@376 ($generated@@296 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@377) ($generated@@148 ($generated@@332 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@332 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@332 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@315 (type $generated@@382))))
(let (($generated@@384 ($generated@@314 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@313 $generated@@150 $generated@@150)) (= (type $generated@@386) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@385) ($generated@@148 ($generated@@332 $generated@@141 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@148 ($generated@@332 $generated@@141 $generated@@386))) ($generated@@149 ($generated@@332 $generated@@141 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@296 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@295 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@83 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@83 ($generated@@293 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@83 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@387) $generated@@391))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@83 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@314 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@313 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@83 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@83 ($generated@@311 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@83 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@83 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@400) $generated@@404))) (and ($generated@@255 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@255 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@313 $generated@@150 $generated@@150)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@408) $generated@@412))) (and ($generated@@255 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@255 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@78 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@315 (type $generated@@415))))
(let (($generated@@417 ($generated@@314 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@313 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@312 $generated@@417 $generated@@416)) (= ($generated@@311 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@311 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@315 (type $generated@@418))))
(let (($generated@@420 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@312 $generated@@420 $generated@@419)) (= ($generated@@351 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@351 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@150))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@297 (type $generated@@424))))
(let (($generated@@426 ($generated@@296 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@295 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@294 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@150) (= (type $generated@@428) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@424) ($generated@@282 ($generated@@228 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@315 (type $generated@@429))))
(let (($generated@@431 ($generated@@314 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@313 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@312 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@150) (= (type $generated@@433) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@429) ($generated@@282 ($generated@@228 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@229 $generated@@434 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@332 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@150) ($generated@@229 $generated@@435 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@435)) $generated@@435) ($generated@@137 ($generated@@332 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@229 $generated@@436 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@332 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 21))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@150) ($generated@@229 $generated@@438 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@437 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@332 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@66) (= ($generated@@229 ($generated@@282 $generated@@439) $generated@@440) ($generated@@137 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@229 ($generated@@282 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@81 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@78 $generated@@442 $generated@@2)) (<= 0 ($generated@@287 $generated@@441))))
 :pattern ( ($generated@@287 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@270 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@269 $generated@@444)) (<= 0 ($generated@@268 $generated@@443))))
 :pattern ( ($generated@@268 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@150) (= (type $generated@@466) $generated@@150)) (= ($generated@@261 ($generated@@228 $generated@@465 $generated@@466)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@140 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@140 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@150) (= (type $generated@@476) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@228 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@150) (= (type $generated@@478) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@228 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@278)
 :pattern ( ($generated@@479 $generated@@481))
)) (= (type $generated@@480) $generated@@278)))
(assert (forall (($generated@@482 T@U) ($generated@@483 Int) ) (!  (=> (= (type $generated@@482) $generated@@278) (= ($generated@@277 $generated@@482 $generated@@483) ($generated@@277 $generated@@480 $generated@@483)))
 :pattern ( ($generated@@277 ($generated@@479 $generated@@482) $generated@@483))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ($generated@@488 Int) ) (! (let (($generated@@489 ($generated@@270 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487 $generated@@488)) $generated@@489))
 :pattern ( ($generated@@485 $generated@@487 $generated@@488))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@269 $generated@@150)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@490 ($generated@@484 $generated@@491) $generated@@492) (forall (($generated@@493 Int) ) (!  (=> (and (<= 0 $generated@@493) (< $generated@@493 ($generated@@268 $generated@@490))) ($generated@@255 ($generated@@485 $generated@@490 $generated@@493) $generated@@491 $generated@@492))
 :pattern ( ($generated@@485 $generated@@490 $generated@@493))
))))
 :pattern ( ($generated@@76 $generated@@490 ($generated@@484 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@77 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@77 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@238 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@243 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@155 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@155 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@484 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@484 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@484 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@332 $generated@@513 ($generated@@282 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@282 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@515) $generated@@66)) (= (type $generated@@516) $generated@@66)) (= ($generated@@137 $generated@@514 ($generated@@397 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@293 $generated@@514) $generated@@517))) (and ($generated@@229 ($generated@@83 ($generated@@372 $generated@@514) $generated@@517) $generated@@516) ($generated@@229 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@514) $generated@@517))
 :pattern ( ($generated@@83 ($generated@@293 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@137 $generated@@514 ($generated@@397 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@313 $generated@@150 $generated@@150)) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) (= ($generated@@137 $generated@@518 ($generated@@405 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@311 $generated@@518) $generated@@521))) (and ($generated@@229 ($generated@@83 ($generated@@380 $generated@@518) $generated@@521) $generated@@520) ($generated@@229 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@518) $generated@@521))
 :pattern ( ($generated@@83 ($generated@@311 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@137 $generated@@518 ($generated@@405 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@150) (= (type $generated@@525) $generated@@150)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@228 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@228 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@150) (= (type $generated@@527) $generated@@150)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@228 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@228 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@278)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 Int) ) (!  (=> (= (type $generated@@530) $generated@@278) (= ($generated@@277 ($generated@@528 $generated@@530) $generated@@531) ($generated@@277 $generated@@530 $generated@@531)))
 :pattern ( ($generated@@277 ($generated@@528 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@66)) (= (type $generated@@534) $generated@@66)) ($generated@@229 $generated@@532 ($generated@@397 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@150 $generated@@150) $generated@@532)) $generated@@532) ($generated@@137 ($generated@@332 ($generated@@295 $generated@@150 $generated@@150) $generated@@532) ($generated@@397 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@397 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@150) (= (type $generated@@536) $generated@@66)) (= (type $generated@@537) $generated@@66)) ($generated@@229 $generated@@535 ($generated@@405 $generated@@536 $generated@@537))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@150 $generated@@150) $generated@@535)) $generated@@535) ($generated@@137 ($generated@@332 ($generated@@313 $generated@@150 $generated@@150) $generated@@535) ($generated@@405 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@405 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@150)) ($generated@@229 $generated@@540 ($generated@@140 $generated@@538 $generated@@539))) (and (= ($generated@@282 ($generated@@332 $generated@@141 $generated@@540)) $generated@@540) ($generated@@137 ($generated@@332 $generated@@141 $generated@@540) ($generated@@140 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@540 ($generated@@140 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@83 ($generated@@413 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@83 ($generated@@413 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 Int) ($generated@@545 Int) ) (! (= ($generated@@543 $generated@@544 $generated@@545) (mod $generated@@544 $generated@@545))
 :pattern ( ($generated@@543 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@71)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@66) (= (type $generated@@549) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@548 $generated@@549)) $generated@@63) (= ($generated@@546 ($generated@@140 $generated@@548 $generated@@549)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@141) (= ($generated@@522 ($generated@@282 $generated@@550)) ($generated@@523 $generated@@550)))
 :pattern ( ($generated@@522 ($generated@@282 $generated@@550)))
)))
(assert  (=> (<= 1 $generated@@276) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (!  (=> (and (= (type $generated@@551) $generated@@278) (or ($generated@@279 ($generated@@248 $generated@@552)) (and (not (= 1 $generated@@276)) (<= ($generated@@248 0) $generated@@552)))) (and (=> (not (= ($generated@@248 $generated@@552) ($generated@@248 0))) (and (=> (= ($generated@@248 ($generated@@543 $generated@@552 ($generated@@248 2))) ($generated@@248 0)) ($generated@@279 ($generated@@248 (- $generated@@552 1)))) (=> (not (= ($generated@@248 ($generated@@543 $generated@@552 ($generated@@248 2))) ($generated@@248 0))) ($generated@@279 ($generated@@248 (- $generated@@552 1)))))) (= ($generated@@277 ($generated@@528 $generated@@551) ($generated@@248 $generated@@552)) (ite (= ($generated@@248 $generated@@552) ($generated@@248 0)) 0 (ite (= ($generated@@248 ($generated@@543 $generated@@552 ($generated@@248 2))) ($generated@@248 0)) (+ ($generated@@277 ($generated@@528 $generated@@551) ($generated@@248 (- $generated@@552 1))) $generated@@552) (+ $generated@@552 ($generated@@277 ($generated@@528 $generated@@551) ($generated@@248 (- $generated@@552 1)))))))))
 :weight 3
 :pattern ( ($generated@@277 ($generated@@528 $generated@@551) ($generated@@248 $generated@@552)))
))))
(assert (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) ($generated@@229 $generated@@553 ($generated@@77 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@553)) $generated@@553) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@150 $generated@@4) $generated@@553) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@77 0)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@66)) ($generated@@229 $generated@@554 ($generated@@238 $generated@@555))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@150 $generated@@4) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@150 $generated@@4) $generated@@554) ($generated@@238 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@238 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) ($generated@@229 $generated@@556 ($generated@@243 $generated@@557))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@150 $generated@@4) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@150 $generated@@4) $generated@@556) ($generated@@243 $generated@@557))))
 :pattern ( ($generated@@229 $generated@@556 ($generated@@243 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@229 $generated@@558 ($generated@@155 $generated@@559))) (and (= ($generated@@282 ($generated@@332 ($generated@@78 $generated@@150 $generated@@2) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@332 ($generated@@78 $generated@@150 $generated@@2) $generated@@558) ($generated@@155 $generated@@559))))
 :pattern ( ($generated@@229 $generated@@558 ($generated@@155 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@66)) ($generated@@229 $generated@@560 ($generated@@484 $generated@@561))) (and (= ($generated@@282 ($generated@@332 ($generated@@269 $generated@@150) $generated@@560)) $generated@@560) ($generated@@137 ($generated@@332 ($generated@@269 $generated@@150) $generated@@560) ($generated@@484 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@484 $generated@@561)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@546 $generated@@134) $generated@@64))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@562 ($generated@@155 $generated@@563) $generated@@564) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@562 $generated@@565)))) ($generated@@255 $generated@@565 $generated@@563 $generated@@564))
 :pattern ( ($generated@@83 $generated@@562 $generated@@565))
))))
 :pattern ( ($generated@@76 $generated@@562 ($generated@@155 $generated@@563) $generated@@564))
)))
(assert  (=> (<= 1 $generated@@276) (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (and (= (type $generated@@566) $generated@@278) (or ($generated@@279 $generated@@567) (and (not (= 1 $generated@@276)) (<= ($generated@@248 0) $generated@@567)))) (and (=> (not (= $generated@@567 ($generated@@248 0))) (and (=> (= ($generated@@543 $generated@@567 ($generated@@248 2)) ($generated@@248 0)) ($generated@@279 (- $generated@@567 1))) (=> (not (= ($generated@@543 $generated@@567 ($generated@@248 2)) ($generated@@248 0))) ($generated@@279 (- $generated@@567 1))))) (= ($generated@@277 ($generated@@528 $generated@@566) $generated@@567) (ite (= $generated@@567 ($generated@@248 0)) 0 (ite (= ($generated@@543 $generated@@567 ($generated@@248 2)) ($generated@@248 0)) (+ ($generated@@277 $generated@@566 (- $generated@@567 1)) $generated@@567) (+ $generated@@567 ($generated@@277 $generated@@566 (- $generated@@567 1))))))))
 :pattern ( ($generated@@277 ($generated@@528 $generated@@566) $generated@@567))
))))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@570) (and ($generated@@139 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@140 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@140 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@255 ($generated@@148 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@141) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@574) (and ($generated@@139 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@66) ($generated@@76 $generated@@572 ($generated@@140 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@76 $generated@@572 ($generated@@140 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@255 ($generated@@149 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@150) (= (type $generated@@577) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@576) ($generated@@250 $generated@@577)) ($generated@@250 ($generated@@228 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@576) ($generated@@250 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@248 $generated@@578))) ($generated@@250 ($generated@@282 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@248 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@282 ($generated@@250 $generated@@579)) ($generated@@250 ($generated@@282 $generated@@579)))
 :pattern ( ($generated@@282 ($generated@@250 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@270 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@269 $generated@@581)) (= ($generated@@268 $generated@@580) 0)) (= $generated@@580 ($generated@@267 $generated@@581))))
 :pattern ( ($generated@@268 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@78 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@287 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@287 $generated@@582) ($generated ($generated@@83 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@287 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@2)) ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@3)) ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@4)) ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@437)) ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@150)) ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@269 $generated@@150)) (= (type $generated@@597) $generated@@66)) (= ($generated@@137 $generated@@596 ($generated@@484 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@268 $generated@@596))) ($generated@@229 ($generated@@485 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@485 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@137 $generated@@596 ($generated@@484 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@268 $generated@@600))) (< ($generated@@523 ($generated@@332 $generated@@141 ($generated@@485 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@523 ($generated@@332 $generated@@141 ($generated@@485 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@295 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@137 $generated@@602 ($generated@@397 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@293 $generated@@602) ($generated@@238 $generated@@603)) ($generated@@137 ($generated@@340 $generated@@602) ($generated@@238 $generated@@604))) ($generated@@137 ($generated@@371 $generated@@602) ($generated@@238 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@397 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@313 $generated@@150 $generated@@150)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@137 $generated@@605 ($generated@@405 $generated@@606 $generated@@607))) (and (and ($generated@@137 ($generated@@311 $generated@@605) ($generated@@243 $generated@@606)) ($generated@@137 ($generated@@351 $generated@@605) ($generated@@243 $generated@@607))) ($generated@@137 ($generated@@379 $generated@@605) ($generated@@243 ($generated@@140 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@137 $generated@@605 ($generated@@405 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@137 $generated@@608 $generated@@46))
 :pattern ( ($generated@@137 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@137 $generated@@609 $generated@@47))
 :pattern ( ($generated@@137 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@137 $generated@@610 $generated@@44))
 :pattern ( ($generated@@137 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@437) ($generated@@137 $generated@@611 $generated@@45))
 :pattern ( ($generated@@137 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@150) ($generated@@137 $generated@@612 $generated@@48))
 :pattern ( ($generated@@137 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@618) $generated@@79)) (= (type $generated@@619) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@621  (=> (not (= ($generated@@543 $generated@@613 ($generated@@248 2)) ($generated@@248 0))) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@137 ($generated@@8 (- $generated@@613 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@613 1)) $generated@@134) (=> (and (= $generated@@614 (- $generated@@613 1)) ($generated@@76 ($generated@@8 $generated@@614) $generated@@134 $generated@@615)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (<= 0 $generated@@613) (= $generated@@614 $generated@@613))) (=> (or (<= 0 $generated@@613) (= $generated@@614 $generated@@613)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (< $generated@@614 $generated@@613)) (=> (< $generated@@614 $generated@@613) (=> (and ($generated@@279 (- $generated@@613 1)) (= (ControlFlow 0 10) (- 0 9))) ($generated@@137 ($generated@@8 (+ $generated@@613 ($generated@@277 ($generated@@528 $generated@@480) (- $generated@@613 1)))) $generated@@134))))))))))))
(let (($generated@@622  (=> (= ($generated@@543 $generated@@613 ($generated@@248 2)) ($generated@@248 0)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@137 ($generated@@8 (- $generated@@613 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@613 1)) $generated@@134) (=> (and (= $generated@@616 (- $generated@@613 1)) ($generated@@76 ($generated@@8 $generated@@616) $generated@@134 $generated@@615)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@613) (= $generated@@616 $generated@@613))) (=> (or (<= 0 $generated@@613) (= $generated@@616 $generated@@613)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@616 $generated@@613)) (=> (< $generated@@616 $generated@@613) (=> (and ($generated@@279 (- $generated@@613 1)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@137 ($generated@@8 (+ ($generated@@277 ($generated@@528 $generated@@480) (- $generated@@613 1)) $generated@@613)) $generated@@134))))))))))))
(let (($generated@@623  (=> (not (= $generated@@613 ($generated@@248 0))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (not (= ($generated@@248 2) 0))) (=> (not (= ($generated@@248 2) 0)) (and (=> (= (ControlFlow 0 14) 5) $generated@@622) (=> (= (ControlFlow 0 14) 10) $generated@@621)))))))
(let (($generated@@624  (=> (and (= $generated@@613 ($generated@@248 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 ($generated@@8 ($generated@@248 0)) $generated@@134))))
(let (($generated@@625  (=> (= $generated@@617 ($generated@@216 $generated@@618 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 3) $generated@@624) (=> (= (ControlFlow 0 16) 14) $generated@@623)))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (= $generated@@619 ($generated@@161 $generated@@618 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 1) $generated@@626) (=> (= (ControlFlow 0 17) 16) $generated@@625)))))
(let (($generated@@628  (=> (and (and (and ($generated@@254 $generated@@615) ($generated@@620 $generated@@615)) (<= ($generated@@248 0) $generated@@613)) (and (= 1 $generated@@276) (= (ControlFlow 0 18) 17))) $generated@@627)))
$generated@@628)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 (T@U Int) Real)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@232 (Int) Bool)
(declare-fun $generated@@233 (Int) Int)
(declare-fun $generated@@234 (Int) Real)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (Real) Real)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@339 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 () T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert  (and (= ($generated@@1 $generated@@231) 17) (forall (($generated@@235 T@U) ) (! (= (type ($generated@@230 $generated@@235)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@235))
))))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@236 T@U) ($generated@@237 Int) ) (!  (=> (and (= (type $generated@@236) $generated@@231) (or ($generated@@232 $generated@@237) (and (not (= 1 $generated@@228)) (<= ($generated@@233 0) $generated@@237)))) (and (=> (not (= $generated@@237 ($generated@@233 0))) ($generated@@232 (- $generated@@237 1))) (= ($generated@@229 ($generated@@230 $generated@@236) $generated@@237) (ite (= $generated@@237 ($generated@@233 0)) 0.0 (+ ($generated@@229 $generated@@236 (- $generated@@237 1)) ($generated@@234 $generated@@237))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@236) $generated@@237))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@141)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@66) (= (type $generated@@243) $generated@@66)) (= (type $generated@@244) $generated@@150)) (= (type $generated@@245) $generated@@150)) (= ($generated@@137 ($generated@@238 $generated@@244 $generated@@245) ($generated@@140 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@137 ($generated@@238 $generated@@244 $generated@@245) ($generated@@140 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@141) (= (type $generated@@247) $generated@@141)) (= ($generated@@147 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@147 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@66)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@251) $generated@@66)) (= ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@150) ($generated@@0 ($generated@@83 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@83 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@137 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@66)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@256) $generated@@66)) (= ($generated@@137 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@150) ($generated@@0 ($generated@@83 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@83 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@137 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@233 $generated@@258) $generated@@258)
 :pattern ( ($generated@@233 $generated@@258))
)))
(assert (forall (($generated@@260 Real) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) $generated@@66)) (= (type $generated@@269) $generated@@150)) (= (type $generated@@270) $generated@@150)) (= (type $generated@@271) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@265 $generated@@271)) (= ($generated@@76 ($generated@@238 $generated@@269 $generated@@270) ($generated@@140 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@76 ($generated@@238 $generated@@269 $generated@@270) ($generated@@140 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@70)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@141) (= ($generated@@139 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@141) ($generated@@139 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@150) (= (type $generated@@277) $generated@@150)) (= $generated@@275 ($generated@@238 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@139 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 18)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@2) (= ($generated@@137 $generated@@286 $generated@@134) (<= ($generated@@233 0) ($generated $generated@@286))))
 :pattern ( ($generated@@137 $generated@@286 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@287 T@U) ($generated@@288 Int) ) (!  (=> (and (= (type $generated@@287) $generated@@231) (or ($generated@@232 ($generated@@233 $generated@@288)) (and (not (= 1 $generated@@228)) (<= ($generated@@233 0) $generated@@288)))) (and (=> (not (= ($generated@@233 $generated@@288) ($generated@@233 0))) ($generated@@232 ($generated@@233 (- $generated@@288 1)))) (= ($generated@@229 ($generated@@230 $generated@@287) ($generated@@233 $generated@@288)) (ite (= ($generated@@233 $generated@@288) ($generated@@233 0)) 0.0 (+ ($generated@@229 ($generated@@230 $generated@@287) ($generated@@233 (- $generated@@288 1))) ($generated@@234 ($generated@@233 $generated@@288)))))))
 :weight 3
 :pattern ( ($generated@@229 ($generated@@230 $generated@@287) ($generated@@233 $generated@@288)))
))))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@150)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@266 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@76 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@266 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@296 T@T) ) (! (= (type ($generated@@295 $generated@@296)) ($generated@@78 $generated@@296 $generated@@2))
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@81 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@78 $generated@@298 $generated@@2)) (and (= (= ($generated@@294 $generated@@297) 0) (= $generated@@297 ($generated@@295 $generated@@298))) (=> (not (= ($generated@@294 $generated@@297) 0)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@298) (< 0 ($generated ($generated@@83 $generated@@297 $generated@@299))))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
))))))
 :pattern ( ($generated@@294 $generated@@297))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 19)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@78 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@83 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 20)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@78 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@83 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@81 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@78 $generated@@337 $generated@@2)) (= ($generated@@156 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@83 $generated@@336 $generated@@338))) (<= ($generated ($generated@@83 $generated@@336 $generated@@338)) ($generated@@294 $generated@@336))))
 :pattern ( ($generated@@83 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@156 $generated@@336))
)))
(assert (forall (($generated@@340 T@T) ($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@339 $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@150) ($generated@@239 $generated@@342 $generated@@134)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@342)) $generated@@342) ($generated@@137 ($generated@@339 $generated@@2 $generated@@342) $generated@@134)))
 :pattern ( ($generated@@239 $generated@@342 $generated@@134))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@304 (type $generated@@343))))
(let (($generated@@345 ($generated@@303 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@302 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@301 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@300 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@304 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@304 (type $generated@@350))))
(let (($generated@@352 ($generated@@303 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@302 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@301 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@322 (type $generated@@354))))
(let (($generated@@356 ($generated@@321 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@320 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@319 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@318 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@322 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@78 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@83 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@366) $generated@@66)) (= ($generated@@137 $generated@@365 ($generated@@155 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@365 $generated@@367)))) ($generated@@239 $generated@@367 $generated@@366))
 :pattern ( ($generated@@83 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@137 $generated@@365 ($generated@@155 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@369) $generated@@66)) (= (type $generated@@370) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@368 ($generated@@248 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@150) ($generated@@0 ($generated@@83 $generated@@368 $generated@@371))) ($generated@@266 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@83 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@76 $generated@@368 ($generated@@248 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@373) $generated@@66)) (= (type $generated@@374) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@372 ($generated@@253 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@150) ($generated@@0 ($generated@@83 $generated@@372 $generated@@375))) ($generated@@266 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@83 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@76 $generated@@372 ($generated@@253 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@83 ($generated@@295 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@83 ($generated@@295 $generated@@377) $generated@@376)))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@378 T@U) ($generated@@379 Int) ) (!  (=> (and (= (type $generated@@378) $generated@@231) (or ($generated@@232 $generated@@379) (and (not (= 1 $generated@@228)) (<= ($generated@@233 0) $generated@@379)))) true)
 :pattern ( ($generated@@229 $generated@@378 $generated@@379))
))))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@304 (type $generated@@383))))
(let (($generated@@385 ($generated@@303 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@387) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@386) ($generated@@148 ($generated@@339 $generated@@141 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@148 ($generated@@339 $generated@@141 $generated@@387))) ($generated@@149 ($generated@@339 $generated@@141 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@322 (type $generated@@391))))
(let (($generated@@393 ($generated@@321 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@395) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@394) ($generated@@148 ($generated@@339 $generated@@141 $generated@@395)))) (= ($generated@@83 ($generated@@389 $generated@@394) ($generated@@148 ($generated@@339 $generated@@141 $generated@@395))) ($generated@@149 ($generated@@339 $generated@@141 $generated@@395))))))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@303 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@302 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@83 ($generated@@300 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@83 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@321 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@320 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@83 ($generated@@358 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@83 ($generated@@318 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@83 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@83 ($generated@@358 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@409) $generated@@413))) (and ($generated@@266 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@266 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@66)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@417) $generated@@421))) (and ($generated@@266 ($generated@@83 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@266 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@76 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 Int) ) (! (= ($generated@@234 $generated@@422) (to_real $generated@@422))
 :pattern ( ($generated@@234 $generated@@422))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@78 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@322 (type $generated@@425))))
(let (($generated@@427 ($generated@@321 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@320 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@319 $generated@@427 $generated@@426)) (= ($generated@@318 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@318 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@322 (type $generated@@428))))
(let (($generated@@430 ($generated@@321 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@320 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@319 $generated@@430 $generated@@429)) (= ($generated@@358 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@358 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@322 (type $generated@@431))))
(let (($generated@@433 ($generated@@321 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@320 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@319 $generated@@433 $generated@@432)) (= ($generated@@388 $generated@@431) ($generated@@423 $generated@@150))))))
 :pattern ( ($generated@@388 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@304 (type $generated@@434))))
(let (($generated@@436 ($generated@@303 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@302 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@301 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@434) ($generated@@289 ($generated@@238 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@380 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@322 (type $generated@@439))))
(let (($generated@@441 ($generated@@321 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@320 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@319 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@150) (= (type $generated@@443) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@388 $generated@@439) ($generated@@289 ($generated@@238 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@388 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@239 $generated@@444 $generated@@46)) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@339 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@150) ($generated@@239 $generated@@445 $generated@@47)) (and (= ($generated@@289 ($generated@@339 $generated@@3 $generated@@445)) $generated@@445) ($generated@@137 ($generated@@339 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) ($generated@@239 $generated@@446 $generated@@44)) (and (= ($generated@@289 ($generated@@339 $generated@@4 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@339 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 21))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@150) ($generated@@239 $generated@@448 $generated@@45)) (and (= ($generated@@289 ($generated@@339 $generated@@447 $generated@@448)) $generated@@448) ($generated@@137 ($generated@@339 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@66) (= ($generated@@239 ($generated@@289 $generated@@449) $generated@@450) ($generated@@137 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@239 ($generated@@289 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@81 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@78 $generated@@452 $generated@@2)) (<= 0 ($generated@@294 $generated@@451))))
 :pattern ( ($generated@@294 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@281 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@280 $generated@@454)) (<= 0 ($generated@@279 $generated@@453))))
 :pattern ( ($generated@@279 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@406 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@406 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@414 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@414 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@414 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@150) (= (type $generated@@476) $generated@@150)) (= ($generated@@272 ($generated@@238 $generated@@475 $generated@@476)) $generated@@62))
 :pattern ( ($generated@@238 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@140 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@140 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@140 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@140 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@148 ($generated@@238 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@238 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) (= (type $generated@@488) $generated@@150)) (= ($generated@@149 ($generated@@238 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@231)
 :pattern ( ($generated@@489 $generated@@491))
)) (= (type $generated@@490) $generated@@231)))
(assert (forall (($generated@@492 T@U) ($generated@@493 Int) ) (!  (=> (= (type $generated@@492) $generated@@231) (= ($generated@@229 $generated@@492 $generated@@493) ($generated@@229 $generated@@490 $generated@@493)))
 :pattern ( ($generated@@229 ($generated@@489 $generated@@492) $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@281 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@280 $generated@@150)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@279 $generated@@500))) ($generated@@266 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@76 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@77 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@77 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@248 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@248 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@74 ($generated@@248 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@253 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@253 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@74 ($generated@@253 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@155 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@155 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@74 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@339 $generated@@523 ($generated@@289 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@289 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@137 $generated@@524 ($generated@@406 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@300 $generated@@524) $generated@@527))) (and ($generated@@239 ($generated@@83 ($generated@@381 $generated@@524) $generated@@527) $generated@@526) ($generated@@239 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@524) $generated@@527))
 :pattern ( ($generated@@83 ($generated@@300 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@137 $generated@@524 ($generated@@406 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@137 $generated@@528 ($generated@@414 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@318 $generated@@528) $generated@@531))) (and ($generated@@239 ($generated@@83 ($generated@@389 $generated@@528) $generated@@531) $generated@@530) ($generated@@239 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@528) $generated@@531))
 :pattern ( ($generated@@83 ($generated@@318 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@137 $generated@@528 ($generated@@414 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@150)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@238 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@238 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@150)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@238 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@238 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 Int) ) (!  (=> (= (type $generated@@538) $generated@@231) (= ($generated@@229 ($generated@@230 $generated@@538) $generated@@539) ($generated@@229 $generated@@538 $generated@@539)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@538) $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@66)) ($generated@@239 $generated@@540 ($generated@@406 $generated@@541 $generated@@542))) (and (= ($generated@@289 ($generated@@339 ($generated@@302 $generated@@150 $generated@@150) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@339 ($generated@@302 $generated@@150 $generated@@150) $generated@@540) ($generated@@406 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@239 $generated@@540 ($generated@@406 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@150) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) $generated@@66)) ($generated@@239 $generated@@543 ($generated@@414 $generated@@544 $generated@@545))) (and (= ($generated@@289 ($generated@@339 ($generated@@320 $generated@@150 $generated@@150) $generated@@543)) $generated@@543) ($generated@@137 ($generated@@339 ($generated@@320 $generated@@150 $generated@@150) $generated@@543) ($generated@@414 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@239 $generated@@543 ($generated@@414 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) $generated@@150)) ($generated@@239 $generated@@548 ($generated@@140 $generated@@546 $generated@@547))) (and (= ($generated@@289 ($generated@@339 $generated@@141 $generated@@548)) $generated@@548) ($generated@@137 ($generated@@339 $generated@@141 $generated@@548) ($generated@@140 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@239 $generated@@548 ($generated@@140 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (not ($generated@@0 ($generated@@83 ($generated@@423 $generated@@550) $generated@@549))))
 :pattern ( (let (($generated@@550 (type $generated@@549)))
($generated@@83 ($generated@@423 $generated@@550) $generated@@549)))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@71)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@553 $generated@@554)) $generated@@63) (= ($generated@@551 ($generated@@140 $generated@@553 $generated@@554)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@141) (= ($generated@@532 ($generated@@289 $generated@@555)) ($generated@@533 $generated@@555)))
 :pattern ( ($generated@@532 ($generated@@289 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) ($generated@@239 $generated@@556 ($generated@@77 0))) (and (= ($generated@@289 ($generated@@339 $generated@@2 $generated@@556)) $generated@@556) ($generated@@137 ($generated@@339 ($generated@@78 $generated@@150 $generated@@4) $generated@@556) ($generated@@77 0))))
 :pattern ( ($generated@@239 $generated@@556 ($generated@@77 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@66)) ($generated@@239 $generated@@557 ($generated@@248 $generated@@558))) (and (= ($generated@@289 ($generated@@339 ($generated@@78 $generated@@150 $generated@@4) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@339 ($generated@@78 $generated@@150 $generated@@4) $generated@@557) ($generated@@248 $generated@@558))))
 :pattern ( ($generated@@239 $generated@@557 ($generated@@248 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@66)) ($generated@@239 $generated@@559 ($generated@@253 $generated@@560))) (and (= ($generated@@289 ($generated@@339 ($generated@@78 $generated@@150 $generated@@4) $generated@@559)) $generated@@559) ($generated@@137 ($generated@@339 ($generated@@78 $generated@@150 $generated@@4) $generated@@559) ($generated@@253 $generated@@560))))
 :pattern ( ($generated@@239 $generated@@559 ($generated@@253 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@66)) ($generated@@239 $generated@@561 ($generated@@155 $generated@@562))) (and (= ($generated@@289 ($generated@@339 ($generated@@78 $generated@@150 $generated@@2) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@339 ($generated@@78 $generated@@150 $generated@@2) $generated@@561) ($generated@@155 $generated@@562))))
 :pattern ( ($generated@@239 $generated@@561 ($generated@@155 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@66)) ($generated@@239 $generated@@563 ($generated@@494 $generated@@564))) (and (= ($generated@@289 ($generated@@339 ($generated@@280 $generated@@150) $generated@@563)) $generated@@563) ($generated@@137 ($generated@@339 ($generated@@280 $generated@@150) $generated@@563) ($generated@@494 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@563 ($generated@@494 $generated@@564)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@551 $generated@@134) $generated@@64))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@565 ($generated@@155 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@565 $generated@@568)))) ($generated@@266 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@83 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@155 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@141) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@265 $generated@@571) (and ($generated@@139 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@66) ($generated@@76 $generated@@569 ($generated@@140 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@140 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@266 ($generated@@148 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@266 ($generated@@148 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@141) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@265 $generated@@575) (and ($generated@@139 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@66) ($generated@@76 $generated@@573 ($generated@@140 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@76 $generated@@573 ($generated@@140 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@266 ($generated@@149 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@266 ($generated@@149 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@150)) (= ($generated@@238 ($generated@@261 $generated@@577) ($generated@@261 $generated@@578)) ($generated@@261 ($generated@@238 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@238 ($generated@@261 $generated@@577) ($generated@@261 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@233 $generated@@579))) ($generated@@261 ($generated@@289 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@233 $generated@@579))))
)))
(assert (forall (($generated@@580 Real) ) (! (= ($generated@@289 ($generated@@9 ($generated@@259 $generated@@580))) ($generated@@261 ($generated@@289 ($generated@@9 $generated@@580))))
 :pattern ( ($generated@@289 ($generated@@9 ($generated@@259 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@289 ($generated@@261 $generated@@581)) ($generated@@261 ($generated@@289 $generated@@581)))
 :pattern ( ($generated@@289 ($generated@@261 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@281 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@280 $generated@@583)) (= ($generated@@279 $generated@@582) 0)) (= $generated@@582 ($generated@@278 $generated@@583))))
 :pattern ( ($generated@@279 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@78 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@294 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@294 $generated@@584) ($generated ($generated@@83 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@294 ($generated@@84 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@2)) ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@3)) ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@4)) ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@447)) ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@150)) ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@76 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@280 $generated@@150)) (= (type $generated@@599) $generated@@66)) (= ($generated@@137 $generated@@598 ($generated@@494 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@279 $generated@@598))) ($generated@@239 ($generated@@495 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@495 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@137 $generated@@598 ($generated@@494 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@280 $generated@@150)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@279 $generated@@602))) (< ($generated@@533 ($generated@@339 $generated@@141 ($generated@@495 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@533 ($generated@@339 $generated@@141 ($generated@@495 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@302 $generated@@150 $generated@@150)) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@137 $generated@@604 ($generated@@406 $generated@@605 $generated@@606))) (and (and ($generated@@137 ($generated@@300 $generated@@604) ($generated@@248 $generated@@605)) ($generated@@137 ($generated@@347 $generated@@604) ($generated@@248 $generated@@606))) ($generated@@137 ($generated@@380 $generated@@604) ($generated@@248 ($generated@@140 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@137 $generated@@604 ($generated@@406 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@320 $generated@@150 $generated@@150)) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@66)) ($generated@@137 $generated@@607 ($generated@@414 $generated@@608 $generated@@609))) (and (and ($generated@@137 ($generated@@318 $generated@@607) ($generated@@253 $generated@@608)) ($generated@@137 ($generated@@358 $generated@@607) ($generated@@253 $generated@@609))) ($generated@@137 ($generated@@388 $generated@@607) ($generated@@253 ($generated@@140 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@137 $generated@@607 ($generated@@414 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@137 $generated@@610 $generated@@46))
 :pattern ( ($generated@@137 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@137 $generated@@611 $generated@@47))
 :pattern ( ($generated@@137 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@137 $generated@@612 $generated@@44))
 :pattern ( ($generated@@137 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@447) ($generated@@137 $generated@@613 $generated@@45))
 :pattern ( ($generated@@137 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@150) ($generated@@137 $generated@@614 $generated@@48))
 :pattern ( ($generated@@137 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@618) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@619) $generated@@79)) (= (type $generated@@620) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@622  (=> (not (= $generated@@615 ($generated@@233 0))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@137 ($generated@@8 (- $generated@@615 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@615 1)) $generated@@134) (=> (and (= $generated@@616 (- $generated@@615 1)) ($generated@@76 ($generated@@8 $generated@@616) $generated@@134 $generated@@617)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615))) (=> (or (<= 0 $generated@@615) (= $generated@@616 $generated@@615)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@616 $generated@@615))))))))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@618 ($generated@@216 $generated@@619 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@623) (=> (= (ControlFlow 0 7) 4) $generated@@622)))))
(let (($generated@@625 true))
(let (($generated@@626  (=> (= $generated@@620 ($generated@@161 $generated@@619 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@625) (=> (= (ControlFlow 0 8) 7) $generated@@624)))))
(let (($generated@@627  (=> (and (and (and ($generated@@265 $generated@@617) ($generated@@621 $generated@@617)) (<= ($generated@@233 0) $generated@@615)) (and (= 1 $generated@@228) (= (ControlFlow 0 9) 8))) $generated@@626)))
$generated@@627)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (Int) T@U)
(declare-fun $generated@@328 (T@U) Bool)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@335 (T@U T@U) T@U)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@381 () Int)
(declare-fun $generated@@382 (T@U Int) T@U)
(declare-fun $generated@@383 () T@T)
(declare-fun $generated@@384 (Int) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 () T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= ($generated@@1 $generated@@135) 14))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (and (= (type $generated@@136) $generated@@135) (= (type $generated@@137) $generated@@135)) (= (type $generated@@138) $generated@@135)) (and ($generated@@134 $generated@@136 $generated@@137) ($generated@@134 $generated@@137 $generated@@138))) ($generated@@134 $generated@@136 $generated@@138))
 :pattern ( ($generated@@134 $generated@@136 $generated@@137) ($generated@@134 $generated@@137 $generated@@138))
 :pattern ( ($generated@@134 $generated@@136 $generated@@137) ($generated@@134 $generated@@136 $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@66))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@76 $generated@@140 $generated@@139 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@77 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@146) 15) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@147 $generated@@148)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@66) (= (type $generated@@150) $generated@@66)) (= (type $generated@@151) $generated@@146)) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150))) ($generated@@144 $generated@@151))
 :pattern ( ($generated@@144 $generated@@151) ($generated@@142 $generated@@151 ($generated@@145 $generated@@149 $generated@@150)))
)))
(assert  (and (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@135)
 :pattern ( ($generated@@153 $generated@@155))
)) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@135)
 :pattern ( ($generated@@154 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@146) (= (type $generated@@158) $generated@@146)) true) (= ($generated@@152 $generated@@157 $generated@@158)  (and (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)) (= ($generated@@154 $generated@@157) ($generated@@154 $generated@@158)))))
 :pattern ( ($generated@@152 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@135 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@142 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@142 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@69 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@79) (= (type $generated@@226) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@227) ($generated@@68 $generated@@4))) (= (type $generated@@229) $generated@@79)) (= (type $generated@@230) ($generated@@68 $generated@@231))) (= ($generated@@0 ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@164 ($generated@@220 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@146)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@66) (= (type $generated@@237) $generated@@66)) (= (type $generated@@238) $generated@@135)) (= (type $generated@@239) $generated@@135)) (= ($generated@@142 ($generated@@232 $generated@@238 $generated@@239) ($generated@@145 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@142 ($generated@@232 $generated@@238 $generated@@239) ($generated@@145 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@146) (= (type $generated@@241) $generated@@146)) (= ($generated@@152 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@152 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@66)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@245) $generated@@66)) (= ($generated@@142 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@135) ($generated@@0 ($generated@@83 $generated@@244 $generated@@246))) ($generated@@233 $generated@@246 $generated@@245))
 :pattern ( ($generated@@83 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@142 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@250) $generated@@66)) (= ($generated@@142 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@135) ($generated@@0 ($generated@@83 $generated@@249 $generated@@251))) ($generated@@233 $generated@@251 $generated@@250))
 :pattern ( ($generated@@83 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@142 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@135)) (= (type $generated@@263) $generated@@135)) (= (type $generated@@264) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@258 $generated@@264)) (= ($generated@@76 ($generated@@232 $generated@@262 $generated@@263) ($generated@@145 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@262 $generated@@263) ($generated@@145 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@70)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@146) (= ($generated@@144 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@62)))
 :pattern ( ($generated@@144 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@146) ($generated@@144 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@135) (= (type $generated@@270) $generated@@135)) (= $generated@@268 ($generated@@232 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@144 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@2) (= ($generated@@142 $generated@@279 $generated@@139) (<= ($generated@@252 0) ($generated $generated@@279))))
 :pattern ( ($generated@@142 $generated@@279 $generated@@139))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@135)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@259 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@330 Int) ) (! (= (type ($generated@@327 $generated@@330)) $generated@@135)
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@331 Int) ) (!  (=> (<= 0 $generated@@331) (and ($generated@@328 ($generated@@327 $generated@@331)) (= ($generated@@329 ($generated@@327 $generated@@331)) $generated@@331)))
 :pattern ( ($generated@@327 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@81 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@78 $generated@@333 $generated@@2)) (= ($generated@@160 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@83 $generated@@332 $generated@@334))) (<= ($generated ($generated@@83 $generated@@332 $generated@@334)) ($generated@@285 $generated@@332))))
 :pattern ( ($generated@@83 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@160 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (= (type ($generated@@335 $generated@@336 $generated@@337)) $generated@@135)
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@135) (= (type $generated@@339) $generated@@135)) (and (or (= $generated@@338 ($generated@@335 $generated@@338 $generated@@339)) ($generated@@134 $generated@@338 ($generated@@335 $generated@@338 $generated@@339))) (or (= $generated@@339 ($generated@@335 $generated@@338 $generated@@339)) ($generated@@134 $generated@@339 ($generated@@335 $generated@@338 $generated@@339)))))
 :pattern ( ($generated@@335 $generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@135) ($generated@@233 $generated@@343 $generated@@139)) (and (= ($generated@@280 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@142 ($generated@@340 $generated@@2 $generated@@343) $generated@@139)))
 :pattern ( ($generated@@233 $generated@@343 $generated@@139))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@295 (type $generated@@344))))
(let (($generated@@346 ($generated@@294 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@293 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@292 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@291 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@295 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@295 (type $generated@@351))))
(let (($generated@@353 ($generated@@294 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@293 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@292 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(let (($generated@@357 ($generated@@312 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@311 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@310 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@309 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@313 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@313 (type $generated@@362))))
(let (($generated@@364 ($generated@@312 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@311 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@310 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@135 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@142 $generated@@366 ($generated@@159 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@135) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@233 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@142 $generated@@366 ($generated@@159 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@135) (= (type $generated@@370) $generated@@135)) (or (or ($generated@@134 $generated@@369 $generated@@370) (= $generated@@369 $generated@@370)) ($generated@@134 $generated@@370 $generated@@369)))
 :pattern ( ($generated@@134 $generated@@369 $generated@@370) ($generated@@134 $generated@@370 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@372) $generated@@66)) (= (type $generated@@373) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@371 ($generated@@242 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@135) ($generated@@0 ($generated@@83 $generated@@371 $generated@@374))) ($generated@@259 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@83 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@76 $generated@@371 ($generated@@242 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@78 $generated@@135 $generated@@4)) (= (type $generated@@376) $generated@@66)) (= (type $generated@@377) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@375 ($generated@@247 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@135) ($generated@@0 ($generated@@83 $generated@@375 $generated@@378))) ($generated@@259 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@83 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@76 $generated@@375 ($generated@@247 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@83 ($generated@@286 $generated@@380) $generated@@379)))
)))
(assert  (and (= ($generated@@1 $generated@@383) 20) (forall (($generated@@385 T@U) ($generated@@386 Int) ) (! (= (type ($generated@@382 $generated@@385 $generated@@386)) $generated@@135)
 :pattern ( ($generated@@382 $generated@@385 $generated@@386))
))))
(assert  (=> (<= 1 $generated@@381) (forall (($generated@@387 T@U) ($generated@@388 Int) ) (!  (=> (and (= (type $generated@@387) $generated@@383) (or ($generated@@384 $generated@@388) (and (not (= 1 $generated@@381)) (<= ($generated@@252 0) $generated@@388)))) true)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@135 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@295 (type $generated@@392))))
(let (($generated@@394 ($generated@@294 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@293 $generated@@135 $generated@@135)) (= (type $generated@@396) $generated@@135)) (= ($generated@@0 ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@395) ($generated@@153 ($generated@@340 $generated@@146 $generated@@396)))) (= ($generated@@83 ($generated@@390 $generated@@395) ($generated@@153 ($generated@@340 $generated@@146 $generated@@396))) ($generated@@154 ($generated@@340 $generated@@146 $generated@@396))))))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@78 $generated@@135 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@313 (type $generated@@400))))
(let (($generated@@402 ($generated@@312 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@78 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@311 $generated@@135 $generated@@135)) (= (type $generated@@404) $generated@@135)) (= ($generated@@0 ($generated@@83 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@403) ($generated@@153 ($generated@@340 $generated@@146 $generated@@404)))) (= ($generated@@83 ($generated@@398 $generated@@403) ($generated@@153 ($generated@@340 $generated@@146 $generated@@404))) ($generated@@154 ($generated@@340 $generated@@146 $generated@@404))))))
 :pattern ( ($generated@@83 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@294 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@293 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@83 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@405) $generated@@409))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@312 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@311 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@83 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@410) $generated@@414))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@66)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@293 $generated@@135 $generated@@135)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@418) $generated@@422))) (and ($generated@@259 ($generated@@83 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@259 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@66)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@311 $generated@@135 $generated@@135)) (= (type $generated@@427) $generated@@66)) (= (type $generated@@428) $generated@@66)) (= (type $generated@@429) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@426) $generated@@430))) (and ($generated@@259 ($generated@@83 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@259 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@76 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@135) (= (type $generated@@432) $generated@@135)) (and (=> (= $generated@@431 ($generated@@327 0)) (= ($generated@@335 $generated@@431 $generated@@432) $generated@@432)) (=> (= $generated@@432 ($generated@@327 0)) (= ($generated@@335 $generated@@431 $generated@@432) $generated@@431))))
 :pattern ( ($generated@@335 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@78 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@313 (type $generated@@435))))
(let (($generated@@437 ($generated@@312 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@311 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@310 $generated@@437 $generated@@436)) (= ($generated@@309 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@309 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@313 (type $generated@@438))))
(let (($generated@@440 ($generated@@312 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@311 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@310 $generated@@440 $generated@@439)) (= ($generated@@359 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@359 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@313 (type $generated@@441))))
(let (($generated@@443 ($generated@@312 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@311 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@310 $generated@@443 $generated@@442)) (= ($generated@@397 $generated@@441) ($generated@@433 $generated@@135))))))
 :pattern ( ($generated@@397 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@295 (type $generated@@444))))
(let (($generated@@446 ($generated@@294 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@293 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@292 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@135) (= (type $generated@@448) $generated@@135)) ($generated@@0 ($generated@@83 ($generated@@389 $generated@@444) ($generated@@280 ($generated@@232 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@313 (type $generated@@449))))
(let (($generated@@451 ($generated@@312 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@311 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@310 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@135) (= (type $generated@@453) $generated@@135)) ($generated@@0 ($generated@@83 ($generated@@397 $generated@@449) ($generated@@280 ($generated@@232 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@397 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@135) ($generated@@233 $generated@@454 $generated@@46)) (and (= ($generated@@280 ($generated@@340 $generated@@2 $generated@@454)) $generated@@454) ($generated@@142 ($generated@@340 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@135) ($generated@@233 $generated@@455 $generated@@47)) (and (= ($generated@@280 ($generated@@340 $generated@@3 $generated@@455)) $generated@@455) ($generated@@142 ($generated@@340 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@135) ($generated@@233 $generated@@456 $generated@@44)) (and (= ($generated@@280 ($generated@@340 $generated@@4 $generated@@456)) $generated@@456) ($generated@@142 ($generated@@340 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 21))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@135) ($generated@@233 $generated@@458 $generated@@45)) (and (= ($generated@@280 ($generated@@340 $generated@@457 $generated@@458)) $generated@@458) ($generated@@142 ($generated@@340 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@66) (= ($generated@@233 ($generated@@280 $generated@@459) $generated@@460) ($generated@@142 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@233 ($generated@@280 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@135) (<= 0 ($generated@@329 $generated@@461)))
 :pattern ( ($generated@@329 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@81 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@78 $generated@@463 $generated@@2)) (<= 0 ($generated@@285 $generated@@462))))
 :pattern ( ($generated@@285 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@274 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@273 $generated@@465)) (<= 0 ($generated@@272 $generated@@464))))
 :pattern ( ($generated@@272 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@383)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert  (=> (<= 1 $generated@@381) (forall (($generated@@468 T@U) ($generated@@469 Int) ) (!  (=> (and (= (type $generated@@468) $generated@@383) (or ($generated@@384 $generated@@469) (and (not (= 1 $generated@@381)) (<= ($generated@@252 0) $generated@@469)))) (and (=> (not (= $generated@@469 ($generated@@252 0))) ($generated@@384 (- $generated@@469 1))) (= ($generated@@382 ($generated@@466 $generated@@468) $generated@@469) (ite (= $generated@@469 ($generated@@252 0)) ($generated@@327 0) ($generated@@335 ($generated@@382 $generated@@468 (- $generated@@469 1)) ($generated@@327 $generated@@469))))))
 :pattern ( ($generated@@382 ($generated@@466 $generated@@468) $generated@@469))
))))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@415 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@415 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@415 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@74 ($generated@@415 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@423 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@423 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@66)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@66) (= (type $generated@@487) $generated@@66)) (= ($generated@@484 ($generated@@423 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@423 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@74 ($generated@@423 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@135) (= (type $generated@@491) $generated@@135)) (= ($generated@@265 ($generated@@232 $generated@@490 $generated@@491)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@145 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@145 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@496 ($generated@@145 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@145 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@135) (= (type $generated@@501) $generated@@135)) (= ($generated@@153 ($generated@@232 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@232 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@135) (= (type $generated@@503) $generated@@135)) (= ($generated@@154 ($generated@@232 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@232 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@383)
 :pattern ( ($generated@@504 $generated@@506))
)) (= (type $generated@@505) $generated@@383)))
(assert (forall (($generated@@507 T@U) ($generated@@508 Int) ) (!  (=> (= (type $generated@@507) $generated@@383) (= ($generated@@382 $generated@@507 $generated@@508) ($generated@@382 $generated@@505 $generated@@508)))
 :pattern ( ($generated@@382 ($generated@@504 $generated@@507) $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@274 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@273 $generated@@135)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@272 $generated@@515))) ($generated@@259 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@76 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@77 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@77 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@521 ($generated@@242 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@242 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@74 ($generated@@242 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@525 ($generated@@247 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@247 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@529 ($generated@@159 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@159 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@340 $generated@@538 ($generated@@280 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@280 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@293 $generated@@135 $generated@@135)) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@66)) (= ($generated@@142 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@539) $generated@@542))) (and ($generated@@233 ($generated@@83 ($generated@@390 $generated@@539) $generated@@542) $generated@@541) ($generated@@233 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@539) $generated@@542))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@142 $generated@@539 ($generated@@415 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@311 $generated@@135 $generated@@135)) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) $generated@@66)) (= ($generated@@142 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@135) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@543) $generated@@546))) (and ($generated@@233 ($generated@@83 ($generated@@398 $generated@@543) $generated@@546) $generated@@545) ($generated@@233 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@83 ($generated@@398 $generated@@543) $generated@@546))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@142 $generated@@543 ($generated@@423 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@135) (= (type $generated@@548) $generated@@135)) (and (and (and (=> ($generated@@134 $generated@@547 $generated@@548) (not (= $generated@@547 $generated@@548))) (=> (and ($generated@@328 $generated@@547) (not ($generated@@328 $generated@@548))) ($generated@@134 $generated@@547 $generated@@548))) (=> (and ($generated@@328 $generated@@547) ($generated@@328 $generated@@548)) (= ($generated@@134 $generated@@547 $generated@@548) (< ($generated@@329 $generated@@547) ($generated@@329 $generated@@548))))) (=> (and ($generated@@134 $generated@@547 $generated@@548) ($generated@@328 $generated@@548)) ($generated@@328 $generated@@547))))
 :pattern ( ($generated@@134 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@135) (= (type $generated@@552) $generated@@135)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@232 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@232 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@135) (= (type $generated@@554) $generated@@135)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@232 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@232 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 Int) ) (!  (=> (= (type $generated@@555) $generated@@383) (= ($generated@@382 ($generated@@466 $generated@@555) $generated@@556) ($generated@@382 $generated@@555 $generated@@556)))
 :pattern ( ($generated@@382 ($generated@@466 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@135) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) $generated@@66)) ($generated@@233 $generated@@557 ($generated@@415 $generated@@558 $generated@@559))) (and (= ($generated@@280 ($generated@@340 ($generated@@293 $generated@@135 $generated@@135) $generated@@557)) $generated@@557) ($generated@@142 ($generated@@340 ($generated@@293 $generated@@135 $generated@@135) $generated@@557) ($generated@@415 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@233 $generated@@557 ($generated@@415 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@135) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) $generated@@66)) ($generated@@233 $generated@@560 ($generated@@423 $generated@@561 $generated@@562))) (and (= ($generated@@280 ($generated@@340 ($generated@@311 $generated@@135 $generated@@135) $generated@@560)) $generated@@560) ($generated@@142 ($generated@@340 ($generated@@311 $generated@@135 $generated@@135) $generated@@560) ($generated@@423 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@233 $generated@@560 ($generated@@423 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@66) (= (type $generated@@564) $generated@@66)) (= (type $generated@@565) $generated@@135)) ($generated@@233 $generated@@565 ($generated@@145 $generated@@563 $generated@@564))) (and (= ($generated@@280 ($generated@@340 $generated@@146 $generated@@565)) $generated@@565) ($generated@@142 ($generated@@340 $generated@@146 $generated@@565) ($generated@@145 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@233 $generated@@565 ($generated@@145 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@83 ($generated@@433 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@83 ($generated@@433 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@71)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@66) (= (type $generated@@571) $generated@@66)) (and (= ($generated@@74 ($generated@@145 $generated@@570 $generated@@571)) $generated@@63) (= ($generated@@568 ($generated@@145 $generated@@570 $generated@@571)) $generated@@65)))
 :pattern ( ($generated@@145 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 Int) ($generated@@574 Int) ) (!  (=> (= (type $generated@@572) $generated@@135) (=> (and (<= 0 $generated@@573) (<= 0 $generated@@574)) (= ($generated@@335 ($generated@@335 $generated@@572 ($generated@@327 $generated@@573)) ($generated@@327 $generated@@574)) ($generated@@335 $generated@@572 ($generated@@327 (+ $generated@@573 $generated@@574))))))
 :pattern ( ($generated@@335 ($generated@@335 $generated@@572 ($generated@@327 $generated@@573)) ($generated@@327 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@146) (= ($generated@@549 ($generated@@280 $generated@@575)) ($generated@@550 $generated@@575)))
 :pattern ( ($generated@@549 ($generated@@280 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@135) ($generated@@233 $generated@@576 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@340 $generated@@2 $generated@@576)) $generated@@576) ($generated@@142 ($generated@@340 ($generated@@78 $generated@@135 $generated@@4) $generated@@576) ($generated@@77 0))))
 :pattern ( ($generated@@233 $generated@@576 ($generated@@77 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@135) (= (type $generated@@578) $generated@@66)) ($generated@@233 $generated@@577 ($generated@@242 $generated@@578))) (and (= ($generated@@280 ($generated@@340 ($generated@@78 $generated@@135 $generated@@4) $generated@@577)) $generated@@577) ($generated@@142 ($generated@@340 ($generated@@78 $generated@@135 $generated@@4) $generated@@577) ($generated@@242 $generated@@578))))
 :pattern ( ($generated@@233 $generated@@577 ($generated@@242 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@135) (= (type $generated@@580) $generated@@66)) ($generated@@233 $generated@@579 ($generated@@247 $generated@@580))) (and (= ($generated@@280 ($generated@@340 ($generated@@78 $generated@@135 $generated@@4) $generated@@579)) $generated@@579) ($generated@@142 ($generated@@340 ($generated@@78 $generated@@135 $generated@@4) $generated@@579) ($generated@@247 $generated@@580))))
 :pattern ( ($generated@@233 $generated@@579 ($generated@@247 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@135) (= (type $generated@@582) $generated@@66)) ($generated@@233 $generated@@581 ($generated@@159 $generated@@582))) (and (= ($generated@@280 ($generated@@340 ($generated@@78 $generated@@135 $generated@@2) $generated@@581)) $generated@@581) ($generated@@142 ($generated@@340 ($generated@@78 $generated@@135 $generated@@2) $generated@@581) ($generated@@159 $generated@@582))))
 :pattern ( ($generated@@233 $generated@@581 ($generated@@159 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@135) (= (type $generated@@584) $generated@@66)) ($generated@@233 $generated@@583 ($generated@@509 $generated@@584))) (and (= ($generated@@280 ($generated@@340 ($generated@@273 $generated@@135) $generated@@583)) $generated@@583) ($generated@@142 ($generated@@340 ($generated@@273 $generated@@135) $generated@@583) ($generated@@509 $generated@@584))))
 :pattern ( ($generated@@233 $generated@@583 ($generated@@509 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@135) ($generated@@328 $generated@@585)) (= $generated@@585 ($generated@@327 ($generated@@329 $generated@@585))))
 :pattern ( ($generated@@329 $generated@@585))
 :pattern ( ($generated@@328 $generated@@585))
)))
(assert (= ($generated@@74 $generated@@139) $generated@@61))
(assert (= ($generated@@568 $generated@@139) $generated@@64))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@78 $generated@@135 $generated@@2)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@586 ($generated@@159 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@135) (< 0 ($generated ($generated@@83 $generated@@586 $generated@@589)))) ($generated@@259 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@83 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@76 $generated@@586 ($generated@@159 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@146) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@592) (and ($generated@@144 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@66) ($generated@@76 $generated@@590 ($generated@@145 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@76 $generated@@590 ($generated@@145 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@259 ($generated@@153 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@259 ($generated@@153 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@146) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@258 $generated@@596) (and ($generated@@144 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@66) ($generated@@76 $generated@@594 ($generated@@145 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@76 $generated@@594 ($generated@@145 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@259 ($generated@@154 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@259 ($generated@@154 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@135) (= (type $generated@@599) $generated@@135)) (and (=> ($generated@@328 ($generated@@335 $generated@@598 $generated@@599)) (and ($generated@@328 $generated@@598) ($generated@@328 $generated@@599))) (=> ($generated@@328 $generated@@599) (and (= ($generated@@328 ($generated@@335 $generated@@598 $generated@@599)) ($generated@@328 $generated@@598)) (= ($generated@@329 ($generated@@335 $generated@@598 $generated@@599)) (+ ($generated@@329 $generated@@598) ($generated@@329 $generated@@599)))))))
 :pattern ( ($generated@@335 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@135) (= (type $generated@@601) $generated@@135)) (= ($generated@@232 ($generated@@254 $generated@@600) ($generated@@254 $generated@@601)) ($generated@@254 ($generated@@232 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@232 ($generated@@254 $generated@@600) ($generated@@254 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@252 $generated@@602))) ($generated@@254 ($generated@@280 ($generated@@8 $generated@@602))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@252 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@280 ($generated@@254 $generated@@603)) ($generated@@254 ($generated@@280 $generated@@603)))
 :pattern ( ($generated@@280 ($generated@@254 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@274 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@273 $generated@@605)) (= ($generated@@272 $generated@@604) 0)) (= $generated@@604 ($generated@@271 $generated@@605))))
 :pattern ( ($generated@@272 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@78 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@285 ($generated@@84 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@285 $generated@@606) ($generated ($generated@@83 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert  (=> (<= 1 $generated@@381) (forall (($generated@@610 T@U) ($generated@@611 Int) ) (!  (=> (and (= (type $generated@@610) $generated@@383) (or ($generated@@384 ($generated@@252 $generated@@611)) (and (not (= 1 $generated@@381)) (<= ($generated@@252 0) $generated@@611)))) (and (=> (not (= ($generated@@252 $generated@@611) ($generated@@252 0))) ($generated@@384 ($generated@@252 (- $generated@@611 1)))) (= ($generated@@382 ($generated@@466 $generated@@610) ($generated@@252 $generated@@611)) (ite (= ($generated@@252 $generated@@611) ($generated@@252 0)) ($generated@@327 0) ($generated@@335 ($generated@@382 ($generated@@466 $generated@@610) ($generated@@252 (- $generated@@611 1))) ($generated@@327 ($generated@@252 $generated@@611)))))))
 :weight 3
 :pattern ( ($generated@@382 ($generated@@466 $generated@@610) ($generated@@252 $generated@@611)))
))))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) $generated@@2)) ($generated@@76 $generated@@613 $generated@@46 $generated@@612))
 :pattern ( ($generated@@76 $generated@@613 $generated@@46 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@3)) ($generated@@76 $generated@@615 $generated@@47 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@47 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) $generated@@4)) ($generated@@76 $generated@@617 $generated@@44 $generated@@616))
 :pattern ( ($generated@@76 $generated@@617 $generated@@44 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) $generated@@457)) ($generated@@76 $generated@@619 $generated@@45 $generated@@618))
 :pattern ( ($generated@@76 $generated@@619 $generated@@45 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@621) $generated@@135)) ($generated@@76 $generated@@621 $generated@@48 $generated@@620))
 :pattern ( ($generated@@76 $generated@@621 $generated@@48 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@273 $generated@@135)) (= (type $generated@@623) $generated@@66)) (= ($generated@@142 $generated@@622 ($generated@@509 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@272 $generated@@622))) ($generated@@233 ($generated@@510 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@510 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@142 $generated@@622 ($generated@@509 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@273 $generated@@135)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@272 $generated@@626))) (< ($generated@@550 ($generated@@340 $generated@@146 ($generated@@510 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@550 ($generated@@340 $generated@@146 ($generated@@510 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@293 $generated@@135 $generated@@135)) (= (type $generated@@629) $generated@@66)) (= (type $generated@@630) $generated@@66)) ($generated@@142 $generated@@628 ($generated@@415 $generated@@629 $generated@@630))) (and (and ($generated@@142 ($generated@@291 $generated@@628) ($generated@@242 $generated@@629)) ($generated@@142 ($generated@@348 $generated@@628) ($generated@@242 $generated@@630))) ($generated@@142 ($generated@@389 $generated@@628) ($generated@@242 ($generated@@145 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@142 $generated@@628 ($generated@@415 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@311 $generated@@135 $generated@@135)) (= (type $generated@@632) $generated@@66)) (= (type $generated@@633) $generated@@66)) ($generated@@142 $generated@@631 ($generated@@423 $generated@@632 $generated@@633))) (and (and ($generated@@142 ($generated@@309 $generated@@631) ($generated@@247 $generated@@632)) ($generated@@142 ($generated@@359 $generated@@631) ($generated@@247 $generated@@633))) ($generated@@142 ($generated@@397 $generated@@631) ($generated@@247 ($generated@@145 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@142 $generated@@631 ($generated@@423 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@142 $generated@@634 $generated@@46))
 :pattern ( ($generated@@142 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@142 $generated@@635 $generated@@47))
 :pattern ( ($generated@@142 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@142 $generated@@636 $generated@@44))
 :pattern ( ($generated@@142 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@457) ($generated@@142 $generated@@637 $generated@@45))
 :pattern ( ($generated@@142 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@135) ($generated@@142 $generated@@638 $generated@@48))
 :pattern ( ($generated@@142 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@643) $generated@@79)) (= (type $generated@@644) ($generated@@166 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@646  (=> (not (= $generated@@639 ($generated@@252 0))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@142 ($generated@@8 (- $generated@@639 1)) $generated@@139)) (=> ($generated@@142 ($generated@@8 (- $generated@@639 1)) $generated@@139) (=> (and (= $generated@@640 (- $generated@@639 1)) ($generated@@76 ($generated@@8 $generated@@640) $generated@@139 $generated@@641)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@639) (= $generated@@640 $generated@@639))) (=> (or (<= 0 $generated@@639) (= $generated@@640 $generated@@639)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@640 $generated@@639)) (=> (< $generated@@640 $generated@@639) (=> (and ($generated@@384 (- $generated@@639 1)) (= (ControlFlow 0 4) (- 0 3))) (<= 0 $generated@@639))))))))))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (= $generated@@642 ($generated@@220 $generated@@643 $generated@@641 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 2) $generated@@647) (=> (= (ControlFlow 0 8) 4) $generated@@646)))))
(let (($generated@@649 true))
(let (($generated@@650  (=> (= $generated@@644 ($generated@@165 $generated@@643 $generated@@641 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@649) (=> (= (ControlFlow 0 9) 8) $generated@@648)))))
(let (($generated@@651  (=> (and (and (and ($generated@@258 $generated@@641) ($generated@@645 $generated@@641)) (<= ($generated@@252 0) $generated@@639)) (and (= 1 $generated@@381) (= (ControlFlow 0 10) 9))) $generated@@650)))
$generated@@651)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (T@U Int) Int)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 (Int) Bool)
(declare-fun $generated@@160 (Int) Int)
(declare-fun $generated@@161 (Int Int) Int)
(declare-fun $generated@@162 (Int Int) Int)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 () T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U Int) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (= ($generated@@1 $generated@@158) 16) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@157 $generated@@163)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@163))
))))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@164 T@U) ($generated@@165 Int) ) (!  (=> (and (= (type $generated@@164) $generated@@158) (or ($generated@@159 $generated@@165) (and (not (= 1 $generated@@155)) (<= ($generated@@160 0) $generated@@165)))) (and (=> (not (= $generated@@165 ($generated@@160 0))) (and (=> (= ($generated@@161 $generated@@165 ($generated@@160 2)) ($generated@@160 0)) ($generated@@159 (- $generated@@165 1))) (=> (not (= ($generated@@161 $generated@@165 ($generated@@160 2)) ($generated@@160 0))) ($generated@@159 (- $generated@@165 1))))) (= ($generated@@156 ($generated@@157 $generated@@164) $generated@@165) (ite (= $generated@@165 ($generated@@160 0)) 1 (ite (= ($generated@@161 $generated@@165 ($generated@@160 2)) ($generated@@160 0)) ($generated@@162 ($generated@@156 $generated@@164 (- $generated@@165 1)) $generated@@165) ($generated@@162 $generated@@165 ($generated@@156 $generated@@164 (- $generated@@165 1))))))))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@164) $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@66)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@170) $generated@@66)) ($generated@@137 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@137 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 17)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@79 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@69 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@79) (= (type $generated@@221) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@222) ($generated@@68 $generated@@4))) (= (type $generated@@224) $generated@@79)) (= (type $generated@@225) ($generated@@68 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@173 $generated@@79 $generated@@4))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@69 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@79) (= (type $generated@@233) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@234) ($generated@@68 $generated@@4))) (= (type $generated@@236) $generated@@79)) (= (type $generated@@237) ($generated@@68 $generated@@238))) (= ($generated@@0 ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@171 ($generated@@227 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@141)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@66) (= (type $generated@@244) $generated@@66)) (= (type $generated@@245) $generated@@150)) (= (type $generated@@246) $generated@@150)) (= ($generated@@137 ($generated@@239 $generated@@245 $generated@@246) ($generated@@140 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@137 ($generated@@239 $generated@@245 $generated@@246) ($generated@@140 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@141) (= (type $generated@@248) $generated@@141)) (= ($generated@@147 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@147 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@252) $generated@@66)) (= ($generated@@137 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@150) ($generated@@0 ($generated@@83 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@83 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@137 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@66)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@257) $generated@@66)) (= ($generated@@137 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@150) ($generated@@0 ($generated@@83 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@83 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@137 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@160 $generated@@259) $generated@@259)
 :pattern ( ($generated@@160 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@150)) (= (type $generated@@269) $generated@@150)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@239 $generated@@268 $generated@@269) ($generated@@140 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@239 $generated@@268 $generated@@269) ($generated@@140 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@141) (= ($generated@@139 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@141) ($generated@@139 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@150) (= (type $generated@@276) $generated@@150)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@139 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 18)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@285 T@U) ($generated@@286 Int) ) (!  (=> (and (= (type $generated@@285) $generated@@158) (or ($generated@@159 ($generated@@160 $generated@@286)) (and (not (= 1 $generated@@155)) (<= ($generated@@160 0) $generated@@286)))) (and (=> (not (= ($generated@@160 $generated@@286) ($generated@@160 0))) (and (=> (= ($generated@@160 ($generated@@161 $generated@@286 ($generated@@160 2))) ($generated@@160 0)) ($generated@@159 ($generated@@160 (- $generated@@286 1)))) (=> (not (= ($generated@@160 ($generated@@161 $generated@@286 ($generated@@160 2))) ($generated@@160 0))) ($generated@@159 ($generated@@160 (- $generated@@286 1)))))) (= ($generated@@156 ($generated@@157 $generated@@285) ($generated@@160 $generated@@286)) (ite (= ($generated@@160 $generated@@286) ($generated@@160 0)) 1 (ite (= ($generated@@160 ($generated@@161 $generated@@286 ($generated@@160 2))) ($generated@@160 0)) ($generated@@162 ($generated@@160 ($generated@@156 ($generated@@157 $generated@@285) ($generated@@160 (- $generated@@286 1)))) ($generated@@160 $generated@@286)) ($generated@@162 ($generated@@160 $generated@@286) ($generated@@160 ($generated@@156 ($generated@@157 $generated@@285) ($generated@@160 (- $generated@@286 1))))))))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@157 $generated@@285) ($generated@@160 $generated@@286)))
))))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@137 $generated@@287 $generated@@134) (<= ($generated@@160 0) ($generated $generated@@287))))
 :pattern ( ($generated@@137 $generated@@287 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@288 T@U) ($generated@@289 Int) ) (!  (=> (and (= (type $generated@@288) $generated@@158) (or ($generated@@159 $generated@@289) (and (not (= 1 $generated@@155)) (<= ($generated@@160 0) $generated@@289)))) (<= ($generated@@160 0) ($generated@@156 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@156 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@150)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@66) (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@76 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@265 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@81 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@78 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@83 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@81 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@78 $generated@@338 $generated@@2)) (= ($generated@@167 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@83 $generated@@337 $generated@@339))) (<= ($generated ($generated@@83 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@83 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@167 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@150) ($generated@@240 $generated@@343 $generated@@134)) (and (= ($generated@@290 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@137 ($generated@@340 $generated@@2 $generated@@343) $generated@@134)))
 :pattern ( ($generated@@240 $generated@@343 $generated@@134))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@137 $generated@@366 ($generated@@166 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@240 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@137 $generated@@366 ($generated@@166 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@249 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@150) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@265 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@249 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@254 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@150) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@265 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@254 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@296 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@296 $generated@@378) $generated@@377)))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@305 (type $generated@@382))))
(let (($generated@@384 ($generated@@304 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@386) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@385) ($generated@@148 ($generated@@340 $generated@@141 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@148 ($generated@@340 $generated@@141 $generated@@386))) ($generated@@149 ($generated@@340 $generated@@141 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@323 (type $generated@@390))))
(let (($generated@@392 ($generated@@322 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@394) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@393) ($generated@@148 ($generated@@340 $generated@@141 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@148 ($generated@@340 $generated@@141 $generated@@394))) ($generated@@149 ($generated@@340 $generated@@141 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@304 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@303 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@322 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@321 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))) (and ($generated@@265 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@265 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))) (and ($generated@@265 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@265 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@78 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@323 (type $generated@@423))))
(let (($generated@@425 ($generated@@322 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@321 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@320 $generated@@425 $generated@@424)) (= ($generated@@319 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@319 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@323 (type $generated@@426))))
(let (($generated@@428 ($generated@@322 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@321 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@320 $generated@@428 $generated@@427)) (= ($generated@@359 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@359 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@323 (type $generated@@429))))
(let (($generated@@431 ($generated@@322 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@321 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@320 $generated@@431 $generated@@430)) (= ($generated@@387 $generated@@429) ($generated@@421 $generated@@150))))))
 :pattern ( ($generated@@387 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@305 (type $generated@@432))))
(let (($generated@@434 ($generated@@304 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@303 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@302 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@150) (= (type $generated@@436) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@432) ($generated@@290 ($generated@@239 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@379 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@150) (= (type $generated@@441) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@437) ($generated@@290 ($generated@@239 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@387 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) ($generated@@240 $generated@@442 $generated@@46)) (and (= ($generated@@290 ($generated@@340 $generated@@2 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@340 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@240 $generated@@443 $generated@@47)) (and (= ($generated@@290 ($generated@@340 $generated@@3 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@340 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@240 $generated@@444 $generated@@44)) (and (= ($generated@@290 ($generated@@340 $generated@@4 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@340 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 21))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) ($generated@@240 $generated@@446 $generated@@45)) (and (= ($generated@@290 ($generated@@340 $generated@@445 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@340 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@66) (= ($generated@@240 ($generated@@290 $generated@@447) $generated@@448) ($generated@@137 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@240 ($generated@@290 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@295 $generated@@449))))
 :pattern ( ($generated@@295 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@280 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@279 $generated@@452)) (<= 0 ($generated@@278 $generated@@451))))
 :pattern ( ($generated@@278 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@405 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@405 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@405 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@413 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@413 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@271 ($generated@@239 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@239 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@140 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@140 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@140 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@140 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) (= ($generated@@148 ($generated@@239 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@239 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@149 ($generated@@239 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@239 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@158)
 :pattern ( ($generated@@487 $generated@@489))
)) (= (type $generated@@488) $generated@@158)))
(assert (forall (($generated@@490 T@U) ($generated@@491 Int) ) (!  (=> (= (type $generated@@490) $generated@@158) (= ($generated@@156 $generated@@490 $generated@@491) ($generated@@156 $generated@@488 $generated@@491)))
 :pattern ( ($generated@@156 ($generated@@487 $generated@@490) $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ($generated@@496 Int) ) (! (let (($generated@@497 ($generated@@280 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495 $generated@@496)) $generated@@497))
 :pattern ( ($generated@@493 $generated@@495 $generated@@496))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@279 $generated@@150)) (= (type $generated@@499) $generated@@66)) (= (type $generated@@500) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@498 ($generated@@492 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@278 $generated@@498))) ($generated@@265 ($generated@@493 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@493 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@76 $generated@@498 ($generated@@492 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@77 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@77 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@249 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@249 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@249 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@254 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@254 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@254 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@166 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@166 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@166 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@516 ($generated@@492 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@492 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@74 ($generated@@492 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@492 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@340 $generated@@521 ($generated@@290 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@290 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@137 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@522) $generated@@525))) (and ($generated@@240 ($generated@@83 ($generated@@380 $generated@@522) $generated@@525) $generated@@524) ($generated@@240 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@137 $generated@@522 ($generated@@405 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@66)) (= ($generated@@137 $generated@@526 ($generated@@413 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@526) $generated@@529))) (and ($generated@@240 ($generated@@83 ($generated@@388 $generated@@526) $generated@@529) $generated@@528) ($generated@@240 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@526) $generated@@529))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@137 $generated@@526 ($generated@@413 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@150)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@239 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@239 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@150)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@239 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@239 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (= (type $generated@@536) $generated@@158) (= ($generated@@156 ($generated@@157 $generated@@536) $generated@@537) ($generated@@156 $generated@@536 $generated@@537)))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@240 $generated@@538 ($generated@@405 $generated@@539 $generated@@540))) (and (= ($generated@@290 ($generated@@340 ($generated@@303 $generated@@150 $generated@@150) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@340 ($generated@@303 $generated@@150 $generated@@150) $generated@@538) ($generated@@405 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@240 $generated@@538 ($generated@@405 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@150) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@240 $generated@@541 ($generated@@413 $generated@@542 $generated@@543))) (and (= ($generated@@290 ($generated@@340 ($generated@@321 $generated@@150 $generated@@150) $generated@@541)) $generated@@541) ($generated@@137 ($generated@@340 ($generated@@321 $generated@@150 $generated@@150) $generated@@541) ($generated@@413 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@413 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@150)) ($generated@@240 $generated@@546 ($generated@@140 $generated@@544 $generated@@545))) (and (= ($generated@@290 ($generated@@340 $generated@@141 $generated@@546)) $generated@@546) ($generated@@137 ($generated@@340 $generated@@141 $generated@@546) ($generated@@140 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@140 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@421 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@421 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@549 Int) ($generated@@550 Int) ) (! (= ($generated@@161 $generated@@549 $generated@@550) (mod $generated@@549 $generated@@550))
 :pattern ( ($generated@@161 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@71)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@66) (= (type $generated@@554) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@553 $generated@@554)) $generated@@63) (= ($generated@@551 ($generated@@140 $generated@@553 $generated@@554)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ($generated@@556 Int) ) (! (= ($generated@@162 $generated@@555 $generated@@556) (* $generated@@555 $generated@@556))
 :pattern ( ($generated@@162 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@141) (= ($generated@@530 ($generated@@290 $generated@@557)) ($generated@@531 $generated@@557)))
 :pattern ( ($generated@@530 ($generated@@290 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@150) ($generated@@240 $generated@@558 ($generated@@77 0))) (and (= ($generated@@290 ($generated@@340 $generated@@2 $generated@@558)) $generated@@558) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@558) ($generated@@77 0))))
 :pattern ( ($generated@@240 $generated@@558 ($generated@@77 0)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@66)) ($generated@@240 $generated@@559 ($generated@@249 $generated@@560))) (and (= ($generated@@290 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@559)) $generated@@559) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@559) ($generated@@249 $generated@@560))))
 :pattern ( ($generated@@240 $generated@@559 ($generated@@249 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@66)) ($generated@@240 $generated@@561 ($generated@@254 $generated@@562))) (and (= ($generated@@290 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@561) ($generated@@254 $generated@@562))))
 :pattern ( ($generated@@240 $generated@@561 ($generated@@254 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@66)) ($generated@@240 $generated@@563 ($generated@@166 $generated@@564))) (and (= ($generated@@290 ($generated@@340 ($generated@@78 $generated@@150 $generated@@2) $generated@@563)) $generated@@563) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@2) $generated@@563) ($generated@@166 $generated@@564))))
 :pattern ( ($generated@@240 $generated@@563 ($generated@@166 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@66)) ($generated@@240 $generated@@565 ($generated@@492 $generated@@566))) (and (= ($generated@@290 ($generated@@340 ($generated@@279 $generated@@150) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@340 ($generated@@279 $generated@@150) $generated@@565) ($generated@@492 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@492 $generated@@566)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@551 $generated@@134) $generated@@64))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@567 ($generated@@166 $generated@@568) $generated@@569) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@567 $generated@@570)))) ($generated@@265 $generated@@570 $generated@@568 $generated@@569))
 :pattern ( ($generated@@83 $generated@@567 $generated@@570))
))))
 :pattern ( ($generated@@76 $generated@@567 ($generated@@166 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@141) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@573) (and ($generated@@139 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@66) ($generated@@76 $generated@@571 ($generated@@140 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@140 $generated@@572 $generated@@574) $generated@@573))
))))) ($generated@@265 ($generated@@148 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@265 ($generated@@148 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@141) (= (type $generated@@576) $generated@@66)) (= (type $generated@@577) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@577) (and ($generated@@139 $generated@@575) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@66) ($generated@@76 $generated@@575 ($generated@@140 $generated@@578 $generated@@576) $generated@@577))
 :pattern ( ($generated@@76 $generated@@575 ($generated@@140 $generated@@578 $generated@@576) $generated@@577))
))))) ($generated@@265 ($generated@@149 $generated@@575) $generated@@576 $generated@@577))
 :pattern ( ($generated@@265 ($generated@@149 $generated@@575) $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@150) (= (type $generated@@580) $generated@@150)) (= ($generated@@239 ($generated@@260 $generated@@579) ($generated@@260 $generated@@580)) ($generated@@260 ($generated@@239 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@239 ($generated@@260 $generated@@579) ($generated@@260 $generated@@580)))
)))
(assert (forall (($generated@@581 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@160 $generated@@581))) ($generated@@260 ($generated@@290 ($generated@@8 $generated@@581))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@160 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ) (! (= ($generated@@290 ($generated@@260 $generated@@582)) ($generated@@260 ($generated@@290 $generated@@582)))
 :pattern ( ($generated@@290 ($generated@@260 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@280 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@279 $generated@@584)) (= ($generated@@278 $generated@@583) 0)) (= $generated@@583 ($generated@@277 $generated@@584))))
 :pattern ( ($generated@@278 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@295 ($generated@@84 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@295 $generated@@585) ($generated ($generated@@83 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@295 ($generated@@84 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@2)) ($generated@@76 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@3)) ($generated@@76 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@4)) ($generated@@76 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@445)) ($generated@@76 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@150)) ($generated@@76 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@279 $generated@@150)) (= (type $generated@@600) $generated@@66)) (= ($generated@@137 $generated@@599 ($generated@@492 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@278 $generated@@599))) ($generated@@240 ($generated@@493 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@493 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@137 $generated@@599 ($generated@@492 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@279 $generated@@150)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@278 $generated@@603))) (< ($generated@@531 ($generated@@340 $generated@@141 ($generated@@493 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@531 ($generated@@340 $generated@@141 ($generated@@493 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@137 $generated@@605 ($generated@@405 $generated@@606 $generated@@607))) (and (and ($generated@@137 ($generated@@301 $generated@@605) ($generated@@249 $generated@@606)) ($generated@@137 ($generated@@348 $generated@@605) ($generated@@249 $generated@@607))) ($generated@@137 ($generated@@379 $generated@@605) ($generated@@249 ($generated@@140 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@137 $generated@@605 ($generated@@405 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) $generated@@66)) ($generated@@137 $generated@@608 ($generated@@413 $generated@@609 $generated@@610))) (and (and ($generated@@137 ($generated@@319 $generated@@608) ($generated@@254 $generated@@609)) ($generated@@137 ($generated@@359 $generated@@608) ($generated@@254 $generated@@610))) ($generated@@137 ($generated@@387 $generated@@608) ($generated@@254 ($generated@@140 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@137 $generated@@608 ($generated@@413 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@137 $generated@@611 $generated@@46))
 :pattern ( ($generated@@137 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@137 $generated@@612 $generated@@47))
 :pattern ( ($generated@@137 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@137 $generated@@613 $generated@@44))
 :pattern ( ($generated@@137 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@445) ($generated@@137 $generated@@614 $generated@@45))
 :pattern ( ($generated@@137 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@150) ($generated@@137 $generated@@615 $generated@@48))
 :pattern ( ($generated@@137 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@620) ($generated@@173 $generated@@79 $generated@@4))) (= (type $generated@@621) $generated@@79)) (= (type $generated@@622) ($generated@@173 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@624  (=> (not (= ($generated@@161 $generated@@616 ($generated@@160 2)) ($generated@@160 0))) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@137 ($generated@@8 (- $generated@@616 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@616 1)) $generated@@134) (=> (and (= $generated@@617 (- $generated@@616 1)) ($generated@@76 ($generated@@8 $generated@@617) $generated@@134 $generated@@618)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (<= 0 $generated@@616) (= $generated@@617 $generated@@616))) (=> (or (<= 0 $generated@@616) (= $generated@@617 $generated@@616)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (< $generated@@617 $generated@@616)) (=> (< $generated@@617 $generated@@616) (=> (and ($generated@@159 (- $generated@@616 1)) (= (ControlFlow 0 10) (- 0 9))) ($generated@@137 ($generated@@8 ($generated@@162 $generated@@616 ($generated@@156 ($generated@@157 $generated@@488) (- $generated@@616 1)))) $generated@@134))))))))))))
(let (($generated@@625  (=> (= ($generated@@161 $generated@@616 ($generated@@160 2)) ($generated@@160 0)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@137 ($generated@@8 (- $generated@@616 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@616 1)) $generated@@134) (=> (and (= $generated@@619 (- $generated@@616 1)) ($generated@@76 ($generated@@8 $generated@@619) $generated@@134 $generated@@618)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@616) (= $generated@@619 $generated@@616))) (=> (or (<= 0 $generated@@616) (= $generated@@619 $generated@@616)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< $generated@@619 $generated@@616)) (=> (< $generated@@619 $generated@@616) (=> (and ($generated@@159 (- $generated@@616 1)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@137 ($generated@@8 ($generated@@162 ($generated@@156 ($generated@@157 $generated@@488) (- $generated@@616 1)) $generated@@616)) $generated@@134))))))))))))
(let (($generated@@626  (=> (not (= $generated@@616 ($generated@@160 0))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (not (= ($generated@@160 2) 0))) (=> (not (= ($generated@@160 2) 0)) (and (=> (= (ControlFlow 0 14) 5) $generated@@625) (=> (= (ControlFlow 0 14) 10) $generated@@624)))))))
(let (($generated@@627  (=> (and (= $generated@@616 ($generated@@160 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 ($generated@@8 ($generated@@160 1)) $generated@@134))))
(let (($generated@@628  (=> (= $generated@@620 ($generated@@227 $generated@@621 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 3) $generated@@627) (=> (= (ControlFlow 0 16) 14) $generated@@626)))))
(let (($generated@@629 true))
(let (($generated@@630  (=> (= $generated@@622 ($generated@@172 $generated@@621 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 1) $generated@@629) (=> (= (ControlFlow 0 17) 16) $generated@@628)))))
(let (($generated@@631  (=> (and (and (and ($generated@@264 $generated@@618) ($generated@@623 $generated@@618)) (<= ($generated@@160 0) $generated@@616)) (and (= 1 $generated@@155) (= (ControlFlow 0 18) 17))) $generated@@630)))
$generated@@631)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (Int) Int)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@362 () Int)
(declare-fun $generated@@363 (T@U Int) T@U)
(declare-fun $generated@@364 () T@T)
(declare-fun $generated@@365 (Int) Bool)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (Int Int) Int)
(declare-fun $generated@@372 (T@U T@U) T@U)
(declare-fun $generated@@373 (T@T) T@U)
(declare-fun $generated@@381 (T@U T@U) Bool)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@U T@U) T@U)
(declare-fun $generated@@467 (T@T) T@U)
(declare-fun $generated@@491 () T@T)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 () T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@662 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@81 (type $generated@@229))))
(= (type ($generated@@228 $generated@@229 $generated@@230)) ($generated@@78 $generated@@231 $generated@@4)))
 :pattern ( ($generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@81 (type $generated@@232))))
 (=> (and (= (type $generated@@232) ($generated@@78 $generated@@234 $generated@@4)) (= (type $generated@@233) ($generated@@78 $generated@@234 $generated@@4))) (= ($generated@@228 ($generated@@228 $generated@@232 $generated@@233) $generated@@233) ($generated@@228 $generated@@232 $generated@@233))))
 :pattern ( ($generated@@228 ($generated@@228 $generated@@232 $generated@@233) $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@141)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@66) (= (type $generated@@240) $generated@@66)) (= (type $generated@@241) $generated@@150)) (= (type $generated@@242) $generated@@150)) (= ($generated@@137 ($generated@@235 $generated@@241 $generated@@242) ($generated@@140 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@137 ($generated@@235 $generated@@241 $generated@@242) ($generated@@140 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@141) (= (type $generated@@244) $generated@@141)) (= ($generated@@147 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@147 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@66)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@248) $generated@@66)) (= ($generated@@137 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@150) ($generated@@0 ($generated@@83 $generated@@247 $generated@@249))) ($generated@@236 $generated@@249 $generated@@248))
 :pattern ( ($generated@@83 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@137 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@66)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@253) $generated@@66)) (= ($generated@@137 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@150) ($generated@@0 ($generated@@83 $generated@@252 $generated@@254))) ($generated@@236 $generated@@254 $generated@@253))
 :pattern ( ($generated@@83 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@137 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@255 $generated@@256) $generated@@256)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@66) (= (type $generated@@264) $generated@@66)) (= (type $generated@@265) $generated@@150)) (= (type $generated@@266) $generated@@150)) (= (type $generated@@267) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@261 $generated@@267)) (= ($generated@@76 ($generated@@235 $generated@@265 $generated@@266) ($generated@@140 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@76 ($generated@@235 $generated@@265 $generated@@266) ($generated@@140 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@70)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@141) (= ($generated@@139 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@141) ($generated@@139 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@150) (= (type $generated@@273) $generated@@150)) (= $generated@@271 ($generated@@235 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@139 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@2) (= ($generated@@137 $generated@@282 $generated@@134) (<= ($generated@@255 0) ($generated $generated@@282))))
 :pattern ( ($generated@@137 $generated@@282 $generated@@134))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@150)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@66) (= (type $generated@@287) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@262 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@76 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@262 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@78 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@81 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@78 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@83 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@78 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@83 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@81 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@78 $generated@@331 $generated@@2)) (= ($generated@@156 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@83 $generated@@330 $generated@@332))) (<= ($generated ($generated@@83 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@83 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@156 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@150) ($generated@@236 $generated@@336 $generated@@134)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@336)) $generated@@336) ($generated@@137 ($generated@@333 $generated@@2 $generated@@336) $generated@@134)))
 :pattern ( ($generated@@236 $generated@@336 $generated@@134))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@298 (type $generated@@337))))
(let (($generated@@339 ($generated@@297 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@296 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@295 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@294 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@298 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(let (($generated@@346 ($generated@@297 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@296 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@295 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@316 (type $generated@@348))))
(let (($generated@@350 ($generated@@315 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@314 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@313 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@312 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@316 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(let (($generated@@357 ($generated@@315 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@314 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@313 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@360) $generated@@66)) (= ($generated@@137 $generated@@359 ($generated@@155 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@359 $generated@@361)))) ($generated@@236 $generated@@361 $generated@@360))
 :pattern ( ($generated@@83 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@137 $generated@@359 ($generated@@155 $generated@@360)))
)))
(assert  (and (= ($generated@@1 $generated@@364) 20) (forall (($generated@@366 T@U) ($generated@@367 Int) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))))
(assert  (=> (<= 1 $generated@@362) (forall (($generated@@368 T@U) ($generated@@369 Int) ) (!  (=> (and (= (type $generated@@368) $generated@@364) (or ($generated@@365 $generated@@369) (and (not (= 1 $generated@@362)) (<= ($generated@@255 0) $generated@@369)))) ($generated@@137 ($generated@@363 $generated@@368 $generated@@369) ($generated@@245 $generated@@134)))
 :pattern ( ($generated@@363 $generated@@368 $generated@@369))
))))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@370 $generated@@374)) $generated@@364)
 :pattern ( ($generated@@370 $generated@@374))
)) (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= (type ($generated@@372 $generated@@375 $generated@@376)) ($generated@@78 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@378 T@T) ) (! (= (type ($generated@@373 $generated@@378)) ($generated@@78 $generated@@378 $generated@@4))
 :pattern ( ($generated@@373 $generated@@378))
))))
(assert  (=> (<= 1 $generated@@362) (forall (($generated@@379 T@U) ($generated@@380 Int) ) (!  (=> (and (= (type $generated@@379) $generated@@364) (or ($generated@@365 $generated@@380) (and (not (= 1 $generated@@362)) (<= ($generated@@255 0) $generated@@380)))) (and (=> (not (= $generated@@380 ($generated@@255 0))) (and (=> (= ($generated@@371 $generated@@380 ($generated@@255 2)) ($generated@@255 0)) ($generated@@365 (- $generated@@380 1))) (=> (not (= ($generated@@371 $generated@@380 ($generated@@255 2)) ($generated@@255 0))) ($generated@@365 (- $generated@@380 1))))) (= ($generated@@363 ($generated@@370 $generated@@379) $generated@@380) (ite (= $generated@@380 ($generated@@255 0)) ($generated@@372 ($generated@@373 $generated@@150) ($generated@@283 ($generated@@8 ($generated@@255 0)))) (ite (= ($generated@@371 $generated@@380 ($generated@@255 2)) ($generated@@255 0)) ($generated@@228 ($generated@@363 $generated@@379 (- $generated@@380 1)) ($generated@@372 ($generated@@373 $generated@@150) ($generated@@283 ($generated@@8 $generated@@380)))) ($generated@@228 ($generated@@372 ($generated@@373 $generated@@150) ($generated@@283 ($generated@@8 $generated@@380))) ($generated@@363 $generated@@379 (- $generated@@380 1))))))))
 :pattern ( ($generated@@363 ($generated@@370 $generated@@379) $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@81 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383 $generated@@384)) ($generated@@78 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@81 (type $generated@@386))))
 (=> (and (and (= (type $generated@@386) ($generated@@78 $generated@@388 $generated@@4)) (= (type $generated@@387) ($generated@@78 $generated@@388 $generated@@4))) ($generated@@381 $generated@@386 $generated@@387)) (and (= ($generated@@382 ($generated@@228 $generated@@386 $generated@@387) $generated@@386) $generated@@387) (= ($generated@@382 ($generated@@228 $generated@@386 $generated@@387) $generated@@387) $generated@@386))))
 :pattern ( ($generated@@228 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
 (=> (and (= (type $generated@@389) ($generated@@78 $generated@@392 $generated@@4)) (= (type $generated@@390) ($generated@@78 $generated@@392 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@382 $generated@@389 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@83 $generated@@389 $generated@@391)) (not ($generated@@0 ($generated@@83 $generated@@390 $generated@@391)))))))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@393 ($generated@@245 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 $generated@@393 $generated@@396))) ($generated@@262 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@83 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@393 ($generated@@245 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@397 ($generated@@250 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 $generated@@397 $generated@@400))) ($generated@@262 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@83 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@397 ($generated@@250 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@83 ($generated@@289 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@83 ($generated@@289 $generated@@402) $generated@@401)))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@298 (type $generated@@406))))
(let (($generated@@408 ($generated@@297 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@78 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@409) ($generated@@148 ($generated@@333 $generated@@141 $generated@@410)))) (= ($generated@@83 ($generated@@404 $generated@@409) ($generated@@148 ($generated@@333 $generated@@141 $generated@@410))) ($generated@@149 ($generated@@333 $generated@@141 $generated@@410))))))
 :pattern ( ($generated@@83 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert  (and (forall (($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@413)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@411 $generated@@413))
)) (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@316 (type $generated@@414))))
(let (($generated@@416 ($generated@@315 (type $generated@@414))))
(= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@416 $generated@@415))))
 :pattern ( ($generated@@412 $generated@@414))
))))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@417) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@418) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@411 $generated@@417) $generated@@418))  (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@417) ($generated@@148 ($generated@@333 $generated@@141 $generated@@418)))) (= ($generated@@83 ($generated@@412 $generated@@417) ($generated@@148 ($generated@@333 $generated@@141 $generated@@418))) ($generated@@149 ($generated@@333 $generated@@141 $generated@@418))))))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@297 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@296 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@83 ($generated@@341 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@83 ($generated@@294 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@83 ($generated@@404 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@419) $generated@@423))
 :pattern ( ($generated@@83 ($generated@@404 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@83 ($generated@@341 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@83 ($generated@@412 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@66)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@433) $generated@@66)) (= (type $generated@@434) $generated@@66)) (= (type $generated@@435) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@432) $generated@@436))) (and ($generated@@262 ($generated@@83 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@262 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@83 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@76 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@438 $generated@@439)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (= (type $generated@@440) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@441) $generated@@66)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443) (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@440) $generated@@444))) (and ($generated@@262 ($generated@@83 ($generated@@412 $generated@@440) $generated@@444) $generated@@442 $generated@@443) ($generated@@262 $generated@@444 $generated@@441 $generated@@443)))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@440) $generated@@444))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@440) $generated@@444))
))))
 :pattern ( ($generated@@76 $generated@@440 ($generated@@437 $generated@@441 $generated@@442) $generated@@443))
)))
(assert  (=> (<= 1 $generated@@362) (forall (($generated@@445 T@U) ($generated@@446 Int) ) (!  (=> (and (= (type $generated@@445) $generated@@364) (or ($generated@@365 ($generated@@255 $generated@@446)) (and (not (= 1 $generated@@362)) (<= ($generated@@255 0) $generated@@446)))) (and (=> (not (= ($generated@@255 $generated@@446) ($generated@@255 0))) (and (=> (= ($generated@@255 ($generated@@371 $generated@@446 ($generated@@255 2))) ($generated@@255 0)) ($generated@@365 ($generated@@255 (- $generated@@446 1)))) (=> (not (= ($generated@@255 ($generated@@371 $generated@@446 ($generated@@255 2))) ($generated@@255 0))) ($generated@@365 ($generated@@255 (- $generated@@446 1)))))) (= ($generated@@363 ($generated@@370 $generated@@445) ($generated@@255 $generated@@446)) (ite (= ($generated@@255 $generated@@446) ($generated@@255 0)) ($generated@@372 ($generated@@373 $generated@@150) ($generated@@283 ($generated@@8 ($generated@@255 0)))) (ite (= ($generated@@255 ($generated@@371 $generated@@446 ($generated@@255 2))) ($generated@@255 0)) ($generated@@228 ($generated@@363 ($generated@@370 $generated@@445) ($generated@@255 (- $generated@@446 1))) ($generated@@372 ($generated@@373 $generated@@150) ($generated@@283 ($generated@@8 ($generated@@255 $generated@@446))))) ($generated@@228 ($generated@@372 ($generated@@373 $generated@@150) ($generated@@283 ($generated@@8 ($generated@@255 $generated@@446)))) ($generated@@363 ($generated@@370 $generated@@445) ($generated@@255 (- $generated@@446 1)))))))))
 :weight 3
 :pattern ( ($generated@@363 ($generated@@370 $generated@@445) ($generated@@255 $generated@@446)))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (! (let (($generated@@450 (type $generated@@448)))
 (=> (and (and (= (type $generated@@447) ($generated@@78 $generated@@450 $generated@@4)) (= (type $generated@@449) $generated@@450)) ($generated@@0 ($generated@@83 $generated@@447 $generated@@449))) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@447 $generated@@448) $generated@@449))))
 :pattern ( ($generated@@372 $generated@@447 $generated@@448) ($generated@@83 $generated@@447 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
 (=> (and (and (= (type $generated@@451) ($generated@@78 $generated@@454 $generated@@4)) (= (type $generated@@452) ($generated@@78 $generated@@454 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@451 $generated@@453))) ($generated@@0 ($generated@@83 ($generated@@228 $generated@@451 $generated@@452) $generated@@453))))
 :pattern ( ($generated@@228 $generated@@451 $generated@@452) ($generated@@83 $generated@@451 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
 (=> (and (and (= (type $generated@@455) ($generated@@78 $generated@@458 $generated@@4)) (= (type $generated@@456) ($generated@@78 $generated@@458 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@456 $generated@@457))) ($generated@@0 ($generated@@83 ($generated@@228 $generated@@455 $generated@@456) $generated@@457))))
 :pattern ( ($generated@@228 $generated@@455 $generated@@456) ($generated@@83 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@460)))
 (=> (and (= (type $generated@@459) ($generated@@78 $generated@@462 $generated@@4)) (= (type $generated@@461) $generated@@462)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@459 $generated@@460) $generated@@461))  (or (= $generated@@461 $generated@@460) ($generated@@0 ($generated@@83 $generated@@459 $generated@@461))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
 (=> (and (and (= (type $generated@@463) ($generated@@78 $generated@@466 $generated@@4)) (= (type $generated@@464) ($generated@@78 $generated@@466 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@464 $generated@@465))) (not ($generated@@0 ($generated@@83 ($generated@@382 $generated@@463 $generated@@464) $generated@@465)))))
 :pattern ( ($generated@@382 $generated@@463 $generated@@464) ($generated@@83 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@468 T@T) ) (! (= (type ($generated@@467 $generated@@468)) ($generated@@78 $generated@@468 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@316 (type $generated@@469))))
(let (($generated@@471 ($generated@@315 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@314 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@313 $generated@@471 $generated@@470)) (= ($generated@@312 $generated@@469) ($generated@@467 $generated@@471))))))
 :pattern ( ($generated@@312 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@316 (type $generated@@472))))
(let (($generated@@474 ($generated@@315 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@314 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@313 $generated@@474 $generated@@473)) (= ($generated@@352 $generated@@472) ($generated@@467 $generated@@473))))))
 :pattern ( ($generated@@352 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@316 (type $generated@@475))))
(let (($generated@@477 ($generated@@315 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@314 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@313 $generated@@477 $generated@@476)) (= ($generated@@411 $generated@@475) ($generated@@467 $generated@@150))))))
 :pattern ( ($generated@@411 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@298 (type $generated@@478))))
(let (($generated@@480 ($generated@@297 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@296 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@295 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (and (and (= (type $generated@@481) $generated@@150) (= (type $generated@@482) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@403 $generated@@478) ($generated@@283 ($generated@@235 $generated@@481 $generated@@482)))))
 :no-pattern (type $generated@@481)
 :no-pattern (type $generated@@482)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
))))))
 :pattern ( ($generated@@403 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@316 (type $generated@@483))))
(let (($generated@@485 ($generated@@315 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@314 $generated@@485 $generated@@484)) (or (= $generated@@483 ($generated@@313 $generated@@485 $generated@@484)) (exists (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (and (and (= (type $generated@@486) $generated@@150) (= (type $generated@@487) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@411 $generated@@483) ($generated@@283 ($generated@@235 $generated@@486 $generated@@487)))))
 :no-pattern (type $generated@@486)
 :no-pattern (type $generated@@487)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
))))))
 :pattern ( ($generated@@411 $generated@@483))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@150) ($generated@@236 $generated@@488 $generated@@46)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@488)) $generated@@488) ($generated@@137 ($generated@@333 $generated@@2 $generated@@488) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@488 $generated@@46))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@150) ($generated@@236 $generated@@489 $generated@@47)) (and (= ($generated@@283 ($generated@@333 $generated@@3 $generated@@489)) $generated@@489) ($generated@@137 ($generated@@333 $generated@@3 $generated@@489) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@489 $generated@@47))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@150) ($generated@@236 $generated@@490 $generated@@44)) (and (= ($generated@@283 ($generated@@333 $generated@@4 $generated@@490)) $generated@@490) ($generated@@137 ($generated@@333 $generated@@4 $generated@@490) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@490 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@491) 21))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@150) ($generated@@236 $generated@@492 $generated@@45)) (and (= ($generated@@283 ($generated@@333 $generated@@491 $generated@@492)) $generated@@492) ($generated@@137 ($generated@@333 $generated@@491 $generated@@492) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@492 $generated@@45))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@236 ($generated@@283 $generated@@493) $generated@@494) ($generated@@137 $generated@@493 $generated@@494)))
 :pattern ( ($generated@@236 ($generated@@283 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@81 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@78 $generated@@496 $generated@@2)) (<= 0 ($generated@@288 $generated@@495))))
 :pattern ( ($generated@@288 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@277 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@276 $generated@@498)) (<= 0 ($generated@@275 $generated@@497))))
 :pattern ( ($generated@@275 $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@499 ($generated@@429 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@429 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@429 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@429 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@66) (= (type $generated@@508) $generated@@66)) (= ($generated@@74 ($generated@@429 $generated@@507 $generated@@508)) $generated@@58))
 :pattern ( ($generated@@429 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@509 ($generated@@437 $generated@@511 $generated@@512)) $generated@@511))
 :pattern ( ($generated@@437 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@437 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@437 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= ($generated@@74 ($generated@@437 $generated@@517 $generated@@518)) $generated@@59))
 :pattern ( ($generated@@437 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@150)) (= ($generated@@268 ($generated@@235 $generated@@519 $generated@@520)) $generated@@62))
 :pattern ( ($generated@@235 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= ($generated@@521 ($generated@@140 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@140 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@66)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@66) (= (type $generated@@528) $generated@@66)) (= ($generated@@525 ($generated@@140 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@140 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (= ($generated@@148 ($generated@@235 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@235 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (= ($generated@@149 ($generated@@235 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@235 $generated@@531 $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) $generated@@364)
 :pattern ( ($generated@@533 $generated@@535))
)) (= (type $generated@@534) $generated@@364)))
(assert (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (= (type $generated@@536) $generated@@364) (= ($generated@@363 $generated@@536 $generated@@537) ($generated@@363 $generated@@534 $generated@@537)))
 :pattern ( ($generated@@363 ($generated@@533 $generated@@536) $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@541 T@U) ($generated@@542 Int) ) (! (let (($generated@@543 ($generated@@277 (type $generated@@541))))
(= (type ($generated@@539 $generated@@541 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@541 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@276 $generated@@150)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@538 $generated@@545) $generated@@546) (forall (($generated@@547 Int) ) (!  (=> (and (<= 0 $generated@@547) (< $generated@@547 ($generated@@275 $generated@@544))) ($generated@@262 ($generated@@539 $generated@@544 $generated@@547) $generated@@545 $generated@@546))
 :pattern ( ($generated@@539 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@538 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (=> (= (type $generated@@548) ($generated@@78 $generated@@550 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@548 $generated@@549) $generated@@549))))
 :pattern ( ($generated@@372 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@77 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@77 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@66)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@553 ($generated@@245 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@245 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@74 ($generated@@245 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@245 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@66)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@557 ($generated@@250 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@250 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@74 ($generated@@250 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@250 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@155 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@155 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@66)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@565 ($generated@@538 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@538 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@66) (= ($generated@@74 ($generated@@538 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@538 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
(= ($generated@@333 $generated@@570 ($generated@@283 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@283 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@66)) (= ($generated@@137 $generated@@571 ($generated@@429 $generated@@572 $generated@@573)) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@294 $generated@@571) $generated@@574))) (and ($generated@@236 ($generated@@83 ($generated@@404 $generated@@571) $generated@@574) $generated@@573) ($generated@@236 $generated@@574 $generated@@572)))
 :pattern ( ($generated@@83 ($generated@@404 $generated@@571) $generated@@574))
 :pattern ( ($generated@@83 ($generated@@294 $generated@@571) $generated@@574))
))))
 :pattern ( ($generated@@137 $generated@@571 ($generated@@429 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@576) $generated@@66)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@575 ($generated@@437 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@575) $generated@@578))) (and ($generated@@236 ($generated@@83 ($generated@@412 $generated@@575) $generated@@578) $generated@@577) ($generated@@236 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@83 ($generated@@412 $generated@@575) $generated@@578))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@575 ($generated@@437 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@150)) (< ($generated@@579 $generated@@581) ($generated@@580 ($generated@@235 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@235 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@150) (= (type $generated@@584) $generated@@150)) (< ($generated@@579 $generated@@584) ($generated@@580 ($generated@@235 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@235 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) $generated@@364) (= ($generated@@363 ($generated@@370 $generated@@585) $generated@@586) ($generated@@363 $generated@@585 $generated@@586)))
 :pattern ( ($generated@@363 ($generated@@370 $generated@@585) $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@81 (type $generated@@587))))
 (=> (and (= (type $generated@@587) ($generated@@78 $generated@@589 $generated@@4)) (= (type $generated@@588) ($generated@@78 $generated@@589 $generated@@4))) (= ($generated@@228 $generated@@587 ($generated@@228 $generated@@587 $generated@@588)) ($generated@@228 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@228 $generated@@587 ($generated@@228 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@150) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@236 $generated@@590 ($generated@@429 $generated@@591 $generated@@592))) (and (= ($generated@@283 ($generated@@333 ($generated@@296 $generated@@150 $generated@@150) $generated@@590)) $generated@@590) ($generated@@137 ($generated@@333 ($generated@@296 $generated@@150 $generated@@150) $generated@@590) ($generated@@429 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@236 $generated@@590 ($generated@@429 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@236 $generated@@593 ($generated@@437 $generated@@594 $generated@@595))) (and (= ($generated@@283 ($generated@@333 ($generated@@314 $generated@@150 $generated@@150) $generated@@593)) $generated@@593) ($generated@@137 ($generated@@333 ($generated@@314 $generated@@150 $generated@@150) $generated@@593) ($generated@@437 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@236 $generated@@593 ($generated@@437 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@66) (= (type $generated@@597) $generated@@66)) (= (type $generated@@598) $generated@@150)) ($generated@@236 $generated@@598 ($generated@@140 $generated@@596 $generated@@597))) (and (= ($generated@@283 ($generated@@333 $generated@@141 $generated@@598)) $generated@@598) ($generated@@137 ($generated@@333 $generated@@141 $generated@@598) ($generated@@140 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@236 $generated@@598 ($generated@@140 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@599)))
 (not ($generated@@0 ($generated@@83 ($generated@@373 $generated@@600) $generated@@599))))
 :pattern ( (let (($generated@@600 (type $generated@@599)))
($generated@@83 ($generated@@373 $generated@@600) $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
 (not ($generated@@0 ($generated@@83 ($generated@@467 $generated@@602) $generated@@601))))
 :pattern ( (let (($generated@@602 (type $generated@@601)))
($generated@@83 ($generated@@467 $generated@@602) $generated@@601)))
)))
(assert (forall (($generated@@603 Int) ($generated@@604 Int) ) (! (= ($generated@@371 $generated@@603 $generated@@604) (mod $generated@@603 $generated@@604))
 :pattern ( ($generated@@371 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@71)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@66) (= (type $generated@@608) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@607 $generated@@608)) $generated@@63) (= ($generated@@605 ($generated@@140 $generated@@607 $generated@@608)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@141) (= ($generated@@579 ($generated@@283 $generated@@609)) ($generated@@580 $generated@@609)))
 :pattern ( ($generated@@579 ($generated@@283 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@150) ($generated@@236 $generated@@610 ($generated@@77 0))) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@610)) $generated@@610) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@610) ($generated@@77 0))))
 :pattern ( ($generated@@236 $generated@@610 ($generated@@77 0)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@150) (= (type $generated@@612) $generated@@66)) ($generated@@236 $generated@@611 ($generated@@245 $generated@@612))) (and (= ($generated@@283 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@611)) $generated@@611) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@611) ($generated@@245 $generated@@612))))
 :pattern ( ($generated@@236 $generated@@611 ($generated@@245 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@150) (= (type $generated@@614) $generated@@66)) ($generated@@236 $generated@@613 ($generated@@250 $generated@@614))) (and (= ($generated@@283 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@613)) $generated@@613) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@4) $generated@@613) ($generated@@250 $generated@@614))))
 :pattern ( ($generated@@236 $generated@@613 ($generated@@250 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@150) (= (type $generated@@616) $generated@@66)) ($generated@@236 $generated@@615 ($generated@@155 $generated@@616))) (and (= ($generated@@283 ($generated@@333 ($generated@@78 $generated@@150 $generated@@2) $generated@@615)) $generated@@615) ($generated@@137 ($generated@@333 ($generated@@78 $generated@@150 $generated@@2) $generated@@615) ($generated@@155 $generated@@616))))
 :pattern ( ($generated@@236 $generated@@615 ($generated@@155 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@150) (= (type $generated@@618) $generated@@66)) ($generated@@236 $generated@@617 ($generated@@538 $generated@@618))) (and (= ($generated@@283 ($generated@@333 ($generated@@276 $generated@@150) $generated@@617)) $generated@@617) ($generated@@137 ($generated@@333 ($generated@@276 $generated@@150) $generated@@617) ($generated@@538 $generated@@618))))
 :pattern ( ($generated@@236 $generated@@617 ($generated@@538 $generated@@618)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@605 $generated@@134) $generated@@64))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@619) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@619 ($generated@@155 $generated@@620) $generated@@621) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@619 $generated@@622)))) ($generated@@262 $generated@@622 $generated@@620 $generated@@621))
 :pattern ( ($generated@@83 $generated@@619 $generated@@622))
))))
 :pattern ( ($generated@@76 $generated@@619 ($generated@@155 $generated@@620) $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@81 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@78 $generated@@625 $generated@@4)) (= (type $generated@@624) ($generated@@78 $generated@@625 $generated@@4))) (= ($generated@@381 $generated@@623 $generated@@624) (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@625) (or (not ($generated@@0 ($generated@@83 $generated@@623 $generated@@626))) (not ($generated@@0 ($generated@@83 $generated@@624 $generated@@626)))))
 :pattern ( ($generated@@83 $generated@@623 $generated@@626))
 :pattern ( ($generated@@83 $generated@@624 $generated@@626))
)))))
 :pattern ( ($generated@@381 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@141) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@261 $generated@@629) (and ($generated@@139 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@66) ($generated@@76 $generated@@627 ($generated@@140 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@76 $generated@@627 ($generated@@140 $generated@@628 $generated@@630) $generated@@629))
))))) ($generated@@262 ($generated@@148 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@262 ($generated@@148 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@141) (= (type $generated@@632) $generated@@66)) (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@261 $generated@@633) (and ($generated@@139 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@66) ($generated@@76 $generated@@631 ($generated@@140 $generated@@634 $generated@@632) $generated@@633))
 :pattern ( ($generated@@76 $generated@@631 ($generated@@140 $generated@@634 $generated@@632) $generated@@633))
))))) ($generated@@262 ($generated@@149 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@262 ($generated@@149 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@150) (= (type $generated@@636) $generated@@150)) (= ($generated@@235 ($generated@@257 $generated@@635) ($generated@@257 $generated@@636)) ($generated@@257 ($generated@@235 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@235 ($generated@@257 $generated@@635) ($generated@@257 $generated@@636)))
)))
(assert (forall (($generated@@637 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@255 $generated@@637))) ($generated@@257 ($generated@@283 ($generated@@8 $generated@@637))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@255 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@283 ($generated@@257 $generated@@638)) ($generated@@257 ($generated@@283 $generated@@638)))
 :pattern ( ($generated@@283 ($generated@@257 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@277 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@276 $generated@@640)) (= ($generated@@275 $generated@@639) 0)) (= $generated@@639 ($generated@@274 $generated@@640))))
 :pattern ( ($generated@@275 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@78 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@288 ($generated@@84 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@288 $generated@@641) ($generated ($generated@@83 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@288 ($generated@@84 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@647)))
 (=> (and (= (type $generated@@645) ($generated@@78 $generated@@648 $generated@@4)) (= (type $generated@@646) ($generated@@78 $generated@@648 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@228 $generated@@645 $generated@@646) $generated@@647))  (or ($generated@@0 ($generated@@83 $generated@@645 $generated@@647)) ($generated@@0 ($generated@@83 $generated@@646 $generated@@647))))))
 :pattern ( ($generated@@83 ($generated@@228 $generated@@645 $generated@@646) $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@650) $generated@@2)) ($generated@@76 $generated@@650 $generated@@46 $generated@@649))
 :pattern ( ($generated@@76 $generated@@650 $generated@@46 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@652) $generated@@3)) ($generated@@76 $generated@@652 $generated@@47 $generated@@651))
 :pattern ( ($generated@@76 $generated@@652 $generated@@47 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@654) $generated@@4)) ($generated@@76 $generated@@654 $generated@@44 $generated@@653))
 :pattern ( ($generated@@76 $generated@@654 $generated@@44 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@656) $generated@@491)) ($generated@@76 $generated@@656 $generated@@45 $generated@@655))
 :pattern ( ($generated@@76 $generated@@656 $generated@@45 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@658) $generated@@150)) ($generated@@76 $generated@@658 $generated@@48 $generated@@657))
 :pattern ( ($generated@@76 $generated@@658 $generated@@48 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@276 $generated@@150)) (= (type $generated@@660) $generated@@66)) (= ($generated@@137 $generated@@659 ($generated@@538 $generated@@660)) (forall (($generated@@661 Int) ) (!  (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@275 $generated@@659))) ($generated@@236 ($generated@@539 $generated@@659 $generated@@661) $generated@@660))
 :pattern ( ($generated@@539 $generated@@659 $generated@@661))
))))
 :pattern ( ($generated@@137 $generated@@659 ($generated@@538 $generated@@660)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 Int) ) (!  (=> (= (type $generated@@663) ($generated@@276 $generated@@150)) (=> (and (<= 0 $generated@@664) (< $generated@@664 ($generated@@275 $generated@@663))) (< ($generated@@580 ($generated@@333 $generated@@141 ($generated@@539 $generated@@663 $generated@@664))) ($generated@@662 $generated@@663))))
 :pattern ( ($generated@@580 ($generated@@333 $generated@@141 ($generated@@539 $generated@@663 $generated@@664))))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) ($generated@@296 $generated@@150 $generated@@150)) (= (type $generated@@666) $generated@@66)) (= (type $generated@@667) $generated@@66)) ($generated@@137 $generated@@665 ($generated@@429 $generated@@666 $generated@@667))) (and (and ($generated@@137 ($generated@@294 $generated@@665) ($generated@@245 $generated@@666)) ($generated@@137 ($generated@@341 $generated@@665) ($generated@@245 $generated@@667))) ($generated@@137 ($generated@@403 $generated@@665) ($generated@@245 ($generated@@140 $generated@@666 $generated@@667)))))
 :pattern ( ($generated@@137 $generated@@665 ($generated@@429 $generated@@666 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (and (and (= (type $generated@@668) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@669) $generated@@66)) (= (type $generated@@670) $generated@@66)) ($generated@@137 $generated@@668 ($generated@@437 $generated@@669 $generated@@670))) (and (and ($generated@@137 ($generated@@312 $generated@@668) ($generated@@250 $generated@@669)) ($generated@@137 ($generated@@352 $generated@@668) ($generated@@250 $generated@@670))) ($generated@@137 ($generated@@411 $generated@@668) ($generated@@250 ($generated@@140 $generated@@669 $generated@@670)))))
 :pattern ( ($generated@@137 $generated@@668 ($generated@@437 $generated@@669 $generated@@670)))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@2) ($generated@@137 $generated@@671 $generated@@46))
 :pattern ( ($generated@@137 $generated@@671 $generated@@46))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@3) ($generated@@137 $generated@@672 $generated@@47))
 :pattern ( ($generated@@137 $generated@@672 $generated@@47))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@4) ($generated@@137 $generated@@673 $generated@@44))
 :pattern ( ($generated@@137 $generated@@673 $generated@@44))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@491) ($generated@@137 $generated@@674 $generated@@45))
 :pattern ( ($generated@@137 $generated@@674 $generated@@45))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@150) ($generated@@137 $generated@@675 $generated@@48))
 :pattern ( ($generated@@137 $generated@@675 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@678) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@680) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@681) $generated@@79)) (= (type $generated@@682) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@684  (=> (not (= ($generated@@371 $generated@@676 ($generated@@255 2)) ($generated@@255 0))) (and (=> (= (ControlFlow 0 9) (- 0 11)) ($generated@@137 ($generated@@8 (- $generated@@676 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@676 1)) $generated@@134) (=> (and (= $generated@@677 (- $generated@@676 1)) ($generated@@76 ($generated@@8 $generated@@677) $generated@@134 $generated@@678)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (<= 0 $generated@@676) (= $generated@@677 $generated@@676))) (=> (or (<= 0 $generated@@676) (= $generated@@677 $generated@@676)) (=> (= (ControlFlow 0 9) (- 0 8)) (< $generated@@677 $generated@@676))))))))))
(let (($generated@@685  (=> (= ($generated@@371 $generated@@676 ($generated@@255 2)) ($generated@@255 0)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@137 ($generated@@8 (- $generated@@676 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@676 1)) $generated@@134) (=> (and (= $generated@@679 (- $generated@@676 1)) ($generated@@76 ($generated@@8 $generated@@679) $generated@@134 $generated@@678)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@676) (= $generated@@679 $generated@@676))) (=> (or (<= 0 $generated@@676) (= $generated@@679 $generated@@676)) (=> (= (ControlFlow 0 5) (- 0 4)) (< $generated@@679 $generated@@676))))))))))
(let (($generated@@686  (=> (not (= $generated@@676 ($generated@@255 0))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (not (= ($generated@@255 2) 0))) (=> (not (= ($generated@@255 2) 0)) (and (=> (= (ControlFlow 0 12) 5) $generated@@685) (=> (= (ControlFlow 0 12) 9) $generated@@684)))))))
(let (($generated@@687  (=> (and (= $generated@@676 ($generated@@255 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 ($generated@@8 ($generated@@255 0)) $generated@@134))))
(let (($generated@@688  (=> (= $generated@@680 ($generated@@216 $generated@@681 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 3) $generated@@687) (=> (= (ControlFlow 0 14) 12) $generated@@686)))))
(let (($generated@@689 true))
(let (($generated@@690  (=> (= $generated@@682 ($generated@@161 $generated@@681 $generated@@678 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@689) (=> (= (ControlFlow 0 15) 14) $generated@@688)))))
(let (($generated@@691  (=> (and (and (and ($generated@@261 $generated@@678) ($generated@@683 $generated@@678)) (<= ($generated@@255 0) $generated@@676)) (and (= 1 $generated@@362) (= (ControlFlow 0 16) 15))) $generated@@690)))
$generated@@691)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U Int) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@222 (T@T T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U T@U) T@U)
(declare-fun $generated@@362 (T@U Int) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U Int) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@574 (T@T) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@603 (T@U T@U) Bool)
(declare-fun $generated@@647 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert  (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ) (! (= (type ($generated@@220 $generated@@223 $generated@@224 $generated@@225)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@220 $generated@@223 $generated@@224 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@222 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@222 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Int) ($generated@@231 T@U) ) (!  (=> (and (and (= (type $generated@@228) $generated@@66) (= (type $generated@@229) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@231) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@220 $generated@@228 $generated@@229 $generated@@230) $generated@@231))  (and ($generated@@221 $generated@@231 $generated@@228) (and ($generated@@0 ($generated@@83 $generated@@229 $generated@@231)) (< ($generated ($generated@@222 $generated@@2 $generated@@231)) $generated@@230)))))
 :pattern ( ($generated@@83 ($generated@@220 $generated@@228 $generated@@229 $generated@@230) $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@145)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@66) (= (type $generated@@236) $generated@@66)) (= (type $generated@@237) $generated@@154)) (= (type $generated@@238) $generated@@154)) (= ($generated@@141 ($generated@@232 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236))  (and ($generated@@221 $generated@@237 $generated@@235) ($generated@@221 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@141 ($generated@@232 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) (= (type $generated@@240) $generated@@145)) (= ($generated@@151 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@151 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@66)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@244) $generated@@66)) (= ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@154) ($generated@@0 ($generated@@83 $generated@@243 $generated@@245))) ($generated@@221 $generated@@245 $generated@@244))
 :pattern ( ($generated@@83 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@221 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (and (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@257 $generated@@263 $generated@@264)) ($generated@@259 $generated@@265)))
 :pattern ( ($generated@@257 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@U) ) (! (= (type ($generated@@258 $generated@@266)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@259 $generated@@154)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@66)) (and ($generated@@141 $generated@@267 ($generated@@258 $generated@@269)) ($generated@@221 $generated@@268 $generated@@269))) ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
 :pattern ( ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) $generated@@66)) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@270 $generated@@276)) (= ($generated@@76 ($generated@@232 $generated@@274 $generated@@275) ($generated@@144 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@274 $generated@@275) ($generated@@144 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@145) (= ($generated@@143 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@145) ($generated@@143 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@154) (= (type $generated@@282) $generated@@154)) (= $generated@@280 ($generated@@232 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@283 $generated@@285)) ($generated@@259 $generated@@285))
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) 0)
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@141 $generated@@287 $generated@@138) (<= ($generated@@251 0) ($generated $generated@@287))))
 :pattern ( ($generated@@141 $generated@@287 $generated@@138))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@259 $generated@@290)) (= ($generated@@284 ($generated@@257 $generated@@288 $generated@@289)) (+ 1 ($generated@@284 $generated@@288)))))
 :pattern ( ($generated@@257 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@154)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@66) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@76 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@298) $generated@@154)) (= (type $generated@@299) $generated@@66)) ($generated@@134 $generated@@296 $generated@@297)) ($generated@@271 $generated@@298 $generated@@299 $generated@@296)) ($generated@@271 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@134 $generated@@296 $generated@@297) ($generated@@271 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@301) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@303) $generated@@66)) ($generated@@134 $generated@@300 $generated@@301)) ($generated@@76 $generated@@302 $generated@@303 $generated@@300)) ($generated@@76 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@134 $generated@@300 $generated@@301) ($generated@@76 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@78 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@81 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@78 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@83 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@78 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@81 (type $generated@@347))))
 (=> (and (= (type $generated@@347) ($generated@@78 $generated@@349 $generated@@4)) (= (type $generated@@348) ($generated@@78 $generated@@349 $generated@@4))) (= ($generated@@346 $generated@@347 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (= ($generated@@0 ($generated@@83 $generated@@347 $generated@@350)) ($generated@@0 ($generated@@83 $generated@@348 $generated@@350))))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@260 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) ($generated@@259 $generated@@354)))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@260 (type $generated@@355))))
 (=> (and (= (type $generated@@355) ($generated@@259 $generated@@357)) (= (type $generated@@356) ($generated@@259 $generated@@357))) (= ($generated@@284 ($generated@@351 $generated@@355 $generated@@356)) (+ ($generated@@284 $generated@@355) ($generated@@284 $generated@@356)))))
 :pattern ( ($generated@@284 ($generated@@351 $generated@@355 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@81 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@78 $generated@@359 $generated@@2)) (= ($generated@@160 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@83 $generated@@358 $generated@@360))) (<= ($generated ($generated@@83 $generated@@358 $generated@@360)) ($generated@@304 $generated@@358))))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@160 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@221 $generated@@361 $generated@@138)) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@361)) $generated@@361) ($generated@@141 ($generated@@222 $generated@@2 $generated@@361) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@361 $generated@@138))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (! (let (($generated@@365 ($generated@@260 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@365))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (=> (= (type $generated@@366) ($generated@@259 $generated@@369)) (and (=> (= $generated@@367 ($generated@@284 $generated@@366)) (= ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367) $generated@@368)) (=> (not (= $generated@@367 ($generated@@284 $generated@@366))) (= ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367) ($generated@@362 $generated@@366 $generated@@367))))))
 :pattern ( ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@314 (type $generated@@370))))
(let (($generated@@372 ($generated@@313 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@312 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@311 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@310 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@314 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@314 (type $generated@@377))))
(let (($generated@@379 ($generated@@313 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@312 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@311 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@83 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@332 (type $generated@@381))))
(let (($generated@@383 ($generated@@331 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@330 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@329 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@328 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@332 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@78 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@332 (type $generated@@388))))
(let (($generated@@390 ($generated@@331 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@330 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@329 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@83 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@393) $generated@@66)) (= ($generated@@141 $generated@@392 ($generated@@159 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@392 $generated@@394)))) ($generated@@221 $generated@@394 $generated@@393))
 :pattern ( ($generated@@83 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@141 $generated@@392 ($generated@@159 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@395 ($generated@@241 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 $generated@@395 $generated@@398))) ($generated@@271 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@83 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@395 ($generated@@241 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@246 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@83 $generated@@399 $generated@@402))) ($generated@@271 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@83 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@246 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@83 ($generated@@305 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@83 ($generated@@305 $generated@@404) $generated@@403)))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@314 (type $generated@@408))))
(let (($generated@@410 ($generated@@313 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@412) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@411) ($generated@@152 ($generated@@222 $generated@@145 $generated@@412)))) (= ($generated@@83 ($generated@@406 $generated@@411) ($generated@@152 ($generated@@222 $generated@@145 $generated@@412))) ($generated@@153 ($generated@@222 $generated@@145 $generated@@412))))))
 :pattern ( ($generated@@83 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@332 (type $generated@@416))))
(let (($generated@@418 ($generated@@331 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@419) ($generated@@152 ($generated@@222 $generated@@145 $generated@@420)))) (= ($generated@@83 ($generated@@414 $generated@@419) ($generated@@152 ($generated@@222 $generated@@145 $generated@@420))) ($generated@@153 ($generated@@222 $generated@@145 $generated@@420))))))
 :pattern ( ($generated@@83 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@83 ($generated@@374 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@83 ($generated@@406 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@421) $generated@@425))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@331 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@330 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@83 ($generated@@385 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@83 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@426) $generated@@430))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@66)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@435) $generated@@66)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@434) $generated@@438))) (and ($generated@@271 ($generated@@83 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@271 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@76 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@442) $generated@@446))) (and ($generated@@271 ($generated@@83 ($generated@@414 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@271 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@442) $generated@@446))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@76 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@81 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@78 $generated@@449 $generated@@4)) (= (type $generated@@448) ($generated@@78 $generated@@449 $generated@@4))) ($generated@@346 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@346 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 Int) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452 $generated@@453)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@457) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@450 $generated@@454 $generated@@455 $generated@@456) $generated@@457))  (and ($generated@@221 $generated@@457 $generated@@454) (and ($generated@@0 ($generated@@83 $generated@@455 $generated@@457)) (< $generated@@456 ($generated ($generated@@222 $generated@@2 $generated@@457)))))))
 :pattern ( ($generated@@83 ($generated@@450 $generated@@454 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@458) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@459) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@460) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@458 $generated@@460))) (and ($generated@@134 $generated@@458 $generated@@459) ($generated@@134 $generated@@459 $generated@@460))) ($generated@@134 $generated@@458 $generated@@460))
 :pattern ( ($generated@@134 $generated@@458 $generated@@459) ($generated@@134 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@332 (type $generated@@463))))
(let (($generated@@465 ($generated@@331 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@330 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@329 $generated@@465 $generated@@464)) (= ($generated@@328 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@328 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@332 (type $generated@@466))))
(let (($generated@@468 ($generated@@331 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@330 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@329 $generated@@468 $generated@@467)) (= ($generated@@385 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@385 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@332 (type $generated@@469))))
(let (($generated@@471 ($generated@@331 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@330 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@329 $generated@@471 $generated@@470)) (= ($generated@@413 $generated@@469) ($generated@@461 $generated@@154))))))
 :pattern ( ($generated@@413 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@314 (type $generated@@472))))
(let (($generated@@474 ($generated@@313 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@312 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@311 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@154) (= (type $generated@@476) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@405 $generated@@472) ($generated@@291 ($generated@@232 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@405 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@332 (type $generated@@477))))
(let (($generated@@479 ($generated@@331 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@330 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@329 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@154) (= (type $generated@@481) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@413 $generated@@477) ($generated@@291 ($generated@@232 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@413 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@154) ($generated@@221 $generated@@482 $generated@@46)) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@482)) $generated@@482) ($generated@@141 ($generated@@222 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@221 $generated@@483 $generated@@47)) (and (= ($generated@@291 ($generated@@222 $generated@@3 $generated@@483)) $generated@@483) ($generated@@141 ($generated@@222 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@154) ($generated@@221 $generated@@484 $generated@@44)) (and (= ($generated@@291 ($generated@@222 $generated@@4 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@222 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) ($generated@@221 $generated@@486 $generated@@45)) (and (= ($generated@@291 ($generated@@222 $generated@@485 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@222 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@221 ($generated@@291 $generated@@487) $generated@@488) ($generated@@141 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@221 ($generated@@291 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@81 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@78 $generated@@490 $generated@@2)) (<= 0 ($generated@@304 $generated@@489))))
 :pattern ( ($generated@@304 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@260 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@259 $generated@@492)) (<= 0 ($generated@@284 $generated@@491))))
 :pattern ( ($generated@@284 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@493 ($generated@@431 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@431 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@66) (= (type $generated@@500) $generated@@66)) (= ($generated@@497 ($generated@@431 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@431 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@74 ($generated@@431 $generated@@501 $generated@@502)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@439 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@439 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@439 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@439 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@74 ($generated@@439 $generated@@511 $generated@@512)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) (= (type $generated@@514) $generated@@154)) (= ($generated@@277 ($generated@@232 $generated@@513 $generated@@514)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= ($generated@@515 ($generated@@144 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@144 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@519 ($generated@@144 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@144 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@154)) (= ($generated@@152 ($generated@@232 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@232 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@154)) (= ($generated@@153 ($generated@@232 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@232 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@259 $generated@@154)) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@527 ($generated@@258 $generated@@528) $generated@@529) (forall (($generated@@530 Int) ) (!  (=> (and (<= 0 $generated@@530) (< $generated@@530 ($generated@@284 $generated@@527))) ($generated@@271 ($generated@@362 $generated@@527 $generated@@530) $generated@@528 $generated@@529))
 :pattern ( ($generated@@362 $generated@@527 $generated@@530))
))))
 :pattern ( ($generated@@76 $generated@@527 ($generated@@258 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@531 ($generated@@77 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@77 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@241 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@241 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@241 $generated@@536)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@537 ($generated@@246 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@246 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@540)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@541 ($generated@@159 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@159 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@544)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@545 ($generated@@258 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@258 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@74 ($generated@@258 $generated@@548)) $generated@@57))
 :pattern ( ($generated@@258 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@222 $generated@@550 ($generated@@291 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@291 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@66)) (= ($generated@@141 $generated@@551 ($generated@@431 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@551) $generated@@554))) (and ($generated@@221 ($generated@@83 ($generated@@406 $generated@@551) $generated@@554) $generated@@553) ($generated@@221 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@551) $generated@@554))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@141 $generated@@551 ($generated@@431 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@66)) (= ($generated@@141 $generated@@555 ($generated@@439 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@555) $generated@@558))) (and ($generated@@221 ($generated@@83 ($generated@@414 $generated@@555) $generated@@558) $generated@@557) ($generated@@221 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@555) $generated@@558))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@141 $generated@@555 ($generated@@439 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@232 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@232 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@431 $generated@@566 $generated@@567))) (and (= ($generated@@291 ($generated@@222 ($generated@@312 $generated@@154 $generated@@154) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@222 ($generated@@312 $generated@@154 $generated@@154) $generated@@565) ($generated@@431 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@431 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@221 $generated@@568 ($generated@@439 $generated@@569 $generated@@570))) (and (= ($generated@@291 ($generated@@222 ($generated@@330 $generated@@154 $generated@@154) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@222 ($generated@@330 $generated@@154 $generated@@154) $generated@@568) ($generated@@439 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@221 $generated@@568 ($generated@@439 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@66) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@154)) ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572))) (and (= ($generated@@291 ($generated@@222 $generated@@145 $generated@@573)) $generated@@573) ($generated@@141 ($generated@@222 $generated@@145 $generated@@573) ($generated@@144 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@575 T@T) ) (! (= (type ($generated@@574 $generated@@575)) ($generated@@78 $generated@@575 $generated@@4))
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@83 ($generated@@574 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@83 ($generated@@574 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@83 ($generated@@461 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@83 ($generated@@461 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@71)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@66) (= (type $generated@@583) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@582 $generated@@583)) $generated@@63) (= ($generated@@580 ($generated@@144 $generated@@582 $generated@@583)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@582 $generated@@583))
)))
(assert  (and (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@260 (type $generated@@586))))
(= (type ($generated@@584 $generated@@586)) ($generated@@259 $generated@@587)))
 :pattern ( ($generated@@584 $generated@@586))
)) (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@260 (type $generated@@588))))
(= (type ($generated@@585 $generated@@588)) $generated@@589))
 :pattern ( ($generated@@585 $generated@@588))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@259 $generated@@592)) (and (= ($generated@@584 ($generated@@257 $generated@@590 $generated@@591)) $generated@@590) (= ($generated@@585 ($generated@@257 $generated@@590 $generated@@591)) $generated@@591))))
 :pattern ( ($generated@@257 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@145) (= ($generated@@559 ($generated@@291 $generated@@593)) ($generated@@560 $generated@@593)))
 :pattern ( ($generated@@559 ($generated@@291 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) ($generated@@221 $generated@@594 ($generated@@77 0))) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@594)) $generated@@594) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@594) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@594 ($generated@@77 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@154) (= (type $generated@@596) $generated@@66)) ($generated@@221 $generated@@595 ($generated@@241 $generated@@596))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@595)) $generated@@595) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@595) ($generated@@241 $generated@@596))))
 :pattern ( ($generated@@221 $generated@@595 ($generated@@241 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@154) (= (type $generated@@598) $generated@@66)) ($generated@@221 $generated@@597 ($generated@@246 $generated@@598))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@597)) $generated@@597) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@597) ($generated@@246 $generated@@598))))
 :pattern ( ($generated@@221 $generated@@597 ($generated@@246 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@154) (= (type $generated@@600) $generated@@66)) ($generated@@221 $generated@@599 ($generated@@159 $generated@@600))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@2) $generated@@599)) $generated@@599) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@2) $generated@@599) ($generated@@159 $generated@@600))))
 :pattern ( ($generated@@221 $generated@@599 ($generated@@159 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@154) (= (type $generated@@602) $generated@@66)) ($generated@@221 $generated@@601 ($generated@@258 $generated@@602))) (and (= ($generated@@291 ($generated@@222 ($generated@@259 $generated@@154) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@222 ($generated@@259 $generated@@154) $generated@@601) ($generated@@258 $generated@@602))))
 :pattern ( ($generated@@221 $generated@@601 ($generated@@258 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@81 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@78 $generated@@606 $generated@@4)) (= (type $generated@@605) ($generated@@78 $generated@@606 $generated@@4))) (= ($generated@@603 $generated@@604 $generated@@605) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@606) ($generated@@0 ($generated@@83 $generated@@604 $generated@@607))) ($generated@@0 ($generated@@83 $generated@@605 $generated@@607)))
 :pattern ( ($generated@@83 $generated@@604 $generated@@607))
 :pattern ( ($generated@@83 $generated@@605 $generated@@607))
)))))
 :pattern ( ($generated@@603 $generated@@604 $generated@@605))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@580 $generated@@138) $generated@@64))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@608 ($generated@@159 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@608 $generated@@611)))) ($generated@@271 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@83 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@76 $generated@@608 ($generated@@159 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@145) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@614) (and ($generated@@143 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@66) ($generated@@76 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@76 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@271 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@271 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@145) (= (type $generated@@617) $generated@@66)) (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@618) (and ($generated@@143 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@66) ($generated@@76 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@76 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@271 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@271 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 Int) ) (! (let (($generated@@623 ($generated@@260 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@259 $generated@@623)) (= (type $generated@@621) ($generated@@259 $generated@@623))) (and (=> (< $generated@@622 ($generated@@284 $generated@@620)) (= ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622) ($generated@@362 $generated@@620 $generated@@622))) (=> (<= ($generated@@284 $generated@@620) $generated@@622) (= ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622) ($generated@@362 $generated@@621 (- $generated@@622 ($generated@@284 $generated@@620))))))))
 :pattern ( ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@154) (= (type $generated@@625) $generated@@154)) (= ($generated@@232 ($generated@@253 $generated@@624) ($generated@@253 $generated@@625)) ($generated@@253 ($generated@@232 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@232 ($generated@@253 $generated@@624) ($generated@@253 $generated@@625)))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@251 $generated@@626))) ($generated@@253 ($generated@@291 ($generated@@8 $generated@@626))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@251 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@291 ($generated@@253 $generated@@627)) ($generated@@253 ($generated@@291 $generated@@627)))
 :pattern ( ($generated@@291 ($generated@@253 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@260 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@259 $generated@@629)) (= ($generated@@284 $generated@@628) 0)) (= $generated@@628 ($generated@@283 $generated@@629))))
 :pattern ( ($generated@@284 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@78 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@304 ($generated@@84 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@304 $generated@@630) ($generated ($generated@@83 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@304 ($generated@@84 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@635) $generated@@2)) ($generated@@76 $generated@@635 $generated@@46 $generated@@634))
 :pattern ( ($generated@@76 $generated@@635 $generated@@46 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@637) $generated@@3)) ($generated@@76 $generated@@637 $generated@@47 $generated@@636))
 :pattern ( ($generated@@76 $generated@@637 $generated@@47 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@639) $generated@@4)) ($generated@@76 $generated@@639 $generated@@44 $generated@@638))
 :pattern ( ($generated@@76 $generated@@639 $generated@@44 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@641) $generated@@485)) ($generated@@76 $generated@@641 $generated@@45 $generated@@640))
 :pattern ( ($generated@@76 $generated@@641 $generated@@45 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@643) $generated@@154)) ($generated@@76 $generated@@643 $generated@@48 $generated@@642))
 :pattern ( ($generated@@76 $generated@@643 $generated@@48 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@259 $generated@@154)) (= (type $generated@@645) $generated@@66)) (= ($generated@@141 $generated@@644 ($generated@@258 $generated@@645)) (forall (($generated@@646 Int) ) (!  (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@284 $generated@@644))) ($generated@@221 ($generated@@362 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@362 $generated@@644 $generated@@646))
))))
 :pattern ( ($generated@@141 $generated@@644 ($generated@@258 $generated@@645)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 Int) ) (!  (=> (= (type $generated@@648) ($generated@@259 $generated@@154)) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@284 $generated@@648))) (< ($generated@@560 ($generated@@222 $generated@@145 ($generated@@362 $generated@@648 $generated@@649))) ($generated@@647 $generated@@648))))
 :pattern ( ($generated@@560 ($generated@@222 $generated@@145 ($generated@@362 $generated@@648 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@651) $generated@@66)) (= (type $generated@@652) $generated@@66)) ($generated@@141 $generated@@650 ($generated@@431 $generated@@651 $generated@@652))) (and (and ($generated@@141 ($generated@@310 $generated@@650) ($generated@@241 $generated@@651)) ($generated@@141 ($generated@@374 $generated@@650) ($generated@@241 $generated@@652))) ($generated@@141 ($generated@@405 $generated@@650) ($generated@@241 ($generated@@144 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@141 $generated@@650 ($generated@@431 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@654) $generated@@66)) (= (type $generated@@655) $generated@@66)) ($generated@@141 $generated@@653 ($generated@@439 $generated@@654 $generated@@655))) (and (and ($generated@@141 ($generated@@328 $generated@@653) ($generated@@246 $generated@@654)) ($generated@@141 ($generated@@385 $generated@@653) ($generated@@246 $generated@@655))) ($generated@@141 ($generated@@413 $generated@@653) ($generated@@246 ($generated@@144 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@141 $generated@@653 ($generated@@439 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@2) ($generated@@141 $generated@@656 $generated@@46))
 :pattern ( ($generated@@141 $generated@@656 $generated@@46))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@3) ($generated@@141 $generated@@657 $generated@@47))
 :pattern ( ($generated@@141 $generated@@657 $generated@@47))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@4) ($generated@@141 $generated@@658 $generated@@44))
 :pattern ( ($generated@@141 $generated@@658 $generated@@44))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@485) ($generated@@141 $generated@@659 $generated@@45))
 :pattern ( ($generated@@141 $generated@@659 $generated@@45))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@154) ($generated@@141 $generated@@660 $generated@@48))
 :pattern ( ($generated@@141 $generated@@660 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@661) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@662) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@664) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@665) ($generated@@259 $generated@@154))) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@667) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@669) ($generated@@259 $generated@@154))) (= (type $generated@@670) $generated@@79)) (= (type $generated@@674) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@675) ($generated@@259 $generated@@154))) (= (type $generated@@677) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@678) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@679) ($generated@@259 $generated@@154))) (= (type $generated@@680) ($generated@@259 $generated@@154))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@682  (=> (= $generated@@661 ($generated@@450 $generated@@138 $generated@@662 $generated@@663)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and ($generated@@603 $generated@@664 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@664)))) (=> (and ($generated@@603 $generated@@664 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@664))) (=> (and (and ($generated@@141 $generated@@665 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@665 ($generated@@258 $generated@@138) $generated@@666)) (and ($generated@@270 $generated@@667) ($generated@@668 $generated@@667))) (=> (and (and (and ($generated@@141 $generated@@669 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@669 ($generated@@258 $generated@@138) $generated@@667)) (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@79) (=> (and (not (= $generated@@683 $generated@@670)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@666 $generated@@683) $generated@@60))) (= ($generated@@83 $generated@@667 $generated@@683) ($generated@@83 $generated@@666 $generated@@683))))
 :pattern ( ($generated@@83 $generated@@667 $generated@@683))
))) (and ($generated@@134 $generated@@666 $generated@@667) (= (ControlFlow 0 3) (- 0 2)))) (and ($generated@@603 $generated@@661 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@661))))))))))
(let (($generated@@684  (=> (and (not (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (< $generated@@663 $generated@@671))) (= (ControlFlow 0 7) 3)) $generated@@682)))
(let (($generated@@685  (=> (and (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (< $generated@@663 $generated@@671)) (= (ControlFlow 0 6) 3)) $generated@@682)))
(let (($generated@@686  (=> (not ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671))))) (and (=> (= (ControlFlow 0 9) 6) $generated@@685) (=> (= (ControlFlow 0 9) 7) $generated@@684)))))
(let (($generated@@687  (=> ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@685) (=> (= (ControlFlow 0 8) 7) $generated@@684)))))
(let (($generated@@688  (=> (<= ($generated@@251 0) $generated@@671) (and (=> (= (ControlFlow 0 10) 8) $generated@@687) (=> (= (ControlFlow 0 10) 9) $generated@@686)))))
(let (($generated@@689  (=> (and (< $generated@@671 ($generated@@251 0)) (= (ControlFlow 0 5) 3)) $generated@@682)))
(let (($generated@@690  (=> (= $generated@@664 ($generated@@220 $generated@@138 $generated@@662 $generated@@663)) (and (=> (= (ControlFlow 0 11) 10) $generated@@688) (=> (= (ControlFlow 0 11) 5) $generated@@689)))))
(let (($generated@@691  (=> (and (not (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (< $generated@@672 $generated@@663))) (= (ControlFlow 0 14) 11)) $generated@@690)))
(let (($generated@@692  (=> (and (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (< $generated@@672 $generated@@663)) (= (ControlFlow 0 13) 11)) $generated@@690)))
(let (($generated@@693  (=> (not ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672))))) (and (=> (= (ControlFlow 0 16) 13) $generated@@692) (=> (= (ControlFlow 0 16) 14) $generated@@691)))))
(let (($generated@@694  (=> ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (and (=> (= (ControlFlow 0 15) 13) $generated@@692) (=> (= (ControlFlow 0 15) 14) $generated@@691)))))
(let (($generated@@695  (=> (<= ($generated@@251 0) $generated@@672) (and (=> (= (ControlFlow 0 17) 15) $generated@@694) (=> (= (ControlFlow 0 17) 16) $generated@@693)))))
(let (($generated@@696  (=> (and (< $generated@@672 ($generated@@251 0)) (= (ControlFlow 0 12) 11)) $generated@@690)))
(let (($generated@@697  (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (exists (($generated@@698 T@U) ) (!  (and (= (type $generated@@698) $generated@@2) (and (<= ($generated@@251 0) ($generated $generated@@698)) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 $generated@@698)))))
 :no-pattern (type $generated@@698)
 :no-pattern ($generated $generated@@698)
 :no-pattern ($generated@@0 $generated@@698)
))))) (=> (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (exists (($generated@@699 Int) )  (and (<= ($generated@@251 0) $generated@@699) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@699)))))))) (=> (and (<= ($generated@@251 0) $generated@@663) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@663))))) (and (=> (= (ControlFlow 0 18) 17) $generated@@695) (=> (= (ControlFlow 0 18) 12) $generated@@696)))))))
(let (($generated@@700  (=> (and (< $generated@@673 ($generated@@251 0)) (= (ControlFlow 0 21) 18)) $generated@@697)))
(let (($generated@@701  (=> (and (<= ($generated@@251 0) $generated@@673) (= (ControlFlow 0 20) 18)) $generated@@697)))
(let (($generated@@702  (=> (not ($generated@@346 $generated@@662 ($generated@@574 $generated@@154))) (and (=> (= (ControlFlow 0 22) 20) $generated@@701) (=> (= (ControlFlow 0 22) 21) $generated@@700)))))
(let (($generated@@703 true))
(let (($generated@@704  (=> (= $generated@@674 ($generated@@165 $generated@@670 $generated@@666 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) 1) $generated@@703) (=> (= (ControlFlow 0 23) 22) $generated@@702)))))
(let (($generated@@705  (=> (and (and ($generated@@270 $generated@@666) ($generated@@668 $generated@@666)) (and ($generated@@141 $generated@@662 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@662 ($generated@@241 $generated@@138) $generated@@666))) (=> (and (and (and ($generated@@141 $generated@@675 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@675 ($generated@@258 $generated@@138) $generated@@666)) (and (<= ($generated@@251 0) $generated@@676) true)) (and (and ($generated@@141 $generated@@677 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@677 ($generated@@241 $generated@@138) $generated@@666)) true)) (=> (and (and (and (and ($generated@@141 $generated@@678 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@678 ($generated@@241 $generated@@138) $generated@@666)) true) (and (and ($generated@@141 $generated@@679 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@679 ($generated@@258 $generated@@138) $generated@@666)) true)) (and (and (and ($generated@@141 $generated@@680 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@680 ($generated@@258 $generated@@138) $generated@@666)) true) (and (= 1 $generated@@681) (= (ControlFlow 0 24) 23)))) $generated@@704)))))
$generated@@705))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U Int) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@222 (T@T T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U T@U) T@U)
(declare-fun $generated@@362 (T@U Int) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U Int) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@574 (T@T) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@603 (T@U T@U) Bool)
(declare-fun $generated@@647 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert  (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ) (! (= (type ($generated@@220 $generated@@223 $generated@@224 $generated@@225)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@220 $generated@@223 $generated@@224 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@222 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@222 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Int) ($generated@@231 T@U) ) (!  (=> (and (and (= (type $generated@@228) $generated@@66) (= (type $generated@@229) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@231) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@220 $generated@@228 $generated@@229 $generated@@230) $generated@@231))  (and ($generated@@221 $generated@@231 $generated@@228) (and ($generated@@0 ($generated@@83 $generated@@229 $generated@@231)) (< ($generated ($generated@@222 $generated@@2 $generated@@231)) $generated@@230)))))
 :pattern ( ($generated@@83 ($generated@@220 $generated@@228 $generated@@229 $generated@@230) $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@145)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@66) (= (type $generated@@236) $generated@@66)) (= (type $generated@@237) $generated@@154)) (= (type $generated@@238) $generated@@154)) (= ($generated@@141 ($generated@@232 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236))  (and ($generated@@221 $generated@@237 $generated@@235) ($generated@@221 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@141 ($generated@@232 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) (= (type $generated@@240) $generated@@145)) (= ($generated@@151 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@151 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@66)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@244) $generated@@66)) (= ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@154) ($generated@@0 ($generated@@83 $generated@@243 $generated@@245))) ($generated@@221 $generated@@245 $generated@@244))
 :pattern ( ($generated@@83 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@221 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (and (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@257 $generated@@263 $generated@@264)) ($generated@@259 $generated@@265)))
 :pattern ( ($generated@@257 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@U) ) (! (= (type ($generated@@258 $generated@@266)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@259 $generated@@154)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@66)) (and ($generated@@141 $generated@@267 ($generated@@258 $generated@@269)) ($generated@@221 $generated@@268 $generated@@269))) ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
 :pattern ( ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) $generated@@66)) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@270 $generated@@276)) (= ($generated@@76 ($generated@@232 $generated@@274 $generated@@275) ($generated@@144 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@274 $generated@@275) ($generated@@144 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@145) (= ($generated@@143 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@145) ($generated@@143 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@154) (= (type $generated@@282) $generated@@154)) (= $generated@@280 ($generated@@232 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@283 $generated@@285)) ($generated@@259 $generated@@285))
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) 0)
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@141 $generated@@287 $generated@@138) (<= ($generated@@251 0) ($generated $generated@@287))))
 :pattern ( ($generated@@141 $generated@@287 $generated@@138))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@259 $generated@@290)) (= ($generated@@284 ($generated@@257 $generated@@288 $generated@@289)) (+ 1 ($generated@@284 $generated@@288)))))
 :pattern ( ($generated@@257 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@154)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@66) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@76 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@298) $generated@@154)) (= (type $generated@@299) $generated@@66)) ($generated@@134 $generated@@296 $generated@@297)) ($generated@@271 $generated@@298 $generated@@299 $generated@@296)) ($generated@@271 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@134 $generated@@296 $generated@@297) ($generated@@271 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@301) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@303) $generated@@66)) ($generated@@134 $generated@@300 $generated@@301)) ($generated@@76 $generated@@302 $generated@@303 $generated@@300)) ($generated@@76 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@134 $generated@@300 $generated@@301) ($generated@@76 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@78 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@81 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@78 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@83 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@78 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@81 (type $generated@@347))))
 (=> (and (= (type $generated@@347) ($generated@@78 $generated@@349 $generated@@4)) (= (type $generated@@348) ($generated@@78 $generated@@349 $generated@@4))) (= ($generated@@346 $generated@@347 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (= ($generated@@0 ($generated@@83 $generated@@347 $generated@@350)) ($generated@@0 ($generated@@83 $generated@@348 $generated@@350))))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@260 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) ($generated@@259 $generated@@354)))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@260 (type $generated@@355))))
 (=> (and (= (type $generated@@355) ($generated@@259 $generated@@357)) (= (type $generated@@356) ($generated@@259 $generated@@357))) (= ($generated@@284 ($generated@@351 $generated@@355 $generated@@356)) (+ ($generated@@284 $generated@@355) ($generated@@284 $generated@@356)))))
 :pattern ( ($generated@@284 ($generated@@351 $generated@@355 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@81 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@78 $generated@@359 $generated@@2)) (= ($generated@@160 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@83 $generated@@358 $generated@@360))) (<= ($generated ($generated@@83 $generated@@358 $generated@@360)) ($generated@@304 $generated@@358))))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@160 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@221 $generated@@361 $generated@@138)) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@361)) $generated@@361) ($generated@@141 ($generated@@222 $generated@@2 $generated@@361) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@361 $generated@@138))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (! (let (($generated@@365 ($generated@@260 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@365))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (=> (= (type $generated@@366) ($generated@@259 $generated@@369)) (and (=> (= $generated@@367 ($generated@@284 $generated@@366)) (= ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367) $generated@@368)) (=> (not (= $generated@@367 ($generated@@284 $generated@@366))) (= ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367) ($generated@@362 $generated@@366 $generated@@367))))))
 :pattern ( ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@314 (type $generated@@370))))
(let (($generated@@372 ($generated@@313 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@312 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@311 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@310 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@314 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@314 (type $generated@@377))))
(let (($generated@@379 ($generated@@313 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@312 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@311 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@83 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@332 (type $generated@@381))))
(let (($generated@@383 ($generated@@331 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@330 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@329 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@328 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@332 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@78 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@332 (type $generated@@388))))
(let (($generated@@390 ($generated@@331 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@330 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@329 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@83 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@393) $generated@@66)) (= ($generated@@141 $generated@@392 ($generated@@159 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@392 $generated@@394)))) ($generated@@221 $generated@@394 $generated@@393))
 :pattern ( ($generated@@83 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@141 $generated@@392 ($generated@@159 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@395 ($generated@@241 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 $generated@@395 $generated@@398))) ($generated@@271 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@83 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@395 ($generated@@241 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@246 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@83 $generated@@399 $generated@@402))) ($generated@@271 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@83 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@246 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@83 ($generated@@305 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@83 ($generated@@305 $generated@@404) $generated@@403)))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@314 (type $generated@@408))))
(let (($generated@@410 ($generated@@313 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@412) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@411) ($generated@@152 ($generated@@222 $generated@@145 $generated@@412)))) (= ($generated@@83 ($generated@@406 $generated@@411) ($generated@@152 ($generated@@222 $generated@@145 $generated@@412))) ($generated@@153 ($generated@@222 $generated@@145 $generated@@412))))))
 :pattern ( ($generated@@83 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@332 (type $generated@@416))))
(let (($generated@@418 ($generated@@331 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@419) ($generated@@152 ($generated@@222 $generated@@145 $generated@@420)))) (= ($generated@@83 ($generated@@414 $generated@@419) ($generated@@152 ($generated@@222 $generated@@145 $generated@@420))) ($generated@@153 ($generated@@222 $generated@@145 $generated@@420))))))
 :pattern ( ($generated@@83 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@83 ($generated@@374 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@83 ($generated@@406 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@421) $generated@@425))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@331 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@330 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@83 ($generated@@385 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@83 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@426) $generated@@430))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@66)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@435) $generated@@66)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@434) $generated@@438))) (and ($generated@@271 ($generated@@83 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@271 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@76 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@442) $generated@@446))) (and ($generated@@271 ($generated@@83 ($generated@@414 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@271 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@442) $generated@@446))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@76 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@81 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@78 $generated@@449 $generated@@4)) (= (type $generated@@448) ($generated@@78 $generated@@449 $generated@@4))) ($generated@@346 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@346 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 Int) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452 $generated@@453)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@457) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@450 $generated@@454 $generated@@455 $generated@@456) $generated@@457))  (and ($generated@@221 $generated@@457 $generated@@454) (and ($generated@@0 ($generated@@83 $generated@@455 $generated@@457)) (< $generated@@456 ($generated ($generated@@222 $generated@@2 $generated@@457)))))))
 :pattern ( ($generated@@83 ($generated@@450 $generated@@454 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@458) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@459) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@460) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@458 $generated@@460))) (and ($generated@@134 $generated@@458 $generated@@459) ($generated@@134 $generated@@459 $generated@@460))) ($generated@@134 $generated@@458 $generated@@460))
 :pattern ( ($generated@@134 $generated@@458 $generated@@459) ($generated@@134 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@332 (type $generated@@463))))
(let (($generated@@465 ($generated@@331 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@330 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@329 $generated@@465 $generated@@464)) (= ($generated@@328 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@328 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@332 (type $generated@@466))))
(let (($generated@@468 ($generated@@331 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@330 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@329 $generated@@468 $generated@@467)) (= ($generated@@385 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@385 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@332 (type $generated@@469))))
(let (($generated@@471 ($generated@@331 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@330 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@329 $generated@@471 $generated@@470)) (= ($generated@@413 $generated@@469) ($generated@@461 $generated@@154))))))
 :pattern ( ($generated@@413 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@314 (type $generated@@472))))
(let (($generated@@474 ($generated@@313 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@312 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@311 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@154) (= (type $generated@@476) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@405 $generated@@472) ($generated@@291 ($generated@@232 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@405 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@332 (type $generated@@477))))
(let (($generated@@479 ($generated@@331 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@330 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@329 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@154) (= (type $generated@@481) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@413 $generated@@477) ($generated@@291 ($generated@@232 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@413 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@154) ($generated@@221 $generated@@482 $generated@@46)) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@482)) $generated@@482) ($generated@@141 ($generated@@222 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@221 $generated@@483 $generated@@47)) (and (= ($generated@@291 ($generated@@222 $generated@@3 $generated@@483)) $generated@@483) ($generated@@141 ($generated@@222 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@154) ($generated@@221 $generated@@484 $generated@@44)) (and (= ($generated@@291 ($generated@@222 $generated@@4 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@222 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) ($generated@@221 $generated@@486 $generated@@45)) (and (= ($generated@@291 ($generated@@222 $generated@@485 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@222 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@221 ($generated@@291 $generated@@487) $generated@@488) ($generated@@141 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@221 ($generated@@291 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@81 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@78 $generated@@490 $generated@@2)) (<= 0 ($generated@@304 $generated@@489))))
 :pattern ( ($generated@@304 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@260 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@259 $generated@@492)) (<= 0 ($generated@@284 $generated@@491))))
 :pattern ( ($generated@@284 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@493 ($generated@@431 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@431 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@66) (= (type $generated@@500) $generated@@66)) (= ($generated@@497 ($generated@@431 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@431 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@74 ($generated@@431 $generated@@501 $generated@@502)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@439 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@439 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@439 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@439 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@74 ($generated@@439 $generated@@511 $generated@@512)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) (= (type $generated@@514) $generated@@154)) (= ($generated@@277 ($generated@@232 $generated@@513 $generated@@514)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= ($generated@@515 ($generated@@144 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@144 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@519 ($generated@@144 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@144 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@154)) (= ($generated@@152 ($generated@@232 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@232 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@154)) (= ($generated@@153 ($generated@@232 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@232 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@259 $generated@@154)) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@527 ($generated@@258 $generated@@528) $generated@@529) (forall (($generated@@530 Int) ) (!  (=> (and (<= 0 $generated@@530) (< $generated@@530 ($generated@@284 $generated@@527))) ($generated@@271 ($generated@@362 $generated@@527 $generated@@530) $generated@@528 $generated@@529))
 :pattern ( ($generated@@362 $generated@@527 $generated@@530))
))))
 :pattern ( ($generated@@76 $generated@@527 ($generated@@258 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@531 ($generated@@77 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@77 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@241 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@241 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@241 $generated@@536)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@537 ($generated@@246 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@246 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@540)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@541 ($generated@@159 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@159 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@544)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@545 ($generated@@258 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@258 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@74 ($generated@@258 $generated@@548)) $generated@@57))
 :pattern ( ($generated@@258 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@222 $generated@@550 ($generated@@291 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@291 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@66)) (= ($generated@@141 $generated@@551 ($generated@@431 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@551) $generated@@554))) (and ($generated@@221 ($generated@@83 ($generated@@406 $generated@@551) $generated@@554) $generated@@553) ($generated@@221 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@551) $generated@@554))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@141 $generated@@551 ($generated@@431 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@66)) (= ($generated@@141 $generated@@555 ($generated@@439 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@555) $generated@@558))) (and ($generated@@221 ($generated@@83 ($generated@@414 $generated@@555) $generated@@558) $generated@@557) ($generated@@221 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@555) $generated@@558))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@141 $generated@@555 ($generated@@439 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@232 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@232 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@431 $generated@@566 $generated@@567))) (and (= ($generated@@291 ($generated@@222 ($generated@@312 $generated@@154 $generated@@154) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@222 ($generated@@312 $generated@@154 $generated@@154) $generated@@565) ($generated@@431 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@431 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@221 $generated@@568 ($generated@@439 $generated@@569 $generated@@570))) (and (= ($generated@@291 ($generated@@222 ($generated@@330 $generated@@154 $generated@@154) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@222 ($generated@@330 $generated@@154 $generated@@154) $generated@@568) ($generated@@439 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@221 $generated@@568 ($generated@@439 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@66) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@154)) ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572))) (and (= ($generated@@291 ($generated@@222 $generated@@145 $generated@@573)) $generated@@573) ($generated@@141 ($generated@@222 $generated@@145 $generated@@573) ($generated@@144 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@575 T@T) ) (! (= (type ($generated@@574 $generated@@575)) ($generated@@78 $generated@@575 $generated@@4))
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@83 ($generated@@574 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@83 ($generated@@574 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@83 ($generated@@461 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@83 ($generated@@461 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@71)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@66) (= (type $generated@@583) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@582 $generated@@583)) $generated@@63) (= ($generated@@580 ($generated@@144 $generated@@582 $generated@@583)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@582 $generated@@583))
)))
(assert  (and (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@260 (type $generated@@586))))
(= (type ($generated@@584 $generated@@586)) ($generated@@259 $generated@@587)))
 :pattern ( ($generated@@584 $generated@@586))
)) (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@260 (type $generated@@588))))
(= (type ($generated@@585 $generated@@588)) $generated@@589))
 :pattern ( ($generated@@585 $generated@@588))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@259 $generated@@592)) (and (= ($generated@@584 ($generated@@257 $generated@@590 $generated@@591)) $generated@@590) (= ($generated@@585 ($generated@@257 $generated@@590 $generated@@591)) $generated@@591))))
 :pattern ( ($generated@@257 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@145) (= ($generated@@559 ($generated@@291 $generated@@593)) ($generated@@560 $generated@@593)))
 :pattern ( ($generated@@559 ($generated@@291 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) ($generated@@221 $generated@@594 ($generated@@77 0))) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@594)) $generated@@594) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@594) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@594 ($generated@@77 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@154) (= (type $generated@@596) $generated@@66)) ($generated@@221 $generated@@595 ($generated@@241 $generated@@596))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@595)) $generated@@595) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@595) ($generated@@241 $generated@@596))))
 :pattern ( ($generated@@221 $generated@@595 ($generated@@241 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@154) (= (type $generated@@598) $generated@@66)) ($generated@@221 $generated@@597 ($generated@@246 $generated@@598))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@597)) $generated@@597) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@597) ($generated@@246 $generated@@598))))
 :pattern ( ($generated@@221 $generated@@597 ($generated@@246 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@154) (= (type $generated@@600) $generated@@66)) ($generated@@221 $generated@@599 ($generated@@159 $generated@@600))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@2) $generated@@599)) $generated@@599) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@2) $generated@@599) ($generated@@159 $generated@@600))))
 :pattern ( ($generated@@221 $generated@@599 ($generated@@159 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@154) (= (type $generated@@602) $generated@@66)) ($generated@@221 $generated@@601 ($generated@@258 $generated@@602))) (and (= ($generated@@291 ($generated@@222 ($generated@@259 $generated@@154) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@222 ($generated@@259 $generated@@154) $generated@@601) ($generated@@258 $generated@@602))))
 :pattern ( ($generated@@221 $generated@@601 ($generated@@258 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@81 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@78 $generated@@606 $generated@@4)) (= (type $generated@@605) ($generated@@78 $generated@@606 $generated@@4))) (= ($generated@@603 $generated@@604 $generated@@605) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@606) ($generated@@0 ($generated@@83 $generated@@604 $generated@@607))) ($generated@@0 ($generated@@83 $generated@@605 $generated@@607)))
 :pattern ( ($generated@@83 $generated@@604 $generated@@607))
 :pattern ( ($generated@@83 $generated@@605 $generated@@607))
)))))
 :pattern ( ($generated@@603 $generated@@604 $generated@@605))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@580 $generated@@138) $generated@@64))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@608 ($generated@@159 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@608 $generated@@611)))) ($generated@@271 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@83 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@76 $generated@@608 ($generated@@159 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@145) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@614) (and ($generated@@143 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@66) ($generated@@76 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@76 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@271 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@271 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@145) (= (type $generated@@617) $generated@@66)) (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@618) (and ($generated@@143 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@66) ($generated@@76 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@76 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@271 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@271 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 Int) ) (! (let (($generated@@623 ($generated@@260 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@259 $generated@@623)) (= (type $generated@@621) ($generated@@259 $generated@@623))) (and (=> (< $generated@@622 ($generated@@284 $generated@@620)) (= ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622) ($generated@@362 $generated@@620 $generated@@622))) (=> (<= ($generated@@284 $generated@@620) $generated@@622) (= ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622) ($generated@@362 $generated@@621 (- $generated@@622 ($generated@@284 $generated@@620))))))))
 :pattern ( ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@154) (= (type $generated@@625) $generated@@154)) (= ($generated@@232 ($generated@@253 $generated@@624) ($generated@@253 $generated@@625)) ($generated@@253 ($generated@@232 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@232 ($generated@@253 $generated@@624) ($generated@@253 $generated@@625)))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@251 $generated@@626))) ($generated@@253 ($generated@@291 ($generated@@8 $generated@@626))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@251 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@291 ($generated@@253 $generated@@627)) ($generated@@253 ($generated@@291 $generated@@627)))
 :pattern ( ($generated@@291 ($generated@@253 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@260 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@259 $generated@@629)) (= ($generated@@284 $generated@@628) 0)) (= $generated@@628 ($generated@@283 $generated@@629))))
 :pattern ( ($generated@@284 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@78 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@304 ($generated@@84 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@304 $generated@@630) ($generated ($generated@@83 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@304 ($generated@@84 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@635) $generated@@2)) ($generated@@76 $generated@@635 $generated@@46 $generated@@634))
 :pattern ( ($generated@@76 $generated@@635 $generated@@46 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@637) $generated@@3)) ($generated@@76 $generated@@637 $generated@@47 $generated@@636))
 :pattern ( ($generated@@76 $generated@@637 $generated@@47 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@639) $generated@@4)) ($generated@@76 $generated@@639 $generated@@44 $generated@@638))
 :pattern ( ($generated@@76 $generated@@639 $generated@@44 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@641) $generated@@485)) ($generated@@76 $generated@@641 $generated@@45 $generated@@640))
 :pattern ( ($generated@@76 $generated@@641 $generated@@45 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@643) $generated@@154)) ($generated@@76 $generated@@643 $generated@@48 $generated@@642))
 :pattern ( ($generated@@76 $generated@@643 $generated@@48 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@259 $generated@@154)) (= (type $generated@@645) $generated@@66)) (= ($generated@@141 $generated@@644 ($generated@@258 $generated@@645)) (forall (($generated@@646 Int) ) (!  (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@284 $generated@@644))) ($generated@@221 ($generated@@362 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@362 $generated@@644 $generated@@646))
))))
 :pattern ( ($generated@@141 $generated@@644 ($generated@@258 $generated@@645)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 Int) ) (!  (=> (= (type $generated@@648) ($generated@@259 $generated@@154)) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@284 $generated@@648))) (< ($generated@@560 ($generated@@222 $generated@@145 ($generated@@362 $generated@@648 $generated@@649))) ($generated@@647 $generated@@648))))
 :pattern ( ($generated@@560 ($generated@@222 $generated@@145 ($generated@@362 $generated@@648 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@651) $generated@@66)) (= (type $generated@@652) $generated@@66)) ($generated@@141 $generated@@650 ($generated@@431 $generated@@651 $generated@@652))) (and (and ($generated@@141 ($generated@@310 $generated@@650) ($generated@@241 $generated@@651)) ($generated@@141 ($generated@@374 $generated@@650) ($generated@@241 $generated@@652))) ($generated@@141 ($generated@@405 $generated@@650) ($generated@@241 ($generated@@144 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@141 $generated@@650 ($generated@@431 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@654) $generated@@66)) (= (type $generated@@655) $generated@@66)) ($generated@@141 $generated@@653 ($generated@@439 $generated@@654 $generated@@655))) (and (and ($generated@@141 ($generated@@328 $generated@@653) ($generated@@246 $generated@@654)) ($generated@@141 ($generated@@385 $generated@@653) ($generated@@246 $generated@@655))) ($generated@@141 ($generated@@413 $generated@@653) ($generated@@246 ($generated@@144 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@141 $generated@@653 ($generated@@439 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@2) ($generated@@141 $generated@@656 $generated@@46))
 :pattern ( ($generated@@141 $generated@@656 $generated@@46))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@3) ($generated@@141 $generated@@657 $generated@@47))
 :pattern ( ($generated@@141 $generated@@657 $generated@@47))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@4) ($generated@@141 $generated@@658 $generated@@44))
 :pattern ( ($generated@@141 $generated@@658 $generated@@44))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@485) ($generated@@141 $generated@@659 $generated@@45))
 :pattern ( ($generated@@141 $generated@@659 $generated@@45))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@154) ($generated@@141 $generated@@660 $generated@@48))
 :pattern ( ($generated@@141 $generated@@660 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@661) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@662) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@664) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@665) ($generated@@259 $generated@@154))) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@667) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@669) ($generated@@259 $generated@@154))) (= (type $generated@@670) $generated@@79)) (= (type $generated@@674) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@675) ($generated@@259 $generated@@154))) (= (type $generated@@677) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@678) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@679) ($generated@@259 $generated@@154))) (= (type $generated@@680) ($generated@@259 $generated@@154))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@682  (=> (= $generated@@661 ($generated@@450 $generated@@138 $generated@@662 $generated@@663)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@141 $generated@@664 ($generated@@241 $generated@@138))) (=> ($generated@@141 $generated@@664 ($generated@@241 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and ($generated@@603 $generated@@664 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@664)))) (=> (and ($generated@@603 $generated@@664 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@664))) (=> (and (and ($generated@@141 $generated@@665 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@665 ($generated@@258 $generated@@138) $generated@@666)) (and ($generated@@270 $generated@@667) ($generated@@668 $generated@@667))) (=> (and (and (and ($generated@@141 $generated@@669 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@669 ($generated@@258 $generated@@138) $generated@@667)) (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@79) (=> (and (not (= $generated@@683 $generated@@670)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@666 $generated@@683) $generated@@60))) (= ($generated@@83 $generated@@667 $generated@@683) ($generated@@83 $generated@@666 $generated@@683))))
 :pattern ( ($generated@@83 $generated@@667 $generated@@683))
))) (and ($generated@@134 $generated@@666 $generated@@667) (= (ControlFlow 0 4) (- 0 3)))) (and ($generated@@603 $generated@@661 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@661))))))))))))
(let (($generated@@684  (=> (and (not (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (< $generated@@663 $generated@@671))) (= (ControlFlow 0 9) 4)) $generated@@682)))
(let (($generated@@685  (=> (and (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (< $generated@@663 $generated@@671)) (= (ControlFlow 0 8) 4)) $generated@@682)))
(let (($generated@@686  (=> (not ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671))))) (and (=> (= (ControlFlow 0 11) 8) $generated@@685) (=> (= (ControlFlow 0 11) 9) $generated@@684)))))
(let (($generated@@687  (=> ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@685) (=> (= (ControlFlow 0 10) 9) $generated@@684)))))
(let (($generated@@688  (=> (<= ($generated@@251 0) $generated@@671) (and (=> (= (ControlFlow 0 12) 10) $generated@@687) (=> (= (ControlFlow 0 12) 11) $generated@@686)))))
(let (($generated@@689  (=> (and (< $generated@@671 ($generated@@251 0)) (= (ControlFlow 0 7) 4)) $generated@@682)))
(let (($generated@@690  (=> (= $generated@@664 ($generated@@220 $generated@@46 $generated@@662 $generated@@663)) (and (=> (= (ControlFlow 0 13) 12) $generated@@688) (=> (= (ControlFlow 0 13) 7) $generated@@689)))))
(let (($generated@@691  (=> (and (not (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (< $generated@@672 $generated@@663))) (= (ControlFlow 0 15) 13)) $generated@@690)))
(let (($generated@@692  (=> (and (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (< $generated@@672 $generated@@663)) (= (ControlFlow 0 14) 13)) $generated@@690)))
(let (($generated@@693  (=> (not ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672))))) (and (=> (= (ControlFlow 0 17) 14) $generated@@692) (=> (= (ControlFlow 0 17) 15) $generated@@691)))))
(let (($generated@@694  (=> ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (and (=> (= (ControlFlow 0 16) 14) $generated@@692) (=> (= (ControlFlow 0 16) 15) $generated@@691)))))
(let (($generated@@695  (and (=> (= (ControlFlow 0 18) 16) $generated@@694) (=> (= (ControlFlow 0 18) 17) $generated@@693))))
(let (($generated@@696 true))
(let (($generated@@697  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (exists (($generated@@698 T@U) ) (!  (and (= (type $generated@@698) $generated@@2) (and (<= ($generated@@251 0) ($generated $generated@@698)) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 $generated@@698)))))
 :no-pattern (type $generated@@698)
 :no-pattern ($generated $generated@@698)
 :no-pattern ($generated@@0 $generated@@698)
))))) (=> (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (exists (($generated@@699 Int) )  (and (<= ($generated@@251 0) $generated@@699) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@699)))))))) (=> (and (<= ($generated@@251 0) $generated@@663) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@663))))) (and (=> (= (ControlFlow 0 19) 18) $generated@@695) (=> (= (ControlFlow 0 19) 2) $generated@@696)))))))
(let (($generated@@700  (=> (and (< $generated@@673 ($generated@@251 0)) (= (ControlFlow 0 22) 19)) $generated@@697)))
(let (($generated@@701  (=> (and (<= ($generated@@251 0) $generated@@673) (= (ControlFlow 0 21) 19)) $generated@@697)))
(let (($generated@@702  (=> (not ($generated@@346 $generated@@662 ($generated@@574 $generated@@154))) (and (=> (= (ControlFlow 0 23) 21) $generated@@701) (=> (= (ControlFlow 0 23) 22) $generated@@700)))))
(let (($generated@@703 true))
(let (($generated@@704  (=> (= $generated@@674 ($generated@@165 $generated@@670 $generated@@666 $generated@@60 false)) (and (=> (= (ControlFlow 0 24) 1) $generated@@703) (=> (= (ControlFlow 0 24) 23) $generated@@702)))))
(let (($generated@@705  (=> (and (and ($generated@@270 $generated@@666) ($generated@@668 $generated@@666)) (and ($generated@@141 $generated@@662 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@662 ($generated@@241 $generated@@138) $generated@@666))) (=> (and (and (and ($generated@@141 $generated@@675 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@675 ($generated@@258 $generated@@138) $generated@@666)) (and (<= ($generated@@251 0) $generated@@676) true)) (and (and ($generated@@141 $generated@@677 ($generated@@241 $generated@@46)) ($generated@@76 $generated@@677 ($generated@@241 $generated@@46) $generated@@666)) true)) (=> (and (and (and (and ($generated@@141 $generated@@678 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@678 ($generated@@241 $generated@@138) $generated@@666)) true) (and (and ($generated@@141 $generated@@679 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@679 ($generated@@258 $generated@@138) $generated@@666)) true)) (and (and (and ($generated@@141 $generated@@680 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@680 ($generated@@258 $generated@@138) $generated@@666)) true) (and (= 1 $generated@@681) (= (ControlFlow 0 25) 24)))) $generated@@704)))))
$generated@@705))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 (T@U Int) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@232 () T@T)
(declare-fun $generated@@233 (Int) Bool)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@T) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U Int) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 () T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert  (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@232) 17) (forall (($generated@@242 T@T) ) (= ($generated@@1 ($generated@@240 $generated@@242)) 18))) (forall (($generated@@243 T@T) ) (! (= ($generated@@241 ($generated@@240 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@240 $generated@@243))
))) (forall (($generated@@244 T@U) ($generated@@245 Int) ) (! (= (type ($generated@@229 $generated@@244 $generated@@245)) ($generated@@240 $generated@@150))
 :pattern ( ($generated@@229 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@230 $generated@@246)) $generated@@232)
 :pattern ( ($generated@@230 $generated@@246))
))) (= (type $generated@@235) ($generated@@240 $generated@@150))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@241 (type $generated@@247))))
(= (type ($generated@@236 $generated@@247 $generated@@248)) ($generated@@240 $generated@@249)))
 :pattern ( ($generated@@236 $generated@@247 $generated@@248))
))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@237 $generated@@250 $generated@@251)) ($generated@@240 $generated@@252)))
 :pattern ( ($generated@@237 $generated@@250 $generated@@251))
))) (forall (($generated@@253 T@T) ) (! (= (type ($generated@@238 $generated@@253)) ($generated@@240 $generated@@253))
 :pattern ( ($generated@@238 $generated@@253))
))) (forall (($generated@@254 T@U) ) (! (= (type ($generated@@239 $generated@@254)) $generated@@150)
 :pattern ( ($generated@@239 $generated@@254))
))))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@255 T@U) ($generated@@256 Int) ) (!  (=> (and (= (type $generated@@255) $generated@@232) (or ($generated@@233 ($generated@@231 $generated@@256)) (and (not (= 1 $generated@@228)) (<= ($generated@@231 0) $generated@@256)))) (and (and (=> (= ($generated@@231 $generated@@256) ($generated@@231 0)) $generated@@234) (=> (not (= ($generated@@231 $generated@@256) ($generated@@231 0))) ($generated@@233 ($generated@@231 (- $generated@@256 1))))) (= ($generated@@229 ($generated@@230 $generated@@255) ($generated@@231 $generated@@256)) (ite (= ($generated@@231 $generated@@256) ($generated@@231 0)) $generated@@235 ($generated@@236 ($generated@@229 ($generated@@230 $generated@@255) ($generated@@231 (- $generated@@256 1))) ($generated@@237 ($generated@@238 $generated@@150) ($generated@@239 ($generated@@8 ($generated@@231 $generated@@256)))))))))
 :weight 3
 :pattern ( ($generated@@229 ($generated@@230 $generated@@255) ($generated@@231 $generated@@256)))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@257 $generated@@259 $generated@@260)) $generated@@141)
 :pattern ( ($generated@@257 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@150)) (= (type $generated@@264) $generated@@150)) (= ($generated@@137 ($generated@@257 $generated@@263 $generated@@264) ($generated@@140 $generated@@261 $generated@@262))  (and ($generated@@258 $generated@@263 $generated@@261) ($generated@@258 $generated@@264 $generated@@262))))
 :pattern ( ($generated@@137 ($generated@@257 $generated@@263 $generated@@264) ($generated@@140 $generated@@261 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) (= (type $generated@@266) $generated@@141)) (= ($generated@@147 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@147 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@66)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@270) $generated@@66)) (= ($generated@@137 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@150) ($generated@@0 ($generated@@83 $generated@@269 $generated@@271))) ($generated@@258 $generated@@271 $generated@@270))
 :pattern ( ($generated@@83 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@137 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@66)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@275) $generated@@66)) (= ($generated@@137 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@150) ($generated@@0 ($generated@@83 $generated@@274 $generated@@276))) ($generated@@258 $generated@@276 $generated@@275))
 :pattern ( ($generated@@83 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@137 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@231 $generated@@277) $generated@@277)
 :pattern ( ($generated@@231 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@66)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@240 $generated@@150)) (= (type $generated@@285) $generated@@150)) (= (type $generated@@286) $generated@@66)) (and ($generated@@137 $generated@@284 ($generated@@282 $generated@@286)) ($generated@@258 $generated@@285 $generated@@286))) ($generated@@137 ($generated@@237 $generated@@284 $generated@@285) ($generated@@282 $generated@@286)))
 :pattern ( ($generated@@137 ($generated@@237 $generated@@284 $generated@@285) ($generated@@282 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) $generated@@66)) (= (type $generated@@291) $generated@@150)) (= (type $generated@@292) $generated@@150)) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@287 $generated@@293)) (= ($generated@@76 ($generated@@257 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@76 ($generated@@257 $generated@@291 $generated@@292) ($generated@@140 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@70)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@141) (= ($generated@@139 $generated@@296) (= ($generated@@294 $generated@@296) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@141) ($generated@@139 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@150) (= (type $generated@@299) $generated@@150)) (= $generated@@297 ($generated@@257 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@139 $generated@@297))
)))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@300 ($generated@@238 $generated@@301)) 0)
 :pattern ( ($generated@@238 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@2) (= ($generated@@137 $generated@@302 $generated@@134) (<= ($generated@@231 0) ($generated $generated@@302))))
 :pattern ( ($generated@@137 $generated@@302 $generated@@134))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
 (=> (= (type $generated@@303) ($generated@@240 $generated@@305)) (= ($generated@@300 ($generated@@237 $generated@@303 $generated@@304)) (+ 1 ($generated@@300 $generated@@303)))))
 :pattern ( ($generated@@237 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@288 ($generated@@239 $generated@@306) $generated@@307 $generated@@308) ($generated@@76 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@288 ($generated@@239 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@81 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@83 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 20)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@83 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@83 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@241 (type $generated@@351))))
 (=> (and (= (type $generated@@351) ($generated@@240 $generated@@353)) (= (type $generated@@352) ($generated@@240 $generated@@353))) (= ($generated@@300 ($generated@@236 $generated@@351 $generated@@352)) (+ ($generated@@300 $generated@@351) ($generated@@300 $generated@@352)))))
 :pattern ( ($generated@@300 ($generated@@236 $generated@@351 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@81 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@2)) (= ($generated@@156 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@83 $generated@@354 $generated@@356))) (<= ($generated ($generated@@83 $generated@@354 $generated@@356)) ($generated@@309 $generated@@354))))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@156 $generated@@354))
)))
(assert  (=> (<= 0 $generated@@228) (=> (or $generated@@234 (not (= 0 $generated@@228))) (= $generated@@235 ($generated@@278 ($generated@@237 ($generated@@238 $generated@@150) ($generated@@239 ($generated@@8 ($generated@@231 0)))))))))
(assert  (=> (<= 0 $generated@@228) (=> (or $generated@@234 (not (= 0 $generated@@228))) (= $generated@@235 ($generated@@278 ($generated@@237 ($generated@@238 $generated@@150) ($generated@@239 ($generated@@8 ($generated@@231 0)))))))))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@258 $generated@@360 $generated@@134)) (and (= ($generated@@239 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@137 ($generated@@357 $generated@@2 $generated@@360) $generated@@134)))
 :pattern ( ($generated@@258 $generated@@360 $generated@@134))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 Int) ) (! (let (($generated@@364 ($generated@@241 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362 $generated@@363)) $generated@@364))
 :pattern ( ($generated@@361 $generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 Int) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
 (=> (= (type $generated@@365) ($generated@@240 $generated@@368)) (and (=> (= $generated@@366 ($generated@@300 $generated@@365)) (= ($generated@@361 ($generated@@237 $generated@@365 $generated@@367) $generated@@366) $generated@@367)) (=> (not (= $generated@@366 ($generated@@300 $generated@@365))) (= ($generated@@361 ($generated@@237 $generated@@365 $generated@@367) $generated@@366) ($generated@@361 $generated@@365 $generated@@366))))))
 :pattern ( ($generated@@361 ($generated@@237 $generated@@365 $generated@@367) $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@319 (type $generated@@369))))
(let (($generated@@371 ($generated@@318 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@317 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@316 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@315 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@319 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@78 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@319 (type $generated@@376))))
(let (($generated@@378 ($generated@@318 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@317 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@316 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@337 (type $generated@@380))))
(let (($generated@@382 ($generated@@336 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@335 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@334 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@333 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@337 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@78 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@337 (type $generated@@387))))
(let (($generated@@389 ($generated@@336 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@335 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@334 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@83 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@391 T@U) ($generated@@392 Int) ) (!  (=> (and (= (type $generated@@391) $generated@@232) (or ($generated@@233 $generated@@392) (and (not (= 1 $generated@@228)) (<= ($generated@@231 0) $generated@@392)))) (and (and (=> (= $generated@@392 ($generated@@231 0)) $generated@@234) (=> (not (= $generated@@392 ($generated@@231 0))) ($generated@@233 (- $generated@@392 1)))) (= ($generated@@229 ($generated@@230 $generated@@391) $generated@@392) (ite (= $generated@@392 ($generated@@231 0)) $generated@@235 ($generated@@236 ($generated@@229 $generated@@391 (- $generated@@392 1)) ($generated@@237 ($generated@@238 $generated@@150) ($generated@@239 ($generated@@8 $generated@@392))))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@391) $generated@@392))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@394) $generated@@66)) (= ($generated@@137 $generated@@393 ($generated@@155 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@393 $generated@@395)))) ($generated@@258 $generated@@395 $generated@@394))
 :pattern ( ($generated@@83 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@137 $generated@@393 ($generated@@155 $generated@@394)))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@396 T@U) ($generated@@397 Int) ) (!  (=> (and (= (type $generated@@396) $generated@@232) (or ($generated@@233 $generated@@397) (and (not (= 1 $generated@@228)) (<= ($generated@@231 0) $generated@@397)))) ($generated@@137 ($generated@@229 $generated@@396 $generated@@397) ($generated@@282 $generated@@134)))
 :pattern ( ($generated@@229 $generated@@396 $generated@@397))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@398 ($generated@@267 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@150) ($generated@@0 ($generated@@83 $generated@@398 $generated@@401))) ($generated@@288 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@83 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@76 $generated@@398 ($generated@@267 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@272 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@83 $generated@@402 $generated@@405))) ($generated@@288 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@83 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@272 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(= ($generated ($generated@@83 ($generated@@310 $generated@@407) $generated@@406)) 0))
 :pattern ( (let (($generated@@407 (type $generated@@406)))
($generated@@83 ($generated@@310 $generated@@407) $generated@@406)))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@319 (type $generated@@411))))
(let (($generated@@413 ($generated@@318 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@78 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@415) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@414) ($generated@@148 ($generated@@357 $generated@@141 $generated@@415)))) (= ($generated@@83 ($generated@@409 $generated@@414) ($generated@@148 ($generated@@357 $generated@@141 $generated@@415))) ($generated@@149 ($generated@@357 $generated@@141 $generated@@415))))))
 :pattern ( ($generated@@83 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@337 (type $generated@@419))))
(let (($generated@@421 ($generated@@336 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@78 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@335 $generated@@150 $generated@@150)) (= (type $generated@@423) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@83 ($generated@@333 $generated@@422) ($generated@@148 ($generated@@357 $generated@@141 $generated@@423)))) (= ($generated@@83 ($generated@@417 $generated@@422) ($generated@@148 ($generated@@357 $generated@@141 $generated@@423))) ($generated@@149 ($generated@@357 $generated@@141 $generated@@423))))))
 :pattern ( ($generated@@83 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@83 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@336 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@335 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@83 ($generated@@384 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@83 ($generated@@333 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@83 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@429) $generated@@433))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@66)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@438) $generated@@66)) (= (type $generated@@439) $generated@@66)) (= (type $generated@@440) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@437) $generated@@441))) (and ($generated@@288 ($generated@@83 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@288 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@76 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@335 $generated@@150 $generated@@150)) (= (type $generated@@446) $generated@@66)) (= (type $generated@@447) $generated@@66)) (= (type $generated@@448) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@445) $generated@@449))) (and ($generated@@288 ($generated@@83 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@288 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@76 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@78 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@337 (type $generated@@452))))
(let (($generated@@454 ($generated@@336 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@335 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@334 $generated@@454 $generated@@453)) (= ($generated@@333 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@333 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@337 (type $generated@@455))))
(let (($generated@@457 ($generated@@336 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@335 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@334 $generated@@457 $generated@@456)) (= ($generated@@384 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@384 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@337 (type $generated@@458))))
(let (($generated@@460 ($generated@@336 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@335 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@334 $generated@@460 $generated@@459)) (= ($generated@@416 $generated@@458) ($generated@@450 $generated@@150))))))
 :pattern ( ($generated@@416 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@319 (type $generated@@461))))
(let (($generated@@463 ($generated@@318 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@317 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@316 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@150) (= (type $generated@@465) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@408 $generated@@461) ($generated@@239 ($generated@@257 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@408 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@337 (type $generated@@466))))
(let (($generated@@468 ($generated@@336 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@335 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@334 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@416 $generated@@466) ($generated@@239 ($generated@@257 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@416 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) ($generated@@258 $generated@@471 $generated@@46)) (and (= ($generated@@239 ($generated@@357 $generated@@2 $generated@@471)) $generated@@471) ($generated@@137 ($generated@@357 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@258 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) ($generated@@258 $generated@@472 $generated@@47)) (and (= ($generated@@239 ($generated@@357 $generated@@3 $generated@@472)) $generated@@472) ($generated@@137 ($generated@@357 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@258 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) ($generated@@258 $generated@@473 $generated@@44)) (and (= ($generated@@239 ($generated@@357 $generated@@4 $generated@@473)) $generated@@473) ($generated@@137 ($generated@@357 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@258 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 21))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@150) ($generated@@258 $generated@@475 $generated@@45)) (and (= ($generated@@239 ($generated@@357 $generated@@474 $generated@@475)) $generated@@475) ($generated@@137 ($generated@@357 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@258 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@66) (= ($generated@@258 ($generated@@239 $generated@@476) $generated@@477) ($generated@@137 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@258 ($generated@@239 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@81 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@78 $generated@@479 $generated@@2)) (<= 0 ($generated@@309 $generated@@478))))
 :pattern ( ($generated@@309 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@241 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@240 $generated@@481)) (<= 0 ($generated@@300 $generated@@480))))
 :pattern ( ($generated@@300 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@434 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@434 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@434 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@434 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@74 ($generated@@434 $generated@@490 $generated@@491)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@442 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@442 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@496 ($generated@@442 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@442 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@74 ($generated@@442 $generated@@500 $generated@@501)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@150) (= (type $generated@@503) $generated@@150)) (= ($generated@@294 ($generated@@257 $generated@@502 $generated@@503)) $generated@@62))
 :pattern ( ($generated@@257 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@504 ($generated@@140 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@140 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@140 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@140 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) (= (type $generated@@513) $generated@@150)) (= ($generated@@148 ($generated@@257 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@257 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@150) (= (type $generated@@515) $generated@@150)) (= ($generated@@149 ($generated@@257 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@257 $generated@@514 $generated@@515))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@232)
 :pattern ( ($generated@@516 $generated@@518))
)) (= (type $generated@@517) $generated@@232)))
(assert (forall (($generated@@519 T@U) ($generated@@520 Int) ) (!  (=> (= (type $generated@@519) $generated@@232) (= ($generated@@229 $generated@@519 $generated@@520) ($generated@@229 $generated@@517 $generated@@520)))
 :pattern ( ($generated@@229 ($generated@@516 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@240 $generated@@150)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@521 ($generated@@282 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@300 $generated@@521))) ($generated@@288 ($generated@@361 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@361 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@76 $generated@@521 ($generated@@282 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@77 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@77 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@66) (= ($generated@@527 ($generated@@267 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@267 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@74 ($generated@@267 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@66) (= ($generated@@531 ($generated@@272 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@272 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@74 ($generated@@272 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@66) (= ($generated@@535 ($generated@@155 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@155 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@66) (= ($generated@@539 ($generated@@282 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@282 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@66) (= ($generated@@74 ($generated@@282 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@282 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@357 $generated@@544 ($generated@@239 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@239 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@66)) (= ($generated@@137 $generated@@545 ($generated@@434 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@545) $generated@@548))) (and ($generated@@258 ($generated@@83 ($generated@@409 $generated@@545) $generated@@548) $generated@@547) ($generated@@258 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@545) $generated@@548))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@137 $generated@@545 ($generated@@434 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@335 $generated@@150 $generated@@150)) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) $generated@@66)) (= ($generated@@137 $generated@@549 ($generated@@442 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@549) $generated@@552))) (and ($generated@@258 ($generated@@83 ($generated@@417 $generated@@549) $generated@@552) $generated@@551) ($generated@@258 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@549) $generated@@552))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@137 $generated@@549 ($generated@@442 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@150) (= (type $generated@@556) $generated@@150)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@257 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@257 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@150)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@257 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@257 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) $generated@@232) (= ($generated@@229 ($generated@@230 $generated@@559) $generated@@560) ($generated@@229 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) $generated@@66)) ($generated@@258 $generated@@561 ($generated@@434 $generated@@562 $generated@@563))) (and (= ($generated@@239 ($generated@@357 ($generated@@317 $generated@@150 $generated@@150) $generated@@561)) $generated@@561) ($generated@@137 ($generated@@357 ($generated@@317 $generated@@150 $generated@@150) $generated@@561) ($generated@@434 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@258 $generated@@561 ($generated@@434 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) $generated@@66)) ($generated@@258 $generated@@564 ($generated@@442 $generated@@565 $generated@@566))) (and (= ($generated@@239 ($generated@@357 ($generated@@335 $generated@@150 $generated@@150) $generated@@564)) $generated@@564) ($generated@@137 ($generated@@357 ($generated@@335 $generated@@150 $generated@@150) $generated@@564) ($generated@@442 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@258 $generated@@564 ($generated@@442 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@66) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@150)) ($generated@@258 $generated@@569 ($generated@@140 $generated@@567 $generated@@568))) (and (= ($generated@@239 ($generated@@357 $generated@@141 $generated@@569)) $generated@@569) ($generated@@137 ($generated@@357 $generated@@141 $generated@@569) ($generated@@140 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@258 $generated@@569 ($generated@@140 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@83 ($generated@@450 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@83 ($generated@@450 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@66) (= (type $generated@@575) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@572 ($generated@@140 $generated@@574 $generated@@575)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@574 $generated@@575))
)))
(assert  (and (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@241 (type $generated@@578))))
(= (type ($generated@@576 $generated@@578)) ($generated@@240 $generated@@579)))
 :pattern ( ($generated@@576 $generated@@578))
)) (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@241 (type $generated@@580))))
(= (type ($generated@@577 $generated@@580)) $generated@@581))
 :pattern ( ($generated@@577 $generated@@580))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (=> (= (type $generated@@582) ($generated@@240 $generated@@584)) (and (= ($generated@@576 ($generated@@237 $generated@@582 $generated@@583)) $generated@@582) (= ($generated@@577 ($generated@@237 $generated@@582 $generated@@583)) $generated@@583))))
 :pattern ( ($generated@@237 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@141) (= ($generated@@553 ($generated@@239 $generated@@585)) ($generated@@554 $generated@@585)))
 :pattern ( ($generated@@553 ($generated@@239 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@150) ($generated@@258 $generated@@586 ($generated@@77 0))) (and (= ($generated@@239 ($generated@@357 $generated@@2 $generated@@586)) $generated@@586) ($generated@@137 ($generated@@357 ($generated@@78 $generated@@150 $generated@@4) $generated@@586) ($generated@@77 0))))
 :pattern ( ($generated@@258 $generated@@586 ($generated@@77 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@150) (= (type $generated@@588) $generated@@66)) ($generated@@258 $generated@@587 ($generated@@267 $generated@@588))) (and (= ($generated@@239 ($generated@@357 ($generated@@78 $generated@@150 $generated@@4) $generated@@587)) $generated@@587) ($generated@@137 ($generated@@357 ($generated@@78 $generated@@150 $generated@@4) $generated@@587) ($generated@@267 $generated@@588))))
 :pattern ( ($generated@@258 $generated@@587 ($generated@@267 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@150) (= (type $generated@@590) $generated@@66)) ($generated@@258 $generated@@589 ($generated@@272 $generated@@590))) (and (= ($generated@@239 ($generated@@357 ($generated@@78 $generated@@150 $generated@@4) $generated@@589)) $generated@@589) ($generated@@137 ($generated@@357 ($generated@@78 $generated@@150 $generated@@4) $generated@@589) ($generated@@272 $generated@@590))))
 :pattern ( ($generated@@258 $generated@@589 ($generated@@272 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@150) (= (type $generated@@592) $generated@@66)) ($generated@@258 $generated@@591 ($generated@@155 $generated@@592))) (and (= ($generated@@239 ($generated@@357 ($generated@@78 $generated@@150 $generated@@2) $generated@@591)) $generated@@591) ($generated@@137 ($generated@@357 ($generated@@78 $generated@@150 $generated@@2) $generated@@591) ($generated@@155 $generated@@592))))
 :pattern ( ($generated@@258 $generated@@591 ($generated@@155 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@150) (= (type $generated@@594) $generated@@66)) ($generated@@258 $generated@@593 ($generated@@282 $generated@@594))) (and (= ($generated@@239 ($generated@@357 ($generated@@240 $generated@@150) $generated@@593)) $generated@@593) ($generated@@137 ($generated@@357 ($generated@@240 $generated@@150) $generated@@593) ($generated@@282 $generated@@594))))
 :pattern ( ($generated@@258 $generated@@593 ($generated@@282 $generated@@594)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@572 $generated@@134) $generated@@64))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@595 ($generated@@155 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@595 $generated@@598)))) ($generated@@288 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@83 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@155 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@141) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@601) (and ($generated@@139 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@66) ($generated@@76 $generated@@599 ($generated@@140 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@76 $generated@@599 ($generated@@140 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@288 ($generated@@148 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@288 ($generated@@148 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@141) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@605) (and ($generated@@139 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@66) ($generated@@76 $generated@@603 ($generated@@140 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@76 $generated@@603 ($generated@@140 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@288 ($generated@@149 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@288 ($generated@@149 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 Int) ) (! (let (($generated@@610 ($generated@@241 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@240 $generated@@610)) (= (type $generated@@608) ($generated@@240 $generated@@610))) (and (=> (< $generated@@609 ($generated@@300 $generated@@607)) (= ($generated@@361 ($generated@@236 $generated@@607 $generated@@608) $generated@@609) ($generated@@361 $generated@@607 $generated@@609))) (=> (<= ($generated@@300 $generated@@607) $generated@@609) (= ($generated@@361 ($generated@@236 $generated@@607 $generated@@608) $generated@@609) ($generated@@361 $generated@@608 (- $generated@@609 ($generated@@300 $generated@@607))))))))
 :pattern ( ($generated@@361 ($generated@@236 $generated@@607 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@150) (= (type $generated@@612) $generated@@150)) (= ($generated@@257 ($generated@@278 $generated@@611) ($generated@@278 $generated@@612)) ($generated@@278 ($generated@@257 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@257 ($generated@@278 $generated@@611) ($generated@@278 $generated@@612)))
)))
(assert  (=> (<= 0 $generated@@228) (=> (or $generated@@234 (not (= 0 $generated@@228))) ($generated@@137 $generated@@235 ($generated@@282 $generated@@46)))))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@239 ($generated@@8 ($generated@@231 $generated@@613))) ($generated@@278 ($generated@@239 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@239 ($generated@@8 ($generated@@231 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@239 ($generated@@278 $generated@@614)) ($generated@@278 ($generated@@239 $generated@@614)))
 :pattern ( ($generated@@239 ($generated@@278 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@241 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@240 $generated@@616)) (= ($generated@@300 $generated@@615) 0)) (= $generated@@615 ($generated@@238 $generated@@616))))
 :pattern ( ($generated@@300 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@78 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@309 ($generated@@84 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@309 $generated@@617) ($generated ($generated@@83 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@309 ($generated@@84 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@622) $generated@@2)) ($generated@@76 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@76 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@624) $generated@@3)) ($generated@@76 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@76 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@626) $generated@@4)) ($generated@@76 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@76 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@628) $generated@@474)) ($generated@@76 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@76 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@630) $generated@@150)) ($generated@@76 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@76 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@240 $generated@@150)) (= (type $generated@@632) $generated@@66)) (= ($generated@@137 $generated@@631 ($generated@@282 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@300 $generated@@631))) ($generated@@258 ($generated@@361 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@361 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@137 $generated@@631 ($generated@@282 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@240 $generated@@150)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@300 $generated@@635))) (< ($generated@@554 ($generated@@357 $generated@@141 ($generated@@361 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@554 ($generated@@357 $generated@@141 ($generated@@361 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@638) $generated@@66)) (= (type $generated@@639) $generated@@66)) ($generated@@137 $generated@@637 ($generated@@434 $generated@@638 $generated@@639))) (and (and ($generated@@137 ($generated@@315 $generated@@637) ($generated@@267 $generated@@638)) ($generated@@137 ($generated@@373 $generated@@637) ($generated@@267 $generated@@639))) ($generated@@137 ($generated@@408 $generated@@637) ($generated@@267 ($generated@@140 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@137 $generated@@637 ($generated@@434 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@335 $generated@@150 $generated@@150)) (= (type $generated@@641) $generated@@66)) (= (type $generated@@642) $generated@@66)) ($generated@@137 $generated@@640 ($generated@@442 $generated@@641 $generated@@642))) (and (and ($generated@@137 ($generated@@333 $generated@@640) ($generated@@272 $generated@@641)) ($generated@@137 ($generated@@384 $generated@@640) ($generated@@272 $generated@@642))) ($generated@@137 ($generated@@416 $generated@@640) ($generated@@272 ($generated@@140 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@137 $generated@@640 ($generated@@442 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@137 $generated@@643 $generated@@46))
 :pattern ( ($generated@@137 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@137 $generated@@644 $generated@@47))
 :pattern ( ($generated@@137 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@137 $generated@@645 $generated@@44))
 :pattern ( ($generated@@137 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@474) ($generated@@137 $generated@@646 $generated@@45))
 :pattern ( ($generated@@137 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@150) ($generated@@137 $generated@@647 $generated@@48))
 :pattern ( ($generated@@137 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@651) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@652) $generated@@79)) (= (type $generated@@653) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@655  (=> (not (= $generated@@648 ($generated@@231 0))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@137 ($generated@@8 (- $generated@@648 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@648 1)) $generated@@134) (=> (and (= $generated@@649 (- $generated@@648 1)) ($generated@@76 ($generated@@8 $generated@@649) $generated@@134 $generated@@650)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@648) (= $generated@@649 $generated@@648))) (=> (or (<= 0 $generated@@648) (= $generated@@649 $generated@@648)) (=> (= (ControlFlow 0 5) (- 0 4)) (< $generated@@649 $generated@@648))))))))))
(let (($generated@@656  (=> (= $generated@@648 ($generated@@231 0)) (=> (and $generated@@234 (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 ($generated@@278 $generated@@235) ($generated@@282 $generated@@134))))))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@216 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 3) $generated@@656) (=> (= (ControlFlow 0 8) 5) $generated@@655)))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@653 ($generated@@161 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@658) (=> (= (ControlFlow 0 9) 8) $generated@@657)))))
(let (($generated@@660  (=> (and (and (and ($generated@@287 $generated@@650) ($generated@@654 $generated@@650)) (<= ($generated@@231 0) $generated@@648)) (and (= 1 $generated@@228) (= (ControlFlow 0 10) 9))) $generated@@659)))
$generated@@660)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 (T@U Int) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (Int) Int)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (Int) Bool)
(declare-fun $generated@@143 () Bool)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 (T@T) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@177 (T@U T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Bool)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U Int) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@T) T@U)
(declare-fun $generated@@474 () T@T)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@517 () T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@634 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@152 T@T) ) (= ($generated@@1 ($generated@@150 $generated@@152)) 15))) (forall (($generated@@153 T@T) ) (! (= ($generated@@151 ($generated@@150 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@150 $generated@@153))
))) (= ($generated@@1 $generated@@148) 16)) (forall (($generated@@154 T@U) ($generated@@155 Int) ) (! (= (type ($generated@@138 $generated@@154 $generated@@155)) ($generated@@150 $generated@@148))
 :pattern ( ($generated@@138 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@139 $generated@@156)) $generated@@141)
 :pattern ( ($generated@@139 $generated@@156))
))) (= (type $generated@@144) ($generated@@150 $generated@@148))) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (let (($generated@@159 ($generated@@151 (type $generated@@157))))
(= (type ($generated@@145 $generated@@157 $generated@@158)) ($generated@@150 $generated@@159)))
 :pattern ( ($generated@@145 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@146 $generated@@160 $generated@@161)) ($generated@@150 $generated@@162)))
 :pattern ( ($generated@@146 $generated@@160 $generated@@161))
))) (forall (($generated@@163 T@T) ) (! (= (type ($generated@@147 $generated@@163)) ($generated@@150 $generated@@163))
 :pattern ( ($generated@@147 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@149 $generated@@164)) $generated@@148)
 :pattern ( ($generated@@149 $generated@@164))
))))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@165 T@U) ($generated@@166 Int) ) (!  (=> (and (= (type $generated@@165) $generated@@141) (or ($generated@@142 ($generated@@140 $generated@@166)) (and (not (= 1 $generated@@137)) (<= ($generated@@140 0) $generated@@166)))) (and (and (=> (= ($generated@@140 $generated@@166) ($generated@@140 0)) $generated@@143) (=> (not (= ($generated@@140 $generated@@166) ($generated@@140 0))) ($generated@@142 ($generated@@140 (- $generated@@166 1))))) (= ($generated@@138 ($generated@@139 $generated@@165) ($generated@@140 $generated@@166)) (ite (= ($generated@@140 $generated@@166) ($generated@@140 0)) $generated@@144 ($generated@@145 ($generated@@146 ($generated@@147 $generated@@148) ($generated@@149 ($generated@@8 ($generated@@140 $generated@@166)))) ($generated@@138 ($generated@@139 $generated@@165) ($generated@@140 (- $generated@@166 1))))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@139 $generated@@165) ($generated@@140 $generated@@166)))
))))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@2) ($generated@@167 $generated@@168 ($generated@@77 0)))
 :pattern ( ($generated@@167 $generated@@168 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@171) 17) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@172 $generated@@173)) $generated@@66)
 :pattern ( ($generated@@170 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (and (= (type $generated@@174) $generated@@66) (= (type $generated@@175) $generated@@66)) (= (type $generated@@176) $generated@@171)) ($generated@@167 $generated@@176 ($generated@@170 $generated@@174 $generated@@175))) ($generated@@169 $generated@@176))
 :pattern ( ($generated@@169 $generated@@176) ($generated@@167 $generated@@176 ($generated@@170 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@148)
 :pattern ( ($generated@@178 $generated@@180))
)) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@148)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@171) (= (type $generated@@183) $generated@@171)) true) (= ($generated@@177 $generated@@182 $generated@@183)  (and (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)) (= ($generated@@179 $generated@@182) ($generated@@179 $generated@@183)))))
 :pattern ( ($generated@@177 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@148 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@167 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@167 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 18)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@69 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@79) (= (type $generated@@251) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@252) ($generated@@68 $generated@@4))) (= (type $generated@@254) $generated@@79)) (= (type $generated@@255) ($generated@@68 $generated@@256))) (= ($generated@@0 ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (type ($generated@@257 $generated@@259 $generated@@260)) $generated@@171)
 :pattern ( ($generated@@257 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@148)) (= (type $generated@@264) $generated@@148)) (= ($generated@@167 ($generated@@257 $generated@@263 $generated@@264) ($generated@@170 $generated@@261 $generated@@262))  (and ($generated@@258 $generated@@263 $generated@@261) ($generated@@258 $generated@@264 $generated@@262))))
 :pattern ( ($generated@@167 ($generated@@257 $generated@@263 $generated@@264) ($generated@@170 $generated@@261 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@171) (= (type $generated@@266) $generated@@171)) (= ($generated@@177 $generated@@265 $generated@@266) (= $generated@@265 $generated@@266)))
 :pattern ( ($generated@@177 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@66)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@78 $generated@@148 $generated@@4)) (= (type $generated@@270) $generated@@66)) (= ($generated@@167 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@148) ($generated@@0 ($generated@@83 $generated@@269 $generated@@271))) ($generated@@258 $generated@@271 $generated@@270))
 :pattern ( ($generated@@83 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@167 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@66)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@78 $generated@@148 $generated@@4)) (= (type $generated@@275) $generated@@66)) (= ($generated@@167 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@148) ($generated@@0 ($generated@@83 $generated@@274 $generated@@276))) ($generated@@258 $generated@@276 $generated@@275))
 :pattern ( ($generated@@83 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@167 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@277 Int) ) (! (= ($generated@@140 $generated@@277) $generated@@277)
 :pattern ( ($generated@@140 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@66)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@150 $generated@@148)) (= (type $generated@@285) $generated@@148)) (= (type $generated@@286) $generated@@66)) (and ($generated@@167 $generated@@284 ($generated@@282 $generated@@286)) ($generated@@258 $generated@@285 $generated@@286))) ($generated@@167 ($generated@@146 $generated@@284 $generated@@285) ($generated@@282 $generated@@286)))
 :pattern ( ($generated@@167 ($generated@@146 $generated@@284 $generated@@285) ($generated@@282 $generated@@286)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) $generated@@66)) (= (type $generated@@291) $generated@@148)) (= (type $generated@@292) $generated@@148)) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@287 $generated@@293)) (= ($generated@@76 ($generated@@257 $generated@@291 $generated@@292) ($generated@@170 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@76 ($generated@@257 $generated@@291 $generated@@292) ($generated@@170 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@70)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@171) (= ($generated@@169 $generated@@296) (= ($generated@@294 $generated@@296) $generated@@62)))
 :pattern ( ($generated@@169 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@171) ($generated@@169 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@148) (= (type $generated@@299) $generated@@148)) (= $generated@@297 ($generated@@257 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@169 $generated@@297))
)))
(assert (forall (($generated@@301 T@T) ) (! (= ($generated@@300 ($generated@@147 $generated@@301)) 0)
 :pattern ( ($generated@@147 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@2) (= ($generated@@167 $generated@@302 $generated@@134) (<= ($generated@@140 0) ($generated $generated@@302))))
 :pattern ( ($generated@@167 $generated@@302 $generated@@134))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 (type $generated@@304)))
 (=> (= (type $generated@@303) ($generated@@150 $generated@@305)) (= ($generated@@300 ($generated@@146 $generated@@303 $generated@@304)) (+ 1 ($generated@@300 $generated@@303)))))
 :pattern ( ($generated@@146 $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@288 ($generated@@149 $generated@@306) $generated@@307 $generated@@308) ($generated@@76 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@288 ($generated@@149 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@81 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@83 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 20)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@83 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@83 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@351 T@U) ($generated@@352 Int) ) (!  (=> (and (= (type $generated@@351) $generated@@141) (or ($generated@@142 $generated@@352) (and (not (= 1 $generated@@137)) (<= ($generated@@140 0) $generated@@352)))) (and (and (=> (= $generated@@352 ($generated@@140 0)) $generated@@143) (=> (not (= $generated@@352 ($generated@@140 0))) ($generated@@142 (- $generated@@352 1)))) (= ($generated@@138 ($generated@@139 $generated@@351) $generated@@352) (ite (= $generated@@352 ($generated@@140 0)) $generated@@144 ($generated@@145 ($generated@@146 ($generated@@147 $generated@@148) ($generated@@149 ($generated@@8 $generated@@352))) ($generated@@138 $generated@@351 (- $generated@@352 1)))))))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@351) $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@151 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@150 $generated@@355)) (= (type $generated@@354) ($generated@@150 $generated@@355))) (= ($generated@@300 ($generated@@145 $generated@@353 $generated@@354)) (+ ($generated@@300 $generated@@353) ($generated@@300 $generated@@354)))))
 :pattern ( ($generated@@300 ($generated@@145 $generated@@353 $generated@@354)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@81 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@78 $generated@@357 $generated@@2)) (= ($generated@@185 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@83 $generated@@356 $generated@@358))) (<= ($generated ($generated@@83 $generated@@356 $generated@@358)) ($generated@@309 $generated@@356))))
 :pattern ( ($generated@@83 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@185 $generated@@356))
)))
(assert  (=> (<= 0 $generated@@137) (=> (or $generated@@143 (not (= 0 $generated@@137))) (= $generated@@144 ($generated@@278 ($generated@@146 ($generated@@147 $generated@@148) ($generated@@149 ($generated@@8 ($generated@@140 0)))))))))
(assert  (=> (<= 0 $generated@@137) (=> (or $generated@@143 (not (= 0 $generated@@137))) (= $generated@@144 ($generated@@278 ($generated@@146 ($generated@@147 $generated@@148) ($generated@@149 ($generated@@8 ($generated@@140 0)))))))))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@148) ($generated@@258 $generated@@362 $generated@@134)) (and (= ($generated@@149 ($generated@@359 $generated@@2 $generated@@362)) $generated@@362) ($generated@@167 ($generated@@359 $generated@@2 $generated@@362) $generated@@134)))
 :pattern ( ($generated@@258 $generated@@362 $generated@@134))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 Int) ) (! (let (($generated@@366 ($generated@@151 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@366))
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 Int) ($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
 (=> (= (type $generated@@367) ($generated@@150 $generated@@370)) (and (=> (= $generated@@368 ($generated@@300 $generated@@367)) (= ($generated@@363 ($generated@@146 $generated@@367 $generated@@369) $generated@@368) $generated@@369)) (=> (not (= $generated@@368 ($generated@@300 $generated@@367))) (= ($generated@@363 ($generated@@146 $generated@@367 $generated@@369) $generated@@368) ($generated@@363 $generated@@367 $generated@@368))))))
 :pattern ( ($generated@@363 ($generated@@146 $generated@@367 $generated@@369) $generated@@368))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@319 (type $generated@@371))))
(let (($generated@@373 ($generated@@318 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@317 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@316 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@315 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@319 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@78 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@319 (type $generated@@378))))
(let (($generated@@380 ($generated@@318 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@317 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@316 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@337 (type $generated@@382))))
(let (($generated@@384 ($generated@@336 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@335 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@334 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@333 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@337 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@78 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@337 (type $generated@@389))))
(let (($generated@@391 ($generated@@336 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@335 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@334 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@78 $generated@@148 $generated@@2)) (= (type $generated@@394) $generated@@66)) (= ($generated@@167 $generated@@393 ($generated@@184 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@148) (< 0 ($generated ($generated@@83 $generated@@393 $generated@@395)))) ($generated@@258 $generated@@395 $generated@@394))
 :pattern ( ($generated@@83 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@167 $generated@@393 ($generated@@184 $generated@@394)))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@396 T@U) ($generated@@397 Int) ) (!  (=> (and (= (type $generated@@396) $generated@@141) (or ($generated@@142 $generated@@397) (and (not (= 1 $generated@@137)) (<= ($generated@@140 0) $generated@@397)))) ($generated@@167 ($generated@@138 $generated@@396 $generated@@397) ($generated@@282 $generated@@134)))
 :pattern ( ($generated@@138 $generated@@396 $generated@@397))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@78 $generated@@148 $generated@@4)) (= (type $generated@@399) $generated@@66)) (= (type $generated@@400) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@398 ($generated@@267 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@148) ($generated@@0 ($generated@@83 $generated@@398 $generated@@401))) ($generated@@288 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@83 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@76 $generated@@398 ($generated@@267 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@148 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@272 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@148) ($generated@@0 ($generated@@83 $generated@@402 $generated@@405))) ($generated@@288 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@83 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@272 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(= ($generated ($generated@@83 ($generated@@310 $generated@@407) $generated@@406)) 0))
 :pattern ( (let (($generated@@407 (type $generated@@406)))
($generated@@83 ($generated@@310 $generated@@407) $generated@@406)))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@78 $generated@@148 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@319 (type $generated@@411))))
(let (($generated@@413 ($generated@@318 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@78 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@317 $generated@@148 $generated@@148)) (= (type $generated@@415) $generated@@148)) (= ($generated@@0 ($generated@@83 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@414) ($generated@@178 ($generated@@359 $generated@@171 $generated@@415)))) (= ($generated@@83 ($generated@@409 $generated@@414) ($generated@@178 ($generated@@359 $generated@@171 $generated@@415))) ($generated@@179 ($generated@@359 $generated@@171 $generated@@415))))))
 :pattern ( ($generated@@83 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@78 $generated@@148 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@337 (type $generated@@419))))
(let (($generated@@421 ($generated@@336 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@78 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@335 $generated@@148 $generated@@148)) (= (type $generated@@423) $generated@@148)) (= ($generated@@0 ($generated@@83 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@83 ($generated@@333 $generated@@422) ($generated@@178 ($generated@@359 $generated@@171 $generated@@423)))) (= ($generated@@83 ($generated@@417 $generated@@422) ($generated@@178 ($generated@@359 $generated@@171 $generated@@423))) ($generated@@179 ($generated@@359 $generated@@171 $generated@@423))))))
 :pattern ( ($generated@@83 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@318 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@83 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@336 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@335 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@83 ($generated@@333 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@83 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@429) $generated@@433))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@66)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@317 $generated@@148 $generated@@148)) (= (type $generated@@438) $generated@@66)) (= (type $generated@@439) $generated@@66)) (= (type $generated@@440) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@148) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@437) $generated@@441))) (and ($generated@@288 ($generated@@83 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@288 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@76 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@335 $generated@@148 $generated@@148)) (= (type $generated@@446) $generated@@66)) (= (type $generated@@447) $generated@@66)) (= (type $generated@@448) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@148) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@445) $generated@@449))) (and ($generated@@288 ($generated@@83 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@288 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@76 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@T) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@78 $generated@@451 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@337 (type $generated@@452))))
(let (($generated@@454 ($generated@@336 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@335 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@334 $generated@@454 $generated@@453)) (= ($generated@@333 $generated@@452) ($generated@@450 $generated@@454))))))
 :pattern ( ($generated@@333 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@337 (type $generated@@455))))
(let (($generated@@457 ($generated@@336 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@335 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@334 $generated@@457 $generated@@456)) (= ($generated@@386 $generated@@455) ($generated@@450 $generated@@456))))))
 :pattern ( ($generated@@386 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@337 (type $generated@@458))))
(let (($generated@@460 ($generated@@336 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@335 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@334 $generated@@460 $generated@@459)) (= ($generated@@416 $generated@@458) ($generated@@450 $generated@@148))))))
 :pattern ( ($generated@@416 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@319 (type $generated@@461))))
(let (($generated@@463 ($generated@@318 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@317 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@316 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@148) (= (type $generated@@465) $generated@@148)) ($generated@@0 ($generated@@83 ($generated@@408 $generated@@461) ($generated@@149 ($generated@@257 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@408 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@337 (type $generated@@466))))
(let (($generated@@468 ($generated@@336 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@335 $generated@@468 $generated@@467)) (or (= $generated@@466 ($generated@@334 $generated@@468 $generated@@467)) (exists (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (and (and (= (type $generated@@469) $generated@@148) (= (type $generated@@470) $generated@@148)) ($generated@@0 ($generated@@83 ($generated@@416 $generated@@466) ($generated@@149 ($generated@@257 $generated@@469 $generated@@470)))))
 :no-pattern (type $generated@@469)
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@416 $generated@@466))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@148) ($generated@@258 $generated@@471 $generated@@46)) (and (= ($generated@@149 ($generated@@359 $generated@@2 $generated@@471)) $generated@@471) ($generated@@167 ($generated@@359 $generated@@2 $generated@@471) $generated@@46)))
 :pattern ( ($generated@@258 $generated@@471 $generated@@46))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@148) ($generated@@258 $generated@@472 $generated@@47)) (and (= ($generated@@149 ($generated@@359 $generated@@3 $generated@@472)) $generated@@472) ($generated@@167 ($generated@@359 $generated@@3 $generated@@472) $generated@@47)))
 :pattern ( ($generated@@258 $generated@@472 $generated@@47))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@148) ($generated@@258 $generated@@473 $generated@@44)) (and (= ($generated@@149 ($generated@@359 $generated@@4 $generated@@473)) $generated@@473) ($generated@@167 ($generated@@359 $generated@@4 $generated@@473) $generated@@44)))
 :pattern ( ($generated@@258 $generated@@473 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@474) 21))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@148) ($generated@@258 $generated@@475 $generated@@45)) (and (= ($generated@@149 ($generated@@359 $generated@@474 $generated@@475)) $generated@@475) ($generated@@167 ($generated@@359 $generated@@474 $generated@@475) $generated@@45)))
 :pattern ( ($generated@@258 $generated@@475 $generated@@45))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@66) (= ($generated@@258 ($generated@@149 $generated@@476) $generated@@477) ($generated@@167 $generated@@476 $generated@@477)))
 :pattern ( ($generated@@258 ($generated@@149 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@81 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@78 $generated@@479 $generated@@2)) (<= 0 ($generated@@309 $generated@@478))))
 :pattern ( ($generated@@309 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@151 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@150 $generated@@481)) (<= 0 ($generated@@300 $generated@@480))))
 :pattern ( ($generated@@300 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@434 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@434 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@434 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@434 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@66) (= (type $generated@@491) $generated@@66)) (= ($generated@@74 ($generated@@434 $generated@@490 $generated@@491)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@492 ($generated@@442 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@442 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@66) (= (type $generated@@499) $generated@@66)) (= ($generated@@496 ($generated@@442 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@442 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@74 ($generated@@442 $generated@@500 $generated@@501)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@148) (= (type $generated@@503) $generated@@148)) (= ($generated@@294 ($generated@@257 $generated@@502 $generated@@503)) $generated@@62))
 :pattern ( ($generated@@257 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@504 ($generated@@170 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@170 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@170 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@170 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@148) (= (type $generated@@513) $generated@@148)) (= ($generated@@178 ($generated@@257 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@257 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@148) (= (type $generated@@515) $generated@@148)) (= ($generated@@179 ($generated@@257 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@257 $generated@@514 $generated@@515))
)))
(assert  (and (forall (($generated@@518 T@U) ) (! (= (type ($generated@@516 $generated@@518)) $generated@@141)
 :pattern ( ($generated@@516 $generated@@518))
)) (= (type $generated@@517) $generated@@141)))
(assert (forall (($generated@@519 T@U) ($generated@@520 Int) ) (!  (=> (= (type $generated@@519) $generated@@141) (= ($generated@@138 $generated@@519 $generated@@520) ($generated@@138 $generated@@517 $generated@@520)))
 :pattern ( ($generated@@138 ($generated@@516 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@150 $generated@@148)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@521 ($generated@@282 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@300 $generated@@521))) ($generated@@288 ($generated@@363 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@363 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@76 $generated@@521 ($generated@@282 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@526 Int) ) (! (= ($generated@@525 ($generated@@77 $generated@@526)) $generated@@526)
 :pattern ( ($generated@@77 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@66) (= ($generated@@527 ($generated@@267 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@267 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@74 ($generated@@267 $generated@@530)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@66)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@66) (= ($generated@@531 ($generated@@272 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@272 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@74 ($generated@@272 $generated@@534)) $generated@@55))
 :pattern ( ($generated@@272 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@66) (= ($generated@@535 ($generated@@184 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@184 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@74 ($generated@@184 $generated@@538)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@66) (= ($generated@@539 ($generated@@282 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@282 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@66) (= ($generated@@74 ($generated@@282 $generated@@542)) $generated@@57))
 :pattern ( ($generated@@282 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@359 $generated@@544 ($generated@@149 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@149 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@317 $generated@@148 $generated@@148)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) $generated@@66)) (= ($generated@@167 $generated@@545 ($generated@@434 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@148) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@545) $generated@@548))) (and ($generated@@258 ($generated@@83 ($generated@@409 $generated@@545) $generated@@548) $generated@@547) ($generated@@258 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@83 ($generated@@409 $generated@@545) $generated@@548))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@167 $generated@@545 ($generated@@434 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@335 $generated@@148 $generated@@148)) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) $generated@@66)) (= ($generated@@167 $generated@@549 ($generated@@442 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@148) ($generated@@0 ($generated@@83 ($generated@@333 $generated@@549) $generated@@552))) (and ($generated@@258 ($generated@@83 ($generated@@417 $generated@@549) $generated@@552) $generated@@551) ($generated@@258 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@83 ($generated@@417 $generated@@549) $generated@@552))
 :pattern ( ($generated@@83 ($generated@@333 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@167 $generated@@549 ($generated@@442 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@148) (= (type $generated@@556) $generated@@148)) (< ($generated@@553 $generated@@555) ($generated@@554 ($generated@@257 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@257 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@148) (= (type $generated@@558) $generated@@148)) (< ($generated@@553 $generated@@558) ($generated@@554 ($generated@@257 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@257 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 Int) ) (!  (=> (= (type $generated@@559) $generated@@141) (= ($generated@@138 ($generated@@139 $generated@@559) $generated@@560) ($generated@@138 $generated@@559 $generated@@560)))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@148) (= (type $generated@@562) $generated@@66)) (= (type $generated@@563) $generated@@66)) ($generated@@258 $generated@@561 ($generated@@434 $generated@@562 $generated@@563))) (and (= ($generated@@149 ($generated@@359 ($generated@@317 $generated@@148 $generated@@148) $generated@@561)) $generated@@561) ($generated@@167 ($generated@@359 ($generated@@317 $generated@@148 $generated@@148) $generated@@561) ($generated@@434 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@258 $generated@@561 ($generated@@434 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@148) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) $generated@@66)) ($generated@@258 $generated@@564 ($generated@@442 $generated@@565 $generated@@566))) (and (= ($generated@@149 ($generated@@359 ($generated@@335 $generated@@148 $generated@@148) $generated@@564)) $generated@@564) ($generated@@167 ($generated@@359 ($generated@@335 $generated@@148 $generated@@148) $generated@@564) ($generated@@442 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@258 $generated@@564 ($generated@@442 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@66) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@148)) ($generated@@258 $generated@@569 ($generated@@170 $generated@@567 $generated@@568))) (and (= ($generated@@149 ($generated@@359 $generated@@171 $generated@@569)) $generated@@569) ($generated@@167 ($generated@@359 $generated@@171 $generated@@569) ($generated@@170 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@258 $generated@@569 ($generated@@170 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@83 ($generated@@450 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@83 ($generated@@450 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@71)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@66) (= (type $generated@@575) $generated@@66)) (and (= ($generated@@74 ($generated@@170 $generated@@574 $generated@@575)) $generated@@63) (= ($generated@@572 ($generated@@170 $generated@@574 $generated@@575)) $generated@@65)))
 :pattern ( ($generated@@170 $generated@@574 $generated@@575))
)))
(assert  (and (forall (($generated@@578 T@U) ) (! (let (($generated@@579 ($generated@@151 (type $generated@@578))))
(= (type ($generated@@576 $generated@@578)) ($generated@@150 $generated@@579)))
 :pattern ( ($generated@@576 $generated@@578))
)) (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@151 (type $generated@@580))))
(= (type ($generated@@577 $generated@@580)) $generated@@581))
 :pattern ( ($generated@@577 $generated@@580))
))))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
 (=> (= (type $generated@@582) ($generated@@150 $generated@@584)) (and (= ($generated@@576 ($generated@@146 $generated@@582 $generated@@583)) $generated@@582) (= ($generated@@577 ($generated@@146 $generated@@582 $generated@@583)) $generated@@583))))
 :pattern ( ($generated@@146 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@171) (= ($generated@@553 ($generated@@149 $generated@@585)) ($generated@@554 $generated@@585)))
 :pattern ( ($generated@@553 ($generated@@149 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@148) ($generated@@258 $generated@@586 ($generated@@77 0))) (and (= ($generated@@149 ($generated@@359 $generated@@2 $generated@@586)) $generated@@586) ($generated@@167 ($generated@@359 ($generated@@78 $generated@@148 $generated@@4) $generated@@586) ($generated@@77 0))))
 :pattern ( ($generated@@258 $generated@@586 ($generated@@77 0)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@148) (= (type $generated@@588) $generated@@66)) ($generated@@258 $generated@@587 ($generated@@267 $generated@@588))) (and (= ($generated@@149 ($generated@@359 ($generated@@78 $generated@@148 $generated@@4) $generated@@587)) $generated@@587) ($generated@@167 ($generated@@359 ($generated@@78 $generated@@148 $generated@@4) $generated@@587) ($generated@@267 $generated@@588))))
 :pattern ( ($generated@@258 $generated@@587 ($generated@@267 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@148) (= (type $generated@@590) $generated@@66)) ($generated@@258 $generated@@589 ($generated@@272 $generated@@590))) (and (= ($generated@@149 ($generated@@359 ($generated@@78 $generated@@148 $generated@@4) $generated@@589)) $generated@@589) ($generated@@167 ($generated@@359 ($generated@@78 $generated@@148 $generated@@4) $generated@@589) ($generated@@272 $generated@@590))))
 :pattern ( ($generated@@258 $generated@@589 ($generated@@272 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@148) (= (type $generated@@592) $generated@@66)) ($generated@@258 $generated@@591 ($generated@@184 $generated@@592))) (and (= ($generated@@149 ($generated@@359 ($generated@@78 $generated@@148 $generated@@2) $generated@@591)) $generated@@591) ($generated@@167 ($generated@@359 ($generated@@78 $generated@@148 $generated@@2) $generated@@591) ($generated@@184 $generated@@592))))
 :pattern ( ($generated@@258 $generated@@591 ($generated@@184 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@148) (= (type $generated@@594) $generated@@66)) ($generated@@258 $generated@@593 ($generated@@282 $generated@@594))) (and (= ($generated@@149 ($generated@@359 ($generated@@150 $generated@@148) $generated@@593)) $generated@@593) ($generated@@167 ($generated@@359 ($generated@@150 $generated@@148) $generated@@593) ($generated@@282 $generated@@594))))
 :pattern ( ($generated@@258 $generated@@593 ($generated@@282 $generated@@594)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@572 $generated@@134) $generated@@64))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@78 $generated@@148 $generated@@2)) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@595 ($generated@@184 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@148) (< 0 ($generated ($generated@@83 $generated@@595 $generated@@598)))) ($generated@@288 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@83 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@184 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@171) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@601) (and ($generated@@169 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@66) ($generated@@76 $generated@@599 ($generated@@170 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@76 $generated@@599 ($generated@@170 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@288 ($generated@@178 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@288 ($generated@@178 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@171) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@287 $generated@@605) (and ($generated@@169 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@66) ($generated@@76 $generated@@603 ($generated@@170 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@76 $generated@@603 ($generated@@170 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@288 ($generated@@179 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@288 ($generated@@179 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 Int) ) (! (let (($generated@@610 ($generated@@151 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@150 $generated@@610)) (= (type $generated@@608) ($generated@@150 $generated@@610))) (and (=> (< $generated@@609 ($generated@@300 $generated@@607)) (= ($generated@@363 ($generated@@145 $generated@@607 $generated@@608) $generated@@609) ($generated@@363 $generated@@607 $generated@@609))) (=> (<= ($generated@@300 $generated@@607) $generated@@609) (= ($generated@@363 ($generated@@145 $generated@@607 $generated@@608) $generated@@609) ($generated@@363 $generated@@608 (- $generated@@609 ($generated@@300 $generated@@607))))))))
 :pattern ( ($generated@@363 ($generated@@145 $generated@@607 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@148) (= (type $generated@@612) $generated@@148)) (= ($generated@@257 ($generated@@278 $generated@@611) ($generated@@278 $generated@@612)) ($generated@@278 ($generated@@257 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@257 ($generated@@278 $generated@@611) ($generated@@278 $generated@@612)))
)))
(assert  (=> (<= 0 $generated@@137) (=> (or $generated@@143 (not (= 0 $generated@@137))) ($generated@@167 $generated@@144 ($generated@@282 $generated@@46)))))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@149 ($generated@@8 ($generated@@140 $generated@@613))) ($generated@@278 ($generated@@149 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@149 ($generated@@8 ($generated@@140 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@149 ($generated@@278 $generated@@614)) ($generated@@278 ($generated@@149 $generated@@614)))
 :pattern ( ($generated@@149 ($generated@@278 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@151 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@150 $generated@@616)) (= ($generated@@300 $generated@@615) 0)) (= $generated@@615 ($generated@@147 $generated@@616))))
 :pattern ( ($generated@@300 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@78 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@309 ($generated@@84 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@309 $generated@@617) ($generated ($generated@@83 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@309 ($generated@@84 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@622) $generated@@2)) ($generated@@76 $generated@@622 $generated@@46 $generated@@621))
 :pattern ( ($generated@@76 $generated@@622 $generated@@46 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@624) $generated@@3)) ($generated@@76 $generated@@624 $generated@@47 $generated@@623))
 :pattern ( ($generated@@76 $generated@@624 $generated@@47 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@626) $generated@@4)) ($generated@@76 $generated@@626 $generated@@44 $generated@@625))
 :pattern ( ($generated@@76 $generated@@626 $generated@@44 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@628) $generated@@474)) ($generated@@76 $generated@@628 $generated@@45 $generated@@627))
 :pattern ( ($generated@@76 $generated@@628 $generated@@45 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@630) $generated@@148)) ($generated@@76 $generated@@630 $generated@@48 $generated@@629))
 :pattern ( ($generated@@76 $generated@@630 $generated@@48 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@150 $generated@@148)) (= (type $generated@@632) $generated@@66)) (= ($generated@@167 $generated@@631 ($generated@@282 $generated@@632)) (forall (($generated@@633 Int) ) (!  (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@300 $generated@@631))) ($generated@@258 ($generated@@363 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@363 $generated@@631 $generated@@633))
))))
 :pattern ( ($generated@@167 $generated@@631 ($generated@@282 $generated@@632)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 Int) ) (!  (=> (= (type $generated@@635) ($generated@@150 $generated@@148)) (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@300 $generated@@635))) (< ($generated@@554 ($generated@@359 $generated@@171 ($generated@@363 $generated@@635 $generated@@636))) ($generated@@634 $generated@@635))))
 :pattern ( ($generated@@554 ($generated@@359 $generated@@171 ($generated@@363 $generated@@635 $generated@@636))))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@317 $generated@@148 $generated@@148)) (= (type $generated@@638) $generated@@66)) (= (type $generated@@639) $generated@@66)) ($generated@@167 $generated@@637 ($generated@@434 $generated@@638 $generated@@639))) (and (and ($generated@@167 ($generated@@315 $generated@@637) ($generated@@267 $generated@@638)) ($generated@@167 ($generated@@375 $generated@@637) ($generated@@267 $generated@@639))) ($generated@@167 ($generated@@408 $generated@@637) ($generated@@267 ($generated@@170 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@167 $generated@@637 ($generated@@434 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@335 $generated@@148 $generated@@148)) (= (type $generated@@641) $generated@@66)) (= (type $generated@@642) $generated@@66)) ($generated@@167 $generated@@640 ($generated@@442 $generated@@641 $generated@@642))) (and (and ($generated@@167 ($generated@@333 $generated@@640) ($generated@@272 $generated@@641)) ($generated@@167 ($generated@@386 $generated@@640) ($generated@@272 $generated@@642))) ($generated@@167 ($generated@@416 $generated@@640) ($generated@@272 ($generated@@170 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@167 $generated@@640 ($generated@@442 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@2) ($generated@@167 $generated@@643 $generated@@46))
 :pattern ( ($generated@@167 $generated@@643 $generated@@46))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@3) ($generated@@167 $generated@@644 $generated@@47))
 :pattern ( ($generated@@167 $generated@@644 $generated@@47))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@4) ($generated@@167 $generated@@645 $generated@@44))
 :pattern ( ($generated@@167 $generated@@645 $generated@@44))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@474) ($generated@@167 $generated@@646 $generated@@45))
 :pattern ( ($generated@@167 $generated@@646 $generated@@45))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@148) ($generated@@167 $generated@@647 $generated@@48))
 :pattern ( ($generated@@167 $generated@@647 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@651) ($generated@@191 $generated@@79 $generated@@4))) (= (type $generated@@652) $generated@@79)) (= (type $generated@@653) ($generated@@191 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@655  (=> (not (= $generated@@648 ($generated@@140 0))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@167 ($generated@@8 (- $generated@@648 1)) $generated@@134)) (=> ($generated@@167 ($generated@@8 (- $generated@@648 1)) $generated@@134) (=> (and (= $generated@@649 (- $generated@@648 1)) ($generated@@76 ($generated@@8 $generated@@649) $generated@@134 $generated@@650)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@648) (= $generated@@649 $generated@@648))) (=> (or (<= 0 $generated@@648) (= $generated@@649 $generated@@648)) (=> (= (ControlFlow 0 5) (- 0 4)) (< $generated@@649 $generated@@648))))))))))
(let (($generated@@656  (=> (= $generated@@648 ($generated@@140 0)) (=> (and $generated@@143 (= (ControlFlow 0 3) (- 0 2))) ($generated@@167 ($generated@@278 $generated@@144) ($generated@@282 $generated@@134))))))
(let (($generated@@657  (=> (= $generated@@651 ($generated@@245 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 3) $generated@@656) (=> (= (ControlFlow 0 8) 5) $generated@@655)))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@653 ($generated@@190 $generated@@652 $generated@@650 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@658) (=> (= (ControlFlow 0 9) 8) $generated@@657)))))
(let (($generated@@660  (=> (and (and (and ($generated@@287 $generated@@650) ($generated@@654 $generated@@650)) (<= ($generated@@140 0) $generated@@648)) (and (= 1 $generated@@137) (= (ControlFlow 0 10) 9))) $generated@@659)))
$generated@@660)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U T@U) Int)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@447 (T@T) T@U)
(declare-fun $generated@@471 () T@T)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@520 () T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@525 (T@U Int) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@141 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@141 0)))
)))
(assert (= ($generated@@1 $generated@@149) 15))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@149) (= (type $generated@@152) $generated@@81)) (or ($generated@@150 $generated@@152) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@152 $generated@@80)))) true)
 :pattern ( ($generated@@148 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@81)) ($generated@@145 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@145 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@81) (= (type $generated@@167) $generated@@81)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@81)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@145 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@145 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@83 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@83) (= (type $generated@@226) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@83)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@83 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@83) (= (type $generated@@238) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@83)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@81)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@68) (= (type $generated@@249) $generated@@68)) (= (type $generated@@250) $generated@@163)) (= (type $generated@@251) $generated@@163)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@154 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@154 $generated@@248 $generated@@249)))
)))
(assert ($generated@@145 $generated@@169 $generated@@80))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@252)) ($generated@@78 $generated@@169 $generated@@80 $generated@@252))
 :pattern ( ($generated@@78 $generated@@169 $generated@@80 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@81) (= (type $generated@@254) $generated@@81)) (= ($generated@@160 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@160 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@81) (= (type $generated@@257) $generated@@81)) (= ($generated@@255 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@81)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@262) $generated@@81) (= (type $generated@@263) $generated@@81)) (and ($generated@@258 $generated@@262) ($generated@@258 $generated@@263))) (= ($generated@@255 $generated@@262 $generated@@263)  (and (= ($generated@@259 $generated@@262) ($generated@@259 $generated@@263)) ($generated@@255 ($generated@@260 $generated@@262) ($generated@@260 $generated@@263)))))
 :pattern ( ($generated@@255 $generated@@262 $generated@@263) ($generated@@258 $generated@@262))
 :pattern ( ($generated@@255 $generated@@262 $generated@@263) ($generated@@258 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@145 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@163) ($generated@@0 ($generated@@88 $generated@@266 $generated@@268))) ($generated@@245 $generated@@268 $generated@@267))
 :pattern ( ($generated@@88 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@145 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@145 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@0 ($generated@@88 $generated@@271 $generated@@273))) ($generated@@245 $generated@@273 $generated@@272))
 :pattern ( ($generated@@88 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@145 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@81) (= (type $generated@@282) $generated@@81)) (and ($generated@@280 $generated@@281) ($generated@@280 $generated@@282))) (= ($generated@@255 $generated@@281 $generated@@282) true))
 :pattern ( ($generated@@255 $generated@@281 $generated@@282) ($generated@@280 $generated@@281))
 :pattern ( ($generated@@255 $generated@@281 $generated@@282) ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) $generated@@68)) (= (type $generated@@286) $generated@@163)) (= (type $generated@@287) $generated@@163)) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@288)) (= ($generated@@78 ($generated@@244 $generated@@286 $generated@@287) ($generated@@154 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@78 ($generated@@244 $generated@@286 $generated@@287) ($generated@@154 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@81) (= ($generated@@153 $generated@@289) (= ($generated@@168 $generated@@289) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@280 $generated@@290) (= ($generated@@168 $generated@@290) $generated@@63)))
 :pattern ( ($generated@@280 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@81) (= ($generated@@258 $generated@@291) (= ($generated@@168 $generated@@291) $generated@@65)))
 :pattern ( ($generated@@258 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@81) ($generated@@153 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@163) (= (type $generated@@294) $generated@@163)) (= $generated@@292 ($generated@@244 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@153 $generated@@292))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@81) ($generated@@258 $generated@@295)) (exists (($generated@@296 Int) ($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@81) (= $generated@@295 ($generated@@79 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@258 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 18)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@81) ($generated@@280 $generated@@306)) (= $generated@@306 $generated@@169))
 :pattern ( ($generated@@280 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@163)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@283 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@78 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@283 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@82 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@86 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@82 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@88 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@88 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@88 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 20)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@82 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@88 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@88 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@86 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@82 $generated@@355 $generated@@2)) (= ($generated@@172 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@88 $generated@@354 $generated@@356))) (<= ($generated ($generated@@88 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@88 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@172 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@163) ($generated@@245 $generated@@360 $generated@@80)) (and (= ($generated@@307 ($generated@@357 $generated@@81 $generated@@360)) $generated@@360) ($generated@@145 ($generated@@357 $generated@@81 $generated@@360) $generated@@80)))
 :pattern ( ($generated@@245 $generated@@360 $generated@@80))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@149)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@149) (= (type $generated@@364) $generated@@81)) (or ($generated@@150 $generated@@364) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@364 $generated@@80)))) (and (=> (not ($generated@@280 $generated@@364)) ($generated@@150 ($generated@@260 $generated@@364))) (= ($generated@@148 ($generated@@361 $generated@@363) $generated@@364) (ite ($generated@@280 $generated@@364) (let (($generated@@365 ($generated@@274 0)))
$generated@@365) (+ ($generated@@148 $generated@@363 ($generated@@260 $generated@@364)) ($generated@@259 $generated@@364))))))
 :pattern ( ($generated@@148 ($generated@@361 $generated@@363) $generated@@364))
))))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(let (($generated@@368 ($generated@@321 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@320 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@319 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@318 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@318 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@322 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@82 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@322 (type $generated@@373))))
(let (($generated@@375 ($generated@@321 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@320 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@319 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@88 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(let (($generated@@379 ($generated@@339 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@338 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@337 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@336 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@336 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@340 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@82 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@340 (type $generated@@384))))
(let (($generated@@386 ($generated@@339 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@338 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@337 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@88 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@145 $generated@@388 ($generated@@171 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@163) (< 0 ($generated ($generated@@88 $generated@@388 $generated@@390)))) ($generated@@245 $generated@@390 $generated@@389))
 :pattern ( ($generated@@88 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@145 $generated@@388 ($generated@@171 $generated@@389)))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@391) $generated@@149) (= (type $generated@@392) $generated@@81)) (or ($generated@@150 ($generated@@276 $generated@@392)) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@392 $generated@@80)))) (and (=> (not ($generated@@0 ($generated@@276 ($generated@@11 ($generated@@280 ($generated@@276 $generated@@392)))))) ($generated@@150 ($generated@@276 ($generated@@260 ($generated@@276 $generated@@392))))) (= ($generated@@148 ($generated@@361 $generated@@391) ($generated@@276 $generated@@392)) (ite ($generated@@280 ($generated@@276 $generated@@392)) (let (($generated@@393 ($generated@@274 0)))
$generated@@393) ($generated@@274 (+ ($generated@@148 ($generated@@361 $generated@@391) ($generated@@276 ($generated@@260 ($generated@@276 $generated@@392)))) ($generated@@259 ($generated@@276 $generated@@392))))))))
 :weight 3
 :pattern ( ($generated@@148 ($generated@@361 $generated@@391) ($generated@@276 $generated@@392)))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@395) $generated@@68)) (= (type $generated@@396) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@394 ($generated@@264 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@163) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@283 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@78 $generated@@394 ($generated@@264 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@398 ($generated@@269 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@163) ($generated@@0 ($generated@@88 $generated@@398 $generated@@401))) ($generated@@283 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@88 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@78 $generated@@398 ($generated@@269 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= ($generated ($generated@@88 ($generated@@313 $generated@@403) $generated@@402)) 0))
 :pattern ( (let (($generated@@403 (type $generated@@402)))
($generated@@88 ($generated@@313 $generated@@403) $generated@@402)))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@322 (type $generated@@407))))
(let (($generated@@409 ($generated@@321 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@411) $generated@@163)) (= ($generated@@0 ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@318 $generated@@410) ($generated@@161 ($generated@@357 $generated@@81 $generated@@411)))) (= ($generated@@88 ($generated@@405 $generated@@410) ($generated@@161 ($generated@@357 $generated@@81 $generated@@411))) ($generated@@162 ($generated@@357 $generated@@81 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@340 (type $generated@@415))))
(let (($generated@@417 ($generated@@339 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@82 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@419) $generated@@163)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@336 $generated@@418) ($generated@@161 ($generated@@357 $generated@@81 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@161 ($generated@@357 $generated@@81 $generated@@419))) ($generated@@162 ($generated@@357 $generated@@81 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@321 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@320 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@370 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@318 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@370 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@339 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@338 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@381 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@336 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@336 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@381 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@163) ($generated@@0 ($generated@@88 ($generated@@318 $generated@@433) $generated@@437))) (and ($generated@@283 ($generated@@88 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@283 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@68)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@442) $generated@@68)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@163) ($generated@@0 ($generated@@88 ($generated@@336 $generated@@441) $generated@@445))) (and ($generated@@283 ($generated@@88 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@283 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@88 ($generated@@336 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@78 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@81) ($generated@@145 $generated@@446 $generated@@80)) (or ($generated@@280 $generated@@446) ($generated@@258 $generated@@446)))
 :pattern ( ($generated@@258 $generated@@446) ($generated@@145 $generated@@446 $generated@@80))
 :pattern ( ($generated@@280 $generated@@446) ($generated@@145 $generated@@446 $generated@@80))
)))
(assert (forall (($generated@@448 T@T) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@82 $generated@@448 $generated@@4))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@340 (type $generated@@449))))
(let (($generated@@451 ($generated@@339 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@338 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@337 $generated@@451 $generated@@450)) (= ($generated@@336 $generated@@449) ($generated@@447 $generated@@451))))))
 :pattern ( ($generated@@336 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@340 (type $generated@@452))))
(let (($generated@@454 ($generated@@339 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@338 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@337 $generated@@454 $generated@@453)) (= ($generated@@381 $generated@@452) ($generated@@447 $generated@@453))))))
 :pattern ( ($generated@@381 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@340 (type $generated@@455))))
(let (($generated@@457 ($generated@@339 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@338 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@337 $generated@@457 $generated@@456)) (= ($generated@@412 $generated@@455) ($generated@@447 $generated@@163))))))
 :pattern ( ($generated@@412 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@322 (type $generated@@458))))
(let (($generated@@460 ($generated@@321 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@320 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@319 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@163) (= (type $generated@@462) $generated@@163)) ($generated@@0 ($generated@@88 ($generated@@404 $generated@@458) ($generated@@307 ($generated@@244 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@404 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@340 (type $generated@@463))))
(let (($generated@@465 ($generated@@339 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@338 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@337 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@163) (= (type $generated@@467) $generated@@163)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@463) ($generated@@307 ($generated@@244 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@412 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@163) ($generated@@245 $generated@@468 $generated@@46)) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@468)) $generated@@468) ($generated@@145 ($generated@@357 $generated@@2 $generated@@468) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@468 $generated@@46))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@163) ($generated@@245 $generated@@469 $generated@@47)) (and (= ($generated@@307 ($generated@@357 $generated@@3 $generated@@469)) $generated@@469) ($generated@@145 ($generated@@357 $generated@@3 $generated@@469) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@469 $generated@@47))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@163) ($generated@@245 $generated@@470 $generated@@44)) (and (= ($generated@@307 ($generated@@357 $generated@@4 $generated@@470)) $generated@@470) ($generated@@145 ($generated@@357 $generated@@4 $generated@@470) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@470 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@471) 21))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@163) ($generated@@245 $generated@@472 $generated@@45)) (and (= ($generated@@307 ($generated@@357 $generated@@471 $generated@@472)) $generated@@472) ($generated@@145 ($generated@@357 $generated@@471 $generated@@472) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@472 $generated@@45))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@68) (= ($generated@@245 ($generated@@307 $generated@@473) $generated@@474) ($generated@@145 $generated@@473 $generated@@474)))
 :pattern ( ($generated@@245 ($generated@@307 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@86 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@82 $generated@@476 $generated@@2)) (<= 0 ($generated@@312 $generated@@475))))
 :pattern ( ($generated@@312 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@301 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@300 $generated@@478)) (<= 0 ($generated@@299 $generated@@477))))
 :pattern ( ($generated@@299 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@430 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@430 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@430 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@430 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@76 ($generated@@430 $generated@@487 $generated@@488)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@438 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@438 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@438 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@438 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@76 ($generated@@438 $generated@@497 $generated@@498)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@163) (= (type $generated@@500) $generated@@163)) (= ($generated@@168 ($generated@@244 $generated@@499 $generated@@500)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@501 ($generated@@154 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@154 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@154 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@154 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@163) (= (type $generated@@510) $generated@@163)) (= ($generated@@161 ($generated@@244 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@244 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@163) (= (type $generated@@512) $generated@@163)) (= ($generated@@162 ($generated@@244 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@244 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 Int) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@81) (= ($generated@@168 ($generated@@79 $generated@@513 $generated@@514)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 Int) ($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@81) (= ($generated@@259 ($generated@@79 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@79 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 Int) ($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@81) (= ($generated@@260 ($generated@@79 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@79 $generated@@517 $generated@@518))
)))
(assert  (and (forall (($generated@@521 T@U) ) (! (= (type ($generated@@519 $generated@@521)) $generated@@149)
 :pattern ( ($generated@@519 $generated@@521))
)) (= (type $generated@@520) $generated@@149)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@149) (= (type $generated@@523) $generated@@81)) (= ($generated@@148 $generated@@522 $generated@@523) ($generated@@148 $generated@@520 $generated@@523)))
 :pattern ( ($generated@@148 ($generated@@519 $generated@@522) $generated@@523))
)))
(assert  (and (forall (($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@526))
)) (forall (($generated@@527 T@U) ($generated@@528 Int) ) (! (let (($generated@@529 ($generated@@301 (type $generated@@527))))
(= (type ($generated@@525 $generated@@527 $generated@@528)) $generated@@529))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
))))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@300 $generated@@163)) (= (type $generated@@531) $generated@@68)) (= (type $generated@@532) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@530 ($generated@@524 $generated@@531) $generated@@532) (forall (($generated@@533 Int) ) (!  (=> (and (<= 0 $generated@@533) (< $generated@@533 ($generated@@299 $generated@@530))) ($generated@@283 ($generated@@525 $generated@@530 $generated@@533) $generated@@531 $generated@@532))
 :pattern ( ($generated@@525 $generated@@530 $generated@@533))
))))
 :pattern ( ($generated@@78 $generated@@530 ($generated@@524 $generated@@531) $generated@@532))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@534 ($generated@@141 $generated@@535)) $generated@@535)
 :pattern ( ($generated@@141 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@536 ($generated@@264 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@264 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@539)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@540 ($generated@@269 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@269 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@543)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@68)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@544 ($generated@@171 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@171 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@547)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@68)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@548 ($generated@@524 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@524 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@68) (= ($generated@@76 ($generated@@524 $generated@@551)) $generated@@57))
 :pattern ( ($generated@@524 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@357 $generated@@553 ($generated@@307 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@307 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) (= ($generated@@145 $generated@@554 ($generated@@430 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) ($generated@@0 ($generated@@88 ($generated@@318 $generated@@554) $generated@@557))) (and ($generated@@245 ($generated@@88 ($generated@@405 $generated@@554) $generated@@557) $generated@@556) ($generated@@245 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@554) $generated@@557))
 :pattern ( ($generated@@88 ($generated@@318 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@145 $generated@@554 ($generated@@430 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) (= ($generated@@145 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@163) ($generated@@0 ($generated@@88 ($generated@@336 $generated@@558) $generated@@561))) (and ($generated@@245 ($generated@@88 ($generated@@413 $generated@@558) $generated@@561) $generated@@560) ($generated@@245 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@558) $generated@@561))
 :pattern ( ($generated@@88 ($generated@@336 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@145 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@163) (= (type $generated@@565) $generated@@163)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@244 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@244 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@163) (= (type $generated@@567) $generated@@163)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@244 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@244 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@81) (< ($generated@@563 $generated@@569) ($generated@@563 ($generated@@79 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@79 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) (= (type $generated@@571) $generated@@81)) (= ($generated@@148 ($generated@@361 $generated@@570) $generated@@571) ($generated@@148 $generated@@570 $generated@@571)))
 :pattern ( ($generated@@148 ($generated@@361 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@163) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) ($generated@@245 $generated@@572 ($generated@@430 $generated@@573 $generated@@574))) (and (= ($generated@@307 ($generated@@357 ($generated@@320 $generated@@163 $generated@@163) $generated@@572)) $generated@@572) ($generated@@145 ($generated@@357 ($generated@@320 $generated@@163 $generated@@163) $generated@@572) ($generated@@430 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@245 $generated@@572 ($generated@@430 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) $generated@@163) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) ($generated@@245 $generated@@575 ($generated@@438 $generated@@576 $generated@@577))) (and (= ($generated@@307 ($generated@@357 ($generated@@338 $generated@@163 $generated@@163) $generated@@575)) $generated@@575) ($generated@@145 ($generated@@357 ($generated@@338 $generated@@163 $generated@@163) $generated@@575) ($generated@@438 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@245 $generated@@575 ($generated@@438 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@163)) ($generated@@245 $generated@@580 ($generated@@154 $generated@@578 $generated@@579))) (and (= ($generated@@307 ($generated@@357 $generated@@81 $generated@@580)) $generated@@580) ($generated@@145 ($generated@@357 $generated@@81 $generated@@580) ($generated@@154 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@245 $generated@@580 ($generated@@154 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (not ($generated@@0 ($generated@@88 ($generated@@447 $generated@@582) $generated@@581))))
 :pattern ( (let (($generated@@582 (type $generated@@581)))
($generated@@88 ($generated@@447 $generated@@582) $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@73)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@68) (= (type $generated@@586) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@585 $generated@@586)) $generated@@62) (= ($generated@@583 ($generated@@154 $generated@@585 $generated@@586)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@81) (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@588) (and ($generated@@258 $generated@@587) ($generated@@78 $generated@@587 $generated@@80 $generated@@588)))) ($generated@@78 ($generated@@8 ($generated@@259 $generated@@587)) $generated@@46 $generated@@588))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@259 $generated@@587)) $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@81) (= ($generated@@562 ($generated@@307 $generated@@589)) ($generated@@563 $generated@@589)))
 :pattern ( ($generated@@562 ($generated@@307 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@163) ($generated@@245 $generated@@590 ($generated@@141 0))) (and (= ($generated@@307 ($generated@@357 $generated@@2 $generated@@590)) $generated@@590) ($generated@@145 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@590) ($generated@@141 0))))
 :pattern ( ($generated@@245 $generated@@590 ($generated@@141 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@163) (= (type $generated@@592) $generated@@68)) ($generated@@245 $generated@@591 ($generated@@264 $generated@@592))) (and (= ($generated@@307 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@591)) $generated@@591) ($generated@@145 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@591) ($generated@@264 $generated@@592))))
 :pattern ( ($generated@@245 $generated@@591 ($generated@@264 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@163) (= (type $generated@@594) $generated@@68)) ($generated@@245 $generated@@593 ($generated@@269 $generated@@594))) (and (= ($generated@@307 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@593)) $generated@@593) ($generated@@145 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@593) ($generated@@269 $generated@@594))))
 :pattern ( ($generated@@245 $generated@@593 ($generated@@269 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@163) (= (type $generated@@596) $generated@@68)) ($generated@@245 $generated@@595 ($generated@@171 $generated@@596))) (and (= ($generated@@307 ($generated@@357 ($generated@@82 $generated@@163 $generated@@2) $generated@@595)) $generated@@595) ($generated@@145 ($generated@@357 ($generated@@82 $generated@@163 $generated@@2) $generated@@595) ($generated@@171 $generated@@596))))
 :pattern ( ($generated@@245 $generated@@595 ($generated@@171 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@163) (= (type $generated@@598) $generated@@68)) ($generated@@245 $generated@@597 ($generated@@524 $generated@@598))) (and (= ($generated@@307 ($generated@@357 ($generated@@300 $generated@@163) $generated@@597)) $generated@@597) ($generated@@145 ($generated@@357 ($generated@@300 $generated@@163) $generated@@597) ($generated@@524 $generated@@598))))
 :pattern ( ($generated@@245 $generated@@597 ($generated@@524 $generated@@598)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@583 $generated@@80) $generated@@67))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@599 ($generated@@171 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@163) (< 0 ($generated ($generated@@88 $generated@@599 $generated@@602)))) ($generated@@283 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@88 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@171 $generated@@600) $generated@@601))
)))
(assert (= $generated@@169 ($generated@@276 $generated@@169)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@605) (and ($generated@@153 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@78 $generated@@603 ($generated@@154 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@154 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@283 ($generated@@161 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@283 ($generated@@161 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@609) (and ($generated@@153 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@68) ($generated@@78 $generated@@607 ($generated@@154 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@78 $generated@@607 ($generated@@154 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@283 ($generated@@162 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@283 ($generated@@162 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@81) (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@612) (and ($generated@@258 $generated@@611) ($generated@@78 $generated@@611 $generated@@80 $generated@@612)))) ($generated@@78 ($generated@@260 $generated@@611) $generated@@80 $generated@@612))
 :pattern ( ($generated@@78 ($generated@@260 $generated@@611) $generated@@80 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@163) (= (type $generated@@614) $generated@@163)) (= ($generated@@244 ($generated@@276 $generated@@613) ($generated@@276 $generated@@614)) ($generated@@276 ($generated@@244 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@244 ($generated@@276 $generated@@613) ($generated@@276 $generated@@614)))
)))
(assert (forall (($generated@@615 Int) ($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@81) (= ($generated@@79 ($generated@@274 $generated@@615) ($generated@@276 $generated@@616)) ($generated@@276 ($generated@@79 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@79 ($generated@@274 $generated@@615) ($generated@@276 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@274 $generated@@617))) ($generated@@276 ($generated@@307 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@274 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (! (= ($generated@@307 ($generated@@276 $generated@@618)) ($generated@@276 ($generated@@307 $generated@@618)))
 :pattern ( ($generated@@307 ($generated@@276 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@81) (= ($generated@@145 ($generated@@79 $generated@@619 $generated@@620) $generated@@80)  (and ($generated@@145 ($generated@@8 $generated@@619) $generated@@46) ($generated@@145 $generated@@620 $generated@@80))))
 :pattern ( ($generated@@145 ($generated@@79 $generated@@619 $generated@@620) $generated@@80))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@301 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@300 $generated@@622)) (= ($generated@@299 $generated@@621) 0)) (= $generated@@621 ($generated@@298 $generated@@622))))
 :pattern ( ($generated@@299 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@82 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@312 ($generated@@89 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@312 $generated@@623) ($generated ($generated@@88 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@312 ($generated@@89 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@628) $generated@@2)) ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@630) $generated@@3)) ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@632) $generated@@4)) ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@634) $generated@@471)) ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@636) $generated@@163)) ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@300 $generated@@163)) (= (type $generated@@638) $generated@@68)) (= ($generated@@145 $generated@@637 ($generated@@524 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@299 $generated@@637))) ($generated@@245 ($generated@@525 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@525 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@145 $generated@@637 ($generated@@524 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@300 $generated@@163)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@299 $generated@@641))) (< ($generated@@563 ($generated@@357 $generated@@81 ($generated@@525 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@563 ($generated@@357 $generated@@81 ($generated@@525 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@644) $generated@@68)) (= (type $generated@@645) $generated@@68)) ($generated@@145 $generated@@643 ($generated@@430 $generated@@644 $generated@@645))) (and (and ($generated@@145 ($generated@@318 $generated@@643) ($generated@@264 $generated@@644)) ($generated@@145 ($generated@@370 $generated@@643) ($generated@@264 $generated@@645))) ($generated@@145 ($generated@@404 $generated@@643) ($generated@@264 ($generated@@154 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@145 $generated@@643 ($generated@@430 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) ($generated@@145 $generated@@646 ($generated@@438 $generated@@647 $generated@@648))) (and (and ($generated@@145 ($generated@@336 $generated@@646) ($generated@@269 $generated@@647)) ($generated@@145 ($generated@@381 $generated@@646) ($generated@@269 $generated@@648))) ($generated@@145 ($generated@@412 $generated@@646) ($generated@@269 ($generated@@154 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@145 $generated@@646 ($generated@@438 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@2) ($generated@@145 $generated@@649 $generated@@46))
 :pattern ( ($generated@@145 $generated@@649 $generated@@46))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@3) ($generated@@145 $generated@@650 $generated@@47))
 :pattern ( ($generated@@145 $generated@@650 $generated@@47))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@4) ($generated@@145 $generated@@651 $generated@@44))
 :pattern ( ($generated@@145 $generated@@651 $generated@@44))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@471) ($generated@@145 $generated@@652 $generated@@45))
 :pattern ( ($generated@@145 $generated@@652 $generated@@45))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@163) ($generated@@145 $generated@@653 $generated@@48))
 :pattern ( ($generated@@145 $generated@@653 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@654) $generated@@81) (= (type $generated@@656) $generated@@81)) (= (type $generated@@657) $generated@@81)) (= (type $generated@@658) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@659) $generated@@81)) (= (type $generated@@662) $generated@@81)) (= (type $generated@@663) ($generated@@178 $generated@@83 $generated@@4))) (= (type $generated@@664) $generated@@83)) (= (type $generated@@665) ($generated@@178 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@667 true))
(let (($generated@@668  (=> (and (= $generated@@654 ($generated@@79 $generated@@655 $generated@@656)) ($generated@@145 $generated@@656 $generated@@80)) (=> (and (and (and ($generated@@145 $generated@@657 $generated@@80) ($generated@@78 $generated@@657 $generated@@80 $generated@@658)) (and (= $generated@@659 $generated@@656) ($generated@@145 $generated@@659 $generated@@80))) (and (and (= $generated@@657 $generated@@659) (= $generated@@660 $generated@@655)) (and ($generated@@145 ($generated@@8 $generated@@660) $generated@@46) (= $generated@@661 $generated@@660)))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@258 $generated@@654)) (=> ($generated@@258 $generated@@654) (=> (and (= $generated@@662 ($generated@@260 $generated@@654)) ($generated@@78 $generated@@662 $generated@@80 $generated@@658)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@563 $generated@@662) ($generated@@563 $generated@@654))) (=> (< ($generated@@563 $generated@@662) ($generated@@563 $generated@@654)) (=> (and ($generated@@150 ($generated@@260 $generated@@654)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@258 $generated@@654)))))))))))
(let (($generated@@669  (=> (not (= $generated@@654 $generated@@169)) (and (=> (= (ControlFlow 0 9) 5) $generated@@668) (=> (= (ControlFlow 0 9) 8) $generated@@667)))))
(let (($generated@@670  (=> (and (= $generated@@654 $generated@@169) (= (ControlFlow 0 3) (- 0 2))) ($generated@@280 $generated@@654))))
(let (($generated@@671  (=> (= $generated@@663 ($generated@@232 $generated@@664 $generated@@658 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 3) $generated@@670) (=> (= (ControlFlow 0 10) 9) $generated@@669)))))
(let (($generated@@672 true))
(let (($generated@@673  (=> (= $generated@@665 ($generated@@177 $generated@@664 $generated@@658 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@672) (=> (= (ControlFlow 0 11) 10) $generated@@671)))))
(let (($generated@@674  (=> (and (and (and ($generated@@85 $generated@@658) ($generated@@666 $generated@@658)) ($generated@@145 $generated@@654 $generated@@80)) (and (= 1 $generated@@147) (= (ControlFlow 0 12) 11))) $generated@@673)))
$generated@@674)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (T@U Int) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (Int) Bool)
(declare-fun $generated@@139 (Int) Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 () T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (= ($generated@@1 $generated@@137) 14) (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@137)
 :pattern ( ($generated@@136 $generated@@140))
))))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (and (= (type $generated@@141) $generated@@137) (or ($generated@@138 $generated@@142) (and (not (= 1 $generated@@134)) (<= ($generated@@139 0) $generated@@142)))) (and (=> (not (= $generated@@142 ($generated@@139 0))) ($generated@@138 (- $generated@@142 1))) (= ($generated@@135 ($generated@@136 $generated@@141) $generated@@142) (ite (= $generated@@142 ($generated@@139 0)) 88 (- ($generated@@135 $generated@@141 (- $generated@@142 1)) 1)))))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@141) $generated@@142))
))))
(assert (= (type $generated@@143) $generated@@66))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@144 $generated@@143 $generated@@145))
 :pattern ( ($generated@@76 $generated@@144 $generated@@143 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@77 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@66)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@66) (= (type $generated@@154) $generated@@66)) (= (type $generated@@155) $generated@@150)) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@146 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 16) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@150) (= (type $generated@@163) $generated@@150)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@66)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@78 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@66)) ($generated@@146 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@146 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 17)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@79 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@69 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@79) (= (type $generated@@219) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@220) ($generated@@68 $generated@@4))) (= (type $generated@@222) $generated@@79)) (= (type $generated@@223) ($generated@@68 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@79 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@69 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@79) (= (type $generated@@231) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@232) ($generated@@68 $generated@@4))) (= (type $generated@@234) $generated@@79)) (= (type $generated@@235) ($generated@@68 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@150)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@66) (= (type $generated@@242) $generated@@66)) (= (type $generated@@243) $generated@@159)) (= (type $generated@@244) $generated@@159)) (= ($generated@@146 ($generated@@237 $generated@@243 $generated@@244) ($generated@@149 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@146 ($generated@@237 $generated@@243 $generated@@244) ($generated@@149 $generated@@241 $generated@@242)))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@245 T@U) ($generated@@246 Int) ) (!  (=> (and (= (type $generated@@245) $generated@@137) (or ($generated@@138 ($generated@@139 $generated@@246)) (and (not (= 1 $generated@@134)) (<= ($generated@@139 0) $generated@@246)))) (and (=> (not (= ($generated@@139 $generated@@246) ($generated@@139 0))) ($generated@@138 ($generated@@139 (- $generated@@246 1)))) (= ($generated@@135 ($generated@@136 $generated@@245) ($generated@@139 $generated@@246)) (ite (= ($generated@@139 $generated@@246) ($generated@@139 0)) 88 (- ($generated@@135 ($generated@@136 $generated@@245) ($generated@@139 (- $generated@@246 1))) 1)))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@136 $generated@@245) ($generated@@139 $generated@@246)))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) (= (type $generated@@248) $generated@@150)) (= ($generated@@156 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@156 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@78 $generated@@159 $generated@@4)) (= (type $generated@@252) $generated@@66)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@159) ($generated@@0 ($generated@@83 $generated@@251 $generated@@253))) ($generated@@238 $generated@@253 $generated@@252))
 :pattern ( ($generated@@83 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@66)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@78 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@66)) (= ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@83 $generated@@256 $generated@@258))) ($generated@@238 $generated@@258 $generated@@257))
 :pattern ( ($generated@@83 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@139 $generated@@259) $generated@@259)
 :pattern ( ($generated@@139 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) $generated@@66)) (= (type $generated@@268) $generated@@159)) (= (type $generated@@269) $generated@@159)) (= (type $generated@@270) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@264 $generated@@270)) (= ($generated@@76 ($generated@@237 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@76 ($generated@@237 $generated@@268 $generated@@269) ($generated@@149 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@70)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@150) (= ($generated@@148 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@62)))
 :pattern ( ($generated@@148 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@150) ($generated@@148 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@159) (= (type $generated@@276) $generated@@159)) (= $generated@@274 ($generated@@237 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@148 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 18)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@2) (= ($generated@@146 $generated@@285 $generated@@143) (<= ($generated@@139 0) ($generated $generated@@285))))
 :pattern ( ($generated@@146 $generated@@285 $generated@@143))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@159)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@76 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@265 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@78 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@81 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@83 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@78 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@165 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@83 $generated@@333 $generated@@335))) (<= ($generated ($generated@@83 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@83 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@165 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@159) ($generated@@238 $generated@@339 $generated@@143)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@146 ($generated@@336 $generated@@2 $generated@@339) $generated@@143)))
 :pattern ( ($generated@@238 $generated@@339 $generated@@143))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@78 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@78 $generated@@159 $generated@@2)) (= (type $generated@@363) $generated@@66)) (= ($generated@@146 $generated@@362 ($generated@@164 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@159) (< 0 ($generated ($generated@@83 $generated@@362 $generated@@364)))) ($generated@@238 $generated@@364 $generated@@363))
 :pattern ( ($generated@@83 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@146 $generated@@362 ($generated@@164 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@159 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@249 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@159) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@265 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@249 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@159 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@254 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@159) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@265 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@254 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@83 ($generated@@292 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@83 ($generated@@292 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@159 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@301 (type $generated@@378))))
(let (($generated@@380 ($generated@@300 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@382) $generated@@159)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@381) ($generated@@157 ($generated@@336 $generated@@150 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@157 ($generated@@336 $generated@@150 $generated@@382))) ($generated@@158 ($generated@@336 $generated@@150 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@159 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@319 (type $generated@@386))))
(let (($generated@@388 ($generated@@318 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@390) $generated@@159)) (= ($generated@@0 ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@389) ($generated@@157 ($generated@@336 $generated@@150 $generated@@390)))) (= ($generated@@83 ($generated@@384 $generated@@389) ($generated@@157 ($generated@@336 $generated@@150 $generated@@390))) ($generated@@158 ($generated@@336 $generated@@150 $generated@@390))))))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@300 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@299 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@83 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@391) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@318 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@317 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@83 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@83 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@159) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@404) $generated@@408))) (and ($generated@@265 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@265 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@159) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@412) $generated@@416))) (and ($generated@@265 ($generated@@83 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@265 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@78 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@319 (type $generated@@419))))
(let (($generated@@421 ($generated@@318 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@317 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@316 $generated@@421 $generated@@420)) (= ($generated@@315 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@315 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@319 (type $generated@@422))))
(let (($generated@@424 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@316 $generated@@424 $generated@@423)) (= ($generated@@355 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@355 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@383 $generated@@425) ($generated@@417 $generated@@159))))))
 :pattern ( ($generated@@383 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@301 (type $generated@@428))))
(let (($generated@@430 ($generated@@300 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@299 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@298 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@159) (= (type $generated@@432) $generated@@159)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@428) ($generated@@286 ($generated@@237 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@375 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@319 (type $generated@@433))))
(let (($generated@@435 ($generated@@318 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@317 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@316 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@159) (= (type $generated@@437) $generated@@159)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@433) ($generated@@286 ($generated@@237 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@383 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@159) ($generated@@238 $generated@@438 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@438)) $generated@@438) ($generated@@146 ($generated@@336 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@159) ($generated@@238 $generated@@439 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@439)) $generated@@439) ($generated@@146 ($generated@@336 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@159) ($generated@@238 $generated@@440 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@440)) $generated@@440) ($generated@@146 ($generated@@336 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 21))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@159) ($generated@@238 $generated@@442 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@441 $generated@@442)) $generated@@442) ($generated@@146 ($generated@@336 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@66) (= ($generated@@238 ($generated@@286 $generated@@443) $generated@@444) ($generated@@146 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@238 ($generated@@286 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@81 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@78 $generated@@446 $generated@@2)) (<= 0 ($generated@@291 $generated@@445))))
 :pattern ( ($generated@@291 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@280 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@279 $generated@@448)) (<= 0 ($generated@@278 $generated@@447))))
 :pattern ( ($generated@@278 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@401 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@401 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@409 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@409 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@409 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@74 ($generated@@409 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@159) (= (type $generated@@470) $generated@@159)) (= ($generated@@271 ($generated@@237 $generated@@469 $generated@@470)) $generated@@62))
 :pattern ( ($generated@@237 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@149 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@149 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@149 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@149 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@159) (= (type $generated@@480) $generated@@159)) (= ($generated@@157 ($generated@@237 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@237 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@159) (= (type $generated@@482) $generated@@159)) (= ($generated@@158 ($generated@@237 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@237 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@137)
 :pattern ( ($generated@@483 $generated@@485))
)) (= (type $generated@@484) $generated@@137)))
(assert (forall (($generated@@486 T@U) ($generated@@487 Int) ) (!  (=> (= (type $generated@@486) $generated@@137) (= ($generated@@135 $generated@@486 $generated@@487) ($generated@@135 $generated@@484 $generated@@487)))
 :pattern ( ($generated@@135 ($generated@@483 $generated@@486) $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@280 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@279 $generated@@159)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@278 $generated@@494))) ($generated@@265 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@76 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@77 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@77 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@249 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@249 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@249 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@254 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@254 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@254 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@164 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@164 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@164 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@336 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) (= ($generated@@146 $generated@@518 ($generated@@401 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@159) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@238 ($generated@@83 ($generated@@376 $generated@@518) $generated@@521) $generated@@520) ($generated@@238 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@518) $generated@@521))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@146 $generated@@518 ($generated@@401 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@146 $generated@@522 ($generated@@409 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@159) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@238 ($generated@@83 ($generated@@384 $generated@@522) $generated@@525) $generated@@524) ($generated@@238 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@146 $generated@@522 ($generated@@409 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@159) (= (type $generated@@529) $generated@@159)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@237 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@237 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@159) (= (type $generated@@531) $generated@@159)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@237 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@237 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 Int) ) (!  (=> (= (type $generated@@532) $generated@@137) (= ($generated@@135 ($generated@@136 $generated@@532) $generated@@533) ($generated@@135 $generated@@532 $generated@@533)))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@159) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) ($generated@@238 $generated@@534 ($generated@@401 $generated@@535 $generated@@536))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@159 $generated@@159) $generated@@534)) $generated@@534) ($generated@@146 ($generated@@336 ($generated@@299 $generated@@159 $generated@@159) $generated@@534) ($generated@@401 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@238 $generated@@534 ($generated@@401 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@159) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) ($generated@@238 $generated@@537 ($generated@@409 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@159 $generated@@159) $generated@@537)) $generated@@537) ($generated@@146 ($generated@@336 ($generated@@317 $generated@@159 $generated@@159) $generated@@537) ($generated@@409 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@238 $generated@@537 ($generated@@409 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@159)) ($generated@@238 $generated@@542 ($generated@@149 $generated@@540 $generated@@541))) (and (= ($generated@@286 ($generated@@336 $generated@@150 $generated@@542)) $generated@@542) ($generated@@146 ($generated@@336 $generated@@150 $generated@@542) ($generated@@149 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@238 $generated@@542 ($generated@@149 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@83 ($generated@@417 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@83 ($generated@@417 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@71)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@66) (= (type $generated@@548) $generated@@66)) (and (= ($generated@@74 ($generated@@149 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@149 $generated@@547 $generated@@548)) $generated@@65)))
 :pattern ( ($generated@@149 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@150) (= ($generated@@526 ($generated@@286 $generated@@549)) ($generated@@527 $generated@@549)))
 :pattern ( ($generated@@526 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@159) ($generated@@238 $generated@@550 ($generated@@77 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@550)) $generated@@550) ($generated@@146 ($generated@@336 ($generated@@78 $generated@@159 $generated@@4) $generated@@550) ($generated@@77 0))))
 :pattern ( ($generated@@238 $generated@@550 ($generated@@77 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@66)) ($generated@@238 $generated@@551 ($generated@@249 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@159 $generated@@4) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@336 ($generated@@78 $generated@@159 $generated@@4) $generated@@551) ($generated@@249 $generated@@552))))
 :pattern ( ($generated@@238 $generated@@551 ($generated@@249 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@159) (= (type $generated@@554) $generated@@66)) ($generated@@238 $generated@@553 ($generated@@254 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@159 $generated@@4) $generated@@553)) $generated@@553) ($generated@@146 ($generated@@336 ($generated@@78 $generated@@159 $generated@@4) $generated@@553) ($generated@@254 $generated@@554))))
 :pattern ( ($generated@@238 $generated@@553 ($generated@@254 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@159) (= (type $generated@@556) $generated@@66)) ($generated@@238 $generated@@555 ($generated@@164 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@159 $generated@@2) $generated@@555)) $generated@@555) ($generated@@146 ($generated@@336 ($generated@@78 $generated@@159 $generated@@2) $generated@@555) ($generated@@164 $generated@@556))))
 :pattern ( ($generated@@238 $generated@@555 ($generated@@164 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@159) (= (type $generated@@558) $generated@@66)) ($generated@@238 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@286 ($generated@@336 ($generated@@279 $generated@@159) $generated@@557)) $generated@@557) ($generated@@146 ($generated@@336 ($generated@@279 $generated@@159) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@238 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@74 $generated@@143) $generated@@61))
(assert (= ($generated@@545 $generated@@143) $generated@@64))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@78 $generated@@159 $generated@@2)) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@559 ($generated@@164 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@159) (< 0 ($generated ($generated@@83 $generated@@559 $generated@@562)))) ($generated@@265 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@83 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@76 $generated@@559 ($generated@@164 $generated@@560) $generated@@561))
)))
(assert  (=> (<= 1 $generated@@134) (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (and (= (type $generated@@563) $generated@@137) (or ($generated@@138 $generated@@564) (and (not (= 1 $generated@@134)) (<= ($generated@@139 0) $generated@@564)))) (= ($generated@@135 $generated@@563 $generated@@564) (- 88 $generated@@564)))
 :pattern ( ($generated@@135 $generated@@563 $generated@@564))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@567) (and ($generated@@148 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@149 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@149 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@265 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@265 ($generated@@157 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@264 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@66) ($generated@@76 $generated@@569 ($generated@@149 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@149 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@265 ($generated@@158 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@265 ($generated@@158 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@159) (= (type $generated@@574) $generated@@159)) (= ($generated@@237 ($generated@@260 $generated@@573) ($generated@@260 $generated@@574)) ($generated@@260 ($generated@@237 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@237 ($generated@@260 $generated@@573) ($generated@@260 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@139 $generated@@575))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@139 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@576)) ($generated@@260 ($generated@@286 $generated@@576)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@280 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@279 $generated@@578)) (= ($generated@@278 $generated@@577) 0)) (= $generated@@577 ($generated@@277 $generated@@578))))
 :pattern ( ($generated@@278 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@78 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@291 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@291 $generated@@579) ($generated ($generated@@83 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@291 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@2)) ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@3)) ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@4)) ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@441)) ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@159)) ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@279 $generated@@159)) (= (type $generated@@594) $generated@@66)) (= ($generated@@146 $generated@@593 ($generated@@488 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@278 $generated@@593))) ($generated@@238 ($generated@@489 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@489 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@146 $generated@@593 ($generated@@488 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@279 $generated@@159)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@278 $generated@@597))) (< ($generated@@527 ($generated@@336 $generated@@150 ($generated@@489 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@527 ($generated@@336 $generated@@150 ($generated@@489 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@299 $generated@@159 $generated@@159)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@146 $generated@@599 ($generated@@401 $generated@@600 $generated@@601))) (and (and ($generated@@146 ($generated@@297 $generated@@599) ($generated@@249 $generated@@600)) ($generated@@146 ($generated@@344 $generated@@599) ($generated@@249 $generated@@601))) ($generated@@146 ($generated@@375 $generated@@599) ($generated@@249 ($generated@@149 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@146 $generated@@599 ($generated@@401 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@317 $generated@@159 $generated@@159)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@146 $generated@@602 ($generated@@409 $generated@@603 $generated@@604))) (and (and ($generated@@146 ($generated@@315 $generated@@602) ($generated@@254 $generated@@603)) ($generated@@146 ($generated@@355 $generated@@602) ($generated@@254 $generated@@604))) ($generated@@146 ($generated@@383 $generated@@602) ($generated@@254 ($generated@@149 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@146 $generated@@602 ($generated@@409 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@146 $generated@@605 $generated@@46))
 :pattern ( ($generated@@146 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@146 $generated@@606 $generated@@47))
 :pattern ( ($generated@@146 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@146 $generated@@607 $generated@@44))
 :pattern ( ($generated@@146 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@441) ($generated@@146 $generated@@608 $generated@@45))
 :pattern ( ($generated@@146 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@159) ($generated@@146 $generated@@609 $generated@@48))
 :pattern ( ($generated@@146 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@613) ($generated@@171 $generated@@79 $generated@@4))) (= (type $generated@@614) $generated@@79)) (= (type $generated@@615) ($generated@@171 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@617  (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated@@135 ($generated@@136 ($generated@@136 $generated@@484)) $generated@@610) (- 88 $generated@@610)))))
(let (($generated@@618  (=> (not (= $generated@@610 ($generated@@139 0))) (and (=> (= (ControlFlow 0 7) (- 0 10)) ($generated@@146 ($generated@@8 (- $generated@@610 1)) $generated@@143)) (=> ($generated@@146 ($generated@@8 (- $generated@@610 1)) $generated@@143) (=> (and (= $generated@@611 (- $generated@@610 1)) ($generated@@76 ($generated@@8 $generated@@611) $generated@@143 $generated@@612)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< $generated@@611 $generated@@610)) (=> (< $generated@@611 $generated@@610) (=> ($generated@@138 (- $generated@@610 1)) (=> (and (and (= ($generated@@135 ($generated@@136 $generated@@484) $generated@@610) (- ($generated@@135 ($generated@@136 $generated@@484) (- $generated@@610 1)) 1)) ($generated@@138 (- $generated@@610 1))) (and ($generated@@146 ($generated@@8 ($generated@@135 ($generated@@136 $generated@@484) $generated@@610)) $generated@@46) (= (ControlFlow 0 7) 5))) $generated@@617))))))))))))
(let (($generated@@619  (=> (and (and (= $generated@@610 ($generated@@139 0)) (= ($generated@@135 ($generated@@136 $generated@@484) $generated@@610) ($generated@@139 88))) (and ($generated@@146 ($generated@@8 ($generated@@135 ($generated@@136 $generated@@484) $generated@@610)) $generated@@46) (= (ControlFlow 0 6) 5))) $generated@@617)))
(let (($generated@@620  (=> (= $generated@@613 ($generated@@225 $generated@@614 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 6) $generated@@619) (=> (= (ControlFlow 0 11) 7) $generated@@618)))))
(let (($generated@@621  (=> ($generated@@76 ($generated@@8 $generated@@610) $generated@@143 $generated@@612) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@610) (= $generated@@610 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@610 $generated@@610)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@610 $generated@@610) (< $generated@@610 $generated@@610))))))))
(let (($generated@@622  (=> (= $generated@@615 ($generated@@170 $generated@@614 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 2) $generated@@621) (=> (= (ControlFlow 0 12) 11) $generated@@620)))))
(let (($generated@@623  (=> (and (and (and ($generated@@264 $generated@@612) ($generated@@616 $generated@@612)) (<= ($generated@@139 0) $generated@@610)) (and (= 1 $generated@@134) (= (ControlFlow 0 13) 12))) $generated@@622)))
$generated@@623))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 (T@U Int) Int)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@231 () T@T)
(declare-fun $generated@@232 (Int) Bool)
(declare-fun $generated@@233 (Int) Int)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@365 (Int Int) Int)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@T) T@U)
(declare-fun $generated@@444 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 () T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert  (and (= ($generated@@1 $generated@@231) 17) (forall (($generated@@234 T@U) ) (! (= (type ($generated@@230 $generated@@234)) $generated@@231)
 :pattern ( ($generated@@230 $generated@@234))
))))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@235 T@U) ($generated@@236 Int) ) (!  (=> (and (= (type $generated@@235) $generated@@231) (or ($generated@@232 $generated@@236) (and (not (= 1 $generated@@228)) (and (<= ($generated@@233 0) $generated@@236) (<= $generated@@236 ($generated@@233 20)))))) (and (=> (not (= $generated@@236 ($generated@@233 0))) ($generated@@232 (- $generated@@236 1))) (= ($generated@@229 ($generated@@230 $generated@@235) $generated@@236) (ite (= $generated@@236 ($generated@@233 0)) 100 (+ (- 0 5) ($generated@@229 $generated@@235 (- $generated@@236 1)))))))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@235) $generated@@236))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@141)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@66) (= (type $generated@@242) $generated@@66)) (= (type $generated@@243) $generated@@150)) (= (type $generated@@244) $generated@@150)) (= ($generated@@137 ($generated@@237 $generated@@243 $generated@@244) ($generated@@140 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@137 ($generated@@237 $generated@@243 $generated@@244) ($generated@@140 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@141) (= (type $generated@@246) $generated@@141)) (= ($generated@@147 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@147 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@66)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@250) $generated@@66)) (= ($generated@@137 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@150) ($generated@@0 ($generated@@83 $generated@@249 $generated@@251))) ($generated@@238 $generated@@251 $generated@@250))
 :pattern ( ($generated@@83 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@137 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@66)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@255) $generated@@66)) (= ($generated@@137 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@150) ($generated@@0 ($generated@@83 $generated@@254 $generated@@256))) ($generated@@238 $generated@@256 $generated@@255))
 :pattern ( ($generated@@83 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@137 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@257 Int) ) (! (= ($generated@@233 $generated@@257) $generated@@257)
 :pattern ( ($generated@@233 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@66) (= (type $generated@@265) $generated@@66)) (= (type $generated@@266) $generated@@150)) (= (type $generated@@267) $generated@@150)) (= (type $generated@@268) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@262 $generated@@268)) (= ($generated@@76 ($generated@@237 $generated@@266 $generated@@267) ($generated@@140 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@76 ($generated@@237 $generated@@266 $generated@@267) ($generated@@140 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@141) (= ($generated@@139 $generated@@271) (= ($generated@@269 $generated@@271) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@141) ($generated@@139 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@150) (= (type $generated@@274) $generated@@150)) (= $generated@@272 ($generated@@237 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@139 $generated@@272))
)))
(assert  (and (and (forall (($generated@@279 T@T) ) (= ($generated@@1 ($generated@@277 $generated@@279)) 18)) (forall (($generated@@280 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
))) (forall (($generated@@281 T@T) ) (! (= (type ($generated@@275 $generated@@281)) ($generated@@277 $generated@@281))
 :pattern ( ($generated@@275 $generated@@281))
))))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@282)) 0)
 :pattern ( ($generated@@275 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@2) (= ($generated@@137 $generated@@283 $generated@@134) (<= ($generated@@233 0) ($generated $generated@@283))))
 :pattern ( ($generated@@137 $generated@@283 $generated@@134))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@150)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@66) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@76 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@263 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@289 T@U) ($generated@@290 Int) ) (!  (=> (and (= (type $generated@@289) $generated@@231) (or ($generated@@232 ($generated@@233 $generated@@290)) (and (not (= 1 $generated@@228)) (and (<= ($generated@@233 0) ($generated@@233 $generated@@290)) (<= ($generated@@233 $generated@@290) ($generated@@233 20)))))) (and (=> (not (= ($generated@@233 $generated@@290) ($generated@@233 0))) ($generated@@232 ($generated@@233 (- $generated@@290 1)))) (= ($generated@@229 ($generated@@230 $generated@@289) ($generated@@233 $generated@@290)) (ite (= ($generated@@233 $generated@@290) ($generated@@233 0)) 100 (+ (- 0 5) ($generated@@229 ($generated@@230 $generated@@289) ($generated@@233 (- $generated@@290 1))))))))
 :weight 3
 :pattern ( ($generated@@229 ($generated@@230 $generated@@289) ($generated@@233 $generated@@290)))
))))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@78 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@81 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@83 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@78 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@156 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@83 $generated@@333 $generated@@335))) (<= ($generated ($generated@@83 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@83 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@156 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@150) ($generated@@238 $generated@@339 $generated@@134)) (and (= ($generated@@284 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@137 ($generated@@336 $generated@@2 $generated@@339) $generated@@134)))
 :pattern ( ($generated@@238 $generated@@339 $generated@@134))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@78 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@363) $generated@@66)) (= ($generated@@137 $generated@@362 ($generated@@155 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@362 $generated@@364)))) ($generated@@238 $generated@@364 $generated@@363))
 :pattern ( ($generated@@83 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@137 $generated@@362 ($generated@@155 $generated@@363)))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@366 T@U) ($generated@@367 Int) ) (!  (=> (and (= (type $generated@@366) $generated@@231) (or ($generated@@232 $generated@@367) (and (not (= 1 $generated@@228)) (and (<= ($generated@@233 0) $generated@@367) (<= $generated@@367 ($generated@@233 20)))))) (and (= ($generated@@229 $generated@@366 $generated@@367) (- 100 ($generated@@365 ($generated@@233 5) $generated@@367))) (<= ($generated@@233 0) ($generated@@229 $generated@@366 $generated@@367))))
 :pattern ( ($generated@@229 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@369) $generated@@66)) (= (type $generated@@370) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@368 ($generated@@247 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@150) ($generated@@0 ($generated@@83 $generated@@368 $generated@@371))) ($generated@@263 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@83 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@76 $generated@@368 ($generated@@247 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@373) $generated@@66)) (= (type $generated@@374) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@372 ($generated@@252 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@150) ($generated@@0 ($generated@@83 $generated@@372 $generated@@375))) ($generated@@263 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@83 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@76 $generated@@372 ($generated@@252 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@83 ($generated@@292 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@83 ($generated@@292 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@301 (type $generated@@381))))
(let (($generated@@383 ($generated@@300 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@385) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@384) ($generated@@148 ($generated@@336 $generated@@141 $generated@@385)))) (= ($generated@@83 ($generated@@379 $generated@@384) ($generated@@148 ($generated@@336 $generated@@141 $generated@@385))) ($generated@@149 ($generated@@336 $generated@@141 $generated@@385))))))
 :pattern ( ($generated@@83 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@319 (type $generated@@389))))
(let (($generated@@391 ($generated@@318 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@392) ($generated@@148 ($generated@@336 $generated@@141 $generated@@393)))) (= ($generated@@83 ($generated@@387 $generated@@392) ($generated@@148 ($generated@@336 $generated@@141 $generated@@393))) ($generated@@149 ($generated@@336 $generated@@141 $generated@@393))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@300 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@299 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@83 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@318 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@317 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@83 ($generated@@355 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@83 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@399) $generated@@403))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@66)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@408) $generated@@66)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@407) $generated@@411))) (and ($generated@@263 ($generated@@83 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@263 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@76 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@66)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@415) $generated@@419))) (and ($generated@@263 ($generated@@83 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@263 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@T) ) (! (= (type ($generated@@420 $generated@@421)) ($generated@@78 $generated@@421 $generated@@4))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@319 (type $generated@@422))))
(let (($generated@@424 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@316 $generated@@424 $generated@@423)) (= ($generated@@315 $generated@@422) ($generated@@420 $generated@@424))))))
 :pattern ( ($generated@@315 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@355 $generated@@425) ($generated@@420 $generated@@426))))))
 :pattern ( ($generated@@355 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@319 (type $generated@@428))))
(let (($generated@@430 ($generated@@318 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@317 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@316 $generated@@430 $generated@@429)) (= ($generated@@386 $generated@@428) ($generated@@420 $generated@@150))))))
 :pattern ( ($generated@@386 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@301 (type $generated@@431))))
(let (($generated@@433 ($generated@@300 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@299 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@298 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@150) (= (type $generated@@435) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@378 $generated@@431) ($generated@@284 ($generated@@237 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@319 (type $generated@@436))))
(let (($generated@@438 ($generated@@318 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@317 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@316 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@150) (= (type $generated@@440) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@436) ($generated@@284 ($generated@@237 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@386 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@238 $generated@@441 $generated@@46)) (and (= ($generated@@284 ($generated@@336 $generated@@2 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@336 $generated@@2 $generated@@441) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@441 $generated@@46))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) ($generated@@238 $generated@@442 $generated@@47)) (and (= ($generated@@284 ($generated@@336 $generated@@3 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@336 $generated@@3 $generated@@442) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@442 $generated@@47))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@238 $generated@@443 $generated@@44)) (and (= ($generated@@284 ($generated@@336 $generated@@4 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@336 $generated@@4 $generated@@443) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@443 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@444) 21))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@150) ($generated@@238 $generated@@445 $generated@@45)) (and (= ($generated@@284 ($generated@@336 $generated@@444 $generated@@445)) $generated@@445) ($generated@@137 ($generated@@336 $generated@@444 $generated@@445) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@445 $generated@@45))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (= (type $generated@@447) $generated@@66) (= ($generated@@238 ($generated@@284 $generated@@446) $generated@@447) ($generated@@137 $generated@@446 $generated@@447)))
 :pattern ( ($generated@@238 ($generated@@284 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@81 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@78 $generated@@449 $generated@@2)) (<= 0 ($generated@@291 $generated@@448))))
 :pattern ( ($generated@@291 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@278 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@277 $generated@@451)) (<= 0 ($generated@@276 $generated@@450))))
 :pattern ( ($generated@@276 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@404 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@404 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@404 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@404 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@404 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@66)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@66) (= (type $generated@@465) $generated@@66)) (= ($generated@@462 ($generated@@412 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@412 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@66)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@466 ($generated@@412 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@74 ($generated@@412 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@150) (= (type $generated@@473) $generated@@150)) (= ($generated@@269 ($generated@@237 $generated@@472 $generated@@473)) $generated@@62))
 :pattern ( ($generated@@237 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@140 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@140 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@66)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@66) (= (type $generated@@481) $generated@@66)) (= ($generated@@478 ($generated@@140 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@140 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@150) (= (type $generated@@483) $generated@@150)) (= ($generated@@148 ($generated@@237 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@237 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) (= ($generated@@149 ($generated@@237 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@237 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@231)
 :pattern ( ($generated@@486 $generated@@488))
)) (= (type $generated@@487) $generated@@231)))
(assert (forall (($generated@@489 T@U) ($generated@@490 Int) ) (!  (=> (= (type $generated@@489) $generated@@231) (= ($generated@@229 $generated@@489 $generated@@490) ($generated@@229 $generated@@487 $generated@@490)))
 :pattern ( ($generated@@229 ($generated@@486 $generated@@489) $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@278 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@277 $generated@@150)) (= (type $generated@@498) $generated@@66)) (= (type $generated@@499) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@276 $generated@@497))) ($generated@@263 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@76 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@77 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@77 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@247 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@247 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@247 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@252 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@252 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@252 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@155 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@155 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@74 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@336 $generated@@520 ($generated@@284 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@284 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) (= ($generated@@137 $generated@@521 ($generated@@404 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@521) $generated@@524))) (and ($generated@@238 ($generated@@83 ($generated@@379 $generated@@521) $generated@@524) $generated@@523) ($generated@@238 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@521) $generated@@524))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@137 $generated@@521 ($generated@@404 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) (= ($generated@@137 $generated@@525 ($generated@@412 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@525) $generated@@528))) (and ($generated@@238 ($generated@@83 ($generated@@387 $generated@@525) $generated@@528) $generated@@527) ($generated@@238 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@525) $generated@@528))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@137 $generated@@525 ($generated@@412 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@237 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@237 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@150) (= (type $generated@@534) $generated@@150)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@237 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@237 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 Int) ) (!  (=> (= (type $generated@@535) $generated@@231) (= ($generated@@229 ($generated@@230 $generated@@535) $generated@@536) ($generated@@229 $generated@@535 $generated@@536)))
 :pattern ( ($generated@@229 ($generated@@230 $generated@@535) $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) ($generated@@238 $generated@@537 ($generated@@404 $generated@@538 $generated@@539))) (and (= ($generated@@284 ($generated@@336 ($generated@@299 $generated@@150 $generated@@150) $generated@@537)) $generated@@537) ($generated@@137 ($generated@@336 ($generated@@299 $generated@@150 $generated@@150) $generated@@537) ($generated@@404 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@238 $generated@@537 ($generated@@404 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@66)) ($generated@@238 $generated@@540 ($generated@@412 $generated@@541 $generated@@542))) (and (= ($generated@@284 ($generated@@336 ($generated@@317 $generated@@150 $generated@@150) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@336 ($generated@@317 $generated@@150 $generated@@150) $generated@@540) ($generated@@412 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@238 $generated@@540 ($generated@@412 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@66) (= (type $generated@@544) $generated@@66)) (= (type $generated@@545) $generated@@150)) ($generated@@238 $generated@@545 ($generated@@140 $generated@@543 $generated@@544))) (and (= ($generated@@284 ($generated@@336 $generated@@141 $generated@@545)) $generated@@545) ($generated@@137 ($generated@@336 $generated@@141 $generated@@545) ($generated@@140 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@238 $generated@@545 ($generated@@140 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
 (not ($generated@@0 ($generated@@83 ($generated@@420 $generated@@547) $generated@@546))))
 :pattern ( (let (($generated@@547 (type $generated@@546)))
($generated@@83 ($generated@@420 $generated@@547) $generated@@546)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@71)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@66) (= (type $generated@@551) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@550 $generated@@551)) $generated@@63) (= ($generated@@548 ($generated@@140 $generated@@550 $generated@@551)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 Int) ($generated@@553 Int) ) (! (= ($generated@@365 $generated@@552 $generated@@553) (* $generated@@552 $generated@@553))
 :pattern ( ($generated@@365 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@141) (= ($generated@@529 ($generated@@284 $generated@@554)) ($generated@@530 $generated@@554)))
 :pattern ( ($generated@@529 ($generated@@284 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@150) ($generated@@238 $generated@@555 ($generated@@77 0))) (and (= ($generated@@284 ($generated@@336 $generated@@2 $generated@@555)) $generated@@555) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@555) ($generated@@77 0))))
 :pattern ( ($generated@@238 $generated@@555 ($generated@@77 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) ($generated@@238 $generated@@556 ($generated@@247 $generated@@557))) (and (= ($generated@@284 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@556) ($generated@@247 $generated@@557))))
 :pattern ( ($generated@@238 $generated@@556 ($generated@@247 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@238 $generated@@558 ($generated@@252 $generated@@559))) (and (= ($generated@@284 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@558) ($generated@@252 $generated@@559))))
 :pattern ( ($generated@@238 $generated@@558 ($generated@@252 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@150) (= (type $generated@@561) $generated@@66)) ($generated@@238 $generated@@560 ($generated@@155 $generated@@561))) (and (= ($generated@@284 ($generated@@336 ($generated@@78 $generated@@150 $generated@@2) $generated@@560)) $generated@@560) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@2) $generated@@560) ($generated@@155 $generated@@561))))
 :pattern ( ($generated@@238 $generated@@560 ($generated@@155 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@150) (= (type $generated@@563) $generated@@66)) ($generated@@238 $generated@@562 ($generated@@491 $generated@@563))) (and (= ($generated@@284 ($generated@@336 ($generated@@277 $generated@@150) $generated@@562)) $generated@@562) ($generated@@137 ($generated@@336 ($generated@@277 $generated@@150) $generated@@562) ($generated@@491 $generated@@563))))
 :pattern ( ($generated@@238 $generated@@562 ($generated@@491 $generated@@563)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@548 $generated@@134) $generated@@64))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@564 ($generated@@155 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@564 $generated@@567)))) ($generated@@263 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@83 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@155 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@570) (and ($generated@@139 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@140 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@140 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@263 ($generated@@148 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@263 ($generated@@148 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@141) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@574) (and ($generated@@139 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@66) ($generated@@76 $generated@@572 ($generated@@140 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@76 $generated@@572 ($generated@@140 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@263 ($generated@@149 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@263 ($generated@@149 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@150) (= (type $generated@@577) $generated@@150)) (= ($generated@@237 ($generated@@258 $generated@@576) ($generated@@258 $generated@@577)) ($generated@@258 ($generated@@237 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@237 ($generated@@258 $generated@@576) ($generated@@258 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@233 $generated@@578))) ($generated@@258 ($generated@@284 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@233 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@284 ($generated@@258 $generated@@579)) ($generated@@258 ($generated@@284 $generated@@579)))
 :pattern ( ($generated@@284 ($generated@@258 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@278 (type $generated@@580))))
 (=> (and (= (type $generated@@580) ($generated@@277 $generated@@581)) (= ($generated@@276 $generated@@580) 0)) (= $generated@@580 ($generated@@275 $generated@@581))))
 :pattern ( ($generated@@276 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@78 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@291 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@291 $generated@@582) ($generated ($generated@@83 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@291 ($generated@@84 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@2)) ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@3)) ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@4)) ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@444)) ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@76 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@150)) ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@76 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@277 $generated@@150)) (= (type $generated@@597) $generated@@66)) (= ($generated@@137 $generated@@596 ($generated@@491 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@276 $generated@@596))) ($generated@@238 ($generated@@492 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@492 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@137 $generated@@596 ($generated@@491 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@277 $generated@@150)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@276 $generated@@600))) (< ($generated@@530 ($generated@@336 $generated@@141 ($generated@@492 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@530 ($generated@@336 $generated@@141 ($generated@@492 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@137 $generated@@602 ($generated@@404 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@297 $generated@@602) ($generated@@247 $generated@@603)) ($generated@@137 ($generated@@344 $generated@@602) ($generated@@247 $generated@@604))) ($generated@@137 ($generated@@378 $generated@@602) ($generated@@247 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@404 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) $generated@@66)) ($generated@@137 $generated@@605 ($generated@@412 $generated@@606 $generated@@607))) (and (and ($generated@@137 ($generated@@315 $generated@@605) ($generated@@252 $generated@@606)) ($generated@@137 ($generated@@355 $generated@@605) ($generated@@252 $generated@@607))) ($generated@@137 ($generated@@386 $generated@@605) ($generated@@252 ($generated@@140 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@137 $generated@@605 ($generated@@412 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@137 $generated@@608 $generated@@46))
 :pattern ( ($generated@@137 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@137 $generated@@609 $generated@@47))
 :pattern ( ($generated@@137 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@137 $generated@@610 $generated@@44))
 :pattern ( ($generated@@137 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@444) ($generated@@137 $generated@@611 $generated@@45))
 :pattern ( ($generated@@137 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@150) ($generated@@137 $generated@@612 $generated@@48))
 :pattern ( ($generated@@137 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@616) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@617) $generated@@79)) (= (type $generated@@618) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@620  (=> (= (ControlFlow 0 7) (- 0 6)) (= ($generated@@229 ($generated@@230 ($generated@@230 $generated@@487)) $generated@@613) (- 100 ($generated@@365 ($generated@@233 5) $generated@@613))))))
(let (($generated@@621  (=> (not (= $generated@@613 ($generated@@233 0))) (=> (and (= $generated@@614 (- $generated@@613 1)) ($generated@@76 ($generated@@8 $generated@@614) $generated@@46 $generated@@615)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (<= ($generated@@233 0) $generated@@614)) (and (=> (= (ControlFlow 0 10) (- 0 14)) (<= $generated@@614 ($generated@@233 20))) (=> (and (<= ($generated@@233 0) $generated@@614) (<= $generated@@614 ($generated@@233 20))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (<= 0 $generated@@613) (= $generated@@614 $generated@@613))) (=> (or (<= 0 $generated@@613) (= $generated@@614 $generated@@613)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (< $generated@@614 $generated@@613)) (=> (< $generated@@614 $generated@@613) (=> ($generated@@232 (- $generated@@613 1)) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@137 ($generated@@8 (+ (- 0 5) ($generated@@229 ($generated@@230 $generated@@487) (- $generated@@613 1)))) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ (- 0 5) ($generated@@229 ($generated@@230 $generated@@487) (- $generated@@613 1)))) $generated@@134) (=> (and (and (= ($generated@@229 ($generated@@230 $generated@@487) $generated@@613) (+ (- 0 5) ($generated@@229 ($generated@@230 $generated@@487) (- $generated@@613 1)))) ($generated@@232 (- $generated@@613 1))) (and ($generated@@137 ($generated@@8 ($generated@@229 ($generated@@230 $generated@@487) $generated@@613)) $generated@@134) (= (ControlFlow 0 10) 7))) $generated@@620)))))))))))))))
(let (($generated@@622  (=> (= $generated@@613 ($generated@@233 0)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@137 ($generated@@8 ($generated@@233 100)) $generated@@134)) (=> ($generated@@137 ($generated@@8 ($generated@@233 100)) $generated@@134) (=> (= ($generated@@229 ($generated@@230 $generated@@487) $generated@@613) ($generated@@233 100)) (=> (and ($generated@@137 ($generated@@8 ($generated@@229 ($generated@@230 $generated@@487) $generated@@613)) $generated@@134) (= (ControlFlow 0 8) 7)) $generated@@620)))))))
(let (($generated@@623  (=> (= $generated@@616 ($generated@@216 $generated@@617 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 8) $generated@@622) (=> (= (ControlFlow 0 16) 10) $generated@@621)))))
(let (($generated@@624  (=> (and (<= ($generated@@233 0) ($generated@@229 ($generated@@230 $generated@@487) $generated@@613)) ($generated@@76 ($generated@@8 $generated@@613) $generated@@46 $generated@@615)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@233 0) $generated@@613)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@613 ($generated@@233 20))) (=> (and (<= ($generated@@233 0) $generated@@613) (<= $generated@@613 ($generated@@233 20))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@613) (= $generated@@613 $generated@@613))) (=> (or (<= 0 $generated@@613) (= $generated@@613 $generated@@613)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (= $generated@@613 $generated@@613) (< $generated@@613 $generated@@613)))))))))))
(let (($generated@@625  (=> (and (<= ($generated@@233 0) $generated@@613) (<= $generated@@613 ($generated@@233 20))) (and (=> (= (ControlFlow 0 17) 2) $generated@@624) (=> (= (ControlFlow 0 17) 16) $generated@@623)))))
(let (($generated@@626  (=> (and (< $generated@@613 ($generated@@233 0)) (= (ControlFlow 0 19) 17)) $generated@@625)))
(let (($generated@@627  (=> (and (<= ($generated@@233 0) $generated@@613) (= (ControlFlow 0 18) 17)) $generated@@625)))
(let (($generated@@628  (=> (= $generated@@618 ($generated@@161 $generated@@617 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) 18) $generated@@627) (=> (= (ControlFlow 0 20) 19) $generated@@626)))))
(let (($generated@@629  (=> (and (and ($generated@@262 $generated@@615) ($generated@@619 $generated@@615)) (and (= 1 $generated@@228) (= (ControlFlow 0 21) 20))) $generated@@628)))
$generated@@629)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (Int) Int)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@189 (T@T) T@U)
(declare-fun $generated@@190 (T@U) Int)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@197 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@T T@T) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@U)
(declare-fun $generated@@224 (T@T T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 () Int)
(declare-fun $generated@@285 (Int Int) Int)
(declare-fun $generated@@286 (Int Int) Bool)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@U Int) T@U)
(declare-fun $generated@@328 (T@U) Int)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@371 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@183 $generated@@184) $generated@@184)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(= (type ($generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@185 $generated@@188) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
)))
(assert  (and (and (forall (($generated@@193 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@193)) 13)) (forall (($generated@@194 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@191 $generated@@194))
))) (forall (($generated@@195 T@T) ) (! (= (type ($generated@@189 $generated@@195)) ($generated@@191 $generated@@195))
 :pattern ( ($generated@@189 $generated@@195))
))))
(assert (forall (($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@196)) 0)
 :pattern ( ($generated@@189 $generated@@196))
)))
(assert  (and (= ($generated@@1 $generated@@199) 14) (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@198 $generated@@200))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@61) (= (type $generated@@203) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203) ($generated@@69 $generated@@201 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@201) $generated@@202 $generated@@203))
)))
(assert  (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@1 ($generated@@206 $generated@@209 $generated@@210)) 15)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@207 ($generated@@206 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@206 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@206 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@206 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@207 (type $generated@@215))))
(= (type ($generated@@204 $generated@@215)) ($generated@@71 $generated@@216 $generated@@4)))
 :pattern ( ($generated@@204 $generated@@215))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= (type ($generated@@205 $generated@@217 $generated@@218)) ($generated@@206 $generated@@217 $generated@@218))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (let (($generated@@221 (type $generated@@219)))
 (not ($generated@@0 ($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219))))
 :pattern ( (let (($generated@@221 (type $generated@@219)))
($generated@@76 ($generated@@204 ($generated@@205 $generated@@221 $generated@@220)) $generated@@219)))
)))
(assert  (and (and (and (and (forall (($generated@@227 T@T) ($generated@@228 T@T) ) (= ($generated@@1 ($generated@@224 $generated@@227 $generated@@228)) 16)) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= ($generated@@225 ($generated@@224 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@224 $generated@@229 $generated@@230))
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@224 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@224 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@225 (type $generated@@233))))
(= (type ($generated@@222 $generated@@233)) ($generated@@71 $generated@@234 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@233))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= (type ($generated@@223 $generated@@235 $generated@@236)) ($generated@@224 $generated@@235 $generated@@236))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (let (($generated@@239 (type $generated@@237)))
 (not ($generated@@0 ($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237))))
 :pattern ( (let (($generated@@239 (type $generated@@237)))
($generated@@76 ($generated@@222 ($generated@@223 $generated@@239 $generated@@238)) $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@208 (type $generated@@240))))
(let (($generated@@242 ($generated@@207 (type $generated@@240))))
 (=> (= (type $generated@@240) ($generated@@206 $generated@@242 $generated@@241)) (or (= $generated@@240 ($generated@@205 $generated@@242 $generated@@241)) (exists (($generated@@243 T@U) ) (!  (and (= (type $generated@@243) $generated@@242) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@240) $generated@@243)))
 :no-pattern (type $generated@@243)
 :no-pattern ($generated $generated@@243)
 :no-pattern ($generated@@0 $generated@@243)
))))))
 :pattern ( ($generated@@204 $generated@@240))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@226 (type $generated@@244))))
(let (($generated@@246 ($generated@@225 (type $generated@@244))))
 (=> (= (type $generated@@244) ($generated@@224 $generated@@246 $generated@@245)) (or (= $generated@@244 ($generated@@223 $generated@@246 $generated@@245)) (exists (($generated@@247 T@U) ) (!  (and (= (type $generated@@247) $generated@@246) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@244) $generated@@247)))
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
))))))
 :pattern ( ($generated@@222 $generated@@244))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@61)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@250) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@251) $generated@@61)) (= (type $generated@@252) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@199) ($generated@@0 ($generated@@76 $generated@@250 $generated@@253))) ($generated@@197 $generated@@253 $generated@@251 $generated@@252))
 :pattern ( ($generated@@76 $generated@@250 $generated@@253))
))))
 :pattern ( ($generated@@69 $generated@@250 ($generated@@248 $generated@@251) $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@61)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@256) ($generated@@71 $generated@@199 $generated@@4)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@199) ($generated@@0 ($generated@@76 $generated@@256 $generated@@259))) ($generated@@197 $generated@@259 $generated@@257 $generated@@258))
 :pattern ( ($generated@@76 $generated@@256 $generated@@259))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@254 $generated@@257) $generated@@258))
)))
(assert  (and (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@260 $generated@@262 $generated@@263)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
)) (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@208 (type $generated@@264))))
(let (($generated@@266 ($generated@@207 (type $generated@@264))))
(= (type ($generated@@261 $generated@@264)) ($generated@@71 $generated@@266 $generated@@265))))
 :pattern ( ($generated@@261 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@206 $generated@@199 $generated@@199)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))) (and ($generated@@197 ($generated@@76 ($generated@@261 $generated@@267) $generated@@271) $generated@@269 $generated@@270) ($generated@@197 $generated@@271 $generated@@268 $generated@@270)))
 :pattern ( ($generated@@76 ($generated@@261 $generated@@267) $generated@@271))
 :pattern ( ($generated@@76 ($generated@@204 $generated@@267) $generated@@271))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@260 $generated@@268 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@226 (type $generated@@276))))
(let (($generated@@278 ($generated@@225 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@71 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@224 $generated@@199 $generated@@199)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@199) ($generated@@0 ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))) (and ($generated@@197 ($generated@@76 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@197 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@76 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@76 ($generated@@222 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@69 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@287 Int) ($generated@@288 Int) ) (!  (=> (or ($generated@@286 ($generated@@183 $generated@@287) ($generated@@183 $generated@@288)) (not (= 0 $generated@@284))) (= ($generated@@285 ($generated@@183 $generated@@287) ($generated@@183 $generated@@288)) ($generated@@183 (+ $generated@@287 $generated@@288))))
 :weight 3
 :pattern ( ($generated@@285 ($generated@@183 $generated@@287) ($generated@@183 $generated@@288)))
))))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@289 Int) ($generated@@290 Int) ) (!  (=> (or ($generated@@286 $generated@@289 $generated@@290) (not (= 0 $generated@@284))) true)
 :pattern ( ($generated@@285 $generated@@289 $generated@@290))
))))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@71 $generated@@292 $generated@@4))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@226 (type $generated@@293))))
(let (($generated@@295 ($generated@@225 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@224 $generated@@295 $generated@@294)) (= (= $generated@@293 ($generated@@223 $generated@@295 $generated@@294)) (= ($generated@@222 $generated@@293) ($generated@@291 $generated@@295))))))
 :pattern ( ($generated@@222 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@192 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@191 $generated@@297)) (<= 0 ($generated@@190 $generated@@296))))
 :pattern ( ($generated@@190 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@61)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@61) (= (type $generated@@301) $generated@@61)) (= ($generated@@298 ($generated@@260 $generated@@300 $generated@@301)) $generated@@300))
 :pattern ( ($generated@@260 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@61)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@61) (= (type $generated@@305) $generated@@61)) (= ($generated@@302 ($generated@@260 $generated@@304 $generated@@305)) $generated@@305))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@61) (= (type $generated@@307) $generated@@61)) (= ($generated@@67 ($generated@@260 $generated@@306 $generated@@307)) $generated@@58))
 :pattern ( ($generated@@260 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@61)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@61) (= (type $generated@@311) $generated@@61)) (= ($generated@@308 ($generated@@272 $generated@@310 $generated@@311)) $generated@@310))
 :pattern ( ($generated@@272 $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@61)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) $generated@@61) (= (type $generated@@315) $generated@@61)) (= ($generated@@312 ($generated@@272 $generated@@314 $generated@@315)) $generated@@315))
 :pattern ( ($generated@@272 $generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@61) (= (type $generated@@317) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@316 $generated@@317)) $generated@@59))
 :pattern ( ($generated@@272 $generated@@316 $generated@@317))
)))
(assert  (and (forall (($generated@@320 T@U) ) (! (= (type ($generated@@318 $generated@@320)) $generated@@61)
 :pattern ( ($generated@@318 $generated@@320))
)) (forall (($generated@@321 T@U) ($generated@@322 Int) ) (! (let (($generated@@323 ($generated@@192 (type $generated@@321))))
(= (type ($generated@@319 $generated@@321 $generated@@322)) $generated@@323))
 :pattern ( ($generated@@319 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (and (= (type $generated@@324) ($generated@@191 $generated@@199)) (= (type $generated@@325) $generated@@61)) (= (type $generated@@326) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@324 ($generated@@318 $generated@@325) $generated@@326) (forall (($generated@@327 Int) ) (!  (=> (and (<= 0 $generated@@327) (< $generated@@327 ($generated@@190 $generated@@324))) ($generated@@197 ($generated@@319 $generated@@324 $generated@@327) $generated@@325 $generated@@326))
 :pattern ( ($generated@@319 $generated@@324 $generated@@327))
))))
 :pattern ( ($generated@@69 $generated@@324 ($generated@@318 $generated@@325) $generated@@326))
)))
(assert (forall (($generated@@329 Int) ) (! (= ($generated@@328 ($generated@@70 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@70 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@61)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@61) (= ($generated@@330 ($generated@@248 $generated@@332)) $generated@@332))
 :pattern ( ($generated@@248 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@67 ($generated@@248 $generated@@333)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= (type ($generated@@334 $generated@@335)) $generated@@61)
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@61) (= ($generated@@334 ($generated@@254 $generated@@336)) $generated@@336))
 :pattern ( ($generated@@254 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@61) (= ($generated@@67 ($generated@@254 $generated@@337)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@337))
)))
(assert  (and (forall (($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@340)) $generated@@61)
 :pattern ( ($generated@@338 $generated@@340))
)) (forall (($generated@@341 T@U) ) (! (= (type ($generated@@339 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@339 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@339 ($generated@@338 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@338 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@338 $generated@@343)) $generated@@56))
 :pattern ( ($generated@@338 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@318 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@318 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@318 $generated@@347)) $generated@@57))
 :pattern ( ($generated@@318 $generated@@347))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= ($generated@@348 $generated@@352 ($generated@@198 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@198 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
 (not ($generated@@0 ($generated@@76 ($generated@@291 $generated@@354) $generated@@353))))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@76 ($generated@@291 $generated@@354) $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@71 $generated@@199 $generated@@2)) (= (type $generated@@356) $generated@@61)) (= (type $generated@@357) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@355 ($generated@@338 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@199) (< 0 ($generated ($generated@@76 $generated@@355 $generated@@358)))) ($generated@@197 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@76 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@69 $generated@@355 ($generated@@338 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 Int) ) (! (= ($generated@@198 ($generated@@8 ($generated@@183 $generated@@359))) ($generated@@185 ($generated@@198 ($generated@@8 $generated@@359))))
 :pattern ( ($generated@@198 ($generated@@8 ($generated@@183 $generated@@359))))
)))
(assert (forall (($generated@@360 T@U) ) (! (= ($generated@@198 ($generated@@185 $generated@@360)) ($generated@@185 ($generated@@198 $generated@@360)))
 :pattern ( ($generated@@198 ($generated@@185 $generated@@360)))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@192 (type $generated@@361))))
 (=> (and (= (type $generated@@361) ($generated@@191 $generated@@362)) (= ($generated@@190 $generated@@361) 0)) (= $generated@@361 ($generated@@189 $generated@@362))))
 :pattern ( ($generated@@190 $generated@@361))
)))
(assert  (=> (<= 0 $generated@@284) (forall (($generated@@363 Int) ($generated@@364 Int) ) (!  (=> (or ($generated@@286 $generated@@363 $generated@@364) (not (= 0 $generated@@284))) (= ($generated@@285 $generated@@363 $generated@@364) (+ $generated@@363 $generated@@364)))
 :pattern ( ($generated@@285 $generated@@363 $generated@@364))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@366) $generated@@2)) ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
 :pattern ( ($generated@@69 $generated@@366 $generated@@46 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@367) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@368) $generated@@3)) ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
 :pattern ( ($generated@@69 $generated@@368 $generated@@47 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@370) $generated@@4)) ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
 :pattern ( ($generated@@69 $generated@@370 $generated@@44 $generated@@369))
)))
(assert (= ($generated@@1 $generated@@371) 17))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@373) $generated@@371)) ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
 :pattern ( ($generated@@69 $generated@@373 $generated@@45 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@375) $generated@@199)) ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
 :pattern ( ($generated@@69 $generated@@375 $generated@@48 $generated@@374))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@376 () Int)
(declare-fun $generated@@377 () Int)
(declare-fun $generated@@378 () Int)
(declare-fun $generated@@379 () Int)
(declare-fun $generated@@380 () T@U)
(declare-fun $generated@@381 () Int)
(declare-fun $generated@@382 () Int)
(declare-fun $generated@@383 () Int)
(declare-fun $generated@@384 () T@U)
(declare-fun $generated@@385 () T@U)
(declare-fun $generated@@386 (T@U) Bool)
(declare-fun $generated@@387 (T@U) Bool)
(assert  (and (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@384) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@385) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@388  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@376 ($generated@@285 $generated@@377 $generated@@378)))))
(let (($generated@@389  (=> (not (or (< $generated@@377 8) (= $generated@@377 ($generated@@183 77)))) (=> (and (and (= $generated@@379 (- $generated@@377 1)) ($generated@@69 ($generated@@8 $generated@@379) $generated@@46 $generated@@380)) (and (= $generated@@381 (+ $generated@@378 1)) ($generated@@69 ($generated@@8 $generated@@381) $generated@@46 $generated@@380))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@377) (= $generated@@379 $generated@@377))) (=> (or (<= 0 $generated@@377) (= $generated@@379 $generated@@377)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@378) (< $generated@@379 $generated@@377)) (= $generated@@381 $generated@@378))) (=> (or (or (<= 0 $generated@@378) (< $generated@@379 $generated@@377)) (= $generated@@381 $generated@@378)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< $generated@@379 $generated@@377) (and (= $generated@@379 $generated@@377) (< $generated@@381 $generated@@378)))) (=> (or (< $generated@@379 $generated@@377) (and (= $generated@@379 $generated@@377) (< $generated@@381 $generated@@378))) (=> ($generated@@286 (- $generated@@377 1) (+ $generated@@378 1)) (=> (and (and ($generated@@286 (- $generated@@377 1) (+ $generated@@378 1)) (= $generated@@382 ($generated@@285 (- $generated@@377 1) (+ $generated@@378 1)))) (and (= $generated@@376 $generated@@382) (= (ControlFlow 0 4) 2))) $generated@@388))))))))))))
(let (($generated@@390  (=> (and (and (or (< $generated@@377 8) (= $generated@@377 ($generated@@183 77))) (= $generated@@383 (+ $generated@@377 $generated@@378))) (and (= $generated@@376 $generated@@383) (= (ControlFlow 0 3) 2))) $generated@@388)))
(let (($generated@@391  (and (=> (= (ControlFlow 0 8) 3) $generated@@390) (=> (= (ControlFlow 0 8) 4) $generated@@389))))
(let (($generated@@392  (=> (and (< $generated@@377 8) (= (ControlFlow 0 10) 8)) $generated@@391)))
(let (($generated@@393  (=> (and (<= 8 $generated@@377) (= (ControlFlow 0 9) 8)) $generated@@391)))
(let (($generated@@394  (=> (= $generated@@384 ($generated@@128 $generated@@385 $generated@@380 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@393) (=> (= (ControlFlow 0 11) 10) $generated@@392)))))
(let (($generated@@395  (=> (and (and ($generated@@386 $generated@@380) ($generated@@387 $generated@@380)) (and (= 1 $generated@@284) (= (ControlFlow 0 12) 11))) $generated@@394)))
$generated@@395)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
