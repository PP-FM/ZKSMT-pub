(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@187 (Int) Int)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@T) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 (Int Bool) Int)
(declare-fun $generated@@203 (Int Bool) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@T T@T) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@T) T@T)
(declare-fun $generated@@225 (T@T) T@T)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@T T@T) T@U)
(declare-fun $generated@@241 (T@T T@T) T@T)
(declare-fun $generated@@242 (T@T) T@T)
(declare-fun $generated@@243 (T@T) T@T)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@U Int) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@384 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (= (type $generated@@128) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@129) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@127 $generated@@128 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@72) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@128 $generated@@130) $generated@@60))) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60)))
 :pattern ( ($generated@@78 ($generated@@76 $generated@@129 $generated@@130) $generated@@60))
)))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@133 $generated@@137 $generated@@138)) 12)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@134 ($generated@@133 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@133 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@135 ($generated@@133 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@133 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@131 $generated@@143 $generated@@144 $generated@@145)) $generated@@146))
 :pattern ( ($generated@@131 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (let (($generated@@151 (type $generated@@150)))
(let (($generated@@152 (type $generated@@148)))
(= (type ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150)) ($generated@@133 $generated@@152 $generated@@151))))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@135 (type $generated@@153))))
 (=> (= (type $generated@@156) $generated@@157) (= ($generated@@131 ($generated@@136 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@154 $generated@@155) $generated@@156)))
 :weight 0
))) (and (and (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@131 ($generated@@136 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@131 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@131 ($generated@@136 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@131 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or true (= ($generated@@131 ($generated@@136 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@131 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ) (! (= (type ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@133 $generated@@72 $generated@@4))
 :pattern ( ($generated@@132 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@64 (type $generated@@185))))
 (=> (and (and (and (and (= (type $generated@@180) $generated@@72) (= (type $generated@@181) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@182) ($generated@@63 $generated@@4))) (= (type $generated@@184) $generated@@72)) (= (type $generated@@185) ($generated@@63 $generated@@186))) (= ($generated@@0 ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (not (= $generated@@184 $generated@@180)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@181 $generated@@184) $generated@@182))) $generated@@183))))
 :pattern ( ($generated@@131 ($generated@@132 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 Int) ) (! (= ($generated@@187 $generated@@188) $generated@@188)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(= (type ($generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@189 $generated@@192) $generated@@192)
 :pattern ( ($generated@@189 $generated@@192))
)))
(assert  (and (and (forall (($generated@@197 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@197)) 13)) (forall (($generated@@198 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
))) (forall (($generated@@199 T@T) ) (! (= (type ($generated@@193 $generated@@199)) ($generated@@195 $generated@@199))
 :pattern ( ($generated@@193 $generated@@199))
))))
(assert (forall (($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@200)) 0)
 :pattern ( ($generated@@193 $generated@@200))
)))
(assert  (=> (<= 0 $generated@@201) (forall (($generated@@204 Int) ($generated@@205 Bool) ) (!  (=> (or ($generated@@203 $generated@@204 $generated@@205) (not (= 0 $generated@@201))) (= ($generated@@202 $generated@@204 $generated@@205) (+ $generated@@204 (ite $generated@@205 2 3))))
 :pattern ( ($generated@@202 $generated@@204 $generated@@205))
))))
(assert  (and (= ($generated@@1 $generated@@208) 14) (forall (($generated@@209 T@U) ) (! (= (type ($generated@@207 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@207 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (= (type $generated@@211) $generated@@61) (= (type $generated@@212) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@206 ($generated@@207 $generated@@210) $generated@@211 $generated@@212) ($generated@@69 $generated@@210 $generated@@211 $generated@@212)))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@213) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@214) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@215) $generated@@208)) (= (type $generated@@216) $generated@@61)) ($generated@@127 $generated@@213 $generated@@214)) ($generated@@206 $generated@@215 $generated@@216 $generated@@213)) ($generated@@206 $generated@@215 $generated@@216 $generated@@214))
 :pattern ( ($generated@@127 $generated@@213 $generated@@214) ($generated@@206 $generated@@215 $generated@@216 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@217) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@218) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@220) $generated@@61)) ($generated@@127 $generated@@217 $generated@@218)) ($generated@@69 $generated@@219 $generated@@220 $generated@@217)) ($generated@@69 $generated@@219 $generated@@220 $generated@@218))
 :pattern ( ($generated@@127 $generated@@217 $generated@@218) ($generated@@69 $generated@@219 $generated@@220 $generated@@217))
)))
(assert  (and (and (and (and (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@226 $generated@@227)) 15)) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@224 ($generated@@223 $generated@@228 $generated@@229)) $generated@@228)
 :pattern ( ($generated@@223 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (! (= ($generated@@225 ($generated@@223 $generated@@230 $generated@@231)) $generated@@231)
 :pattern ( ($generated@@223 $generated@@230 $generated@@231))
))) (forall (($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@224 (type $generated@@232))))
(= (type ($generated@@221 $generated@@232)) ($generated@@71 $generated@@233 $generated@@4)))
 :pattern ( ($generated@@221 $generated@@232))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= (type ($generated@@222 $generated@@234 $generated@@235)) ($generated@@223 $generated@@234 $generated@@235))
 :pattern ( ($generated@@222 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@T) ) (! (let (($generated@@238 (type $generated@@236)))
 (not ($generated@@0 ($generated@@76 ($generated@@221 ($generated@@222 $generated@@238 $generated@@237)) $generated@@236))))
 :pattern ( (let (($generated@@238 (type $generated@@236)))
($generated@@76 ($generated@@221 ($generated@@222 $generated@@238 $generated@@237)) $generated@@236)))
)))
(assert  (and (and (and (and (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (= ($generated@@1 ($generated@@241 $generated@@244 $generated@@245)) 16)) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@242 ($generated@@241 $generated@@246 $generated@@247)) $generated@@246)
 :pattern ( ($generated@@241 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (! (= ($generated@@243 ($generated@@241 $generated@@248 $generated@@249)) $generated@@249)
 :pattern ( ($generated@@241 $generated@@248 $generated@@249))
))) (forall (($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@242 (type $generated@@250))))
(= (type ($generated@@239 $generated@@250)) ($generated@@71 $generated@@251 $generated@@4)))
 :pattern ( ($generated@@239 $generated@@250))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= (type ($generated@@240 $generated@@252 $generated@@253)) ($generated@@241 $generated@@252 $generated@@253))
 :pattern ( ($generated@@240 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@T) ) (! (let (($generated@@256 (type $generated@@254)))
 (not ($generated@@0 ($generated@@76 ($generated@@239 ($generated@@240 $generated@@256 $generated@@255)) $generated@@254))))
 :pattern ( (let (($generated@@256 (type $generated@@254)))
($generated@@76 ($generated@@239 ($generated@@240 $generated@@256 $generated@@255)) $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@225 (type $generated@@257))))
(let (($generated@@259 ($generated@@224 (type $generated@@257))))
 (=> (= (type $generated@@257) ($generated@@223 $generated@@259 $generated@@258)) (or (= $generated@@257 ($generated@@222 $generated@@259 $generated@@258)) (exists (($generated@@260 T@U) ) (!  (and (= (type $generated@@260) $generated@@259) ($generated@@0 ($generated@@76 ($generated@@221 $generated@@257) $generated@@260)))
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
))))))
 :pattern ( ($generated@@221 $generated@@257))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@243 (type $generated@@261))))
(let (($generated@@263 ($generated@@242 (type $generated@@261))))
 (=> (= (type $generated@@261) ($generated@@241 $generated@@263 $generated@@262)) (or (= $generated@@261 ($generated@@240 $generated@@263 $generated@@262)) (exists (($generated@@264 T@U) ) (!  (and (= (type $generated@@264) $generated@@263) ($generated@@0 ($generated@@76 ($generated@@239 $generated@@261) $generated@@264)))
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
))))))
 :pattern ( ($generated@@239 $generated@@261))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@61)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@267) ($generated@@71 $generated@@208 $generated@@4)) (= (type $generated@@268) $generated@@61)) (= (type $generated@@269) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@208) ($generated@@0 ($generated@@76 $generated@@267 $generated@@270))) ($generated@@206 $generated@@270 $generated@@268 $generated@@269))
 :pattern ( ($generated@@76 $generated@@267 $generated@@270))
))))
 :pattern ( ($generated@@69 $generated@@267 ($generated@@265 $generated@@268) $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@61)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@273) ($generated@@71 $generated@@208 $generated@@4)) (= (type $generated@@274) $generated@@61)) (= (type $generated@@275) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@208) ($generated@@0 ($generated@@76 $generated@@273 $generated@@276))) ($generated@@206 $generated@@276 $generated@@274 $generated@@275))
 :pattern ( ($generated@@76 $generated@@273 $generated@@276))
))))
 :pattern ( ($generated@@69 $generated@@273 ($generated@@271 $generated@@274) $generated@@275))
)))
(assert  (and (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@61)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@225 (type $generated@@281))))
(let (($generated@@283 ($generated@@224 (type $generated@@281))))
(= (type ($generated@@278 $generated@@281)) ($generated@@71 $generated@@283 $generated@@282))))
 :pattern ( ($generated@@278 $generated@@281))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) ($generated@@223 $generated@@208 $generated@@208)) (= (type $generated@@285) $generated@@61)) (= (type $generated@@286) $generated@@61)) (= (type $generated@@287) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@284 ($generated@@277 $generated@@285 $generated@@286) $generated@@287) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@208) ($generated@@0 ($generated@@76 ($generated@@221 $generated@@284) $generated@@288))) (and ($generated@@206 ($generated@@76 ($generated@@278 $generated@@284) $generated@@288) $generated@@286 $generated@@287) ($generated@@206 $generated@@288 $generated@@285 $generated@@287)))
 :pattern ( ($generated@@76 ($generated@@278 $generated@@284) $generated@@288))
 :pattern ( ($generated@@76 ($generated@@221 $generated@@284) $generated@@288))
))))
 :pattern ( ($generated@@69 $generated@@284 ($generated@@277 $generated@@285 $generated@@286) $generated@@287))
)))
(assert  (and (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (= (type ($generated@@289 $generated@@291 $generated@@292)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@291 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@243 (type $generated@@293))))
(let (($generated@@295 ($generated@@242 (type $generated@@293))))
(= (type ($generated@@290 $generated@@293)) ($generated@@71 $generated@@295 $generated@@294))))
 :pattern ( ($generated@@290 $generated@@293))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) ($generated@@241 $generated@@208 $generated@@208)) (= (type $generated@@297) $generated@@61)) (= (type $generated@@298) $generated@@61)) (= (type $generated@@299) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299) (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@208) ($generated@@0 ($generated@@76 ($generated@@239 $generated@@296) $generated@@300))) (and ($generated@@206 ($generated@@76 ($generated@@290 $generated@@296) $generated@@300) $generated@@298 $generated@@299) ($generated@@206 $generated@@300 $generated@@297 $generated@@299)))
 :pattern ( ($generated@@76 ($generated@@290 $generated@@296) $generated@@300))
 :pattern ( ($generated@@76 ($generated@@239 $generated@@296) $generated@@300))
))))
 :pattern ( ($generated@@69 $generated@@296 ($generated@@289 $generated@@297 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@302) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@303) ($generated@@71 $generated@@72 $generated@@73))) (not (= $generated@@301 $generated@@303))) (and ($generated@@127 $generated@@301 $generated@@302) ($generated@@127 $generated@@302 $generated@@303))) ($generated@@127 $generated@@301 $generated@@303))
 :pattern ( ($generated@@127 $generated@@301 $generated@@302) ($generated@@127 $generated@@302 $generated@@303))
)))
(assert  (=> (<= 0 $generated@@201) (forall (($generated@@304 Int) ($generated@@305 Bool) ) (!  (=> (or ($generated@@203 $generated@@304 $generated@@305) (not (= 0 $generated@@201))) true)
 :pattern ( ($generated@@202 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@71 $generated@@307 $generated@@4))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@243 (type $generated@@308))))
(let (($generated@@310 ($generated@@242 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@241 $generated@@310 $generated@@309)) (= (= $generated@@308 ($generated@@240 $generated@@310 $generated@@309)) (= ($generated@@239 $generated@@308) ($generated@@306 $generated@@310))))))
 :pattern ( ($generated@@239 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@196 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@195 $generated@@312)) (<= 0 ($generated@@194 $generated@@311))))
 :pattern ( ($generated@@194 $generated@@311))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@277 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@277 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@277 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@277 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@277 $generated@@321 $generated@@322)) $generated@@58))
 :pattern ( ($generated@@277 $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@61)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@61) (= (type $generated@@326) $generated@@61)) (= ($generated@@323 ($generated@@289 $generated@@325 $generated@@326)) $generated@@325))
 :pattern ( ($generated@@289 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@61) (= (type $generated@@330) $generated@@61)) (= ($generated@@327 ($generated@@289 $generated@@329 $generated@@330)) $generated@@330))
 :pattern ( ($generated@@289 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@61) (= (type $generated@@332) $generated@@61)) (= ($generated@@67 ($generated@@289 $generated@@331 $generated@@332)) $generated@@59))
 :pattern ( ($generated@@289 $generated@@331 $generated@@332))
)))
(assert  (and (forall (($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@335)) $generated@@61)
 :pattern ( ($generated@@333 $generated@@335))
)) (forall (($generated@@336 T@U) ($generated@@337 Int) ) (! (let (($generated@@338 ($generated@@196 (type $generated@@336))))
(= (type ($generated@@334 $generated@@336 $generated@@337)) $generated@@338))
 :pattern ( ($generated@@334 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@195 $generated@@208)) (= (type $generated@@340) $generated@@61)) (= (type $generated@@341) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@339 ($generated@@333 $generated@@340) $generated@@341) (forall (($generated@@342 Int) ) (!  (=> (and (<= 0 $generated@@342) (< $generated@@342 ($generated@@194 $generated@@339))) ($generated@@206 ($generated@@334 $generated@@339 $generated@@342) $generated@@340 $generated@@341))
 :pattern ( ($generated@@334 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@69 $generated@@339 ($generated@@333 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@344 Int) ) (! (= ($generated@@343 ($generated@@70 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@70 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@61)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@345 ($generated@@265 $generated@@347)) $generated@@347))
 :pattern ( ($generated@@265 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@61) (= ($generated@@67 ($generated@@265 $generated@@348)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@61) (= ($generated@@349 ($generated@@271 $generated@@351)) $generated@@351))
 :pattern ( ($generated@@271 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@67 ($generated@@271 $generated@@352)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@352))
)))
(assert  (and (forall (($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@353 $generated@@355))
)) (forall (($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@356)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@354 ($generated@@353 $generated@@357)) $generated@@357))
 :pattern ( ($generated@@353 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@61) (= ($generated@@67 ($generated@@353 $generated@@358)) $generated@@56))
 :pattern ( ($generated@@353 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@61)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@61) (= ($generated@@359 ($generated@@333 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@333 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@61) (= ($generated@@67 ($generated@@333 $generated@@362)) $generated@@57))
 :pattern ( ($generated@@333 $generated@@362))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated@@363 $generated@@367 ($generated@@207 $generated@@366)) $generated@@366))
 :pattern ( ($generated@@207 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (not ($generated@@0 ($generated@@76 ($generated@@306 $generated@@369) $generated@@368))))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@76 ($generated@@306 $generated@@369) $generated@@368)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@71 $generated@@208 $generated@@2)) (= (type $generated@@371) $generated@@61)) (= (type $generated@@372) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@370 ($generated@@353 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@208) (< 0 ($generated ($generated@@76 $generated@@370 $generated@@373)))) ($generated@@206 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@76 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@69 $generated@@370 ($generated@@353 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 Int) ) (! (= ($generated@@207 ($generated@@8 ($generated@@187 $generated@@374))) ($generated@@189 ($generated@@207 ($generated@@8 $generated@@374))))
 :pattern ( ($generated@@207 ($generated@@8 ($generated@@187 $generated@@374))))
)))
(assert (forall (($generated@@375 T@U) ) (! (= ($generated@@207 ($generated@@189 $generated@@375)) ($generated@@189 ($generated@@207 $generated@@375)))
 :pattern ( ($generated@@207 ($generated@@189 $generated@@375)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@196 (type $generated@@376))))
 (=> (and (= (type $generated@@376) ($generated@@195 $generated@@377)) (= ($generated@@194 $generated@@376) 0)) (= $generated@@376 ($generated@@193 $generated@@377))))
 :pattern ( ($generated@@194 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@379) $generated@@2)) ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
 :pattern ( ($generated@@69 $generated@@379 $generated@@46 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@381) $generated@@3)) ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
 :pattern ( ($generated@@69 $generated@@381 $generated@@47 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@383) $generated@@4)) ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
 :pattern ( ($generated@@69 $generated@@383 $generated@@44 $generated@@382))
)))
(assert (= ($generated@@1 $generated@@384) 17))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@386) $generated@@384)) ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
 :pattern ( ($generated@@69 $generated@@386 $generated@@45 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@388) $generated@@208)) ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
 :pattern ( ($generated@@69 $generated@@388 $generated@@48 $generated@@387))
)))
(assert  (=> (<= 0 $generated@@201) (forall (($generated@@389 Int) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@4) (or ($generated@@203 ($generated@@187 $generated@@389) ($generated@@0 ($generated@@189 $generated@@390))) (not (= 0 $generated@@201)))) (= ($generated@@202 ($generated@@187 $generated@@389) ($generated@@0 ($generated@@189 $generated@@390))) (+ $generated@@389 (ite ($generated@@0 $generated@@390) 2 3))))
 :weight 3
 :pattern ( ($generated@@202 ($generated@@187 $generated@@389) ($generated@@0 ($generated@@189 $generated@@390))))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@T T@T) T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@272 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@294 (T@U T@U T@U) T@U)
(declare-fun $generated@@295 (T@U T@U T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@319 (Int) Int)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@353 (T@U T@U T@U) Bool)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@362 () T@U)
(declare-fun $generated@@363 (T@U T@U) Bool)
(declare-fun $generated@@364 (T@T) T@U)
(declare-fun $generated@@372 (T@T) T@U)
(declare-fun $generated@@373 (T@U) Int)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@375 (T@T) T@T)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U T@U) T@U)
(declare-fun $generated@@388 () T@T)
(declare-fun $generated@@407 (T@U) Int)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@T T@T) T@U)
(declare-fun $generated@@420 (T@T T@T) T@T)
(declare-fun $generated@@421 (T@T) T@T)
(declare-fun $generated@@422 (T@T) T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@T T@T) T@U)
(declare-fun $generated@@438 (T@T T@T) T@T)
(declare-fun $generated@@439 (T@T) T@T)
(declare-fun $generated@@440 (T@T) T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@488 (T@U T@U) Bool)
(declare-fun $generated@@489 (T@U T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (Bool) T@U)
(declare-fun $generated@@504 (Bool) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@559 (T@U T@U) T@U)
(declare-fun $generated@@567 (T@U T@U) T@U)
(declare-fun $generated@@578 (T@U T@U) T@U)
(declare-fun $generated@@605 (T@T) T@U)
(declare-fun $generated@@629 () T@T)
(declare-fun $generated@@637 (T@U) T@U)
(declare-fun $generated@@641 (T@U) T@U)
(declare-fun $generated@@647 (T@U) T@U)
(declare-fun $generated@@651 (T@U) T@U)
(declare-fun $generated@@659 (T@U) T@U)
(declare-fun $generated@@663 (T@U) T@U)
(declare-fun $generated@@672 (T@U) T@U)
(declare-fun $generated@@673 (T@U Int) T@U)
(declare-fun $generated@@685 (T@U) Int)
(declare-fun $generated@@687 (T@U) T@U)
(declare-fun $generated@@691 (T@U) T@U)
(declare-fun $generated@@695 (T@U) T@U)
(declare-fun $generated@@699 (T@U) T@U)
(declare-fun $generated@@703 (T@U) T@U)
(declare-fun $generated@@706 (T@U) T@U)
(declare-fun $generated@@709 (T@U) T@U)
(declare-fun $generated@@722 (T@U) Int)
(declare-fun $generated@@723 (T@U) Int)
(declare-fun $generated@@731 (T@U T@U T@U) T@U)
(declare-fun $generated@@743 (T@U) T@U)
(declare-fun $generated@@852 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@74) 6) (= (type $generated@@44) $generated@@74)) (= (type $generated@@45) $generated@@74)) (= (type $generated@@46) $generated@@74)) (= (type $generated@@47) $generated@@74)) (= (type $generated@@48) $generated@@74)) (= ($generated@@1 $generated@@75) 7)) (= (type $generated@@49) $generated@@75)) (= (type $generated@@50) $generated@@75)) (= (type $generated@@51) $generated@@75)) (= (type $generated@@52) $generated@@75)) (= (type $generated@@53) $generated@@75)) (= (type $generated@@54) $generated@@75)) (= (type $generated@@55) $generated@@75)) (= (type $generated@@56) $generated@@75)) (= (type $generated@@57) $generated@@75)) (= (type $generated@@58) $generated@@75)) (= (type $generated@@59) $generated@@75)) (forall (($generated@@80 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@80)) 8))) (forall (($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@76 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@76 $generated@@81))
))) (= (type $generated@@60) ($generated@@76 $generated@@4))) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@75)) (= (type $generated@@65) $generated@@75)) (= ($generated@@1 $generated@@78) 9)) (= (type $generated@@66) $generated@@78)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@79) 10)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@79)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@79)) (= (type $generated@@73) $generated@@79)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73)
)
(assert (forall (($generated@@83 T@U) ) (! (= (type ($generated@@82 $generated@@83)) $generated@@75)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (= ($generated@@82 $generated@@44) $generated@@49))
(assert (= ($generated@@82 $generated@@45) $generated@@50))
(assert (= ($generated@@82 $generated@@46) $generated@@51))
(assert (= ($generated@@82 $generated@@47) $generated@@52))
(assert (= ($generated@@82 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@1 ($generated@@86 $generated@@95 $generated@@96)) 11)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@89 ($generated@@86 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@86 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@90 ($generated@@86 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@86 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 ($generated@@90 (type $generated@@101))))
(= (type ($generated@@91 $generated@@101 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 (type $generated@@106)))
(let (($generated@@108 (type $generated@@105)))
(= (type ($generated@@92 $generated@@104 $generated@@105 $generated@@106)) ($generated@@86 $generated@@108 $generated@@107))))
 :pattern ( ($generated@@92 $generated@@104 $generated@@105 $generated@@106))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 ($generated@@90 (type $generated@@109))))
 (=> (= (type $generated@@111) $generated@@112) (= ($generated@@91 ($generated@@92 $generated@@109 $generated@@110 $generated@@111) $generated@@110) $generated@@111)))
 :weight 0
))) (and (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@91 ($generated@@92 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@91 $generated@@114 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@91 $generated@@118 $generated@@120)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 12)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@77 (type $generated@@122))))
(= (type ($generated@@93 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
))) (= ($generated@@1 $generated@@88) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= (type ($generated@@94 $generated@@124 $generated@@125 $generated@@126)) $generated@@88)
 :pattern ( ($generated@@94 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (let (($generated@@130 ($generated@@77 (type $generated@@128))))
 (=> (= (type $generated@@129) $generated@@130) (= ($generated@@93 ($generated@@94 $generated@@127 $generated@@128 $generated@@129) $generated@@128) $generated@@129)))
 :weight 0
))) (and (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@93 ($generated@@94 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@93 $generated@@132 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@93 $generated@@136 $generated@@138)))
 :weight 0
)))) (forall (($generated@@139 Int) ) (! (= (type ($generated@@85 $generated@@139)) $generated@@74)
 :pattern ( ($generated@@85 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
 :pattern ( ($generated@@84 $generated@@140 ($generated@@85 0) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@144) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@142 $generated@@143 $generated@@144)) (forall (($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@87) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@143 $generated@@145) $generated@@60))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@144 $generated@@145) $generated@@60)))
 :pattern ( ($generated@@93 ($generated@@91 $generated@@144 $generated@@145) $generated@@60))
)))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (= (type $generated@@146) $generated@@74))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@2) (= (type $generated@@148) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@84 $generated@@147 $generated@@146 $generated@@148))
 :pattern ( ($generated@@84 $generated@@147 $generated@@146 $generated@@148))
)))
(assert  (and (= (type $generated@@149) $generated@@74) (= (type $generated@@150) $generated@@87)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@87) (= (type $generated@@152) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@151 $generated@@149 $generated@@152)  (or (= $generated@@151 $generated@@150) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@84 $generated@@151 $generated@@149 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@153 $generated@@154 ($generated@@85 0)))
 :pattern ( ($generated@@153 $generated@@154 ($generated@@85 0)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 14) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@74)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@74)
 :pattern ( ($generated@@157 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@74) (= (type $generated@@161) $generated@@156)) (= (type $generated@@162) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@161 ($generated@@155 $generated@@160) $generated@@162) ($generated@@84 $generated@@161 ($generated@@157 $generated@@160) $generated@@162)))
 :pattern ( ($generated@@84 $generated@@161 ($generated@@155 $generated@@160) $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@74)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@74) (= (type $generated@@166) $generated@@156)) (= (type $generated@@167) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@84 $generated@@166 ($generated@@155 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@84 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 15) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@74)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@74) (= (type $generated@@174) $generated@@74)) (= (type $generated@@175) $generated@@170)) ($generated@@153 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@153 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 16) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@74)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@86 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@74)) ($generated@@153 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@153 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 17)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@87 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@77 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@87) (= (type $generated@@239) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@240) ($generated@@76 $generated@@4))) (= (type $generated@@242) $generated@@87)) (= (type $generated@@243) ($generated@@76 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@191 $generated@@87 $generated@@4))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@77 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@87) (= (type $generated@@251) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@252) ($generated@@76 $generated@@4))) (= (type $generated@@254) $generated@@87)) (= (type $generated@@255) ($generated@@76 $generated@@256))) (= ($generated@@0 ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@89 (type $generated@@258))))
(= (type ($generated@@257 $generated@@258 $generated@@259)) ($generated@@86 $generated@@260 $generated@@4)))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@89 (type $generated@@261))))
 (=> (and (= (type $generated@@261) ($generated@@86 $generated@@263 $generated@@4)) (= (type $generated@@262) ($generated@@86 $generated@@263 $generated@@4))) (= ($generated@@257 ($generated@@257 $generated@@261 $generated@@262) $generated@@262) ($generated@@257 $generated@@261 $generated@@262))))
 :pattern ( ($generated@@257 ($generated@@257 $generated@@261 $generated@@262) $generated@@262))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@170)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@74) (= (type $generated@@269) $generated@@74)) (= (type $generated@@270) $generated@@179)) (= (type $generated@@271) $generated@@179)) (= ($generated@@153 ($generated@@264 $generated@@270 $generated@@271) ($generated@@169 $generated@@268 $generated@@269))  (and ($generated@@265 $generated@@270 $generated@@268) ($generated@@265 $generated@@271 $generated@@269))))
 :pattern ( ($generated@@153 ($generated@@264 $generated@@270 $generated@@271) ($generated@@169 $generated@@268 $generated@@269)))
)))
(assert  (and (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@274 $generated@@276 $generated@@277 $generated@@278)) ($generated@@86 $generated@@179 $generated@@4))
 :pattern ( ($generated@@274 $generated@@276 $generated@@277 $generated@@278))
)) (forall (($generated@@279 T@U) ) (! (= (type ($generated@@275 $generated@@279)) $generated@@179)
 :pattern ( ($generated@@275 $generated@@279))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@280) $generated@@74) (= (type $generated@@281) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@282) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@283) $generated@@156)) (and (and (and ($generated@@142 $generated@@281 $generated@@282) (and ($generated@@273 $generated@@281) ($generated@@273 $generated@@282))) ($generated@@153 $generated@@283 ($generated@@157 $generated@@280))) (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@77 (type $generated@@285))))
 (=> (and (and (= (type $generated@@284) $generated@@87) (= (type $generated@@285) ($generated@@76 $generated@@286))) (and (not (= $generated@@284 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@280 $generated@@281 $generated@@283) ($generated@@275 $generated@@284))))) (= ($generated@@93 ($generated@@91 $generated@@281 $generated@@284) $generated@@285) ($generated@@93 ($generated@@91 $generated@@282 $generated@@284) $generated@@285))))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))) (= ($generated@@272 $generated@@280 $generated@@281 $generated@@283) ($generated@@272 $generated@@280 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@142 $generated@@281 $generated@@282) ($generated@@272 $generated@@280 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@287) $generated@@74) (= (type $generated@@288) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@289) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@290) $generated@@156)) (and (and (and ($generated@@142 $generated@@288 $generated@@289) (and ($generated@@273 $generated@@288) ($generated@@273 $generated@@289))) ($generated@@153 $generated@@290 ($generated@@157 $generated@@287))) (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@77 (type $generated@@292))))
 (=> (and (and (= (type $generated@@291) $generated@@87) (= (type $generated@@292) ($generated@@76 $generated@@293))) (and (not (= $generated@@291 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@287 $generated@@289 $generated@@290) ($generated@@275 $generated@@291))))) (= ($generated@@93 ($generated@@91 $generated@@288 $generated@@291) $generated@@292) ($generated@@93 ($generated@@91 $generated@@289 $generated@@291) $generated@@292))))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))) (= ($generated@@272 $generated@@287 $generated@@288 $generated@@290) ($generated@@272 $generated@@287 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@142 $generated@@288 $generated@@289) ($generated@@272 $generated@@287 $generated@@289 $generated@@290))
)))
(assert  (and (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (! (= (type ($generated@@294 $generated@@296 $generated@@297 $generated@@298)) $generated@@179)
 :pattern ( ($generated@@294 $generated@@296 $generated@@297 $generated@@298))
)) (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (! (= (type ($generated@@295 $generated@@299 $generated@@300 $generated@@301)) $generated@@156)
 :pattern ( ($generated@@295 $generated@@299 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) $generated@@74) (= (type $generated@@303) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@304) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@179))) (= (type $generated@@305) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@4))) (= (type $generated@@306) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) ($generated@@86 $generated@@179 $generated@@4)))) (= ($generated@@294 $generated@@302 $generated@@303 ($generated@@295 $generated@@304 $generated@@305 $generated@@306)) ($generated@@91 $generated@@304 $generated@@303)))
 :pattern ( ($generated@@294 $generated@@302 $generated@@303 ($generated@@295 $generated@@304 $generated@@305 $generated@@306)))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@170) (= (type $generated@@308) $generated@@170)) (= ($generated@@176 $generated@@307 $generated@@308) (= $generated@@307 $generated@@308)))
 :pattern ( ($generated@@176 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@74)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) ($generated@@86 $generated@@179 $generated@@4)) (= (type $generated@@312) $generated@@74)) (= ($generated@@153 $generated@@311 ($generated@@309 $generated@@312)) (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@179) ($generated@@0 ($generated@@91 $generated@@311 $generated@@313))) ($generated@@265 $generated@@313 $generated@@312))
 :pattern ( ($generated@@91 $generated@@311 $generated@@313))
))))
 :pattern ( ($generated@@153 $generated@@311 ($generated@@309 $generated@@312)))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@74)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) ($generated@@86 $generated@@179 $generated@@4)) (= (type $generated@@317) $generated@@74)) (= ($generated@@153 $generated@@316 ($generated@@314 $generated@@317)) (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@179) ($generated@@0 ($generated@@91 $generated@@316 $generated@@318))) ($generated@@265 $generated@@318 $generated@@317))
 :pattern ( ($generated@@91 $generated@@316 $generated@@318))
))))
 :pattern ( ($generated@@153 $generated@@316 ($generated@@314 $generated@@317)))
)))
(assert (forall (($generated@@320 Int) ) (! (= ($generated@@319 $generated@@320) $generated@@320)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 (type $generated@@322)))
(= (type ($generated@@321 $generated@@322)) $generated@@323))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@324 T@U) ) (! (= ($generated@@321 $generated@@324) $generated@@324)
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@325) $generated@@74) (= (type $generated@@326) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@327) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@328) $generated@@156)) (and (and (and ($generated@@142 $generated@@326 $generated@@327) (and ($generated@@273 $generated@@326) ($generated@@273 $generated@@327))) ($generated@@153 $generated@@328 ($generated@@157 $generated@@325))) (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@77 (type $generated@@330))))
 (=> (and (and (= (type $generated@@329) $generated@@87) (= (type $generated@@330) ($generated@@76 $generated@@331))) (and (not (= $generated@@329 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@325 $generated@@326 $generated@@328) ($generated@@275 $generated@@329))))) (= ($generated@@93 ($generated@@91 $generated@@326 $generated@@329) $generated@@330) ($generated@@93 ($generated@@91 $generated@@327 $generated@@329) $generated@@330))))
 :no-pattern (type $generated@@329)
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
)))) (= ($generated@@274 $generated@@325 $generated@@326 $generated@@328) ($generated@@274 $generated@@325 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@142 $generated@@326 $generated@@327) ($generated@@274 $generated@@325 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@332) $generated@@74) (= (type $generated@@333) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@334) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@335) $generated@@156)) (and (and (and ($generated@@142 $generated@@333 $generated@@334) (and ($generated@@273 $generated@@333) ($generated@@273 $generated@@334))) ($generated@@153 $generated@@335 ($generated@@157 $generated@@332))) (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@77 (type $generated@@337))))
 (=> (and (and (= (type $generated@@336) $generated@@87) (= (type $generated@@337) ($generated@@76 $generated@@338))) (and (not (= $generated@@336 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@332 $generated@@334 $generated@@335) ($generated@@275 $generated@@336))))) (= ($generated@@93 ($generated@@91 $generated@@333 $generated@@336) $generated@@337) ($generated@@93 ($generated@@91 $generated@@334 $generated@@336) $generated@@337))))
 :no-pattern (type $generated@@336)
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
)))) (= ($generated@@274 $generated@@332 $generated@@333 $generated@@335) ($generated@@274 $generated@@332 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@142 $generated@@333 $generated@@334) ($generated@@274 $generated@@332 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@339) $generated@@74) (= (type $generated@@340) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@341) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@342) $generated@@156)) (and (and (and ($generated@@142 $generated@@340 $generated@@341) (and ($generated@@273 $generated@@340) ($generated@@273 $generated@@341))) ($generated@@153 $generated@@342 ($generated@@157 $generated@@339))) (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@77 (type $generated@@344))))
 (=> (and (and (= (type $generated@@343) $generated@@87) (= (type $generated@@344) ($generated@@76 $generated@@345))) (and (not (= $generated@@343 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@339 $generated@@340 $generated@@342) ($generated@@275 $generated@@343))))) (= ($generated@@93 ($generated@@91 $generated@@340 $generated@@343) $generated@@344) ($generated@@93 ($generated@@91 $generated@@341 $generated@@343) $generated@@344))))
 :no-pattern (type $generated@@343)
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
)))) (= ($generated@@294 $generated@@339 $generated@@340 $generated@@342) ($generated@@294 $generated@@339 $generated@@341 $generated@@342)))
 :pattern ( ($generated@@142 $generated@@340 $generated@@341) ($generated@@294 $generated@@339 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@346) $generated@@74) (= (type $generated@@347) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@348) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@349) $generated@@156)) (and (and (and ($generated@@142 $generated@@347 $generated@@348) (and ($generated@@273 $generated@@347) ($generated@@273 $generated@@348))) ($generated@@153 $generated@@349 ($generated@@157 $generated@@346))) (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@77 (type $generated@@351))))
 (=> (and (and (= (type $generated@@350) $generated@@87) (= (type $generated@@351) ($generated@@76 $generated@@352))) (and (not (= $generated@@350 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@346 $generated@@348 $generated@@349) ($generated@@275 $generated@@350))))) (= ($generated@@93 ($generated@@91 $generated@@347 $generated@@350) $generated@@351) ($generated@@93 ($generated@@91 $generated@@348 $generated@@350) $generated@@351))))
 :no-pattern (type $generated@@350)
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
)))) (= ($generated@@294 $generated@@346 $generated@@347 $generated@@349) ($generated@@294 $generated@@346 $generated@@348 $generated@@349)))
 :pattern ( ($generated@@142 $generated@@347 $generated@@348) ($generated@@294 $generated@@346 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@354) $generated@@74) (= (type $generated@@355) $generated@@74)) (= (type $generated@@356) $generated@@179)) (= (type $generated@@357) $generated@@179)) (= (type $generated@@358) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@273 $generated@@358)) (= ($generated@@84 ($generated@@264 $generated@@356 $generated@@357) ($generated@@169 $generated@@354 $generated@@355) $generated@@358)  (and ($generated@@353 $generated@@356 $generated@@354 $generated@@358) ($generated@@353 $generated@@357 $generated@@355 $generated@@358))))
 :pattern ( ($generated@@84 ($generated@@264 $generated@@356 $generated@@357) ($generated@@169 $generated@@354 $generated@@355) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@78)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@170) (= ($generated@@168 $generated@@361) (= ($generated@@359 $generated@@361) $generated@@66)))
 :pattern ( ($generated@@168 $generated@@361))
)))
(assert  (and (= (type $generated@@362) ($generated@@86 $generated@@87 $generated@@88)) (forall (($generated@@365 T@T) ) (! (= (type ($generated@@364 $generated@@365)) ($generated@@86 $generated@@365 $generated@@4))
 :pattern ( ($generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (and (= (type $generated@@366) $generated@@74) (= (type $generated@@367) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@368) $generated@@156)) (and (and ($generated@@273 $generated@@367) ($generated@@153 $generated@@368 ($generated@@157 $generated@@366))) ($generated@@363 ($generated@@274 $generated@@366 $generated@@362 $generated@@368) ($generated@@364 $generated@@179)))) (= ($generated@@272 $generated@@366 $generated@@362 $generated@@368) ($generated@@272 $generated@@366 $generated@@367 $generated@@368)))
 :pattern ( ($generated@@272 $generated@@366 $generated@@362 $generated@@368) ($generated@@273 $generated@@367))
 :pattern ( ($generated@@272 $generated@@366 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@170) ($generated@@168 $generated@@369)) (exists (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (and (and (= (type $generated@@370) $generated@@179) (= (type $generated@@371) $generated@@179)) (= $generated@@369 ($generated@@264 $generated@@370 $generated@@371)))
 :no-pattern (type $generated@@370)
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
)))
 :pattern ( ($generated@@168 $generated@@369))
)))
(assert  (and (and (forall (($generated@@376 T@T) ) (= ($generated@@1 ($generated@@374 $generated@@376)) 18)) (forall (($generated@@377 T@T) ) (! (= ($generated@@375 ($generated@@374 $generated@@377)) $generated@@377)
 :pattern ( ($generated@@374 $generated@@377))
))) (forall (($generated@@378 T@T) ) (! (= (type ($generated@@372 $generated@@378)) ($generated@@374 $generated@@378))
 :pattern ( ($generated@@372 $generated@@378))
))))
(assert (forall (($generated@@379 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@379)) 0)
 :pattern ( ($generated@@372 $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@86 $generated@@179 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@T) ($generated@@384 T@U) ) (! (= (type ($generated@@381 $generated@@383 $generated@@384)) $generated@@383)
 :pattern ( ($generated@@381 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@86 $generated@@87 $generated@@4)) (= (type $generated@@386) $generated@@179)) (= ($generated@@0 ($generated@@91 ($generated@@380 $generated@@385) $generated@@386)) ($generated@@0 ($generated@@91 $generated@@385 ($generated@@381 $generated@@87 $generated@@386)))))
 :pattern ( ($generated@@91 ($generated@@380 $generated@@385) $generated@@386))
)))
(assert  (and (= ($generated@@1 $generated@@388) 19) (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@90 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389 $generated@@390)) $generated@@391))
 :pattern ( ($generated@@387 $generated@@389 $generated@@390))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@90 (type $generated@@392))))
 (=> (and (= (type $generated@@392) ($generated@@86 $generated@@388 $generated@@394)) (= (type $generated@@393) $generated@@388)) (= ($generated@@387 $generated@@392 $generated@@393) ($generated@@91 $generated@@392 $generated@@393))))
 :pattern ( ($generated@@387 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@2) (= ($generated@@153 $generated@@395 $generated@@146) (<= ($generated@@319 0) ($generated $generated@@395))))
 :pattern ( ($generated@@153 $generated@@395 $generated@@146))
)))
(assert ($generated@@273 $generated@@362))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@74) (= (type $generated@@398) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@353 ($generated@@275 $generated@@396) $generated@@397 $generated@@398) ($generated@@84 $generated@@396 $generated@@397 $generated@@398)))
 :pattern ( ($generated@@353 ($generated@@275 $generated@@396) $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@399) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@400) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@401) $generated@@179)) (= (type $generated@@402) $generated@@74)) ($generated@@142 $generated@@399 $generated@@400)) ($generated@@353 $generated@@401 $generated@@402 $generated@@399)) ($generated@@353 $generated@@401 $generated@@402 $generated@@400))
 :pattern ( ($generated@@142 $generated@@399 $generated@@400) ($generated@@353 $generated@@401 $generated@@402 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@403) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@404) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@406) $generated@@74)) ($generated@@142 $generated@@403 $generated@@404)) ($generated@@84 $generated@@405 $generated@@406 $generated@@403)) ($generated@@84 $generated@@405 $generated@@406 $generated@@404))
 :pattern ( ($generated@@142 $generated@@403 $generated@@404) ($generated@@84 $generated@@405 $generated@@406 $generated@@403))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@86 $generated@@409 $generated@@2))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@89 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@86 $generated@@411 $generated@@2)) (and (= (= ($generated@@407 $generated@@410) 0) (= $generated@@410 ($generated@@408 $generated@@411))) (=> (not (= ($generated@@407 $generated@@410) 0)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (< 0 ($generated ($generated@@91 $generated@@410 $generated@@412))))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (= (type ($generated@@413 $generated@@414)) $generated@@79)
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (= (type $generated@@415) $generated@@74) (and (= ($generated@@82 ($generated@@157 $generated@@415)) $generated@@63) (= ($generated@@413 ($generated@@157 $generated@@415)) $generated@@70)))
 :pattern ( ($generated@@157 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@74) (and (= ($generated@@82 ($generated@@155 $generated@@416)) $generated@@64) (= ($generated@@413 ($generated@@155 $generated@@416)) $generated@@71)))
 :pattern ( ($generated@@155 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@74) (and (= ($generated@@82 ($generated@@163 $generated@@417)) $generated@@65) (= ($generated@@413 ($generated@@163 $generated@@417)) $generated@@72)))
 :pattern ( ($generated@@163 $generated@@417))
)))
(assert  (and (and (and (and (forall (($generated@@423 T@T) ($generated@@424 T@T) ) (= ($generated@@1 ($generated@@420 $generated@@423 $generated@@424)) 20)) (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (! (= ($generated@@421 ($generated@@420 $generated@@425 $generated@@426)) $generated@@425)
 :pattern ( ($generated@@420 $generated@@425 $generated@@426))
))) (forall (($generated@@427 T@T) ($generated@@428 T@T) ) (! (= ($generated@@422 ($generated@@420 $generated@@427 $generated@@428)) $generated@@428)
 :pattern ( ($generated@@420 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@421 (type $generated@@429))))
(= (type ($generated@@418 $generated@@429)) ($generated@@86 $generated@@430 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@429))
))) (forall (($generated@@431 T@T) ($generated@@432 T@T) ) (! (= (type ($generated@@419 $generated@@431 $generated@@432)) ($generated@@420 $generated@@431 $generated@@432))
 :pattern ( ($generated@@419 $generated@@431 $generated@@432))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@T) ) (! (let (($generated@@435 (type $generated@@433)))
 (not ($generated@@0 ($generated@@91 ($generated@@418 ($generated@@419 $generated@@435 $generated@@434)) $generated@@433))))
 :pattern ( (let (($generated@@435 (type $generated@@433)))
($generated@@91 ($generated@@418 ($generated@@419 $generated@@435 $generated@@434)) $generated@@433)))
)))
(assert  (and (and (and (and (forall (($generated@@441 T@T) ($generated@@442 T@T) ) (= ($generated@@1 ($generated@@438 $generated@@441 $generated@@442)) 21)) (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (! (= ($generated@@439 ($generated@@438 $generated@@443 $generated@@444)) $generated@@443)
 :pattern ( ($generated@@438 $generated@@443 $generated@@444))
))) (forall (($generated@@445 T@T) ($generated@@446 T@T) ) (! (= ($generated@@440 ($generated@@438 $generated@@445 $generated@@446)) $generated@@446)
 :pattern ( ($generated@@438 $generated@@445 $generated@@446))
))) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@439 (type $generated@@447))))
(= (type ($generated@@436 $generated@@447)) ($generated@@86 $generated@@448 $generated@@4)))
 :pattern ( ($generated@@436 $generated@@447))
))) (forall (($generated@@449 T@T) ($generated@@450 T@T) ) (! (= (type ($generated@@437 $generated@@449 $generated@@450)) ($generated@@438 $generated@@449 $generated@@450))
 :pattern ( ($generated@@437 $generated@@449 $generated@@450))
))))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@T) ) (! (let (($generated@@453 (type $generated@@451)))
 (not ($generated@@0 ($generated@@91 ($generated@@436 ($generated@@437 $generated@@453 $generated@@452)) $generated@@451))))
 :pattern ( (let (($generated@@453 (type $generated@@451)))
($generated@@91 ($generated@@436 ($generated@@437 $generated@@453 $generated@@452)) $generated@@451)))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@89 (type $generated@@454))))
 (=> (and (= (type $generated@@454) ($generated@@86 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@86 $generated@@456 $generated@@4))) (= ($generated@@363 $generated@@454 $generated@@455) (forall (($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@456) (= ($generated@@0 ($generated@@91 $generated@@454 $generated@@457)) ($generated@@0 ($generated@@91 $generated@@455 $generated@@457))))
 :pattern ( ($generated@@91 $generated@@454 $generated@@457))
 :pattern ( ($generated@@91 $generated@@455 $generated@@457))
)))))
 :pattern ( ($generated@@363 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@89 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@86 $generated@@459 $generated@@2)) (= ($generated@@185 $generated@@458) (forall (($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@459) (and (<= 0 ($generated ($generated@@91 $generated@@458 $generated@@460))) (<= ($generated ($generated@@91 $generated@@458 $generated@@460)) ($generated@@407 $generated@@458))))
 :pattern ( ($generated@@91 $generated@@458 $generated@@460))
)))))
 :pattern ( ($generated@@185 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@179) ($generated@@265 $generated@@461 $generated@@146)) (and (= ($generated@@275 ($generated@@381 $generated@@2 $generated@@461)) $generated@@461) ($generated@@153 ($generated@@381 $generated@@2 $generated@@461) $generated@@146)))
 :pattern ( ($generated@@265 $generated@@461 $generated@@146))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@179) ($generated@@265 $generated@@462 $generated@@149)) (and (= ($generated@@275 ($generated@@381 $generated@@87 $generated@@462)) $generated@@462) ($generated@@153 ($generated@@381 $generated@@87 $generated@@462) $generated@@149)))
 :pattern ( ($generated@@265 $generated@@462 $generated@@149))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@422 (type $generated@@463))))
(let (($generated@@465 ($generated@@421 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@420 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@419 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ) (!  (and (= (type $generated@@466) $generated@@465) ($generated@@0 ($generated@@91 ($generated@@418 $generated@@463) $generated@@466)))
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@418 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@422 (type $generated@@468))))
(= (type ($generated@@467 $generated@@468)) ($generated@@86 $generated@@469 $generated@@4)))
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@422 (type $generated@@470))))
(let (($generated@@472 ($generated@@421 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@420 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@419 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@471) ($generated@@0 ($generated@@91 ($generated@@467 $generated@@470) $generated@@473)))
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@467 $generated@@470))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@440 (type $generated@@474))))
(let (($generated@@476 ($generated@@439 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@438 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@437 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@476) ($generated@@0 ($generated@@91 ($generated@@436 $generated@@474) $generated@@477)))
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@436 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@440 (type $generated@@479))))
(= (type ($generated@@478 $generated@@479)) ($generated@@86 $generated@@480 $generated@@4)))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@440 (type $generated@@481))))
(let (($generated@@483 ($generated@@439 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@438 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@437 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@482) ($generated@@0 ($generated@@91 ($generated@@478 $generated@@481) $generated@@484)))
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
))))))
 :pattern ( ($generated@@478 $generated@@481))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) ($generated@@86 $generated@@179 $generated@@2)) (= (type $generated@@486) $generated@@74)) (= ($generated@@153 $generated@@485 ($generated@@184 $generated@@486)) (forall (($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@179) (< 0 ($generated ($generated@@91 $generated@@485 $generated@@487)))) ($generated@@265 $generated@@487 $generated@@486))
 :pattern ( ($generated@@91 $generated@@485 $generated@@487))
))))
 :pattern ( ($generated@@153 $generated@@485 ($generated@@184 $generated@@486)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@89 (type $generated@@490))))
(= (type ($generated@@489 $generated@@490 $generated@@491)) ($generated@@86 $generated@@492 $generated@@4)))
 :pattern ( ($generated@@489 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@89 (type $generated@@493))))
 (=> (and (and (= (type $generated@@493) ($generated@@86 $generated@@495 $generated@@4)) (= (type $generated@@494) ($generated@@86 $generated@@495 $generated@@4))) ($generated@@488 $generated@@493 $generated@@494)) (and (= ($generated@@489 ($generated@@257 $generated@@493 $generated@@494) $generated@@493) $generated@@494) (= ($generated@@489 ($generated@@257 $generated@@493 $generated@@494) $generated@@494) $generated@@493))))
 :pattern ( ($generated@@257 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@179))
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@179) (= (type $generated@@499) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@91 ($generated@@496 $generated@@498) $generated@@499) $generated@@498))
 :pattern ( ($generated@@91 ($generated@@496 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@501 Bool) ) (! (= (type ($generated@@500 $generated@@501)) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@4))
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 Bool) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) ($generated@@86 $generated@@87 $generated@@88)) (= ($generated@@0 ($generated@@91 ($generated@@500 $generated@@502) $generated@@503)) $generated@@502))
 :pattern ( ($generated@@91 ($generated@@500 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@505 Bool) ) (! (= (type ($generated@@504 $generated@@505)) ($generated@@86 $generated@@87 $generated@@4))
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 Bool) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@87) (= ($generated@@0 ($generated@@91 ($generated@@504 $generated@@506) $generated@@507)) $generated@@506))
 :pattern ( ($generated@@91 ($generated@@504 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) ($generated@@86 $generated@@179 $generated@@4)))
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) ($generated@@86 $generated@@179 $generated@@4)) (= (type $generated@@511) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@91 ($generated@@508 $generated@@510) $generated@@511) $generated@@510))
 :pattern ( ($generated@@91 ($generated@@508 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) ($generated@@86 $generated@@388 $generated@@156))
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@156) (= (type $generated@@515) $generated@@388)) (= ($generated@@91 ($generated@@512 $generated@@514) $generated@@515) $generated@@514))
 :pattern ( ($generated@@91 ($generated@@512 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (=> (and (= (type $generated@@516) ($generated@@86 $generated@@519 $generated@@4)) (= (type $generated@@517) ($generated@@86 $generated@@519 $generated@@4))) (= ($generated@@0 ($generated@@91 ($generated@@489 $generated@@516 $generated@@517) $generated@@518))  (and ($generated@@0 ($generated@@91 $generated@@516 $generated@@518)) (not ($generated@@0 ($generated@@91 $generated@@517 $generated@@518)))))))
 :pattern ( ($generated@@91 ($generated@@489 $generated@@516 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@86 $generated@@179 $generated@@4)) (= (type $generated@@521) $generated@@74)) (= (type $generated@@522) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@520 ($generated@@309 $generated@@521) $generated@@522) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@179) ($generated@@0 ($generated@@91 $generated@@520 $generated@@523))) ($generated@@353 $generated@@523 $generated@@521 $generated@@522))
 :pattern ( ($generated@@91 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@84 $generated@@520 ($generated@@309 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@86 $generated@@179 $generated@@4)) (= (type $generated@@525) $generated@@74)) (= (type $generated@@526) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@524 ($generated@@314 $generated@@525) $generated@@526) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@179) ($generated@@0 ($generated@@91 $generated@@524 $generated@@527))) ($generated@@353 $generated@@527 $generated@@525 $generated@@526))
 :pattern ( ($generated@@91 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@84 $generated@@524 ($generated@@314 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated ($generated@@91 ($generated@@408 $generated@@529) $generated@@528)) 0))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@91 ($generated@@408 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@74) (= (type $generated@@531) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@532) $generated@@156)) (and ($generated@@273 $generated@@531) ($generated@@153 $generated@@532 ($generated@@157 $generated@@530)))) (= ($generated@@363 ($generated@@274 $generated@@530 $generated@@362 $generated@@532) ($generated@@364 $generated@@179)) ($generated@@363 ($generated@@274 $generated@@530 $generated@@531 $generated@@532) ($generated@@364 $generated@@179))))
 :pattern ( ($generated@@274 $generated@@530 $generated@@362 $generated@@532) ($generated@@273 $generated@@531))
 :pattern ( ($generated@@274 $generated@@530 $generated@@531 $generated@@532))
)))
(assert  (and (forall (($generated@@535 T@U) ) (! (= (type ($generated@@533 $generated@@535)) ($generated@@86 $generated@@179 $generated@@4))
 :pattern ( ($generated@@533 $generated@@535))
)) (forall (($generated@@536 T@U) ) (! (let (($generated@@537 ($generated@@422 (type $generated@@536))))
(let (($generated@@538 ($generated@@421 (type $generated@@536))))
(= (type ($generated@@534 $generated@@536)) ($generated@@86 $generated@@538 $generated@@537))))
 :pattern ( ($generated@@534 $generated@@536))
))))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) ($generated@@420 $generated@@179 $generated@@179)) (= (type $generated@@540) $generated@@179)) (= ($generated@@0 ($generated@@91 ($generated@@533 $generated@@539) $generated@@540))  (and ($generated@@0 ($generated@@91 ($generated@@418 $generated@@539) ($generated@@177 ($generated@@381 $generated@@170 $generated@@540)))) (= ($generated@@91 ($generated@@534 $generated@@539) ($generated@@177 ($generated@@381 $generated@@170 $generated@@540))) ($generated@@178 ($generated@@381 $generated@@170 $generated@@540))))))
 :pattern ( ($generated@@91 ($generated@@533 $generated@@539) $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) ($generated@@86 $generated@@179 $generated@@4))
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@440 (type $generated@@544))))
(let (($generated@@546 ($generated@@439 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544)) ($generated@@86 $generated@@546 $generated@@545))))
 :pattern ( ($generated@@542 $generated@@544))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@438 $generated@@179 $generated@@179)) (= (type $generated@@548) $generated@@179)) (= ($generated@@0 ($generated@@91 ($generated@@541 $generated@@547) $generated@@548))  (and ($generated@@0 ($generated@@91 ($generated@@436 $generated@@547) ($generated@@177 ($generated@@381 $generated@@170 $generated@@548)))) (= ($generated@@91 ($generated@@542 $generated@@547) ($generated@@177 ($generated@@381 $generated@@170 $generated@@548))) ($generated@@178 ($generated@@381 $generated@@170 $generated@@548))))))
 :pattern ( ($generated@@91 ($generated@@541 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
(let (($generated@@552 ($generated@@421 (type $generated@@549))))
 (=> (= (type $generated@@549) ($generated@@420 $generated@@552 $generated@@551)) (= ($generated@@0 ($generated@@91 ($generated@@467 $generated@@549) $generated@@550)) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@552) (and ($generated@@0 ($generated@@91 ($generated@@418 $generated@@549) $generated@@553)) (= $generated@@550 ($generated@@91 ($generated@@534 $generated@@549) $generated@@553))))
 :pattern ( ($generated@@91 ($generated@@418 $generated@@549) $generated@@553))
 :pattern ( ($generated@@91 ($generated@@534 $generated@@549) $generated@@553))
))))))
 :pattern ( ($generated@@91 ($generated@@467 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
(let (($generated@@557 ($generated@@439 (type $generated@@554))))
 (=> (= (type $generated@@554) ($generated@@438 $generated@@557 $generated@@556)) (= ($generated@@0 ($generated@@91 ($generated@@478 $generated@@554) $generated@@555)) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@557) (and ($generated@@0 ($generated@@91 ($generated@@436 $generated@@554) $generated@@558)) (= $generated@@555 ($generated@@91 ($generated@@542 $generated@@554) $generated@@558))))
 :pattern ( ($generated@@91 ($generated@@436 $generated@@554) $generated@@558))
 :pattern ( ($generated@@91 ($generated@@542 $generated@@554) $generated@@558))
))))))
 :pattern ( ($generated@@91 ($generated@@478 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (= (type ($generated@@559 $generated@@560 $generated@@561)) $generated@@74)
 :pattern ( ($generated@@559 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) ($generated@@420 $generated@@179 $generated@@179)) (= (type $generated@@563) $generated@@74)) (= (type $generated@@564) $generated@@74)) (= (type $generated@@565) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@179) ($generated@@0 ($generated@@91 ($generated@@418 $generated@@562) $generated@@566))) (and ($generated@@353 ($generated@@91 ($generated@@534 $generated@@562) $generated@@566) $generated@@564 $generated@@565) ($generated@@353 $generated@@566 $generated@@563 $generated@@565)))
 :pattern ( ($generated@@91 ($generated@@534 $generated@@562) $generated@@566))
 :pattern ( ($generated@@91 ($generated@@418 $generated@@562) $generated@@566))
))))
 :pattern ( ($generated@@84 $generated@@562 ($generated@@559 $generated@@563 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (! (= (type ($generated@@567 $generated@@568 $generated@@569)) $generated@@74)
 :pattern ( ($generated@@567 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) ($generated@@438 $generated@@179 $generated@@179)) (= (type $generated@@571) $generated@@74)) (= (type $generated@@572) $generated@@74)) (= (type $generated@@573) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@570 ($generated@@567 $generated@@571 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@179) ($generated@@0 ($generated@@91 ($generated@@436 $generated@@570) $generated@@574))) (and ($generated@@353 ($generated@@91 ($generated@@542 $generated@@570) $generated@@574) $generated@@572 $generated@@573) ($generated@@353 $generated@@574 $generated@@571 $generated@@573)))
 :pattern ( ($generated@@91 ($generated@@542 $generated@@570) $generated@@574))
 :pattern ( ($generated@@91 ($generated@@436 $generated@@570) $generated@@574))
))))
 :pattern ( ($generated@@84 $generated@@570 ($generated@@567 $generated@@571 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@89 (type $generated@@575))))
 (=> (and (and (= (type $generated@@575) ($generated@@86 $generated@@577 $generated@@4)) (= (type $generated@@576) ($generated@@86 $generated@@577 $generated@@4))) ($generated@@363 $generated@@575 $generated@@576)) (= $generated@@575 $generated@@576)))
 :pattern ( ($generated@@363 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
(= (type ($generated@@578 $generated@@579 $generated@@580)) ($generated@@86 $generated@@581 $generated@@4)))
 :pattern ( ($generated@@578 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@86 $generated@@585 $generated@@4)) (= (type $generated@@584) $generated@@585)) ($generated@@0 ($generated@@91 $generated@@582 $generated@@584))) ($generated@@0 ($generated@@91 ($generated@@578 $generated@@582 $generated@@583) $generated@@584))))
 :pattern ( ($generated@@578 $generated@@582 $generated@@583) ($generated@@91 $generated@@582 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (=> (and (and (= (type $generated@@586) ($generated@@86 $generated@@589 $generated@@4)) (= (type $generated@@587) ($generated@@86 $generated@@589 $generated@@4))) ($generated@@0 ($generated@@91 $generated@@586 $generated@@588))) ($generated@@0 ($generated@@91 ($generated@@257 $generated@@586 $generated@@587) $generated@@588))))
 :pattern ( ($generated@@257 $generated@@586 $generated@@587) ($generated@@91 $generated@@586 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 (type $generated@@592)))
 (=> (and (and (= (type $generated@@590) ($generated@@86 $generated@@593 $generated@@4)) (= (type $generated@@591) ($generated@@86 $generated@@593 $generated@@4))) ($generated@@0 ($generated@@91 $generated@@591 $generated@@592))) ($generated@@0 ($generated@@91 ($generated@@257 $generated@@590 $generated@@591) $generated@@592))))
 :pattern ( ($generated@@257 $generated@@590 $generated@@591) ($generated@@91 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (= (type $generated@@594) ($generated@@86 $generated@@597 $generated@@4)) (= (type $generated@@596) $generated@@597)) (= ($generated@@0 ($generated@@91 ($generated@@578 $generated@@594 $generated@@595) $generated@@596))  (or (= $generated@@596 $generated@@595) ($generated@@0 ($generated@@91 $generated@@594 $generated@@596))))))
 :pattern ( ($generated@@91 ($generated@@578 $generated@@594 $generated@@595) $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@598) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@599) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@600) ($generated@@86 $generated@@87 $generated@@88))) (not (= $generated@@598 $generated@@600))) (and ($generated@@142 $generated@@598 $generated@@599) ($generated@@142 $generated@@599 $generated@@600))) ($generated@@142 $generated@@598 $generated@@600))
 :pattern ( ($generated@@142 $generated@@598 $generated@@599) ($generated@@142 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (=> (and (and (= (type $generated@@601) ($generated@@86 $generated@@604 $generated@@4)) (= (type $generated@@602) ($generated@@86 $generated@@604 $generated@@4))) ($generated@@0 ($generated@@91 $generated@@602 $generated@@603))) (not ($generated@@0 ($generated@@91 ($generated@@489 $generated@@601 $generated@@602) $generated@@603)))))
 :pattern ( ($generated@@489 $generated@@601 $generated@@602) ($generated@@91 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@606 T@T) ) (! (= (type ($generated@@605 $generated@@606)) ($generated@@86 $generated@@606 $generated@@4))
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@440 (type $generated@@607))))
(let (($generated@@609 ($generated@@439 (type $generated@@607))))
 (=> (= (type $generated@@607) ($generated@@438 $generated@@609 $generated@@608)) (= (= $generated@@607 ($generated@@437 $generated@@609 $generated@@608)) (= ($generated@@436 $generated@@607) ($generated@@605 $generated@@609))))))
 :pattern ( ($generated@@436 $generated@@607))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 ($generated@@440 (type $generated@@610))))
(let (($generated@@612 ($generated@@439 (type $generated@@610))))
 (=> (= (type $generated@@610) ($generated@@438 $generated@@612 $generated@@611)) (= (= $generated@@610 ($generated@@437 $generated@@612 $generated@@611)) (= ($generated@@478 $generated@@610) ($generated@@605 $generated@@611))))))
 :pattern ( ($generated@@478 $generated@@610))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@440 (type $generated@@613))))
(let (($generated@@615 ($generated@@439 (type $generated@@613))))
 (=> (= (type $generated@@613) ($generated@@438 $generated@@615 $generated@@614)) (= (= $generated@@613 ($generated@@437 $generated@@615 $generated@@614)) (= ($generated@@541 $generated@@613) ($generated@@605 $generated@@179))))))
 :pattern ( ($generated@@541 $generated@@613))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@422 (type $generated@@616))))
(let (($generated@@618 ($generated@@421 (type $generated@@616))))
 (=> (= (type $generated@@616) ($generated@@420 $generated@@618 $generated@@617)) (or (= $generated@@616 ($generated@@419 $generated@@618 $generated@@617)) (exists (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (and (and (= (type $generated@@619) $generated@@179) (= (type $generated@@620) $generated@@179)) ($generated@@0 ($generated@@91 ($generated@@533 $generated@@616) ($generated@@275 ($generated@@264 $generated@@619 $generated@@620)))))
 :no-pattern (type $generated@@619)
 :no-pattern (type $generated@@620)
 :no-pattern ($generated $generated@@619)
 :no-pattern ($generated@@0 $generated@@619)
 :no-pattern ($generated $generated@@620)
 :no-pattern ($generated@@0 $generated@@620)
))))))
 :pattern ( ($generated@@533 $generated@@616))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@440 (type $generated@@621))))
(let (($generated@@623 ($generated@@439 (type $generated@@621))))
 (=> (= (type $generated@@621) ($generated@@438 $generated@@623 $generated@@622)) (or (= $generated@@621 ($generated@@437 $generated@@623 $generated@@622)) (exists (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (and (and (= (type $generated@@624) $generated@@179) (= (type $generated@@625) $generated@@179)) ($generated@@0 ($generated@@91 ($generated@@541 $generated@@621) ($generated@@275 ($generated@@264 $generated@@624 $generated@@625)))))
 :no-pattern (type $generated@@624)
 :no-pattern (type $generated@@625)
 :no-pattern ($generated $generated@@624)
 :no-pattern ($generated@@0 $generated@@624)
 :no-pattern ($generated $generated@@625)
 :no-pattern ($generated@@0 $generated@@625)
))))))
 :pattern ( ($generated@@541 $generated@@621))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@179) ($generated@@265 $generated@@626 $generated@@46)) (and (= ($generated@@275 ($generated@@381 $generated@@2 $generated@@626)) $generated@@626) ($generated@@153 ($generated@@381 $generated@@2 $generated@@626) $generated@@46)))
 :pattern ( ($generated@@265 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@179) ($generated@@265 $generated@@627 $generated@@47)) (and (= ($generated@@275 ($generated@@381 $generated@@3 $generated@@627)) $generated@@627) ($generated@@153 ($generated@@381 $generated@@3 $generated@@627) $generated@@47)))
 :pattern ( ($generated@@265 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) $generated@@179) ($generated@@265 $generated@@628 $generated@@44)) (and (= ($generated@@275 ($generated@@381 $generated@@4 $generated@@628)) $generated@@628) ($generated@@153 ($generated@@381 $generated@@4 $generated@@628) $generated@@44)))
 :pattern ( ($generated@@265 $generated@@628 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@629) 22))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@179) ($generated@@265 $generated@@630 $generated@@45)) (and (= ($generated@@275 ($generated@@381 $generated@@629 $generated@@630)) $generated@@630) ($generated@@153 ($generated@@381 $generated@@629 $generated@@630) $generated@@45)))
 :pattern ( ($generated@@265 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@74) (= ($generated@@265 ($generated@@275 $generated@@631) $generated@@632) ($generated@@153 $generated@@631 $generated@@632)))
 :pattern ( ($generated@@265 ($generated@@275 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@89 (type $generated@@633))))
 (=> (= (type $generated@@633) ($generated@@86 $generated@@634 $generated@@2)) (<= 0 ($generated@@407 $generated@@633))))
 :pattern ( ($generated@@407 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ) (! (let (($generated@@636 ($generated@@375 (type $generated@@635))))
 (=> (= (type $generated@@635) ($generated@@374 $generated@@636)) (<= 0 ($generated@@373 $generated@@635))))
 :pattern ( ($generated@@373 $generated@@635))
)))
(assert (forall (($generated@@638 T@U) ) (! (= (type ($generated@@637 $generated@@638)) $generated@@74)
 :pattern ( ($generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@74) (= (type $generated@@640) $generated@@74)) (= ($generated@@637 ($generated@@559 $generated@@639 $generated@@640)) $generated@@639))
 :pattern ( ($generated@@559 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ) (! (= (type ($generated@@641 $generated@@642)) $generated@@74)
 :pattern ( ($generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@74) (= (type $generated@@644) $generated@@74)) (= ($generated@@641 ($generated@@559 $generated@@643 $generated@@644)) $generated@@644))
 :pattern ( ($generated@@559 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@74) (= (type $generated@@646) $generated@@74)) (= ($generated@@82 ($generated@@559 $generated@@645 $generated@@646)) $generated@@58))
 :pattern ( ($generated@@559 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (! (= (type ($generated@@647 $generated@@648)) $generated@@74)
 :pattern ( ($generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@74) (= (type $generated@@650) $generated@@74)) (= ($generated@@647 ($generated@@567 $generated@@649 $generated@@650)) $generated@@649))
 :pattern ( ($generated@@567 $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ) (! (= (type ($generated@@651 $generated@@652)) $generated@@74)
 :pattern ( ($generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@74) (= (type $generated@@654) $generated@@74)) (= ($generated@@651 ($generated@@567 $generated@@653 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@567 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@74) (= (type $generated@@656) $generated@@74)) (= ($generated@@82 ($generated@@567 $generated@@655 $generated@@656)) $generated@@59))
 :pattern ( ($generated@@567 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@179) (= (type $generated@@658) $generated@@179)) (= ($generated@@359 ($generated@@264 $generated@@657 $generated@@658)) $generated@@66))
 :pattern ( ($generated@@264 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (! (= (type ($generated@@659 $generated@@660)) $generated@@74)
 :pattern ( ($generated@@659 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@74) (= (type $generated@@662) $generated@@74)) (= ($generated@@659 ($generated@@169 $generated@@661 $generated@@662)) $generated@@661))
 :pattern ( ($generated@@169 $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ) (! (= (type ($generated@@663 $generated@@664)) $generated@@74)
 :pattern ( ($generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@74) (= (type $generated@@666) $generated@@74)) (= ($generated@@663 ($generated@@169 $generated@@665 $generated@@666)) $generated@@666))
 :pattern ( ($generated@@169 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@179) (= (type $generated@@668) $generated@@179)) (= ($generated@@177 ($generated@@264 $generated@@667 $generated@@668)) $generated@@667))
 :pattern ( ($generated@@264 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@179) (= (type $generated@@670) $generated@@179)) (= ($generated@@178 ($generated@@264 $generated@@669 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@264 $generated@@669 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@87) ($generated@@153 $generated@@671 $generated@@149))
 :pattern ( ($generated@@153 $generated@@671 $generated@@149))
)))
(assert  (and (forall (($generated@@674 T@U) ) (! (= (type ($generated@@672 $generated@@674)) $generated@@74)
 :pattern ( ($generated@@672 $generated@@674))
)) (forall (($generated@@675 T@U) ($generated@@676 Int) ) (! (let (($generated@@677 ($generated@@375 (type $generated@@675))))
(= (type ($generated@@673 $generated@@675 $generated@@676)) $generated@@677))
 :pattern ( ($generated@@673 $generated@@675 $generated@@676))
))))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@678) ($generated@@374 $generated@@179)) (= (type $generated@@679) $generated@@74)) (= (type $generated@@680) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@678 ($generated@@672 $generated@@679) $generated@@680) (forall (($generated@@681 Int) ) (!  (=> (and (<= 0 $generated@@681) (< $generated@@681 ($generated@@373 $generated@@678))) ($generated@@353 ($generated@@673 $generated@@678 $generated@@681) $generated@@679 $generated@@680))
 :pattern ( ($generated@@673 $generated@@678 $generated@@681))
))))
 :pattern ( ($generated@@84 $generated@@678 ($generated@@672 $generated@@679) $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@683)))
 (=> (= (type $generated@@682) ($generated@@86 $generated@@684 $generated@@4)) ($generated@@0 ($generated@@91 ($generated@@578 $generated@@682 $generated@@683) $generated@@683))))
 :pattern ( ($generated@@578 $generated@@682 $generated@@683))
)))
(assert (forall (($generated@@686 Int) ) (! (= ($generated@@685 ($generated@@85 $generated@@686)) $generated@@686)
 :pattern ( ($generated@@85 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ) (! (= (type ($generated@@687 $generated@@688)) $generated@@74)
 :pattern ( ($generated@@687 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@74) (= ($generated@@687 ($generated@@309 $generated@@689)) $generated@@689))
 :pattern ( ($generated@@309 $generated@@689))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@74) (= ($generated@@82 ($generated@@309 $generated@@690)) $generated@@54))
 :pattern ( ($generated@@309 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ) (! (= (type ($generated@@691 $generated@@692)) $generated@@74)
 :pattern ( ($generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@74) (= ($generated@@691 ($generated@@314 $generated@@693)) $generated@@693))
 :pattern ( ($generated@@314 $generated@@693))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@74) (= ($generated@@82 ($generated@@314 $generated@@694)) $generated@@55))
 :pattern ( ($generated@@314 $generated@@694))
)))
(assert (forall (($generated@@696 T@U) ) (! (= (type ($generated@@695 $generated@@696)) $generated@@74)
 :pattern ( ($generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@74) (= ($generated@@695 ($generated@@184 $generated@@697)) $generated@@697))
 :pattern ( ($generated@@184 $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@74) (= ($generated@@82 ($generated@@184 $generated@@698)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@698))
)))
(assert (forall (($generated@@700 T@U) ) (! (= (type ($generated@@699 $generated@@700)) $generated@@74)
 :pattern ( ($generated@@699 $generated@@700))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@74) (= ($generated@@699 ($generated@@672 $generated@@701)) $generated@@701))
 :pattern ( ($generated@@672 $generated@@701))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@74) (= ($generated@@82 ($generated@@672 $generated@@702)) $generated@@57))
 :pattern ( ($generated@@672 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ) (! (= (type ($generated@@703 $generated@@704)) $generated@@74)
 :pattern ( ($generated@@703 $generated@@704))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@74) (= ($generated@@703 ($generated@@157 $generated@@705)) $generated@@705))
 :pattern ( ($generated@@157 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ) (! (= (type ($generated@@706 $generated@@707)) $generated@@74)
 :pattern ( ($generated@@706 $generated@@707))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@74) (= ($generated@@706 ($generated@@155 $generated@@708)) $generated@@708))
 :pattern ( ($generated@@155 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ) (! (= (type ($generated@@709 $generated@@710)) $generated@@74)
 :pattern ( ($generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (= (type $generated@@711) $generated@@74) (= ($generated@@709 ($generated@@163 $generated@@711)) $generated@@711))
 :pattern ( ($generated@@163 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ) (! (let (($generated@@713 (type $generated@@712)))
(= ($generated@@381 $generated@@713 ($generated@@275 $generated@@712)) $generated@@712))
 :pattern ( ($generated@@275 $generated@@712))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@714) ($generated@@420 $generated@@179 $generated@@179)) (= (type $generated@@715) $generated@@74)) (= (type $generated@@716) $generated@@74)) (= ($generated@@153 $generated@@714 ($generated@@559 $generated@@715 $generated@@716)) (forall (($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@179) ($generated@@0 ($generated@@91 ($generated@@418 $generated@@714) $generated@@717))) (and ($generated@@265 ($generated@@91 ($generated@@534 $generated@@714) $generated@@717) $generated@@716) ($generated@@265 $generated@@717 $generated@@715)))
 :pattern ( ($generated@@91 ($generated@@534 $generated@@714) $generated@@717))
 :pattern ( ($generated@@91 ($generated@@418 $generated@@714) $generated@@717))
))))
 :pattern ( ($generated@@153 $generated@@714 ($generated@@559 $generated@@715 $generated@@716)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@718) ($generated@@438 $generated@@179 $generated@@179)) (= (type $generated@@719) $generated@@74)) (= (type $generated@@720) $generated@@74)) (= ($generated@@153 $generated@@718 ($generated@@567 $generated@@719 $generated@@720)) (forall (($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@721) $generated@@179) ($generated@@0 ($generated@@91 ($generated@@436 $generated@@718) $generated@@721))) (and ($generated@@265 ($generated@@91 ($generated@@542 $generated@@718) $generated@@721) $generated@@720) ($generated@@265 $generated@@721 $generated@@719)))
 :pattern ( ($generated@@91 ($generated@@542 $generated@@718) $generated@@721))
 :pattern ( ($generated@@91 ($generated@@436 $generated@@718) $generated@@721))
))))
 :pattern ( ($generated@@153 $generated@@718 ($generated@@567 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (= (type $generated@@724) $generated@@179) (= (type $generated@@725) $generated@@179)) (< ($generated@@722 $generated@@724) ($generated@@723 ($generated@@264 $generated@@724 $generated@@725))))
 :pattern ( ($generated@@264 $generated@@724 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@179) (= (type $generated@@727) $generated@@179)) (< ($generated@@722 $generated@@727) ($generated@@723 ($generated@@264 $generated@@726 $generated@@727))))
 :pattern ( ($generated@@264 $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (! (let (($generated@@730 ($generated@@89 (type $generated@@728))))
 (=> (and (= (type $generated@@728) ($generated@@86 $generated@@730 $generated@@4)) (= (type $generated@@729) ($generated@@86 $generated@@730 $generated@@4))) (= ($generated@@257 $generated@@728 ($generated@@257 $generated@@728 $generated@@729)) ($generated@@257 $generated@@728 $generated@@729))))
 :pattern ( ($generated@@257 $generated@@728 ($generated@@257 $generated@@728 $generated@@729)))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ($generated@@734 T@U) ) (! (let (($generated@@735 (type $generated@@734)))
(let (($generated@@736 (type $generated@@733)))
(= (type ($generated@@731 $generated@@732 $generated@@733 $generated@@734)) ($generated@@420 $generated@@736 $generated@@735))))
 :pattern ( ($generated@@731 $generated@@732 $generated@@733 $generated@@734))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ($generated@@740 T@U) ) (! (let (($generated@@741 (type $generated@@740)))
(let (($generated@@742 (type $generated@@738)))
 (=> (and (= (type $generated@@737) ($generated@@420 $generated@@742 $generated@@741)) (= (type $generated@@739) $generated@@742)) (and (=> (= $generated@@739 $generated@@738) (and ($generated@@0 ($generated@@91 ($generated@@418 ($generated@@731 $generated@@737 $generated@@738 $generated@@740)) $generated@@739)) (= ($generated@@91 ($generated@@534 ($generated@@731 $generated@@737 $generated@@738 $generated@@740)) $generated@@739) $generated@@740))) (=> (not (= $generated@@739 $generated@@738)) (and (= ($generated@@0 ($generated@@91 ($generated@@418 ($generated@@731 $generated@@737 $generated@@738 $generated@@740)) $generated@@739)) ($generated@@0 ($generated@@91 ($generated@@418 $generated@@737) $generated@@739))) (= ($generated@@91 ($generated@@534 ($generated@@731 $generated@@737 $generated@@738 $generated@@740)) $generated@@739) ($generated@@91 ($generated@@534 $generated@@737) $generated@@739))))))))
 :pattern ( ($generated@@91 ($generated@@418 ($generated@@731 $generated@@737 $generated@@738 $generated@@740)) $generated@@739))
 :pattern ( ($generated@@91 ($generated@@534 ($generated@@731 $generated@@737 $generated@@738 $generated@@740)) $generated@@739))
)))
(assert (forall (($generated@@744 T@U) ) (! (= (type ($generated@@743 $generated@@744)) $generated@@388)
 :pattern ( ($generated@@743 $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (! (let (($generated@@747 ($generated@@90 (type $generated@@745))))
 (=> (and (= (type $generated@@745) ($generated@@86 $generated@@388 $generated@@747)) (= (type $generated@@746) $generated@@388)) (= ($generated@@387 $generated@@745 ($generated@@743 $generated@@746)) ($generated@@387 $generated@@745 $generated@@746))))
 :pattern ( ($generated@@387 $generated@@745 ($generated@@743 $generated@@746)))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (and (= (type $generated@@748) $generated@@179) (= (type $generated@@749) $generated@@74)) (= (type $generated@@750) $generated@@74)) ($generated@@265 $generated@@748 ($generated@@559 $generated@@749 $generated@@750))) (and (= ($generated@@275 ($generated@@381 ($generated@@420 $generated@@179 $generated@@179) $generated@@748)) $generated@@748) ($generated@@153 ($generated@@381 ($generated@@420 $generated@@179 $generated@@179) $generated@@748) ($generated@@559 $generated@@749 $generated@@750))))
 :pattern ( ($generated@@265 $generated@@748 ($generated@@559 $generated@@749 $generated@@750)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (and (= (type $generated@@751) $generated@@179) (= (type $generated@@752) $generated@@74)) (= (type $generated@@753) $generated@@74)) ($generated@@265 $generated@@751 ($generated@@567 $generated@@752 $generated@@753))) (and (= ($generated@@275 ($generated@@381 ($generated@@438 $generated@@179 $generated@@179) $generated@@751)) $generated@@751) ($generated@@153 ($generated@@381 ($generated@@438 $generated@@179 $generated@@179) $generated@@751) ($generated@@567 $generated@@752 $generated@@753))))
 :pattern ( ($generated@@265 $generated@@751 ($generated@@567 $generated@@752 $generated@@753)))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (and (and (= (type $generated@@754) $generated@@74) (= (type $generated@@755) $generated@@74)) (= (type $generated@@756) $generated@@179)) ($generated@@265 $generated@@756 ($generated@@169 $generated@@754 $generated@@755))) (and (= ($generated@@275 ($generated@@381 $generated@@170 $generated@@756)) $generated@@756) ($generated@@153 ($generated@@381 $generated@@170 $generated@@756) ($generated@@169 $generated@@754 $generated@@755))))
 :pattern ( ($generated@@265 $generated@@756 ($generated@@169 $generated@@754 $generated@@755)))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (and (and (= (type $generated@@757) $generated@@156) (= (type $generated@@758) $generated@@74)) (= (type $generated@@759) ($generated@@86 $generated@@87 $generated@@88))) ($generated@@273 $generated@@759)) (= ($generated@@84 $generated@@757 ($generated@@157 $generated@@758) $generated@@759)  (=> ($generated@@272 $generated@@758 $generated@@759 $generated@@757) (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@87) (=> (and (not (= $generated@@760 $generated@@150)) ($generated@@0 ($generated@@91 ($generated@@274 $generated@@758 $generated@@759 $generated@@757) ($generated@@275 $generated@@760)))) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@759 $generated@@760) $generated@@60))))
 :pattern ( ($generated@@91 ($generated@@274 $generated@@758 $generated@@759 $generated@@757) ($generated@@275 $generated@@760)))
)))))
 :pattern ( ($generated@@84 $generated@@757 ($generated@@157 $generated@@758) $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ) (! (let (($generated@@762 (type $generated@@761)))
 (not ($generated@@0 ($generated@@91 ($generated@@364 $generated@@762) $generated@@761))))
 :pattern ( (let (($generated@@762 (type $generated@@761)))
($generated@@91 ($generated@@364 $generated@@762) $generated@@761)))
)))
(assert (forall (($generated@@763 T@U) ) (! (let (($generated@@764 (type $generated@@763)))
 (not ($generated@@0 ($generated@@91 ($generated@@605 $generated@@764) $generated@@763))))
 :pattern ( (let (($generated@@764 (type $generated@@763)))
($generated@@91 ($generated@@605 $generated@@764) $generated@@763)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (= (type $generated@@765) $generated@@74) (= (type $generated@@766) $generated@@156)) (= ($generated@@153 $generated@@766 ($generated@@163 $generated@@765))  (and ($generated@@153 $generated@@766 ($generated@@155 $generated@@765)) ($generated@@272 $generated@@765 $generated@@362 $generated@@766))))
 :pattern ( ($generated@@153 $generated@@766 ($generated@@163 $generated@@765)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@767) $generated@@74) (= (type $generated@@768) $generated@@74)) (and (= ($generated@@82 ($generated@@169 $generated@@767 $generated@@768)) $generated@@67) (= ($generated@@413 ($generated@@169 $generated@@767 $generated@@768)) $generated@@73)))
 :pattern ( ($generated@@169 $generated@@767 $generated@@768))
)))
(assert (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@170) (= ($generated@@722 ($generated@@275 $generated@@769)) ($generated@@723 $generated@@769)))
 :pattern ( ($generated@@722 ($generated@@275 $generated@@769)))
)))
(assert (forall (($generated@@770 T@U) ($generated@@771 T@U) ) (!  (=> (and (= (type $generated@@770) $generated@@156) (= (type $generated@@771) $generated@@74)) (= ($generated@@153 $generated@@770 ($generated@@157 $generated@@771)) (forall (($generated@@772 T@U) ) (!  (=> (= (type $generated@@772) ($generated@@86 $generated@@87 $generated@@88)) (=> (and ($generated@@273 $generated@@772) ($generated@@272 $generated@@771 $generated@@772 $generated@@770)) ($generated@@265 ($generated@@294 $generated@@771 $generated@@772 $generated@@770) $generated@@771)))
 :pattern ( ($generated@@294 $generated@@771 $generated@@772 $generated@@770))
))))
 :pattern ( ($generated@@153 $generated@@770 ($generated@@157 $generated@@771)))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (and (= (type $generated@@773) $generated@@179) ($generated@@265 $generated@@773 ($generated@@85 0))) (and (= ($generated@@275 ($generated@@381 $generated@@2 $generated@@773)) $generated@@773) ($generated@@153 ($generated@@381 ($generated@@86 $generated@@179 $generated@@4) $generated@@773) ($generated@@85 0))))
 :pattern ( ($generated@@265 $generated@@773 ($generated@@85 0)))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ) (!  (=> (and (and (= (type $generated@@774) $generated@@179) (= (type $generated@@775) $generated@@74)) ($generated@@265 $generated@@774 ($generated@@309 $generated@@775))) (and (= ($generated@@275 ($generated@@381 ($generated@@86 $generated@@179 $generated@@4) $generated@@774)) $generated@@774) ($generated@@153 ($generated@@381 ($generated@@86 $generated@@179 $generated@@4) $generated@@774) ($generated@@309 $generated@@775))))
 :pattern ( ($generated@@265 $generated@@774 ($generated@@309 $generated@@775)))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ) (!  (=> (and (and (= (type $generated@@776) $generated@@179) (= (type $generated@@777) $generated@@74)) ($generated@@265 $generated@@776 ($generated@@314 $generated@@777))) (and (= ($generated@@275 ($generated@@381 ($generated@@86 $generated@@179 $generated@@4) $generated@@776)) $generated@@776) ($generated@@153 ($generated@@381 ($generated@@86 $generated@@179 $generated@@4) $generated@@776) ($generated@@314 $generated@@777))))
 :pattern ( ($generated@@265 $generated@@776 ($generated@@314 $generated@@777)))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ) (!  (=> (and (and (= (type $generated@@778) $generated@@179) (= (type $generated@@779) $generated@@74)) ($generated@@265 $generated@@778 ($generated@@184 $generated@@779))) (and (= ($generated@@275 ($generated@@381 ($generated@@86 $generated@@179 $generated@@2) $generated@@778)) $generated@@778) ($generated@@153 ($generated@@381 ($generated@@86 $generated@@179 $generated@@2) $generated@@778) ($generated@@184 $generated@@779))))
 :pattern ( ($generated@@265 $generated@@778 ($generated@@184 $generated@@779)))
)))
(assert (forall (($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (and (= (type $generated@@780) $generated@@179) (= (type $generated@@781) $generated@@74)) ($generated@@265 $generated@@780 ($generated@@672 $generated@@781))) (and (= ($generated@@275 ($generated@@381 ($generated@@374 $generated@@179) $generated@@780)) $generated@@780) ($generated@@153 ($generated@@381 ($generated@@374 $generated@@179) $generated@@780) ($generated@@672 $generated@@781))))
 :pattern ( ($generated@@265 $generated@@780 ($generated@@672 $generated@@781)))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ) (!  (=> (and (and (= (type $generated@@782) $generated@@74) (= (type $generated@@783) $generated@@179)) ($generated@@265 $generated@@783 ($generated@@157 $generated@@782))) (and (= ($generated@@275 ($generated@@381 $generated@@156 $generated@@783)) $generated@@783) ($generated@@153 ($generated@@381 $generated@@156 $generated@@783) ($generated@@157 $generated@@782))))
 :pattern ( ($generated@@265 $generated@@783 ($generated@@157 $generated@@782)))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ) (!  (=> (and (and (= (type $generated@@784) $generated@@74) (= (type $generated@@785) $generated@@179)) ($generated@@265 $generated@@785 ($generated@@155 $generated@@784))) (and (= ($generated@@275 ($generated@@381 $generated@@156 $generated@@785)) $generated@@785) ($generated@@153 ($generated@@381 $generated@@156 $generated@@785) ($generated@@155 $generated@@784))))
 :pattern ( ($generated@@265 $generated@@785 ($generated@@155 $generated@@784)))
)))
(assert (forall (($generated@@786 T@U) ($generated@@787 T@U) ) (!  (=> (and (and (= (type $generated@@786) $generated@@74) (= (type $generated@@787) $generated@@179)) ($generated@@265 $generated@@787 ($generated@@163 $generated@@786))) (and (= ($generated@@275 ($generated@@381 $generated@@156 $generated@@787)) $generated@@787) ($generated@@153 ($generated@@381 $generated@@156 $generated@@787) ($generated@@163 $generated@@786))))
 :pattern ( ($generated@@265 $generated@@787 ($generated@@163 $generated@@786)))
)))
(assert (= ($generated@@82 $generated@@146) $generated@@61))
(assert (= ($generated@@413 $generated@@146) $generated@@68))
(assert (= ($generated@@82 $generated@@149) $generated@@62))
(assert (= ($generated@@413 $generated@@149) $generated@@69))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (= (type $generated@@788) ($generated@@86 $generated@@179 $generated@@2)) (= (type $generated@@789) $generated@@74)) (= (type $generated@@790) ($generated@@86 $generated@@87 $generated@@88))) (= ($generated@@84 $generated@@788 ($generated@@184 $generated@@789) $generated@@790) (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@179) (< 0 ($generated ($generated@@91 $generated@@788 $generated@@791)))) ($generated@@353 $generated@@791 $generated@@789 $generated@@790))
 :pattern ( ($generated@@91 $generated@@788 $generated@@791))
))))
 :pattern ( ($generated@@84 $generated@@788 ($generated@@184 $generated@@789) $generated@@790))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@792) $generated@@74) (= (type $generated@@793) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@794) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@179))) (= (type $generated@@795) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@4))) (= (type $generated@@796) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) ($generated@@86 $generated@@179 $generated@@4)))) (= (type $generated@@797) $generated@@179)) (= ($generated@@0 ($generated@@91 ($generated@@274 $generated@@792 $generated@@793 ($generated@@295 $generated@@794 $generated@@795 $generated@@796)) $generated@@797)) ($generated@@0 ($generated@@91 ($generated@@91 $generated@@796 $generated@@793) $generated@@797))))
 :pattern ( ($generated@@91 ($generated@@274 $generated@@792 $generated@@793 ($generated@@295 $generated@@794 $generated@@795 $generated@@796)) $generated@@797))
)))
(assert (forall (($generated@@798 T@U) ) (!  (=> (= (type $generated@@798) ($generated@@86 $generated@@87 $generated@@4)) ($generated@@153 ($generated@@380 $generated@@798) ($generated@@309 $generated@@149)))
 :pattern ( ($generated@@380 $generated@@798))
)))
(assert (forall (($generated@@799 T@U) ($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@799) $generated@@156) (= (type $generated@@800) $generated@@74)) (= (type $generated@@801) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@273 $generated@@801) ($generated@@84 $generated@@799 ($generated@@157 $generated@@800) $generated@@801))) ($generated@@272 $generated@@800 $generated@@801 $generated@@799)) ($generated@@353 ($generated@@294 $generated@@800 $generated@@801 $generated@@799) $generated@@800 $generated@@801))
 :pattern ( ($generated@@84 $generated@@799 ($generated@@157 $generated@@800) $generated@@801))
)))
(assert (forall (($generated@@802 T@U) ($generated@@803 T@U) ) (! (let (($generated@@804 ($generated@@89 (type $generated@@802))))
 (=> (and (= (type $generated@@802) ($generated@@86 $generated@@804 $generated@@4)) (= (type $generated@@803) ($generated@@86 $generated@@804 $generated@@4))) (= ($generated@@488 $generated@@802 $generated@@803) (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@804) (or (not ($generated@@0 ($generated@@91 $generated@@802 $generated@@805))) (not ($generated@@0 ($generated@@91 $generated@@803 $generated@@805)))))
 :pattern ( ($generated@@91 $generated@@802 $generated@@805))
 :pattern ( ($generated@@91 $generated@@803 $generated@@805))
)))))
 :pattern ( ($generated@@488 $generated@@802 $generated@@803))
)))
(assert (forall (($generated@@806 T@U) ($generated@@807 T@U) ($generated@@808 T@U) ) (!  (=> (and (and (and (= (type $generated@@806) $generated@@170) (= (type $generated@@807) $generated@@74)) (= (type $generated@@808) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@273 $generated@@808) (and ($generated@@168 $generated@@806) (exists (($generated@@809 T@U) ) (!  (and (= (type $generated@@809) $generated@@74) ($generated@@84 $generated@@806 ($generated@@169 $generated@@807 $generated@@809) $generated@@808))
 :pattern ( ($generated@@84 $generated@@806 ($generated@@169 $generated@@807 $generated@@809) $generated@@808))
))))) ($generated@@353 ($generated@@177 $generated@@806) $generated@@807 $generated@@808))
 :pattern ( ($generated@@353 ($generated@@177 $generated@@806) $generated@@807 $generated@@808))
)))
(assert (forall (($generated@@810 T@U) ($generated@@811 T@U) ($generated@@812 T@U) ) (!  (=> (and (and (and (= (type $generated@@810) $generated@@170) (= (type $generated@@811) $generated@@74)) (= (type $generated@@812) ($generated@@86 $generated@@87 $generated@@88))) (and ($generated@@273 $generated@@812) (and ($generated@@168 $generated@@810) (exists (($generated@@813 T@U) ) (!  (and (= (type $generated@@813) $generated@@74) ($generated@@84 $generated@@810 ($generated@@169 $generated@@813 $generated@@811) $generated@@812))
 :pattern ( ($generated@@84 $generated@@810 ($generated@@169 $generated@@813 $generated@@811) $generated@@812))
))))) ($generated@@353 ($generated@@178 $generated@@810) $generated@@811 $generated@@812))
 :pattern ( ($generated@@353 ($generated@@178 $generated@@810) $generated@@811 $generated@@812))
)))
(assert (forall (($generated@@814 T@U) ($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (and (and (= (type $generated@@814) $generated@@156) (= (type $generated@@815) $generated@@74)) (= (type $generated@@816) $generated@@74)) (and ($generated@@153 $generated@@814 ($generated@@157 $generated@@815)) (forall (($generated@@817 T@U) ) (!  (=> (and (= (type $generated@@817) $generated@@179) ($generated@@265 $generated@@817 $generated@@815)) ($generated@@265 $generated@@817 $generated@@816))
 :pattern ( ($generated@@265 $generated@@817 $generated@@815))
 :pattern ( ($generated@@265 $generated@@817 $generated@@816))
)))) ($generated@@153 $generated@@814 ($generated@@157 $generated@@816)))
 :pattern ( ($generated@@153 $generated@@814 ($generated@@157 $generated@@815)) ($generated@@153 $generated@@814 ($generated@@157 $generated@@816)))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ) (!  (=> (and (= (type $generated@@818) $generated@@179) (= (type $generated@@819) $generated@@179)) (= ($generated@@264 ($generated@@321 $generated@@818) ($generated@@321 $generated@@819)) ($generated@@321 ($generated@@264 $generated@@818 $generated@@819))))
 :pattern ( ($generated@@264 ($generated@@321 $generated@@818) ($generated@@321 $generated@@819)))
)))
(assert (forall (($generated@@820 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@319 $generated@@820))) ($generated@@321 ($generated@@275 ($generated@@8 $generated@@820))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@319 $generated@@820))))
)))
(assert (forall (($generated@@821 T@U) ) (! (= ($generated@@275 ($generated@@321 $generated@@821)) ($generated@@321 ($generated@@275 $generated@@821)))
 :pattern ( ($generated@@275 ($generated@@321 $generated@@821)))
)))
(assert (forall (($generated@@822 T@U) ) (! (let (($generated@@823 ($generated@@375 (type $generated@@822))))
 (=> (and (= (type $generated@@822) ($generated@@374 $generated@@823)) (= ($generated@@373 $generated@@822) 0)) (= $generated@@822 ($generated@@372 $generated@@823))))
 :pattern ( ($generated@@373 $generated@@822))
)))
(assert (forall (($generated@@824 T@U) ($generated@@825 T@U) ($generated@@826 T@U) ($generated@@827 T@U) ($generated@@828 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@824) $generated@@74) (= (type $generated@@825) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@826) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@179))) (= (type $generated@@827) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) $generated@@4))) (= (type $generated@@828) ($generated@@86 ($generated@@86 $generated@@87 $generated@@88) ($generated@@86 $generated@@179 $generated@@4)))) ($generated@@0 ($generated@@91 $generated@@827 $generated@@825))) ($generated@@272 $generated@@824 $generated@@825 ($generated@@295 $generated@@826 $generated@@827 $generated@@828)))
 :pattern ( ($generated@@272 $generated@@824 $generated@@825 ($generated@@295 $generated@@826 $generated@@827 $generated@@828)))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 T@U) ($generated@@831 T@U) ) (! (let (($generated@@832 (type $generated@@830)))
 (=> (and (and (= (type $generated@@829) ($generated@@86 $generated@@832 $generated@@2)) (= (type $generated@@831) $generated@@2)) (<= 0 ($generated $generated@@831))) (= ($generated@@407 ($generated@@92 $generated@@829 $generated@@830 $generated@@831)) (+ (- ($generated@@407 $generated@@829) ($generated ($generated@@91 $generated@@829 $generated@@830))) ($generated $generated@@831)))))
 :pattern ( ($generated@@407 ($generated@@92 $generated@@829 $generated@@830 $generated@@831)))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ($generated@@835 T@U) ) (! (let (($generated@@836 (type $generated@@835)))
 (=> (and (= (type $generated@@833) ($generated@@86 $generated@@836 $generated@@4)) (= (type $generated@@834) ($generated@@86 $generated@@836 $generated@@4))) (= ($generated@@0 ($generated@@91 ($generated@@257 $generated@@833 $generated@@834) $generated@@835))  (or ($generated@@0 ($generated@@91 $generated@@833 $generated@@835)) ($generated@@0 ($generated@@91 $generated@@834 $generated@@835))))))
 :pattern ( ($generated@@91 ($generated@@257 $generated@@833 $generated@@834) $generated@@835))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (= (type $generated@@837) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@838) $generated@@2)) ($generated@@84 $generated@@838 $generated@@46 $generated@@837))
 :pattern ( ($generated@@84 $generated@@838 $generated@@46 $generated@@837))
)))
(assert (forall (($generated@@839 T@U) ($generated@@840 T@U) ) (!  (=> (and (= (type $generated@@839) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@840) $generated@@3)) ($generated@@84 $generated@@840 $generated@@47 $generated@@839))
 :pattern ( ($generated@@84 $generated@@840 $generated@@47 $generated@@839))
)))
(assert (forall (($generated@@841 T@U) ($generated@@842 T@U) ) (!  (=> (and (= (type $generated@@841) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@842) $generated@@4)) ($generated@@84 $generated@@842 $generated@@44 $generated@@841))
 :pattern ( ($generated@@84 $generated@@842 $generated@@44 $generated@@841))
)))
(assert (forall (($generated@@843 T@U) ($generated@@844 T@U) ) (!  (=> (and (= (type $generated@@843) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@844) $generated@@629)) ($generated@@84 $generated@@844 $generated@@45 $generated@@843))
 :pattern ( ($generated@@84 $generated@@844 $generated@@45 $generated@@843))
)))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ) (!  (=> (and (= (type $generated@@845) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@846) $generated@@179)) ($generated@@84 $generated@@846 $generated@@48 $generated@@845))
 :pattern ( ($generated@@84 $generated@@846 $generated@@48 $generated@@845))
)))
(assert (forall (($generated@@847 T@U) ($generated@@848 T@U) ) (!  (=> (and (= (type $generated@@847) ($generated@@374 $generated@@179)) (= (type $generated@@848) $generated@@74)) (= ($generated@@153 $generated@@847 ($generated@@672 $generated@@848)) (forall (($generated@@849 Int) ) (!  (=> (and (<= 0 $generated@@849) (< $generated@@849 ($generated@@373 $generated@@847))) ($generated@@265 ($generated@@673 $generated@@847 $generated@@849) $generated@@848))
 :pattern ( ($generated@@673 $generated@@847 $generated@@849))
))))
 :pattern ( ($generated@@153 $generated@@847 ($generated@@672 $generated@@848)))
)))
(assert (forall (($generated@@850 T@U) ($generated@@851 T@U) ) (!  (=> (and (= (type $generated@@850) $generated@@74) (= (type $generated@@851) $generated@@156)) (= ($generated@@153 $generated@@851 ($generated@@155 $generated@@850))  (and ($generated@@153 $generated@@851 ($generated@@157 $generated@@850)) ($generated@@363 ($generated@@274 $generated@@850 $generated@@362 $generated@@851) ($generated@@364 $generated@@179)))))
 :pattern ( ($generated@@153 $generated@@851 ($generated@@155 $generated@@850)))
)))
(assert (forall (($generated@@853 T@U) ($generated@@854 Int) ) (!  (=> (= (type $generated@@853) ($generated@@374 $generated@@179)) (=> (and (<= 0 $generated@@854) (< $generated@@854 ($generated@@373 $generated@@853))) (< ($generated@@723 ($generated@@381 $generated@@170 ($generated@@673 $generated@@853 $generated@@854))) ($generated@@852 $generated@@853))))
 :pattern ( ($generated@@723 ($generated@@381 $generated@@170 ($generated@@673 $generated@@853 $generated@@854))))
)))
(assert (forall (($generated@@855 T@U) ($generated@@856 T@U) ($generated@@857 T@U) ) (!  (=> (and (and (and (= (type $generated@@855) ($generated@@420 $generated@@179 $generated@@179)) (= (type $generated@@856) $generated@@74)) (= (type $generated@@857) $generated@@74)) ($generated@@153 $generated@@855 ($generated@@559 $generated@@856 $generated@@857))) (and (and ($generated@@153 ($generated@@418 $generated@@855) ($generated@@309 $generated@@856)) ($generated@@153 ($generated@@467 $generated@@855) ($generated@@309 $generated@@857))) ($generated@@153 ($generated@@533 $generated@@855) ($generated@@309 ($generated@@169 $generated@@856 $generated@@857)))))
 :pattern ( ($generated@@153 $generated@@855 ($generated@@559 $generated@@856 $generated@@857)))
)))
(assert (forall (($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ) (!  (=> (and (and (and (= (type $generated@@858) ($generated@@438 $generated@@179 $generated@@179)) (= (type $generated@@859) $generated@@74)) (= (type $generated@@860) $generated@@74)) ($generated@@153 $generated@@858 ($generated@@567 $generated@@859 $generated@@860))) (and (and ($generated@@153 ($generated@@436 $generated@@858) ($generated@@314 $generated@@859)) ($generated@@153 ($generated@@478 $generated@@858) ($generated@@314 $generated@@860))) ($generated@@153 ($generated@@541 $generated@@858) ($generated@@314 ($generated@@169 $generated@@859 $generated@@860)))))
 :pattern ( ($generated@@153 $generated@@858 ($generated@@567 $generated@@859 $generated@@860)))
)))
(assert (forall (($generated@@861 T@U) ) (!  (=> (= (type $generated@@861) $generated@@2) ($generated@@153 $generated@@861 $generated@@46))
 :pattern ( ($generated@@153 $generated@@861 $generated@@46))
)))
(assert (forall (($generated@@862 T@U) ) (!  (=> (= (type $generated@@862) $generated@@3) ($generated@@153 $generated@@862 $generated@@47))
 :pattern ( ($generated@@153 $generated@@862 $generated@@47))
)))
(assert (forall (($generated@@863 T@U) ) (!  (=> (= (type $generated@@863) $generated@@4) ($generated@@153 $generated@@863 $generated@@44))
 :pattern ( ($generated@@153 $generated@@863 $generated@@44))
)))
(assert (forall (($generated@@864 T@U) ) (!  (=> (= (type $generated@@864) $generated@@629) ($generated@@153 $generated@@864 $generated@@45))
 :pattern ( ($generated@@153 $generated@@864 $generated@@45))
)))
(assert (forall (($generated@@865 T@U) ) (!  (=> (= (type $generated@@865) $generated@@179) ($generated@@153 $generated@@865 $generated@@48))
 :pattern ( ($generated@@153 $generated@@865 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@866 () T@U)
(declare-fun $generated@@867 () T@U)
(declare-fun $generated@@868 () T@U)
(declare-fun $generated@@869 () T@U)
(declare-fun $generated@@870 () Int)
(declare-fun $generated@@871 () T@U)
(declare-fun $generated@@872 () T@U)
(declare-fun $generated@@873 (T@U) Bool)
(declare-fun $generated@@874 () T@U)
(declare-fun $generated@@875 () T@U)
(declare-fun $generated@@876 () T@U)
(declare-fun $generated@@877 () T@U)
(declare-fun $generated@@878 () T@U)
(declare-fun $generated@@879 () T@U)
(declare-fun $generated@@880 () T@U)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () Int)
(declare-fun $generated@@883 () T@U)
(declare-fun $generated@@884 () T@U)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () T@U)
(declare-fun $generated@@887 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@866) ($generated@@86 $generated@@87 $generated@@88)) (= (type $generated@@867) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@868) ($generated@@191 $generated@@87 $generated@@4))) (= (type $generated@@869) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@871) $generated@@156)) (= (type $generated@@872) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@874) $generated@@156)) (= (type $generated@@875) ($generated@@86 $generated@@179 $generated@@4))) (= (type $generated@@876) ($generated@@374 $generated@@179))) (= (type $generated@@877) ($generated@@86 $generated@@87 $generated@@88))) (= (type $generated@@878) ($generated@@374 $generated@@179))) (= (type $generated@@879) ($generated@@420 $generated@@179 $generated@@179))) (= (type $generated@@880) ($generated@@374 $generated@@179))) (= (type $generated@@881) ($generated@@374 $generated@@179))) (= (type $generated@@883) $generated@@156)) (= (type $generated@@884) ($generated@@374 $generated@@179))) (= (type $generated@@885) ($generated@@374 $generated@@179))) (= (type $generated@@886) $generated@@156)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@888 true))
(let (($generated@@889 true))
(let (($generated@@890  (=> (and ($generated@@273 $generated@@866) (or (= $generated@@867 $generated@@866) ($generated@@142 $generated@@867 $generated@@866))) (and (=> (= (ControlFlow 0 4) 2) $generated@@889) (=> (= (ControlFlow 0 4) 3) $generated@@888)))))
(let (($generated@@891 true))
(let (($generated@@892  (=> (and (= $generated@@868 ($generated@@190 $generated@@150 $generated@@869 $generated@@60 false)) (= $generated@@870 ($generated@@319 15))) (=> (and (and (and ($generated@@153 $generated@@871 ($generated@@163 $generated@@46)) ($generated@@84 $generated@@871 ($generated@@163 $generated@@46) $generated@@869)) (and ($generated@@273 $generated@@872) ($generated@@873 $generated@@872))) (and (and ($generated@@153 $generated@@874 ($generated@@163 $generated@@46)) ($generated@@84 $generated@@874 ($generated@@163 $generated@@46) $generated@@872)) (and (forall (($generated@@893 T@U) ) (!  (=> (= (type $generated@@893) $generated@@87) (=> (and (not (= $generated@@893 $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@869 $generated@@893) $generated@@60))) (= ($generated@@91 $generated@@872 $generated@@893) ($generated@@91 $generated@@869 $generated@@893))))
 :pattern ( ($generated@@91 $generated@@872 $generated@@893))
)) ($generated@@142 $generated@@869 $generated@@872)))) (and (=> (= (ControlFlow 0 5) (- 0 13)) ($generated@@153 ($generated@@8 ($generated@@319 4)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 4)) $generated@@146) (and (=> (= (ControlFlow 0 5) (- 0 12)) ($generated@@153 ($generated@@8 ($generated@@319 2)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 2)) $generated@@146) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@153 ($generated@@8 ($generated@@319 0)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 0)) $generated@@146) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@153 ($generated@@8 ($generated@@319 2)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 2)) $generated@@146) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@153 ($generated@@8 ($generated@@319 1)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 1)) $generated@@146) (=> (= $generated@@875 ($generated@@257 ($generated@@578 ($generated@@578 ($generated@@578 ($generated@@364 $generated@@179) ($generated@@275 ($generated@@8 ($generated@@319 4)))) ($generated@@275 ($generated@@8 ($generated@@319 2)))) ($generated@@275 ($generated@@8 ($generated@@319 0)))) ($generated@@578 ($generated@@578 ($generated@@364 $generated@@179) ($generated@@275 ($generated@@8 ($generated@@319 2)))) ($generated@@275 ($generated@@8 ($generated@@319 1)))))) (=> (and (and (and ($generated@@153 $generated@@876 ($generated@@672 $generated@@146)) ($generated@@84 $generated@@876 ($generated@@672 $generated@@146) $generated@@869)) (and ($generated@@273 $generated@@877) ($generated@@873 $generated@@877))) (and (and ($generated@@153 $generated@@878 ($generated@@672 $generated@@146)) ($generated@@84 $generated@@878 ($generated@@672 $generated@@146) $generated@@877)) (and (forall (($generated@@894 T@U) ) (!  (=> (= (type $generated@@894) $generated@@87) (=> (and (not (= $generated@@894 $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@872 $generated@@894) $generated@@60))) (= ($generated@@91 $generated@@877 $generated@@894) ($generated@@91 $generated@@872 $generated@@894))))
 :pattern ( ($generated@@91 $generated@@877 $generated@@894))
)) ($generated@@142 $generated@@872 $generated@@877)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@153 ($generated@@8 ($generated@@319 4)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 4)) $generated@@146) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@153 ($generated@@8 ($generated@@319 0)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 0)) $generated@@146) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@153 ($generated@@8 ($generated@@319 2)) $generated@@146)) (=> ($generated@@153 ($generated@@8 ($generated@@319 2)) $generated@@146) (=> (= $generated@@879 ($generated@@321 ($generated@@731 ($generated@@731 ($generated@@731 ($generated@@419 $generated@@179 $generated@@179) ($generated@@275 ($generated@@8 ($generated@@319 4))) ($generated@@275 ($generated@@8 ($generated@@319 100)))) ($generated@@275 ($generated@@8 ($generated@@319 0))) ($generated@@275 ($generated@@8 ($generated@@319 300)))) ($generated@@275 ($generated@@8 ($generated@@319 2))) ($generated@@275 ($generated@@8 ($generated@@319 200)))))) (=> (and (and ($generated@@153 $generated@@880 ($generated@@672 $generated@@146)) ($generated@@84 $generated@@880 ($generated@@672 $generated@@146) $generated@@869)) (and ($generated@@273 $generated@@867) ($generated@@873 $generated@@867))) (=> (and (and (and ($generated@@153 $generated@@881 ($generated@@672 $generated@@146)) ($generated@@84 $generated@@881 ($generated@@672 $generated@@146) $generated@@867)) (forall (($generated@@895 T@U) ) (!  (=> (= (type $generated@@895) $generated@@87) (=> (and (not (= $generated@@895 $generated@@150)) ($generated@@0 ($generated@@93 ($generated@@91 $generated@@877 $generated@@895) $generated@@60))) (= ($generated@@91 $generated@@867 $generated@@895) ($generated@@91 $generated@@877 $generated@@895))))
 :pattern ( ($generated@@91 $generated@@867 $generated@@895))
))) (and ($generated@@142 $generated@@877 $generated@@867) (= $generated@@882 ($generated@@319 5)))) (and (=> (= (ControlFlow 0 5) 4) $generated@@890) (=> (= (ControlFlow 0 5) 1) $generated@@891)))))))))))))))))))))))))))
(let (($generated@@896  (=> (and ($generated@@273 $generated@@869) ($generated@@873 $generated@@869)) (=> (and (and ($generated@@153 $generated@@883 ($generated@@163 $generated@@46)) ($generated@@84 $generated@@883 ($generated@@163 $generated@@46) $generated@@869)) true) (=> (and (and (and (and ($generated@@153 $generated@@884 ($generated@@672 $generated@@146)) ($generated@@84 $generated@@884 ($generated@@672 $generated@@146) $generated@@869)) true) (and (and ($generated@@153 $generated@@885 ($generated@@672 $generated@@146)) ($generated@@84 $generated@@885 ($generated@@672 $generated@@146) $generated@@869)) true)) (and (and (and ($generated@@153 $generated@@886 ($generated@@163 $generated@@46)) ($generated@@84 $generated@@886 ($generated@@163 $generated@@46) $generated@@869)) true) (and (= 2 $generated@@887) (= (ControlFlow 0 14) 5)))) $generated@@892)))))
$generated@@896)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 15))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (Int) T@U)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@197 (T@U T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@208 (Int) T@U)
(declare-fun $generated@@209 (Int) Bool)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) T@U)
(declare-fun $generated@@218 (T@U) Bool)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@227 (T@T T@T) T@T)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U T@U) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@316 (T@U T@U T@U) T@U)
(declare-fun $generated@@317 (T@U T@U T@U) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@347 (Int) Int)
(declare-fun $generated@@350 (T@U) Bool)
(declare-fun $generated@@353 (T@U) Bool)
(declare-fun $generated@@356 (T@U) Bool)
(declare-fun $generated@@391 (Int) Int)
(declare-fun $generated@@394 (T@U T@U T@U) Bool)
(declare-fun $generated@@405 () T@U)
(declare-fun $generated@@406 (T@U T@U) Bool)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@418 (T@U) Int)
(declare-fun $generated@@419 (T@T) T@T)
(declare-fun $generated@@420 (T@T) T@T)
(declare-fun $generated@@441 (T@U) Int)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@453 (T@T T@T) T@U)
(declare-fun $generated@@454 (T@T T@T) T@T)
(declare-fun $generated@@455 (T@T) T@T)
(declare-fun $generated@@456 (T@T) T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@T T@T) T@U)
(declare-fun $generated@@472 (T@T T@T) T@T)
(declare-fun $generated@@473 (T@T) T@T)
(declare-fun $generated@@474 (T@T) T@T)
(declare-fun $generated@@495 (T@T T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@527 () Bool)
(declare-fun $generated@@528 () Int)
(declare-fun $generated@@529 () Bool)
(declare-fun $generated@@530 () Int)
(declare-fun $generated@@531 () Bool)
(declare-fun $generated@@532 () Int)
(declare-fun $generated@@534 () T@U)
(declare-fun $generated@@536 () T@U)
(declare-fun $generated@@538 () T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@579 (T@U T@U) T@U)
(declare-fun $generated@@587 (T@U T@U) T@U)
(declare-fun $generated@@601 (T@T) T@U)
(declare-fun $generated@@625 () T@T)
(declare-fun $generated@@627 (Int) Bool)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@645 (T@U) T@U)
(declare-fun $generated@@649 (T@U) T@U)
(declare-fun $generated@@657 (T@U) T@U)
(declare-fun $generated@@661 (T@U) T@U)
(declare-fun $generated@@670 (T@U) T@U)
(declare-fun $generated@@671 (T@U Int) T@U)
(declare-fun $generated@@680 (T@U) Int)
(declare-fun $generated@@682 (T@U) T@U)
(declare-fun $generated@@686 (T@U) T@U)
(declare-fun $generated@@690 (T@U) T@U)
(declare-fun $generated@@694 (T@U) T@U)
(declare-fun $generated@@698 (T@U) T@U)
(declare-fun $generated@@701 (T@U) T@U)
(declare-fun $generated@@704 (T@U) T@U)
(declare-fun $generated@@718 (T@U) Int)
(declare-fun $generated@@719 (T@U) Int)
(declare-fun $generated@@724 () Bool)
(declare-fun $generated@@726 () Bool)
(declare-fun $generated@@728 () Bool)
(declare-fun $generated@@854 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@78) 6) (= (type $generated@@44) $generated@@78)) (= (type $generated@@45) $generated@@78)) (= (type $generated@@46) $generated@@78)) (= (type $generated@@47) $generated@@78)) (= (type $generated@@48) $generated@@78)) (= ($generated@@1 $generated@@79) 7)) (= (type $generated@@49) $generated@@79)) (= (type $generated@@50) $generated@@79)) (= (type $generated@@51) $generated@@79)) (= (type $generated@@52) $generated@@79)) (= (type $generated@@53) $generated@@79)) (= (type $generated@@54) $generated@@79)) (= (type $generated@@55) $generated@@79)) (= (type $generated@@56) $generated@@79)) (= (type $generated@@57) $generated@@79)) (= (type $generated@@58) $generated@@79)) (= (type $generated@@59) $generated@@79)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@80 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@80 $generated@@85))
))) (= (type $generated@@60) ($generated@@80 $generated@@4))) (= (type $generated@@61) $generated@@79)) (= (type $generated@@62) $generated@@79)) (= (type $generated@@63) $generated@@79)) (= ($generated@@1 $generated@@82) 9)) (= (type $generated@@64) $generated@@82)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@79)) (= (type $generated@@68) $generated@@82)) (= (type $generated@@69) $generated@@79)) (= (type $generated@@70) $generated@@82)) (= (type $generated@@71) $generated@@82)) (= ($generated@@1 $generated@@83) 10)) (= (type $generated@@72) $generated@@83)) (= (type $generated@@73) $generated@@83)) (= (type $generated@@74) $generated@@83)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@83)) (= (type $generated@@77) $generated@@83)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77)
)
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@91) 11) (forall (($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(= (type ($generated@@90 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@90 $generated@@98))
))) (= (type $generated@@94) $generated@@78)) (= (type $generated@@97) $generated@@91)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@100 T@U) ) (!  (=> (and (= (type $generated@@100) $generated@@91) (or ($generated@@92 ($generated@@90 $generated@@100)) (and (not (= 1 $generated@@88)) ($generated@@93 $generated@@100 $generated@@94)))) (and ($generated@@95 ($generated@@90 $generated@@100)) (= ($generated@@89 ($generated@@90 $generated@@100)) (ite ($generated@@96 $generated@@100 $generated@@97) 5 2))))
 :weight 3
 :pattern ( ($generated@@89 ($generated@@90 $generated@@100)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@103 $generated@@112 $generated@@113)) 12)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@103 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@103 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@107 (type $generated@@118))))
(= (type ($generated@@108 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@108 $generated@@118 $generated@@119))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 (type $generated@@123)))
(let (($generated@@125 (type $generated@@122)))
(= (type ($generated@@109 $generated@@121 $generated@@122 $generated@@123)) ($generated@@103 $generated@@125 $generated@@124))))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@107 (type $generated@@126))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@108 ($generated@@109 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@108 ($generated@@109 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@108 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@108 ($generated@@109 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@108 $generated@@135 $generated@@137)))
 :weight 0
)))) (= ($generated@@1 $generated@@104) 13)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@81 (type $generated@@139))))
(= (type ($generated@@110 $generated@@138 $generated@@139)) $generated@@140))
 :pattern ( ($generated@@110 $generated@@138 $generated@@139))
))) (= ($generated@@1 $generated@@105) 14)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@111 $generated@@141 $generated@@142 $generated@@143)) $generated@@105)
 :pattern ( ($generated@@111 $generated@@141 $generated@@142 $generated@@143))
))) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@81 (type $generated@@145))))
 (=> (= (type $generated@@146) $generated@@147) (= ($generated@@110 ($generated@@111 $generated@@144 $generated@@145 $generated@@146) $generated@@145) $generated@@146)))
 :weight 0
))) (and (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@110 ($generated@@111 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@110 $generated@@149 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or true (= ($generated@@110 ($generated@@111 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@110 $generated@@153 $generated@@155)))
 :weight 0
)))) (forall (($generated@@156 Int) ) (! (= (type ($generated@@102 $generated@@156)) $generated@@78)
 :pattern ( ($generated@@102 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@2) (= (type $generated@@158) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
 :pattern ( ($generated@@101 $generated@@157 ($generated@@102 0) $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@161) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@159 $generated@@160 $generated@@161)) (forall (($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@104) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@160 $generated@@162) $generated@@60))) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@161 $generated@@162) $generated@@60)))
 :pattern ( ($generated@@110 ($generated@@108 $generated@@161 $generated@@162) $generated@@60))
)))
 :pattern ( ($generated@@159 $generated@@160 $generated@@161))
)))
(assert  (and (= (type $generated@@163) $generated@@78) (= (type $generated@@164) $generated@@104)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@104) (= (type $generated@@166) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@165 $generated@@163 $generated@@166)  (or (= $generated@@165 $generated@@164) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@101 $generated@@165 $generated@@163 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= (type $generated@@167) $generated@@2) ($generated@@93 $generated@@167 ($generated@@102 0)))
 :pattern ( ($generated@@93 $generated@@167 ($generated@@102 0)))
)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@168 T@U) ) (!  (=> (and (= (type $generated@@168) $generated@@91) (or ($generated@@92 $generated@@168) (and (not (= 1 $generated@@88)) ($generated@@93 $generated@@168 $generated@@94)))) true)
 :pattern ( ($generated@@89 $generated@@168))
))))
(assert  (and (and (= ($generated@@1 $generated@@170) 15) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@78)
 :pattern ( ($generated@@169 $generated@@172))
))) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@78)
 :pattern ( ($generated@@171 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@78) (= (type $generated@@175) $generated@@170)) (= (type $generated@@176) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@175 ($generated@@169 $generated@@174) $generated@@176) ($generated@@101 $generated@@175 ($generated@@171 $generated@@174) $generated@@176)))
 :pattern ( ($generated@@101 $generated@@175 ($generated@@169 $generated@@174) $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@78)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@78) (= (type $generated@@180) $generated@@170)) (= (type $generated@@181) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@180 ($generated@@177 $generated@@179) $generated@@181) ($generated@@101 $generated@@180 ($generated@@169 $generated@@179) $generated@@181)))
 :pattern ( ($generated@@101 $generated@@180 ($generated@@177 $generated@@179) $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@184 $generated@@185)) $generated@@78)
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@78) (= (type $generated@@187) $generated@@78)) (= (type $generated@@188) $generated@@91)) ($generated@@93 $generated@@188 ($generated@@183 $generated@@186 $generated@@187))) ($generated@@182 $generated@@188))
 :pattern ( ($generated@@182 $generated@@188) ($generated@@93 $generated@@188 ($generated@@183 $generated@@186 $generated@@187)))
)))
(assert  (and (and (= ($generated@@1 $generated@@192) 16) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@190 $generated@@193))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@91) (= (type $generated@@196) $generated@@91)) true) (= ($generated@@189 $generated@@195 $generated@@196)  (and (= ($generated@@190 $generated@@195) ($generated@@190 $generated@@196)) (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)))))
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@170)
 :pattern ( ($generated@@198 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (= (type $generated@@201) $generated@@104) (= (type $generated@@202) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@197 $generated@@46 $generated@@202 ($generated@@198 $generated@@201)) ($generated@@199 $generated@@201)))
 :pattern ( ($generated@@197 $generated@@46 $generated@@202 ($generated@@198 $generated@@201)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@170)
 :pattern ( ($generated@@203 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (= (type $generated@@206) $generated@@91) (= (type $generated@@207) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@197 $generated@@46 $generated@@207 ($generated@@203 $generated@@206)) ($generated@@204 $generated@@206)))
 :pattern ( ($generated@@197 $generated@@46 $generated@@207 ($generated@@203 $generated@@206)))
)))
(assert (forall (($generated@@210 Int) ) (! (= (type ($generated@@208 $generated@@210)) $generated@@170)
 :pattern ( ($generated@@208 $generated@@210))
)))
(assert (forall (($generated@@211 Int) ($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@197 $generated@@46 $generated@@212 ($generated@@208 $generated@@211)) ($generated@@209 $generated@@211)))
 :pattern ( ($generated@@197 $generated@@46 $generated@@212 ($generated@@208 $generated@@211)))
)))
(assert (forall (($generated@@214 T@U) ) (! (= (type ($generated@@213 $generated@@214)) $generated@@82)
 :pattern ( ($generated@@213 $generated@@214))
)))
(assert (= ($generated@@213 $generated@@97) $generated@@68))
(assert (= (type $generated@@215) $generated@@91))
(assert (= ($generated@@213 $generated@@215) $generated@@70))
(assert (= (type $generated@@216) $generated@@91))
(assert (= ($generated@@213 $generated@@216) $generated@@71))
(assert (forall (($generated@@219 T@U) ) (! (= (type ($generated@@217 $generated@@219)) $generated@@78)
 :pattern ( ($generated@@217 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (= (type $generated@@220) ($generated@@103 $generated@@192 $generated@@2)) (= (type $generated@@221) $generated@@78)) ($generated@@93 $generated@@220 ($generated@@217 $generated@@221))) ($generated@@218 $generated@@220))
 :pattern ( ($generated@@93 $generated@@220 ($generated@@217 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ) (! (= (type ($generated@@222 $generated@@223)) $generated@@78)
 :pattern ( ($generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ) (!  (=> (= (type $generated@@224) $generated@@104) (= ($generated@@93 $generated@@224 $generated@@163)  (or (= $generated@@224 $generated@@164) (= ($generated@@222 $generated@@224) $generated@@163))))
 :pattern ( ($generated@@93 $generated@@224 $generated@@163))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@231 $generated@@232)) 17)) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@228 ($generated@@227 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@227 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@229 ($generated@@227 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@227 $generated@@235 $generated@@236))
))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@229 (type $generated@@237))))
(= (type ($generated@@225 $generated@@237 $generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@225 $generated@@237 $generated@@238 $generated@@239))
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(let (($generated@@246 (type $generated@@242)))
(= (type ($generated@@230 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@227 $generated@@246 $generated@@245))))
 :pattern ( ($generated@@230 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@229 (type $generated@@247))))
 (=> (= (type $generated@@250) $generated@@251) (= ($generated@@225 ($generated@@230 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@248 $generated@@249) $generated@@250)))
 :weight 0
))) (and (and (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@254 $generated@@256) (= ($generated@@225 ($generated@@230 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@225 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
)) (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or (= $generated@@261 $generated@@263) (= ($generated@@225 ($generated@@230 $generated@@259 $generated@@260 $generated@@261 $generated@@258) $generated@@262 $generated@@263) ($generated@@225 $generated@@259 $generated@@262 $generated@@263)))
 :weight 0
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (or true (= ($generated@@225 ($generated@@230 $generated@@265 $generated@@266 $generated@@267 $generated@@264) $generated@@268 $generated@@269) ($generated@@225 $generated@@265 $generated@@268 $generated@@269)))
 :weight 0
)))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ) (! (= (type ($generated@@226 $generated@@270 $generated@@271 $generated@@272 $generated@@273)) ($generated@@227 $generated@@104 $generated@@4))
 :pattern ( ($generated@@226 $generated@@270 $generated@@271 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 Bool) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@81 (type $generated@@279))))
 (=> (and (and (and (and (= (type $generated@@274) $generated@@104) (= (type $generated@@275) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@276) ($generated@@80 $generated@@4))) (= (type $generated@@278) $generated@@104)) (= (type $generated@@279) ($generated@@80 $generated@@280))) (= ($generated@@0 ($generated@@225 ($generated@@226 $generated@@274 $generated@@275 $generated@@276 $generated@@277) $generated@@278 $generated@@279))  (=> (and (not (= $generated@@278 $generated@@274)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@275 $generated@@278) $generated@@276))) $generated@@277))))
 :pattern ( ($generated@@225 ($generated@@226 $generated@@274 $generated@@275 $generated@@276 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (= (type $generated@@281) $generated@@78))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@104) (= (type $generated@@283) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@282 $generated@@281 $generated@@283) ($generated@@101 $generated@@282 $generated@@163 $generated@@283)))
 :pattern ( ($generated@@101 $generated@@282 $generated@@281 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@91)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (and (= (type $generated@@288) $generated@@78) (= (type $generated@@289) $generated@@78)) (= (type $generated@@290) $generated@@192)) (= (type $generated@@291) $generated@@192)) (= ($generated@@93 ($generated@@284 $generated@@290 $generated@@291) ($generated@@183 $generated@@288 $generated@@289))  (and ($generated@@285 $generated@@290 $generated@@288) ($generated@@285 $generated@@291 $generated@@289))))
 :pattern ( ($generated@@93 ($generated@@284 $generated@@290 $generated@@291) ($generated@@183 $generated@@288 $generated@@289)))
)))
(assert ($generated@@93 $generated@@97 $generated@@94))
(assert ($generated@@93 $generated@@215 $generated@@94))
(assert ($generated@@93 $generated@@216 $generated@@94))
(assert  (and (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@293 $generated@@295 $generated@@296 $generated@@297)) ($generated@@103 $generated@@192 $generated@@4))
 :pattern ( ($generated@@293 $generated@@295 $generated@@296 $generated@@297))
)) (forall (($generated@@298 T@U) ) (! (= (type ($generated@@294 $generated@@298)) $generated@@192)
 :pattern ( ($generated@@294 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) $generated@@78) (= (type $generated@@300) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@301) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@302) $generated@@170)) (and (and (and ($generated@@159 $generated@@300 $generated@@301) (and ($generated@@292 $generated@@300) ($generated@@292 $generated@@301))) ($generated@@93 $generated@@302 ($generated@@171 $generated@@299))) (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@81 (type $generated@@304))))
 (=> (and (and (= (type $generated@@303) $generated@@104) (= (type $generated@@304) ($generated@@80 $generated@@305))) (and (not (= $generated@@303 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@299 $generated@@300 $generated@@302) ($generated@@294 $generated@@303))))) (= ($generated@@110 ($generated@@108 $generated@@300 $generated@@303) $generated@@304) ($generated@@110 ($generated@@108 $generated@@301 $generated@@303) $generated@@304))))
 :no-pattern (type $generated@@303)
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
)))) (= ($generated@@197 $generated@@299 $generated@@300 $generated@@302) ($generated@@197 $generated@@299 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@159 $generated@@300 $generated@@301) ($generated@@197 $generated@@299 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) $generated@@78) (= (type $generated@@307) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@308) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@309) $generated@@170)) (and (and (and ($generated@@159 $generated@@307 $generated@@308) (and ($generated@@292 $generated@@307) ($generated@@292 $generated@@308))) ($generated@@93 $generated@@309 ($generated@@171 $generated@@306))) (forall (($generated@@310 T@U) ($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@81 (type $generated@@311))))
 (=> (and (and (= (type $generated@@310) $generated@@104) (= (type $generated@@311) ($generated@@80 $generated@@312))) (and (not (= $generated@@310 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@306 $generated@@308 $generated@@309) ($generated@@294 $generated@@310))))) (= ($generated@@110 ($generated@@108 $generated@@307 $generated@@310) $generated@@311) ($generated@@110 ($generated@@108 $generated@@308 $generated@@310) $generated@@311))))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))) (= ($generated@@197 $generated@@306 $generated@@307 $generated@@309) ($generated@@197 $generated@@306 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@159 $generated@@307 $generated@@308) ($generated@@197 $generated@@306 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@292 $generated@@313)) ($generated@@101 $generated@@97 $generated@@94 $generated@@313))
 :pattern ( ($generated@@101 $generated@@97 $generated@@94 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@292 $generated@@314)) ($generated@@101 $generated@@215 $generated@@94 $generated@@314))
 :pattern ( ($generated@@101 $generated@@215 $generated@@94 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@103 $generated@@104 $generated@@105)) ($generated@@292 $generated@@315)) ($generated@@101 $generated@@216 $generated@@94 $generated@@315))
 :pattern ( ($generated@@101 $generated@@216 $generated@@94 $generated@@315))
)))
(assert  (and (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (! (= (type ($generated@@316 $generated@@318 $generated@@319 $generated@@320)) $generated@@192)
 :pattern ( ($generated@@316 $generated@@318 $generated@@319 $generated@@320))
)) (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (! (= (type ($generated@@317 $generated@@321 $generated@@322 $generated@@323)) $generated@@170)
 :pattern ( ($generated@@317 $generated@@321 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@324) $generated@@78) (= (type $generated@@325) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@326) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) $generated@@192))) (= (type $generated@@327) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) $generated@@4))) (= (type $generated@@328) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) ($generated@@103 $generated@@192 $generated@@4)))) (= ($generated@@316 $generated@@324 $generated@@325 ($generated@@317 $generated@@326 $generated@@327 $generated@@328)) ($generated@@108 $generated@@326 $generated@@325)))
 :pattern ( ($generated@@316 $generated@@324 $generated@@325 ($generated@@317 $generated@@326 $generated@@327 $generated@@328)))
)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@104) (or ($generated@@330 $generated@@332) (and (not (= 1 $generated@@88)) (and (not (= $generated@@332 $generated@@164)) ($generated@@93 $generated@@332 $generated@@281))))) (= ($generated@@329 $generated@@332) ($generated@@331 $generated@@332)))
 :pattern ( ($generated@@329 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@91) (= (type $generated@@334) $generated@@91)) (= ($generated@@189 $generated@@333 $generated@@334) (= $generated@@333 $generated@@334)))
 :pattern ( ($generated@@189 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@91) (= (type $generated@@336) $generated@@91)) (= ($generated@@96 $generated@@335 $generated@@336) (= $generated@@335 $generated@@336)))
 :pattern ( ($generated@@96 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@78)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) ($generated@@103 $generated@@192 $generated@@4)) (= (type $generated@@340) $generated@@78)) (= ($generated@@93 $generated@@339 ($generated@@337 $generated@@340)) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@192) ($generated@@0 ($generated@@108 $generated@@339 $generated@@341))) ($generated@@285 $generated@@341 $generated@@340))
 :pattern ( ($generated@@108 $generated@@339 $generated@@341))
))))
 :pattern ( ($generated@@93 $generated@@339 ($generated@@337 $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@78)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@344) ($generated@@103 $generated@@192 $generated@@4)) (= (type $generated@@345) $generated@@78)) (= ($generated@@93 $generated@@344 ($generated@@342 $generated@@345)) (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@192) ($generated@@0 ($generated@@108 $generated@@344 $generated@@346))) ($generated@@285 $generated@@346 $generated@@345))
 :pattern ( ($generated@@108 $generated@@344 $generated@@346))
))))
 :pattern ( ($generated@@93 $generated@@344 ($generated@@342 $generated@@345)))
)))
(assert (forall (($generated@@348 Int) ) (! (= ($generated@@347 $generated@@348) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (! (= ($generated@@90 $generated@@349) $generated@@349)
 :pattern ( ($generated@@90 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@351) $generated@@91) (= (type $generated@@352) $generated@@91)) (and ($generated@@350 $generated@@351) ($generated@@350 $generated@@352))) (= ($generated@@96 $generated@@351 $generated@@352) true))
 :pattern ( ($generated@@96 $generated@@351 $generated@@352) ($generated@@350 $generated@@351))
 :pattern ( ($generated@@96 $generated@@351 $generated@@352) ($generated@@350 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@354) $generated@@91) (= (type $generated@@355) $generated@@91)) (and ($generated@@353 $generated@@354) ($generated@@353 $generated@@355))) (= ($generated@@96 $generated@@354 $generated@@355) true))
 :pattern ( ($generated@@96 $generated@@354 $generated@@355) ($generated@@353 $generated@@354))
 :pattern ( ($generated@@96 $generated@@354 $generated@@355) ($generated@@353 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@357) $generated@@91) (= (type $generated@@358) $generated@@91)) (and ($generated@@356 $generated@@357) ($generated@@356 $generated@@358))) (= ($generated@@96 $generated@@357 $generated@@358) true))
 :pattern ( ($generated@@96 $generated@@357 $generated@@358) ($generated@@356 $generated@@357))
 :pattern ( ($generated@@96 $generated@@357 $generated@@358) ($generated@@356 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@359) $generated@@78) (= (type $generated@@360) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@361) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@362) $generated@@170)) (and (and (and ($generated@@159 $generated@@360 $generated@@361) (and ($generated@@292 $generated@@360) ($generated@@292 $generated@@361))) ($generated@@93 $generated@@362 ($generated@@171 $generated@@359))) (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@81 (type $generated@@364))))
 (=> (and (and (= (type $generated@@363) $generated@@104) (= (type $generated@@364) ($generated@@80 $generated@@365))) (and (not (= $generated@@363 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@359 $generated@@360 $generated@@362) ($generated@@294 $generated@@363))))) (= ($generated@@110 ($generated@@108 $generated@@360 $generated@@363) $generated@@364) ($generated@@110 ($generated@@108 $generated@@361 $generated@@363) $generated@@364))))
 :no-pattern (type $generated@@363)
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
)))) (= ($generated@@293 $generated@@359 $generated@@360 $generated@@362) ($generated@@293 $generated@@359 $generated@@361 $generated@@362)))
 :pattern ( ($generated@@159 $generated@@360 $generated@@361) ($generated@@293 $generated@@359 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@366) $generated@@78) (= (type $generated@@367) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@368) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@369) $generated@@170)) (and (and (and ($generated@@159 $generated@@367 $generated@@368) (and ($generated@@292 $generated@@367) ($generated@@292 $generated@@368))) ($generated@@93 $generated@@369 ($generated@@171 $generated@@366))) (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@81 (type $generated@@371))))
 (=> (and (and (= (type $generated@@370) $generated@@104) (= (type $generated@@371) ($generated@@80 $generated@@372))) (and (not (= $generated@@370 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@366 $generated@@368 $generated@@369) ($generated@@294 $generated@@370))))) (= ($generated@@110 ($generated@@108 $generated@@367 $generated@@370) $generated@@371) ($generated@@110 ($generated@@108 $generated@@368 $generated@@370) $generated@@371))))
 :no-pattern (type $generated@@370)
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
)))) (= ($generated@@293 $generated@@366 $generated@@367 $generated@@369) ($generated@@293 $generated@@366 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@159 $generated@@367 $generated@@368) ($generated@@293 $generated@@366 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@373) $generated@@78) (= (type $generated@@374) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@375) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@376) $generated@@170)) (and (and (and ($generated@@159 $generated@@374 $generated@@375) (and ($generated@@292 $generated@@374) ($generated@@292 $generated@@375))) ($generated@@93 $generated@@376 ($generated@@171 $generated@@373))) (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@81 (type $generated@@378))))
 (=> (and (and (= (type $generated@@377) $generated@@104) (= (type $generated@@378) ($generated@@80 $generated@@379))) (and (not (= $generated@@377 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@373 $generated@@374 $generated@@376) ($generated@@294 $generated@@377))))) (= ($generated@@110 ($generated@@108 $generated@@374 $generated@@377) $generated@@378) ($generated@@110 ($generated@@108 $generated@@375 $generated@@377) $generated@@378))))
 :no-pattern (type $generated@@377)
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
)))) (= ($generated@@316 $generated@@373 $generated@@374 $generated@@376) ($generated@@316 $generated@@373 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@159 $generated@@374 $generated@@375) ($generated@@316 $generated@@373 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@380) $generated@@78) (= (type $generated@@381) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@382) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@383) $generated@@170)) (and (and (and ($generated@@159 $generated@@381 $generated@@382) (and ($generated@@292 $generated@@381) ($generated@@292 $generated@@382))) ($generated@@93 $generated@@383 ($generated@@171 $generated@@380))) (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@81 (type $generated@@385))))
 (=> (and (and (= (type $generated@@384) $generated@@104) (= (type $generated@@385) ($generated@@80 $generated@@386))) (and (not (= $generated@@384 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@380 $generated@@382 $generated@@383) ($generated@@294 $generated@@384))))) (= ($generated@@110 ($generated@@108 $generated@@381 $generated@@384) $generated@@385) ($generated@@110 ($generated@@108 $generated@@382 $generated@@384) $generated@@385))))
 :no-pattern (type $generated@@384)
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
)))) (= ($generated@@316 $generated@@380 $generated@@381 $generated@@383) ($generated@@316 $generated@@380 $generated@@382 $generated@@383)))
 :pattern ( ($generated@@159 $generated@@381 $generated@@382) ($generated@@316 $generated@@380 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@104) (= (type $generated@@388) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@316 $generated@@46 $generated@@388 ($generated@@198 $generated@@387)) ($generated@@294 ($generated@@8 ($generated@@329 $generated@@387)))))
 :pattern ( ($generated@@316 $generated@@46 $generated@@388 ($generated@@198 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@91) (= (type $generated@@390) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@316 $generated@@46 $generated@@390 ($generated@@203 $generated@@389)) ($generated@@294 ($generated@@8 ($generated@@89 $generated@@389)))))
 :pattern ( ($generated@@316 $generated@@46 $generated@@390 ($generated@@203 $generated@@389)))
)))
(assert (forall (($generated@@392 Int) ($generated@@393 T@U) ) (!  (=> (= (type $generated@@393) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@316 $generated@@46 $generated@@393 ($generated@@208 $generated@@392)) ($generated@@294 ($generated@@8 ($generated@@391 $generated@@392)))))
 :pattern ( ($generated@@316 $generated@@46 $generated@@393 ($generated@@208 $generated@@392)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@395) $generated@@78) (= (type $generated@@396) $generated@@78)) (= (type $generated@@397) $generated@@192)) (= (type $generated@@398) $generated@@192)) (= (type $generated@@399) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@292 $generated@@399)) (= ($generated@@101 ($generated@@284 $generated@@397 $generated@@398) ($generated@@183 $generated@@395 $generated@@396) $generated@@399)  (and ($generated@@394 $generated@@397 $generated@@395 $generated@@399) ($generated@@394 $generated@@398 $generated@@396 $generated@@399))))
 :pattern ( ($generated@@101 ($generated@@284 $generated@@397 $generated@@398) ($generated@@183 $generated@@395 $generated@@396) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@91) (= ($generated@@182 $generated@@400) (= ($generated@@213 $generated@@400) $generated@@64)))
 :pattern ( ($generated@@182 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@91) (= ($generated@@350 $generated@@401) (= ($generated@@213 $generated@@401) $generated@@68)))
 :pattern ( ($generated@@350 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (= (type $generated@@402) $generated@@91) (= ($generated@@353 $generated@@402) (= ($generated@@213 $generated@@402) $generated@@70)))
 :pattern ( ($generated@@353 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (= (type $generated@@403) $generated@@91) (= ($generated@@356 $generated@@403) (= ($generated@@213 $generated@@403) $generated@@71)))
 :pattern ( ($generated@@356 $generated@@403))
)))
(assert  (=> (< 0 $generated@@88) (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@104) ($generated@@93 ($generated@@8 ($generated@@331 $generated@@404)) $generated@@46))
 :pattern ( ($generated@@331 $generated@@404))
))))
(assert  (and (= (type $generated@@405) ($generated@@103 $generated@@104 $generated@@105)) (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@103 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) $generated@@78) (= (type $generated@@410) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@411) $generated@@170)) (and (and ($generated@@292 $generated@@410) ($generated@@93 $generated@@411 ($generated@@171 $generated@@409))) ($generated@@406 ($generated@@293 $generated@@409 $generated@@405 $generated@@411) ($generated@@407 $generated@@192)))) (= ($generated@@197 $generated@@409 $generated@@405 $generated@@411) ($generated@@197 $generated@@409 $generated@@410 $generated@@411)))
 :pattern ( ($generated@@197 $generated@@409 $generated@@405 $generated@@411) ($generated@@292 $generated@@410))
 :pattern ( ($generated@@197 $generated@@409 $generated@@410 $generated@@411))
)))
(assert  (=> (< 0 $generated@@88) (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@413) $generated@@104)) (and ($generated@@292 $generated@@412) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@412 $generated@@413) $generated@@60)))) ($generated@@101 ($generated@@8 ($generated@@331 $generated@@413)) $generated@@46 $generated@@412))
 :pattern ( ($generated@@331 $generated@@413) ($generated@@110 ($generated@@108 $generated@@412 $generated@@413) $generated@@60))
))))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@91) ($generated@@182 $generated@@414)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@192) (= (type $generated@@416) $generated@@192)) (= $generated@@414 ($generated@@284 $generated@@415 $generated@@416)))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
)))
 :pattern ( ($generated@@182 $generated@@414))
)))
(assert  (and (and (forall (($generated@@421 T@T) ) (= ($generated@@1 ($generated@@419 $generated@@421)) 18)) (forall (($generated@@422 T@T) ) (! (= ($generated@@420 ($generated@@419 $generated@@422)) $generated@@422)
 :pattern ( ($generated@@419 $generated@@422))
))) (forall (($generated@@423 T@T) ) (! (= (type ($generated@@417 $generated@@423)) ($generated@@419 $generated@@423))
 :pattern ( ($generated@@417 $generated@@423))
))))
(assert (forall (($generated@@424 T@T) ) (! (= ($generated@@418 ($generated@@417 $generated@@424)) 0)
 :pattern ( ($generated@@417 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@91) ($generated@@350 $generated@@425)) (= $generated@@425 $generated@@97))
 :pattern ( ($generated@@350 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@91) ($generated@@353 $generated@@426)) (= $generated@@426 $generated@@215))
 :pattern ( ($generated@@353 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@91) ($generated@@356 $generated@@427)) (= $generated@@427 $generated@@216))
 :pattern ( ($generated@@356 $generated@@427))
)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@104) (or ($generated@@330 $generated@@428) (and (not (= 1 $generated@@88)) (and (not (= $generated@@428 $generated@@164)) ($generated@@93 $generated@@428 $generated@@281))))) true)
 :pattern ( ($generated@@329 $generated@@428))
))))
(assert ($generated@@292 $generated@@405))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@104) (or ($generated@@330 ($generated@@90 $generated@@429)) (and (not (= 1 $generated@@88)) (and (not (= $generated@@429 $generated@@164)) ($generated@@93 $generated@@429 $generated@@281))))) (= ($generated@@329 ($generated@@90 $generated@@429)) ($generated@@331 ($generated@@90 $generated@@429))))
 :weight 3
 :pattern ( ($generated@@329 ($generated@@90 $generated@@429)))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@78) (= (type $generated@@432) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@394 ($generated@@294 $generated@@430) $generated@@431 $generated@@432) ($generated@@101 $generated@@430 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@394 ($generated@@294 $generated@@430) $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@433) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@434) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@435) $generated@@192)) (= (type $generated@@436) $generated@@78)) ($generated@@159 $generated@@433 $generated@@434)) ($generated@@394 $generated@@435 $generated@@436 $generated@@433)) ($generated@@394 $generated@@435 $generated@@436 $generated@@434))
 :pattern ( ($generated@@159 $generated@@433 $generated@@434) ($generated@@394 $generated@@435 $generated@@436 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@438) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@440) $generated@@78)) ($generated@@159 $generated@@437 $generated@@438)) ($generated@@101 $generated@@439 $generated@@440 $generated@@437)) ($generated@@101 $generated@@439 $generated@@440 $generated@@438))
 :pattern ( ($generated@@159 $generated@@437 $generated@@438) ($generated@@101 $generated@@439 $generated@@440 $generated@@437))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@103 $generated@@443 $generated@@2))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@106 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@103 $generated@@445 $generated@@2)) (and (= (= ($generated@@441 $generated@@444) 0) (= $generated@@444 ($generated@@442 $generated@@445))) (=> (not (= ($generated@@441 $generated@@444) 0)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (< 0 ($generated ($generated@@108 $generated@@444 $generated@@446))))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@441 $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@83)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@78) (and (= ($generated@@86 ($generated@@171 $generated@@449)) $generated@@61) (= ($generated@@447 ($generated@@171 $generated@@449)) $generated@@72)))
 :pattern ( ($generated@@171 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@78) (and (= ($generated@@86 ($generated@@169 $generated@@450)) $generated@@62) (= ($generated@@447 ($generated@@169 $generated@@450)) $generated@@73)))
 :pattern ( ($generated@@169 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (= (type $generated@@451) $generated@@78) (and (= ($generated@@86 ($generated@@177 $generated@@451)) $generated@@63) (= ($generated@@447 ($generated@@177 $generated@@451)) $generated@@74)))
 :pattern ( ($generated@@177 $generated@@451))
)))
(assert  (and (and (and (and (forall (($generated@@457 T@T) ($generated@@458 T@T) ) (= ($generated@@1 ($generated@@454 $generated@@457 $generated@@458)) 19)) (forall (($generated@@459 T@T) ($generated@@460 T@T) ) (! (= ($generated@@455 ($generated@@454 $generated@@459 $generated@@460)) $generated@@459)
 :pattern ( ($generated@@454 $generated@@459 $generated@@460))
))) (forall (($generated@@461 T@T) ($generated@@462 T@T) ) (! (= ($generated@@456 ($generated@@454 $generated@@461 $generated@@462)) $generated@@462)
 :pattern ( ($generated@@454 $generated@@461 $generated@@462))
))) (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@455 (type $generated@@463))))
(= (type ($generated@@452 $generated@@463)) ($generated@@103 $generated@@464 $generated@@4)))
 :pattern ( ($generated@@452 $generated@@463))
))) (forall (($generated@@465 T@T) ($generated@@466 T@T) ) (! (= (type ($generated@@453 $generated@@465 $generated@@466)) ($generated@@454 $generated@@465 $generated@@466))
 :pattern ( ($generated@@453 $generated@@465 $generated@@466))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@T) ) (! (let (($generated@@469 (type $generated@@467)))
 (not ($generated@@0 ($generated@@108 ($generated@@452 ($generated@@453 $generated@@469 $generated@@468)) $generated@@467))))
 :pattern ( (let (($generated@@469 (type $generated@@467)))
($generated@@108 ($generated@@452 ($generated@@453 $generated@@469 $generated@@468)) $generated@@467)))
)))
(assert  (and (and (and (and (forall (($generated@@475 T@T) ($generated@@476 T@T) ) (= ($generated@@1 ($generated@@472 $generated@@475 $generated@@476)) 20)) (forall (($generated@@477 T@T) ($generated@@478 T@T) ) (! (= ($generated@@473 ($generated@@472 $generated@@477 $generated@@478)) $generated@@477)
 :pattern ( ($generated@@472 $generated@@477 $generated@@478))
))) (forall (($generated@@479 T@T) ($generated@@480 T@T) ) (! (= ($generated@@474 ($generated@@472 $generated@@479 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@472 $generated@@479 $generated@@480))
))) (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@473 (type $generated@@481))))
(= (type ($generated@@470 $generated@@481)) ($generated@@103 $generated@@482 $generated@@4)))
 :pattern ( ($generated@@470 $generated@@481))
))) (forall (($generated@@483 T@T) ($generated@@484 T@T) ) (! (= (type ($generated@@471 $generated@@483 $generated@@484)) ($generated@@472 $generated@@483 $generated@@484))
 :pattern ( ($generated@@471 $generated@@483 $generated@@484))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@T) ) (! (let (($generated@@487 (type $generated@@485)))
 (not ($generated@@0 ($generated@@108 ($generated@@470 ($generated@@471 $generated@@487 $generated@@486)) $generated@@485))))
 :pattern ( (let (($generated@@487 (type $generated@@485)))
($generated@@108 ($generated@@470 ($generated@@471 $generated@@487 $generated@@486)) $generated@@485)))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@106 (type $generated@@488))))
 (=> (and (= (type $generated@@488) ($generated@@103 $generated@@490 $generated@@4)) (= (type $generated@@489) ($generated@@103 $generated@@490 $generated@@4))) (= ($generated@@406 $generated@@488 $generated@@489) (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@490) (= ($generated@@0 ($generated@@108 $generated@@488 $generated@@491)) ($generated@@0 ($generated@@108 $generated@@489 $generated@@491))))
 :pattern ( ($generated@@108 $generated@@488 $generated@@491))
 :pattern ( ($generated@@108 $generated@@489 $generated@@491))
)))))
 :pattern ( ($generated@@406 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@106 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@103 $generated@@493 $generated@@2)) (= ($generated@@218 $generated@@492) (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@493) (and (<= 0 ($generated ($generated@@108 $generated@@492 $generated@@494))) (<= ($generated ($generated@@108 $generated@@492 $generated@@494)) ($generated@@441 $generated@@492))))
 :pattern ( ($generated@@108 $generated@@492 $generated@@494))
)))))
 :pattern ( ($generated@@218 $generated@@492))
)))
(assert (forall (($generated@@496 T@T) ($generated@@497 T@U) ) (! (= (type ($generated@@495 $generated@@496 $generated@@497)) $generated@@496)
 :pattern ( ($generated@@495 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@192) ($generated@@285 $generated@@498 $generated@@163)) (and (= ($generated@@294 ($generated@@495 $generated@@104 $generated@@498)) $generated@@498) ($generated@@93 ($generated@@495 $generated@@104 $generated@@498) $generated@@163)))
 :pattern ( ($generated@@285 $generated@@498 $generated@@163))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@192) ($generated@@285 $generated@@499 $generated@@281)) (and (= ($generated@@294 ($generated@@495 $generated@@104 $generated@@499)) $generated@@499) ($generated@@93 ($generated@@495 $generated@@104 $generated@@499) $generated@@281)))
 :pattern ( ($generated@@285 $generated@@499 $generated@@281))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@192) ($generated@@285 $generated@@500 $generated@@94)) (and (= ($generated@@294 ($generated@@495 $generated@@91 $generated@@500)) $generated@@500) ($generated@@93 ($generated@@495 $generated@@91 $generated@@500) $generated@@94)))
 :pattern ( ($generated@@285 $generated@@500 $generated@@94))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@104) (= ($generated@@93 $generated@@501 $generated@@281)  (and ($generated@@93 $generated@@501 $generated@@163) (not (= $generated@@501 $generated@@164)))))
 :pattern ( ($generated@@93 $generated@@501 $generated@@281))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@456 (type $generated@@502))))
(let (($generated@@504 ($generated@@455 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@454 $generated@@504 $generated@@503)) (or (= $generated@@502 ($generated@@453 $generated@@504 $generated@@503)) (exists (($generated@@505 T@U) ) (!  (and (= (type $generated@@505) $generated@@504) ($generated@@0 ($generated@@108 ($generated@@452 $generated@@502) $generated@@505)))
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@452 $generated@@502))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@456 (type $generated@@507))))
(= (type ($generated@@506 $generated@@507)) ($generated@@103 $generated@@508 $generated@@4)))
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@456 (type $generated@@509))))
(let (($generated@@511 ($generated@@455 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@454 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@453 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ) (!  (and (= (type $generated@@512) $generated@@510) ($generated@@0 ($generated@@108 ($generated@@506 $generated@@509) $generated@@512)))
 :no-pattern (type $generated@@512)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
))))))
 :pattern ( ($generated@@506 $generated@@509))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 ($generated@@474 (type $generated@@513))))
(let (($generated@@515 ($generated@@473 (type $generated@@513))))
 (=> (= (type $generated@@513) ($generated@@472 $generated@@515 $generated@@514)) (or (= $generated@@513 ($generated@@471 $generated@@515 $generated@@514)) (exists (($generated@@516 T@U) ) (!  (and (= (type $generated@@516) $generated@@515) ($generated@@0 ($generated@@108 ($generated@@470 $generated@@513) $generated@@516)))
 :no-pattern (type $generated@@516)
 :no-pattern ($generated $generated@@516)
 :no-pattern ($generated@@0 $generated@@516)
))))))
 :pattern ( ($generated@@470 $generated@@513))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@474 (type $generated@@518))))
(= (type ($generated@@517 $generated@@518)) ($generated@@103 $generated@@519 $generated@@4)))
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 ($generated@@474 (type $generated@@520))))
(let (($generated@@522 ($generated@@473 (type $generated@@520))))
 (=> (= (type $generated@@520) ($generated@@472 $generated@@522 $generated@@521)) (or (= $generated@@520 ($generated@@471 $generated@@522 $generated@@521)) (exists (($generated@@523 T@U) ) (!  (and (= (type $generated@@523) $generated@@521) ($generated@@0 ($generated@@108 ($generated@@517 $generated@@520) $generated@@523)))
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@517 $generated@@520))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) ($generated@@103 $generated@@192 $generated@@2)) (= (type $generated@@525) $generated@@78)) (= ($generated@@93 $generated@@524 ($generated@@217 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@192) (< 0 ($generated ($generated@@108 $generated@@524 $generated@@526)))) ($generated@@285 $generated@@526 $generated@@525))
 :pattern ( ($generated@@108 $generated@@524 $generated@@526))
))))
 :pattern ( ($generated@@93 $generated@@524 ($generated@@217 $generated@@525)))
)))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@527 (not (= 0 $generated@@88))) (= $generated@@528 ($generated@@347 3)))))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@527 (not (= 0 $generated@@88))) (= $generated@@528 ($generated@@347 3)))))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@529 (not (= 0 $generated@@88))) (= $generated@@530 ($generated@@347 3)))))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@529 (not (= 0 $generated@@88))) (= $generated@@530 ($generated@@347 3)))))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@531 (not (= 0 $generated@@88))) (= $generated@@532 ($generated@@347 3)))))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@531 (not (= 0 $generated@@88))) (= $generated@@532 ($generated@@347 3)))))
(assert (forall (($generated@@533 Int) ) (!  (=> (and (<= ($generated@@347 0) $generated@@533) (< $generated@@533 15)) (= ($generated@@209 $generated@@533) true))
 :pattern ( ($generated@@209 $generated@@533))
)))
(assert (= (type $generated@@534) $generated@@170))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) ($generated@@103 $generated@@104 $generated@@105)) (= $generated@@528 ($generated ($generated@@495 $generated@@2 ($generated@@316 $generated@@46 $generated@@535 $generated@@534)))))
 :pattern ( $generated@@528 ($generated@@292 $generated@@535))
)))
(assert (= (type $generated@@536) $generated@@170))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) ($generated@@103 $generated@@104 $generated@@105)) (= $generated@@530 ($generated ($generated@@495 $generated@@2 ($generated@@316 $generated@@46 $generated@@537 $generated@@536)))))
 :pattern ( $generated@@530 ($generated@@292 $generated@@537))
)))
(assert (= (type $generated@@538) $generated@@170))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) ($generated@@103 $generated@@104 $generated@@105)) (= $generated@@532 ($generated ($generated@@495 $generated@@2 ($generated@@316 $generated@@46 $generated@@539 $generated@@538)))))
 :pattern ( $generated@@532 ($generated@@292 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@103 $generated@@192 $generated@@4)) (= (type $generated@@541) $generated@@78)) (= (type $generated@@542) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@540 ($generated@@337 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@192) ($generated@@0 ($generated@@108 $generated@@540 $generated@@543))) ($generated@@394 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@108 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@101 $generated@@540 ($generated@@337 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@103 $generated@@192 $generated@@4)) (= (type $generated@@545) $generated@@78)) (= (type $generated@@546) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@544 ($generated@@342 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@192) ($generated@@0 ($generated@@108 $generated@@544 $generated@@547))) ($generated@@394 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@108 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@101 $generated@@544 ($generated@@342 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated ($generated@@108 ($generated@@442 $generated@@549) $generated@@548)) 0))
 :pattern ( (let (($generated@@549 (type $generated@@548)))
($generated@@108 ($generated@@442 $generated@@549) $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@78) (= (type $generated@@551) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@552) $generated@@170)) (and ($generated@@292 $generated@@551) ($generated@@93 $generated@@552 ($generated@@171 $generated@@550)))) (= ($generated@@406 ($generated@@293 $generated@@550 $generated@@405 $generated@@552) ($generated@@407 $generated@@192)) ($generated@@406 ($generated@@293 $generated@@550 $generated@@551 $generated@@552) ($generated@@407 $generated@@192))))
 :pattern ( ($generated@@293 $generated@@550 $generated@@405 $generated@@552) ($generated@@292 $generated@@551))
 :pattern ( ($generated@@293 $generated@@550 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) ($generated@@103 $generated@@192 $generated@@4))
 :pattern ( ($generated@@553 $generated@@555))
)) (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@456 (type $generated@@556))))
(let (($generated@@558 ($generated@@455 (type $generated@@556))))
(= (type ($generated@@554 $generated@@556)) ($generated@@103 $generated@@558 $generated@@557))))
 :pattern ( ($generated@@554 $generated@@556))
))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@454 $generated@@192 $generated@@192)) (= (type $generated@@560) $generated@@192)) (= ($generated@@0 ($generated@@108 ($generated@@553 $generated@@559) $generated@@560))  (and ($generated@@0 ($generated@@108 ($generated@@452 $generated@@559) ($generated@@190 ($generated@@495 $generated@@91 $generated@@560)))) (= ($generated@@108 ($generated@@554 $generated@@559) ($generated@@190 ($generated@@495 $generated@@91 $generated@@560))) ($generated@@191 ($generated@@495 $generated@@91 $generated@@560))))))
 :pattern ( ($generated@@108 ($generated@@553 $generated@@559) $generated@@560))
)))
(assert  (and (forall (($generated@@563 T@U) ) (! (= (type ($generated@@561 $generated@@563)) ($generated@@103 $generated@@192 $generated@@4))
 :pattern ( ($generated@@561 $generated@@563))
)) (forall (($generated@@564 T@U) ) (! (let (($generated@@565 ($generated@@474 (type $generated@@564))))
(let (($generated@@566 ($generated@@473 (type $generated@@564))))
(= (type ($generated@@562 $generated@@564)) ($generated@@103 $generated@@566 $generated@@565))))
 :pattern ( ($generated@@562 $generated@@564))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@472 $generated@@192 $generated@@192)) (= (type $generated@@568) $generated@@192)) (= ($generated@@0 ($generated@@108 ($generated@@561 $generated@@567) $generated@@568))  (and ($generated@@0 ($generated@@108 ($generated@@470 $generated@@567) ($generated@@190 ($generated@@495 $generated@@91 $generated@@568)))) (= ($generated@@108 ($generated@@562 $generated@@567) ($generated@@190 ($generated@@495 $generated@@91 $generated@@568))) ($generated@@191 ($generated@@495 $generated@@91 $generated@@568))))))
 :pattern ( ($generated@@108 ($generated@@561 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
(let (($generated@@572 ($generated@@455 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@454 $generated@@572 $generated@@571)) (= ($generated@@0 ($generated@@108 ($generated@@506 $generated@@569) $generated@@570)) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@572) (and ($generated@@0 ($generated@@108 ($generated@@452 $generated@@569) $generated@@573)) (= $generated@@570 ($generated@@108 ($generated@@554 $generated@@569) $generated@@573))))
 :pattern ( ($generated@@108 ($generated@@452 $generated@@569) $generated@@573))
 :pattern ( ($generated@@108 ($generated@@554 $generated@@569) $generated@@573))
))))))
 :pattern ( ($generated@@108 ($generated@@506 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(let (($generated@@577 ($generated@@473 (type $generated@@574))))
 (=> (= (type $generated@@574) ($generated@@472 $generated@@577 $generated@@576)) (= ($generated@@0 ($generated@@108 ($generated@@517 $generated@@574) $generated@@575)) (exists (($generated@@578 T@U) ) (!  (and (= (type $generated@@578) $generated@@577) (and ($generated@@0 ($generated@@108 ($generated@@470 $generated@@574) $generated@@578)) (= $generated@@575 ($generated@@108 ($generated@@562 $generated@@574) $generated@@578))))
 :pattern ( ($generated@@108 ($generated@@470 $generated@@574) $generated@@578))
 :pattern ( ($generated@@108 ($generated@@562 $generated@@574) $generated@@578))
))))))
 :pattern ( ($generated@@108 ($generated@@517 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (! (= (type ($generated@@579 $generated@@580 $generated@@581)) $generated@@78)
 :pattern ( ($generated@@579 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@454 $generated@@192 $generated@@192)) (= (type $generated@@583) $generated@@78)) (= (type $generated@@584) $generated@@78)) (= (type $generated@@585) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@582 ($generated@@579 $generated@@583 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@192) ($generated@@0 ($generated@@108 ($generated@@452 $generated@@582) $generated@@586))) (and ($generated@@394 ($generated@@108 ($generated@@554 $generated@@582) $generated@@586) $generated@@584 $generated@@585) ($generated@@394 $generated@@586 $generated@@583 $generated@@585)))
 :pattern ( ($generated@@108 ($generated@@554 $generated@@582) $generated@@586))
 :pattern ( ($generated@@108 ($generated@@452 $generated@@582) $generated@@586))
))))
 :pattern ( ($generated@@101 $generated@@582 ($generated@@579 $generated@@583 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (! (= (type ($generated@@587 $generated@@588 $generated@@589)) $generated@@78)
 :pattern ( ($generated@@587 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@472 $generated@@192 $generated@@192)) (= (type $generated@@591) $generated@@78)) (= (type $generated@@592) $generated@@78)) (= (type $generated@@593) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@590 ($generated@@587 $generated@@591 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@192) ($generated@@0 ($generated@@108 ($generated@@470 $generated@@590) $generated@@594))) (and ($generated@@394 ($generated@@108 ($generated@@562 $generated@@590) $generated@@594) $generated@@592 $generated@@593) ($generated@@394 $generated@@594 $generated@@591 $generated@@593)))
 :pattern ( ($generated@@108 ($generated@@562 $generated@@590) $generated@@594))
 :pattern ( ($generated@@108 ($generated@@470 $generated@@590) $generated@@594))
))))
 :pattern ( ($generated@@101 $generated@@590 ($generated@@587 $generated@@591 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@106 (type $generated@@595))))
 (=> (and (and (= (type $generated@@595) ($generated@@103 $generated@@597 $generated@@4)) (= (type $generated@@596) ($generated@@103 $generated@@597 $generated@@4))) ($generated@@406 $generated@@595 $generated@@596)) (= $generated@@595 $generated@@596)))
 :pattern ( ($generated@@406 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@598) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@599) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@600) ($generated@@103 $generated@@104 $generated@@105))) (not (= $generated@@598 $generated@@600))) (and ($generated@@159 $generated@@598 $generated@@599) ($generated@@159 $generated@@599 $generated@@600))) ($generated@@159 $generated@@598 $generated@@600))
 :pattern ( ($generated@@159 $generated@@598 $generated@@599) ($generated@@159 $generated@@599 $generated@@600))
)))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@527 (not (= 0 $generated@@88))) true)))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@529 (not (= 0 $generated@@88))) true)))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@531 (not (= 0 $generated@@88))) true)))
(assert (forall (($generated@@602 T@T) ) (! (= (type ($generated@@601 $generated@@602)) ($generated@@103 $generated@@602 $generated@@4))
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@474 (type $generated@@603))))
(let (($generated@@605 ($generated@@473 (type $generated@@603))))
 (=> (= (type $generated@@603) ($generated@@472 $generated@@605 $generated@@604)) (= (= $generated@@603 ($generated@@471 $generated@@605 $generated@@604)) (= ($generated@@470 $generated@@603) ($generated@@601 $generated@@605))))))
 :pattern ( ($generated@@470 $generated@@603))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@474 (type $generated@@606))))
(let (($generated@@608 ($generated@@473 (type $generated@@606))))
 (=> (= (type $generated@@606) ($generated@@472 $generated@@608 $generated@@607)) (= (= $generated@@606 ($generated@@471 $generated@@608 $generated@@607)) (= ($generated@@517 $generated@@606) ($generated@@601 $generated@@607))))))
 :pattern ( ($generated@@517 $generated@@606))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@474 (type $generated@@609))))
(let (($generated@@611 ($generated@@473 (type $generated@@609))))
 (=> (= (type $generated@@609) ($generated@@472 $generated@@611 $generated@@610)) (= (= $generated@@609 ($generated@@471 $generated@@611 $generated@@610)) (= ($generated@@561 $generated@@609) ($generated@@601 $generated@@192))))))
 :pattern ( ($generated@@561 $generated@@609))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@456 (type $generated@@612))))
(let (($generated@@614 ($generated@@455 (type $generated@@612))))
 (=> (= (type $generated@@612) ($generated@@454 $generated@@614 $generated@@613)) (or (= $generated@@612 ($generated@@453 $generated@@614 $generated@@613)) (exists (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (and (and (= (type $generated@@615) $generated@@192) (= (type $generated@@616) $generated@@192)) ($generated@@0 ($generated@@108 ($generated@@553 $generated@@612) ($generated@@294 ($generated@@284 $generated@@615 $generated@@616)))))
 :no-pattern (type $generated@@615)
 :no-pattern (type $generated@@616)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
 :no-pattern ($generated $generated@@616)
 :no-pattern ($generated@@0 $generated@@616)
))))))
 :pattern ( ($generated@@553 $generated@@612))
)))
(assert (forall (($generated@@617 T@U) ) (! (let (($generated@@618 ($generated@@474 (type $generated@@617))))
(let (($generated@@619 ($generated@@473 (type $generated@@617))))
 (=> (= (type $generated@@617) ($generated@@472 $generated@@619 $generated@@618)) (or (= $generated@@617 ($generated@@471 $generated@@619 $generated@@618)) (exists (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (and (and (= (type $generated@@620) $generated@@192) (= (type $generated@@621) $generated@@192)) ($generated@@0 ($generated@@108 ($generated@@561 $generated@@617) ($generated@@294 ($generated@@284 $generated@@620 $generated@@621)))))
 :no-pattern (type $generated@@620)
 :no-pattern (type $generated@@621)
 :no-pattern ($generated $generated@@620)
 :no-pattern ($generated@@0 $generated@@620)
 :no-pattern ($generated $generated@@621)
 :no-pattern ($generated@@0 $generated@@621)
))))))
 :pattern ( ($generated@@561 $generated@@617))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@192) ($generated@@285 $generated@@622 $generated@@46)) (and (= ($generated@@294 ($generated@@495 $generated@@2 $generated@@622)) $generated@@622) ($generated@@93 ($generated@@495 $generated@@2 $generated@@622) $generated@@46)))
 :pattern ( ($generated@@285 $generated@@622 $generated@@46))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@192) ($generated@@285 $generated@@623 $generated@@47)) (and (= ($generated@@294 ($generated@@495 $generated@@3 $generated@@623)) $generated@@623) ($generated@@93 ($generated@@495 $generated@@3 $generated@@623) $generated@@47)))
 :pattern ( ($generated@@285 $generated@@623 $generated@@47))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@192) ($generated@@285 $generated@@624 $generated@@44)) (and (= ($generated@@294 ($generated@@495 $generated@@4 $generated@@624)) $generated@@624) ($generated@@93 ($generated@@495 $generated@@4 $generated@@624) $generated@@44)))
 :pattern ( ($generated@@285 $generated@@624 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@625) 21))
(assert (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@192) ($generated@@285 $generated@@626 $generated@@45)) (and (= ($generated@@294 ($generated@@495 $generated@@625 $generated@@626)) $generated@@626) ($generated@@93 ($generated@@495 $generated@@625 $generated@@626) $generated@@45)))
 :pattern ( ($generated@@285 $generated@@626 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@628 Int) ) (!  (=> (or ($generated@@627 $generated@@628) (and (not (= 0 $generated@@88)) (and (<= ($generated@@347 0) $generated@@628) (< $generated@@628 15)))) (= ($generated@@391 $generated@@628) $generated@@628))
 :pattern ( ($generated@@391 $generated@@628))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@78) (= ($generated@@285 ($generated@@294 $generated@@629) $generated@@630) ($generated@@93 $generated@@629 $generated@@630)))
 :pattern ( ($generated@@285 ($generated@@294 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (! (let (($generated@@632 ($generated@@106 (type $generated@@631))))
 (=> (= (type $generated@@631) ($generated@@103 $generated@@632 $generated@@2)) (<= 0 ($generated@@441 $generated@@631))))
 :pattern ( ($generated@@441 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 ($generated@@420 (type $generated@@633))))
 (=> (= (type $generated@@633) ($generated@@419 $generated@@634)) (<= 0 ($generated@@418 $generated@@633))))
 :pattern ( ($generated@@418 $generated@@633))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@78)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@78) (= (type $generated@@638) $generated@@78)) (= ($generated@@635 ($generated@@579 $generated@@637 $generated@@638)) $generated@@637))
 :pattern ( ($generated@@579 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@78)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@78) (= (type $generated@@642) $generated@@78)) (= ($generated@@639 ($generated@@579 $generated@@641 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@579 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@78) (= (type $generated@@644) $generated@@78)) (= ($generated@@86 ($generated@@579 $generated@@643 $generated@@644)) $generated@@58))
 :pattern ( ($generated@@579 $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ) (! (= (type ($generated@@645 $generated@@646)) $generated@@78)
 :pattern ( ($generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@78) (= (type $generated@@648) $generated@@78)) (= ($generated@@645 ($generated@@587 $generated@@647 $generated@@648)) $generated@@647))
 :pattern ( ($generated@@587 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ) (! (= (type ($generated@@649 $generated@@650)) $generated@@78)
 :pattern ( ($generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@78) (= (type $generated@@652) $generated@@78)) (= ($generated@@649 ($generated@@587 $generated@@651 $generated@@652)) $generated@@652))
 :pattern ( ($generated@@587 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@78) (= (type $generated@@654) $generated@@78)) (= ($generated@@86 ($generated@@587 $generated@@653 $generated@@654)) $generated@@59))
 :pattern ( ($generated@@587 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@192) (= (type $generated@@656) $generated@@192)) (= ($generated@@213 ($generated@@284 $generated@@655 $generated@@656)) $generated@@64))
 :pattern ( ($generated@@284 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ) (! (= (type ($generated@@657 $generated@@658)) $generated@@78)
 :pattern ( ($generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@78) (= (type $generated@@660) $generated@@78)) (= ($generated@@657 ($generated@@183 $generated@@659 $generated@@660)) $generated@@659))
 :pattern ( ($generated@@183 $generated@@659 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ) (! (= (type ($generated@@661 $generated@@662)) $generated@@78)
 :pattern ( ($generated@@661 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@78) (= (type $generated@@664) $generated@@78)) (= ($generated@@661 ($generated@@183 $generated@@663 $generated@@664)) $generated@@664))
 :pattern ( ($generated@@183 $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@192) (= (type $generated@@666) $generated@@192)) (= ($generated@@190 ($generated@@284 $generated@@665 $generated@@666)) $generated@@665))
 :pattern ( ($generated@@284 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) $generated@@192) (= (type $generated@@668) $generated@@192)) (= ($generated@@191 ($generated@@284 $generated@@667 $generated@@668)) $generated@@668))
 :pattern ( ($generated@@284 $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@91) ($generated@@93 $generated@@669 $generated@@94)) (= ($generated@@204 $generated@@669) true))
 :pattern ( ($generated@@204 $generated@@669))
)))
(assert  (and (forall (($generated@@672 T@U) ) (! (= (type ($generated@@670 $generated@@672)) $generated@@78)
 :pattern ( ($generated@@670 $generated@@672))
)) (forall (($generated@@673 T@U) ($generated@@674 Int) ) (! (let (($generated@@675 ($generated@@420 (type $generated@@673))))
(= (type ($generated@@671 $generated@@673 $generated@@674)) $generated@@675))
 :pattern ( ($generated@@671 $generated@@673 $generated@@674))
))))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@676) ($generated@@419 $generated@@192)) (= (type $generated@@677) $generated@@78)) (= (type $generated@@678) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@676 ($generated@@670 $generated@@677) $generated@@678) (forall (($generated@@679 Int) ) (!  (=> (and (<= 0 $generated@@679) (< $generated@@679 ($generated@@418 $generated@@676))) ($generated@@394 ($generated@@671 $generated@@676 $generated@@679) $generated@@677 $generated@@678))
 :pattern ( ($generated@@671 $generated@@676 $generated@@679))
))))
 :pattern ( ($generated@@101 $generated@@676 ($generated@@670 $generated@@677) $generated@@678))
)))
(assert (forall (($generated@@681 Int) ) (! (= ($generated@@680 ($generated@@102 $generated@@681)) $generated@@681)
 :pattern ( ($generated@@102 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ) (! (= (type ($generated@@682 $generated@@683)) $generated@@78)
 :pattern ( ($generated@@682 $generated@@683))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@78) (= ($generated@@682 ($generated@@337 $generated@@684)) $generated@@684))
 :pattern ( ($generated@@337 $generated@@684))
)))
(assert (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@78) (= ($generated@@86 ($generated@@337 $generated@@685)) $generated@@54))
 :pattern ( ($generated@@337 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ) (! (= (type ($generated@@686 $generated@@687)) $generated@@78)
 :pattern ( ($generated@@686 $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@78) (= ($generated@@686 ($generated@@342 $generated@@688)) $generated@@688))
 :pattern ( ($generated@@342 $generated@@688))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@78) (= ($generated@@86 ($generated@@342 $generated@@689)) $generated@@55))
 :pattern ( ($generated@@342 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ) (! (= (type ($generated@@690 $generated@@691)) $generated@@78)
 :pattern ( ($generated@@690 $generated@@691))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@78) (= ($generated@@690 ($generated@@217 $generated@@692)) $generated@@692))
 :pattern ( ($generated@@217 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@78) (= ($generated@@86 ($generated@@217 $generated@@693)) $generated@@56))
 :pattern ( ($generated@@217 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ) (! (= (type ($generated@@694 $generated@@695)) $generated@@78)
 :pattern ( ($generated@@694 $generated@@695))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@78) (= ($generated@@694 ($generated@@670 $generated@@696)) $generated@@696))
 :pattern ( ($generated@@670 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@78) (= ($generated@@86 ($generated@@670 $generated@@697)) $generated@@57))
 :pattern ( ($generated@@670 $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ) (! (= (type ($generated@@698 $generated@@699)) $generated@@78)
 :pattern ( ($generated@@698 $generated@@699))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@78) (= ($generated@@698 ($generated@@171 $generated@@700)) $generated@@700))
 :pattern ( ($generated@@171 $generated@@700))
)))
(assert (forall (($generated@@702 T@U) ) (! (= (type ($generated@@701 $generated@@702)) $generated@@78)
 :pattern ( ($generated@@701 $generated@@702))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@78) (= ($generated@@701 ($generated@@169 $generated@@703)) $generated@@703))
 :pattern ( ($generated@@169 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ) (! (= (type ($generated@@704 $generated@@705)) $generated@@78)
 :pattern ( ($generated@@704 $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@78) (= ($generated@@704 ($generated@@177 $generated@@706)) $generated@@706))
 :pattern ( ($generated@@177 $generated@@706))
)))
(assert (forall (($generated@@707 T@U) ) (! (let (($generated@@708 (type $generated@@707)))
(= ($generated@@495 $generated@@708 ($generated@@294 $generated@@707)) $generated@@707))
 :pattern ( ($generated@@294 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@709) ($generated@@454 $generated@@192 $generated@@192)) (= (type $generated@@710) $generated@@78)) (= (type $generated@@711) $generated@@78)) (= ($generated@@93 $generated@@709 ($generated@@579 $generated@@710 $generated@@711)) (forall (($generated@@712 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@192) ($generated@@0 ($generated@@108 ($generated@@452 $generated@@709) $generated@@712))) (and ($generated@@285 ($generated@@108 ($generated@@554 $generated@@709) $generated@@712) $generated@@711) ($generated@@285 $generated@@712 $generated@@710)))
 :pattern ( ($generated@@108 ($generated@@554 $generated@@709) $generated@@712))
 :pattern ( ($generated@@108 ($generated@@452 $generated@@709) $generated@@712))
))))
 :pattern ( ($generated@@93 $generated@@709 ($generated@@579 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@713) ($generated@@472 $generated@@192 $generated@@192)) (= (type $generated@@714) $generated@@78)) (= (type $generated@@715) $generated@@78)) (= ($generated@@93 $generated@@713 ($generated@@587 $generated@@714 $generated@@715)) (forall (($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@192) ($generated@@0 ($generated@@108 ($generated@@470 $generated@@713) $generated@@716))) (and ($generated@@285 ($generated@@108 ($generated@@562 $generated@@713) $generated@@716) $generated@@715) ($generated@@285 $generated@@716 $generated@@714)))
 :pattern ( ($generated@@108 ($generated@@562 $generated@@713) $generated@@716))
 :pattern ( ($generated@@108 ($generated@@470 $generated@@713) $generated@@716))
))))
 :pattern ( ($generated@@93 $generated@@713 ($generated@@587 $generated@@714 $generated@@715)))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@91) ($generated@@95 $generated@@717)) (or (or ($generated@@350 $generated@@717) ($generated@@353 $generated@@717)) ($generated@@356 $generated@@717)))
 :pattern ( ($generated@@95 $generated@@717))
)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (= (type $generated@@720) $generated@@192) (= (type $generated@@721) $generated@@192)) (< ($generated@@718 $generated@@720) ($generated@@719 ($generated@@284 $generated@@720 $generated@@721))))
 :pattern ( ($generated@@284 $generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@192) (= (type $generated@@723) $generated@@192)) (< ($generated@@718 $generated@@723) ($generated@@719 ($generated@@284 $generated@@722 $generated@@723))))
 :pattern ( ($generated@@284 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@197 $generated@@46 $generated@@725 $generated@@534) $generated@@724))
 :pattern ( ($generated@@197 $generated@@46 $generated@@725 $generated@@534))
)))
(assert (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@197 $generated@@46 $generated@@727 $generated@@536) $generated@@726))
 :pattern ( ($generated@@197 $generated@@46 $generated@@727 $generated@@536))
)))
(assert (forall (($generated@@729 T@U) ) (!  (=> (= (type $generated@@729) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@197 $generated@@46 $generated@@729 $generated@@538) $generated@@728))
 :pattern ( ($generated@@197 $generated@@46 $generated@@729 $generated@@538))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (and (= (type $generated@@730) $generated@@192) (= (type $generated@@731) $generated@@78)) (= (type $generated@@732) $generated@@78)) ($generated@@285 $generated@@730 ($generated@@579 $generated@@731 $generated@@732))) (and (= ($generated@@294 ($generated@@495 ($generated@@454 $generated@@192 $generated@@192) $generated@@730)) $generated@@730) ($generated@@93 ($generated@@495 ($generated@@454 $generated@@192 $generated@@192) $generated@@730) ($generated@@579 $generated@@731 $generated@@732))))
 :pattern ( ($generated@@285 $generated@@730 ($generated@@579 $generated@@731 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (and (= (type $generated@@733) $generated@@192) (= (type $generated@@734) $generated@@78)) (= (type $generated@@735) $generated@@78)) ($generated@@285 $generated@@733 ($generated@@587 $generated@@734 $generated@@735))) (and (= ($generated@@294 ($generated@@495 ($generated@@472 $generated@@192 $generated@@192) $generated@@733)) $generated@@733) ($generated@@93 ($generated@@495 ($generated@@472 $generated@@192 $generated@@192) $generated@@733) ($generated@@587 $generated@@734 $generated@@735))))
 :pattern ( ($generated@@285 $generated@@733 ($generated@@587 $generated@@734 $generated@@735)))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (and (and (= (type $generated@@736) $generated@@78) (= (type $generated@@737) $generated@@78)) (= (type $generated@@738) $generated@@192)) ($generated@@285 $generated@@738 ($generated@@183 $generated@@736 $generated@@737))) (and (= ($generated@@294 ($generated@@495 $generated@@91 $generated@@738)) $generated@@738) ($generated@@93 ($generated@@495 $generated@@91 $generated@@738) ($generated@@183 $generated@@736 $generated@@737))))
 :pattern ( ($generated@@285 $generated@@738 ($generated@@183 $generated@@736 $generated@@737)))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (and (and (= (type $generated@@739) $generated@@170) (= (type $generated@@740) $generated@@78)) (= (type $generated@@741) ($generated@@103 $generated@@104 $generated@@105))) ($generated@@292 $generated@@741)) (= ($generated@@101 $generated@@739 ($generated@@171 $generated@@740) $generated@@741)  (=> ($generated@@197 $generated@@740 $generated@@741 $generated@@739) (forall (($generated@@742 T@U) ) (!  (=> (= (type $generated@@742) $generated@@104) (=> (and (not (= $generated@@742 $generated@@164)) ($generated@@0 ($generated@@108 ($generated@@293 $generated@@740 $generated@@741 $generated@@739) ($generated@@294 $generated@@742)))) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@741 $generated@@742) $generated@@60))))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@740 $generated@@741 $generated@@739) ($generated@@294 $generated@@742)))
)))))
 :pattern ( ($generated@@101 $generated@@739 ($generated@@171 $generated@@740) $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ) (! (let (($generated@@744 (type $generated@@743)))
 (not ($generated@@0 ($generated@@108 ($generated@@407 $generated@@744) $generated@@743))))
 :pattern ( (let (($generated@@744 (type $generated@@743)))
($generated@@108 ($generated@@407 $generated@@744) $generated@@743)))
)))
(assert (forall (($generated@@745 T@U) ) (! (let (($generated@@746 (type $generated@@745)))
 (not ($generated@@0 ($generated@@108 ($generated@@601 $generated@@746) $generated@@745))))
 :pattern ( (let (($generated@@746 (type $generated@@745)))
($generated@@108 ($generated@@601 $generated@@746) $generated@@745)))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) $generated@@78) (= (type $generated@@748) $generated@@170)) (= ($generated@@93 $generated@@748 ($generated@@177 $generated@@747))  (and ($generated@@93 $generated@@748 ($generated@@169 $generated@@747)) ($generated@@197 $generated@@747 $generated@@405 $generated@@748))))
 :pattern ( ($generated@@93 $generated@@748 ($generated@@177 $generated@@747)))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) $generated@@78) (= (type $generated@@750) $generated@@78)) (and (= ($generated@@86 ($generated@@183 $generated@@749 $generated@@750)) $generated@@65) (= ($generated@@447 ($generated@@183 $generated@@749 $generated@@750)) $generated@@75)))
 :pattern ( ($generated@@183 $generated@@749 $generated@@750))
)))
(assert (forall (($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@751) $generated@@91) ($generated@@93 $generated@@751 $generated@@94)) (or (or ($generated@@350 $generated@@751) ($generated@@353 $generated@@751)) ($generated@@356 $generated@@751)))
 :pattern ( ($generated@@356 $generated@@751) ($generated@@93 $generated@@751 $generated@@94))
 :pattern ( ($generated@@353 $generated@@751) ($generated@@93 $generated@@751 $generated@@94))
 :pattern ( ($generated@@350 $generated@@751) ($generated@@93 $generated@@751 $generated@@94))
)))
(assert (forall (($generated@@752 T@U) ) (!  (=> (= (type $generated@@752) $generated@@91) (= ($generated@@718 ($generated@@294 $generated@@752)) ($generated@@719 $generated@@752)))
 :pattern ( ($generated@@718 ($generated@@294 $generated@@752)))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) $generated@@170) (= (type $generated@@754) $generated@@78)) (= ($generated@@93 $generated@@753 ($generated@@171 $generated@@754)) (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) ($generated@@103 $generated@@104 $generated@@105)) (=> (and ($generated@@292 $generated@@755) ($generated@@197 $generated@@754 $generated@@755 $generated@@753)) ($generated@@285 ($generated@@316 $generated@@754 $generated@@755 $generated@@753) $generated@@754)))
 :pattern ( ($generated@@316 $generated@@754 $generated@@755 $generated@@753))
))))
 :pattern ( ($generated@@93 $generated@@753 ($generated@@171 $generated@@754)))
)))
(assert (forall (($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@756) $generated@@192) ($generated@@285 $generated@@756 ($generated@@102 0))) (and (= ($generated@@294 ($generated@@495 $generated@@2 $generated@@756)) $generated@@756) ($generated@@93 ($generated@@495 ($generated@@103 $generated@@192 $generated@@4) $generated@@756) ($generated@@102 0))))
 :pattern ( ($generated@@285 $generated@@756 ($generated@@102 0)))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (= (type $generated@@757) $generated@@192) (= (type $generated@@758) $generated@@78)) ($generated@@285 $generated@@757 ($generated@@337 $generated@@758))) (and (= ($generated@@294 ($generated@@495 ($generated@@103 $generated@@192 $generated@@4) $generated@@757)) $generated@@757) ($generated@@93 ($generated@@495 ($generated@@103 $generated@@192 $generated@@4) $generated@@757) ($generated@@337 $generated@@758))))
 :pattern ( ($generated@@285 $generated@@757 ($generated@@337 $generated@@758)))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (and (= (type $generated@@759) $generated@@192) (= (type $generated@@760) $generated@@78)) ($generated@@285 $generated@@759 ($generated@@342 $generated@@760))) (and (= ($generated@@294 ($generated@@495 ($generated@@103 $generated@@192 $generated@@4) $generated@@759)) $generated@@759) ($generated@@93 ($generated@@495 ($generated@@103 $generated@@192 $generated@@4) $generated@@759) ($generated@@342 $generated@@760))))
 :pattern ( ($generated@@285 $generated@@759 ($generated@@342 $generated@@760)))
)))
(assert (forall (($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@761) $generated@@192) (= (type $generated@@762) $generated@@78)) ($generated@@285 $generated@@761 ($generated@@217 $generated@@762))) (and (= ($generated@@294 ($generated@@495 ($generated@@103 $generated@@192 $generated@@2) $generated@@761)) $generated@@761) ($generated@@93 ($generated@@495 ($generated@@103 $generated@@192 $generated@@2) $generated@@761) ($generated@@217 $generated@@762))))
 :pattern ( ($generated@@285 $generated@@761 ($generated@@217 $generated@@762)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 T@U) ) (!  (=> (and (and (= (type $generated@@763) $generated@@192) (= (type $generated@@764) $generated@@78)) ($generated@@285 $generated@@763 ($generated@@670 $generated@@764))) (and (= ($generated@@294 ($generated@@495 ($generated@@419 $generated@@192) $generated@@763)) $generated@@763) ($generated@@93 ($generated@@495 ($generated@@419 $generated@@192) $generated@@763) ($generated@@670 $generated@@764))))
 :pattern ( ($generated@@285 $generated@@763 ($generated@@670 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ) (!  (=> (and (and (= (type $generated@@765) $generated@@78) (= (type $generated@@766) $generated@@192)) ($generated@@285 $generated@@766 ($generated@@171 $generated@@765))) (and (= ($generated@@294 ($generated@@495 $generated@@170 $generated@@766)) $generated@@766) ($generated@@93 ($generated@@495 $generated@@170 $generated@@766) ($generated@@171 $generated@@765))))
 :pattern ( ($generated@@285 $generated@@766 ($generated@@171 $generated@@765)))
)))
(assert (forall (($generated@@767 T@U) ($generated@@768 T@U) ) (!  (=> (and (and (= (type $generated@@767) $generated@@78) (= (type $generated@@768) $generated@@192)) ($generated@@285 $generated@@768 ($generated@@169 $generated@@767))) (and (= ($generated@@294 ($generated@@495 $generated@@170 $generated@@768)) $generated@@768) ($generated@@93 ($generated@@495 $generated@@170 $generated@@768) ($generated@@169 $generated@@767))))
 :pattern ( ($generated@@285 $generated@@768 ($generated@@169 $generated@@767)))
)))
(assert (forall (($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (and (= (type $generated@@769) $generated@@78) (= (type $generated@@770) $generated@@192)) ($generated@@285 $generated@@770 ($generated@@177 $generated@@769))) (and (= ($generated@@294 ($generated@@495 $generated@@170 $generated@@770)) $generated@@770) ($generated@@93 ($generated@@495 $generated@@170 $generated@@770) ($generated@@177 $generated@@769))))
 :pattern ( ($generated@@285 $generated@@770 ($generated@@177 $generated@@769)))
)))
(assert (= ($generated@@86 $generated@@163) $generated@@66))
(assert (= ($generated@@447 $generated@@163) $generated@@76))
(assert (= ($generated@@86 $generated@@281) $generated@@67))
(assert (= ($generated@@447 $generated@@281) $generated@@76))
(assert (= ($generated@@86 $generated@@94) $generated@@69))
(assert (= ($generated@@447 $generated@@94) $generated@@77))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@771 T@U) ) (!  (=> (and (= (type $generated@@771) $generated@@91) (or ($generated@@92 $generated@@771) (and (not (= 1 $generated@@88)) ($generated@@93 $generated@@771 $generated@@94)))) (and ($generated@@95 $generated@@771) (= ($generated@@89 $generated@@771) (ite ($generated@@96 $generated@@771 $generated@@97) 5 2))))
 :pattern ( ($generated@@89 $generated@@771))
))))
(assert (forall (($generated@@772 T@U) ($generated@@773 T@U) ($generated@@774 T@U) ) (!  (=> (and (and (= (type $generated@@772) ($generated@@103 $generated@@192 $generated@@2)) (= (type $generated@@773) $generated@@78)) (= (type $generated@@774) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@101 $generated@@772 ($generated@@217 $generated@@773) $generated@@774) (forall (($generated@@775 T@U) ) (!  (=> (and (= (type $generated@@775) $generated@@192) (< 0 ($generated ($generated@@108 $generated@@772 $generated@@775)))) ($generated@@394 $generated@@775 $generated@@773 $generated@@774))
 :pattern ( ($generated@@108 $generated@@772 $generated@@775))
))))
 :pattern ( ($generated@@101 $generated@@772 ($generated@@217 $generated@@773) $generated@@774))
)))
(assert (forall (($generated@@776 T@U) ($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (and (= (type $generated@@776) $generated@@192) (= (type $generated@@777) $generated@@104)) (= (type $generated@@778) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@46 $generated@@778 ($generated@@198 $generated@@777)) $generated@@776)) false))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@46 $generated@@778 ($generated@@198 $generated@@777)) $generated@@776))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ($generated@@781 T@U) ) (!  (=> (and (and (= (type $generated@@779) $generated@@192) (= (type $generated@@780) $generated@@91)) (= (type $generated@@781) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@46 $generated@@781 ($generated@@203 $generated@@780)) $generated@@779)) false))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@46 $generated@@781 ($generated@@203 $generated@@780)) $generated@@779))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 Int) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@782) $generated@@192) (= (type $generated@@784) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@46 $generated@@784 ($generated@@208 $generated@@783)) $generated@@782)) false))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@46 $generated@@784 ($generated@@208 $generated@@783)) $generated@@782))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@785) $generated@@78) (= (type $generated@@786) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@787) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) $generated@@192))) (= (type $generated@@788) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) $generated@@4))) (= (type $generated@@789) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) ($generated@@103 $generated@@192 $generated@@4)))) (= (type $generated@@790) $generated@@192)) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@785 $generated@@786 ($generated@@317 $generated@@787 $generated@@788 $generated@@789)) $generated@@790)) ($generated@@0 ($generated@@108 ($generated@@108 $generated@@789 $generated@@786) $generated@@790))))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@785 $generated@@786 ($generated@@317 $generated@@787 $generated@@788 $generated@@789)) $generated@@790))
)))
(assert (= $generated@@97 ($generated@@90 $generated@@97)))
(assert (= $generated@@215 ($generated@@90 $generated@@215)))
(assert (= $generated@@216 ($generated@@90 $generated@@216)))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@791 Int) ) (!  (=> (or ($generated@@627 ($generated@@347 $generated@@791)) (and (not (= 0 $generated@@88)) (and (<= ($generated@@347 0) $generated@@791) (< $generated@@791 15)))) (= ($generated@@391 ($generated@@347 $generated@@791)) ($generated@@347 $generated@@791)))
 :weight 3
 :pattern ( ($generated@@391 ($generated@@347 $generated@@791)))
))))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@792) $generated@@170) (= (type $generated@@793) $generated@@78)) (= (type $generated@@794) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@292 $generated@@794) ($generated@@101 $generated@@792 ($generated@@171 $generated@@793) $generated@@794))) ($generated@@197 $generated@@793 $generated@@794 $generated@@792)) ($generated@@394 ($generated@@316 $generated@@793 $generated@@794 $generated@@792) $generated@@793 $generated@@794))
 :pattern ( ($generated@@101 $generated@@792 ($generated@@171 $generated@@793) $generated@@794))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ) (!  (=> (and (= (type $generated@@795) $generated@@192) (= (type $generated@@796) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@46 $generated@@796 $generated@@534) $generated@@795)) false))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@46 $generated@@796 $generated@@534) $generated@@795))
)))
(assert (forall (($generated@@797 T@U) ($generated@@798 T@U) ) (!  (=> (and (= (type $generated@@797) $generated@@192) (= (type $generated@@798) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@46 $generated@@798 $generated@@536) $generated@@797)) false))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@46 $generated@@798 $generated@@536) $generated@@797))
)))
(assert (forall (($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (= (type $generated@@799) $generated@@192) (= (type $generated@@800) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@0 ($generated@@108 ($generated@@293 $generated@@46 $generated@@800 $generated@@538) $generated@@799)) false))
 :pattern ( ($generated@@108 ($generated@@293 $generated@@46 $generated@@800 $generated@@538) $generated@@799))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (and (and (= (type $generated@@801) $generated@@91) (= (type $generated@@802) $generated@@78)) (= (type $generated@@803) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@292 $generated@@803) (and ($generated@@182 $generated@@801) (exists (($generated@@804 T@U) ) (!  (and (= (type $generated@@804) $generated@@78) ($generated@@101 $generated@@801 ($generated@@183 $generated@@802 $generated@@804) $generated@@803))
 :pattern ( ($generated@@101 $generated@@801 ($generated@@183 $generated@@802 $generated@@804) $generated@@803))
))))) ($generated@@394 ($generated@@190 $generated@@801) $generated@@802 $generated@@803))
 :pattern ( ($generated@@394 ($generated@@190 $generated@@801) $generated@@802 $generated@@803))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) $generated@@91) (= (type $generated@@806) $generated@@78)) (= (type $generated@@807) ($generated@@103 $generated@@104 $generated@@105))) (and ($generated@@292 $generated@@807) (and ($generated@@182 $generated@@805) (exists (($generated@@808 T@U) ) (!  (and (= (type $generated@@808) $generated@@78) ($generated@@101 $generated@@805 ($generated@@183 $generated@@808 $generated@@806) $generated@@807))
 :pattern ( ($generated@@101 $generated@@805 ($generated@@183 $generated@@808 $generated@@806) $generated@@807))
))))) ($generated@@394 ($generated@@191 $generated@@805) $generated@@806 $generated@@807))
 :pattern ( ($generated@@394 ($generated@@191 $generated@@805) $generated@@806 $generated@@807))
)))
(assert (forall (($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ) (!  (=> (and (and (and (= (type $generated@@809) $generated@@170) (= (type $generated@@810) $generated@@78)) (= (type $generated@@811) $generated@@78)) (and ($generated@@93 $generated@@809 ($generated@@171 $generated@@810)) (forall (($generated@@812 T@U) ) (!  (=> (and (= (type $generated@@812) $generated@@192) ($generated@@285 $generated@@812 $generated@@810)) ($generated@@285 $generated@@812 $generated@@811))
 :pattern ( ($generated@@285 $generated@@812 $generated@@810))
 :pattern ( ($generated@@285 $generated@@812 $generated@@811))
)))) ($generated@@93 $generated@@809 ($generated@@171 $generated@@811)))
 :pattern ( ($generated@@93 $generated@@809 ($generated@@171 $generated@@810)) ($generated@@93 $generated@@809 ($generated@@171 $generated@@811)))
)))
(assert (forall (($generated@@813 T@U) ($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@192) (= (type $generated@@814) $generated@@192)) (= ($generated@@284 ($generated@@90 $generated@@813) ($generated@@90 $generated@@814)) ($generated@@90 ($generated@@284 $generated@@813 $generated@@814))))
 :pattern ( ($generated@@284 ($generated@@90 $generated@@813) ($generated@@90 $generated@@814)))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ) (!  (=> (and (= (type $generated@@815) $generated@@104) (= (type $generated@@816) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@329 $generated@@815) ($generated ($generated@@495 $generated@@2 ($generated@@316 $generated@@46 $generated@@816 ($generated@@198 $generated@@815))))))
 :pattern ( ($generated@@329 $generated@@815) ($generated@@292 $generated@@816))
)))
(assert (forall (($generated@@817 T@U) ($generated@@818 T@U) ) (!  (=> (and (= (type $generated@@817) $generated@@91) (= (type $generated@@818) ($generated@@103 $generated@@104 $generated@@105))) (= ($generated@@89 $generated@@817) ($generated ($generated@@495 $generated@@2 ($generated@@316 $generated@@46 $generated@@818 ($generated@@203 $generated@@817))))))
 :pattern ( ($generated@@89 $generated@@817) ($generated@@292 $generated@@818))
)))
(assert (forall (($generated@@819 Int) ($generated@@820 T@U) ) (!  (=> (= (type $generated@@820) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@391 $generated@@819) ($generated ($generated@@495 $generated@@2 ($generated@@316 $generated@@46 $generated@@820 ($generated@@208 $generated@@819))))))
 :pattern ( ($generated@@391 $generated@@819) ($generated@@292 $generated@@820))
)))
(assert (forall (($generated@@821 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@347 $generated@@821))) ($generated@@90 ($generated@@294 ($generated@@8 $generated@@821))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@347 $generated@@821))))
)))
(assert (forall (($generated@@822 T@U) ) (! (= ($generated@@294 ($generated@@90 $generated@@822)) ($generated@@90 ($generated@@294 $generated@@822)))
 :pattern ( ($generated@@294 ($generated@@90 $generated@@822)))
)))
(assert (forall (($generated@@823 T@U) ) (!  (=> (= (type $generated@@823) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@316 $generated@@46 $generated@@823 $generated@@534) ($generated@@294 ($generated@@8 $generated@@528))))
 :pattern ( ($generated@@316 $generated@@46 $generated@@823 $generated@@534))
)))
(assert (forall (($generated@@824 T@U) ) (!  (=> (= (type $generated@@824) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@316 $generated@@46 $generated@@824 $generated@@536) ($generated@@294 ($generated@@8 $generated@@530))))
 :pattern ( ($generated@@316 $generated@@46 $generated@@824 $generated@@536))
)))
(assert (forall (($generated@@825 T@U) ) (!  (=> (= (type $generated@@825) ($generated@@103 $generated@@104 $generated@@105)) (= ($generated@@316 $generated@@46 $generated@@825 $generated@@538) ($generated@@294 ($generated@@8 $generated@@532))))
 :pattern ( ($generated@@316 $generated@@46 $generated@@825 $generated@@538))
)))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@826 Int) ) (!  (=> (or ($generated@@627 $generated@@826) (and (not (= 0 $generated@@88)) (and (<= ($generated@@347 0) $generated@@826) (< $generated@@826 15)))) true)
 :pattern ( ($generated@@391 $generated@@826))
))))
(assert (forall (($generated@@827 T@U) ) (! (let (($generated@@828 ($generated@@420 (type $generated@@827))))
 (=> (and (= (type $generated@@827) ($generated@@419 $generated@@828)) (= ($generated@@418 $generated@@827) 0)) (= $generated@@827 ($generated@@417 $generated@@828))))
 :pattern ( ($generated@@418 $generated@@827))
)))
(assert (forall (($generated@@829 T@U) ($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ($generated@@833 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@829) $generated@@78) (= (type $generated@@830) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@831) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) $generated@@192))) (= (type $generated@@832) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) $generated@@4))) (= (type $generated@@833) ($generated@@103 ($generated@@103 $generated@@104 $generated@@105) ($generated@@103 $generated@@192 $generated@@4)))) ($generated@@0 ($generated@@108 $generated@@832 $generated@@830))) ($generated@@197 $generated@@829 $generated@@830 ($generated@@317 $generated@@831 $generated@@832 $generated@@833)))
 :pattern ( ($generated@@197 $generated@@829 $generated@@830 ($generated@@317 $generated@@831 $generated@@832 $generated@@833)))
)))
(assert (forall (($generated@@834 T@U) ($generated@@835 T@U) ($generated@@836 T@U) ) (! (let (($generated@@837 (type $generated@@835)))
 (=> (and (and (= (type $generated@@834) ($generated@@103 $generated@@837 $generated@@2)) (= (type $generated@@836) $generated@@2)) (<= 0 ($generated $generated@@836))) (= ($generated@@441 ($generated@@109 $generated@@834 $generated@@835 $generated@@836)) (+ (- ($generated@@441 $generated@@834) ($generated ($generated@@108 $generated@@834 $generated@@835))) ($generated $generated@@836)))))
 :pattern ( ($generated@@441 ($generated@@109 $generated@@834 $generated@@835 $generated@@836)))
)))
(assert (= $generated@@724 true))
(assert (= $generated@@726 true))
(assert (= $generated@@728 true))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ) (!  (=> (and (= (type $generated@@838) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@839) $generated@@2)) ($generated@@101 $generated@@839 $generated@@46 $generated@@838))
 :pattern ( ($generated@@101 $generated@@839 $generated@@46 $generated@@838))
)))
(assert (forall (($generated@@840 T@U) ($generated@@841 T@U) ) (!  (=> (and (= (type $generated@@840) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@841) $generated@@3)) ($generated@@101 $generated@@841 $generated@@47 $generated@@840))
 :pattern ( ($generated@@101 $generated@@841 $generated@@47 $generated@@840))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (= (type $generated@@842) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@843) $generated@@4)) ($generated@@101 $generated@@843 $generated@@44 $generated@@842))
 :pattern ( ($generated@@101 $generated@@843 $generated@@44 $generated@@842))
)))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ) (!  (=> (and (= (type $generated@@844) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@845) $generated@@625)) ($generated@@101 $generated@@845 $generated@@45 $generated@@844))
 :pattern ( ($generated@@101 $generated@@845 $generated@@45 $generated@@844))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (= (type $generated@@846) ($generated@@103 $generated@@104 $generated@@105)) (= (type $generated@@847) $generated@@192)) ($generated@@101 $generated@@847 $generated@@48 $generated@@846))
 :pattern ( ($generated@@101 $generated@@847 $generated@@48 $generated@@846))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ) (!  (=> (and (= (type $generated@@848) ($generated@@419 $generated@@192)) (= (type $generated@@849) $generated@@78)) (= ($generated@@93 $generated@@848 ($generated@@670 $generated@@849)) (forall (($generated@@850 Int) ) (!  (=> (and (<= 0 $generated@@850) (< $generated@@850 ($generated@@418 $generated@@848))) ($generated@@285 ($generated@@671 $generated@@848 $generated@@850) $generated@@849))
 :pattern ( ($generated@@671 $generated@@848 $generated@@850))
))))
 :pattern ( ($generated@@93 $generated@@848 ($generated@@670 $generated@@849)))
)))
(assert (forall (($generated@@851 T@U) ($generated@@852 T@U) ) (!  (=> (and (= (type $generated@@851) $generated@@78) (= (type $generated@@852) $generated@@170)) (= ($generated@@93 $generated@@852 ($generated@@169 $generated@@851))  (and ($generated@@93 $generated@@852 ($generated@@171 $generated@@851)) ($generated@@406 ($generated@@293 $generated@@851 $generated@@405 $generated@@852) ($generated@@407 $generated@@192)))))
 :pattern ( ($generated@@93 $generated@@852 ($generated@@169 $generated@@851)))
)))
(assert (forall (($generated@@853 T@U) ) (!  (=> (= (type $generated@@853) $generated@@104) (=> (and (not (= $generated@@853 $generated@@164)) ($generated@@93 $generated@@853 $generated@@281)) (= ($generated@@199 $generated@@853) true)))
 :pattern ( ($generated@@199 $generated@@853))
)))
(assert (forall (($generated@@855 T@U) ($generated@@856 Int) ) (!  (=> (= (type $generated@@855) ($generated@@419 $generated@@192)) (=> (and (<= 0 $generated@@856) (< $generated@@856 ($generated@@418 $generated@@855))) (< ($generated@@719 ($generated@@495 $generated@@91 ($generated@@671 $generated@@855 $generated@@856))) ($generated@@854 $generated@@855))))
 :pattern ( ($generated@@719 ($generated@@495 $generated@@91 ($generated@@671 $generated@@855 $generated@@856))))
)))
(assert (forall (($generated@@857 T@U) ($generated@@858 T@U) ($generated@@859 T@U) ) (!  (=> (and (and (and (= (type $generated@@857) ($generated@@454 $generated@@192 $generated@@192)) (= (type $generated@@858) $generated@@78)) (= (type $generated@@859) $generated@@78)) ($generated@@93 $generated@@857 ($generated@@579 $generated@@858 $generated@@859))) (and (and ($generated@@93 ($generated@@452 $generated@@857) ($generated@@337 $generated@@858)) ($generated@@93 ($generated@@506 $generated@@857) ($generated@@337 $generated@@859))) ($generated@@93 ($generated@@553 $generated@@857) ($generated@@337 ($generated@@183 $generated@@858 $generated@@859)))))
 :pattern ( ($generated@@93 $generated@@857 ($generated@@579 $generated@@858 $generated@@859)))
)))
(assert (forall (($generated@@860 T@U) ($generated@@861 T@U) ($generated@@862 T@U) ) (!  (=> (and (and (and (= (type $generated@@860) ($generated@@472 $generated@@192 $generated@@192)) (= (type $generated@@861) $generated@@78)) (= (type $generated@@862) $generated@@78)) ($generated@@93 $generated@@860 ($generated@@587 $generated@@861 $generated@@862))) (and (and ($generated@@93 ($generated@@470 $generated@@860) ($generated@@342 $generated@@861)) ($generated@@93 ($generated@@517 $generated@@860) ($generated@@342 $generated@@862))) ($generated@@93 ($generated@@561 $generated@@860) ($generated@@342 ($generated@@183 $generated@@861 $generated@@862)))))
 :pattern ( ($generated@@93 $generated@@860 ($generated@@587 $generated@@861 $generated@@862)))
)))
(assert (forall (($generated@@863 T@U) ) (!  (=> (= (type $generated@@863) $generated@@2) ($generated@@93 $generated@@863 $generated@@46))
 :pattern ( ($generated@@93 $generated@@863 $generated@@46))
)))
(assert (forall (($generated@@864 T@U) ) (!  (=> (= (type $generated@@864) $generated@@3) ($generated@@93 $generated@@864 $generated@@47))
 :pattern ( ($generated@@93 $generated@@864 $generated@@47))
)))
(assert (forall (($generated@@865 T@U) ) (!  (=> (= (type $generated@@865) $generated@@4) ($generated@@93 $generated@@865 $generated@@44))
 :pattern ( ($generated@@93 $generated@@865 $generated@@44))
)))
(assert (forall (($generated@@866 T@U) ) (!  (=> (= (type $generated@@866) $generated@@625) ($generated@@93 $generated@@866 $generated@@45))
 :pattern ( ($generated@@93 $generated@@866 $generated@@45))
)))
(assert (forall (($generated@@867 T@U) ) (!  (=> (= (type $generated@@867) $generated@@192) ($generated@@93 $generated@@867 $generated@@48))
 :pattern ( ($generated@@93 $generated@@867 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@868 () T@U)
(declare-fun $generated@@869 () T@U)
(declare-fun $generated@@870 () Int)
(declare-fun $generated@@871 () T@U)
(declare-fun $generated@@872 () T@U)
(declare-fun $generated@@873 (T@U) Bool)
(declare-fun $generated@@874 () T@U)
(declare-fun $generated@@875 () T@U)
(declare-fun $generated@@876 () Int)
(declare-fun $generated@@877 () Int)
(declare-fun $generated@@878 () T@U)
(declare-fun $generated@@879 () T@U)
(declare-fun $generated@@880 () T@U)
(declare-fun $generated@@881 () T@U)
(declare-fun $generated@@882 () T@U)
(declare-fun $generated@@883 () T@U)
(declare-fun $generated@@884 () T@U)
(declare-fun $generated@@885 () T@U)
(declare-fun $generated@@886 () T@U)
(declare-fun $generated@@887 () T@U)
(declare-fun $generated@@888 () T@U)
(declare-fun $generated@@889 () T@U)
(declare-fun $generated@@890 () T@U)
(declare-fun $generated@@891 () T@U)
(declare-fun $generated@@892 () T@U)
(declare-fun $generated@@893 () T@U)
(declare-fun $generated@@894 () T@U)
(declare-fun $generated@@895 () T@U)
(declare-fun $generated@@896 () Int)
(declare-fun $generated@@897 () T@U)
(declare-fun $generated@@898 () T@U)
(declare-fun $generated@@899 () T@U)
(declare-fun $generated@@900 () T@U)
(declare-fun $generated@@901 () Int)
(declare-fun $generated@@902 () Bool)
(declare-fun $generated@@903 () T@U)
(declare-fun $generated@@904 () T@U)
(declare-fun $generated@@905 () Int)
(declare-fun $generated@@906 () T@U)
(declare-fun $generated@@907 () T@U)
(declare-fun $generated@@908 () T@U)
(declare-fun $generated@@909 () T@U)
(declare-fun $generated@@910 () T@U)
(declare-fun $generated@@911 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@868) ($generated@@227 $generated@@104 $generated@@4)) (= (type $generated@@869) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@871) $generated@@104)) (= (type $generated@@872) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@874) $generated@@104)) (= (type $generated@@875) $generated@@91)) (= (type $generated@@878) $generated@@170)) (= (type $generated@@879) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@880) $generated@@170)) (= (type $generated@@881) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@882) $generated@@170)) (= (type $generated@@883) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@884) $generated@@170)) (= (type $generated@@885) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@886) $generated@@170)) (= (type $generated@@887) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@888) $generated@@170)) (= (type $generated@@889) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@890) $generated@@170)) (= (type $generated@@891) $generated@@170)) (= (type $generated@@892) $generated@@170)) (= (type $generated@@893) $generated@@170)) (= (type $generated@@894) $generated@@170)) (= (type $generated@@895) $generated@@170)) (= (type $generated@@897) $generated@@104)) (= (type $generated@@898) ($generated@@103 $generated@@104 $generated@@105))) (= (type $generated@@899) $generated@@104)) (= (type $generated@@900) $generated@@91)) (= (type $generated@@903) $generated@@104)) (= (type $generated@@904) $generated@@91)) (= (type $generated@@906) $generated@@170)) (= (type $generated@@907) $generated@@170)) (= (type $generated@@908) $generated@@170)) (= (type $generated@@909) $generated@@170)) (= (type $generated@@910) $generated@@170)) (= (type $generated@@911) $generated@@170)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@912  (=> (and (= $generated@@868 ($generated@@226 $generated@@164 $generated@@869 $generated@@60 false)) (= $generated@@870 ($generated@@347 5))) (=> (and (and (not (= $generated@@871 $generated@@164)) (and ($generated@@93 $generated@@871 $generated@@281) ($generated@@101 $generated@@871 $generated@@281 $generated@@869))) (and ($generated@@292 $generated@@872) ($generated@@873 $generated@@872))) (=> (and (and (and (not (= $generated@@874 $generated@@164)) (and ($generated@@93 $generated@@874 $generated@@281) ($generated@@101 $generated@@874 $generated@@281 $generated@@872))) (not ($generated@@0 ($generated@@110 ($generated@@108 $generated@@869 $generated@@874) $generated@@60)))) (and (and (forall (($generated@@913 T@U) ) (!  (=> (= (type $generated@@913) $generated@@104) (=> (and (not (= $generated@@913 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@869 $generated@@913) $generated@@60))) (= ($generated@@108 $generated@@872 $generated@@913) ($generated@@108 $generated@@869 $generated@@913))))
 :pattern ( ($generated@@108 $generated@@872 $generated@@913))
)) ($generated@@159 $generated@@869 $generated@@872)) (and (= $generated@@875 ($generated@@90 $generated@@97)) (= $generated@@876 ($generated@@347 5))))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (and (<= ($generated@@347 0) $generated@@876) (< $generated@@876 15))) (=> (and (<= ($generated@@347 0) $generated@@876) (< $generated@@876 15)) (=> (= $generated@@877 ($generated@@347 5)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (not (= 1 $generated@@88))) (=> (not (= 1 $generated@@88)) (and (=> (= (ControlFlow 0 2) (- 0 19)) true) (and (=> (= (ControlFlow 0 2) (- 0 18)) (not (= $generated@@874 $generated@@164))) (=> (not (= $generated@@874 $generated@@164)) (=> (= $generated@@878 ($generated@@198 $generated@@874)) (=> (and (and ($generated@@292 $generated@@879) ($generated@@873 $generated@@879)) (and (forall (($generated@@914 T@U) ) (!  (=> (= (type $generated@@914) $generated@@104) (=> (and (not (= $generated@@914 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@872 $generated@@914) $generated@@60))) (= ($generated@@108 $generated@@879 $generated@@914) ($generated@@108 $generated@@872 $generated@@914))))
 :pattern ( ($generated@@108 $generated@@879 $generated@@914))
)) ($generated@@159 $generated@@872 $generated@@879))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (and (=> (= (ControlFlow 0 2) (- 0 16)) true) (=> (= $generated@@880 $generated@@534) (=> (and (and ($generated@@292 $generated@@881) ($generated@@873 $generated@@881)) (and (forall (($generated@@915 T@U) ) (!  (=> (= (type $generated@@915) $generated@@104) (=> (and (not (= $generated@@915 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@879 $generated@@915) $generated@@60))) (= ($generated@@108 $generated@@881 $generated@@915) ($generated@@108 $generated@@879 $generated@@915))))
 :pattern ( ($generated@@108 $generated@@881 $generated@@915))
)) ($generated@@159 $generated@@879 $generated@@881))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (not (= 1 $generated@@88))) (=> (not (= 1 $generated@@88)) (=> (= $generated@@882 ($generated@@203 $generated@@875)) (=> (and (and ($generated@@292 $generated@@883) ($generated@@873 $generated@@883)) (and (forall (($generated@@916 T@U) ) (!  (=> (= (type $generated@@916) $generated@@104) (=> (and (not (= $generated@@916 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@881 $generated@@916) $generated@@60))) (= ($generated@@108 $generated@@883 $generated@@916) ($generated@@108 $generated@@881 $generated@@916))))
 :pattern ( ($generated@@108 $generated@@883 $generated@@916))
)) ($generated@@159 $generated@@881 $generated@@883))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (=> (= $generated@@884 $generated@@536) (=> (and (and ($generated@@292 $generated@@885) ($generated@@873 $generated@@885)) (and (forall (($generated@@917 T@U) ) (!  (=> (= (type $generated@@917) $generated@@104) (=> (and (not (= $generated@@917 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@883 $generated@@917) $generated@@60))) (= ($generated@@108 $generated@@885 $generated@@917) ($generated@@108 $generated@@883 $generated@@917))))
 :pattern ( ($generated@@108 $generated@@885 $generated@@917))
)) ($generated@@159 $generated@@883 $generated@@885))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (=> (= $generated@@886 ($generated@@208 $generated@@877)) (=> (and (and ($generated@@292 $generated@@887) ($generated@@873 $generated@@887)) (and (forall (($generated@@918 T@U) ) (!  (=> (= (type $generated@@918) $generated@@104) (=> (and (not (= $generated@@918 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@885 $generated@@918) $generated@@60))) (= ($generated@@108 $generated@@887 $generated@@918) ($generated@@108 $generated@@885 $generated@@918))))
 :pattern ( ($generated@@108 $generated@@887 $generated@@918))
)) ($generated@@159 $generated@@885 $generated@@887))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (=> (= $generated@@888 $generated@@538) (=> (and (and ($generated@@292 $generated@@889) ($generated@@873 $generated@@889)) (and (forall (($generated@@919 T@U) ) (!  (=> (= (type $generated@@919) $generated@@104) (=> (and (not (= $generated@@919 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@887 $generated@@919) $generated@@60))) (= ($generated@@108 $generated@@889 $generated@@919) ($generated@@108 $generated@@887 $generated@@919))))
 :pattern ( ($generated@@108 $generated@@889 $generated@@919))
)) ($generated@@159 $generated@@887 $generated@@889))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= 1 $generated@@88))) (=> (not (= 1 $generated@@88)) (and (=> (= (ControlFlow 0 2) (- 0 10)) true) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@874 $generated@@164))) (=> (not (= $generated@@874 $generated@@164)) (=> (= $generated@@890 ($generated@@198 $generated@@874)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (=> (= $generated@@891 $generated@@534) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= 1 $generated@@88))) (=> (not (= 1 $generated@@88)) (=> (= $generated@@892 ($generated@@203 $generated@@875)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (=> (= $generated@@893 $generated@@536) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (=> (= $generated@@894 ($generated@@208 $generated@@877)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= 0 $generated@@88))) (=> (not (= 0 $generated@@88)) (=> (and (= $generated@@895 $generated@@538) (= $generated@@896 ($generated@@347 2))) (=> (and (and (not (= $generated@@897 $generated@@164)) (and ($generated@@93 $generated@@897 $generated@@281) ($generated@@101 $generated@@897 $generated@@281 $generated@@869))) (and ($generated@@292 $generated@@898) ($generated@@873 $generated@@898))) (=> (and (and (and (not (= $generated@@899 $generated@@164)) (and ($generated@@93 $generated@@899 $generated@@281) ($generated@@101 $generated@@899 $generated@@281 $generated@@898))) (and (not ($generated@@0 ($generated@@110 ($generated@@108 $generated@@889 $generated@@899) $generated@@60))) (forall (($generated@@920 T@U) ) (!  (=> (= (type $generated@@920) $generated@@104) (=> (and (not (= $generated@@920 $generated@@164)) ($generated@@0 ($generated@@110 ($generated@@108 $generated@@889 $generated@@920) $generated@@60))) (= ($generated@@108 $generated@@898 $generated@@920) ($generated@@108 $generated@@889 $generated@@920))))
 :pattern ( ($generated@@108 $generated@@898 $generated@@920))
)))) (and (and ($generated@@159 $generated@@889 $generated@@898) (= $generated@@900 ($generated@@90 $generated@@216))) (and (= $generated@@901 ($generated@@347 2)) (= (ControlFlow 0 2) (- 0 1))))) (and (<= ($generated@@347 0) $generated@@901) (< $generated@@901 15))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@921  (=> (and (and (and ($generated@@292 $generated@@869) ($generated@@873 $generated@@869)) (and (=> $generated@@902 (and ($generated@@93 $generated@@903 $generated@@281) ($generated@@101 $generated@@903 $generated@@281 $generated@@869))) true)) (and (and ($generated@@93 $generated@@904 $generated@@94) ($generated@@101 $generated@@904 $generated@@94 $generated@@869)) true)) (=> (and (and (and (and (and (<= ($generated@@347 0) $generated@@905) (< $generated@@905 15)) true) (and (and ($generated@@93 $generated@@906 ($generated@@177 $generated@@46)) ($generated@@101 $generated@@906 ($generated@@177 $generated@@46) $generated@@869)) true)) (and (and (and ($generated@@93 $generated@@907 ($generated@@177 $generated@@46)) ($generated@@101 $generated@@907 ($generated@@177 $generated@@46) $generated@@869)) true) (and (and ($generated@@93 $generated@@908 ($generated@@177 $generated@@46)) ($generated@@101 $generated@@908 ($generated@@177 $generated@@46) $generated@@869)) true))) (and (and (and (and ($generated@@93 $generated@@909 ($generated@@177 $generated@@46)) ($generated@@101 $generated@@909 ($generated@@177 $generated@@46) $generated@@869)) true) (and (and ($generated@@93 $generated@@910 ($generated@@177 $generated@@46)) ($generated@@101 $generated@@910 ($generated@@177 $generated@@46) $generated@@869)) true)) (and (and (and ($generated@@93 $generated@@911 ($generated@@177 $generated@@46)) ($generated@@101 $generated@@911 ($generated@@177 $generated@@46) $generated@@869)) true) (and (= 2 $generated@@88) (= (ControlFlow 0 22) 2))))) $generated@@912))))
$generated@@921)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U Int) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@222 (T@T T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U T@U) T@U)
(declare-fun $generated@@362 (T@U Int) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U Int) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@574 (T@T) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@584 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@603 (T@U T@U) Bool)
(declare-fun $generated@@647 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert  (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ) (! (= (type ($generated@@220 $generated@@223 $generated@@224 $generated@@225)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@220 $generated@@223 $generated@@224 $generated@@225))
)) (forall (($generated@@226 T@T) ($generated@@227 T@U) ) (! (= (type ($generated@@222 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@222 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Int) ($generated@@231 T@U) ) (!  (=> (and (and (= (type $generated@@228) $generated@@66) (= (type $generated@@229) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@231) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@220 $generated@@228 $generated@@229 $generated@@230) $generated@@231))  (and ($generated@@221 $generated@@231 $generated@@228) (and ($generated@@0 ($generated@@83 $generated@@229 $generated@@231)) (< ($generated ($generated@@222 $generated@@2 $generated@@231)) $generated@@230)))))
 :pattern ( ($generated@@83 ($generated@@220 $generated@@228 $generated@@229 $generated@@230) $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@145)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@66) (= (type $generated@@236) $generated@@66)) (= (type $generated@@237) $generated@@154)) (= (type $generated@@238) $generated@@154)) (= ($generated@@141 ($generated@@232 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236))  (and ($generated@@221 $generated@@237 $generated@@235) ($generated@@221 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@141 ($generated@@232 $generated@@237 $generated@@238) ($generated@@144 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) (= (type $generated@@240) $generated@@145)) (= ($generated@@151 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@151 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@66)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@244) $generated@@66)) (= ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@154) ($generated@@0 ($generated@@83 $generated@@243 $generated@@245))) ($generated@@221 $generated@@245 $generated@@244))
 :pattern ( ($generated@@83 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@141 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@154) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@221 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@141 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert  (and (and (and (forall (($generated@@261 T@T) ) (= ($generated@@1 ($generated@@259 $generated@@261)) 17)) (forall (($generated@@262 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@262)) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@257 $generated@@263 $generated@@264)) ($generated@@259 $generated@@265)))
 :pattern ( ($generated@@257 $generated@@263 $generated@@264))
))) (forall (($generated@@266 T@U) ) (! (= (type ($generated@@258 $generated@@266)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) ($generated@@259 $generated@@154)) (= (type $generated@@268) $generated@@154)) (= (type $generated@@269) $generated@@66)) (and ($generated@@141 $generated@@267 ($generated@@258 $generated@@269)) ($generated@@221 $generated@@268 $generated@@269))) ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
 :pattern ( ($generated@@141 ($generated@@257 $generated@@267 $generated@@268) ($generated@@258 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) $generated@@66)) (= (type $generated@@274) $generated@@154)) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@270 $generated@@276)) (= ($generated@@76 ($generated@@232 $generated@@274 $generated@@275) ($generated@@144 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@76 ($generated@@232 $generated@@274 $generated@@275) ($generated@@144 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@145) (= ($generated@@143 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@143 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@145) ($generated@@143 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@154) (= (type $generated@@282) $generated@@154)) (= $generated@@280 ($generated@@232 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@143 $generated@@280))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@283 $generated@@285)) ($generated@@259 $generated@@285))
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) 0)
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@141 $generated@@287 $generated@@138) (<= ($generated@@251 0) ($generated $generated@@287))))
 :pattern ( ($generated@@141 $generated@@287 $generated@@138))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
 (=> (= (type $generated@@288) ($generated@@259 $generated@@290)) (= ($generated@@284 ($generated@@257 $generated@@288 $generated@@289)) (+ 1 ($generated@@284 $generated@@288)))))
 :pattern ( ($generated@@257 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@154)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@66) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@76 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@298) $generated@@154)) (= (type $generated@@299) $generated@@66)) ($generated@@134 $generated@@296 $generated@@297)) ($generated@@271 $generated@@298 $generated@@299 $generated@@296)) ($generated@@271 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@134 $generated@@296 $generated@@297) ($generated@@271 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@301) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@303) $generated@@66)) ($generated@@134 $generated@@300 $generated@@301)) ($generated@@76 $generated@@302 $generated@@303 $generated@@300)) ($generated@@76 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@134 $generated@@300 $generated@@301) ($generated@@76 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@78 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@81 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@78 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@83 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@78 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@83 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@83 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@81 (type $generated@@347))))
 (=> (and (= (type $generated@@347) ($generated@@78 $generated@@349 $generated@@4)) (= (type $generated@@348) ($generated@@78 $generated@@349 $generated@@4))) (= ($generated@@346 $generated@@347 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (= ($generated@@0 ($generated@@83 $generated@@347 $generated@@350)) ($generated@@0 ($generated@@83 $generated@@348 $generated@@350))))
 :pattern ( ($generated@@83 $generated@@347 $generated@@350))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@260 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) ($generated@@259 $generated@@354)))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@260 (type $generated@@355))))
 (=> (and (= (type $generated@@355) ($generated@@259 $generated@@357)) (= (type $generated@@356) ($generated@@259 $generated@@357))) (= ($generated@@284 ($generated@@351 $generated@@355 $generated@@356)) (+ ($generated@@284 $generated@@355) ($generated@@284 $generated@@356)))))
 :pattern ( ($generated@@284 ($generated@@351 $generated@@355 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@81 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@78 $generated@@359 $generated@@2)) (= ($generated@@160 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@83 $generated@@358 $generated@@360))) (<= ($generated ($generated@@83 $generated@@358 $generated@@360)) ($generated@@304 $generated@@358))))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@160 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@154) ($generated@@221 $generated@@361 $generated@@138)) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@361)) $generated@@361) ($generated@@141 ($generated@@222 $generated@@2 $generated@@361) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@361 $generated@@138))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (! (let (($generated@@365 ($generated@@260 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363 $generated@@364)) $generated@@365))
 :pattern ( ($generated@@362 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 Int) ($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
 (=> (= (type $generated@@366) ($generated@@259 $generated@@369)) (and (=> (= $generated@@367 ($generated@@284 $generated@@366)) (= ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367) $generated@@368)) (=> (not (= $generated@@367 ($generated@@284 $generated@@366))) (= ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367) ($generated@@362 $generated@@366 $generated@@367))))))
 :pattern ( ($generated@@362 ($generated@@257 $generated@@366 $generated@@368) $generated@@367))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@314 (type $generated@@370))))
(let (($generated@@372 ($generated@@313 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@312 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@311 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@310 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@314 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@78 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@314 (type $generated@@377))))
(let (($generated@@379 ($generated@@313 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@312 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@311 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@83 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@332 (type $generated@@381))))
(let (($generated@@383 ($generated@@331 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@330 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@329 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@328 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@332 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@78 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@332 (type $generated@@388))))
(let (($generated@@390 ($generated@@331 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@330 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@329 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@83 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@393) $generated@@66)) (= ($generated@@141 $generated@@392 ($generated@@159 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@392 $generated@@394)))) ($generated@@221 $generated@@394 $generated@@393))
 :pattern ( ($generated@@83 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@141 $generated@@392 ($generated@@159 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@395 ($generated@@241 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 $generated@@395 $generated@@398))) ($generated@@271 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@83 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@395 ($generated@@241 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@400) $generated@@66)) (= (type $generated@@401) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@399 ($generated@@246 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@83 $generated@@399 $generated@@402))) ($generated@@271 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@83 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@76 $generated@@399 ($generated@@246 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@83 ($generated@@305 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@83 ($generated@@305 $generated@@404) $generated@@403)))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@314 (type $generated@@408))))
(let (($generated@@410 ($generated@@313 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@78 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@412) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@411) ($generated@@152 ($generated@@222 $generated@@145 $generated@@412)))) (= ($generated@@83 ($generated@@406 $generated@@411) ($generated@@152 ($generated@@222 $generated@@145 $generated@@412))) ($generated@@153 ($generated@@222 $generated@@145 $generated@@412))))))
 :pattern ( ($generated@@83 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@332 (type $generated@@416))))
(let (($generated@@418 ($generated@@331 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@78 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@419) ($generated@@152 ($generated@@222 $generated@@145 $generated@@420)))) (= ($generated@@83 ($generated@@414 $generated@@419) ($generated@@152 ($generated@@222 $generated@@145 $generated@@420))) ($generated@@153 ($generated@@222 $generated@@145 $generated@@420))))))
 :pattern ( ($generated@@83 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@313 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@312 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@83 ($generated@@374 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@83 ($generated@@310 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@83 ($generated@@406 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@421) $generated@@425))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@331 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@330 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@83 ($generated@@385 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@83 ($generated@@328 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@83 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@426) $generated@@430))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@83 ($generated@@385 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@66)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@435) $generated@@66)) (= (type $generated@@436) $generated@@66)) (= (type $generated@@437) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@434) $generated@@438))) (and ($generated@@271 ($generated@@83 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@271 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@76 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) $generated@@66)) (= (type $generated@@445) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@442) $generated@@446))) (and ($generated@@271 ($generated@@83 ($generated@@414 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@271 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@442) $generated@@446))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@76 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@81 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@78 $generated@@449 $generated@@4)) (= (type $generated@@448) ($generated@@78 $generated@@449 $generated@@4))) ($generated@@346 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@346 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 Int) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452 $generated@@453)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@450 $generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 Int) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@457) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@450 $generated@@454 $generated@@455 $generated@@456) $generated@@457))  (and ($generated@@221 $generated@@457 $generated@@454) (and ($generated@@0 ($generated@@83 $generated@@455 $generated@@457)) (< $generated@@456 ($generated ($generated@@222 $generated@@2 $generated@@457)))))))
 :pattern ( ($generated@@83 ($generated@@450 $generated@@454 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@458) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@459) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@460) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@458 $generated@@460))) (and ($generated@@134 $generated@@458 $generated@@459) ($generated@@134 $generated@@459 $generated@@460))) ($generated@@134 $generated@@458 $generated@@460))
 :pattern ( ($generated@@134 $generated@@458 $generated@@459) ($generated@@134 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@332 (type $generated@@463))))
(let (($generated@@465 ($generated@@331 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@330 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@329 $generated@@465 $generated@@464)) (= ($generated@@328 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@328 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@332 (type $generated@@466))))
(let (($generated@@468 ($generated@@331 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@330 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@329 $generated@@468 $generated@@467)) (= ($generated@@385 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@385 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@332 (type $generated@@469))))
(let (($generated@@471 ($generated@@331 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@330 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@329 $generated@@471 $generated@@470)) (= ($generated@@413 $generated@@469) ($generated@@461 $generated@@154))))))
 :pattern ( ($generated@@413 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@314 (type $generated@@472))))
(let (($generated@@474 ($generated@@313 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@312 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@311 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@154) (= (type $generated@@476) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@405 $generated@@472) ($generated@@291 ($generated@@232 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@405 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@332 (type $generated@@477))))
(let (($generated@@479 ($generated@@331 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@330 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@329 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@154) (= (type $generated@@481) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@413 $generated@@477) ($generated@@291 ($generated@@232 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@413 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@154) ($generated@@221 $generated@@482 $generated@@46)) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@482)) $generated@@482) ($generated@@141 ($generated@@222 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@221 $generated@@483 $generated@@47)) (and (= ($generated@@291 ($generated@@222 $generated@@3 $generated@@483)) $generated@@483) ($generated@@141 ($generated@@222 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@154) ($generated@@221 $generated@@484 $generated@@44)) (and (= ($generated@@291 ($generated@@222 $generated@@4 $generated@@484)) $generated@@484) ($generated@@141 ($generated@@222 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@154) ($generated@@221 $generated@@486 $generated@@45)) (and (= ($generated@@291 ($generated@@222 $generated@@485 $generated@@486)) $generated@@486) ($generated@@141 ($generated@@222 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@221 ($generated@@291 $generated@@487) $generated@@488) ($generated@@141 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@221 ($generated@@291 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@81 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@78 $generated@@490 $generated@@2)) (<= 0 ($generated@@304 $generated@@489))))
 :pattern ( ($generated@@304 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@260 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@259 $generated@@492)) (<= 0 ($generated@@284 $generated@@491))))
 :pattern ( ($generated@@284 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@66) (= (type $generated@@496) $generated@@66)) (= ($generated@@493 ($generated@@431 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@431 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@66) (= (type $generated@@500) $generated@@66)) (= ($generated@@497 ($generated@@431 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@431 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@66) (= (type $generated@@502) $generated@@66)) (= ($generated@@74 ($generated@@431 $generated@@501 $generated@@502)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@66) (= (type $generated@@506) $generated@@66)) (= ($generated@@503 ($generated@@439 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@439 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@439 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@439 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@66) (= (type $generated@@512) $generated@@66)) (= ($generated@@74 ($generated@@439 $generated@@511 $generated@@512)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) (= (type $generated@@514) $generated@@154)) (= ($generated@@277 ($generated@@232 $generated@@513 $generated@@514)) $generated@@62))
 :pattern ( ($generated@@232 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@66) (= (type $generated@@518) $generated@@66)) (= ($generated@@515 ($generated@@144 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@144 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@66)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@519 ($generated@@144 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@144 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@154)) (= ($generated@@152 ($generated@@232 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@232 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@154) (= (type $generated@@526) $generated@@154)) (= ($generated@@153 ($generated@@232 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@232 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@259 $generated@@154)) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@527 ($generated@@258 $generated@@528) $generated@@529) (forall (($generated@@530 Int) ) (!  (=> (and (<= 0 $generated@@530) (< $generated@@530 ($generated@@284 $generated@@527))) ($generated@@271 ($generated@@362 $generated@@527 $generated@@530) $generated@@528 $generated@@529))
 :pattern ( ($generated@@362 $generated@@527 $generated@@530))
))))
 :pattern ( ($generated@@76 $generated@@527 ($generated@@258 $generated@@528) $generated@@529))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@531 ($generated@@77 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@77 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@533 ($generated@@241 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@241 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@74 ($generated@@241 $generated@@536)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@537 ($generated@@246 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@246 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@540)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@66) (= ($generated@@541 ($generated@@159 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@159 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@544)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@545 ($generated@@258 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@258 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@66) (= ($generated@@74 ($generated@@258 $generated@@548)) $generated@@57))
 :pattern ( ($generated@@258 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@222 $generated@@550 ($generated@@291 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@291 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@552) $generated@@66)) (= (type $generated@@553) $generated@@66)) (= ($generated@@141 $generated@@551 ($generated@@431 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@310 $generated@@551) $generated@@554))) (and ($generated@@221 ($generated@@83 ($generated@@406 $generated@@551) $generated@@554) $generated@@553) ($generated@@221 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@83 ($generated@@406 $generated@@551) $generated@@554))
 :pattern ( ($generated@@83 ($generated@@310 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@141 $generated@@551 ($generated@@431 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@556) $generated@@66)) (= (type $generated@@557) $generated@@66)) (= ($generated@@141 $generated@@555 ($generated@@439 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@555) $generated@@558))) (and ($generated@@221 ($generated@@83 ($generated@@414 $generated@@555) $generated@@558) $generated@@557) ($generated@@221 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@83 ($generated@@414 $generated@@555) $generated@@558))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@141 $generated@@555 ($generated@@439 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@232 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@232 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@154)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@232 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@232 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@154) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@221 $generated@@565 ($generated@@431 $generated@@566 $generated@@567))) (and (= ($generated@@291 ($generated@@222 ($generated@@312 $generated@@154 $generated@@154) $generated@@565)) $generated@@565) ($generated@@141 ($generated@@222 ($generated@@312 $generated@@154 $generated@@154) $generated@@565) ($generated@@431 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@221 $generated@@565 ($generated@@431 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) ($generated@@221 $generated@@568 ($generated@@439 $generated@@569 $generated@@570))) (and (= ($generated@@291 ($generated@@222 ($generated@@330 $generated@@154 $generated@@154) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@222 ($generated@@330 $generated@@154 $generated@@154) $generated@@568) ($generated@@439 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@221 $generated@@568 ($generated@@439 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@66) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) $generated@@154)) ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572))) (and (= ($generated@@291 ($generated@@222 $generated@@145 $generated@@573)) $generated@@573) ($generated@@141 ($generated@@222 $generated@@145 $generated@@573) ($generated@@144 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@221 $generated@@573 ($generated@@144 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@575 T@T) ) (! (= (type ($generated@@574 $generated@@575)) ($generated@@78 $generated@@575 $generated@@4))
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@83 ($generated@@574 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@83 ($generated@@574 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@83 ($generated@@461 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@83 ($generated@@461 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@71)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@66) (= (type $generated@@583) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@582 $generated@@583)) $generated@@63) (= ($generated@@580 ($generated@@144 $generated@@582 $generated@@583)) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@582 $generated@@583))
)))
(assert  (and (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@260 (type $generated@@586))))
(= (type ($generated@@584 $generated@@586)) ($generated@@259 $generated@@587)))
 :pattern ( ($generated@@584 $generated@@586))
)) (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@260 (type $generated@@588))))
(= (type ($generated@@585 $generated@@588)) $generated@@589))
 :pattern ( ($generated@@585 $generated@@588))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (=> (= (type $generated@@590) ($generated@@259 $generated@@592)) (and (= ($generated@@584 ($generated@@257 $generated@@590 $generated@@591)) $generated@@590) (= ($generated@@585 ($generated@@257 $generated@@590 $generated@@591)) $generated@@591))))
 :pattern ( ($generated@@257 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@145) (= ($generated@@559 ($generated@@291 $generated@@593)) ($generated@@560 $generated@@593)))
 :pattern ( ($generated@@559 ($generated@@291 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@154) ($generated@@221 $generated@@594 ($generated@@77 0))) (and (= ($generated@@291 ($generated@@222 $generated@@2 $generated@@594)) $generated@@594) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@594) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@594 ($generated@@77 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@154) (= (type $generated@@596) $generated@@66)) ($generated@@221 $generated@@595 ($generated@@241 $generated@@596))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@595)) $generated@@595) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@595) ($generated@@241 $generated@@596))))
 :pattern ( ($generated@@221 $generated@@595 ($generated@@241 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@154) (= (type $generated@@598) $generated@@66)) ($generated@@221 $generated@@597 ($generated@@246 $generated@@598))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@597)) $generated@@597) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@4) $generated@@597) ($generated@@246 $generated@@598))))
 :pattern ( ($generated@@221 $generated@@597 ($generated@@246 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@154) (= (type $generated@@600) $generated@@66)) ($generated@@221 $generated@@599 ($generated@@159 $generated@@600))) (and (= ($generated@@291 ($generated@@222 ($generated@@78 $generated@@154 $generated@@2) $generated@@599)) $generated@@599) ($generated@@141 ($generated@@222 ($generated@@78 $generated@@154 $generated@@2) $generated@@599) ($generated@@159 $generated@@600))))
 :pattern ( ($generated@@221 $generated@@599 ($generated@@159 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@154) (= (type $generated@@602) $generated@@66)) ($generated@@221 $generated@@601 ($generated@@258 $generated@@602))) (and (= ($generated@@291 ($generated@@222 ($generated@@259 $generated@@154) $generated@@601)) $generated@@601) ($generated@@141 ($generated@@222 ($generated@@259 $generated@@154) $generated@@601) ($generated@@258 $generated@@602))))
 :pattern ( ($generated@@221 $generated@@601 ($generated@@258 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@81 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@78 $generated@@606 $generated@@4)) (= (type $generated@@605) ($generated@@78 $generated@@606 $generated@@4))) (= ($generated@@603 $generated@@604 $generated@@605) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@606) ($generated@@0 ($generated@@83 $generated@@604 $generated@@607))) ($generated@@0 ($generated@@83 $generated@@605 $generated@@607)))
 :pattern ( ($generated@@83 $generated@@604 $generated@@607))
 :pattern ( ($generated@@83 $generated@@605 $generated@@607))
)))))
 :pattern ( ($generated@@603 $generated@@604 $generated@@605))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@580 $generated@@138) $generated@@64))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@609) $generated@@66)) (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@608 ($generated@@159 $generated@@609) $generated@@610) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@608 $generated@@611)))) ($generated@@271 $generated@@611 $generated@@609 $generated@@610))
 :pattern ( ($generated@@83 $generated@@608 $generated@@611))
))))
 :pattern ( ($generated@@76 $generated@@608 ($generated@@159 $generated@@609) $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@145) (= (type $generated@@613) $generated@@66)) (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@614) (and ($generated@@143 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@66) ($generated@@76 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@76 $generated@@612 ($generated@@144 $generated@@613 $generated@@615) $generated@@614))
))))) ($generated@@271 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@271 ($generated@@152 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@145) (= (type $generated@@617) $generated@@66)) (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@270 $generated@@618) (and ($generated@@143 $generated@@616) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@66) ($generated@@76 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
 :pattern ( ($generated@@76 $generated@@616 ($generated@@144 $generated@@619 $generated@@617) $generated@@618))
))))) ($generated@@271 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
 :pattern ( ($generated@@271 ($generated@@153 $generated@@616) $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 Int) ) (! (let (($generated@@623 ($generated@@260 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@259 $generated@@623)) (= (type $generated@@621) ($generated@@259 $generated@@623))) (and (=> (< $generated@@622 ($generated@@284 $generated@@620)) (= ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622) ($generated@@362 $generated@@620 $generated@@622))) (=> (<= ($generated@@284 $generated@@620) $generated@@622) (= ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622) ($generated@@362 $generated@@621 (- $generated@@622 ($generated@@284 $generated@@620))))))))
 :pattern ( ($generated@@362 ($generated@@351 $generated@@620 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@154) (= (type $generated@@625) $generated@@154)) (= ($generated@@232 ($generated@@253 $generated@@624) ($generated@@253 $generated@@625)) ($generated@@253 ($generated@@232 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@232 ($generated@@253 $generated@@624) ($generated@@253 $generated@@625)))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@251 $generated@@626))) ($generated@@253 ($generated@@291 ($generated@@8 $generated@@626))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@251 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ) (! (= ($generated@@291 ($generated@@253 $generated@@627)) ($generated@@253 ($generated@@291 $generated@@627)))
 :pattern ( ($generated@@291 ($generated@@253 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 ($generated@@260 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@259 $generated@@629)) (= ($generated@@284 $generated@@628) 0)) (= $generated@@628 ($generated@@283 $generated@@629))))
 :pattern ( ($generated@@284 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@631)))
 (=> (and (and (= (type $generated@@630) ($generated@@78 $generated@@633 $generated@@2)) (= (type $generated@@632) $generated@@2)) (<= 0 ($generated $generated@@632))) (= ($generated@@304 ($generated@@84 $generated@@630 $generated@@631 $generated@@632)) (+ (- ($generated@@304 $generated@@630) ($generated ($generated@@83 $generated@@630 $generated@@631))) ($generated $generated@@632)))))
 :pattern ( ($generated@@304 ($generated@@84 $generated@@630 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@635) $generated@@2)) ($generated@@76 $generated@@635 $generated@@46 $generated@@634))
 :pattern ( ($generated@@76 $generated@@635 $generated@@46 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@637) $generated@@3)) ($generated@@76 $generated@@637 $generated@@47 $generated@@636))
 :pattern ( ($generated@@76 $generated@@637 $generated@@47 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@639) $generated@@4)) ($generated@@76 $generated@@639 $generated@@44 $generated@@638))
 :pattern ( ($generated@@76 $generated@@639 $generated@@44 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@641) $generated@@485)) ($generated@@76 $generated@@641 $generated@@45 $generated@@640))
 :pattern ( ($generated@@76 $generated@@641 $generated@@45 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@643) $generated@@154)) ($generated@@76 $generated@@643 $generated@@48 $generated@@642))
 :pattern ( ($generated@@76 $generated@@643 $generated@@48 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@259 $generated@@154)) (= (type $generated@@645) $generated@@66)) (= ($generated@@141 $generated@@644 ($generated@@258 $generated@@645)) (forall (($generated@@646 Int) ) (!  (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@284 $generated@@644))) ($generated@@221 ($generated@@362 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@362 $generated@@644 $generated@@646))
))))
 :pattern ( ($generated@@141 $generated@@644 ($generated@@258 $generated@@645)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 Int) ) (!  (=> (= (type $generated@@648) ($generated@@259 $generated@@154)) (=> (and (<= 0 $generated@@649) (< $generated@@649 ($generated@@284 $generated@@648))) (< ($generated@@560 ($generated@@222 $generated@@145 ($generated@@362 $generated@@648 $generated@@649))) ($generated@@647 $generated@@648))))
 :pattern ( ($generated@@560 ($generated@@222 $generated@@145 ($generated@@362 $generated@@648 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@312 $generated@@154 $generated@@154)) (= (type $generated@@651) $generated@@66)) (= (type $generated@@652) $generated@@66)) ($generated@@141 $generated@@650 ($generated@@431 $generated@@651 $generated@@652))) (and (and ($generated@@141 ($generated@@310 $generated@@650) ($generated@@241 $generated@@651)) ($generated@@141 ($generated@@374 $generated@@650) ($generated@@241 $generated@@652))) ($generated@@141 ($generated@@405 $generated@@650) ($generated@@241 ($generated@@144 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@141 $generated@@650 ($generated@@431 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) ($generated@@330 $generated@@154 $generated@@154)) (= (type $generated@@654) $generated@@66)) (= (type $generated@@655) $generated@@66)) ($generated@@141 $generated@@653 ($generated@@439 $generated@@654 $generated@@655))) (and (and ($generated@@141 ($generated@@328 $generated@@653) ($generated@@246 $generated@@654)) ($generated@@141 ($generated@@385 $generated@@653) ($generated@@246 $generated@@655))) ($generated@@141 ($generated@@413 $generated@@653) ($generated@@246 ($generated@@144 $generated@@654 $generated@@655)))))
 :pattern ( ($generated@@141 $generated@@653 ($generated@@439 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@2) ($generated@@141 $generated@@656 $generated@@46))
 :pattern ( ($generated@@141 $generated@@656 $generated@@46))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@3) ($generated@@141 $generated@@657 $generated@@47))
 :pattern ( ($generated@@141 $generated@@657 $generated@@47))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@4) ($generated@@141 $generated@@658 $generated@@44))
 :pattern ( ($generated@@141 $generated@@658 $generated@@44))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@485) ($generated@@141 $generated@@659 $generated@@45))
 :pattern ( ($generated@@141 $generated@@659 $generated@@45))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@154) ($generated@@141 $generated@@660 $generated@@48))
 :pattern ( ($generated@@141 $generated@@660 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@661) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@662) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@664) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@665) ($generated@@259 $generated@@154))) (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@667) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@669) ($generated@@259 $generated@@154))) (= (type $generated@@670) $generated@@79)) (= (type $generated@@674) ($generated@@166 $generated@@79 $generated@@4))) (= (type $generated@@675) ($generated@@259 $generated@@154))) (= (type $generated@@677) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@678) ($generated@@78 $generated@@154 $generated@@4))) (= (type $generated@@679) ($generated@@259 $generated@@154))) (= (type $generated@@680) ($generated@@259 $generated@@154))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@682  (=> (= $generated@@661 ($generated@@450 $generated@@138 $generated@@662 $generated@@663)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@141 $generated@@664 ($generated@@241 $generated@@138))) (=> ($generated@@141 $generated@@664 ($generated@@241 $generated@@138)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and ($generated@@603 $generated@@664 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@664)))) (=> (and ($generated@@603 $generated@@664 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@664))) (=> (and (and ($generated@@141 $generated@@665 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@665 ($generated@@258 $generated@@138) $generated@@666)) (and ($generated@@270 $generated@@667) ($generated@@668 $generated@@667))) (=> (and (and (and ($generated@@141 $generated@@669 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@669 ($generated@@258 $generated@@138) $generated@@667)) (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@79) (=> (and (not (= $generated@@683 $generated@@670)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@666 $generated@@683) $generated@@60))) (= ($generated@@83 $generated@@667 $generated@@683) ($generated@@83 $generated@@666 $generated@@683))))
 :pattern ( ($generated@@83 $generated@@667 $generated@@683))
))) (and ($generated@@134 $generated@@666 $generated@@667) (= (ControlFlow 0 4) (- 0 3)))) (and ($generated@@603 $generated@@661 $generated@@662) (not ($generated@@603 $generated@@662 $generated@@661))))))))))))
(let (($generated@@684  (=> (and (not (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (< $generated@@663 $generated@@671))) (= (ControlFlow 0 9) 4)) $generated@@682)))
(let (($generated@@685  (=> (and (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (< $generated@@663 $generated@@671)) (= (ControlFlow 0 8) 4)) $generated@@682)))
(let (($generated@@686  (=> (not ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671))))) (and (=> (= (ControlFlow 0 11) 8) $generated@@685) (=> (= (ControlFlow 0 11) 9) $generated@@684)))))
(let (($generated@@687  (=> ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@671)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@685) (=> (= (ControlFlow 0 10) 9) $generated@@684)))))
(let (($generated@@688  (=> (<= ($generated@@251 0) $generated@@671) (and (=> (= (ControlFlow 0 12) 10) $generated@@687) (=> (= (ControlFlow 0 12) 11) $generated@@686)))))
(let (($generated@@689  (=> (and (< $generated@@671 ($generated@@251 0)) (= (ControlFlow 0 7) 4)) $generated@@682)))
(let (($generated@@690  (=> (= $generated@@664 ($generated@@220 $generated@@46 $generated@@662 $generated@@663)) (and (=> (= (ControlFlow 0 13) 12) $generated@@688) (=> (= (ControlFlow 0 13) 7) $generated@@689)))))
(let (($generated@@691  (=> (and (not (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (< $generated@@672 $generated@@663))) (= (ControlFlow 0 15) 13)) $generated@@690)))
(let (($generated@@692  (=> (and (and ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (< $generated@@672 $generated@@663)) (= (ControlFlow 0 14) 13)) $generated@@690)))
(let (($generated@@693  (=> (not ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672))))) (and (=> (= (ControlFlow 0 17) 14) $generated@@692) (=> (= (ControlFlow 0 17) 15) $generated@@691)))))
(let (($generated@@694  (=> ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@672)))) (and (=> (= (ControlFlow 0 16) 14) $generated@@692) (=> (= (ControlFlow 0 16) 15) $generated@@691)))))
(let (($generated@@695  (and (=> (= (ControlFlow 0 18) 16) $generated@@694) (=> (= (ControlFlow 0 18) 17) $generated@@693))))
(let (($generated@@696 true))
(let (($generated@@697  (and (=> (= (ControlFlow 0 19) (- 0 20)) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (exists (($generated@@698 T@U) ) (!  (and (= (type $generated@@698) $generated@@2) (and (<= ($generated@@251 0) ($generated $generated@@698)) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 $generated@@698)))))
 :no-pattern (type $generated@@698)
 :no-pattern ($generated $generated@@698)
 :no-pattern ($generated@@0 $generated@@698)
))))) (=> (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (or (and ($generated@@141 ($generated@@8 ($generated@@251 0)) $generated@@138) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 ($generated@@251 0)))))) (exists (($generated@@699 Int) )  (and (<= ($generated@@251 0) $generated@@699) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@699)))))))) (=> (and (<= ($generated@@251 0) $generated@@663) ($generated@@0 ($generated@@83 $generated@@662 ($generated@@291 ($generated@@8 $generated@@663))))) (and (=> (= (ControlFlow 0 19) 18) $generated@@695) (=> (= (ControlFlow 0 19) 2) $generated@@696)))))))
(let (($generated@@700  (=> (and (< $generated@@673 ($generated@@251 0)) (= (ControlFlow 0 22) 19)) $generated@@697)))
(let (($generated@@701  (=> (and (<= ($generated@@251 0) $generated@@673) (= (ControlFlow 0 21) 19)) $generated@@697)))
(let (($generated@@702  (=> (not ($generated@@346 $generated@@662 ($generated@@574 $generated@@154))) (and (=> (= (ControlFlow 0 23) 21) $generated@@701) (=> (= (ControlFlow 0 23) 22) $generated@@700)))))
(let (($generated@@703 true))
(let (($generated@@704  (=> (= $generated@@674 ($generated@@165 $generated@@670 $generated@@666 $generated@@60 false)) (and (=> (= (ControlFlow 0 24) 1) $generated@@703) (=> (= (ControlFlow 0 24) 23) $generated@@702)))))
(let (($generated@@705  (=> (and (and ($generated@@270 $generated@@666) ($generated@@668 $generated@@666)) (and ($generated@@141 $generated@@662 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@662 ($generated@@241 $generated@@138) $generated@@666))) (=> (and (and (and ($generated@@141 $generated@@675 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@675 ($generated@@258 $generated@@138) $generated@@666)) (and (<= ($generated@@251 0) $generated@@676) true)) (and (and ($generated@@141 $generated@@677 ($generated@@241 $generated@@46)) ($generated@@76 $generated@@677 ($generated@@241 $generated@@46) $generated@@666)) true)) (=> (and (and (and (and ($generated@@141 $generated@@678 ($generated@@241 $generated@@138)) ($generated@@76 $generated@@678 ($generated@@241 $generated@@138) $generated@@666)) true) (and (and ($generated@@141 $generated@@679 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@679 ($generated@@258 $generated@@138) $generated@@666)) true)) (and (and (and ($generated@@141 $generated@@680 ($generated@@258 $generated@@138)) ($generated@@76 $generated@@680 ($generated@@258 $generated@@138) $generated@@666)) true) (and (= 1 $generated@@681) (= (ControlFlow 0 25) 24)))) $generated@@704)))))
$generated@@705))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U Int) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@T T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (Int) Int)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@302 (T@U) Bool)
(declare-fun $generated@@303 (T@U T@U T@U) Bool)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Int)
(declare-fun $generated@@341 (T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U T@U) T@U)
(declare-fun $generated@@381 (T@U Int) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) Bool)
(declare-fun $generated@@467 (T@U T@U Int) T@U)
(declare-fun $generated@@478 (T@T) T@U)
(declare-fun $generated@@502 () T@T)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@627 (T@U T@U) Bool)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert  (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (= ($generated@@1 ($generated@@143 $generated@@146 $generated@@147)) 14)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@144 ($generated@@143 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@143 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@145 ($generated@@143 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@143 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@144 (type $generated@@152))))
(= (type ($generated@@141 $generated@@152)) ($generated@@78 $generated@@153 $generated@@4)))
 :pattern ( ($generated@@141 $generated@@152))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@82 (type $generated@@155))))
(let (($generated@@158 ($generated@@81 (type $generated@@154))))
(= (type ($generated@@142 $generated@@154 $generated@@155 $generated@@156)) ($generated@@143 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@154 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@82 (type $generated@@160))))
(let (($generated@@163 ($generated@@81 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@78 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@66)) (= ($generated@@141 ($generated@@142 $generated@@159 $generated@@160 $generated@@161)) $generated@@159))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 ($generated@@145 (type $generated@@165))))
(let (($generated@@167 ($generated@@144 (type $generated@@165))))
(= (type ($generated@@164 $generated@@165)) ($generated@@78 $generated@@167 $generated@@166))))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@82 (type $generated@@169))))
(let (($generated@@172 ($generated@@81 (type $generated@@168))))
 (=> (and (and (= (type $generated@@168) ($generated@@78 $generated@@172 $generated@@4)) (= (type $generated@@169) ($generated@@78 $generated@@172 $generated@@171))) (= (type $generated@@170) $generated@@66)) (= ($generated@@164 ($generated@@142 $generated@@168 $generated@@169 $generated@@170)) $generated@@169))))
 :pattern ( ($generated@@164 ($generated@@142 $generated@@168 $generated@@169 $generated@@170)))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@173 $generated@@174 ($generated@@77 0)))
 :pattern ( ($generated@@173 $generated@@174 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@66)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@66) (= (type $generated@@181) $generated@@66)) (= (type $generated@@182) $generated@@177)) ($generated@@173 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@173 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 16) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@66)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@78 $generated@@186 $generated@@2)) (= (type $generated@@195) $generated@@66)) ($generated@@173 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@173 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@79 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@69 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@79) (= (type $generated@@246) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@247) ($generated@@68 $generated@@4))) (= (type $generated@@249) $generated@@79)) (= (type $generated@@250) ($generated@@68 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert  (and (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Int) ) (! (= (type ($generated@@252 $generated@@255 $generated@@256 $generated@@257)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@252 $generated@@255 $generated@@256 $generated@@257))
)) (forall (($generated@@258 T@T) ($generated@@259 T@U) ) (! (= (type ($generated@@254 $generated@@258 $generated@@259)) $generated@@258)
 :pattern ( ($generated@@254 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 Int) ($generated@@263 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) ($generated@@78 $generated@@186 $generated@@4))) (= (type $generated@@263) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@252 $generated@@260 $generated@@261 $generated@@262) $generated@@263))  (and ($generated@@253 $generated@@263 $generated@@260) (and ($generated@@0 ($generated@@83 $generated@@261 $generated@@263)) (< ($generated ($generated@@254 $generated@@2 $generated@@263)) $generated@@262)))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@260 $generated@@261 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@264 $generated@@265 $generated@@266)) $generated@@177)
 :pattern ( ($generated@@264 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@66) (= (type $generated@@268) $generated@@66)) (= (type $generated@@269) $generated@@186)) (= (type $generated@@270) $generated@@186)) (= ($generated@@173 ($generated@@264 $generated@@269 $generated@@270) ($generated@@176 $generated@@267 $generated@@268))  (and ($generated@@253 $generated@@269 $generated@@267) ($generated@@253 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@173 ($generated@@264 $generated@@269 $generated@@270) ($generated@@176 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@177) (= (type $generated@@272) $generated@@177)) (= ($generated@@183 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@183 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@66)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@276) $generated@@66)) (= ($generated@@173 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@186) ($generated@@0 ($generated@@83 $generated@@275 $generated@@277))) ($generated@@253 $generated@@277 $generated@@276))
 :pattern ( ($generated@@83 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@173 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@66)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@281) $generated@@66)) (= ($generated@@173 $generated@@280 ($generated@@278 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@186) ($generated@@0 ($generated@@83 $generated@@280 $generated@@282))) ($generated@@253 $generated@@282 $generated@@281))
 :pattern ( ($generated@@83 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@173 $generated@@280 ($generated@@278 $generated@@281)))
)))
(assert (forall (($generated@@284 Int) ) (! (= ($generated@@283 $generated@@284) $generated@@284)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
(= (type ($generated@@285 $generated@@286)) $generated@@287))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= ($generated@@285 $generated@@288) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 18)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 (type $generated@@296)))
(= (type ($generated@@289 $generated@@295 $generated@@296)) ($generated@@291 $generated@@297)))
 :pattern ( ($generated@@289 $generated@@295 $generated@@296))
))) (forall (($generated@@298 T@U) ) (! (= (type ($generated@@290 $generated@@298)) $generated@@66)
 :pattern ( ($generated@@290 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (= (type $generated@@299) ($generated@@291 $generated@@186)) (= (type $generated@@300) $generated@@186)) (= (type $generated@@301) $generated@@66)) (and ($generated@@173 $generated@@299 ($generated@@290 $generated@@301)) ($generated@@253 $generated@@300 $generated@@301))) ($generated@@173 ($generated@@289 $generated@@299 $generated@@300) ($generated@@290 $generated@@301)))
 :pattern ( ($generated@@173 ($generated@@289 $generated@@299 $generated@@300) ($generated@@290 $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@304) $generated@@66) (= (type $generated@@305) $generated@@66)) (= (type $generated@@306) $generated@@186)) (= (type $generated@@307) $generated@@186)) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@302 $generated@@308)) (= ($generated@@76 ($generated@@264 $generated@@306 $generated@@307) ($generated@@176 $generated@@304 $generated@@305) $generated@@308)  (and ($generated@@303 $generated@@306 $generated@@304 $generated@@308) ($generated@@303 $generated@@307 $generated@@305 $generated@@308))))
 :pattern ( ($generated@@76 ($generated@@264 $generated@@306 $generated@@307) ($generated@@176 $generated@@304 $generated@@305) $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@70)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@177) (= ($generated@@175 $generated@@311) (= ($generated@@309 $generated@@311) $generated@@62)))
 :pattern ( ($generated@@175 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@78 $generated@@186 $generated@@186))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@314) ($generated@@78 $generated@@186 $generated@@186)) (= (type $generated@@315) $generated@@186)) (= ($generated@@83 ($generated@@312 $generated@@314) $generated@@315) ($generated@@83 $generated@@314 $generated@@315)))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@314) $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@177) ($generated@@175 $generated@@316)) (exists (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (and (and (= (type $generated@@317) $generated@@186) (= (type $generated@@318) $generated@@186)) (= $generated@@316 ($generated@@264 $generated@@317 $generated@@318)))
 :no-pattern (type $generated@@317)
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
)))
 :pattern ( ($generated@@175 $generated@@316))
)))
(assert (forall (($generated@@321 T@T) ) (! (= (type ($generated@@319 $generated@@321)) ($generated@@291 $generated@@321))
 :pattern ( ($generated@@319 $generated@@321))
)))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@322)) 0)
 :pattern ( ($generated@@319 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@2) (= ($generated@@173 $generated@@323 $generated@@138) (<= ($generated@@283 0) ($generated $generated@@323))))
 :pattern ( ($generated@@173 $generated@@323 $generated@@138))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
 (=> (= (type $generated@@324) ($generated@@291 $generated@@326)) (= ($generated@@320 ($generated@@289 $generated@@324 $generated@@325)) (+ 1 ($generated@@320 $generated@@324)))))
 :pattern ( ($generated@@289 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@186)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@66) (= (type $generated@@331) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@303 ($generated@@327 $generated@@329) $generated@@330 $generated@@331) ($generated@@76 $generated@@329 $generated@@330 $generated@@331)))
 :pattern ( ($generated@@303 ($generated@@327 $generated@@329) $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@332) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@333) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@334) $generated@@186)) (= (type $generated@@335) $generated@@66)) ($generated@@134 $generated@@332 $generated@@333)) ($generated@@303 $generated@@334 $generated@@335 $generated@@332)) ($generated@@303 $generated@@334 $generated@@335 $generated@@333))
 :pattern ( ($generated@@134 $generated@@332 $generated@@333) ($generated@@303 $generated@@334 $generated@@335 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@336) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@337) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@339) $generated@@66)) ($generated@@134 $generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@339 $generated@@336)) ($generated@@76 $generated@@338 $generated@@339 $generated@@337))
 :pattern ( ($generated@@134 $generated@@336 $generated@@337) ($generated@@76 $generated@@338 $generated@@339 $generated@@336))
)))
(assert (forall (($generated@@342 T@T) ) (! (= (type ($generated@@341 $generated@@342)) ($generated@@78 $generated@@342 $generated@@2))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@81 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@78 $generated@@344 $generated@@2)) (and (= (= ($generated@@340 $generated@@343) 0) (= $generated@@343 ($generated@@341 $generated@@344))) (=> (not (= ($generated@@340 $generated@@343) 0)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) (< 0 ($generated ($generated@@83 $generated@@343 $generated@@345))))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) ($generated@@143 $generated@@347 $generated@@348))
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@83 ($generated@@141 ($generated@@346 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@83 ($generated@@141 ($generated@@346 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@78 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@83 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@83 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@292 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371 $generated@@372)) ($generated@@291 $generated@@373)))
 :pattern ( ($generated@@370 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@292 (type $generated@@374))))
 (=> (and (= (type $generated@@374) ($generated@@291 $generated@@376)) (= (type $generated@@375) ($generated@@291 $generated@@376))) (= ($generated@@320 ($generated@@370 $generated@@374 $generated@@375)) (+ ($generated@@320 $generated@@374) ($generated@@320 $generated@@375)))))
 :pattern ( ($generated@@320 ($generated@@370 $generated@@374 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@81 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@78 $generated@@378 $generated@@2)) (= ($generated@@192 $generated@@377) (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@378) (and (<= 0 ($generated ($generated@@83 $generated@@377 $generated@@379))) (<= ($generated ($generated@@83 $generated@@377 $generated@@379)) ($generated@@340 $generated@@377))))
 :pattern ( ($generated@@83 $generated@@377 $generated@@379))
)))))
 :pattern ( ($generated@@192 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@186) ($generated@@253 $generated@@380 $generated@@138)) (and (= ($generated@@327 ($generated@@254 $generated@@2 $generated@@380)) $generated@@380) ($generated@@173 ($generated@@254 $generated@@2 $generated@@380) $generated@@138)))
 :pattern ( ($generated@@253 $generated@@380 $generated@@138))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 Int) ) (! (let (($generated@@384 ($generated@@292 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382 $generated@@383)) $generated@@384))
 :pattern ( ($generated@@381 $generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 Int) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
 (=> (= (type $generated@@385) ($generated@@291 $generated@@388)) (and (=> (= $generated@@386 ($generated@@320 $generated@@385)) (= ($generated@@381 ($generated@@289 $generated@@385 $generated@@387) $generated@@386) $generated@@387)) (=> (not (= $generated@@386 ($generated@@320 $generated@@385))) (= ($generated@@381 ($generated@@289 $generated@@385 $generated@@387) $generated@@386) ($generated@@381 $generated@@385 $generated@@386))))))
 :pattern ( ($generated@@381 ($generated@@289 $generated@@385 $generated@@387) $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@145 (type $generated@@389))))
(let (($generated@@391 ($generated@@144 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@143 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@346 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@141 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@145 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@78 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@145 (type $generated@@396))))
(let (($generated@@398 ($generated@@144 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@143 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@346 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@83 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@356 (type $generated@@400))))
(let (($generated@@402 ($generated@@355 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@354 $generated@@402 $generated@@401)) (or (= $generated@@400 ($generated@@353 $generated@@402 $generated@@401)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@400) $generated@@403)))
 :no-pattern (type $generated@@403)
 :no-pattern ($generated $generated@@403)
 :no-pattern ($generated@@0 $generated@@403)
))))))
 :pattern ( ($generated@@352 $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@356 (type $generated@@405))))
(= (type ($generated@@404 $generated@@405)) ($generated@@78 $generated@@406 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@356 (type $generated@@407))))
(let (($generated@@409 ($generated@@355 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@354 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@353 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@408) ($generated@@0 ($generated@@83 ($generated@@404 $generated@@407) $generated@@410)))
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@404 $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@78 $generated@@186 $generated@@2)) (= (type $generated@@412) $generated@@66)) (= ($generated@@173 $generated@@411 ($generated@@191 $generated@@412)) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@186) (< 0 ($generated ($generated@@83 $generated@@411 $generated@@413)))) ($generated@@253 $generated@@413 $generated@@412))
 :pattern ( ($generated@@83 $generated@@411 $generated@@413))
))))
 :pattern ( ($generated@@173 $generated@@411 ($generated@@191 $generated@@412)))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@414 ($generated@@273 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@186) ($generated@@0 ($generated@@83 $generated@@414 $generated@@417))) ($generated@@303 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@83 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@76 $generated@@414 ($generated@@273 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@418 ($generated@@278 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@186) ($generated@@0 ($generated@@83 $generated@@418 $generated@@421))) ($generated@@303 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@83 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@76 $generated@@418 ($generated@@278 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@83 ($generated@@341 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@83 ($generated@@341 $generated@@423) $generated@@422)))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@427) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@424 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@426) ($generated@@184 ($generated@@254 $generated@@177 $generated@@427)))) (= ($generated@@83 ($generated@@164 $generated@@426) ($generated@@184 ($generated@@254 $generated@@177 $generated@@427))) ($generated@@185 ($generated@@254 $generated@@177 $generated@@427))))))
 :pattern ( ($generated@@83 ($generated@@424 $generated@@426) $generated@@427))
)))
(assert  (and (forall (($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@430)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@428 $generated@@430))
)) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@356 (type $generated@@431))))
(let (($generated@@433 ($generated@@355 (type $generated@@431))))
(= (type ($generated@@429 $generated@@431)) ($generated@@78 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@429 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@354 $generated@@186 $generated@@186)) (= (type $generated@@435) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@428 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@83 ($generated@@352 $generated@@434) ($generated@@184 ($generated@@254 $generated@@177 $generated@@435)))) (= ($generated@@83 ($generated@@429 $generated@@434) ($generated@@184 ($generated@@254 $generated@@177 $generated@@435))) ($generated@@185 ($generated@@254 $generated@@177 $generated@@435))))))
 :pattern ( ($generated@@83 ($generated@@428 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@437)))
(let (($generated@@439 ($generated@@144 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@143 $generated@@439 $generated@@438)) (= ($generated@@0 ($generated@@83 ($generated@@393 $generated@@436) $generated@@437)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@436) $generated@@440)) (= $generated@@437 ($generated@@83 ($generated@@164 $generated@@436) $generated@@440))))
 :pattern ( ($generated@@83 ($generated@@141 $generated@@436) $generated@@440))
 :pattern ( ($generated@@83 ($generated@@164 $generated@@436) $generated@@440))
))))))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
(let (($generated@@444 ($generated@@355 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@354 $generated@@444 $generated@@443)) (= ($generated@@0 ($generated@@83 ($generated@@404 $generated@@441) $generated@@442)) (exists (($generated@@445 T@U) ) (!  (and (= (type $generated@@445) $generated@@444) (and ($generated@@0 ($generated@@83 ($generated@@352 $generated@@441) $generated@@445)) (= $generated@@442 ($generated@@83 ($generated@@429 $generated@@441) $generated@@445))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@441) $generated@@445))
 :pattern ( ($generated@@83 ($generated@@429 $generated@@441) $generated@@445))
))))))
 :pattern ( ($generated@@83 ($generated@@404 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@449) $generated@@453))) (and ($generated@@303 ($generated@@83 ($generated@@164 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@303 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@83 ($generated@@164 $generated@@449) $generated@@453))
 :pattern ( ($generated@@83 ($generated@@141 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@76 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@354 $generated@@186 $generated@@186)) (= (type $generated@@458) $generated@@66)) (= (type $generated@@459) $generated@@66)) (= (type $generated@@460) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@457) $generated@@461))) (and ($generated@@303 ($generated@@83 ($generated@@429 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@303 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@83 ($generated@@429 $generated@@457) $generated@@461))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@76 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@145 (type $generated@@463))))
(let (($generated@@466 ($generated@@144 (type $generated@@463))))
 (=> (and (and (= (type $generated@@463) ($generated@@143 $generated@@466 $generated@@465)) (= (type $generated@@464) ($generated@@143 $generated@@466 $generated@@465))) ($generated@@462 $generated@@463 $generated@@464)) (= $generated@@463 $generated@@464))))
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 Int) ) (! (= (type ($generated@@467 $generated@@468 $generated@@469 $generated@@470)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@467 $generated@@468 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 Int) ($generated@@474 T@U) ) (!  (=> (and (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) ($generated@@78 $generated@@186 $generated@@4))) (= (type $generated@@474) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@467 $generated@@471 $generated@@472 $generated@@473) $generated@@474))  (and ($generated@@253 $generated@@474 $generated@@471) (and ($generated@@0 ($generated@@83 $generated@@472 $generated@@474)) (< $generated@@473 ($generated ($generated@@254 $generated@@2 $generated@@474)))))))
 :pattern ( ($generated@@83 ($generated@@467 $generated@@471 $generated@@472 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@475) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@476) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@477) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@475 $generated@@477))) (and ($generated@@134 $generated@@475 $generated@@476) ($generated@@134 $generated@@476 $generated@@477))) ($generated@@134 $generated@@475 $generated@@477))
 :pattern ( ($generated@@134 $generated@@475 $generated@@476) ($generated@@134 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@T) ) (! (= (type ($generated@@478 $generated@@479)) ($generated@@78 $generated@@479 $generated@@4))
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@356 (type $generated@@480))))
(let (($generated@@482 ($generated@@355 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@354 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@353 $generated@@482 $generated@@481)) (= ($generated@@352 $generated@@480) ($generated@@478 $generated@@482))))))
 :pattern ( ($generated@@352 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@356 (type $generated@@483))))
(let (($generated@@485 ($generated@@355 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@354 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@353 $generated@@485 $generated@@484)) (= ($generated@@404 $generated@@483) ($generated@@478 $generated@@484))))))
 :pattern ( ($generated@@404 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@356 (type $generated@@486))))
(let (($generated@@488 ($generated@@355 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@354 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@353 $generated@@488 $generated@@487)) (= ($generated@@428 $generated@@486) ($generated@@478 $generated@@186))))))
 :pattern ( ($generated@@428 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@145 (type $generated@@489))))
(let (($generated@@491 ($generated@@144 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@143 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@346 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@186) (= (type $generated@@493) $generated@@186)) ($generated@@0 ($generated@@83 ($generated@@424 $generated@@489) ($generated@@327 ($generated@@264 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@424 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@356 (type $generated@@494))))
(let (($generated@@496 ($generated@@355 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@354 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@353 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@186) (= (type $generated@@498) $generated@@186)) ($generated@@0 ($generated@@83 ($generated@@428 $generated@@494) ($generated@@327 ($generated@@264 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@428 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@186) ($generated@@253 $generated@@499 $generated@@46)) (and (= ($generated@@327 ($generated@@254 $generated@@2 $generated@@499)) $generated@@499) ($generated@@173 ($generated@@254 $generated@@2 $generated@@499) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@499 $generated@@46))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@186) ($generated@@253 $generated@@500 $generated@@47)) (and (= ($generated@@327 ($generated@@254 $generated@@3 $generated@@500)) $generated@@500) ($generated@@173 ($generated@@254 $generated@@3 $generated@@500) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@500 $generated@@47))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@186) ($generated@@253 $generated@@501 $generated@@44)) (and (= ($generated@@327 ($generated@@254 $generated@@4 $generated@@501)) $generated@@501) ($generated@@173 ($generated@@254 $generated@@4 $generated@@501) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@501 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@502) 20))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@186) ($generated@@253 $generated@@503 $generated@@45)) (and (= ($generated@@327 ($generated@@254 $generated@@502 $generated@@503)) $generated@@503) ($generated@@173 ($generated@@254 $generated@@502 $generated@@503) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@503 $generated@@45))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@253 ($generated@@327 $generated@@504) $generated@@505) ($generated@@173 $generated@@504 $generated@@505)))
 :pattern ( ($generated@@253 ($generated@@327 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@81 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@78 $generated@@507 $generated@@2)) (<= 0 ($generated@@340 $generated@@506))))
 :pattern ( ($generated@@340 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@292 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@291 $generated@@509)) (<= 0 ($generated@@320 $generated@@508))))
 :pattern ( ($generated@@320 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@446 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@446 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@514 ($generated@@446 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@74 ($generated@@446 $generated@@518 $generated@@519)) $generated@@58))
 :pattern ( ($generated@@446 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@454 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@454 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@454 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@454 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@74 ($generated@@454 $generated@@528 $generated@@529)) $generated@@59))
 :pattern ( ($generated@@454 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@186) (= (type $generated@@531) $generated@@186)) (= ($generated@@309 ($generated@@264 $generated@@530 $generated@@531)) $generated@@62))
 :pattern ( ($generated@@264 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@66) (= (type $generated@@535) $generated@@66)) (= ($generated@@532 ($generated@@176 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@176 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= ($generated@@536 ($generated@@176 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@176 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@186) (= (type $generated@@541) $generated@@186)) (= ($generated@@184 ($generated@@264 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@264 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@186) (= (type $generated@@543) $generated@@186)) (= ($generated@@185 ($generated@@264 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@264 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@291 $generated@@186)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@290 $generated@@545) $generated@@546) (forall (($generated@@547 Int) ) (!  (=> (and (<= 0 $generated@@547) (< $generated@@547 ($generated@@320 $generated@@544))) ($generated@@303 ($generated@@381 $generated@@544 $generated@@547) $generated@@545 $generated@@546))
 :pattern ( ($generated@@381 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@290 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@548 ($generated@@77 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@77 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@66)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@66) (= ($generated@@550 ($generated@@273 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@273 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@66) (= ($generated@@74 ($generated@@273 $generated@@553)) $generated@@54))
 :pattern ( ($generated@@273 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@66)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@66) (= ($generated@@554 ($generated@@278 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@278 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@66) (= ($generated@@74 ($generated@@278 $generated@@557)) $generated@@55))
 :pattern ( ($generated@@278 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@66)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@66) (= ($generated@@558 ($generated@@191 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@191 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@66) (= ($generated@@74 ($generated@@191 $generated@@561)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@66)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@562 ($generated@@290 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@290 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@66) (= ($generated@@74 ($generated@@290 $generated@@565)) $generated@@57))
 :pattern ( ($generated@@290 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@254 $generated@@567 ($generated@@327 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@327 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) $generated@@66)) (= ($generated@@173 $generated@@568 ($generated@@446 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@568) $generated@@571))) (and ($generated@@253 ($generated@@83 ($generated@@164 $generated@@568) $generated@@571) $generated@@570) ($generated@@253 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@83 ($generated@@164 $generated@@568) $generated@@571))
 :pattern ( ($generated@@83 ($generated@@141 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@173 $generated@@568 ($generated@@446 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@354 $generated@@186 $generated@@186)) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) $generated@@66)) (= ($generated@@173 $generated@@572 ($generated@@454 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@572) $generated@@575))) (and ($generated@@253 ($generated@@83 ($generated@@429 $generated@@572) $generated@@575) $generated@@574) ($generated@@253 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@83 ($generated@@429 $generated@@572) $generated@@575))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@173 $generated@@572 ($generated@@454 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@186) (= (type $generated@@579) $generated@@186)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@264 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@264 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@186) (= (type $generated@@581) $generated@@186)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@264 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@264 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@186) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@446 $generated@@583 $generated@@584))) (and (= ($generated@@327 ($generated@@254 ($generated@@143 $generated@@186 $generated@@186) $generated@@582)) $generated@@582) ($generated@@173 ($generated@@254 ($generated@@143 $generated@@186 $generated@@186) $generated@@582) ($generated@@446 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@446 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@186) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@454 $generated@@586 $generated@@587))) (and (= ($generated@@327 ($generated@@254 ($generated@@354 $generated@@186 $generated@@186) $generated@@585)) $generated@@585) ($generated@@173 ($generated@@254 ($generated@@354 $generated@@186 $generated@@186) $generated@@585) ($generated@@454 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@454 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@186)) ($generated@@253 $generated@@590 ($generated@@176 $generated@@588 $generated@@589))) (and (= ($generated@@327 ($generated@@254 $generated@@177 $generated@@590)) $generated@@590) ($generated@@173 ($generated@@254 $generated@@177 $generated@@590) ($generated@@176 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@176 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@83 ($generated@@478 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@83 ($generated@@478 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@593) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@594) ($generated@@78 $generated@@186 $generated@@186))) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@186) ($generated@@0 ($generated@@83 $generated@@593 $generated@@597))) (and ($generated@@253 $generated@@597 $generated@@595) ($generated@@253 ($generated@@83 $generated@@594 $generated@@597) $generated@@596)))
 :no-pattern (type $generated@@597)
 :no-pattern ($generated $generated@@597)
 :no-pattern ($generated@@0 $generated@@597)
))) ($generated@@173 ($generated@@142 $generated@@593 $generated@@594 ($generated@@446 $generated@@595 $generated@@596)) ($generated@@446 $generated@@595 $generated@@596)))
 :pattern ( ($generated@@142 $generated@@593 $generated@@594 ($generated@@446 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@71)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@66) (= (type $generated@@601) $generated@@66)) (and (= ($generated@@74 ($generated@@176 $generated@@600 $generated@@601)) $generated@@63) (= ($generated@@598 ($generated@@176 $generated@@600 $generated@@601)) $generated@@65)))
 :pattern ( ($generated@@176 $generated@@600 $generated@@601))
)))
(assert  (and (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@292 (type $generated@@604))))
(= (type ($generated@@602 $generated@@604)) ($generated@@291 $generated@@605)))
 :pattern ( ($generated@@602 $generated@@604))
)) (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@292 (type $generated@@606))))
(= (type ($generated@@603 $generated@@606)) $generated@@607))
 :pattern ( ($generated@@603 $generated@@606))
))))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (=> (= (type $generated@@608) ($generated@@291 $generated@@610)) (and (= ($generated@@602 ($generated@@289 $generated@@608 $generated@@609)) $generated@@608) (= ($generated@@603 ($generated@@289 $generated@@608 $generated@@609)) $generated@@609))))
 :pattern ( ($generated@@289 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@145 (type $generated@@611))))
(let (($generated@@614 ($generated@@144 (type $generated@@611))))
 (=> (and (= (type $generated@@611) ($generated@@143 $generated@@614 $generated@@613)) (= (type $generated@@612) ($generated@@143 $generated@@614 $generated@@613))) (= ($generated@@462 $generated@@611 $generated@@612)  (and (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@614) (= ($generated@@0 ($generated@@83 ($generated@@141 $generated@@611) $generated@@615)) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@612) $generated@@615))))
 :no-pattern (type $generated@@615)
 :no-pattern ($generated $generated@@615)
 :no-pattern ($generated@@0 $generated@@615)
)) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@614) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@611) $generated@@616))) (= ($generated@@83 ($generated@@164 $generated@@611) $generated@@616) ($generated@@83 ($generated@@164 $generated@@612) $generated@@616)))
 :no-pattern (type $generated@@616)
 :no-pattern ($generated $generated@@616)
 :no-pattern ($generated@@0 $generated@@616)
)))))))
 :pattern ( ($generated@@462 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@177) (= ($generated@@576 ($generated@@327 $generated@@617)) ($generated@@577 $generated@@617)))
 :pattern ( ($generated@@576 ($generated@@327 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@186) ($generated@@253 $generated@@618 ($generated@@77 0))) (and (= ($generated@@327 ($generated@@254 $generated@@2 $generated@@618)) $generated@@618) ($generated@@173 ($generated@@254 ($generated@@78 $generated@@186 $generated@@4) $generated@@618) ($generated@@77 0))))
 :pattern ( ($generated@@253 $generated@@618 ($generated@@77 0)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@186) (= (type $generated@@620) $generated@@66)) ($generated@@253 $generated@@619 ($generated@@273 $generated@@620))) (and (= ($generated@@327 ($generated@@254 ($generated@@78 $generated@@186 $generated@@4) $generated@@619)) $generated@@619) ($generated@@173 ($generated@@254 ($generated@@78 $generated@@186 $generated@@4) $generated@@619) ($generated@@273 $generated@@620))))
 :pattern ( ($generated@@253 $generated@@619 ($generated@@273 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@186) (= (type $generated@@622) $generated@@66)) ($generated@@253 $generated@@621 ($generated@@278 $generated@@622))) (and (= ($generated@@327 ($generated@@254 ($generated@@78 $generated@@186 $generated@@4) $generated@@621)) $generated@@621) ($generated@@173 ($generated@@254 ($generated@@78 $generated@@186 $generated@@4) $generated@@621) ($generated@@278 $generated@@622))))
 :pattern ( ($generated@@253 $generated@@621 ($generated@@278 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@186) (= (type $generated@@624) $generated@@66)) ($generated@@253 $generated@@623 ($generated@@191 $generated@@624))) (and (= ($generated@@327 ($generated@@254 ($generated@@78 $generated@@186 $generated@@2) $generated@@623)) $generated@@623) ($generated@@173 ($generated@@254 ($generated@@78 $generated@@186 $generated@@2) $generated@@623) ($generated@@191 $generated@@624))))
 :pattern ( ($generated@@253 $generated@@623 ($generated@@191 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@186) (= (type $generated@@626) $generated@@66)) ($generated@@253 $generated@@625 ($generated@@290 $generated@@626))) (and (= ($generated@@327 ($generated@@254 ($generated@@291 $generated@@186) $generated@@625)) $generated@@625) ($generated@@173 ($generated@@254 ($generated@@291 $generated@@186) $generated@@625) ($generated@@290 $generated@@626))))
 :pattern ( ($generated@@253 $generated@@625 ($generated@@290 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@81 (type $generated@@628))))
 (=> (and (= (type $generated@@628) ($generated@@78 $generated@@630 $generated@@4)) (= (type $generated@@629) ($generated@@78 $generated@@630 $generated@@4))) (= ($generated@@627 $generated@@628 $generated@@629) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@630) ($generated@@0 ($generated@@83 $generated@@628 $generated@@631))) ($generated@@0 ($generated@@83 $generated@@629 $generated@@631)))
 :pattern ( ($generated@@83 $generated@@628 $generated@@631))
 :pattern ( ($generated@@83 $generated@@629 $generated@@631))
)))))
 :pattern ( ($generated@@627 $generated@@628 $generated@@629))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@598 $generated@@138) $generated@@64))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@78 $generated@@186 $generated@@2)) (= (type $generated@@633) $generated@@66)) (= (type $generated@@634) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@632 ($generated@@191 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@186) (< 0 ($generated ($generated@@83 $generated@@632 $generated@@635)))) ($generated@@303 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@83 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@76 $generated@@632 ($generated@@191 $generated@@633) $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@177) (= (type $generated@@637) $generated@@66)) (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@302 $generated@@638) (and ($generated@@175 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@66) ($generated@@76 $generated@@636 ($generated@@176 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@76 $generated@@636 ($generated@@176 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@303 ($generated@@184 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@303 ($generated@@184 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@177) (= (type $generated@@641) $generated@@66)) (= (type $generated@@642) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@302 $generated@@642) (and ($generated@@175 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@66) ($generated@@76 $generated@@640 ($generated@@176 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@76 $generated@@640 ($generated@@176 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@303 ($generated@@185 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@303 ($generated@@185 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 Int) ) (! (let (($generated@@647 ($generated@@292 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@291 $generated@@647)) (= (type $generated@@645) ($generated@@291 $generated@@647))) (and (=> (< $generated@@646 ($generated@@320 $generated@@644)) (= ($generated@@381 ($generated@@370 $generated@@644 $generated@@645) $generated@@646) ($generated@@381 $generated@@644 $generated@@646))) (=> (<= ($generated@@320 $generated@@644) $generated@@646) (= ($generated@@381 ($generated@@370 $generated@@644 $generated@@645) $generated@@646) ($generated@@381 $generated@@645 (- $generated@@646 ($generated@@320 $generated@@644))))))))
 :pattern ( ($generated@@381 ($generated@@370 $generated@@644 $generated@@645) $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@186) (= (type $generated@@649) $generated@@186)) (= ($generated@@264 ($generated@@285 $generated@@648) ($generated@@285 $generated@@649)) ($generated@@285 ($generated@@264 $generated@@648 $generated@@649))))
 :pattern ( ($generated@@264 ($generated@@285 $generated@@648) ($generated@@285 $generated@@649)))
)))
(assert (forall (($generated@@650 Int) ) (! (= ($generated@@327 ($generated@@8 ($generated@@283 $generated@@650))) ($generated@@285 ($generated@@327 ($generated@@8 $generated@@650))))
 :pattern ( ($generated@@327 ($generated@@8 ($generated@@283 $generated@@650))))
)))
(assert (forall (($generated@@651 T@U) ) (! (= ($generated@@327 ($generated@@285 $generated@@651)) ($generated@@285 ($generated@@327 $generated@@651)))
 :pattern ( ($generated@@327 ($generated@@285 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@292 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@291 $generated@@653)) (= ($generated@@320 $generated@@652) 0)) (= $generated@@652 ($generated@@319 $generated@@653))))
 :pattern ( ($generated@@320 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@655)))
 (=> (and (and (= (type $generated@@654) ($generated@@78 $generated@@657 $generated@@2)) (= (type $generated@@656) $generated@@2)) (<= 0 ($generated $generated@@656))) (= ($generated@@340 ($generated@@84 $generated@@654 $generated@@655 $generated@@656)) (+ (- ($generated@@340 $generated@@654) ($generated ($generated@@83 $generated@@654 $generated@@655))) ($generated $generated@@656)))))
 :pattern ( ($generated@@340 ($generated@@84 $generated@@654 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@659) $generated@@2)) ($generated@@76 $generated@@659 $generated@@46 $generated@@658))
 :pattern ( ($generated@@76 $generated@@659 $generated@@46 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@661) $generated@@3)) ($generated@@76 $generated@@661 $generated@@47 $generated@@660))
 :pattern ( ($generated@@76 $generated@@661 $generated@@47 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@663) $generated@@4)) ($generated@@76 $generated@@663 $generated@@44 $generated@@662))
 :pattern ( ($generated@@76 $generated@@663 $generated@@44 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@665) $generated@@502)) ($generated@@76 $generated@@665 $generated@@45 $generated@@664))
 :pattern ( ($generated@@76 $generated@@665 $generated@@45 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@667) $generated@@186)) ($generated@@76 $generated@@667 $generated@@48 $generated@@666))
 :pattern ( ($generated@@76 $generated@@667 $generated@@48 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@291 $generated@@186)) (= (type $generated@@669) $generated@@66)) (= ($generated@@173 $generated@@668 ($generated@@290 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@320 $generated@@668))) ($generated@@253 ($generated@@381 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@381 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@173 $generated@@668 ($generated@@290 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@291 $generated@@186)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@320 $generated@@672))) (< ($generated@@577 ($generated@@254 $generated@@177 ($generated@@381 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@577 ($generated@@254 $generated@@177 ($generated@@381 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@675) $generated@@66)) (= (type $generated@@676) $generated@@66)) ($generated@@173 $generated@@674 ($generated@@446 $generated@@675 $generated@@676))) (and (and ($generated@@173 ($generated@@141 $generated@@674) ($generated@@273 $generated@@675)) ($generated@@173 ($generated@@393 $generated@@674) ($generated@@273 $generated@@676))) ($generated@@173 ($generated@@424 $generated@@674) ($generated@@273 ($generated@@176 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@173 $generated@@674 ($generated@@446 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@354 $generated@@186 $generated@@186)) (= (type $generated@@678) $generated@@66)) (= (type $generated@@679) $generated@@66)) ($generated@@173 $generated@@677 ($generated@@454 $generated@@678 $generated@@679))) (and (and ($generated@@173 ($generated@@352 $generated@@677) ($generated@@278 $generated@@678)) ($generated@@173 ($generated@@404 $generated@@677) ($generated@@278 $generated@@679))) ($generated@@173 ($generated@@428 $generated@@677) ($generated@@278 ($generated@@176 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@173 $generated@@677 ($generated@@454 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@173 $generated@@680 $generated@@46))
 :pattern ( ($generated@@173 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@173 $generated@@681 $generated@@47))
 :pattern ( ($generated@@173 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@173 $generated@@682 $generated@@44))
 :pattern ( ($generated@@173 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@502) ($generated@@173 $generated@@683 $generated@@45))
 :pattern ( ($generated@@173 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@186) ($generated@@173 $generated@@684 $generated@@48))
 :pattern ( ($generated@@173 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@685) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@686) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@688) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@689) ($generated@@291 $generated@@186))) (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@691) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@693) ($generated@@291 $generated@@186))) (= (type $generated@@694) $generated@@79)) (= (type $generated@@698) ($generated@@198 $generated@@79 $generated@@4))) (= (type $generated@@699) ($generated@@291 $generated@@186))) (= (type $generated@@701) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@702) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@703) ($generated@@291 $generated@@186))) (= (type $generated@@704) ($generated@@291 $generated@@186))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@706  (=> (= $generated@@685 ($generated@@142 ($generated@@467 $generated@@138 ($generated@@141 $generated@@686) $generated@@687) ($generated@@312 ($generated@@164 $generated@@686)) ($generated@@446 $generated@@138 $generated@@46))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@173 $generated@@688 ($generated@@446 $generated@@138 $generated@@46))) (=> ($generated@@173 $generated@@688 ($generated@@446 $generated@@138 $generated@@46)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and ($generated@@627 ($generated@@141 $generated@@688) ($generated@@141 $generated@@686)) (not ($generated@@627 ($generated@@141 $generated@@686) ($generated@@141 $generated@@688))))) (=> (and ($generated@@627 ($generated@@141 $generated@@688) ($generated@@141 $generated@@686)) (not ($generated@@627 ($generated@@141 $generated@@686) ($generated@@141 $generated@@688)))) (=> (and (and ($generated@@173 $generated@@689 ($generated@@290 $generated@@138)) ($generated@@76 $generated@@689 ($generated@@290 $generated@@138) $generated@@690)) (and ($generated@@302 $generated@@691) ($generated@@692 $generated@@691))) (=> (and (and (and ($generated@@173 $generated@@693 ($generated@@290 $generated@@138)) ($generated@@76 $generated@@693 ($generated@@290 $generated@@138) $generated@@691)) (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@79) (=> (and (not (= $generated@@707 $generated@@694)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@690 $generated@@707) $generated@@60))) (= ($generated@@83 $generated@@691 $generated@@707) ($generated@@83 $generated@@690 $generated@@707))))
 :pattern ( ($generated@@83 $generated@@691 $generated@@707))
))) (and ($generated@@134 $generated@@690 $generated@@691) (= (ControlFlow 0 4) (- 0 3)))) (and ($generated@@627 ($generated@@141 $generated@@685) ($generated@@141 $generated@@686)) (not ($generated@@627 ($generated@@141 $generated@@686) ($generated@@141 $generated@@685)))))))))))))
(let (($generated@@708  (=> (and (not (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@695)))) (< $generated@@687 $generated@@695))) (= (ControlFlow 0 10) 4)) $generated@@706)))
(let (($generated@@709  (=> (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@695)))) (< $generated@@687 $generated@@695)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@695))))) (=> ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@695)))) (=> (= (ControlFlow 0 8) 4) $generated@@706))))))
(let (($generated@@710  (=> (not ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@695))))) (and (=> (= (ControlFlow 0 12) 8) $generated@@709) (=> (= (ControlFlow 0 12) 10) $generated@@708)))))
(let (($generated@@711  (=> ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@695)))) (and (=> (= (ControlFlow 0 11) 8) $generated@@709) (=> (= (ControlFlow 0 11) 10) $generated@@708)))))
(let (($generated@@712  (=> (<= ($generated@@283 0) $generated@@695) (and (=> (= (ControlFlow 0 13) 11) $generated@@711) (=> (= (ControlFlow 0 13) 12) $generated@@710)))))
(let (($generated@@713  (=> (and (< $generated@@695 ($generated@@283 0)) (= (ControlFlow 0 7) 4)) $generated@@706)))
(let (($generated@@714  (=> (= $generated@@688 ($generated@@142 ($generated@@252 $generated@@46 ($generated@@141 $generated@@686) $generated@@687) ($generated@@312 ($generated@@164 $generated@@686)) ($generated@@446 $generated@@46 $generated@@46))) (and (=> (= (ControlFlow 0 14) 13) $generated@@712) (=> (= (ControlFlow 0 14) 7) $generated@@713)))))
(let (($generated@@715  (=> (and (not (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@696)))) (< $generated@@696 $generated@@687))) (= (ControlFlow 0 17) 14)) $generated@@714)))
(let (($generated@@716  (=> (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@696)))) (< $generated@@696 $generated@@687)) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@696))))) (=> ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@696)))) (=> (= (ControlFlow 0 15) 14) $generated@@714))))))
(let (($generated@@717  (=> (not ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@696))))) (and (=> (= (ControlFlow 0 19) 15) $generated@@716) (=> (= (ControlFlow 0 19) 17) $generated@@715)))))
(let (($generated@@718  (=> ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@696)))) (and (=> (= (ControlFlow 0 18) 15) $generated@@716) (=> (= (ControlFlow 0 18) 17) $generated@@715)))))
(let (($generated@@719  (and (=> (= (ControlFlow 0 20) 18) $generated@@718) (=> (= (ControlFlow 0 20) 19) $generated@@717))))
(let (($generated@@720 true))
(let (($generated@@721  (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (and ($generated@@173 ($generated@@8 ($generated@@283 0)) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 ($generated@@283 0)))))) (or (and ($generated@@173 ($generated@@8 ($generated@@283 0)) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 ($generated@@283 0)))))) (exists (($generated@@722 T@U) ) (!  (and (= (type $generated@@722) $generated@@2) (and (<= ($generated@@283 0) ($generated $generated@@722)) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 $generated@@722)))))
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
))))) (=> (or (and ($generated@@173 ($generated@@8 ($generated@@283 0)) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 ($generated@@283 0)))))) (or (and ($generated@@173 ($generated@@8 ($generated@@283 0)) $generated@@138) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 ($generated@@283 0)))))) (exists (($generated@@723 Int) )  (and (<= ($generated@@283 0) $generated@@723) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@723)))))))) (=> (and (<= ($generated@@283 0) $generated@@687) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@686) ($generated@@327 ($generated@@8 $generated@@687))))) (and (=> (= (ControlFlow 0 21) 20) $generated@@719) (=> (= (ControlFlow 0 21) 2) $generated@@720)))))))
(let (($generated@@724  (=> (and (< $generated@@697 ($generated@@283 0)) (= (ControlFlow 0 24) 21)) $generated@@721)))
(let (($generated@@725  (=> (and (<= ($generated@@283 0) $generated@@697) (= (ControlFlow 0 23) 21)) $generated@@721)))
(let (($generated@@726  (=> (not ($generated@@462 $generated@@686 ($generated@@346 $generated@@186 $generated@@186))) (and (=> (= (ControlFlow 0 25) 23) $generated@@725) (=> (= (ControlFlow 0 25) 24) $generated@@724)))))
(let (($generated@@727 true))
(let (($generated@@728  (=> (= $generated@@698 ($generated@@197 $generated@@694 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 26) 1) $generated@@727) (=> (= (ControlFlow 0 26) 25) $generated@@726)))))
(let (($generated@@729  (=> (and (and ($generated@@302 $generated@@690) ($generated@@692 $generated@@690)) (and ($generated@@173 $generated@@686 ($generated@@446 $generated@@138 $generated@@46)) ($generated@@76 $generated@@686 ($generated@@446 $generated@@138 $generated@@46) $generated@@690))) (=> (and (and (and ($generated@@173 $generated@@699 ($generated@@290 $generated@@138)) ($generated@@76 $generated@@699 ($generated@@290 $generated@@138) $generated@@690)) (and (<= ($generated@@283 0) $generated@@700) true)) (and (and ($generated@@173 $generated@@701 ($generated@@446 $generated@@46 $generated@@46)) ($generated@@76 $generated@@701 ($generated@@446 $generated@@46 $generated@@46) $generated@@690)) true)) (=> (and (and (and (and ($generated@@173 $generated@@702 ($generated@@446 $generated@@138 $generated@@46)) ($generated@@76 $generated@@702 ($generated@@446 $generated@@138 $generated@@46) $generated@@690)) true) (and (and ($generated@@173 $generated@@703 ($generated@@290 $generated@@138)) ($generated@@76 $generated@@703 ($generated@@290 $generated@@138) $generated@@690)) true)) (and (and (and ($generated@@173 $generated@@704 ($generated@@290 $generated@@138)) ($generated@@76 $generated@@704 ($generated@@290 $generated@@138) $generated@@690)) true) (and (= 1 $generated@@705) (= (ControlFlow 0 27) 26)))) $generated@@728)))))
$generated@@729))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
