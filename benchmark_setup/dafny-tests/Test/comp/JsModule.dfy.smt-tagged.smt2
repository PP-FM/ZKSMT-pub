(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@265 (Int) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 () T@T)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U Int) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert  (and (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 17)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@252 $generated@@258 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@252 $generated@@258 $generated@@259))
))) (forall (($generated@@261 T@U) ) (! (= (type ($generated@@253 $generated@@261)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) ($generated@@254 $generated@@156)) (= (type $generated@@263) $generated@@156)) (= (type $generated@@264) $generated@@67)) (and ($generated@@143 $generated@@262 ($generated@@253 $generated@@264)) ($generated@@229 $generated@@263 $generated@@264))) ($generated@@143 ($generated@@252 $generated@@262 $generated@@263) ($generated@@253 $generated@@264)))
 :pattern ( ($generated@@143 ($generated@@252 $generated@@262 $generated@@263) ($generated@@253 $generated@@264)))
)))
(assert  (and (= ($generated@@1 $generated@@267) 18) (forall (($generated@@268 Int) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert (forall (($generated@@269 Int) ) (!  (=> (and (<= 0 $generated@@269) (< $generated@@269 65536)) (= ($generated@@266 ($generated@@265 $generated@@269)) $generated@@269))
 :pattern ( ($generated@@265 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@67) (= (type $generated@@273) $generated@@67)) (= (type $generated@@274) $generated@@156)) (= (type $generated@@275) $generated@@156)) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@270 $generated@@276)) (= ($generated@@77 ($generated@@228 $generated@@274 $generated@@275) ($generated@@146 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@274 $generated@@275) ($generated@@146 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@71)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@147) (= ($generated@@145 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@147) ($generated@@145 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@156) (= (type $generated@@282) $generated@@156)) (= $generated@@280 ($generated@@228 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@145 $generated@@280))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@283 $generated@@285)) ($generated@@254 $generated@@285))
 :pattern ( ($generated@@283 $generated@@285))
)))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) 0)
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (! (let (($generated@@289 (type $generated@@288)))
 (=> (= (type $generated@@287) ($generated@@254 $generated@@289)) (= ($generated@@284 ($generated@@252 $generated@@287 $generated@@288)) (+ 1 ($generated@@284 $generated@@287)))))
 :pattern ( ($generated@@252 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@267) (and (and (= ($generated@@265 ($generated@@266 $generated@@290)) $generated@@290) (<= 0 ($generated@@266 $generated@@290))) (< ($generated@@266 $generated@@290) 65536)))
 :pattern ( ($generated@@266 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@156)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@67) (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@77 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@271 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@297) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@156)) (= (type $generated@@299) $generated@@67)) ($generated@@135 $generated@@296 $generated@@297)) ($generated@@271 $generated@@298 $generated@@299 $generated@@296)) ($generated@@271 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@135 $generated@@296 $generated@@297) ($generated@@271 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@301) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@303) $generated@@67)) ($generated@@135 $generated@@300 $generated@@301)) ($generated@@77 $generated@@302 $generated@@303 $generated@@300)) ($generated@@77 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@135 $generated@@300 $generated@@301) ($generated@@77 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@79 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@82 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@79 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@84 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 20)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@79 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@84 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@82 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@79 $generated@@347 $generated@@2)) (= ($generated@@162 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@84 $generated@@346 $generated@@348))) (<= ($generated ($generated@@84 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@84 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@162 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@156) ($generated@@229 $generated@@352 $generated@@225)) (and (= ($generated@@291 ($generated@@349 $generated@@80 $generated@@352)) $generated@@352) ($generated@@143 ($generated@@349 $generated@@80 $generated@@352) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@352 $generated@@225))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@156) ($generated@@229 $generated@@353 $generated@@139)) (and (= ($generated@@291 ($generated@@349 $generated@@80 $generated@@353)) $generated@@353) ($generated@@143 ($generated@@349 $generated@@80 $generated@@353) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@353 $generated@@139))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (= (type $generated@@354) $generated@@80) (= ($generated@@143 $generated@@354 $generated@@225)  (and ($generated@@143 $generated@@354 $generated@@139) (not (= $generated@@354 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@354 $generated@@225))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 Int) ) (! (let (($generated@@358 ($generated@@255 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@358))
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 Int) ($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
 (=> (= (type $generated@@359) ($generated@@254 $generated@@362)) (and (=> (= $generated@@360 ($generated@@284 $generated@@359)) (= ($generated@@355 ($generated@@252 $generated@@359 $generated@@361) $generated@@360) $generated@@361)) (=> (not (= $generated@@360 ($generated@@284 $generated@@359))) (= ($generated@@355 ($generated@@252 $generated@@359 $generated@@361) $generated@@360) ($generated@@355 $generated@@359 $generated@@360))))))
 :pattern ( ($generated@@355 ($generated@@252 $generated@@359 $generated@@361) $generated@@360))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@314 (type $generated@@363))))
(let (($generated@@365 ($generated@@313 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@312 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@311 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@310 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@314 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@79 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@314 (type $generated@@370))))
(let (($generated@@372 ($generated@@313 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@312 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@311 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@84 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@332 (type $generated@@374))))
(let (($generated@@376 ($generated@@331 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@330 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@329 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@328 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@332 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@79 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@332 (type $generated@@381))))
(let (($generated@@383 ($generated@@331 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@330 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@329 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@84 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@386) $generated@@67)) (= ($generated@@143 $generated@@385 ($generated@@161 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@385 $generated@@387)))) ($generated@@229 $generated@@387 $generated@@386))
 :pattern ( ($generated@@84 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@143 $generated@@385 ($generated@@161 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@389) $generated@@67)) (= (type $generated@@390) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@388 ($generated@@238 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@156) ($generated@@0 ($generated@@84 $generated@@388 $generated@@391))) ($generated@@271 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@84 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@77 $generated@@388 ($generated@@238 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@393) $generated@@67)) (= (type $generated@@394) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@392 ($generated@@243 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@156) ($generated@@0 ($generated@@84 $generated@@392 $generated@@395))) ($generated@@271 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@84 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@77 $generated@@392 ($generated@@243 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@84 ($generated@@305 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@84 ($generated@@305 $generated@@397) $generated@@396)))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@314 (type $generated@@401))))
(let (($generated@@403 ($generated@@313 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@79 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@405) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@404) ($generated@@154 ($generated@@349 $generated@@147 $generated@@405)))) (= ($generated@@84 ($generated@@399 $generated@@404) ($generated@@154 ($generated@@349 $generated@@147 $generated@@405))) ($generated@@155 ($generated@@349 $generated@@147 $generated@@405))))))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@332 (type $generated@@409))))
(let (($generated@@411 ($generated@@331 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@79 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@330 $generated@@156 $generated@@156)) (= (type $generated@@413) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@412) ($generated@@154 ($generated@@349 $generated@@147 $generated@@413)))) (= ($generated@@84 ($generated@@407 $generated@@412) ($generated@@154 ($generated@@349 $generated@@147 $generated@@413))) ($generated@@155 ($generated@@349 $generated@@147 $generated@@413))))))
 :pattern ( ($generated@@84 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@313 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@312 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@84 ($generated@@367 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@84 ($generated@@399 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@414) $generated@@418))
 :pattern ( ($generated@@84 ($generated@@399 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@331 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@330 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@84 ($generated@@378 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@84 ($generated@@328 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@84 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@419) $generated@@423))
 :pattern ( ($generated@@84 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@67)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) $generated@@67)) (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@427) $generated@@431))) (and ($generated@@271 ($generated@@84 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@271 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@84 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@77 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@67)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@330 $generated@@156 $generated@@156)) (= (type $generated@@436) $generated@@67)) (= (type $generated@@437) $generated@@67)) (= (type $generated@@438) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@435) $generated@@439))) (and ($generated@@271 ($generated@@84 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@271 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@84 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@77 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@440) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@441) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@442) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@440 $generated@@442))) (and ($generated@@135 $generated@@440 $generated@@441) ($generated@@135 $generated@@441 $generated@@442))) ($generated@@135 $generated@@440 $generated@@442))
 :pattern ( ($generated@@135 $generated@@440 $generated@@441) ($generated@@135 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@79 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@328 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@328 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@378 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@378 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@332 (type $generated@@451))))
(let (($generated@@453 ($generated@@331 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@330 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@329 $generated@@453 $generated@@452)) (= ($generated@@406 $generated@@451) ($generated@@443 $generated@@156))))))
 :pattern ( ($generated@@406 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@314 (type $generated@@454))))
(let (($generated@@456 ($generated@@313 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@312 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@311 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@156) (= (type $generated@@458) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@398 $generated@@454) ($generated@@291 ($generated@@228 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@398 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@332 (type $generated@@459))))
(let (($generated@@461 ($generated@@331 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@330 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@329 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@156) (= (type $generated@@463) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@406 $generated@@459) ($generated@@291 ($generated@@228 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@406 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@156) ($generated@@229 $generated@@464 $generated@@46)) (and (= ($generated@@291 ($generated@@349 $generated@@2 $generated@@464)) $generated@@464) ($generated@@143 ($generated@@349 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@156) ($generated@@229 $generated@@465 $generated@@47)) (and (= ($generated@@291 ($generated@@349 $generated@@3 $generated@@465)) $generated@@465) ($generated@@143 ($generated@@349 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@156) ($generated@@229 $generated@@466 $generated@@44)) (and (= ($generated@@291 ($generated@@349 $generated@@4 $generated@@466)) $generated@@466) ($generated@@143 ($generated@@349 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@466 $generated@@44))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@156) ($generated@@229 $generated@@467 $generated@@45)) (and (= ($generated@@291 ($generated@@349 $generated@@267 $generated@@467)) $generated@@467) ($generated@@143 ($generated@@349 $generated@@267 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@67) (= ($generated@@229 ($generated@@291 $generated@@468) $generated@@469) ($generated@@143 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@229 ($generated@@291 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@82 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@79 $generated@@471 $generated@@2)) (<= 0 ($generated@@304 $generated@@470))))
 :pattern ( ($generated@@304 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@255 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@254 $generated@@473)) (<= 0 ($generated@@284 $generated@@472))))
 :pattern ( ($generated@@284 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@474 ($generated@@424 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@424 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@67) (= (type $generated@@481) $generated@@67)) (= ($generated@@478 ($generated@@424 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@424 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@75 ($generated@@424 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@432 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@432 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@432 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@75 ($generated@@432 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@156) (= (type $generated@@495) $generated@@156)) (= ($generated@@277 ($generated@@228 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@496 ($generated@@146 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@146 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@146 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@146 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@156) (= (type $generated@@505) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@228 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@156) (= (type $generated@@507) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@228 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@254 $generated@@156)) (= (type $generated@@509) $generated@@67)) (= (type $generated@@510) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@508 ($generated@@253 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@284 $generated@@508))) ($generated@@271 ($generated@@355 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@355 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@77 $generated@@508 ($generated@@253 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@78 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@78 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@67)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@514 ($generated@@238 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@238 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@518 ($generated@@243 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@243 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@522 ($generated@@161 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@161 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@67)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@67) (= ($generated@@526 ($generated@@253 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@253 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@253 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@349 $generated@@531 ($generated@@291 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@291 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) (= ($generated@@143 $generated@@532 ($generated@@424 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@532) $generated@@535))) (and ($generated@@229 ($generated@@84 ($generated@@399 $generated@@532) $generated@@535) $generated@@534) ($generated@@229 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@84 ($generated@@399 $generated@@532) $generated@@535))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@143 $generated@@532 ($generated@@424 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@330 $generated@@156 $generated@@156)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@143 $generated@@536 ($generated@@432 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@328 $generated@@536) $generated@@539))) (and ($generated@@229 ($generated@@84 ($generated@@407 $generated@@536) $generated@@539) $generated@@538) ($generated@@229 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@407 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@328 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@143 $generated@@536 ($generated@@432 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@156) (= (type $generated@@543) $generated@@156)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@228 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@228 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@156)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@228 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@228 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@424 $generated@@547 $generated@@548))) (and (= ($generated@@291 ($generated@@349 ($generated@@312 $generated@@156 $generated@@156) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@349 ($generated@@312 $generated@@156 $generated@@156) $generated@@546) ($generated@@424 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@424 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@67)) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@549 ($generated@@432 $generated@@550 $generated@@551))) (and (= ($generated@@291 ($generated@@349 ($generated@@330 $generated@@156 $generated@@156) $generated@@549)) $generated@@549) ($generated@@143 ($generated@@349 ($generated@@330 $generated@@156 $generated@@156) $generated@@549) ($generated@@432 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@432 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@67) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@156)) ($generated@@229 $generated@@554 ($generated@@146 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@349 $generated@@147 $generated@@554)) $generated@@554) ($generated@@143 ($generated@@349 $generated@@147 $generated@@554) ($generated@@146 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@146 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@84 ($generated@@443 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@84 ($generated@@443 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@72)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@67) (= (type $generated@@560) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@146 $generated@@559 $generated@@560)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@559 $generated@@560))
)))
(assert  (and (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@255 (type $generated@@563))))
(= (type ($generated@@561 $generated@@563)) ($generated@@254 $generated@@564)))
 :pattern ( ($generated@@561 $generated@@563))
)) (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@255 (type $generated@@565))))
(= (type ($generated@@562 $generated@@565)) $generated@@566))
 :pattern ( ($generated@@562 $generated@@565))
))))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (=> (= (type $generated@@567) ($generated@@254 $generated@@569)) (and (= ($generated@@561 ($generated@@252 $generated@@567 $generated@@568)) $generated@@567) (= ($generated@@562 ($generated@@252 $generated@@567 $generated@@568)) $generated@@568))))
 :pattern ( ($generated@@252 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@147) (= ($generated@@540 ($generated@@291 $generated@@570)) ($generated@@541 $generated@@570)))
 :pattern ( ($generated@@540 ($generated@@291 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@156) ($generated@@229 $generated@@571 ($generated@@78 0))) (and (= ($generated@@291 ($generated@@349 $generated@@2 $generated@@571)) $generated@@571) ($generated@@143 ($generated@@349 ($generated@@79 $generated@@156 $generated@@4) $generated@@571) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@571 ($generated@@78 0)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@156) (= (type $generated@@573) $generated@@67)) ($generated@@229 $generated@@572 ($generated@@238 $generated@@573))) (and (= ($generated@@291 ($generated@@349 ($generated@@79 $generated@@156 $generated@@4) $generated@@572)) $generated@@572) ($generated@@143 ($generated@@349 ($generated@@79 $generated@@156 $generated@@4) $generated@@572) ($generated@@238 $generated@@573))))
 :pattern ( ($generated@@229 $generated@@572 ($generated@@238 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@156) (= (type $generated@@575) $generated@@67)) ($generated@@229 $generated@@574 ($generated@@243 $generated@@575))) (and (= ($generated@@291 ($generated@@349 ($generated@@79 $generated@@156 $generated@@4) $generated@@574)) $generated@@574) ($generated@@143 ($generated@@349 ($generated@@79 $generated@@156 $generated@@4) $generated@@574) ($generated@@243 $generated@@575))))
 :pattern ( ($generated@@229 $generated@@574 ($generated@@243 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@156) (= (type $generated@@577) $generated@@67)) ($generated@@229 $generated@@576 ($generated@@161 $generated@@577))) (and (= ($generated@@291 ($generated@@349 ($generated@@79 $generated@@156 $generated@@2) $generated@@576)) $generated@@576) ($generated@@143 ($generated@@349 ($generated@@79 $generated@@156 $generated@@2) $generated@@576) ($generated@@161 $generated@@577))))
 :pattern ( ($generated@@229 $generated@@576 ($generated@@161 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@156) (= (type $generated@@579) $generated@@67)) ($generated@@229 $generated@@578 ($generated@@253 $generated@@579))) (and (= ($generated@@291 ($generated@@349 ($generated@@254 $generated@@156) $generated@@578)) $generated@@578) ($generated@@143 ($generated@@349 ($generated@@254 $generated@@156) $generated@@578) ($generated@@253 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@253 $generated@@579)))
)))
(assert (= ($generated@@75 $generated@@225) $generated@@63))
(assert (= ($generated@@557 $generated@@225) $generated@@66))
(assert (= ($generated@@75 $generated@@139) $generated@@64))
(assert (= ($generated@@557 $generated@@139) $generated@@66))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@581) $generated@@67)) (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@580 ($generated@@161 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@580 $generated@@583)))) ($generated@@271 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@84 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@77 $generated@@580 ($generated@@161 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@147) (= (type $generated@@585) $generated@@67)) (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@270 $generated@@586) (and ($generated@@145 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@67) ($generated@@77 $generated@@584 ($generated@@146 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@77 $generated@@584 ($generated@@146 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@271 ($generated@@154 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@271 ($generated@@154 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@147) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@270 $generated@@590) (and ($generated@@145 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@67) ($generated@@77 $generated@@588 ($generated@@146 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@77 $generated@@588 ($generated@@146 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@271 ($generated@@155 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@271 ($generated@@155 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@156) (= (type $generated@@593) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@592) ($generated@@248 $generated@@593)) ($generated@@248 ($generated@@228 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@592) ($generated@@248 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@291 ($generated@@248 $generated@@594)) ($generated@@248 ($generated@@291 $generated@@594)))
 :pattern ( ($generated@@291 ($generated@@248 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@255 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@254 $generated@@596)) (= ($generated@@284 $generated@@595) 0)) (= $generated@@595 ($generated@@283 $generated@@596))))
 :pattern ( ($generated@@284 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@79 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@304 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@304 $generated@@597) ($generated ($generated@@84 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@304 ($generated@@85 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@2)) ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@3)) ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@4)) ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@267)) ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@610) $generated@@156)) ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@77 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@254 $generated@@156)) (= (type $generated@@612) $generated@@67)) (= ($generated@@143 $generated@@611 ($generated@@253 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@284 $generated@@611))) ($generated@@229 ($generated@@355 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@355 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@143 $generated@@611 ($generated@@253 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@254 $generated@@156)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@284 $generated@@615))) (< ($generated@@541 ($generated@@349 $generated@@147 ($generated@@355 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@541 ($generated@@349 $generated@@147 ($generated@@355 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@618) $generated@@67)) (= (type $generated@@619) $generated@@67)) ($generated@@143 $generated@@617 ($generated@@424 $generated@@618 $generated@@619))) (and (and ($generated@@143 ($generated@@310 $generated@@617) ($generated@@238 $generated@@618)) ($generated@@143 ($generated@@367 $generated@@617) ($generated@@238 $generated@@619))) ($generated@@143 ($generated@@398 $generated@@617) ($generated@@238 ($generated@@146 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@143 $generated@@617 ($generated@@424 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@330 $generated@@156 $generated@@156)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@143 $generated@@620 ($generated@@432 $generated@@621 $generated@@622))) (and (and ($generated@@143 ($generated@@328 $generated@@620) ($generated@@243 $generated@@621)) ($generated@@143 ($generated@@378 $generated@@620) ($generated@@243 $generated@@622))) ($generated@@143 ($generated@@406 $generated@@620) ($generated@@243 ($generated@@146 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@143 $generated@@620 ($generated@@432 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@143 $generated@@623 $generated@@46))
 :pattern ( ($generated@@143 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@143 $generated@@624 $generated@@47))
 :pattern ( ($generated@@143 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@143 $generated@@625 $generated@@44))
 :pattern ( ($generated@@143 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@267) ($generated@@143 $generated@@626 $generated@@45))
 :pattern ( ($generated@@143 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@156) ($generated@@143 $generated@@627 $generated@@48))
 :pattern ( ($generated@@143 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@628) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@629) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@630) ($generated@@254 $generated@@156))) (= (type $generated@@632) $generated@@80)) (= (type $generated@@633) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@635) $generated@@80)) (= (type $generated@@636) ($generated@@254 $generated@@156))) (= (type $generated@@638) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@640  (=> (= $generated@@628 ($generated@@170 $generated@@140 $generated@@629 $generated@@60 false)) (=> (and (= $generated@@630 ($generated@@248 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@252 ($generated@@283 $generated@@156) ($generated@@291 ($generated@@265 104))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 112))) ($generated@@291 ($generated@@265 58))) ($generated@@291 ($generated@@265 47))) ($generated@@291 ($generated@@265 47))) ($generated@@291 ($generated@@265 108))) ($generated@@291 ($generated@@265 111))) ($generated@@291 ($generated@@265 99))) ($generated@@291 ($generated@@265 97))) ($generated@@291 ($generated@@265 108))) ($generated@@291 ($generated@@265 104))) ($generated@@291 ($generated@@265 111))) ($generated@@291 ($generated@@265 115))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 58))) ($generated@@291 ($generated@@265 56))) ($generated@@291 ($generated@@265 48))) ($generated@@291 ($generated@@265 56))) ($generated@@291 ($generated@@265 48))) ($generated@@291 ($generated@@265 47))) ($generated@@291 ($generated@@265 100))) ($generated@@291 ($generated@@265 101))) ($generated@@291 ($generated@@265 102))) ($generated@@291 ($generated@@265 97))) ($generated@@291 ($generated@@265 117))) ($generated@@291 ($generated@@265 108))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 46))) ($generated@@291 ($generated@@265 104))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 109))) ($generated@@291 ($generated@@265 63))) ($generated@@291 ($generated@@265 121))) ($generated@@291 ($generated@@265 101))) ($generated@@291 ($generated@@265 97))) ($generated@@291 ($generated@@265 114))) ($generated@@291 ($generated@@265 61))) ($generated@@291 ($generated@@265 49))) ($generated@@291 ($generated@@265 57))) ($generated@@291 ($generated@@265 49))) ($generated@@291 ($generated@@265 53))) ($generated@@291 ($generated@@265 38))) ($generated@@291 ($generated@@265 109))) ($generated@@291 ($generated@@265 111))) ($generated@@291 ($generated@@265 110))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 104))) ($generated@@291 ($generated@@265 61))) ($generated@@291 ($generated@@265 97))) ($generated@@291 ($generated@@265 117))) ($generated@@291 ($generated@@265 103))) ($generated@@291 ($generated@@265 117))) ($generated@@291 ($generated@@265 115))) ($generated@@291 ($generated@@265 116))) ($generated@@291 ($generated@@265 38))) ($generated@@291 ($generated@@265 100))) ($generated@@291 ($generated@@265 97))) ($generated@@291 ($generated@@265 121))) ($generated@@291 ($generated@@265 61))) ($generated@@291 ($generated@@265 50))) ($generated@@291 ($generated@@265 57))))) (= $generated@@631 ($generated@@0 ($generated@@248 ($generated@@11 true))))) (=> (and (and (and ($generated@@143 $generated@@632 $generated@@225) ($generated@@77 $generated@@632 $generated@@225 $generated@@629)) (and ($generated@@270 $generated@@633) ($generated@@634 $generated@@633))) (and (and ($generated@@143 $generated@@635 $generated@@225) ($generated@@77 $generated@@635 $generated@@225 $generated@@633)) (and (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@80) (=> (and (not (= $generated@@641 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@629 $generated@@641) $generated@@60))) (= ($generated@@84 $generated@@633 $generated@@641) ($generated@@84 $generated@@629 $generated@@641))))
 :pattern ( ($generated@@84 $generated@@633 $generated@@641))
)) ($generated@@135 $generated@@629 $generated@@633)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@635 $generated@@140))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@635 $generated@@140))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@635 $generated@@140)))))))))))))
(let (($generated@@642  (=> (and ($generated@@270 $generated@@629) ($generated@@634 $generated@@629)) (=> (and (and (and ($generated@@143 $generated@@636 ($generated@@253 $generated@@45)) ($generated@@77 $generated@@636 ($generated@@253 $generated@@45) $generated@@629)) true) (and (and (=> $generated@@637 (and ($generated@@143 $generated@@638 $generated@@225) ($generated@@77 $generated@@638 $generated@@225 $generated@@629))) true) (and (= 1 $generated@@639) (= (ControlFlow 0 8) 2)))) $generated@@640))))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
