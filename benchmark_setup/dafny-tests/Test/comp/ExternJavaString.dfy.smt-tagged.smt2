(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@U Int) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@282 () Int)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert  (and (and (forall (($generated@@267 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@267)) 17)) (forall (($generated@@268 T@T) ) (! (= ($generated@@263 ($generated@@264 $generated@@268)) $generated@@268)
 :pattern ( ($generated@@264 $generated@@268))
))) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (! (let (($generated@@271 ($generated@@263 (type $generated@@269))))
(= (type ($generated@@266 $generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@266 $generated@@269 $generated@@270))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@263 (type $generated@@272))))
 (=> (and (= (type $generated@@272) ($generated@@264 $generated@@274)) (= (type $generated@@273) ($generated@@264 $generated@@274))) (= ($generated@@262 $generated@@272 $generated@@273)  (and (= ($generated@@265 $generated@@272) ($generated@@265 $generated@@273)) (forall (($generated@@275 Int) ) (!  (=> (and (<= 0 $generated@@275) (< $generated@@275 ($generated@@265 $generated@@272))) (= ($generated@@266 $generated@@272 $generated@@275) ($generated@@266 $generated@@273 $generated@@275)))
 :pattern ( ($generated@@266 $generated@@272 $generated@@275))
 :pattern ( ($generated@@266 $generated@@273 $generated@@275))
))))))
 :pattern ( ($generated@@262 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@147) ($generated@@145 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@156) (= (type $generated@@278) $generated@@156)) (= $generated@@276 ($generated@@228 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@145 $generated@@276))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@264 $generated@@280))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@265 ($generated@@279 $generated@@281)) 0)
 :pattern ( ($generated@@279 $generated@@281))
)))
(assert  (and (forall (($generated@@285 T@U) ) (! (= (type ($generated@@283 $generated@@285)) ($generated@@264 $generated@@156))
 :pattern ( ($generated@@283 $generated@@285))
)) (forall (($generated@@286 T@U) ) (! (= (type ($generated@@284 $generated@@286)) $generated@@67)
 :pattern ( ($generated@@284 $generated@@286))
))))
(assert  (=> (< 1 $generated@@282) (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@287) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@288) $generated@@80)) (and ($generated@@252 $generated@@287) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@287 $generated@@288) $generated@@60)))) ($generated@@77 ($generated@@283 $generated@@288) ($generated@@284 $generated@@45) $generated@@287))
 :pattern ( ($generated@@283 $generated@@288) ($generated@@86 ($generated@@84 $generated@@287 $generated@@288) $generated@@60))
))))
(assert  (=> (< 1 $generated@@282) (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@80) ($generated@@143 ($generated@@283 $generated@@289) ($generated@@284 $generated@@45)))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@156)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@67) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@77 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@253 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@297) $generated@@156)) (= (type $generated@@298) $generated@@67)) ($generated@@135 $generated@@295 $generated@@296)) ($generated@@253 $generated@@297 $generated@@298 $generated@@295)) ($generated@@253 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@135 $generated@@295 $generated@@296) ($generated@@253 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@299) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@300) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@302) $generated@@67)) ($generated@@135 $generated@@299 $generated@@300)) ($generated@@77 $generated@@301 $generated@@302 $generated@@299)) ($generated@@77 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@135 $generated@@299 $generated@@300) ($generated@@77 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@79 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@82 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@79 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@84 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@162 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@162 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@156) ($generated@@229 $generated@@351 $generated@@139)) (and (= ($generated@@290 ($generated@@348 $generated@@80 $generated@@351)) $generated@@351) ($generated@@143 ($generated@@348 $generated@@80 $generated@@351) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@351 $generated@@139))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@156) ($generated@@229 $generated@@352 $generated@@225)) (and (= ($generated@@290 ($generated@@348 $generated@@80 $generated@@352)) $generated@@352) ($generated@@143 ($generated@@348 $generated@@80 $generated@@352) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@352 $generated@@225))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@80) (= ($generated@@143 $generated@@353 $generated@@225)  (and ($generated@@143 $generated@@353 $generated@@139) (not (= $generated@@353 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@353 $generated@@225))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@313 (type $generated@@354))))
(let (($generated@@356 ($generated@@312 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@311 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@310 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@309 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@313 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@79 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@313 (type $generated@@361))))
(let (($generated@@363 ($generated@@312 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@311 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@310 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@84 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@331 (type $generated@@365))))
(let (($generated@@367 ($generated@@330 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@329 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@328 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@327 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@331 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@79 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@331 (type $generated@@372))))
(let (($generated@@374 ($generated@@330 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@329 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@328 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@84 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@377) $generated@@67)) (= ($generated@@143 $generated@@376 ($generated@@161 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@376 $generated@@378)))) ($generated@@229 $generated@@378 $generated@@377))
 :pattern ( ($generated@@84 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@143 $generated@@376 ($generated@@161 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@238 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@156) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@253 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@238 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@384) $generated@@67)) (= (type $generated@@385) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@383 ($generated@@243 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@156) ($generated@@0 ($generated@@84 $generated@@383 $generated@@386))) ($generated@@253 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@84 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@77 $generated@@383 ($generated@@243 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@84 ($generated@@304 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@84 ($generated@@304 $generated@@388) $generated@@387)))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@313 (type $generated@@392))))
(let (($generated@@394 ($generated@@312 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@396) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@395) ($generated@@154 ($generated@@348 $generated@@147 $generated@@396)))) (= ($generated@@84 ($generated@@390 $generated@@395) ($generated@@154 ($generated@@348 $generated@@147 $generated@@396))) ($generated@@155 ($generated@@348 $generated@@147 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@331 (type $generated@@400))))
(let (($generated@@402 ($generated@@330 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@79 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@403) ($generated@@154 ($generated@@348 $generated@@147 $generated@@404)))) (= ($generated@@84 ($generated@@398 $generated@@403) ($generated@@154 ($generated@@348 $generated@@147 $generated@@404))) ($generated@@155 ($generated@@348 $generated@@147 $generated@@404))))))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@312 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@311 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@84 ($generated@@358 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@84 ($generated@@390 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@405) $generated@@409))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@84 ($generated@@358 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@330 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@329 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@84 ($generated@@369 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@418) $generated@@422))) (and ($generated@@253 ($generated@@84 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@253 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@426) $generated@@430))) (and ($generated@@253 ($generated@@84 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@253 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@77 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@263 (type $generated@@431))))
 (=> (and (and (= (type $generated@@431) ($generated@@264 $generated@@433)) (= (type $generated@@432) ($generated@@264 $generated@@433))) ($generated@@262 $generated@@431 $generated@@432)) (= $generated@@431 $generated@@432)))
 :pattern ( ($generated@@262 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@434) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@435) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@436) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@434 $generated@@436))) (and ($generated@@135 $generated@@434 $generated@@435) ($generated@@135 $generated@@435 $generated@@436))) ($generated@@135 $generated@@434 $generated@@436))
 :pattern ( ($generated@@135 $generated@@434 $generated@@435) ($generated@@135 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@79 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@331 (type $generated@@439))))
(let (($generated@@441 ($generated@@330 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@329 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@328 $generated@@441 $generated@@440)) (= ($generated@@327 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@327 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@331 (type $generated@@442))))
(let (($generated@@444 ($generated@@330 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@329 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@328 $generated@@444 $generated@@443)) (= ($generated@@369 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@369 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@331 (type $generated@@445))))
(let (($generated@@447 ($generated@@330 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@329 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@328 $generated@@447 $generated@@446)) (= ($generated@@397 $generated@@445) ($generated@@437 $generated@@156))))))
 :pattern ( ($generated@@397 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@313 (type $generated@@448))))
(let (($generated@@450 ($generated@@312 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@311 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@310 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@156) (= (type $generated@@452) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@389 $generated@@448) ($generated@@290 ($generated@@228 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@389 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@331 (type $generated@@453))))
(let (($generated@@455 ($generated@@330 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@329 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@328 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@156) (= (type $generated@@457) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@397 $generated@@453) ($generated@@290 ($generated@@228 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@397 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@156) ($generated@@229 $generated@@458 $generated@@46)) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@458)) $generated@@458) ($generated@@143 ($generated@@348 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@156) ($generated@@229 $generated@@459 $generated@@47)) (and (= ($generated@@290 ($generated@@348 $generated@@3 $generated@@459)) $generated@@459) ($generated@@143 ($generated@@348 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@156) ($generated@@229 $generated@@460 $generated@@44)) (and (= ($generated@@290 ($generated@@348 $generated@@4 $generated@@460)) $generated@@460) ($generated@@143 ($generated@@348 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@156) ($generated@@229 $generated@@462 $generated@@45)) (and (= ($generated@@290 ($generated@@348 $generated@@461 $generated@@462)) $generated@@462) ($generated@@143 ($generated@@348 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@67) (= ($generated@@229 ($generated@@290 $generated@@463) $generated@@464) ($generated@@143 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@229 ($generated@@290 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@82 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@79 $generated@@466 $generated@@2)) (<= 0 ($generated@@303 $generated@@465))))
 :pattern ( ($generated@@303 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@263 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@264 $generated@@468)) (<= 0 ($generated@@265 $generated@@467))))
 :pattern ( ($generated@@265 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@67)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@67) (= (type $generated@@472) $generated@@67)) (= ($generated@@469 ($generated@@415 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@415 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@75 ($generated@@415 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@423 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@67) (= (type $generated@@488) $generated@@67)) (= ($generated@@75 ($generated@@423 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@156) (= (type $generated@@490) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@67) (= (type $generated@@494) $generated@@67)) (= ($generated@@491 ($generated@@146 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@146 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@146 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@146 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@156) (= (type $generated@@500) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@156) (= (type $generated@@502) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@228 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@264 $generated@@156)) (= (type $generated@@504) $generated@@67)) (= (type $generated@@505) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@503 ($generated@@284 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@265 $generated@@503))) ($generated@@253 ($generated@@266 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@266 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@77 $generated@@503 ($generated@@284 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@78 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@78 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@238 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@238 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@67)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@513 ($generated@@243 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@243 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@67)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@517 ($generated@@161 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@161 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@67)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@521 ($generated@@284 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@284 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@67) (= ($generated@@75 ($generated@@284 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@284 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@348 $generated@@526 ($generated@@290 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@290 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) (= ($generated@@143 $generated@@527 ($generated@@415 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@527) $generated@@530))) (and ($generated@@229 ($generated@@84 ($generated@@390 $generated@@527) $generated@@530) $generated@@529) ($generated@@229 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@527) $generated@@530))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@143 $generated@@527 ($generated@@415 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@67)) (= ($generated@@143 $generated@@531 ($generated@@423 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@531) $generated@@534))) (and ($generated@@229 ($generated@@84 ($generated@@398 $generated@@531) $generated@@534) $generated@@533) ($generated@@229 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@84 ($generated@@398 $generated@@531) $generated@@534))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@143 $generated@@531 ($generated@@423 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@156) (= (type $generated@@538) $generated@@156)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@228 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@228 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@156) (= (type $generated@@540) $generated@@156)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@228 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@228 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@156) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) $generated@@67)) ($generated@@229 $generated@@541 ($generated@@415 $generated@@542 $generated@@543))) (and (= ($generated@@290 ($generated@@348 ($generated@@311 $generated@@156 $generated@@156) $generated@@541)) $generated@@541) ($generated@@143 ($generated@@348 ($generated@@311 $generated@@156 $generated@@156) $generated@@541) ($generated@@415 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@229 $generated@@541 ($generated@@415 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@423 $generated@@545 $generated@@546))) (and (= ($generated@@290 ($generated@@348 ($generated@@329 $generated@@156 $generated@@156) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@348 ($generated@@329 $generated@@156 $generated@@156) $generated@@544) ($generated@@423 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@423 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@67) (= (type $generated@@548) $generated@@67)) (= (type $generated@@549) $generated@@156)) ($generated@@229 $generated@@549 ($generated@@146 $generated@@547 $generated@@548))) (and (= ($generated@@290 ($generated@@348 $generated@@147 $generated@@549)) $generated@@549) ($generated@@143 ($generated@@348 $generated@@147 $generated@@549) ($generated@@146 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@146 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@84 ($generated@@437 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@84 ($generated@@437 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@72)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@554 $generated@@555)) $generated@@62) (= ($generated@@552 ($generated@@146 $generated@@554 $generated@@555)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@147) (= ($generated@@535 ($generated@@290 $generated@@556)) ($generated@@536 $generated@@556)))
 :pattern ( ($generated@@535 ($generated@@290 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@156) ($generated@@229 $generated@@557 ($generated@@78 0))) (and (= ($generated@@290 ($generated@@348 $generated@@2 $generated@@557)) $generated@@557) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@557) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@78 0)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@156) (= (type $generated@@559) $generated@@67)) ($generated@@229 $generated@@558 ($generated@@238 $generated@@559))) (and (= ($generated@@290 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@558)) $generated@@558) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@558) ($generated@@238 $generated@@559))))
 :pattern ( ($generated@@229 $generated@@558 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@156) (= (type $generated@@561) $generated@@67)) ($generated@@229 $generated@@560 ($generated@@243 $generated@@561))) (and (= ($generated@@290 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@560)) $generated@@560) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@4) $generated@@560) ($generated@@243 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@243 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@156) (= (type $generated@@563) $generated@@67)) ($generated@@229 $generated@@562 ($generated@@161 $generated@@563))) (and (= ($generated@@290 ($generated@@348 ($generated@@79 $generated@@156 $generated@@2) $generated@@562)) $generated@@562) ($generated@@143 ($generated@@348 ($generated@@79 $generated@@156 $generated@@2) $generated@@562) ($generated@@161 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@161 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@156) (= (type $generated@@565) $generated@@67)) ($generated@@229 $generated@@564 ($generated@@284 $generated@@565))) (and (= ($generated@@290 ($generated@@348 ($generated@@264 $generated@@156) $generated@@564)) $generated@@564) ($generated@@143 ($generated@@348 ($generated@@264 $generated@@156) $generated@@564) ($generated@@284 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@284 $generated@@565)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@552 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@552 $generated@@225) $generated@@66))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@566 ($generated@@161 $generated@@567) $generated@@568) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@566 $generated@@569)))) ($generated@@253 $generated@@569 $generated@@567 $generated@@568))
 :pattern ( ($generated@@84 $generated@@566 $generated@@569))
))))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@161 $generated@@567) $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@147) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@572) (and ($generated@@145 $generated@@570) (exists (($generated@@573 T@U) ) (!  (and (= (type $generated@@573) $generated@@67) ($generated@@77 $generated@@570 ($generated@@146 $generated@@571 $generated@@573) $generated@@572))
 :pattern ( ($generated@@77 $generated@@570 ($generated@@146 $generated@@571 $generated@@573) $generated@@572))
))))) ($generated@@253 ($generated@@154 $generated@@570) $generated@@571 $generated@@572))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@570) $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@147) (= (type $generated@@575) $generated@@67)) (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@576) (and ($generated@@145 $generated@@574) (exists (($generated@@577 T@U) ) (!  (and (= (type $generated@@577) $generated@@67) ($generated@@77 $generated@@574 ($generated@@146 $generated@@577 $generated@@575) $generated@@576))
 :pattern ( ($generated@@77 $generated@@574 ($generated@@146 $generated@@577 $generated@@575) $generated@@576))
))))) ($generated@@253 ($generated@@155 $generated@@574) $generated@@575 $generated@@576))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@574) $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@156) (= (type $generated@@579) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@578) ($generated@@248 $generated@@579)) ($generated@@248 ($generated@@228 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@578) ($generated@@248 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (! (= ($generated@@290 ($generated@@248 $generated@@580)) ($generated@@248 ($generated@@290 $generated@@580)))
 :pattern ( ($generated@@290 ($generated@@248 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@263 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@264 $generated@@582)) (= ($generated@@265 $generated@@581) 0)) (= $generated@@581 ($generated@@279 $generated@@582))))
 :pattern ( ($generated@@265 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@79 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@303 ($generated@@85 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@303 $generated@@583) ($generated ($generated@@84 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@303 ($generated@@85 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@2)) ($generated@@77 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@3)) ($generated@@77 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@592) $generated@@4)) ($generated@@77 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@77 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@594) $generated@@461)) ($generated@@77 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@77 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@596) $generated@@156)) ($generated@@77 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@77 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@264 $generated@@156)) (= (type $generated@@598) $generated@@67)) (= ($generated@@143 $generated@@597 ($generated@@284 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@265 $generated@@597))) ($generated@@229 ($generated@@266 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@266 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@143 $generated@@597 ($generated@@284 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@264 $generated@@156)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@265 $generated@@601))) (< ($generated@@536 ($generated@@348 $generated@@147 ($generated@@266 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@536 ($generated@@348 $generated@@147 ($generated@@266 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@311 $generated@@156 $generated@@156)) (= (type $generated@@604) $generated@@67)) (= (type $generated@@605) $generated@@67)) ($generated@@143 $generated@@603 ($generated@@415 $generated@@604 $generated@@605))) (and (and ($generated@@143 ($generated@@309 $generated@@603) ($generated@@238 $generated@@604)) ($generated@@143 ($generated@@358 $generated@@603) ($generated@@238 $generated@@605))) ($generated@@143 ($generated@@389 $generated@@603) ($generated@@238 ($generated@@146 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@143 $generated@@603 ($generated@@415 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@329 $generated@@156 $generated@@156)) (= (type $generated@@607) $generated@@67)) (= (type $generated@@608) $generated@@67)) ($generated@@143 $generated@@606 ($generated@@423 $generated@@607 $generated@@608))) (and (and ($generated@@143 ($generated@@327 $generated@@606) ($generated@@243 $generated@@607)) ($generated@@143 ($generated@@369 $generated@@606) ($generated@@243 $generated@@608))) ($generated@@143 ($generated@@397 $generated@@606) ($generated@@243 ($generated@@146 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@143 $generated@@606 ($generated@@423 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@143 $generated@@609 $generated@@46))
 :pattern ( ($generated@@143 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@143 $generated@@610 $generated@@47))
 :pattern ( ($generated@@143 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@143 $generated@@611 $generated@@44))
 :pattern ( ($generated@@143 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@461) ($generated@@143 $generated@@612 $generated@@45))
 :pattern ( ($generated@@143 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@156) ($generated@@143 $generated@@613 $generated@@48))
 :pattern ( ($generated@@143 $generated@@613 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@614) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@615) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@616) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@618) $generated@@80)) (= (type $generated@@619) ($generated@@264 $generated@@156))) (= (type $generated@@620) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@621  (=> (= $generated@@614 ($generated@@170 $generated@@140 $generated@@615 $generated@@60 false)) (=> (and (and (and ($generated@@252 $generated@@616) ($generated@@617 $generated@@616)) (and (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@80) (=> (and (not (= $generated@@622 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@615 $generated@@622) $generated@@60))) (= ($generated@@84 $generated@@616 $generated@@622) ($generated@@84 $generated@@615 $generated@@622))))
 :pattern ( ($generated@@84 $generated@@616 $generated@@622))
)) ($generated@@135 $generated@@615 $generated@@616))) (and (and ($generated@@143 $generated@@618 $generated@@225) ($generated@@77 $generated@@618 $generated@@225 $generated@@616)) (= (ControlFlow 0 2) (- 0 1)))) (not (= $generated@@618 $generated@@140))))))
(let (($generated@@623  (=> (and (and (and ($generated@@252 $generated@@615) ($generated@@617 $generated@@615)) (and ($generated@@143 $generated@@619 ($generated@@284 $generated@@45)) ($generated@@77 $generated@@619 ($generated@@284 $generated@@45) $generated@@615))) (and (and ($generated@@143 $generated@@620 $generated@@225) ($generated@@77 $generated@@620 $generated@@225 $generated@@615)) (and (= 2 $generated@@282) (= (ControlFlow 0 3) 2)))) $generated@@621)))
$generated@@623)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@T) T@T)
(declare-fun $generated@@260 (T@T) T@T)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@U Int) T@U)
(declare-fun $generated@@275 (T@T) T@U)
(declare-fun $generated@@278 () Int)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Bool)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (= (type $generated@@135) $generated@@67) (= (type $generated@@136) $generated@@80)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@80) (= (type $generated@@138) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@137 $generated@@135 $generated@@138)  (or (= $generated@@137 $generated@@136) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@138 $generated@@137) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@137 $generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@67) (= (type $generated@@147) $generated@@67)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@161) $generated@@67)) ($generated@@139 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@139 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@162 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@80) (= ($generated@@139 $generated@@164 $generated@@135)  (or (= $generated@@164 $generated@@136) (= ($generated@@162 $generated@@164) $generated@@135))))
 :pattern ( ($generated@@139 $generated@@164 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@80 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@80) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@80)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= (type $generated@@221) $generated@@67))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@80) (= (type $generated@@223) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@222 $generated@@221 $generated@@223) ($generated@@77 $generated@@222 $generated@@135 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@222 $generated@@221 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@143)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@152)) (= (type $generated@@231) $generated@@152)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@143) (= (type $generated@@233) $generated@@143)) (= ($generated@@149 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@149 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@67)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@237) $generated@@67)) (= ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@152) ($generated@@0 ($generated@@84 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@84 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@139 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@67)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@242) $generated@@67)) (= ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@152) ($generated@@0 ($generated@@84 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@84 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@139 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@67) (= (type $generated@@251) $generated@@67)) (= (type $generated@@252) $generated@@152)) (= (type $generated@@253) $generated@@152)) (= (type $generated@@254) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@248 $generated@@254)) (= ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@252 $generated@@253) ($generated@@142 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@71)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@143) (= ($generated@@141 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@257))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@260 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@259 ($generated@@260 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@260 $generated@@264))
))) (forall (($generated@@265 T@U) ($generated@@266 Int) ) (! (let (($generated@@267 ($generated@@259 (type $generated@@265))))
(= (type ($generated@@262 $generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@262 $generated@@265 $generated@@266))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (let (($generated@@270 ($generated@@259 (type $generated@@268))))
 (=> (and (= (type $generated@@268) ($generated@@260 $generated@@270)) (= (type $generated@@269) ($generated@@260 $generated@@270))) (= ($generated@@258 $generated@@268 $generated@@269)  (and (= ($generated@@261 $generated@@268) ($generated@@261 $generated@@269)) (forall (($generated@@271 Int) ) (!  (=> (and (<= 0 $generated@@271) (< $generated@@271 ($generated@@261 $generated@@268))) (= ($generated@@262 $generated@@268 $generated@@271) ($generated@@262 $generated@@269 $generated@@271)))
 :pattern ( ($generated@@262 $generated@@268 $generated@@271))
 :pattern ( ($generated@@262 $generated@@269 $generated@@271))
))))))
 :pattern ( ($generated@@258 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@143) ($generated@@141 $generated@@272)) (exists (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (and (and (= (type $generated@@273) $generated@@152) (= (type $generated@@274) $generated@@152)) (= $generated@@272 ($generated@@224 $generated@@273 $generated@@274)))
 :no-pattern (type $generated@@273)
 :no-pattern (type $generated@@274)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
)))
 :pattern ( ($generated@@141 $generated@@272))
)))
(assert (forall (($generated@@276 T@T) ) (! (= (type ($generated@@275 $generated@@276)) ($generated@@260 $generated@@276))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@261 ($generated@@275 $generated@@277)) 0)
 :pattern ( ($generated@@275 $generated@@277))
)))
(assert  (and (forall (($generated@@281 T@U) ) (! (= (type ($generated@@279 $generated@@281)) ($generated@@260 $generated@@152))
 :pattern ( ($generated@@279 $generated@@281))
)) (forall (($generated@@282 T@U) ) (! (= (type ($generated@@280 $generated@@282)) $generated@@67)
 :pattern ( ($generated@@280 $generated@@282))
))))
(assert  (=> (< 1 $generated@@278) (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@284) $generated@@80)) (and ($generated@@248 $generated@@283) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@283 $generated@@284) $generated@@60)))) ($generated@@77 ($generated@@279 $generated@@284) ($generated@@280 $generated@@45) $generated@@283))
 :pattern ( ($generated@@279 $generated@@284) ($generated@@86 ($generated@@84 $generated@@283 $generated@@284) $generated@@60))
))))
(assert  (=> (< 1 $generated@@278) (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@80) ($generated@@139 ($generated@@279 $generated@@285) ($generated@@280 $generated@@45)))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@152)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@249 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@249 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@79 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@82 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@79 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@84 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@79 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@84 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@79 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@84 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@84 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@82 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@79 $generated@@334 $generated@@2)) (= ($generated@@158 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@84 $generated@@333 $generated@@335))) (<= ($generated ($generated@@84 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@84 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@158 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@152) ($generated@@225 $generated@@339 $generated@@135)) (and (= ($generated@@286 ($generated@@336 $generated@@80 $generated@@339)) $generated@@339) ($generated@@139 ($generated@@336 $generated@@80 $generated@@339) $generated@@135)))
 :pattern ( ($generated@@225 $generated@@339 $generated@@135))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@152) ($generated@@225 $generated@@340 $generated@@221)) (and (= ($generated@@286 ($generated@@336 $generated@@80 $generated@@340)) $generated@@340) ($generated@@139 ($generated@@336 $generated@@80 $generated@@340) $generated@@221)))
 :pattern ( ($generated@@225 $generated@@340 $generated@@221))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@80) (= ($generated@@139 $generated@@341 $generated@@221)  (and ($generated@@139 $generated@@341 $generated@@135) (not (= $generated@@341 $generated@@136)))))
 :pattern ( ($generated@@139 $generated@@341 $generated@@221))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@301 (type $generated@@342))))
(let (($generated@@344 ($generated@@300 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@299 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@298 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@297 $generated@@342))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(= (type ($generated@@346 $generated@@347)) ($generated@@79 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@301 (type $generated@@349))))
(let (($generated@@351 ($generated@@300 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@299 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@298 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@346 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@346 $generated@@349))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@319 (type $generated@@353))))
(let (($generated@@355 ($generated@@318 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@317 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@316 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@315 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@79 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@319 (type $generated@@360))))
(let (($generated@@362 ($generated@@318 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@317 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@316 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@84 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@364 $generated@@366)) ($generated@@260 $generated@@152))
 :pattern ( ($generated@@364 $generated@@366))
)))
(assert  (=> (<= 2 $generated@@278) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@80) (or ($generated@@365 $generated@@367) (and (not (= 2 $generated@@278)) ($generated@@139 $generated@@367 $generated@@221)))) (and ($generated@@258 ($generated@@364 $generated@@367) ($generated@@279 $generated@@367)) ($generated@@139 ($generated@@364 $generated@@367) ($generated@@280 $generated@@45))))
 :pattern ( ($generated@@364 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@369) $generated@@67)) (= ($generated@@139 $generated@@368 ($generated@@157 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@368 $generated@@370)))) ($generated@@225 $generated@@370 $generated@@369))
 :pattern ( ($generated@@84 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@139 $generated@@368 ($generated@@157 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@371 ($generated@@234 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@152) ($generated@@0 ($generated@@84 $generated@@371 $generated@@374))) ($generated@@249 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@84 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@77 $generated@@371 ($generated@@234 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@152 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@239 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@152) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@249 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@239 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@84 ($generated@@292 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@84 ($generated@@292 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@301 (type $generated@@384))))
(let (($generated@@386 ($generated@@300 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@388) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@387) ($generated@@150 ($generated@@336 $generated@@143 $generated@@388)))) (= ($generated@@84 ($generated@@382 $generated@@387) ($generated@@150 ($generated@@336 $generated@@143 $generated@@388))) ($generated@@151 ($generated@@336 $generated@@143 $generated@@388))))))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@79 $generated@@152 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@319 (type $generated@@392))))
(let (($generated@@394 ($generated@@318 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@79 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@396) $generated@@152)) (= ($generated@@0 ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@84 ($generated@@315 $generated@@395) ($generated@@150 ($generated@@336 $generated@@143 $generated@@396)))) (= ($generated@@84 ($generated@@390 $generated@@395) ($generated@@150 ($generated@@336 $generated@@143 $generated@@396))) ($generated@@151 ($generated@@336 $generated@@143 $generated@@396))))))
 :pattern ( ($generated@@84 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@300 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@299 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@84 ($generated@@346 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@84 ($generated@@297 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@84 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@397) $generated@@401))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@84 ($generated@@346 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@318 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@317 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@84 ($generated@@357 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@84 ($generated@@315 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@84 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@402) $generated@@406))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@84 ($generated@@357 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@67)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@410) $generated@@414))) (and ($generated@@249 ($generated@@84 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@249 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@77 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@418) $generated@@422))) (and ($generated@@249 ($generated@@84 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@249 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@77 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@259 (type $generated@@423))))
 (=> (and (and (= (type $generated@@423) ($generated@@260 $generated@@425)) (= (type $generated@@424) ($generated@@260 $generated@@425))) ($generated@@258 $generated@@423 $generated@@424)) (= $generated@@423 $generated@@424)))
 :pattern ( ($generated@@258 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@79 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@319 (type $generated@@428))))
(let (($generated@@430 ($generated@@318 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@317 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@316 $generated@@430 $generated@@429)) (= ($generated@@315 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@315 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@319 (type $generated@@431))))
(let (($generated@@433 ($generated@@318 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@317 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@316 $generated@@433 $generated@@432)) (= ($generated@@357 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@357 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@319 (type $generated@@434))))
(let (($generated@@436 ($generated@@318 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@317 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@316 $generated@@436 $generated@@435)) (= ($generated@@389 $generated@@434) ($generated@@426 $generated@@152))))))
 :pattern ( ($generated@@389 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@301 (type $generated@@437))))
(let (($generated@@439 ($generated@@300 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@299 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@298 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@152) (= (type $generated@@441) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@381 $generated@@437) ($generated@@286 ($generated@@224 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@381 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@319 (type $generated@@442))))
(let (($generated@@444 ($generated@@318 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@317 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@316 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@152) (= (type $generated@@446) $generated@@152)) ($generated@@0 ($generated@@84 ($generated@@389 $generated@@442) ($generated@@286 ($generated@@224 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@389 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@152) ($generated@@225 $generated@@447 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@447)) $generated@@447) ($generated@@139 ($generated@@336 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@152) ($generated@@225 $generated@@448 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@448)) $generated@@448) ($generated@@139 ($generated@@336 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@152) ($generated@@225 $generated@@449 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@449)) $generated@@449) ($generated@@139 ($generated@@336 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@152) ($generated@@225 $generated@@451 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@450 $generated@@451)) $generated@@451) ($generated@@139 ($generated@@336 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@67) (= ($generated@@225 ($generated@@286 $generated@@452) $generated@@453) ($generated@@139 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@225 ($generated@@286 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@82 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@79 $generated@@455 $generated@@2)) (<= 0 ($generated@@291 $generated@@454))))
 :pattern ( ($generated@@291 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@259 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@260 $generated@@457)) (<= 0 ($generated@@261 $generated@@456))))
 :pattern ( ($generated@@261 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@407 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@407 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@407 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@75 ($generated@@407 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@415 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@415 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@415 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@67) (= (type $generated@@477) $generated@@67)) (= ($generated@@75 ($generated@@415 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@152) (= (type $generated@@479) $generated@@152)) (= ($generated@@255 ($generated@@224 $generated@@478 $generated@@479)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@142 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@142 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@142 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@142 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@152) (= (type $generated@@489) $generated@@152)) (= ($generated@@150 ($generated@@224 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@224 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@152) (= (type $generated@@491) $generated@@152)) (= ($generated@@151 ($generated@@224 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@224 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@260 $generated@@152)) (= (type $generated@@493) $generated@@67)) (= (type $generated@@494) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@492 ($generated@@280 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@261 $generated@@492))) ($generated@@249 ($generated@@262 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@262 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@77 $generated@@492 ($generated@@280 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@78 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@78 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@234 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@234 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@234 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@239 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@239 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@506 ($generated@@157 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@157 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@75 ($generated@@157 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@510 ($generated@@280 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@280 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@75 ($generated@@280 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@280 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 (type $generated@@514)))
(= ($generated@@336 $generated@@515 ($generated@@286 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@286 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@517) $generated@@67)) (= (type $generated@@518) $generated@@67)) (= ($generated@@139 $generated@@516 ($generated@@407 $generated@@517 $generated@@518)) (forall (($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@297 $generated@@516) $generated@@519))) (and ($generated@@225 ($generated@@84 ($generated@@382 $generated@@516) $generated@@519) $generated@@518) ($generated@@225 $generated@@519 $generated@@517)))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@516) $generated@@519))
 :pattern ( ($generated@@84 ($generated@@297 $generated@@516) $generated@@519))
))))
 :pattern ( ($generated@@139 $generated@@516 ($generated@@407 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@521) $generated@@67)) (= (type $generated@@522) $generated@@67)) (= ($generated@@139 $generated@@520 ($generated@@415 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@152) ($generated@@0 ($generated@@84 ($generated@@315 $generated@@520) $generated@@523))) (and ($generated@@225 ($generated@@84 ($generated@@390 $generated@@520) $generated@@523) $generated@@522) ($generated@@225 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@84 ($generated@@390 $generated@@520) $generated@@523))
 :pattern ( ($generated@@84 ($generated@@315 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@139 $generated@@520 ($generated@@415 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@152) (= (type $generated@@527) $generated@@152)) (< ($generated@@524 $generated@@526) ($generated@@525 ($generated@@224 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@224 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@152) (= (type $generated@@529) $generated@@152)) (< ($generated@@524 $generated@@529) ($generated@@525 ($generated@@224 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@152) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@225 $generated@@530 ($generated@@407 $generated@@531 $generated@@532))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@152 $generated@@152) $generated@@530)) $generated@@530) ($generated@@139 ($generated@@336 ($generated@@299 $generated@@152 $generated@@152) $generated@@530) ($generated@@407 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@225 $generated@@530 ($generated@@407 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@152) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@67)) ($generated@@225 $generated@@533 ($generated@@415 $generated@@534 $generated@@535))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@152 $generated@@152) $generated@@533)) $generated@@533) ($generated@@139 ($generated@@336 ($generated@@317 $generated@@152 $generated@@152) $generated@@533) ($generated@@415 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@225 $generated@@533 ($generated@@415 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@67) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@152)) ($generated@@225 $generated@@538 ($generated@@142 $generated@@536 $generated@@537))) (and (= ($generated@@286 ($generated@@336 $generated@@143 $generated@@538)) $generated@@538) ($generated@@139 ($generated@@336 $generated@@143 $generated@@538) ($generated@@142 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@142 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
 (not ($generated@@0 ($generated@@84 ($generated@@426 $generated@@540) $generated@@539))))
 :pattern ( (let (($generated@@540 (type $generated@@539)))
($generated@@84 ($generated@@426 $generated@@540) $generated@@539)))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@72)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@67) (= (type $generated@@544) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@543 $generated@@544)) $generated@@62) (= ($generated@@541 ($generated@@142 $generated@@543 $generated@@544)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@143) (= ($generated@@524 ($generated@@286 $generated@@545)) ($generated@@525 $generated@@545)))
 :pattern ( ($generated@@524 ($generated@@286 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@152) ($generated@@225 $generated@@546 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@546)) $generated@@546) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@152 $generated@@4) $generated@@546) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@546 ($generated@@78 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@152) (= (type $generated@@548) $generated@@67)) ($generated@@225 $generated@@547 ($generated@@234 $generated@@548))) (and (= ($generated@@286 ($generated@@336 ($generated@@79 $generated@@152 $generated@@4) $generated@@547)) $generated@@547) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@152 $generated@@4) $generated@@547) ($generated@@234 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 ($generated@@234 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@152) (= (type $generated@@550) $generated@@67)) ($generated@@225 $generated@@549 ($generated@@239 $generated@@550))) (and (= ($generated@@286 ($generated@@336 ($generated@@79 $generated@@152 $generated@@4) $generated@@549)) $generated@@549) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@152 $generated@@4) $generated@@549) ($generated@@239 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@239 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@152) (= (type $generated@@552) $generated@@67)) ($generated@@225 $generated@@551 ($generated@@157 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@79 $generated@@152 $generated@@2) $generated@@551)) $generated@@551) ($generated@@139 ($generated@@336 ($generated@@79 $generated@@152 $generated@@2) $generated@@551) ($generated@@157 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@157 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@152) (= (type $generated@@554) $generated@@67)) ($generated@@225 $generated@@553 ($generated@@280 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@260 $generated@@152) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@336 ($generated@@260 $generated@@152) $generated@@553) ($generated@@280 $generated@@554))))
 :pattern ( ($generated@@225 $generated@@553 ($generated@@280 $generated@@554)))
)))
(assert (= ($generated@@75 $generated@@135) $generated@@63))
(assert (= ($generated@@541 $generated@@135) $generated@@66))
(assert (= ($generated@@75 $generated@@221) $generated@@64))
(assert (= ($generated@@541 $generated@@221) $generated@@66))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@79 $generated@@152 $generated@@2)) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@555 ($generated@@157 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@152) (< 0 ($generated ($generated@@84 $generated@@555 $generated@@558)))) ($generated@@249 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@84 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@77 $generated@@555 ($generated@@157 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@561) (and ($generated@@141 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@67) ($generated@@77 $generated@@559 ($generated@@142 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@77 $generated@@559 ($generated@@142 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@249 ($generated@@150 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@249 ($generated@@150 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@143) (= (type $generated@@564) $generated@@67)) (= (type $generated@@565) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@248 $generated@@565) (and ($generated@@141 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@67) ($generated@@77 $generated@@563 ($generated@@142 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@77 $generated@@563 ($generated@@142 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@249 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@249 ($generated@@151 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@152) (= (type $generated@@568) $generated@@152)) (= ($generated@@224 ($generated@@244 $generated@@567) ($generated@@244 $generated@@568)) ($generated@@244 ($generated@@224 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@224 ($generated@@244 $generated@@567) ($generated@@244 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@286 ($generated@@244 $generated@@569)) ($generated@@244 ($generated@@286 $generated@@569)))
 :pattern ( ($generated@@286 ($generated@@244 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@259 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@260 $generated@@571)) (= ($generated@@261 $generated@@570) 0)) (= $generated@@570 ($generated@@275 $generated@@571))))
 :pattern ( ($generated@@261 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@573)))
 (=> (and (and (= (type $generated@@572) ($generated@@79 $generated@@575 $generated@@2)) (= (type $generated@@574) $generated@@2)) (<= 0 ($generated $generated@@574))) (= ($generated@@291 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)) (+ (- ($generated@@291 $generated@@572) ($generated ($generated@@84 $generated@@572 $generated@@573))) ($generated $generated@@574)))))
 :pattern ( ($generated@@291 ($generated@@85 $generated@@572 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@2)) ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@46 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@3)) ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@47 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@4)) ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@44 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@450)) ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@45 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@152)) ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@48 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@260 $generated@@152)) (= (type $generated@@587) $generated@@67)) (= ($generated@@139 $generated@@586 ($generated@@280 $generated@@587)) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@261 $generated@@586))) ($generated@@225 ($generated@@262 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@262 $generated@@586 $generated@@588))
))))
 :pattern ( ($generated@@139 $generated@@586 ($generated@@280 $generated@@587)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ) (!  (=> (= (type $generated@@590) ($generated@@260 $generated@@152)) (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@261 $generated@@590))) (< ($generated@@525 ($generated@@336 $generated@@143 ($generated@@262 $generated@@590 $generated@@591))) ($generated@@589 $generated@@590))))
 :pattern ( ($generated@@525 ($generated@@336 $generated@@143 ($generated@@262 $generated@@590 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@299 $generated@@152 $generated@@152)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@139 $generated@@592 ($generated@@407 $generated@@593 $generated@@594))) (and (and ($generated@@139 ($generated@@297 $generated@@592) ($generated@@234 $generated@@593)) ($generated@@139 ($generated@@346 $generated@@592) ($generated@@234 $generated@@594))) ($generated@@139 ($generated@@381 $generated@@592) ($generated@@234 ($generated@@142 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@139 $generated@@592 ($generated@@407 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@139 $generated@@595 ($generated@@415 $generated@@596 $generated@@597))) (and (and ($generated@@139 ($generated@@315 $generated@@595) ($generated@@239 $generated@@596)) ($generated@@139 ($generated@@357 $generated@@595) ($generated@@239 $generated@@597))) ($generated@@139 ($generated@@389 $generated@@595) ($generated@@239 ($generated@@142 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@139 $generated@@595 ($generated@@415 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@2) ($generated@@139 $generated@@598 $generated@@46))
 :pattern ( ($generated@@139 $generated@@598 $generated@@46))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@3) ($generated@@139 $generated@@599 $generated@@47))
 :pattern ( ($generated@@139 $generated@@599 $generated@@47))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@4) ($generated@@139 $generated@@600 $generated@@44))
 :pattern ( ($generated@@139 $generated@@600 $generated@@44))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@450) ($generated@@139 $generated@@601 $generated@@45))
 :pattern ( ($generated@@139 $generated@@601 $generated@@45))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@152) ($generated@@139 $generated@@602 $generated@@48))
 :pattern ( ($generated@@139 $generated@@602 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 (T@U) Bool)
(assert  (and (and (= (type $generated@@603) $generated@@80) (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@605) ($generated@@167 $generated@@80 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@607 true))
(let (($generated@@608  (=> (and ($generated@@139 ($generated@@364 $generated@@603) ($generated@@280 $generated@@45)) ($generated@@77 $generated@@603 $generated@@221 $generated@@604)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@603 $generated@@603) (and (= $generated@@603 $generated@@136) (not (= $generated@@603 $generated@@136))))) (=> (or (= $generated@@603 $generated@@603) (and (= $generated@@603 $generated@@136) (not (= $generated@@603 $generated@@136)))) (=> (and (or (= $generated@@603 $generated@@603) ($generated@@365 $generated@@603)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@603 $generated@@136))))))))
(let (($generated@@609  (=> (= $generated@@605 ($generated@@166 $generated@@136 $generated@@604 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@608) (=> (= (ControlFlow 0 5) 4) $generated@@607)))))
(let (($generated@@610  (=> (and (and (and ($generated@@248 $generated@@604) ($generated@@606 $generated@@604)) ($generated@@139 $generated@@603 $generated@@221)) (and (= 2 $generated@@278) (= (ControlFlow 0 6) 5))) $generated@@609)))
$generated@@610)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (Int) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 () T@T)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@U Int) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@289 () Int)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@U) Bool)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@449 (T@T) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@612 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert  (and (= ($generated@@1 $generated@@256) 17) (forall (($generated@@257 Int) ) (! (= (type ($generated@@254 $generated@@257)) $generated@@256)
 :pattern ( ($generated@@254 $generated@@257))
))))
(assert (forall (($generated@@258 Int) ) (!  (=> (and (<= 0 $generated@@258) (< $generated@@258 65536)) (= ($generated@@255 ($generated@@254 $generated@@258)) $generated@@258))
 :pattern ( ($generated@@254 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@67) (= (type $generated@@262) $generated@@67)) (= (type $generated@@263) $generated@@156)) (= (type $generated@@264) $generated@@156)) (= (type $generated@@265) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@259 $generated@@265)) (= ($generated@@77 ($generated@@228 $generated@@263 $generated@@264) ($generated@@146 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@263 $generated@@264) ($generated@@146 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@71)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@147) (= ($generated@@145 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@268))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274)) 18)) (forall (($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@271 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@271 $generated@@275))
))) (forall (($generated@@276 T@U) ($generated@@277 Int) ) (! (let (($generated@@278 ($generated@@270 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@273 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@270 (type $generated@@279))))
 (=> (and (= (type $generated@@279) ($generated@@271 $generated@@281)) (= (type $generated@@280) ($generated@@271 $generated@@281))) (= ($generated@@269 $generated@@279 $generated@@280)  (and (= ($generated@@272 $generated@@279) ($generated@@272 $generated@@280)) (forall (($generated@@282 Int) ) (!  (=> (and (<= 0 $generated@@282) (< $generated@@282 ($generated@@272 $generated@@279))) (= ($generated@@273 $generated@@279 $generated@@282) ($generated@@273 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@273 $generated@@279 $generated@@282))
 :pattern ( ($generated@@273 $generated@@280 $generated@@282))
))))))
 :pattern ( ($generated@@269 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@147) ($generated@@145 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@156) (= (type $generated@@285) $generated@@156)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@145 $generated@@283))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@271 $generated@@287))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@272 ($generated@@286 $generated@@288)) 0)
 :pattern ( ($generated@@286 $generated@@288))
)))
(assert  (and (forall (($generated@@292 T@U) ) (! (= (type ($generated@@290 $generated@@292)) ($generated@@271 $generated@@156))
 :pattern ( ($generated@@290 $generated@@292))
)) (forall (($generated@@293 T@U) ) (! (= (type ($generated@@291 $generated@@293)) $generated@@67)
 :pattern ( ($generated@@291 $generated@@293))
))))
(assert  (=> (< 1 $generated@@289) (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@295) $generated@@80)) (and ($generated@@259 $generated@@294) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@294 $generated@@295) $generated@@60)))) ($generated@@77 ($generated@@290 $generated@@295) ($generated@@291 $generated@@45) $generated@@294))
 :pattern ( ($generated@@290 $generated@@295) ($generated@@86 ($generated@@84 $generated@@294 $generated@@295) $generated@@60))
))))
(assert  (=> (< 1 $generated@@289) (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@80) ($generated@@143 ($generated@@290 $generated@@296) ($generated@@291 $generated@@45)))
 :pattern ( ($generated@@290 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@256) (and (and (= ($generated@@254 ($generated@@255 $generated@@297)) $generated@@297) (<= 0 ($generated@@255 $generated@@297))) (< ($generated@@255 $generated@@297) 65536)))
 :pattern ( ($generated@@255 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@156)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@67) (= (type $generated@@302) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@260 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@77 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@260 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@303) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@304) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@305) $generated@@156)) (= (type $generated@@306) $generated@@67)) ($generated@@135 $generated@@303 $generated@@304)) ($generated@@260 $generated@@305 $generated@@306 $generated@@303)) ($generated@@260 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@135 $generated@@303 $generated@@304) ($generated@@260 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@307) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@308) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@310) $generated@@67)) ($generated@@135 $generated@@307 $generated@@308)) ($generated@@77 $generated@@309 $generated@@310 $generated@@307)) ($generated@@77 $generated@@309 $generated@@310 $generated@@308))
 :pattern ( ($generated@@135 $generated@@307 $generated@@308) ($generated@@77 $generated@@309 $generated@@310 $generated@@307))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@79 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@82 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@79 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@84 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@79 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@84 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@84 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 20)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@79 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@84 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@84 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@82 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@79 $generated@@354 $generated@@2)) (= ($generated@@162 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@84 $generated@@353 $generated@@355))) (<= ($generated ($generated@@84 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@84 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@162 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@156) ($generated@@229 $generated@@359 $generated@@139)) (and (= ($generated@@298 ($generated@@356 $generated@@80 $generated@@359)) $generated@@359) ($generated@@143 ($generated@@356 $generated@@80 $generated@@359) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@359 $generated@@139))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@156) ($generated@@229 $generated@@360 $generated@@225)) (and (= ($generated@@298 ($generated@@356 $generated@@80 $generated@@360)) $generated@@360) ($generated@@143 ($generated@@356 $generated@@80 $generated@@360) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@360 $generated@@225))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@80) (= ($generated@@143 $generated@@361 $generated@@225)  (and ($generated@@143 $generated@@361 $generated@@139) (not (= $generated@@361 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@361 $generated@@225))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@321 (type $generated@@362))))
(let (($generated@@364 ($generated@@320 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@319 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@318 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@317 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@79 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(let (($generated@@371 ($generated@@320 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@319 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@318 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@339 (type $generated@@373))))
(let (($generated@@375 ($generated@@338 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@337 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@336 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@335 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@79 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(let (($generated@@382 ($generated@@338 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@337 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@336 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@84 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@271 $generated@@156))
 :pattern ( ($generated@@384 $generated@@386))
)))
(assert  (=> (<= 2 $generated@@289) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@80) (or ($generated@@385 $generated@@387) (and (not (= 2 $generated@@289)) ($generated@@143 $generated@@387 $generated@@225)))) (and ($generated@@269 ($generated@@384 $generated@@387) ($generated@@290 $generated@@387)) ($generated@@143 ($generated@@384 $generated@@387) ($generated@@291 $generated@@45))))
 :pattern ( ($generated@@384 $generated@@387))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@389) $generated@@67)) (= ($generated@@143 $generated@@388 ($generated@@161 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@388 $generated@@390)))) ($generated@@229 $generated@@390 $generated@@389))
 :pattern ( ($generated@@84 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@143 $generated@@388 ($generated@@161 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@392) $generated@@67)) (= (type $generated@@393) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@391 ($generated@@238 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@156) ($generated@@0 ($generated@@84 $generated@@391 $generated@@394))) ($generated@@260 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@84 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@77 $generated@@391 ($generated@@238 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@395 ($generated@@243 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@156) ($generated@@0 ($generated@@84 $generated@@395 $generated@@398))) ($generated@@260 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@84 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@77 $generated@@395 ($generated@@243 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@84 ($generated@@312 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@84 ($generated@@312 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@321 (type $generated@@404))))
(let (($generated@@406 ($generated@@320 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@79 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@319 $generated@@156 $generated@@156)) (= (type $generated@@408) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@84 ($generated@@317 $generated@@407) ($generated@@154 ($generated@@356 $generated@@147 $generated@@408)))) (= ($generated@@84 ($generated@@402 $generated@@407) ($generated@@154 ($generated@@356 $generated@@147 $generated@@408))) ($generated@@155 ($generated@@356 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@84 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@339 (type $generated@@412))))
(let (($generated@@414 ($generated@@338 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@79 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@337 $generated@@156 $generated@@156)) (= (type $generated@@416) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@84 ($generated@@335 $generated@@415) ($generated@@154 ($generated@@356 $generated@@147 $generated@@416)))) (= ($generated@@84 ($generated@@410 $generated@@415) ($generated@@154 ($generated@@356 $generated@@147 $generated@@416))) ($generated@@155 ($generated@@356 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@84 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@320 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@319 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@84 ($generated@@317 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@84 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@338 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@337 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@84 ($generated@@377 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@84 ($generated@@335 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@84 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@422) $generated@@426))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@67)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@319 $generated@@156 $generated@@156)) (= (type $generated@@431) $generated@@67)) (= (type $generated@@432) $generated@@67)) (= (type $generated@@433) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@430) $generated@@434))) (and ($generated@@260 ($generated@@84 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@260 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@77 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@67)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@337 $generated@@156 $generated@@156)) (= (type $generated@@439) $generated@@67)) (= (type $generated@@440) $generated@@67)) (= (type $generated@@441) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@438) $generated@@442))) (and ($generated@@260 ($generated@@84 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@260 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@77 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@270 (type $generated@@443))))
 (=> (and (and (= (type $generated@@443) ($generated@@271 $generated@@445)) (= (type $generated@@444) ($generated@@271 $generated@@445))) ($generated@@269 $generated@@443 $generated@@444)) (= $generated@@443 $generated@@444)))
 :pattern ( ($generated@@269 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@446) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@447) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@448) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@446 $generated@@448))) (and ($generated@@135 $generated@@446 $generated@@447) ($generated@@135 $generated@@447 $generated@@448))) ($generated@@135 $generated@@446 $generated@@448))
 :pattern ( ($generated@@135 $generated@@446 $generated@@447) ($generated@@135 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@T) ) (! (= (type ($generated@@449 $generated@@450)) ($generated@@79 $generated@@450 $generated@@4))
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@339 (type $generated@@451))))
(let (($generated@@453 ($generated@@338 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@337 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@336 $generated@@453 $generated@@452)) (= ($generated@@335 $generated@@451) ($generated@@449 $generated@@453))))))
 :pattern ( ($generated@@335 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@339 (type $generated@@454))))
(let (($generated@@456 ($generated@@338 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@337 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@336 $generated@@456 $generated@@455)) (= ($generated@@377 $generated@@454) ($generated@@449 $generated@@455))))))
 :pattern ( ($generated@@377 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@339 (type $generated@@457))))
(let (($generated@@459 ($generated@@338 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@337 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@336 $generated@@459 $generated@@458)) (= ($generated@@409 $generated@@457) ($generated@@449 $generated@@156))))))
 :pattern ( ($generated@@409 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@321 (type $generated@@460))))
(let (($generated@@462 ($generated@@320 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@319 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@318 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@156) (= (type $generated@@464) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@401 $generated@@460) ($generated@@298 ($generated@@228 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@401 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@339 (type $generated@@465))))
(let (($generated@@467 ($generated@@338 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@337 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@336 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@156) (= (type $generated@@469) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@409 $generated@@465) ($generated@@298 ($generated@@228 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@409 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@156) ($generated@@229 $generated@@470 $generated@@46)) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@470)) $generated@@470) ($generated@@143 ($generated@@356 $generated@@2 $generated@@470) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@470 $generated@@46))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@156) ($generated@@229 $generated@@471 $generated@@47)) (and (= ($generated@@298 ($generated@@356 $generated@@3 $generated@@471)) $generated@@471) ($generated@@143 ($generated@@356 $generated@@3 $generated@@471) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@471 $generated@@47))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@156) ($generated@@229 $generated@@472 $generated@@44)) (and (= ($generated@@298 ($generated@@356 $generated@@4 $generated@@472)) $generated@@472) ($generated@@143 ($generated@@356 $generated@@4 $generated@@472) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@472 $generated@@44))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@156) ($generated@@229 $generated@@473 $generated@@45)) (and (= ($generated@@298 ($generated@@356 $generated@@256 $generated@@473)) $generated@@473) ($generated@@143 ($generated@@356 $generated@@256 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@67) (= ($generated@@229 ($generated@@298 $generated@@474) $generated@@475) ($generated@@143 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@229 ($generated@@298 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@82 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@79 $generated@@477 $generated@@2)) (<= 0 ($generated@@311 $generated@@476))))
 :pattern ( ($generated@@311 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@270 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@271 $generated@@479)) (<= 0 ($generated@@272 $generated@@478))))
 :pattern ( ($generated@@272 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@427 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@427 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@67) (= (type $generated@@487) $generated@@67)) (= ($generated@@484 ($generated@@427 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@427 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@67) (= (type $generated@@489) $generated@@67)) (= ($generated@@75 ($generated@@427 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@67) (= (type $generated@@493) $generated@@67)) (= ($generated@@490 ($generated@@435 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@67) (= (type $generated@@497) $generated@@67)) (= ($generated@@494 ($generated@@435 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@75 ($generated@@435 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@156) (= (type $generated@@501) $generated@@156)) (= ($generated@@266 ($generated@@228 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@502 ($generated@@146 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@146 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@506 ($generated@@146 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@146 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@156) (= (type $generated@@511) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@228 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@156) (= (type $generated@@513) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@228 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@271 $generated@@156)) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@514 ($generated@@291 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@272 $generated@@514))) ($generated@@260 ($generated@@273 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@273 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@77 $generated@@514 ($generated@@291 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@78 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@78 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@238 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@238 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@243 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@243 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@161 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@161 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@67)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@532 ($generated@@291 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@291 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@67) (= ($generated@@75 ($generated@@291 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@291 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
(= ($generated@@356 $generated@@537 ($generated@@298 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@298 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@319 $generated@@156 $generated@@156)) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) (= ($generated@@143 $generated@@538 ($generated@@427 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@317 $generated@@538) $generated@@541))) (and ($generated@@229 ($generated@@84 ($generated@@402 $generated@@538) $generated@@541) $generated@@540) ($generated@@229 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@84 ($generated@@402 $generated@@538) $generated@@541))
 :pattern ( ($generated@@84 ($generated@@317 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@143 $generated@@538 ($generated@@427 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@337 $generated@@156 $generated@@156)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) $generated@@67)) (= ($generated@@143 $generated@@542 ($generated@@435 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@335 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@84 ($generated@@410 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@84 ($generated@@410 $generated@@542) $generated@@545))
 :pattern ( ($generated@@84 ($generated@@335 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@143 $generated@@542 ($generated@@435 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@156)) (< ($generated@@546 $generated@@548) ($generated@@547 ($generated@@228 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@228 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@156)) (< ($generated@@546 $generated@@551) ($generated@@547 ($generated@@228 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@228 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@156) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) $generated@@67)) ($generated@@229 $generated@@552 ($generated@@427 $generated@@553 $generated@@554))) (and (= ($generated@@298 ($generated@@356 ($generated@@319 $generated@@156 $generated@@156) $generated@@552)) $generated@@552) ($generated@@143 ($generated@@356 ($generated@@319 $generated@@156 $generated@@156) $generated@@552) ($generated@@427 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@427 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) $generated@@67)) ($generated@@229 $generated@@555 ($generated@@435 $generated@@556 $generated@@557))) (and (= ($generated@@298 ($generated@@356 ($generated@@337 $generated@@156 $generated@@156) $generated@@555)) $generated@@555) ($generated@@143 ($generated@@356 ($generated@@337 $generated@@156 $generated@@156) $generated@@555) ($generated@@435 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@435 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@67) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) $generated@@156)) ($generated@@229 $generated@@560 ($generated@@146 $generated@@558 $generated@@559))) (and (= ($generated@@298 ($generated@@356 $generated@@147 $generated@@560)) $generated@@560) ($generated@@143 ($generated@@356 $generated@@147 $generated@@560) ($generated@@146 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@146 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@84 ($generated@@449 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@84 ($generated@@449 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@72)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@67) (= (type $generated@@566) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@563 ($generated@@146 $generated@@565 $generated@@566)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@147) (= ($generated@@546 ($generated@@298 $generated@@567)) ($generated@@547 $generated@@567)))
 :pattern ( ($generated@@546 ($generated@@298 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@156) ($generated@@229 $generated@@568 ($generated@@78 0))) (and (= ($generated@@298 ($generated@@356 $generated@@2 $generated@@568)) $generated@@568) ($generated@@143 ($generated@@356 ($generated@@79 $generated@@156 $generated@@4) $generated@@568) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@78 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@67)) ($generated@@229 $generated@@569 ($generated@@238 $generated@@570))) (and (= ($generated@@298 ($generated@@356 ($generated@@79 $generated@@156 $generated@@4) $generated@@569)) $generated@@569) ($generated@@143 ($generated@@356 ($generated@@79 $generated@@156 $generated@@4) $generated@@569) ($generated@@238 $generated@@570))))
 :pattern ( ($generated@@229 $generated@@569 ($generated@@238 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@156) (= (type $generated@@572) $generated@@67)) ($generated@@229 $generated@@571 ($generated@@243 $generated@@572))) (and (= ($generated@@298 ($generated@@356 ($generated@@79 $generated@@156 $generated@@4) $generated@@571)) $generated@@571) ($generated@@143 ($generated@@356 ($generated@@79 $generated@@156 $generated@@4) $generated@@571) ($generated@@243 $generated@@572))))
 :pattern ( ($generated@@229 $generated@@571 ($generated@@243 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@156) (= (type $generated@@574) $generated@@67)) ($generated@@229 $generated@@573 ($generated@@161 $generated@@574))) (and (= ($generated@@298 ($generated@@356 ($generated@@79 $generated@@156 $generated@@2) $generated@@573)) $generated@@573) ($generated@@143 ($generated@@356 ($generated@@79 $generated@@156 $generated@@2) $generated@@573) ($generated@@161 $generated@@574))))
 :pattern ( ($generated@@229 $generated@@573 ($generated@@161 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@156) (= (type $generated@@576) $generated@@67)) ($generated@@229 $generated@@575 ($generated@@291 $generated@@576))) (and (= ($generated@@298 ($generated@@356 ($generated@@271 $generated@@156) $generated@@575)) $generated@@575) ($generated@@143 ($generated@@356 ($generated@@271 $generated@@156) $generated@@575) ($generated@@291 $generated@@576))))
 :pattern ( ($generated@@229 $generated@@575 ($generated@@291 $generated@@576)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@563 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@563 $generated@@225) $generated@@66))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@578) $generated@@67)) (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@577 ($generated@@161 $generated@@578) $generated@@579) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@577 $generated@@580)))) ($generated@@260 $generated@@580 $generated@@578 $generated@@579))
 :pattern ( ($generated@@84 $generated@@577 $generated@@580))
))))
 :pattern ( ($generated@@77 $generated@@577 ($generated@@161 $generated@@578) $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@147) (= (type $generated@@582) $generated@@67)) (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@259 $generated@@583) (and ($generated@@145 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@67) ($generated@@77 $generated@@581 ($generated@@146 $generated@@582 $generated@@584) $generated@@583))
 :pattern ( ($generated@@77 $generated@@581 ($generated@@146 $generated@@582 $generated@@584) $generated@@583))
))))) ($generated@@260 ($generated@@154 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@260 ($generated@@154 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@147) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@259 $generated@@587) (and ($generated@@145 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@67) ($generated@@77 $generated@@585 ($generated@@146 $generated@@588 $generated@@586) $generated@@587))
 :pattern ( ($generated@@77 $generated@@585 ($generated@@146 $generated@@588 $generated@@586) $generated@@587))
))))) ($generated@@260 ($generated@@155 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@260 ($generated@@155 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@156) (= (type $generated@@590) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@589) ($generated@@250 $generated@@590)) ($generated@@250 ($generated@@228 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@589) ($generated@@250 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@248 $generated@@591))) ($generated@@250 ($generated@@298 ($generated@@8 $generated@@591))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@248 $generated@@591))))
)))
(assert (forall (($generated@@592 T@U) ) (! (= ($generated@@298 ($generated@@250 $generated@@592)) ($generated@@250 ($generated@@298 $generated@@592)))
 :pattern ( ($generated@@298 ($generated@@250 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@270 (type $generated@@593))))
 (=> (and (= (type $generated@@593) ($generated@@271 $generated@@594)) (= ($generated@@272 $generated@@593) 0)) (= $generated@@593 ($generated@@286 $generated@@594))))
 :pattern ( ($generated@@272 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (! (let (($generated@@598 (type $generated@@596)))
 (=> (and (and (= (type $generated@@595) ($generated@@79 $generated@@598 $generated@@2)) (= (type $generated@@597) $generated@@2)) (<= 0 ($generated $generated@@597))) (= ($generated@@311 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)) (+ (- ($generated@@311 $generated@@595) ($generated ($generated@@84 $generated@@595 $generated@@596))) ($generated $generated@@597)))))
 :pattern ( ($generated@@311 ($generated@@85 $generated@@595 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@600) $generated@@2)) ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
 :pattern ( ($generated@@77 $generated@@600 $generated@@46 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@602) $generated@@3)) ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
 :pattern ( ($generated@@77 $generated@@602 $generated@@47 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@604) $generated@@4)) ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
 :pattern ( ($generated@@77 $generated@@604 $generated@@44 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@606) $generated@@256)) ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
 :pattern ( ($generated@@77 $generated@@606 $generated@@45 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@608) $generated@@156)) ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
 :pattern ( ($generated@@77 $generated@@608 $generated@@48 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@271 $generated@@156)) (= (type $generated@@610) $generated@@67)) (= ($generated@@143 $generated@@609 ($generated@@291 $generated@@610)) (forall (($generated@@611 Int) ) (!  (=> (and (<= 0 $generated@@611) (< $generated@@611 ($generated@@272 $generated@@609))) ($generated@@229 ($generated@@273 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@273 $generated@@609 $generated@@611))
))))
 :pattern ( ($generated@@143 $generated@@609 ($generated@@291 $generated@@610)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@271 $generated@@156)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@272 $generated@@613))) (< ($generated@@547 ($generated@@356 $generated@@147 ($generated@@273 $generated@@613 $generated@@614))) ($generated@@612 $generated@@613))))
 :pattern ( ($generated@@547 ($generated@@356 $generated@@147 ($generated@@273 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@319 $generated@@156 $generated@@156)) (= (type $generated@@616) $generated@@67)) (= (type $generated@@617) $generated@@67)) ($generated@@143 $generated@@615 ($generated@@427 $generated@@616 $generated@@617))) (and (and ($generated@@143 ($generated@@317 $generated@@615) ($generated@@238 $generated@@616)) ($generated@@143 ($generated@@366 $generated@@615) ($generated@@238 $generated@@617))) ($generated@@143 ($generated@@401 $generated@@615) ($generated@@238 ($generated@@146 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@143 $generated@@615 ($generated@@427 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@337 $generated@@156 $generated@@156)) (= (type $generated@@619) $generated@@67)) (= (type $generated@@620) $generated@@67)) ($generated@@143 $generated@@618 ($generated@@435 $generated@@619 $generated@@620))) (and (and ($generated@@143 ($generated@@335 $generated@@618) ($generated@@243 $generated@@619)) ($generated@@143 ($generated@@377 $generated@@618) ($generated@@243 $generated@@620))) ($generated@@143 ($generated@@409 $generated@@618) ($generated@@243 ($generated@@146 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@143 $generated@@618 ($generated@@435 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@143 $generated@@621 $generated@@46))
 :pattern ( ($generated@@143 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@143 $generated@@622 $generated@@47))
 :pattern ( ($generated@@143 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@143 $generated@@623 $generated@@44))
 :pattern ( ($generated@@143 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@256) ($generated@@143 $generated@@624 $generated@@45))
 :pattern ( ($generated@@143 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@156) ($generated@@143 $generated@@625 $generated@@48))
 :pattern ( ($generated@@143 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () Int)
(declare-fun $generated@@631 () Bool)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 (T@U) Bool)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () Bool)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@627) ($generated@@271 $generated@@156)) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@636) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@637) ($generated@@171 $generated@@80 $generated@@4))) (= (type $generated@@638) $generated@@80)) (= (type $generated@@640) $generated@@80)) (= (type $generated@@643) $generated@@80)) (= (type $generated@@644) ($generated@@271 $generated@@156))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@645 true))
(let (($generated@@646  (=> (and (not (= $generated@@626 ($generated@@272 $generated@@627))) (= (ControlFlow 0 12) (- 0 11))) (and (<= 0 $generated@@626) (<= $generated@@626 ($generated@@272 $generated@@627))))))
(let (($generated@@647  (=> (= $generated@@628 $generated@@629) (and (=> (= (ControlFlow 0 14) 12) $generated@@646) (=> (= (ControlFlow 0 14) 13) $generated@@645)))))
(let (($generated@@648  (=> (and (and (= $generated@@630 (+ $generated@@628 1)) (= (ControlFlow 0 4) (- 0 3))) $generated@@631) (<= $generated@@632 $generated@@630))))
(let (($generated@@649  (=> (not (= ($generated@@356 $generated@@256 ($generated@@273 $generated@@627 $generated@@628)) ($generated@@250 ($generated@@254 47)))) (=> (and (= $generated@@632 $generated@@626) (= (ControlFlow 0 8) 4)) $generated@@648))))
(let (($generated@@650  (=> (= ($generated@@356 $generated@@256 ($generated@@273 $generated@@627 $generated@@628)) ($generated@@250 ($generated@@254 47))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@626) (<= $generated@@626 ($generated@@272 $generated@@627)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= $generated@@626 $generated@@628) (<= $generated@@628 ($generated@@272 $generated@@627)))) (=> (= $generated@@633 (+ $generated@@628 1)) (=> (and (= $generated@@632 $generated@@633) (= (ControlFlow 0 5) 4)) $generated@@648)))))))
(let (($generated@@651  (=> (not (= $generated@@628 $generated@@629)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@272 $generated@@627)))) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@272 $generated@@627))) (and (=> (= (ControlFlow 0 9) 5) $generated@@650) (=> (= (ControlFlow 0 9) 8) $generated@@649)))))))
(let (($generated@@652  (=> $generated@@631 (and (=> (= (ControlFlow 0 15) 14) $generated@@647) (=> (= (ControlFlow 0 15) 9) $generated@@651)))))
(let (($generated@@653 true))
(let (($generated@@654  (and (=> (= (ControlFlow 0 16) 2) $generated@@653) (=> (= (ControlFlow 0 16) 15) $generated@@652))))
(let (($generated@@655 true))
(let (($generated@@656  (=> (and (and (and (and (and (and (and (not false) true) (<= 0 $generated@@626)) (<= 0 $generated@@628)) (= $generated@@634 0)) (<= 0 $generated@@629)) true) (and (and (and (<= $generated@@634 $generated@@628) (<= $generated@@628 $generated@@629)) (and (=> $generated@@631 true) (=> $generated@@631 (<= $generated@@626 $generated@@628)))) (and (and (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@80) (=> (and (not (= $generated@@657 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@636 $generated@@657) $generated@@60))) (= ($generated@@84 $generated@@635 $generated@@657) ($generated@@84 $generated@@635 $generated@@657))))
 :pattern ( ($generated@@84 $generated@@635 $generated@@657))
)) ($generated@@135 $generated@@635 $generated@@635)) (and (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 ($generated@@70 (type $generated@@659))))
 (=> (and (and (= (type $generated@@658) $generated@@80) (= (type $generated@@659) ($generated@@69 $generated@@660))) (and (not (= $generated@@658 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@635 $generated@@658) $generated@@60)))) (or (= ($generated@@86 ($generated@@84 $generated@@635 $generated@@658) $generated@@659) ($generated@@86 ($generated@@84 $generated@@635 $generated@@658) $generated@@659)) ($generated@@0 ($generated@@169 $generated@@637 $generated@@658 $generated@@659)))))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@635 $generated@@658) $generated@@659))
)) (=> true true))))) (and (=> (= (ControlFlow 0 17) 1) $generated@@655) (=> (= (ControlFlow 0 17) 16) $generated@@654)))))
(let (($generated@@661  (=> (= $generated@@637 ($generated@@170 $generated@@140 $generated@@636 $generated@@60 false)) (=> (and (and (and ($generated@@143 $generated@@638 $generated@@225) ($generated@@77 $generated@@638 $generated@@225 $generated@@636)) (and ($generated@@259 $generated@@635) ($generated@@639 $generated@@635))) (and (and ($generated@@143 $generated@@640 $generated@@225) ($generated@@77 $generated@@640 $generated@@225 $generated@@635)) (and (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@80) (=> (and (not (= $generated@@662 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@636 $generated@@662) $generated@@60))) (= ($generated@@84 $generated@@635 $generated@@662) ($generated@@84 $generated@@636 $generated@@662))))
 :pattern ( ($generated@@84 $generated@@635 $generated@@662))
)) ($generated@@135 $generated@@636 $generated@@635)))) (and (=> (= (ControlFlow 0 18) (- 0 21)) true) (=> ($generated@@77 $generated@@640 $generated@@225 $generated@@635) (=> (and ($generated@@385 $generated@@640) ($generated@@385 $generated@@640)) (=> (and (and (= $generated@@627 ($generated@@384 $generated@@640)) (= $generated@@641 ($generated@@248 0))) (and (= $generated@@634 ($generated@@248 0)) (= $generated@@629 ($generated@@272 $generated@@627)))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (<= $generated@@634 $generated@@629)) (=> (<= $generated@@634 $generated@@629) (and (=> (= (ControlFlow 0 18) (- 0 19)) (=> $generated@@631 (<= $generated@@641 $generated@@634))) (=> (=> $generated@@631 (<= $generated@@641 $generated@@634)) (=> (= (ControlFlow 0 18) 17) $generated@@656)))))))))))))
(let (($generated@@663  (=> (and (and ($generated@@259 $generated@@636) ($generated@@639 $generated@@636)) (and (=> $generated@@642 (and ($generated@@143 $generated@@643 $generated@@225) ($generated@@77 $generated@@643 $generated@@225 $generated@@636))) true)) (=> (and (and (and ($generated@@143 $generated@@644 ($generated@@291 $generated@@45)) ($generated@@77 $generated@@644 ($generated@@291 $generated@@45) $generated@@636)) true) (and (= 3 $generated@@289) (= (ControlFlow 0 22) 18))) $generated@@661))))
$generated@@663)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
